/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_48 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_48 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
union __anonunion_49 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_49 __anonCompField_idr_layer_19 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 97 
struct dentry;

#line 98 
struct iattr;

#line 99 
struct vm_area_struct;

#line 100 
struct super_block;

#line 101 
struct file_system_type;

#line 102 
struct kernfs_open_node;

#line 103 
struct kernfs_iattrs;

#line 126 
struct kernfs_root;

#line 126  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_54 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_54 __anonCompField_kernfs_node_20 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_55 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_55 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_56 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_56 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kref.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_58 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_57 {
   struct __anonstruct_58 __anonCompField___anonunion_57_21 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_57 __anonCompField_ctl_table_header_22 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_59 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_59 nodemask_t;

#line 520 
struct path;

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_124 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_124 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemleak.h"
struct kmem_cache;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_158 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_156 {
   struct __anonstruct_157 __anonCompField___anonunion_156_35 ;
   struct __anonstruct_158 __anonCompField___anonunion_156_36 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_156 __anonCompField_uprobe_task_37 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_159 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_165 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_164 {
   atomic_t _mapcount ;
   struct __anonstruct_165 __anonCompField___anonunion_164_40 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_163 {
   union __anonunion_164 __anonCompField___anonstruct_163_41 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   unsigned long counters ;
   struct __anonstruct_163 __anonCompField___anonunion_162_42 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_160 {
   union __anonunion_161 __anonCompField___anonstruct_160_39 ;
   union __anonunion_162 __anonCompField___anonstruct_160_43 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_168 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_166 {
   struct list_head lru ;
   struct __anonstruct_167 __anonCompField___anonunion_166_45 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_168 __anonCompField___anonunion_166_46 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_169 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_159 __anonCompField_page_38 ;
   struct __anonstruct_160 __anonCompField_page_44 ;
   union __anonunion_166 __anonCompField_page_47 ;
   union __anonunion_169 __anonCompField_page_48 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_170 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_170 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_172 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_172 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_174 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_175 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_176 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_177 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_179 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_178 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_179 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_180 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_181 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_173 {
   int _pad[28U] ;
   struct __anonstruct__kill_174 _kill ;
   struct __anonstruct__timer_175 _timer ;
   struct __anonstruct__rt_176 _rt ;
   struct __anonstruct__sigchld_177 _sigchld ;
   struct __anonstruct__sigfault_178 _sigfault ;
   struct __anonstruct__sigpoll_180 _sigpoll ;
   struct __anonstruct__sigsys_181 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_173 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_188 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_189 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_191 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_190 {
   struct keyring_index_key index_key ;
   struct __anonstruct_191 __anonCompField___anonunion_190_51 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_192 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_194 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_193 {
   union __anonunion_payload_194 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_188 __anonCompField_key_49 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_189 __anonCompField_key_50 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_190 __anonCompField_key_52 ;
   union __anonunion_type_data_192 type_data ;
   union __anonunion_193 __anonCompField_key_53 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_209 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_209 __anonCompField_pci_dev_57 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_218 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_218 __anonCompField_iov_iter_65 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_220 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_220 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_221 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_221 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_222 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_222 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_223 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_223 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_224 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_224 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_225 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_225 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_226 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_226 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_227 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_227 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_228 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_229 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_228 ifr_ifrn ;
   union __anonunion_ifr_ifru_229 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_234 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_233 {
   struct __anonstruct_234 __anonCompField___anonunion_233_66 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_233 __anonCompField_lockref_67 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_236 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_235 {
   struct __anonstruct_236 __anonCompField___anonunion_235_68 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_235 __anonCompField_qstr_69 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_237 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_237 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_241 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_240 {
   struct __anonstruct_241 __anonCompField___anonunion_240_70 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_240 __anonCompField_radix_tree_node_71 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_245 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_245 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_246 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_246 __anonCompField_kqid_73 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_249 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_250 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_251 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_249 __anonCompField_inode_74 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_250 __anonCompField_inode_75 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_251 __anonCompField_inode_76 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_252 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_252 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_254 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_253 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_254 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_253 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_26555 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_26555 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_269 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_269 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_26956 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_275 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_26956 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_274 __anonCompField_nf_bridge_info_80 ;
   union __anonunion_275 __anonCompField_nf_bridge_info_81 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_278 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_277 {
   u64 v64 ;
   struct __anonstruct_278 __anonCompField___anonunion_277_82 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_277 __anonCompField_skb_mstamp_83 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_281 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_280 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_281 __anonCompField___anonstruct_280_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_279 {
   struct __anonstruct_280 __anonCompField___anonunion_279_85 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_283 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_282 {
   __wsum csum ;
   struct __anonstruct_283 __anonCompField___anonunion_282_87 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_286 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_279 __anonCompField_sk_buff_86 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_282 __anonCompField_sk_buff_88 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_284 __anonCompField_sk_buff_89 ;
   __u32 secmark ;
   union __anonunion_285 __anonCompField_sk_buff_90 ;
   union __anonunion_286 __anonCompField_sk_buff_91 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_295 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_295 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28808 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28808 phy_interface_t;

#line 126 
enum ldv_28861 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28861 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30573 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30574 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_306 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_307 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_305 adj_list ;
   struct __anonstruct_all_adj_list_306 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30573 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30574 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_307 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna.h"
enum bfa_status {
    BFA_STATUS_OK = 0,
    BFA_STATUS_FAILED = 1,
    BFA_STATUS_EINVAL = 2,
    BFA_STATUS_ENOMEM = 3,
    BFA_STATUS_ENOSYS = 4,
    BFA_STATUS_ETIMER = 5,
    BFA_STATUS_EPROTOCOL = 6,
    BFA_STATUS_ENOFCPORTS = 7,
    BFA_STATUS_NOFLASH = 8,
    BFA_STATUS_BADFLASH = 9,
    BFA_STATUS_SFP_UNSUPP = 10,
    BFA_STATUS_UNKNOWN_VFID = 11,
    BFA_STATUS_DATACORRUPTED = 12,
    BFA_STATUS_DEVBUSY = 13,
    BFA_STATUS_ABORTED = 14,
    BFA_STATUS_NODEV = 15,
    BFA_STATUS_HDMA_FAILED = 16,
    BFA_STATUS_FLASH_BAD_LEN = 17,
    BFA_STATUS_UNKNOWN_LWWN = 18,
    BFA_STATUS_UNKNOWN_RWWN = 19,
    BFA_STATUS_FCPT_LS_RJT = 20,
    BFA_STATUS_VPORT_EXISTS = 21,
    BFA_STATUS_VPORT_MAX = 22,
    BFA_STATUS_UNSUPP_SPEED = 23,
    BFA_STATUS_INVLD_DFSZ = 24,
    BFA_STATUS_CNFG_FAILED = 25,
    BFA_STATUS_CMD_NOTSUPP = 26,
    BFA_STATUS_NO_ADAPTER = 27,
    BFA_STATUS_LINKDOWN = 28,
    BFA_STATUS_FABRIC_RJT = 29,
    BFA_STATUS_UNKNOWN_VWWN = 30,
    BFA_STATUS_NSLOGIN_FAILED = 31,
    BFA_STATUS_NO_RPORTS = 32,
    BFA_STATUS_NSQUERY_FAILED = 33,
    BFA_STATUS_PORT_OFFLINE = 34,
    BFA_STATUS_RPORT_OFFLINE = 35,
    BFA_STATUS_TGTOPEN_FAILED = 36,
    BFA_STATUS_BAD_LUNS = 37,
    BFA_STATUS_IO_FAILURE = 38,
    BFA_STATUS_NO_FABRIC = 39,
    BFA_STATUS_EBADF = 40,
    BFA_STATUS_EINTR = 41,
    BFA_STATUS_EIO = 42,
    BFA_STATUS_ENOTTY = 43,
    BFA_STATUS_ENXIO = 44,
    BFA_STATUS_EFOPEN = 45,
    BFA_STATUS_VPORT_WWN_BP = 46,
    BFA_STATUS_PORT_NOT_DISABLED = 47,
    BFA_STATUS_BADFRMHDR = 48,
    BFA_STATUS_BADFRMSZ = 49,
    BFA_STATUS_MISSINGFRM = 50,
    BFA_STATUS_LINKTIMEOUT = 51,
    BFA_STATUS_NO_FCPIM_NEXUS = 52,
    BFA_STATUS_CHECKSUM_FAIL = 53,
    BFA_STATUS_GZME_FAILED = 54,
    BFA_STATUS_SCSISTART_REQD = 55,
    BFA_STATUS_IOC_FAILURE = 56,
    BFA_STATUS_INVALID_WWN = 57,
    BFA_STATUS_MISMATCH = 58,
    BFA_STATUS_IOC_ENABLED = 59,
    BFA_STATUS_ADAPTER_ENABLED = 60,
    BFA_STATUS_IOC_NON_OP = 61,
    BFA_STATUS_ADDR_MAP_FAILURE = 62,
    BFA_STATUS_SAME_NAME = 63,
    BFA_STATUS_PENDING = 64,
    BFA_STATUS_8G_SPD = 65,
    BFA_STATUS_4G_SPD = 66,
    BFA_STATUS_AD_IS_ENABLE = 67,
    BFA_STATUS_EINVAL_TOV = 68,
    BFA_STATUS_EINVAL_QDEPTH = 69,
    BFA_STATUS_VERSION_FAIL = 70,
    BFA_STATUS_DIAG_BUSY = 71,
    BFA_STATUS_BEACON_ON = 72,
    BFA_STATUS_BEACON_OFF = 73,
    BFA_STATUS_LBEACON_ON = 74,
    BFA_STATUS_LBEACON_OFF = 75,
    BFA_STATUS_PORT_NOT_INITED = 76,
    BFA_STATUS_RPSC_ENABLED = 77,
    BFA_STATUS_ENOFSAVE = 78,
    BFA_STATUS_BAD_FILE = 79,
    BFA_STATUS_RLIM_EN = 80,
    BFA_STATUS_RLIM_DIS = 81,
    BFA_STATUS_IOC_DISABLED = 82,
    BFA_STATUS_ADAPTER_DISABLED = 83,
    BFA_STATUS_BIOS_DISABLED = 84,
    BFA_STATUS_AUTH_ENABLED = 85,
    BFA_STATUS_AUTH_DISABLED = 86,
    BFA_STATUS_ERROR_TRL_ENABLED = 87,
    BFA_STATUS_ERROR_QOS_ENABLED = 88,
    BFA_STATUS_NO_SFP_DEV = 89,
    BFA_STATUS_MEMTEST_FAILED = 90,
    BFA_STATUS_INVALID_DEVID = 91,
    BFA_STATUS_QOS_ENABLED = 92,
    BFA_STATUS_QOS_DISABLED = 93,
    BFA_STATUS_INCORRECT_DRV_CONFIG = 94,
    BFA_STATUS_REG_FAIL = 95,
    BFA_STATUS_IM_INV_CODE = 96,
    BFA_STATUS_IM_INV_VLAN = 97,
    BFA_STATUS_IM_INV_ADAPT_NAME = 98,
    BFA_STATUS_IM_LOW_RESOURCES = 99,
    BFA_STATUS_IM_VLANID_IS_PVID = 100,
    BFA_STATUS_IM_VLANID_EXISTS = 101,
    BFA_STATUS_IM_FW_UPDATE_FAIL = 102,
    BFA_STATUS_PORTLOG_ENABLED = 103,
    BFA_STATUS_PORTLOG_DISABLED = 104,
    BFA_STATUS_FILE_NOT_FOUND = 105,
    BFA_STATUS_QOS_FC_ONLY = 106,
    BFA_STATUS_RLIM_FC_ONLY = 107,
    BFA_STATUS_CT_SPD = 108,
    BFA_STATUS_LEDTEST_OP = 109,
    BFA_STATUS_CEE_NOT_DN = 110,
    BFA_STATUS_10G_SPD = 111,
    BFA_STATUS_IM_INV_TEAM_NAME = 112,
    BFA_STATUS_IM_DUP_TEAM_NAME = 113,
    BFA_STATUS_IM_ADAPT_ALREADY_IN_TEAM = 114,
    BFA_STATUS_IM_ADAPT_HAS_VLANS = 115,
    BFA_STATUS_IM_PVID_MISMATCH = 116,
    BFA_STATUS_IM_LINK_SPEED_MISMATCH = 117,
    BFA_STATUS_IM_MTU_MISMATCH = 118,
    BFA_STATUS_IM_RSS_MISMATCH = 119,
    BFA_STATUS_IM_HDS_MISMATCH = 120,
    BFA_STATUS_IM_OFFLOAD_MISMATCH = 121,
    BFA_STATUS_IM_PORT_PARAMS = 122,
    BFA_STATUS_IM_PORT_NOT_IN_TEAM = 123,
    BFA_STATUS_IM_CANNOT_REM_PRI = 124,
    BFA_STATUS_IM_MAX_PORTS_REACHED = 125,
    BFA_STATUS_IM_LAST_PORT_DELETE = 126,
    BFA_STATUS_IM_NO_DRIVER = 127,
    BFA_STATUS_IM_MAX_VLANS_REACHED = 128,
    BFA_STATUS_TOMCAT_SPD_NOT_ALLOWED = 129,
    BFA_STATUS_NO_MINPORT_DRIVER = 130,
    BFA_STATUS_CARD_TYPE_MISMATCH = 131,
    BFA_STATUS_BAD_ASICBLK = 132,
    BFA_STATUS_NO_DRIVER = 133,
    BFA_STATUS_INVALID_MAC = 134,
    BFA_STATUS_IM_NO_VLAN = 135,
    BFA_STATUS_IM_ETH_LB_FAILED = 136,
    BFA_STATUS_IM_PVID_REMOVE = 137,
    BFA_STATUS_IM_PVID_EDIT = 138,
    BFA_STATUS_CNA_NO_BOOT = 139,
    BFA_STATUS_IM_PVID_NON_ZERO = 140,
    BFA_STATUS_IM_INETCFG_LOCK_FAILED = 141,
    BFA_STATUS_IM_GET_INETCFG_FAILED = 142,
    BFA_STATUS_IM_NOT_BOUND = 143,
    BFA_STATUS_INSUFFICIENT_PERMS = 144,
    BFA_STATUS_IM_INV_VLAN_NAME = 145,
    BFA_STATUS_CMD_NOTSUPP_CNA = 146,
    BFA_STATUS_IM_PASSTHRU_EDIT = 147,
    BFA_STATUS_IM_BIND_FAILED = 148,
    BFA_STATUS_IM_UNBIND_FAILED = 149,
    BFA_STATUS_IM_PORT_IN_TEAM = 150,
    BFA_STATUS_IM_VLAN_NOT_FOUND = 151,
    BFA_STATUS_IM_TEAM_NOT_FOUND = 152,
    BFA_STATUS_IM_TEAM_CFG_NOT_ALLOWED = 153,
    BFA_STATUS_PBC = 154,
    BFA_STATUS_DEVID_MISSING = 155,
    BFA_STATUS_BAD_FWCFG = 156,
    BFA_STATUS_CREATE_FILE = 157,
    BFA_STATUS_INVALID_VENDOR = 158,
    BFA_STATUS_SFP_NOT_READY = 159,
    BFA_STATUS_FLASH_UNINIT = 160,
    BFA_STATUS_FLASH_EMPTY = 161,
    BFA_STATUS_FLASH_CKFAIL = 162,
    BFA_STATUS_TRUNK_UNSUPP = 163,
    BFA_STATUS_TRUNK_ENABLED = 164,
    BFA_STATUS_TRUNK_DISABLED = 165,
    BFA_STATUS_TRUNK_ERROR_TRL_ENABLED = 166,
    BFA_STATUS_BOOT_CODE_UPDATED = 167,
    BFA_STATUS_BOOT_VERSION = 168,
    BFA_STATUS_CARDTYPE_MISSING = 169,
    BFA_STATUS_INVALID_CARDTYPE = 170,
    BFA_STATUS_NO_TOPOLOGY_FOR_CNA = 171,
    BFA_STATUS_IM_VLAN_OVER_TEAM_DELETE_FAILED = 172,
    BFA_STATUS_ETHBOOT_ENABLED = 173,
    BFA_STATUS_ETHBOOT_DISABLED = 174,
    BFA_STATUS_IOPROFILE_OFF = 175,
    BFA_STATUS_NO_PORT_INSTANCE = 176,
    BFA_STATUS_BOOT_CODE_TIMEDOUT = 177,
    BFA_STATUS_NO_VPORT_LOCK = 178,
    BFA_STATUS_VPORT_NO_CNFG = 179,
    BFA_STATUS_MAX_VAL = 180
};

#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna.h"
struct bfa_mfg_vpd {
   u8 version ;
   u8 vpd_sig[3U] ;
   u8 chksum ;
   u8 vendor ;
   u8 len ;
   u8 rsv ;
   u8 data[512U] ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs_mfg_comm.h"
struct bfa_adapter_attr {
   char manufacturer[8U] ;
   char serial_num[12U] ;
   u32 card_type ;
   char model[16U] ;
   char model_descr[128U] ;
   u64 pwwn ;
   char node_symname[256U] ;
   char hw_ver[64U] ;
   char fw_ver[64U] ;
   char optrom_ver[64U] ;
   char os_type[64U] ;
   struct bfa_mfg_vpd vpd ;
   u8 mac[6U] ;
   u8 nports ;
   u8 max_speed ;
   u8 prototype ;
   char asic_rev ;
   u8 pcie_gen ;
   u8 pcie_lanes_orig ;
   u8 pcie_lanes ;
   u8 cna_capable ;
   u8 is_mezz ;
   u8 trunk_capable ;
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs.h"
struct bfa_ioc_driver_attr {
   char driver[16U] ;
   char driver_ver[64U] ;
   char fw_ver[64U] ;
   char bios_ver[64U] ;
   char efi_ver[64U] ;
   char ob_ver[64U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs.h"
struct bfa_ioc_pci_attr {
   u16 vendor_id ;
   u16 device_id ;
   u16 ssid ;
   u16 ssvid ;
   u32 pcifn ;
   u32 rsvd ;
   char chip_rev[8U] ;
};

#line 100 
enum bfa_ioc_state {
    BFA_IOC_UNINIT = 1,
    BFA_IOC_RESET = 2,
    BFA_IOC_SEMWAIT = 3,
    BFA_IOC_HWINIT = 4,
    BFA_IOC_GETATTR = 5,
    BFA_IOC_OPERATIONAL = 6,
    BFA_IOC_INITFAIL = 7,
    BFA_IOC_FAIL = 8,
    BFA_IOC_DISABLING = 9,
    BFA_IOC_DISABLED = 10,
    BFA_IOC_FWMISMATCH = 11,
    BFA_IOC_ENABLING = 12,
    BFA_IOC_HWFAIL = 13
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs.h"
struct bfa_ioc_drv_stats {
   u32 ioc_isrs ;
   u32 ioc_enables ;
   u32 ioc_disables ;
   u32 ioc_hbfails ;
   u32 ioc_boots ;
   u32 stats_tmos ;
   u32 hb_count ;
   u32 disable_reqs ;
   u32 enable_reqs ;
   u32 disable_replies ;
   u32 enable_replies ;
   u32 rsvd ;
};

#line 149 
enum bfa_ioc_type {
    BFA_IOC_TYPE_FC = 1,
    BFA_IOC_TYPE_FCoE = 2,
    BFA_IOC_TYPE_LL = 3
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs.h"
struct bfa_ioc_attr {
   enum bfa_ioc_type ioc_type ;
   enum bfa_ioc_state state ;
   struct bfa_adapter_attr adapter_attr ;
   struct bfa_ioc_driver_attr driver_attr ;
   struct bfa_ioc_pci_attr pci_attr ;
   u8 port_id ;
   u8 port_mode ;
   u8 cap_bm ;
   u8 port_mode_cfg ;
   u8 def_fn ;
   u8 rsvd[3U] ;
};

#line 239 
enum bfa_mode {
    BFA_MODE_HBA = 1,
    BFA_MODE_CNA = 2,
    BFA_MODE_NIC = 3
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs.h"
struct bfa_flash_part_attr {
   u32 part_type ;
   u32 part_instance ;
   u32 part_off ;
   u32 part_size ;
   u32 part_len ;
   u32 part_status ;
   char rsv[8U] ;
};

#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs.h"
struct bfa_flash_attr {
   u32 status ;
   u32 npart ;
   struct bfa_flash_part_attr part[32U] ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
struct bfa_wc {
   void (*wc_resume)(void *) ;
   void *wc_cbarg ;
   int wc_count ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
struct __anonstruct_h2i_321 {
   u8 qid ;
   u8 fn_lpu ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
union __anonunion_mtag_320 {
   struct __anonstruct_h2i_321 h2i ;
   u16 i2htok ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
struct bfi_mhdr {
   u8 msg_class ;
   u8 msg_id ;
   union __anonunion_mtag_320 mtag ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct __anonstruct_a32_322 {
   u32 addr_lo ;
   u32 addr_hi ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
union bfi_addr_u {
   struct __anonstruct_a32_322 a32 ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_mbmsg {
   struct bfi_mhdr mh ;
   u32 pl[7U] ;
};

#line 98 
enum bfi_pcifn_class {
    BFI_PCIFN_CLASS_FC = 3076,
    BFI_PCIFN_CLASS_ETH = 512
};

#line 140 
enum bfi_asic_gen {
    BFI_ASIC_GEN_CB = 1,
    BFI_ASIC_GEN_CT = 2,
    BFI_ASIC_GEN_CT2 = 3
};

#line 146 
enum bfi_asic_mode {
    BFI_ASIC_MODE_FC = 1,
    BFI_ASIC_MODE_FC16 = 2,
    BFI_ASIC_MODE_ETH = 3,
    BFI_ASIC_MODE_COMBO = 4
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_ioc_attr {
   u64 mfg_pwwn ;
   u64 mfg_nwwn ;
   u8 mfg_mac[6U] ;
   u8 port_mode ;
   u8 rsvd_a ;
   u64 pwwn ;
   u64 nwwn ;
   u8 mac[6U] ;
   u16 rsvd_b ;
   u8 fcoe_mac[6U] ;
   u16 rsvd_c ;
   char brcd_serialnum[12U] ;
   u8 pcie_gen ;
   u8 pcie_lanes_orig ;
   u8 pcie_lanes ;
   u8 rx_bbcredit ;
   u32 adapter_prop ;
   u16 maxfrsize ;
   char asic_rev ;
   u8 rsvd_d ;
   char fw_version[64U] ;
   char optrom_version[64U] ;
   struct bfa_mfg_vpd vpd ;
   u32 card_type ;
};

#line 284 
enum bfi_port_mode {
    BFI_PORT_MODE_FC = 1,
    BFI_PORT_MODE_ETH = 2
};

#line 303 
enum bfi_ioc_state {
    BFI_IOC_UNINIT = 0,
    BFI_IOC_INITING = 1,
    BFI_IOC_HWINIT = 2,
    BFI_IOC_CFG = 3,
    BFI_IOC_OP = 4,
    BFI_IOC_DISABLING = 5,
    BFI_IOC_DISABLED = 6,
    BFI_IOC_CFG_DISABLED = 7,
    BFI_IOC_FAIL = 8,
    BFI_IOC_MEMTEST = 9
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq_mhdr {
   u8 msg_class ;
   u8 msg_id ;
   u16 msg_token ;
   u16 num_entries ;
   u8 enet_id ;
   u8 rsvd[1U] ;
};

#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfa_pcidev {
   int pci_slot ;
   u8 pci_func ;
   u16 device_id ;
   u16 ssid ;
   void *pci_bar_kva ;
};

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_dma {
   void *kva ;
   u64 pa ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_ioc_regs {
   void *hfn_mbox_cmd ;
   void *hfn_mbox ;
   void *lpu_mbox_cmd ;
   void *lpu_mbox ;
   void *lpu_read_stat ;
   void *pss_ctl_reg ;
   void *pss_err_status_reg ;
   void *app_pll_fast_ctl_reg ;
   void *app_pll_slow_ctl_reg ;
   void *ioc_sem_reg ;
   void *ioc_usage_sem_reg ;
   void *ioc_init_sem_reg ;
   void *ioc_usage_reg ;
   void *host_page_num_fn ;
   void *heartbeat ;
   void *ioc_fwstate ;
   void *alt_ioc_fwstate ;
   void *ll_halt ;
   void *alt_ll_halt ;
   void *err_set ;
   void *ioc_fail_sync ;
   void *shirq_isr_next ;
   void *shirq_msk_next ;
   void *smem_page_start ;
   u32 smem_pg0 ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_mbox_cmd {
   struct list_head qe ;
   void (*cbfn)(void *) ;
   void *cbarg ;
   u32 msg[8U] ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct __anonstruct_mbhdlr_325 {
   void (*cbfn)(void *, struct bfi_mbmsg *) ;
   void *cbarg ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_ioc_mbox_mod {
   struct list_head cmd_q ;
   int nmclass ;
   struct __anonstruct_mbhdlr_325 mbhdlr[34U] ;
};

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_ioc_cbfn {
   void (*enable_cbfn)(void *, enum bfa_status ) ;
   void (*disable_cbfn)(void *) ;
   void (*hbfail_cbfn)(void *) ;
   void (*reset_cbfn)(void *) ;
};

#line 136 
enum bfa_ioc_event {
    BFA_IOC_E_ENABLED = 1,
    BFA_IOC_E_DISABLED = 2,
    BFA_IOC_E_FAILED = 3
};

#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_ioc_notify {
   struct list_head qe ;
   void (*cbfn)(void *, enum bfa_ioc_event ) ;
   void *cbarg ;
};

#line 151 
struct bfa_ioc;

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_iocpf {
   void (*fsm)(void *, int ) ;
   struct bfa_ioc *ioc ;
   bool fw_mismatch_notified ;
   bool auto_recover ;
   u32 poll_time ;
};

#line 165 
struct bfa;

#line 165 
struct bfa_ioc_hwif;

#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_ioc {
   void (*fsm)(void *, int ) ;
   struct bfa *bfa ;
   struct bfa_pcidev pcidev ;
   struct timer_list ioc_timer ;
   struct timer_list iocpf_timer ;
   struct timer_list sem_timer ;
   struct timer_list hb_timer ;
   u32 hb_count ;
   struct list_head notify_q ;
   void *dbg_fwsave ;
   int dbg_fwsave_len ;
   bool dbg_fwsave_once ;
   enum bfi_pcifn_class clscode ;
   struct bfa_ioc_regs ioc_regs ;
   struct bfa_ioc_drv_stats stats ;
   bool fcmode ;
   bool pllinit ;
   bool stats_busy ;
   u8 port_id ;
   struct bfa_dma attr_dma ;
   struct bfi_ioc_attr *attr ;
   struct bfa_ioc_cbfn *cbfn ;
   struct bfa_ioc_mbox_mod mbox_mod ;
   struct bfa_ioc_hwif const *ioc_hwif ;
   struct bfa_iocpf iocpf ;
   enum bfi_asic_gen asic_gen ;
   enum bfi_asic_mode asic_mode ;
   enum bfi_port_mode port0_mode ;
   enum bfi_port_mode port1_mode ;
   enum bfa_mode port_mode ;
   u8 ad_cap_bm ;
   u8 port_mode_cfg ;
};

#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_ioc_hwif {
   enum bfa_status (*ioc_pll_init)(void *, enum bfi_asic_mode ) ;
   bool (*ioc_firmware_lock)(struct bfa_ioc *) ;
   void (*ioc_firmware_unlock)(struct bfa_ioc *) ;
   void (*ioc_reg_init)(struct bfa_ioc *) ;
   void (*ioc_map_port)(struct bfa_ioc *) ;
   void (*ioc_isr_mode_set)(struct bfa_ioc *, bool ) ;
   void (*ioc_notify_fail)(struct bfa_ioc *) ;
   void (*ioc_ownership_reset)(struct bfa_ioc *) ;
   bool (*ioc_sync_start)(struct bfa_ioc *) ;
   void (*ioc_sync_join)(struct bfa_ioc *) ;
   void (*ioc_sync_leave)(struct bfa_ioc *) ;
   void (*ioc_sync_ack)(struct bfa_ioc *) ;
   bool (*ioc_sync_complete)(struct bfa_ioc *) ;
   bool (*ioc_lpu_read_stat)(struct bfa_ioc *) ;
   void (*ioc_set_fwstate)(struct bfa_ioc *, enum bfi_ioc_state ) ;
   enum bfi_ioc_state (*ioc_get_fwstate)(struct bfa_ioc *) ;
   void (*ioc_set_alt_fwstate)(struct bfa_ioc *, enum bfi_ioc_state ) ;
   enum bfi_ioc_state (*ioc_get_alt_fwstate)(struct bfa_ioc *) ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
struct bfa_flash {
   struct bfa_ioc *ioc ;
   u32 type ;
   u8 instance ;
   u8 rsv[3U] ;
   u32 op_busy ;
   u32 residue ;
   u32 offset ;
   enum bfa_status status ;
   u8 *dbuf_kva ;
   u64 dbuf_pa ;
   void (*cbfn)(void *, enum bfa_status ) ;
   void *cbarg ;
   u8 *ubuf ;
   u32 addr_off ;
   struct bfa_mbox_cmd mb ;
   struct bfa_ioc_notify ioc_notify ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_q {
   union bfi_addr_u pg_tbl ;
   union bfi_addr_u first_entry ;
   u16 pages ;
   u16 page_sz ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_txq {
   struct bfi_enet_q q ;
   u8 priority ;
   u8 rsvd[3U] ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rxq {
   struct bfi_enet_q q ;
   u16 rx_buffer_size ;
   u16 rsvd ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_cq {
   struct bfi_enet_q q ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_ib_cfg {
   u8 int_pkt_dma ;
   u8 int_enabled ;
   u8 int_pkt_enabled ;
   u8 continuous_coalescing ;
   u8 msix ;
   u8 rsvd[3U] ;
   u32 coalescing_timeout ;
   u32 inter_pkt_timeout ;
   u8 inter_pkt_count ;
   u8 rsvd1[3U] ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
union __anonunion_intr_328 {
   u16 msix_index ;
   u16 intx_bitmask ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_ib {
   union bfi_addr_u index_addr ;
   union __anonunion_intr_328 intr ;
   u16 rsvd ;
};

#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_req {
   struct bfi_msgq_mhdr mh ;
};

#line 357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_enable_req {
   struct bfi_msgq_mhdr mh ;
   u8 enable ;
   u8 rsvd[3U] ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_attr_req {
   struct bfi_msgq_mhdr mh ;
};

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_tx_cfg {
   u8 vlan_mode ;
   u8 rsvd ;
   u16 vlan_id ;
   u8 admit_tagged_frame ;
   u8 apply_vlan_filter ;
   u8 add_to_vswitch ;
   u8 rsvd1[1U] ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct __anonstruct_q_cfg_329 {
   struct bfi_enet_txq q ;
   struct bfi_enet_ib ib ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_tx_cfg_req {
   struct bfi_msgq_mhdr mh ;
   u8 num_queues ;
   u8 rsvd[3U] ;
   struct __anonstruct_q_cfg_329 q_cfg[8U] ;
   struct bfi_enet_ib_cfg ib_cfg ;
   struct bfi_enet_tx_cfg tx_cfg ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct __anonstruct_q_handles_330 {
   u32 q_dbell ;
   u32 i_dbell ;
   u8 hw_qid ;
   u8 rsvd[3U] ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_tx_cfg_rsp {
   struct bfi_msgq_mhdr mh ;
   u8 error ;
   u8 hw_id ;
   u8 rsvd[2U] ;
   struct __anonstruct_q_handles_330 q_handles[8U] ;
};

#line 458 
enum bfi_enet_hds_type {
    BFI_ENET_HDS_FORCED = 1,
    BFI_ENET_HDS_IPV6_UDP = 2,
    BFI_ENET_HDS_IPV6_TCP = 4,
    BFI_ENET_HDS_IPV4_TCP = 8,
    BFI_ENET_HDS_IPV4_UDP = 16
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct __anonstruct_hds_331 {
   u8 max_header_size ;
   u8 force_offset ;
   u8 type ;
   u8 rsvd1 ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rx_cfg {
   u8 rxq_type ;
   u8 rsvd[1U] ;
   u16 frame_size ;
   struct __anonstruct_hds_331 hds ;
   u8 multi_buffer ;
   u8 strip_vlan ;
   u8 drop_untagged ;
   u8 rsvd2 ;
};

#line 489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct __anonstruct_q_cfg_332 {
   struct bfi_enet_rxq ql ;
   struct bfi_enet_rxq qs ;
   struct bfi_enet_cq cq ;
   struct bfi_enet_ib ib ;
};

#line 489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rx_cfg_req {
   struct bfi_msgq_mhdr mh ;
   u8 num_queue_sets ;
   u8 rsvd[3U] ;
   struct __anonstruct_q_cfg_332 q_cfg[16U] ;
   struct bfi_enet_ib_cfg ib_cfg ;
   struct bfi_enet_rx_cfg rx_cfg ;
};

#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct __anonstruct_q_handles_333 {
   u32 ql_dbell ;
   u32 qs_dbell ;
   u32 i_dbell ;
   u8 hw_lqid ;
   u8 hw_sqid ;
   u8 hw_cqid ;
   u8 rsvd ;
};

#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rx_cfg_rsp {
   struct bfi_msgq_mhdr mh ;
   u8 error ;
   u8 hw_id ;
   u8 rsvd[2U] ;
   struct __anonstruct_q_handles_333 q_handles[16U] ;
};

#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rit_req {
   struct bfi_msgq_mhdr mh ;
   u16 size ;
   u8 rsvd[2U] ;
   u8 table[64U] ;
};

#line 539 
enum bfi_enet_rss_type {
    BFI_ENET_RSS_IPV6 = 1,
    BFI_ENET_RSS_IPV6_TCP = 2,
    BFI_ENET_RSS_IPV4 = 4,
    BFI_ENET_RSS_IPV4_TCP = 8
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rss_cfg {
   u8 type ;
   u8 mask ;
   u8 rsvd[2U] ;
   u32 key[10U] ;
};

#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rss_cfg_req {
   struct bfi_msgq_mhdr mh ;
   struct bfi_enet_rss_cfg cfg ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_ucast_req {
   struct bfi_msgq_mhdr mh ;
   u8 mac_addr[6U] ;
   u8 rsvd[2U] ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_mcast_add_req {
   struct bfi_msgq_mhdr mh ;
   u8 mac_addr[6U] ;
   u8 rsvd[2U] ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_mcast_del_req {
   struct bfi_msgq_mhdr mh ;
   u16 handle ;
   u8 rsvd[2U] ;
};

#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rx_vlan_req {
   struct bfi_msgq_mhdr mh ;
   u8 block_idx ;
   u8 rsvd[3U] ;
   u32 bit_mask[16U] ;
};

#line 628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_set_pause_req {
   struct bfi_msgq_mhdr mh ;
   u8 rsvd[2U] ;
   u8 tx_pause ;
   u8 rx_pause ;
};

#line 640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_diag_lb_req {
   struct bfi_msgq_mhdr mh ;
   u8 rsvd[2U] ;
   u8 mode ;
   u8 enable ;
};

#line 657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_req {
   struct bfi_msgq_mhdr mh ;
   u16 stats_mask ;
   u8 rsvd[2U] ;
   u32 rx_enet_mask ;
   u32 tx_enet_mask ;
   union bfi_addr_u host_buffer ;
};

#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_txf {
   u64 ucast_octets ;
   u64 ucast ;
   u64 ucast_vlan ;
   u64 mcast_octets ;
   u64 mcast ;
   u64 mcast_vlan ;
   u64 bcast_octets ;
   u64 bcast ;
   u64 bcast_vlan ;
   u64 errors ;
   u64 filter_vlan ;
   u64 filter_mac_sa ;
};

#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_rxf {
   u64 ucast_octets ;
   u64 ucast ;
   u64 ucast_vlan ;
   u64 mcast_octets ;
   u64 mcast ;
   u64 mcast_vlan ;
   u64 bcast_octets ;
   u64 bcast ;
   u64 bcast_vlan ;
   u64 frame_drops ;
};

#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_fc_tx {
   u64 txf_ucast_octets ;
   u64 txf_ucast ;
   u64 txf_ucast_vlan ;
   u64 txf_mcast_octets ;
   u64 txf_mcast ;
   u64 txf_mcast_vlan ;
   u64 txf_bcast_octets ;
   u64 txf_bcast ;
   u64 txf_bcast_vlan ;
   u64 txf_parity_errors ;
   u64 txf_timeout ;
   u64 txf_fid_parity_errors ;
};

#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_fc_rx {
   u64 rxf_ucast_octets ;
   u64 rxf_ucast ;
   u64 rxf_ucast_vlan ;
   u64 rxf_mcast_octets ;
   u64 rxf_mcast ;
   u64 rxf_mcast_vlan ;
   u64 rxf_bcast_octets ;
   u64 rxf_bcast ;
   u64 rxf_bcast_vlan ;
};

#line 751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_rad {
   u64 rx_frames ;
   u64 rx_octets ;
   u64 rx_vlan_frames ;
   u64 rx_ucast ;
   u64 rx_ucast_octets ;
   u64 rx_ucast_vlan ;
   u64 rx_mcast ;
   u64 rx_mcast_octets ;
   u64 rx_mcast_vlan ;
   u64 rx_bcast ;
   u64 rx_bcast_octets ;
   u64 rx_bcast_vlan ;
   u64 rx_drops ;
};

#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_bpc {
   u64 tx_pause[8U] ;
   u64 tx_zero_pause[8U] ;
   u64 tx_first_pause[8U] ;
   u64 rx_pause[8U] ;
   u64 rx_zero_pause[8U] ;
   u64 rx_first_pause[8U] ;
};

#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats_mac {
   u64 stats_clr_cnt ;
   u64 frame_64 ;
   u64 frame_65_127 ;
   u64 frame_128_255 ;
   u64 frame_256_511 ;
   u64 frame_512_1023 ;
   u64 frame_1024_1518 ;
   u64 frame_1519_1522 ;
   u64 rx_bytes ;
   u64 rx_packets ;
   u64 rx_fcs_error ;
   u64 rx_multicast ;
   u64 rx_broadcast ;
   u64 rx_control_frames ;
   u64 rx_pause ;
   u64 rx_unknown_opcode ;
   u64 rx_alignment_error ;
   u64 rx_frame_length_error ;
   u64 rx_code_error ;
   u64 rx_carrier_sense_error ;
   u64 rx_undersize ;
   u64 rx_oversize ;
   u64 rx_fragments ;
   u64 rx_jabber ;
   u64 rx_drop ;
   u64 tx_bytes ;
   u64 tx_packets ;
   u64 tx_multicast ;
   u64 tx_broadcast ;
   u64 tx_pause ;
   u64 tx_deferral ;
   u64 tx_excessive_deferral ;
   u64 tx_single_collision ;
   u64 tx_muliple_collision ;
   u64 tx_late_collision ;
   u64 tx_excessive_collision ;
   u64 tx_total_collision ;
   u64 tx_pause_honored ;
   u64 tx_drop ;
   u64 tx_jabber ;
   u64 tx_fcs_error ;
   u64 tx_control_frame ;
   u64 tx_oversize ;
   u64 tx_undersize ;
   u64 tx_fragments ;
};

#line 840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_stats {
   struct bfi_enet_stats_mac mac_stats ;
   struct bfi_enet_stats_bpc bpc_stats ;
   struct bfi_enet_stats_rad rad_stats ;
   struct bfi_enet_stats_rad rlb_stats ;
   struct bfi_enet_stats_fc_rx fc_rx_stats ;
   struct bfi_enet_stats_fc_tx fc_tx_stats ;
   struct bfi_enet_stats_rxf rxf_stats[32U] ;
   struct bfi_enet_stats_txf txf_stats[32U] ;
};

#line 337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_bit_defn {
   u32 mbox_status_bits ;
   u32 mbox_mask_bits ;
   u32 error_status_bits ;
   u32 error_mask_bits ;
   u32 halt_status_bits ;
   u32 halt_mask_bits ;
};

#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_reg {
   void *fn_int_status ;
   void *fn_int_mask ;
};

#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_dma_addr {
   u32 msb ;
   u32 lsb ;
};

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs_cna.h"
struct bfa_cee_lldp_str {
   u8 sub_type ;
   u8 len ;
   u8 rsvd[2U] ;
   u8 value[128U] ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs_cna.h"
struct bfa_cee_lldp_cfg {
   struct bfa_cee_lldp_str chassis_id ;
   struct bfa_cee_lldp_str port_id ;
   struct bfa_cee_lldp_str port_desc ;
   struct bfa_cee_lldp_str sys_name ;
   struct bfa_cee_lldp_str sys_desc ;
   struct bfa_cee_lldp_str mgmt_addr ;
   u16 time_to_live ;
   u16 enabled_system_cap ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs_cna.h"
struct bfa_cee_dcbx_cfg {
   u8 pgid[8U] ;
   u8 pg_percentage[8U] ;
   u8 pfc_primap ;
   u8 fcoe_primap ;
   u8 iscsi_primap ;
   u8 dcbx_version ;
   u8 lls_fcoe ;
   u8 lls_lan ;
   u8 rsvd[2U] ;
};

#line 180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs_cna.h"
struct bfa_cee_attr {
   u8 cee_status ;
   u8 error_reason ;
   struct bfa_cee_lldp_cfg lldp_remote ;
   struct bfa_cee_dcbx_cfg dcbx_remote ;
   u8 src_mac[6U] ;
   u8 link_speed ;
   u8 nw_priority ;
   u8 filler[2U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_defs_cna.h"
struct bfa_cee_stats {
   u32 lldp_tx_frames ;
   u32 lldp_rx_frames ;
   u32 lldp_rx_frames_invalid ;
   u32 lldp_rx_frames_new ;
   u32 lldp_tlvs_unrecognized ;
   u32 lldp_rx_shutdown_tlvs ;
   u32 lldp_info_aged_out ;
   u32 dcbx_phylink_ups ;
   u32 dcbx_phylink_downs ;
   u32 dcbx_rx_tlvs ;
   u32 dcbx_rx_tlvs_invalid ;
   u32 dcbx_control_tlv_error ;
   u32 dcbx_feature_tlv_error ;
   u32 dcbx_cee_cfg_new ;
   u32 cee_status_down ;
   u32 cee_status_up ;
   u32 cee_hw_cfg_changed ;
   u32 cee_rx_invalid_cfg ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.h"
struct bfa_cee_cbfn {
   void (*get_attr_cbfn)(void *, enum bfa_status ) ;
   void *get_attr_cbarg ;
   void (*get_stats_cbfn)(void *, enum bfa_status ) ;
   void *get_stats_cbarg ;
   void (*reset_stats_cbfn)(void *, enum bfa_status ) ;
   void *reset_stats_cbarg ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.h"
struct bfa_cee {
   void *dev ;
   bool get_attr_pending ;
   bool get_stats_pending ;
   bool reset_stats_pending ;
   enum bfa_status get_attr_status ;
   enum bfa_status get_stats_status ;
   enum bfa_status reset_stats_status ;
   struct bfa_cee_cbfn cbfn ;
   struct bfa_ioc_notify ioc_notify ;
   struct bfa_cee_attr *attr ;
   struct bfa_cee_stats *stats ;
   struct bfa_dma attr_dma ;
   struct bfa_dma stats_dma ;
   struct bfa_ioc *ioc ;
   struct bfa_mbox_cmd get_cfg_mb ;
   struct bfa_mbox_cmd get_stats_mb ;
   struct bfa_mbox_cmd reset_stats_mb ;
};

#line 64 
struct bfa_msgq;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
struct bfa_msgq_cmd_entry {
   struct list_head qe ;
   void (*cbfn)(void *, enum bfa_status ) ;
   void *cbarg ;
   size_t msg_size ;
   struct bfi_msgq_mhdr *msg_hdr ;
};

#line 61 
enum bfa_msgq_cmdq_flags {
    BFA_MSGQ_CMDQ_F_DB_UPDATE = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
struct bfa_msgq_cmdq {
   void (*fsm)(void *, int ) ;
   enum bfa_msgq_cmdq_flags flags ;
   u16 producer_index ;
   u16 consumer_index ;
   u16 depth ;
   struct bfa_dma addr ;
   struct bfa_mbox_cmd dbell_mb ;
   u16 token ;
   int offset ;
   int bytes_to_copy ;
   struct bfa_mbox_cmd copy_mb ;
   struct list_head pending_q ;
   struct bfa_msgq *msgq ;
};

#line 85 
enum bfa_msgq_rspq_flags {
    BFA_MSGQ_RSPQ_F_DB_UPDATE = 1
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
struct __anonstruct_rsphdlr_337 {
   void (*cbfn)(void *, struct bfi_msgq_mhdr *) ;
   void *cbarg ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
struct bfa_msgq_rspq {
   void (*fsm)(void *, int ) ;
   enum bfa_msgq_rspq_flags flags ;
   u16 producer_index ;
   u16 consumer_index ;
   u16 depth ;
   struct bfa_dma addr ;
   struct bfa_mbox_cmd dbell_mb ;
   int nmclass ;
   struct __anonstruct_rsphdlr_337 rsphdlr[34U] ;
   struct bfa_msgq *msgq ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
struct bfa_msgq {
   struct bfa_msgq_cmdq cmdq ;
   struct bfa_msgq_rspq rspq ;
   struct bfa_wc init_wc ;
   struct bfa_mbox_cmd init_mb ;
   struct bfa_ioc_notify ioc_notify ;
   struct bfa_ioc *ioc ;
};

#line 130 
struct bna_mcam_handle;

#line 131 
struct bna_txq;

#line 132 
struct bna_tx;

#line 133 
struct bna_rxq;

#line 134 
struct bna_cq;

#line 135 
struct bna_rx;

#line 136 
struct bna_rxf;

#line 137 
struct bna_enet;

#line 138 
struct bna;

#line 139 
struct bnad;

#line 140 
enum bna_status {
    BNA_STATUS_T_DISABLED = 0,
    BNA_STATUS_T_ENABLED = 1
};

#line 150 
enum bna_cb_status {
    BNA_CB_SUCCESS = 0,
    BNA_CB_FAIL = 1,
    BNA_CB_INTERRUPT = 2,
    BNA_CB_BUSY = 3,
    BNA_CB_INVALID_MAC = 4,
    BNA_CB_MCAST_LIST_FULL = 5,
    BNA_CB_UCAST_CAM_FULL = 6,
    BNA_CB_WAITING = 7,
    BNA_CB_NOT_EXEC = 8
};

#line 162 
enum bna_res_type {
    BNA_RES_T_MEM = 1,
    BNA_RES_T_INTR = 2
};

#line 167 
enum bna_mem_type {
    BNA_MEM_T_KVA = 1,
    BNA_MEM_T_DMA = 2
};

#line 172 
enum bna_intr_type {
    BNA_INTR_T_INTX = 1,
    BNA_INTR_T_MSIX = 2
};

#line 228 
enum bna_tx_type {
    BNA_TX_T_REGULAR = 0,
    BNA_TX_T_LOOPBACK = 1
};

#line 233 
enum bna_tx_flags {
    BNA_TX_F_ENET_STARTED = 1,
    BNA_TX_F_ENABLED = 2,
    BNA_TX_F_BW_UPDATED = 8
};

#line 239 
enum bna_tx_mod_flags {
    BNA_TX_MOD_F_ENET_STARTED = 1,
    BNA_TX_MOD_F_ENET_LOOPBACK = 2
};

#line 244 
enum bna_rx_type {
    BNA_RX_T_REGULAR = 0,
    BNA_RX_T_LOOPBACK = 1
};

#line 249 
enum bna_rxp_type {
    BNA_RXP_SINGLE = 1,
    BNA_RXP_SLR = 2,
    BNA_RXP_HDS = 3
};

#line 255 
enum bna_rxmode {
    BNA_RXMODE_PROMISC = 1,
    BNA_RXMODE_DEFAULT = 2,
    BNA_RXMODE_ALLMULTI = 4
};

#line 272 
enum bna_rx_flags {
    BNA_RX_F_ENET_STARTED = 1,
    BNA_RX_F_ENABLED = 2
};

#line 277 
enum bna_rx_mod_flags {
    BNA_RX_MOD_F_ENET_STARTED = 1,
    BNA_RX_MOD_F_ENET_LOOPBACK = 2
};

#line 290 
enum bna_enet_type {
    BNA_ENET_T_REGULAR = 0,
    BNA_ENET_T_LOOPBACK_INTERNAL = 1,
    BNA_ENET_T_LOOPBACK_EXTERNAL = 2
};

#line 296 
enum bna_link_status {
    BNA_LINK_DOWN = 0,
    BNA_LINK_UP = 1,
    BNA_CEE_UP = 2
};

#line 302 
enum bna_ethport_flags {
    BNA_ETHPORT_F_ADMIN_UP = 1,
    BNA_ETHPORT_F_PORT_ENABLED = 2,
    BNA_ETHPORT_F_RX_STARTED = 4
};

#line 308 
enum bna_enet_flags {
    BNA_ENET_F_IOCETH_READY = 1,
    BNA_ENET_F_ENABLED = 2,
    BNA_ENET_F_PAUSE_CHANGED = 4,
    BNA_ENET_F_MTU_CHANGED = 8
};

#line 315 
enum bna_rss_flags {
    BNA_RSS_F_RIT_PENDING = 1,
    BNA_RSS_F_CFG_PENDING = 2,
    BNA_RSS_F_STATUS_PENDING = 4
};

#line 321 
enum bna_mod_flags {
    BNA_MOD_F_INIT_DONE = 1
};

#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
struct bna_ident {
   int id ;
   char name[64U] ;
};

#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_mac {
   struct list_head qe ;
   u8 addr[6U] ;
   struct bna_mcam_handle *handle ;
};

#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_mem_descr {
   u32 len ;
   void *kva ;
   struct bna_dma_addr dma ;
};

#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_mem_info {
   enum bna_mem_type mem_type ;
   u32 len ;
   u32 num ;
   u32 align_sz ;
   struct bna_mem_descr *mdl ;
   void *cookie ;
};

#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_intr_descr {
   int vector ;
};

#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_intr_info {
   enum bna_intr_type intr_type ;
   int num ;
   struct bna_intr_descr *idl ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
union bna_res_u {
   struct bna_mem_info mem_info ;
   struct bna_intr_info intr_info ;
};

#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_res_info {
   enum bna_res_type res_type ;
   union bna_res_u res_u ;
};

#line 303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_qpt {
   struct bna_dma_addr hw_qpt_ptr ;
   void *kv_qpt_ptr ;
   u32 page_count ;
   u32 page_size ;
};

#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_attr {
   bool fw_query_complete ;
   int num_txq ;
   int num_rxp ;
   int num_ucmac ;
   int num_mcmac ;
   int max_rit_size ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_ioceth {
   void (*fsm)(void *, int ) ;
   struct bfa_ioc ioc ;
   struct bna_attr attr ;
   struct bfa_msgq_cmd_entry msgq_cmd ;
   struct bfi_enet_attr_req attr_req ;
   void (*stop_cbfn)(struct bnad *) ;
   struct bnad *stop_cbarg ;
   struct bna *bna ;
};

#line 336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_pause_config {
   enum bna_status tx_pause ;
   enum bna_status rx_pause ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_enet {
   void (*fsm)(void *, int ) ;
   enum bna_enet_flags flags ;
   enum bna_enet_type type ;
   struct bna_pause_config pause_config ;
   int mtu ;
   void (*stop_cbfn)(void *) ;
   void *stop_cbarg ;
   void (*mtu_cbfn)(struct bnad *) ;
   struct bfa_wc chld_stop_wc ;
   struct bfa_msgq_cmd_entry msgq_cmd ;
   struct bfi_enet_set_pause_req pause_req ;
   struct bna *bna ;
};

#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
union __anonunion_bfi_enet_cmd_338 {
   struct bfi_enet_enable_req admin_req ;
   struct bfi_enet_diag_lb_req lpbk_req ;
};

#line 368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_ethport {
   void (*fsm)(void *, int ) ;
   enum bna_ethport_flags flags ;
   enum bna_link_status link_status ;
   int rx_started_count ;
   void (*stop_cbfn)(struct bna_enet *) ;
   void (*adminup_cbfn)(struct bnad *, enum bna_cb_status ) ;
   void (*link_cbfn)(struct bnad *, enum bna_link_status ) ;
   struct bfa_msgq_cmd_entry msgq_cmd ;
   union __anonunion_bfi_enet_cmd_338 bfi_enet_cmd ;
   struct bna *bna ;
};

#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_ib_dbell {
   void *doorbell_addr ;
   u32 doorbell_ack ;
};

#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_ib {
   struct bna_dma_addr ib_seg_host_addr ;
   void *ib_seg_host_addr_kva ;
   struct bna_ib_dbell door_bell ;
   enum bna_intr_type intr_type ;
   int intr_vector ;
   u8 coalescing_timeo ;
   int interpkt_count ;
   int interpkt_timeo ;
};

#line 417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_tcb {
   void **sw_qpt ;
   void *sw_q ;
   void *unmap_q ;
   u32 producer_index ;
   u32 consumer_index ;
   u32 volatile *hw_consumer_index ;
   u32 q_depth ;
   void *q_dbell ;
   struct bna_ib_dbell *i_dbell ;
   struct bna_txq *txq ;
   struct bnad *bnad ;
   void *priv ;
   enum bna_intr_type intr_type ;
   int intr_vector ;
   u8 priority ;
   unsigned long flags ;
   int id ;
   char name[16U] ;
};

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_txq {
   struct list_head qe ;
   u8 priority ;
   struct bna_qpt qpt ;
   struct bna_tcb *tcb ;
   struct bna_ib ib ;
   struct bna_tx *tx ;
   int hw_id ;
   u64 tx_packets ;
   u64 tx_bytes ;
};

#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
union __anonunion_bfi_enet_cmd_339 {
   struct bfi_enet_tx_cfg_req cfg_req ;
   struct bfi_enet_req req ;
   struct bfi_enet_tx_cfg_rsp cfg_rsp ;
};

#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_tx {
   struct list_head qe ;
   int rid ;
   int hw_id ;
   void (*fsm)(void *, int ) ;
   enum bna_tx_flags flags ;
   enum bna_tx_type type ;
   int num_txq ;
   struct list_head txq_q ;
   u16 txf_vlan_id ;
   void (*tcb_setup_cbfn)(struct bnad *, struct bna_tcb *) ;
   void (*tcb_destroy_cbfn)(struct bnad *, struct bna_tcb *) ;
   void (*tx_stall_cbfn)(struct bnad *, struct bna_tx *) ;
   void (*tx_resume_cbfn)(struct bnad *, struct bna_tx *) ;
   void (*tx_cleanup_cbfn)(struct bnad *, struct bna_tx *) ;
   void (*stop_cbfn)(void *, struct bna_tx *) ;
   void *stop_cbarg ;
   struct bfa_msgq_cmd_entry msgq_cmd ;
   union __anonunion_bfi_enet_cmd_339 bfi_enet_cmd ;
   struct bna *bna ;
   void *priv ;
};

#line 501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_tx_config {
   int num_txq ;
   int txq_depth ;
   int coalescing_timeo ;
   enum bna_tx_type tx_type ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_tx_mod {
   struct bna_tx *tx ;
   struct bna_txq *txq ;
   struct list_head tx_free_q ;
   struct list_head tx_active_q ;
   struct list_head txq_free_q ;
   void (*stop_cbfn)(struct bna_enet *) ;
   struct bfa_wc tx_stop_wc ;
   enum bna_tx_mod_flags flags ;
   u8 prio_map ;
   int default_prio ;
   int iscsi_over_cee ;
   int iscsi_prio ;
   int prio_reconfigured ;
   u32 rid_mask ;
   struct bna *bna ;
};

#line 547 
struct bna_ccb;

#line 547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rcb {
   void **sw_qpt ;
   void *sw_q ;
   void *unmap_q ;
   u32 producer_index ;
   u32 consumer_index ;
   u32 q_depth ;
   void *q_dbell ;
   struct bna_rxq *rxq ;
   struct bna_ccb *ccb ;
   struct bnad *bnad ;
   void *priv ;
   unsigned long flags ;
   int id ;
};

#line 568 
struct bna_rxp;

#line 568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rxq {
   struct list_head qe ;
   int buffer_size ;
   int q_depth ;
   u32 num_vecs ;
   enum bna_status multi_buffer ;
   struct bna_qpt qpt ;
   struct bna_rcb *rcb ;
   struct bna_rxp *rxp ;
   struct bna_rx *rx ;
   int hw_id ;
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 rx_packets_with_error ;
   u64 rxbuf_alloc_failed ;
};

#line 591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct __anonstruct_hds_340 {
   struct bna_rxq *hdr ;
   struct bna_rxq *data ;
};

#line 591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct __anonstruct_slr_341 {
   struct bna_rxq *small ;
   struct bna_rxq *large ;
};

#line 591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct __anonstruct_single_342 {
   struct bna_rxq *only ;
   struct bna_rxq *reserved ;
};

#line 591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
union bna_rxq_u {
   struct __anonstruct_hds_340 hds ;
   struct __anonstruct_slr_341 slr ;
   struct __anonstruct_single_342 single ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_pkt_rate {
   u32 small_pkt_cnt ;
   u32 large_pkt_cnt ;
};

#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_ccb {
   void **sw_qpt ;
   void *sw_q ;
   u32 producer_index ;
   u32 volatile *hw_producer_index ;
   u32 q_depth ;
   struct bna_ib_dbell *i_dbell ;
   struct bna_rcb *rcb[2U] ;
   void *ctrl ;
   struct bna_pkt_rate pkt_rate ;
   u32 pkts_una ;
   u32 bytes_per_intr ;
   struct bna_cq *cq ;
   struct bnad *bnad ;
   void *priv ;
   enum bna_intr_type intr_type ;
   int intr_vector ;
   u8 rx_coalescing_timeo ;
   int id ;
   char name[16U] ;
};

#line 639  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_cq {
   struct bna_qpt qpt ;
   struct bna_ccb *ccb ;
   struct bna_ib ib ;
   struct bna_rx *rx ;
};

#line 649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rss_config {
   enum bfi_enet_rss_type hash_type ;
   u8 hash_mask ;
   u32 toeplitz_hash_key[10U] ;
};

#line 655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_hds_config {
   enum bfi_enet_hds_type hdr_type ;
   int forced_offset ;
};

#line 660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rx_config {
   enum bna_rx_type rx_type ;
   int num_paths ;
   enum bna_rxp_type rxp_type ;
   int coalescing_timeo ;
   u32 frame_size ;
   u32 q1_depth ;
   u32 q1_buf_size ;
   u32 q0_depth ;
   u32 q0_buf_size ;
   u32 q0_num_vecs ;
   enum bna_status q0_multi_buf ;
   enum bna_status rss_status ;
   struct bna_rss_config rss_config ;
   struct bna_hds_config hds_config ;
   enum bna_status vlan_strip_status ;
};

#line 690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rxp {
   struct list_head qe ;
   enum bna_rxp_type type ;
   union bna_rxq_u rxq ;
   struct bna_cq cq ;
   struct bna_rx *rx ;
   int vector ;
   int hw_id ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
union __anonunion_bfi_enet_cmd_343 {
   struct bfi_enet_enable_req req ;
   struct bfi_enet_rss_cfg_req rss_req ;
   struct bfi_enet_rit_req rit_req ;
   struct bfi_enet_rx_vlan_req vlan_req ;
   struct bfi_enet_mcast_add_req mcast_add_req ;
   struct bfi_enet_mcast_del_req mcast_del_req ;
   struct bfi_enet_ucast_req ucast_req ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rxf {
   void (*fsm)(void *, int ) ;
   struct bfa_msgq_cmd_entry msgq_cmd ;
   union __anonunion_bfi_enet_cmd_343 bfi_enet_cmd ;
   void (*start_cbfn)(struct bna_rx *) ;
   struct bna_rx *start_cbarg ;
   void (*stop_cbfn)(struct bna_rx *) ;
   struct bna_rx *stop_cbarg ;
   void (*cam_fltr_cbfn)(struct bnad *, struct bna_rx *) ;
   struct bnad *cam_fltr_cbarg ;
   struct list_head ucast_pending_add_q ;
   struct list_head ucast_pending_del_q ;
   struct bna_mac *ucast_pending_mac ;
   int ucast_pending_set ;
   struct list_head ucast_active_q ;
   struct bna_mac ucast_active_mac ;
   int ucast_active_set ;
   struct list_head mcast_pending_add_q ;
   struct list_head mcast_pending_del_q ;
   struct list_head mcast_active_q ;
   struct list_head mcast_handle_q ;
   enum bna_rxmode rxmode_pending ;
   enum bna_rxmode rxmode_pending_bitmask ;
   enum bna_rxmode rxmode_active ;
   u8 vlan_pending_bitmask ;
   enum bna_status vlan_filter_status ;
   u32 vlan_filter_table[128U] ;
   bool vlan_strip_pending ;
   enum bna_status vlan_strip_status ;
   enum bna_rss_flags rss_pending ;
   enum bna_status rss_status ;
   struct bna_rss_config rss_cfg ;
   u8 *rit ;
   int rit_size ;
   struct bna_rx *rx ;
};

#line 777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
union __anonunion_bfi_enet_cmd_344 {
   struct bfi_enet_rx_cfg_req cfg_req ;
   struct bfi_enet_req req ;
   struct bfi_enet_rx_cfg_rsp cfg_rsp ;
};

#line 777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rx {
   struct list_head qe ;
   int rid ;
   int hw_id ;
   void (*fsm)(void *, int ) ;
   enum bna_rx_type type ;
   int num_paths ;
   struct list_head rxp_q ;
   struct bna_hds_config hds_cfg ;
   struct bna_rxf rxf ;
   enum bna_rx_flags rx_flags ;
   struct bfa_msgq_cmd_entry msgq_cmd ;
   union __anonunion_bfi_enet_cmd_344 bfi_enet_cmd ;
   void (*rcb_setup_cbfn)(struct bnad *, struct bna_rcb *) ;
   void (*rcb_destroy_cbfn)(struct bnad *, struct bna_rcb *) ;
   void (*ccb_setup_cbfn)(struct bnad *, struct bna_ccb *) ;
   void (*ccb_destroy_cbfn)(struct bnad *, struct bna_ccb *) ;
   void (*rx_stall_cbfn)(struct bnad *, struct bna_rx *) ;
   void (*rx_cleanup_cbfn)(struct bnad *, struct bna_rx *) ;
   void (*rx_post_cbfn)(struct bnad *, struct bna_rx *) ;
   void (*stop_cbfn)(void *, struct bna_rx *) ;
   void *stop_cbarg ;
   struct bna *bna ;
   void *priv ;
};

#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rx_mod {
   struct bna *bna ;
   struct bna_rx *rx ;
   struct bna_rxp *rxp ;
   struct bna_rxq *rxq ;
   struct list_head rx_free_q ;
   struct list_head rx_active_q ;
   int rx_free_count ;
   struct list_head rxp_free_q ;
   int rxp_free_count ;
   struct list_head rxq_free_q ;
   int rxq_free_count ;
   enum bna_rx_mod_flags flags ;
   void (*stop_cbfn)(struct bna_enet *) ;
   struct bfa_wc rx_stop_wc ;
   u32 dim_vector[8U][2U] ;
   u32 rid_mask ;
};

#line 860  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_ucam_mod {
   struct bna_mac *ucmac ;
   struct list_head free_q ;
   struct list_head del_q ;
   struct bna *bna ;
};

#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_mcam_handle {
   struct list_head qe ;
   int handle ;
   int refcnt ;
};

#line 877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_mcam_mod {
   struct bna_mac *mcmac ;
   struct bna_mcam_handle *mchandle ;
   struct list_head free_q ;
   struct list_head del_q ;
   struct list_head free_handle_q ;
   struct bna *bna ;
};

#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_stats {
   struct bna_dma_addr hw_stats_dma ;
   struct bfi_enet_stats *hw_stats_kva ;
   struct bfi_enet_stats hw_stats ;
};

#line 895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_stats_mod {
   bool ioc_ready ;
   bool stats_get_busy ;
   bool stats_clr_busy ;
   struct bfa_msgq_cmd_entry stats_get_cmd ;
   struct bfa_msgq_cmd_entry stats_clr_cmd ;
   struct bfi_enet_stats_req stats_get ;
   struct bfi_enet_stats_req stats_clr ;
};

#line 905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna {
   struct bna_ident ident ;
   struct bfa_pcidev pcidev ;
   struct bna_reg regs ;
   struct bna_bit_defn bits ;
   struct bna_stats stats ;
   struct bna_ioceth ioceth ;
   struct bfa_cee cee ;
   struct bfa_flash flash ;
   struct bfa_msgq msgq ;
   struct bna_ethport ethport ;
   struct bna_enet enet ;
   struct bna_stats_mod stats_mod ;
   struct bna_tx_mod tx_mod ;
   struct bna_rx_mod rx_mod ;
   struct bna_ucam_mod ucam_mod ;
   struct bna_mcam_mod mcam_mod ;
   enum bna_mod_flags mod_flags ;
   int default_mode_rid ;
   int promisc_rid ;
   struct bnad *bnad ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_352 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_352 __anonCompField_bpf_prog_99 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_360 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_360 __anonCompField_dst_entry_100 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_361 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_361 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_363 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_362 {
   __addrpair skc_addrpair ;
   struct __anonstruct_363 __anonCompField___anonunion_362_101 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_364 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_366 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_365 {
   __portpair skc_portpair ;
   struct __anonstruct_366 __anonCompField___anonunion_365_104 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_367 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_368 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_362 __anonCompField_sock_common_102 ;
   union __anonunion_364 __anonCompField_sock_common_103 ;
   union __anonunion_365 __anonCompField_sock_common_105 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_367 __anonCompField_sock_common_106 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_368 __anonCompField_sock_common_107 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_369 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_369 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_372 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_372 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_391 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_391 __anonCompField_inetpeer_addr_base_109 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_392 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_394 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_393 {
   struct __anonstruct_394 __anonCompField___anonunion_393_111 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_392 __anonCompField_inet_peer_110 ;
   union __anonunion_393 __anonCompField_inet_peer_112 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cryptohash.h"
struct inet_ehash_bucket {
   struct hlist_nulls_head chain ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_bind_hashbucket {
   spinlock_t lock ;
   struct hlist_head chain ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_listen_hashbucket {
   spinlock_t lock ;
   struct hlist_nulls_head head ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_hashinfo {
   struct inet_ehash_bucket *ehash ;
   spinlock_t *ehash_locks ;
   unsigned int ehash_mask ;
   unsigned int ehash_locks_mask ;
   struct inet_bind_hashbucket *bhash ;
   unsigned int bhash_size ;
   struct kmem_cache *bind_bucket_cachep ;
   struct inet_listen_hashbucket listening_hash[32U] ;
};

#line 1759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/tcp.h"
struct bnad_rx_ctrl {
   struct bna_ccb *ccb ;
   struct bnad *bnad ;
   unsigned long flags ;
   struct napi_struct napi ;
   u64 rx_intr_ctr ;
   u64 rx_poll_ctr ;
   u64 rx_schedule ;
   u64 rx_keep_poll ;
   u64 rx_complete ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_iocmd_comp {
   struct bnad *bnad ;
   struct completion comp ;
   int comp_status ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_completion {
   struct completion ioc_comp ;
   struct completion ucast_comp ;
   struct completion mcast_comp ;
   struct completion tx_comp ;
   struct completion rx_comp ;
   struct completion stats_comp ;
   struct completion enet_comp ;
   struct completion mtu_comp ;
   u8 ioc_comp_status ;
   u8 ucast_comp_status ;
   u8 mcast_comp_status ;
   u8 tx_comp_status ;
   u8 rx_comp_status ;
   u8 stats_comp_status ;
   u8 port_comp_status ;
   u8 mtu_comp_status ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_drv_stats {
   u64 netif_queue_stop ;
   u64 netif_queue_wakeup ;
   u64 netif_queue_stopped ;
   u64 tso4 ;
   u64 tso6 ;
   u64 tso_err ;
   u64 tcpcsum_offload ;
   u64 udpcsum_offload ;
   u64 csum_help ;
   u64 tx_skb_too_short ;
   u64 tx_skb_stopping ;
   u64 tx_skb_max_vectors ;
   u64 tx_skb_mss_too_long ;
   u64 tx_skb_tso_too_short ;
   u64 tx_skb_tso_prepare ;
   u64 tx_skb_non_tso_too_long ;
   u64 tx_skb_tcp_hdr ;
   u64 tx_skb_udp_hdr ;
   u64 tx_skb_csum_err ;
   u64 tx_skb_headlen_too_long ;
   u64 tx_skb_headlen_zero ;
   u64 tx_skb_frag_zero ;
   u64 tx_skb_len_mismatch ;
   u64 hw_stats_updates ;
   u64 netif_rx_dropped ;
   u64 link_toggle ;
   u64 cee_toggle ;
   u64 rxp_info_alloc_failed ;
   u64 mbox_intr_disabled ;
   u64 mbox_intr_enabled ;
   u64 tx_unmap_q_alloc_failed ;
   u64 rx_unmap_q_alloc_failed ;
   u64 rxbuf_alloc_failed ;
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_stats {
   struct bnad_drv_stats drv_stats ;
   struct bna_stats *bna_stats ;
};

#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_tx_res_info {
   struct bna_res_info res_info[7U] ;
};

#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_rx_res_info {
   struct bna_res_info res_info[16U] ;
};

#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_tx_info {
   struct bna_tx *tx ;
   struct bna_tcb *tcb[8U] ;
   u32 tx_id ;
   struct delayed_work tx_cleanup_work ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_rx_info {
   struct bna_rx *rx ;
   struct bnad_rx_ctrl rx_ctrl[16U] ;
   u32 rx_id ;
   struct work_struct rx_cleanup_work ;
};

#line 264 
struct bnad_diag;

#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad {
   struct net_device *netdev ;
   u32 id ;
   struct list_head list_entry ;
   struct bnad_tx_info tx_info[1U] ;
   struct bnad_rx_info rx_info[1U] ;
   unsigned long active_vlans[64U] ;
   u32 num_tx ;
   u32 num_rx ;
   u32 num_txq_per_tx ;
   u32 num_rxp_per_rx ;
   u32 txq_depth ;
   u32 rxq_depth ;
   u8 tx_coalescing_timeo ;
   u8 rx_coalescing_timeo ;
   struct bna_rx_config rx_config[1U] ;
   struct bna_tx_config tx_config[1U] ;
   void *bar0 ;
   struct bna bna ;
   u32 cfg_flags ;
   unsigned long run_flags ;
   struct pci_dev *pcidev ;
   u64 mmio_start ;
   u64 mmio_len ;
   u32 msix_num ;
   struct msix_entry *msix_table ;
   struct mutex conf_mutex ;
   spinlock_t bna_lock ;
   struct timer_list ioc_timer ;
   struct timer_list dim_timer ;
   struct timer_list stats_timer ;
   struct bna_res_info res_info[4U] ;
   struct bna_res_info mod_res_info[8U] ;
   struct bnad_tx_res_info tx_res_info[1U] ;
   struct bnad_rx_res_info rx_res_info[1U] ;
   struct bnad_completion bnad_completions ;
   u8 perm_addr[6U] ;
   struct workqueue_struct *work_q ;
   struct bnad_stats stats ;
   struct bnad_diag *diag ;
   char adapter_name[64U] ;
   char port_name[64U] ;
   char mbox_irq_name[64U] ;
   char wq_name[64U] ;
   char *regdata ;
   u32 reglen ;
   struct dentry *bnad_dentry_files[5U] ;
   struct dentry *port_debugfs_root ;
};

#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
enum bfi_mclass {
    BFI_MC_IOC = 1,
    BFI_MC_DIAG = 2,
    BFI_MC_FLASH = 3,
    BFI_MC_CEE = 4,
    BFI_MC_FCPORT = 5,
    BFI_MC_IOCFC = 6,
    BFI_MC_LL = 7,
    BFI_MC_UF = 8,
    BFI_MC_FCXP = 9,
    BFI_MC_LPS = 10,
    BFI_MC_RPORT = 11,
    BFI_MC_ITNIM = 12,
    BFI_MC_IOIM_READ = 13,
    BFI_MC_IOIM_WRITE = 14,
    BFI_MC_IOIM_IO = 15,
    BFI_MC_IOIM = 16,
    BFI_MC_IOIM_IOCOM = 17,
    BFI_MC_TSKIM = 18,
    BFI_MC_SBOOT = 19,
    BFI_MC_IPFC = 20,
    BFI_MC_PORT = 21,
    BFI_MC_SFP = 22,
    BFI_MC_MSGQ = 23,
    BFI_MC_ENET = 24,
    BFI_MC_PHY = 25,
    BFI_MC_NBOOT = 26,
    BFI_MC_TIO_READ = 27,
    BFI_MC_TIO_WRITE = 28,
    BFI_MC_TIO_DATA_XFERED = 29,
    BFI_MC_TIO_IO = 30,
    BFI_MC_TIO = 31,
    BFI_MC_MFG = 32,
    BFI_MC_EDMA = 33,
    BFI_MC_MAX = 34
};

#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq {
   union bfi_addr_u addr ;
   u16 q_depth ;
   u8 rsvd[2U] ;
};

#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq_cfg_req {
   struct bfi_mhdr mh ;
   struct bfi_msgq cmdq ;
   struct bfi_msgq rspq ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
union __anonunion_idx_723 {
   u16 cmdq_pi ;
   u16 rspq_ci ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq_h2i_db {
   struct bfi_mhdr mh ;
   union __anonunion_idx_723 idx ;
};

#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
union __anonunion_idx_724 {
   u16 rspq_pi ;
   u16 cmdq_ci ;
};

#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq_i2h_db {
   struct bfi_mhdr mh ;
   union __anonunion_idx_724 idx ;
};

#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq_h2i_cmdq_copy_rsp {
   struct bfi_mhdr mh ;
   u8 data[28U] ;
};

#line 464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_msgq_i2h_cmdq_copy_req {
   struct bfi_mhdr mh ;
   u16 offset ;
   u16 len ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
enum cmdq_event {
    CMDQ_E_START = 1,
    CMDQ_E_STOP = 2,
    CMDQ_E_FAIL = 3,
    CMDQ_E_POST = 4,
    CMDQ_E_INIT_RESP = 5,
    CMDQ_E_DB_READY = 6
};

#line 320 
enum rspq_event {
    RSPQ_E_START = 1,
    RSPQ_E_STOP = 2,
    RSPQ_E_FAIL = 3,
    RSPQ_E_RESP = 4,
    RSPQ_E_INIT_RESP = 5,
    RSPQ_E_DB_READY = 6
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_cna.h"
struct bfi_cee_get_req {
   struct bfi_mhdr mh ;
   union bfi_addr_u dma_addr ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_cna.h"
struct bfi_cee_get_rsp {
   struct bfi_mhdr mh ;
   u8 cmd_status ;
   u8 rsvd[3U] ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_cna.h"
struct bfi_cee_stats_rsp {
   struct bfi_mhdr mh ;
   u8 cmd_status ;
   u8 rsvd[3U] ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_cna.h"
union bfi_cee_i2h_msg_u {
   struct bfi_mhdr mh ;
   struct bfi_cee_get_rsp get_rsp ;
   struct bfi_cee_stats_rsp stats_rsp ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int uint;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_12352 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_1315 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_1315 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_vlan.h"
struct vlan_hdr {
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_1374 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_1374 __anonCompField_kernel_param_94 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_txq_wi_vector {
   u16 reserved ;
   u16 length ;
   struct bna_dma_addr host_addr ;
};

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct __anonstruct_wi_1453 {
   u8 reserved ;
   u8 num_vectors ;
   u16 opcode ;
   u16 flags ;
   u16 l4_hdr_size_n_offset ;
   u16 vlan_tag ;
   u16 lso_mss ;
   u32 frame_length ;
};

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct __anonstruct_wi_ext_1454 {
   u16 reserved ;
   u16 opcode ;
   u32 reserved2[3U] ;
};

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
union __anonunion_hdr_1452 {
   struct __anonstruct_wi_1453 wi ;
   struct __anonstruct_wi_ext_1454 wi_ext ;
};

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_txq_entry {
   union __anonunion_hdr_1452 hdr ;
   struct bna_txq_wi_vector vector[4U] ;
};

#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_rxq_entry {
   struct bna_dma_addr host_addr ;
};

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_hw_defs.h"
struct bna_cq_entry {
   u32 flags ;
   u16 vlan_tag ;
   u16 length ;
   u32 rss_hash ;
   u8 valid ;
   u8 reserved1 ;
   u8 reserved2 ;
   u8 rxq_id ;
};

#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
enum bna_cleanup_type {
    BNA_HARD_CLEANUP = 0,
    BNA_SOFT_CLEANUP = 1
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_tx_event_cbfn {
   void (*tcb_setup_cbfn)(struct bnad *, struct bna_tcb *) ;
   void (*tcb_destroy_cbfn)(struct bnad *, struct bna_tcb *) ;
   void (*tx_stall_cbfn)(struct bnad *, struct bna_tx *) ;
   void (*tx_resume_cbfn)(struct bnad *, struct bna_tx *) ;
   void (*tx_cleanup_cbfn)(struct bnad *, struct bna_tx *) ;
};

#line 821  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_types.h"
struct bna_rx_event_cbfn {
   void (*rcb_setup_cbfn)(struct bnad *, struct bna_rcb *) ;
   void (*rcb_destroy_cbfn)(struct bnad *, struct bna_rcb *) ;
   void (*ccb_setup_cbfn)(struct bnad *, struct bna_ccb *) ;
   void (*ccb_destroy_cbfn)(struct bnad *, struct bna_ccb *) ;
   void (*rx_stall_cbfn)(struct bnad *, struct bna_rx *) ;
   void (*rx_cleanup_cbfn)(struct bnad *, struct bna_rx *) ;
   void (*rx_post_cbfn)(struct bnad *, struct bna_rx *) ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
enum bnad_intr_source {
    BNAD_INTR_TX = 1,
    BNAD_INTR_RX = 2
};

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_tx_vector {
   dma_addr_t dma_addr ;
   __u32 dma_len ;
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_tx_unmap {
   struct sk_buff *skb ;
   u32 nvecs ;
   struct bnad_tx_vector vectors[4U] ;
};

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_rx_vector {
   dma_addr_t dma_addr ;
   u32 len ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_rx_unmap {
   struct page *page ;
   struct sk_buff *skb ;
   struct bnad_rx_vector vector ;
   u32 page_offset ;
};

#line 246 
enum bnad_rxbuf_type {
    BNAD_RXBUF_NONE = 0,
    BNAD_RXBUF_SK_BUFF = 1,
    BNAD_RXBUF_PAGE = 2,
    BNAD_RXBUF_MULTI_BUFF = 3
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_rx_unmap_q {
   int reuse_pi ;
   int alloc_order ;
   u32 map_size ;
   enum bnad_rxbuf_type type ;
   struct bnad_rx_unmap unmap[0U] ;
};

#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_drvinfo {
   struct bfa_ioc_attr ioc_attr ;
   struct bfa_cee_attr cee_attr ;
   struct bfa_flash_attr flash_attr ;
   u32 cee_status ;
   u32 flash_status ;
};

#line 415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct bnad_debug_info {
   char *debug_buffer ;
   void *i_private ;
   int buffer_len ;
};

#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
struct bnad_debugfs_entry {
   char const *name ;
   umode_t mode ;
   struct file_operations const *fops ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_suseconds_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/time.h"
struct timeval {
   __kernel_time_t tv_sec ;
   __kernel_suseconds_t tv_usec ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
struct bfa_sm_table {
   void (*sm)(void *, int ) ;
   int state ;
   char *name ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_alen {
   union bfi_addr_u al_addr ;
   u32 al_len ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_ioc_getattr_req {
   struct bfi_mhdr mh ;
   union bfi_addr_u attr_addr ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_ioc_fwver {
   u8 major ;
   u8 minor ;
   u8 maint ;
   u8 patch ;
   u8 phase ;
   u8 build ;
   u8 rsvd[2U] ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_ioc_image_hdr {
   u32 signature ;
   u8 asic_gen ;
   u8 asic_mode ;
   u8 port0_mode ;
   u8 port1_mode ;
   u32 exec ;
   u32 bootenv ;
   u32 rsvd_b[2U] ;
   struct bfi_ioc_fwver fwver ;
   u32 md5sum[4U] ;
};

#line 271 
enum bfi_ioc_img_ver_cmp {
    BFI_IOC_IMG_VER_INCOMP = 0,
    BFI_IOC_IMG_VER_OLD = 1,
    BFI_IOC_IMG_VER_SAME = 2,
    BFI_IOC_IMG_VER_BETTER = 3
};

#line 278 
enum bfi_fwboot_type {
    BFI_FWBOOT_TYPE_NORMAL = 0,
    BFI_FWBOOT_TYPE_FLASH = 1,
    BFI_FWBOOT_TYPE_MEMTEST = 2
};

#line 329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_ioc_ctrl_req {
   struct bfi_mhdr mh ;
   u16 clscode ;
   u16 rsvd ;
   u32 tv_sec ;
};

#line 347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_ioc_ctrl_reply {
   struct bfi_mhdr mh ;
   u8 status ;
   u8 port_mode ;
   u8 cap_bm ;
   u8 rsvd ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
union bfi_ioc_i2h_msg_u {
   struct bfi_mhdr mh ;
   struct bfi_ioc_ctrl_reply fw_event ;
   u32 mboxmsg[8U] ;
};

#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_flash_query_req {
   struct bfi_mhdr mh ;
   struct bfi_alen alen ;
};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_flash_write_req {
   struct bfi_mhdr mh ;
   struct bfi_alen alen ;
   u32 type ;
   u8 instance ;
   u8 last ;
   u8 rsv[2U] ;
   u32 offset ;
   u32 length ;
};

#line 513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_flash_read_req {
   struct bfi_mhdr mh ;
   u32 type ;
   u8 instance ;
   u8 rsv[3U] ;
   u32 offset ;
   u32 length ;
   struct bfi_alen alen ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_flash_query_rsp {
   struct bfi_mhdr mh ;
   u32 status ;
};

#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_flash_read_rsp {
   struct bfi_mhdr mh ;
   u32 type ;
   u8 instance ;
   u8 rsv[3U] ;
   u32 status ;
   u32 length ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi.h"
struct bfi_flash_write_rsp {
   struct bfi_mhdr mh ;
   u32 type ;
   u8 instance ;
   u8 rsv[3U] ;
   u32 status ;
   u32 length ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
enum ioc_event {
    IOC_E_RESET = 1,
    IOC_E_ENABLE = 2,
    IOC_E_DISABLE = 3,
    IOC_E_DETACH = 4,
    IOC_E_ENABLED = 5,
    IOC_E_FWRSP_GETATTR = 6,
    IOC_E_DISABLED = 7,
    IOC_E_PFFAILED = 8,
    IOC_E_HBFAIL = 9,
    IOC_E_HWERROR = 10,
    IOC_E_TIMEOUT = 11,
    IOC_E_HWFAILED = 12
};

#line 147 
enum iocpf_event {
    IOCPF_E_ENABLE = 1,
    IOCPF_E_DISABLE = 2,
    IOCPF_E_STOP = 3,
    IOCPF_E_FWREADY = 4,
    IOCPF_E_FWRSP_ENABLE = 5,
    IOCPF_E_FWRSP_DISABLE = 6,
    IOCPF_E_FAIL = 7,
    IOCPF_E_INITFAIL = 8,
    IOCPF_E_GETATTRFAIL = 9,
    IOCPF_E_SEMLOCKED = 10,
    IOCPF_E_TIMEOUT = 11,
    IOCPF_E_SEM_ERROR = 12
};

#line 162 
enum bfa_iocpf_state {
    BFA_IOCPF_RESET = 1,
    BFA_IOCPF_SEMWAIT = 2,
    BFA_IOCPF_HWINIT = 3,
    BFA_IOCPF_READY = 4,
    BFA_IOCPF_INITFAIL = 5,
    BFA_IOCPF_FAIL = 6,
    BFA_IOCPF_DISABLING = 7,
    BFA_IOCPF_DISABLED = 8,
    BFA_IOCPF_FWMISMATCH = 9
};

#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
struct __anonstruct_r_2201 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) cmd : 8 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) addr_cnt : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(9))) read_cnt : 9 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(9))) write_cnt : 9 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rsv : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) act : 1 ;
};

#line 1428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
union bfa_flash_cmd_reg {
   struct __anonstruct_r_2201 r ;
   u32 i ;
};

#line 1467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
struct __anonstruct_r_2202 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) good : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) bad : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) present : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) init_status : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) busy : 1 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) fifo_cnt : 6 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(21))) rsv : 21 ;
};

#line 1467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
union bfa_flash_dev_status_reg {
   struct __anonstruct_r_2202 r ;
   u32 i ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
struct __anonstruct_r_2203 {
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) dummy : 8 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(24))) addr : 24 ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
union bfa_flash_addr_reg {
   struct __anonstruct_r_2203 r ;
   u32 i ;
};

#line 3132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
union __anonunion_m_2205 {
   struct bfi_flash_query_rsp *query ;
   struct bfi_flash_write_rsp *write ;
   struct bfi_flash_read_rsp *read ;
   struct bfi_mbmsg *msg ;
};

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_rsp {
   struct bfi_msgq_mhdr mh ;
   u8 error ;
   u8 rsvd ;
   u16 cmd_offset ;
};

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_attr_rsp {
   struct bfi_msgq_mhdr mh ;
   u8 error ;
   u8 rsvd ;
   u16 cmd_offset ;
   u32 max_cfg ;
   u32 max_ucmac ;
   u32 rit_size ;
};

#line 872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bna_reg_offset {
   u32 fn_int_status ;
   u32 fn_int_mask ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
enum bna_ethport_event {
    ETHPORT_E_START = 1,
    ETHPORT_E_STOP = 2,
    ETHPORT_E_FAIL = 3,
    ETHPORT_E_UP = 4,
    ETHPORT_E_DOWN = 5,
    ETHPORT_E_FWRESP_UP_OK = 6,
    ETHPORT_E_FWRESP_DOWN = 7,
    ETHPORT_E_FWRESP_UP_FAIL = 8
};

#line 46 
enum bna_enet_event {
    ENET_E_START = 1,
    ENET_E_STOP = 2,
    ENET_E_FAIL = 3,
    ENET_E_PAUSE_CFG = 4,
    ENET_E_MTU_CFG = 5,
    ENET_E_FWRESP_PAUSE = 6,
    ENET_E_CHLD_STOPPED = 7
};

#line 56 
enum bna_ioceth_event {
    IOCETH_E_ENABLE = 1,
    IOCETH_E_DISABLE = 2,
    IOCETH_E_IOC_RESET = 3,
    IOCETH_E_IOC_FAILED = 4,
    IOCETH_E_IOC_READY = 5,
    IOCETH_E_ENET_ATTR_RESP = 6,
    IOCETH_E_ENET_STOPPED = 7,
    IOCETH_E_IOC_DISABLED = 8
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
struct __anonstruct_ct_fnreg_3275 {
   u32 hfn_mbox ;
   u32 lpu_mbox ;
   u32 hfn_pgn ;
};

#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
struct __anonstruct_ct_p0reg_3276 {
   u32 hfn ;
   u32 lpu ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
struct __anonstruct_ct_p1reg_3277 {
   u32 hfn ;
   u32 lpu ;
};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
struct __anonstruct_ct2_reg_3278 {
   u32 hfn_mbox ;
   u32 lpu_mbox ;
   u32 hfn_pgn ;
   u32 hfn ;
   u32 lpu ;
   u32 lpu_read ;
};

#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
enum bfi_enet_h2i_msgs {
    BFI_ENET_H2I_RX_CFG_SET_REQ = 1,
    BFI_ENET_H2I_RX_CFG_CLR_REQ = 2,
    BFI_ENET_H2I_RIT_CFG_REQ = 3,
    BFI_ENET_H2I_RSS_CFG_REQ = 4,
    BFI_ENET_H2I_RSS_ENABLE_REQ = 5,
    BFI_ENET_H2I_RX_PROMISCUOUS_REQ = 6,
    BFI_ENET_H2I_RX_DEFAULT_REQ = 7,
    BFI_ENET_H2I_MAC_UCAST_SET_REQ = 8,
    BFI_ENET_H2I_MAC_UCAST_CLR_REQ = 9,
    BFI_ENET_H2I_MAC_UCAST_ADD_REQ = 10,
    BFI_ENET_H2I_MAC_UCAST_DEL_REQ = 11,
    BFI_ENET_H2I_MAC_MCAST_ADD_REQ = 12,
    BFI_ENET_H2I_MAC_MCAST_DEL_REQ = 13,
    BFI_ENET_H2I_MAC_MCAST_FILTER_REQ = 14,
    BFI_ENET_H2I_RX_VLAN_SET_REQ = 15,
    BFI_ENET_H2I_RX_VLAN_STRIP_ENABLE_REQ = 16,
    BFI_ENET_H2I_TX_CFG_SET_REQ = 17,
    BFI_ENET_H2I_TX_CFG_CLR_REQ = 18,
    BFI_ENET_H2I_PORT_ADMIN_UP_REQ = 19,
    BFI_ENET_H2I_SET_PAUSE_REQ = 20,
    BFI_ENET_H2I_DIAG_LOOPBACK_REQ = 21,
    BFI_ENET_H2I_GET_ATTR_REQ = 22,
    BFI_ENET_H2I_STATS_GET_REQ = 23,
    BFI_ENET_H2I_STATS_CLR_REQ = 24,
    BFI_ENET_H2I_WOL_MAGIC_REQ = 25,
    BFI_ENET_H2I_WOL_FRAME_REQ = 26,
    BFI_ENET_H2I_MAX = 27
};

#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfi_enet.h"
struct bfi_enet_mcast_add_rsp {
   struct bfi_msgq_mhdr mh ;
   u8 error ;
   u8 rsvd ;
   u16 cmd_offset ;
   u16 handle ;
   u8 rsvd1[2U] ;
};

#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
enum bna_rx_event {
    RX_E_START = 1,
    RX_E_STOP = 2,
    RX_E_FAIL = 3,
    RX_E_STARTED = 4,
    RX_E_STOPPED = 5,
    RX_E_RXF_STARTED = 6,
    RX_E_RXF_STOPPED = 7,
    RX_E_CLEANUP_DONE = 8
};

#line 282 
enum bna_rxf_event {
    RXF_E_START = 1,
    RXF_E_STOP = 2,
    RXF_E_FAIL = 3,
    RXF_E_CONFIG = 4,
    RXF_E_FW_RESP = 7
};

#line 2780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
enum bna_tx_event {
    TX_E_START = 1,
    TX_E_STOP = 2,
    TX_E_FAIL = 3,
    TX_E_STARTED = 4,
    TX_E_STOPPED = 5,
    TX_E_CLEANUP_DONE = 7,
    TX_E_BW_UPDATE = 8
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_character_driver_scenario_20 {
   struct file_operations *arg0 ;
   int signal_pending ;
};

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_9 {
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_17 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_18 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 40  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_23 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_19 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/fvtp/.tmp_bnad_ethtool.c"
void ldv_inline_asm(void);


#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void clear_bit(long nr, unsigned long volatile *addr)
{
  
#line 112 
  if (0 != 0) 
#line 114 
              ldv_inline_asm(); else 
#line 117 
                                     ldv_inline_asm();
  
#line 118 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static bool is_power_of_2(unsigned long n)
{
  bool __retres;
  
#line 54 
  __retres = (_Bool)((n != 0UL && ((n + 18446744073709551615UL) & n) == 0UL) != 0);
  
#line 54 
  return __retres;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 64 
size_t strlen(char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_115(spinlock_t *lock);


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 439 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 440 
  return;
}


#line 453 
static void ldv_spin_unlock_irq_116(spinlock_t *lock);


#line 457 
static void ldv_spin_unlock_irq_117(spinlock_t *lock);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 460 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 461 
  return;
}


#line 490 
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_81(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_92(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_104(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_108(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_110(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_111(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_113(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_114(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_86(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_95(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_99(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_101(struct mutex *ldv_func_arg1);


#line 59 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 61 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 63 
void __ldv_spin_lock(spinlock_t *);


#line 90 
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 98 
static void ldv___ldv_spin_lock_80(spinlock_t *ldv_func_arg1);


#line 102 
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1);


#line 106 
static void ldv___ldv_spin_lock_91(spinlock_t *ldv_func_arg1);


#line 110 
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_103(spinlock_t *ldv_func_arg1);


#line 118 
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1);


#line 122 
static void ldv___ldv_spin_lock_109(spinlock_t *ldv_func_arg1);


#line 126 
static void ldv___ldv_spin_lock_112(spinlock_t *ldv_func_arg1);


#line 134 
void ldv_spin_model_lock(char *);


#line 135 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_87(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_88(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_89(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_90(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_94(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_98(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_100(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_102(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_105(struct mutex *ldv_func_arg1);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/completion.h"
__inline static void init_completion(struct completion *x)
{
  
#line 75 
  x->done = 0U;
  {
    struct lock_class_key __key;
    
#line 76 
    __init_waitqueue_head(& x->wait,"&x->wait",& __key);
  }
  
#line 78 
  return;
}


#line 91 
void wait_for_completion(struct completion *);


#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_del_timer_sync_82(struct timer_list *ldv_func_arg1);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 86 
int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
void bfa_nw_ioc_get_attr(struct bfa_ioc *ioc, struct bfa_ioc_attr *ioc_attr);


#line 342 
enum bfa_status bfa_nw_flash_get_attr(struct bfa_flash *flash, struct bfa_flash_attr *attr, void (*cbfn)(void *, enum bfa_status ), void *cbarg);


#line 345 
enum bfa_status bfa_nw_flash_update_part(struct bfa_flash *flash, u32 type, u8 instance, void *buf, u32 len, u32 offset, void (*cbfn)(void *, enum bfa_status ), void *cbarg);


#line 348 
enum bfa_status bfa_nw_flash_read_part(struct bfa_flash *flash, u32 type, u8 instance, void *buf, u32 len, u32 offset, void (*cbfn)(void *, enum bfa_status ), void *cbarg);


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna.h"
void bna_enet_pause_config(struct bna_enet *enet, struct bna_pause_config *pause_config);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
void bnad_set_rx_mode(struct net_device *netdev);


#line 388 
int bnad_mac_addr_set_locked(struct bnad *bnad, u8 const *mac_addr);


#line 389 
int bnad_enable_default_bcast(struct bnad *bnad);


#line 390 
void bnad_restore_vlans(struct bnad *bnad, u32 rx_id);


#line 391 
void bnad_set_ethtool_ops(struct net_device *netdev);


#line 392 
void bnad_cb_completion(void *arg, enum bfa_status status);


#line 395 
void bnad_tx_coalescing_timeo_set(struct bnad *bnad);


#line 396 
void bnad_rx_coalescing_timeo_set(struct bnad *bnad);


#line 398 
int bnad_setup_rx(struct bnad *bnad, u32 rx_id);


#line 399 
int bnad_setup_tx(struct bnad *bnad, u32 tx_id);


#line 400 
void bnad_destroy_tx(struct bnad *bnad, u32 tx_id);


#line 401 
void bnad_destroy_rx(struct bnad *bnad, u32 rx_id);


#line 404 
void bnad_dim_timer_start(struct bnad *bnad);


#line 407 
void bnad_netdev_qstats_fill(struct bnad *bnad, struct rtnl_link_stats64 *stats);


#line 409 
void bnad_netdev_hwstats_fill(struct bnad *bnad, struct rtnl_link_stats64 *stats);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static char const *bnad_net_stats_strings[196U] = {"rx_packets", "tx_packets", "rx_bytes", "tx_bytes", "rx_errors", "tx_errors", "rx_dropped", "tx_dropped", "multicast", "collisions", "rx_length_errors", "rx_over_errors", "rx_crc_errors", "rx_frame_errors", "rx_fifo_errors", "rx_missed_errors", "tx_aborted_errors", "tx_carrier_errors", "tx_fifo_errors", "tx_heartbeat_errors", "tx_window_errors", "rx_compressed", "tx_compressed", "netif_queue_stop", "netif_queue_wakeup", "netif_queue_stopped", "tso4", "tso6", "tso_err", "tcpcsum_offload", "udpcsum_offload", "csum_help", "tx_skb_too_short", "tx_skb_stopping", "tx_skb_max_vectors", "tx_skb_mss_too_long", "tx_skb_tso_too_short", "tx_skb_tso_prepare", "tx_skb_non_tso_too_long", "tx_skb_tcp_hdr", "tx_skb_udp_hdr", "tx_skb_csum_err", "tx_skb_headlen_too_long", "tx_skb_headlen_zero", "tx_skb_frag_zero", "tx_skb_len_mismatch", "hw_stats_updates", "netif_rx_dropped", "link_toggle", "cee_toggle", "rxp_info_alloc_failed", "mbox_intr_disabled", "mbox_intr_enabled", "tx_unmap_q_alloc_failed", "rx_unmap_q_alloc_failed", "rxbuf_alloc_failed", "mac_stats_clr_cnt", "mac_frame_64", "mac_frame_65_127", "mac_frame_128_255", "mac_frame_256_511", "mac_frame_512_1023", "mac_frame_1024_1518", "mac_frame_1518_1522", "mac_rx_bytes", "mac_rx_packets", "mac_rx_fcs_error", "mac_rx_multicast", "mac_rx_broadcast", "mac_rx_control_frames", "mac_rx_pause", "mac_rx_unknown_opcode", "mac_rx_alignment_error", "mac_rx_frame_length_error", "mac_rx_code_error", "mac_rx_carrier_sense_error", "mac_rx_undersize", "mac_rx_oversize", "mac_rx_fragments", "mac_rx_jabber", "mac_rx_drop", "mac_tx_bytes", "mac_tx_packets", "mac_tx_multicast", "mac_tx_broadcast", "mac_tx_pause", "mac_tx_deferral", "mac_tx_excessive_deferral", "mac_tx_single_collision", "mac_tx_muliple_collision", "mac_tx_late_collision", "mac_tx_excessive_collision", "mac_tx_total_collision", "mac_tx_pause_honored", "mac_tx_drop", "mac_tx_jabber", "mac_tx_fcs_error", "mac_tx_control_frame", "mac_tx_oversize", "mac_tx_undersize", "mac_tx_fragments", "bpc_tx_pause_0", "bpc_tx_pause_1", "bpc_tx_pause_2", "bpc_tx_pause_3", "bpc_tx_pause_4", "bpc_tx_pause_5", "bpc_tx_pause_6", "bpc_tx_pause_7", "bpc_tx_zero_pause_0", "bpc_tx_zero_pause_1", "bpc_tx_zero_pause_2", "bpc_tx_zero_pause_3", "bpc_tx_zero_pause_4", "bpc_tx_zero_pause_5", "bpc_tx_zero_pause_6", "bpc_tx_zero_pause_7", "bpc_tx_first_pause_0", "bpc_tx_first_pause_1", "bpc_tx_first_pause_2", "bpc_tx_first_pause_3", "bpc_tx_first_pause_4", "bpc_tx_first_pause_5", "bpc_tx_first_pause_6", "bpc_tx_first_pause_7", "bpc_rx_pause_0", "bpc_rx_pause_1", "bpc_rx_pause_2", "bpc_rx_pause_3", "bpc_rx_pause_4", "bpc_rx_pause_5", "bpc_rx_pause_6", "bpc_rx_pause_7", "bpc_rx_zero_pause_0", "bpc_rx_zero_pause_1", "bpc_rx_zero_pause_2", "bpc_rx_zero_pause_3", "bpc_rx_zero_pause_4", "bpc_rx_zero_pause_5", "bpc_rx_zero_pause_6", "bpc_rx_zero_pause_7", "bpc_rx_first_pause_0", "bpc_rx_first_pause_1", "bpc_rx_first_pause_2", "bpc_rx_first_pause_3", "bpc_rx_first_pause_4", "bpc_rx_first_pause_5", "bpc_rx_first_pause_6", "bpc_rx_first_pause_7", "rad_rx_frames", "rad_rx_octets", "rad_rx_vlan_frames", "rad_rx_ucast", "rad_rx_ucast_octets", "rad_rx_ucast_vlan", "rad_rx_mcast", "rad_rx_mcast_octets", "rad_rx_mcast_vlan", "rad_rx_bcast", "rad_rx_bcast_octets", "rad_rx_bcast_vlan", "rad_rx_drops", "rlb_rad_rx_frames", "rlb_rad_rx_octets", "rlb_rad_rx_vlan_frames", "rlb_rad_rx_ucast", "rlb_rad_rx_ucast_octets", "rlb_rad_rx_ucast_vlan", "rlb_rad_rx_mcast", "rlb_rad_rx_mcast_octets", "rlb_rad_rx_mcast_vlan", "rlb_rad_rx_bcast", "rlb_rad_rx_bcast_octets", "rlb_rad_rx_bcast_vlan", "rlb_rad_rx_drops", "fc_rx_ucast_octets", "fc_rx_ucast", "fc_rx_ucast_vlan", "fc_rx_mcast_octets", "fc_rx_mcast", "fc_rx_mcast_vlan", "fc_rx_bcast_octets", "fc_rx_bcast", "fc_rx_bcast_vlan", "fc_tx_ucast_octets", "fc_tx_ucast", "fc_tx_ucast_vlan", "fc_tx_mcast_octets", "fc_tx_mcast", "fc_tx_mcast_vlan", "fc_tx_bcast_octets", "fc_tx_bcast", "fc_tx_bcast_vlan", "fc_tx_parity_errors", "fc_tx_timeout", "fc_tx_fid_parity_errors"};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int __retres;
  bool tmp;
  
#line 258 
  cmd->supported = 4096U;
  
#line 259 
  cmd->advertising = 4096U;
  
#line 260 
  cmd->autoneg = (unsigned char)0U;
  
#line 261 
  cmd->supported |= 1024U;
  
#line 262 
  cmd->advertising |= 1024U;
  
#line 263 
  cmd->port = (unsigned char)3U;
  
#line 264 
  cmd->phy_address = (unsigned char)0U;
  
#line 266 
  tmp = netif_carrier_ok((struct net_device const *)netdev);
  
#line 266 
  if ((int)tmp != 0) {
    
#line 267 
    ethtool_cmd_speed_set(cmd,10000U);
    
#line 268 
    cmd->duplex = (unsigned char)1U;
  }
  else {
    
#line 270 
    ethtool_cmd_speed_set(cmd,4294967295U);
    
#line 271 
    cmd->duplex = (unsigned char)255U;
  }
  
#line 273 
  cmd->transceiver = (unsigned char)1U;
  
#line 274 
  cmd->maxtxpkt = 0U;
  
#line 275 
  cmd->maxrxpkt = 0U;
  
#line 277 
  __retres = 0;
  
#line 277 
  return __retres;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_set_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int __retres;
  
#line 284 
  if ((unsigned int)cmd->autoneg == 1U) {
    
#line 285 
    __retres = -95;
    
#line 285 
    goto return_label;
  }
  else {
    __u32 tmp;
    
#line 286 
    tmp = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
    
#line 286 
    if (tmp == 10000U) {
      
#line 287 
      if ((unsigned int)cmd->duplex == 1U) {
        
#line 288 
        __retres = 0;
        
#line 288 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  
#line 291 
  __retres = -95;
  return_label: 
#line 291 
                return __retres;
}


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static void bnad_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  struct bfa_ioc_attr *ioc_attr;
  unsigned long flags;
  char const *tmp_1;
  
#line 297 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 301 
  strlcpy((char *)(& drvinfo->driver),"bna",32UL);
  
#line 302 
  strlcpy((char *)(& drvinfo->version),"3.2.25.1",32UL);
  
#line 304 
  ioc_attr = (struct bfa_ioc_attr *)kzalloc(1600UL,208U);
  
#line 305 
  if (ioc_attr != (struct bfa_ioc_attr *)0) {
    
#line 306 
    ldv___ldv_spin_lock_75(& bnad->bna_lock);
    
#line 307 
    bfa_nw_ioc_get_attr(& bnad->bna.ioceth.ioc,ioc_attr);
    
#line 308 
    ldv_spin_unlock_irqrestore_76(& bnad->bna_lock,flags);
    
#line 310 
    strlcpy((char *)(& drvinfo->fw_version),(char const *)(& ioc_attr->adapter_attr.fw_ver),32UL);
    
#line 312 
    kfree((void const *)ioc_attr);
  }
  else ;
  
#line 315 
  tmp_1 = pci_name((struct pci_dev const *)bnad->pcidev);
  
#line 315 
  ;
  
#line 315 
  strlcpy((char *)(& drvinfo->bus_info),tmp_1,32UL);
  
#line 316 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static void bnad_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wolinfo)
{
  
#line 322 
  wolinfo->supported = 0U;
  
#line 323 
  wolinfo->wolopts = 0U;
  
#line 324 
  return;
}


#line 327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *coalesce)
{
  int __retres;
  unsigned long flags;
  
#line 329 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 333 
  ldv___ldv_spin_lock_77(& bnad->bna_lock);
  
#line 334 
  coalesce->use_adaptive_rx_coalesce = bnad->cfg_flags & 1U;
  
#line 336 
  ldv_spin_unlock_irqrestore_78(& bnad->bna_lock,flags);
  
#line 338 
  coalesce->rx_coalesce_usecs = (unsigned int)((int)bnad->rx_coalescing_timeo * 5);
  
#line 340 
  coalesce->tx_coalesce_usecs = (unsigned int)((int)bnad->tx_coalescing_timeo * 5);
  
#line 342 
  coalesce->tx_max_coalesced_frames = 12U;
  
#line 344 
  __retres = 0;
  
#line 344 
  return __retres;
}


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *coalesce)
{
  int __retres;
  unsigned long flags;
  
#line 350 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 352 
  int to_del = 0;
  
#line 354 
  if (coalesce->rx_coalesce_usecs + 4294967295U > 1274U) {
    
#line 357 
    __retres = -22;
    
#line 357 
    goto return_label;
  }
  else ;
  
#line 359 
  if (coalesce->tx_coalesce_usecs + 4294967295U > 1274U) {
    
#line 362 
    __retres = -22;
    
#line 362 
    goto return_label;
  }
  else ;
  
#line 364 
  ldv_mutex_lock_79(& bnad->conf_mutex);
  
#line 370 
  ldv___ldv_spin_lock_80(& bnad->bna_lock);
  
#line 371 
  if (coalesce->use_adaptive_rx_coalesce != 0U) {
    
#line 372 
    if ((bnad->cfg_flags & 1U) == 0U) {
      
#line 373 
      bnad->cfg_flags |= 1U;
      
#line 374 
      bnad_dim_timer_start(bnad);
    }
    else ;
  }
  else 
    
#line 377 
    if ((bnad->cfg_flags & 1U) != 0U) {
      
#line 378 
      bnad->cfg_flags &= 4294967294U;
      
#line 379 
      if ((bnad->cfg_flags & 1U) != 0U) {
        int tmp_0;
        
#line 379 
        tmp_0 = constant_test_bit(4L,(unsigned long const volatile *)(& bnad->run_flags));
        
#line 379 
        if (tmp_0 != 0) {
          
#line 382 
          clear_bit(4L,(unsigned long volatile *)(& bnad->run_flags));
          
#line 384 
          to_del = 1;
        }
        else ;
      }
      else ;
      
#line 386 
      ldv_spin_unlock_irqrestore_81(& bnad->bna_lock,flags);
      
#line 387 
      if (to_del != 0) 
#line 388 
                       ldv_del_timer_sync_82(& bnad->dim_timer); else ;
      
#line 389 
      ldv___ldv_spin_lock_83(& bnad->bna_lock);
      
#line 390 
      bnad_rx_coalescing_timeo_set(bnad);
    }
    else ;
  
#line 393 
  if ((unsigned int)bnad->tx_coalescing_timeo != coalesce->tx_coalesce_usecs / 5U) {
    
#line 395 
    bnad->tx_coalescing_timeo = (unsigned char)(coalesce->tx_coalesce_usecs / 5U);
    
#line 397 
    bnad_tx_coalescing_timeo_set(bnad);
  }
  else ;
  
#line 400 
  if ((unsigned int)bnad->rx_coalescing_timeo != coalesce->rx_coalesce_usecs / 5U) {
    
#line 402 
    bnad->rx_coalescing_timeo = (unsigned char)(coalesce->rx_coalesce_usecs / 5U);
    
#line 405 
    if ((bnad->cfg_flags & 1U) == 0U) 
#line 406 
                                      bnad_rx_coalescing_timeo_set(bnad); else ;
  }
  else ;
  
#line 412 
  ldv_spin_unlock_irqrestore_84(& bnad->bna_lock,flags);
  
#line 414 
  ldv_mutex_unlock_85(& bnad->conf_mutex);
  
#line 415 
  __retres = 0;
  return_label: 
#line 415 
                return __retres;
}


#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static void bnad_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ringparam)
{
  
#line 422 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 424 
  ringparam->rx_max_pending = 16384U;
  
#line 425 
  ringparam->tx_max_pending = 2048U;
  
#line 427 
  ringparam->rx_pending = bnad->rxq_depth;
  
#line 428 
  ringparam->tx_pending = bnad->txq_depth;
  
#line 429 
  return;
}


#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *ringparam)
{
  int __retres;
  int i;
  int current_err;
  unsigned long flags;
  
#line 435 
  int err = 0;
  
#line 436 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 439 
  ldv_mutex_lock_86(& bnad->conf_mutex);
  
#line 440 
  if (ringparam->rx_pending == bnad->rxq_depth && ringparam->tx_pending == bnad->txq_depth) {
    
#line 442 
    ldv_mutex_unlock_87(& bnad->conf_mutex);
    
#line 443 
    __retres = 0;
    
#line 443 
    goto return_label;
  }
  else ;
  
#line 446 
  if (ringparam->rx_pending + 4294966784U > 15872U) 
#line 446 
                                                    goto _LOR;
  else {
    int tmp_1;
    bool tmp_0;
    
#line 448 
    tmp_0 = is_power_of_2((unsigned long)ringparam->rx_pending);
    
#line 448 
    if (tmp_0) 
#line 448 
               tmp_1 = 0; else 
#line 448 
                               tmp_1 = 1;
    
#line 448 
    if (tmp_1) {
      _LOR: {
              
#line 449 
              ldv_mutex_unlock_88(& bnad->conf_mutex);
              
#line 450 
              __retres = -22;
              
#line 450 
              goto return_label;
            }
    }
    else ;
  }
  
#line 452 
  if (ringparam->tx_pending + 4294966784U > 1536U) 
#line 452 
                                                   goto _LOR_0;
  else {
    int tmp_3;
    bool tmp_2;
    
#line 454 
    tmp_2 = is_power_of_2((unsigned long)ringparam->tx_pending);
    
#line 454 
    if (tmp_2) 
#line 454 
               tmp_3 = 0; else 
#line 454 
                               tmp_3 = 1;
    
#line 454 
    if (tmp_3) {
      _LOR_0: {
                
#line 455 
                ldv_mutex_unlock_89(& bnad->conf_mutex);
                
#line 456 
                __retres = -22;
                
#line 456 
                goto return_label;
              }
    }
    else ;
  }
  
#line 459 
  if (ringparam->rx_pending != bnad->rxq_depth) {
    int tmp_5;
    bool tmp_4;
    
#line 460 
    bnad->rxq_depth = ringparam->rx_pending;
    
#line 461 
    tmp_4 = netif_running((struct net_device const *)netdev);
    
#line 461 
    if (tmp_4) 
#line 461 
               tmp_5 = 0; else 
#line 461 
                               tmp_5 = 1;
    
#line 461 
    if (tmp_5) {
      
#line 462 
      ldv_mutex_unlock_90(& bnad->conf_mutex);
      
#line 463 
      __retres = 0;
      
#line 463 
      goto return_label;
    }
    else ;
    
#line 466 
    i = 0;
    
#line 466 
    goto ldv_57736;
    ldv_57735: 
#line 467 
    ;
    
#line 467 
    if (bnad->rx_info[i].rx == (struct bna_rx *)0) 
#line 468 
                                                   goto ldv_57734; else ;
    
#line 469 
    bnad_destroy_rx(bnad,(unsigned int)i);
    
#line 470 
    current_err = bnad_setup_rx(bnad,(unsigned int)i);
    
#line 471 
    if (current_err != 0 && err == 0) 
#line 472 
                                      err = current_err; else ;
    ldv_57734: 
#line 473 
    ;
    
#line 466 
    i += 1;
    ldv_57736: 
#line 467 
    ;
    
#line 466 
    if (bnad->num_rx > (unsigned int)i) 
#line 468 
                                        goto ldv_57735; else 
#line 471 
                                                             goto ldv_57737;
    ldv_57737: 
#line 472 
    ;
    
#line 475 
    if (err == 0 && bnad->rx_info[0].rx != (struct bna_rx *)0) {
      
#line 477 
      bnad_restore_vlans(bnad,0U);
      
#line 478 
      bnad_enable_default_bcast(bnad);
      
#line 479 
      ldv___ldv_spin_lock_91(& bnad->bna_lock);
      
#line 480 
      bnad_mac_addr_set_locked(bnad,(u8 const *)netdev->dev_addr);
      
#line 481 
      ldv_spin_unlock_irqrestore_92(& bnad->bna_lock,flags);
      
#line 482 
      bnad->cfg_flags &= 4294967289U;
      
#line 484 
      bnad_set_rx_mode(netdev);
    }
    else ;
  }
  else ;
  
#line 487 
  if (ringparam->tx_pending != bnad->txq_depth) {
    int tmp_7;
    bool tmp_6;
    
#line 488 
    bnad->txq_depth = ringparam->tx_pending;
    
#line 489 
    tmp_6 = netif_running((struct net_device const *)netdev);
    
#line 489 
    if (tmp_6) 
#line 489 
               tmp_7 = 0; else 
#line 489 
                               tmp_7 = 1;
    
#line 489 
    if (tmp_7) {
      
#line 490 
      ldv_mutex_unlock_93(& bnad->conf_mutex);
      
#line 491 
      __retres = 0;
      
#line 491 
      goto return_label;
    }
    else ;
    
#line 494 
    i = 0;
    
#line 494 
    goto ldv_57740;
    ldv_57739: 
#line 495 
    ;
    
#line 495 
    if (bnad->tx_info[i].tx == (struct bna_tx *)0) 
#line 496 
                                                   goto ldv_57738; else ;
    
#line 497 
    bnad_destroy_tx(bnad,(unsigned int)i);
    
#line 498 
    current_err = bnad_setup_tx(bnad,(unsigned int)i);
    
#line 499 
    if (current_err != 0 && err == 0) 
#line 500 
                                      err = current_err; else ;
    ldv_57738: 
#line 501 
    ;
    
#line 494 
    i += 1;
    ldv_57740: 
#line 495 
    ;
    
#line 494 
    if (bnad->num_tx > (unsigned int)i) 
#line 496 
                                        goto ldv_57739; else 
#line 499 
                                                             goto ldv_57741;
    ldv_57741: 
#line 500 
    ;
  }
  else ;
  
#line 504 
  ldv_mutex_unlock_94(& bnad->conf_mutex);
  
#line 505 
  __retres = err;
  return_label: 
#line 505 
                return __retres;
}


#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static void bnad_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pauseparam)
{
  
#line 512 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 514 
  pauseparam->autoneg = 0U;
  
#line 515 
  pauseparam->rx_pause = (unsigned int)bnad->bna.enet.pause_config.rx_pause;
  
#line 516 
  pauseparam->tx_pause = (unsigned int)bnad->bna.enet.pause_config.tx_pause;
  
#line 517 
  return;
}


#line 520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pauseparam)
{
  int __retres;
  struct bna_pause_config pause_config;
  unsigned long flags;
  
#line 523 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 527 
  if (pauseparam->autoneg == 1U) {
    
#line 528 
    __retres = -22;
    
#line 528 
    goto return_label;
  }
  else ;
  
#line 530 
  ldv_mutex_lock_95(& bnad->conf_mutex);
  
#line 531 
  if (pauseparam->rx_pause != (unsigned int)bnad->bna.enet.pause_config.rx_pause || pauseparam->tx_pause != (unsigned int)bnad->bna.enet.pause_config.tx_pause) {
    
#line 533 
    pause_config.rx_pause = (enum bna_status)pauseparam->rx_pause;
    
#line 534 
    pause_config.tx_pause = (enum bna_status)pauseparam->tx_pause;
    
#line 535 
    ldv___ldv_spin_lock_96(& bnad->bna_lock);
    
#line 536 
    bna_enet_pause_config(& bnad->bna.enet,& pause_config);
    
#line 537 
    ldv_spin_unlock_irqrestore_97(& bnad->bna_lock,flags);
  }
  else ;
  
#line 539 
  ldv_mutex_unlock_98(& bnad->conf_mutex);
  
#line 540 
  __retres = 0;
  return_label: 
#line 540 
                return __retres;
}


#line 544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static void bnad_get_strings(struct net_device *netdev, u32 stringset, u8 *string)
{
  int i;
  int j;
  int q_num;
  u32 bmap_0;
  
#line 546 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 550 
  ldv_mutex_lock_99(& bnad->conf_mutex);
  
#line 552 
  switch (stringset) {
    size_t tmp_0;
    case (u32)1: 
#line 553 
    ;
    
#line 554 
    i = 0;
    
#line 554 
    goto ldv_57766;
    ldv_57765: 
#line 555 
    ;
    
#line 555 
    tmp_0 = strlen(bnad_net_stats_strings[i]);
    
#line 555 
    if ((long)(tmp_0 > 31UL) != 0L) {
      
#line 557 
      ldv_inline_asm();
      
#line 555 
      ;
    }
    else ;
    
#line 557 
    memcpy((void *)string,(void const *)bnad_net_stats_strings[i],32UL);
    
#line 559 
    string += 32U;
    
#line 554 
    i += 1;
    ldv_57766: 
#line 555 
    ;
    
#line 554 
    if ((unsigned int)i <= 195U) 
#line 556 
                                 goto ldv_57765; else 
#line 559 
                                                      goto ldv_57767;
    ldv_57767: 
#line 560 
    ;
    
#line 561 
    bmap_0 = bnad->bna.tx_mod.rid_mask;
    
#line 562 
    i = 0;
    
#line 562 
    goto ldv_57769;
    ldv_57768: 
#line 563 
    ;
    
#line 563 
    if ((bmap_0 & 1U) != 0U) {
      
#line 564 
      sprintf((char *)string,"txf%d_ucast_octets",i);
      
#line 565 
      string += 32U;
      
#line 566 
      sprintf((char *)string,"txf%d_ucast",i);
      
#line 567 
      string += 32U;
      
#line 568 
      sprintf((char *)string,"txf%d_ucast_vlan",i);
      
#line 569 
      string += 32U;
      
#line 570 
      sprintf((char *)string,"txf%d_mcast_octets",i);
      
#line 571 
      string += 32U;
      
#line 572 
      sprintf((char *)string,"txf%d_mcast",i);
      
#line 573 
      string += 32U;
      
#line 574 
      sprintf((char *)string,"txf%d_mcast_vlan",i);
      
#line 575 
      string += 32U;
      
#line 576 
      sprintf((char *)string,"txf%d_bcast_octets",i);
      
#line 577 
      string += 32U;
      
#line 578 
      sprintf((char *)string,"txf%d_bcast",i);
      
#line 579 
      string += 32U;
      
#line 580 
      sprintf((char *)string,"txf%d_bcast_vlan",i);
      
#line 581 
      string += 32U;
      
#line 582 
      sprintf((char *)string,"txf%d_errors",i);
      
#line 583 
      string += 32U;
      
#line 584 
      sprintf((char *)string,"txf%d_filter_vlan",i);
      
#line 585 
      string += 32U;
      
#line 586 
      sprintf((char *)string,"txf%d_filter_mac_sa",i);
      
#line 587 
      string += 32U;
    }
    else ;
    
#line 589 
    bmap_0 >>= 1;
    
#line 562 
    i += 1;
    ldv_57769: 
#line 563 
    ;
    
#line 562 
    if (bmap_0 != 0U) 
#line 564 
                      goto ldv_57768; else 
#line 567 
                                           goto ldv_57770;
    ldv_57770: 
#line 568 
    ;
    
#line 592 
    bmap_0 = bnad->bna.rx_mod.rid_mask;
    
#line 593 
    i = 0;
    
#line 593 
    goto ldv_57772;
    ldv_57771: 
#line 594 
    ;
    
#line 594 
    if ((bmap_0 & 1U) != 0U) {
      
#line 595 
      sprintf((char *)string,"rxf%d_ucast_octets",i);
      
#line 596 
      string += 32U;
      
#line 597 
      sprintf((char *)string,"rxf%d_ucast",i);
      
#line 598 
      string += 32U;
      
#line 599 
      sprintf((char *)string,"rxf%d_ucast_vlan",i);
      
#line 600 
      string += 32U;
      
#line 601 
      sprintf((char *)string,"rxf%d_mcast_octets",i);
      
#line 602 
      string += 32U;
      
#line 603 
      sprintf((char *)string,"rxf%d_mcast",i);
      
#line 604 
      string += 32U;
      
#line 605 
      sprintf((char *)string,"rxf%d_mcast_vlan",i);
      
#line 606 
      string += 32U;
      
#line 607 
      sprintf((char *)string,"rxf%d_bcast_octets",i);
      
#line 608 
      string += 32U;
      
#line 609 
      sprintf((char *)string,"rxf%d_bcast",i);
      
#line 610 
      string += 32U;
      
#line 611 
      sprintf((char *)string,"rxf%d_bcast_vlan",i);
      
#line 612 
      string += 32U;
      
#line 613 
      sprintf((char *)string,"rxf%d_frame_drops",i);
      
#line 614 
      string += 32U;
    }
    else ;
    
#line 616 
    bmap_0 >>= 1;
    
#line 593 
    i += 1;
    ldv_57772: 
#line 594 
    ;
    
#line 593 
    if (bmap_0 != 0U) 
#line 595 
                      goto ldv_57771; else 
#line 598 
                                           goto ldv_57773;
    ldv_57773: 
#line 599 
    ;
    
#line 619 
    q_num = 0;
    
#line 620 
    i = 0;
    
#line 620 
    goto ldv_57779;
    ldv_57778: 
#line 621 
    ;
    
#line 621 
    if (bnad->rx_info[i].rx == (struct bna_rx *)0) 
#line 622 
                                                   goto ldv_57774; else ;
    
#line 623 
    j = 0;
    
#line 623 
    goto ldv_57776;
    ldv_57775: 
#line 624 
    ;
    
#line 624 
    sprintf((char *)string,"cq%d_producer_index",q_num);
    
#line 625 
    string += 32U;
    
#line 626 
    sprintf((char *)string,"cq%d_consumer_index",q_num);
    
#line 627 
    string += 32U;
    
#line 628 
    sprintf((char *)string,"cq%d_hw_producer_index",q_num);
    
#line 630 
    string += 32U;
    
#line 631 
    sprintf((char *)string,"cq%d_intr",q_num);
    
#line 632 
    string += 32U;
    
#line 633 
    sprintf((char *)string,"cq%d_poll",q_num);
    
#line 634 
    string += 32U;
    
#line 635 
    sprintf((char *)string,"cq%d_schedule",q_num);
    
#line 636 
    string += 32U;
    
#line 637 
    sprintf((char *)string,"cq%d_keep_poll",q_num);
    
#line 638 
    string += 32U;
    
#line 639 
    sprintf((char *)string,"cq%d_complete",q_num);
    
#line 640 
    string += 32U;
    
#line 641 
    q_num += 1;
    
#line 623 
    j += 1;
    ldv_57776: 
#line 624 
    ;
    
#line 623 
    if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 625 
                                                goto ldv_57775; else 
                                                                  
#line 628 
                                                                  goto ldv_57777;
    ldv_57777: 
#line 629 
    ;
    ldv_57774: 
#line 630 
    ;
    
#line 620 
    i += 1;
    ldv_57779: 
#line 621 
    ;
    
#line 620 
    if (bnad->num_rx > (unsigned int)i) 
#line 622 
                                        goto ldv_57778; else 
#line 625 
                                                             goto ldv_57780;
    ldv_57780: 
#line 626 
    ;
    
#line 645 
    q_num = 0;
    
#line 646 
    i = 0;
    
#line 646 
    goto ldv_57786;
    ldv_57785: 
#line 647 
    ;
    
#line 647 
    if (bnad->rx_info[i].rx == (struct bna_rx *)0) 
#line 648 
                                                   goto ldv_57781; else ;
    
#line 649 
    j = 0;
    
#line 649 
    goto ldv_57783;
    ldv_57782: 
#line 650 
    ;
    
#line 650 
    sprintf((char *)string,"rxq%d_packets",q_num);
    
#line 651 
    string += 32U;
    
#line 652 
    sprintf((char *)string,"rxq%d_bytes",q_num);
    
#line 653 
    string += 32U;
    
#line 654 
    sprintf((char *)string,"rxq%d_packets_with_error",q_num);
    
#line 656 
    string += 32U;
    
#line 657 
    sprintf((char *)string,"rxq%d_allocbuf_failed",q_num);
    
#line 658 
    string += 32U;
    
#line 659 
    sprintf((char *)string,"rxq%d_producer_index",q_num);
    
#line 660 
    string += 32U;
    
#line 661 
    sprintf((char *)string,"rxq%d_consumer_index",q_num);
    
#line 662 
    string += 32U;
    
#line 663 
    q_num += 1;
    
#line 664 
    if ((bnad->rx_info[i].rx_ctrl[j].ccb != (struct bna_ccb *)0 && (bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1] != (struct bna_rcb *)0) && ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1])->rxq != (struct bna_rxq *)0) {
      
#line 669 
      sprintf((char *)string,"rxq%d_packets",q_num);
      
#line 670 
      string += 32U;
      
#line 671 
      sprintf((char *)string,"rxq%d_bytes",q_num);
      
#line 672 
      string += 32U;
      
#line 673 
      sprintf((char *)string,"rxq%d_packets_with_error",q_num);
      
#line 675 
      string += 32U;
      
#line 676 
      sprintf((char *)string,"rxq%d_allocbuf_failed",q_num);
      
#line 678 
      string += 32U;
      
#line 679 
      sprintf((char *)string,"rxq%d_producer_index",q_num);
      
#line 681 
      string += 32U;
      
#line 682 
      sprintf((char *)string,"rxq%d_consumer_index",q_num);
      
#line 684 
      string += 32U;
      
#line 685 
      q_num += 1;
    }
    else ;
    
#line 649 
    j += 1;
    ldv_57783: 
#line 650 
    ;
    
#line 649 
    if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 651 
                                                goto ldv_57782; else 
                                                                  
#line 654 
                                                                  goto ldv_57784;
    ldv_57784: 
#line 655 
    ;
    ldv_57781: 
#line 656 
    ;
    
#line 646 
    i += 1;
    ldv_57786: 
#line 647 
    ;
    
#line 646 
    if (bnad->num_rx > (unsigned int)i) 
#line 648 
                                        goto ldv_57785; else 
#line 651 
                                                             goto ldv_57787;
    ldv_57787: 
#line 652 
    ;
    
#line 690 
    q_num = 0;
    
#line 691 
    i = 0;
    
#line 691 
    goto ldv_57793;
    ldv_57792: 
#line 692 
    ;
    
#line 692 
    if (bnad->tx_info[i].tx == (struct bna_tx *)0) 
#line 693 
                                                   goto ldv_57788; else ;
    
#line 694 
    j = 0;
    
#line 694 
    goto ldv_57790;
    ldv_57789: 
#line 695 
    ;
    
#line 695 
    sprintf((char *)string,"txq%d_packets",q_num);
    
#line 696 
    string += 32U;
    
#line 697 
    sprintf((char *)string,"txq%d_bytes",q_num);
    
#line 698 
    string += 32U;
    
#line 699 
    sprintf((char *)string,"txq%d_producer_index",q_num);
    
#line 700 
    string += 32U;
    
#line 701 
    sprintf((char *)string,"txq%d_consumer_index",q_num);
    
#line 702 
    string += 32U;
    
#line 703 
    sprintf((char *)string,"txq%d_hw_consumer_index",q_num);
    
#line 705 
    string += 32U;
    
#line 706 
    q_num += 1;
    
#line 694 
    j += 1;
    ldv_57790: 
#line 695 
    ;
    
#line 694 
    if (bnad->num_txq_per_tx > (unsigned int)j) 
#line 696 
                                                goto ldv_57789; else 
                                                                  
#line 699 
                                                                  goto ldv_57791;
    ldv_57791: 
#line 700 
    ;
    ldv_57788: 
#line 701 
    ;
    
#line 691 
    i += 1;
    ldv_57793: 
#line 692 
    ;
    
#line 691 
    if (bnad->num_tx > (unsigned int)i) 
#line 693 
                                        goto ldv_57792; else 
#line 696 
                                                             goto ldv_57794;
    ldv_57794: 
#line 697 
    ;
    
#line 710 
    goto ldv_57795;
    default: 
#line 712 
    ;
    
#line 713 
    goto ldv_57795;
  }
  ldv_57795: 
#line 716 
  ;
  
#line 716 
  ldv_mutex_unlock_100(& bnad->conf_mutex);
  
#line 717 
  return;
}


#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_get_stats_count_locked(struct net_device *netdev)
{
  int i;
  int j;
  u32 bmap_0;
  
#line 722 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 723 
  int count = 0;
  
#line 723 
  int rxf_active_num = 0;
  
#line 723 
  int txf_active_num = 0;
  
#line 726 
  bmap_0 = bnad->bna.tx_mod.rid_mask;
  
#line 727 
  i = 0;
  
#line 727 
  goto ldv_57808;
  ldv_57807: 
#line 728 
  ;
  
#line 728 
  if ((bmap_0 & 1U) != 0U) 
#line 729 
                           txf_active_num += 1; else ;
  
#line 730 
  bmap_0 >>= 1;
  
#line 727 
  i += 1;
  ldv_57808: 
#line 728 
  ;
  
#line 727 
  if (bmap_0 != 0U) 
#line 729 
                    goto ldv_57807; else 
#line 732 
                                         goto ldv_57809;
  ldv_57809: 
#line 733 
  ;
  
#line 732 
  bmap_0 = bnad->bna.rx_mod.rid_mask;
  
#line 733 
  i = 0;
  
#line 733 
  goto ldv_57811;
  ldv_57810: 
#line 734 
  ;
  
#line 734 
  if ((bmap_0 & 1U) != 0U) 
#line 735 
                           rxf_active_num += 1; else ;
  
#line 736 
  bmap_0 >>= 1;
  
#line 733 
  i += 1;
  ldv_57811: 
#line 734 
  ;
  
#line 733 
  if (bmap_0 != 0U) 
#line 735 
                    goto ldv_57810; else 
#line 738 
                                         goto ldv_57812;
  ldv_57812: 
#line 739 
  ;
  
#line 738 
  count = (int)((unsigned int)(txf_active_num * 12 + rxf_active_num * 10) + 196U);
  
#line 742 
  i = 0;
  
#line 742 
  goto ldv_57818;
  ldv_57817: 
#line 743 
  ;
  
#line 743 
  if (bnad->rx_info[i].rx == (struct bna_rx *)0) 
#line 744 
                                                 goto ldv_57813; else ;
  
#line 745 
  count = (int)(bnad->num_rxp_per_rx * 8U + (unsigned int)count);
  
#line 746 
  count = (int)(bnad->num_rxp_per_rx * 6U + (unsigned int)count);
  
#line 747 
  j = 0;
  
#line 747 
  goto ldv_57815;
  ldv_57814: 
#line 748 
  ;
  
#line 748 
  if ((bnad->rx_info[i].rx_ctrl[j].ccb != (struct bna_ccb *)0 && (bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1] != (struct bna_rcb *)0) && ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1])->rxq != (struct bna_rxq *)0) 
    
#line 751 
    count += 6; else ;
  
#line 747 
  j += 1;
  ldv_57815: 
#line 748 
  ;
  
#line 747 
  if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 749 
                                              goto ldv_57814; else 
#line 752 
                                                                   goto ldv_57816;
  ldv_57816: 
#line 753 
  ;
  ldv_57813: 
#line 754 
  ;
  
#line 742 
  i += 1;
  ldv_57818: 
#line 743 
  ;
  
#line 742 
  if (bnad->num_rx > (unsigned int)i) 
#line 744 
                                      goto ldv_57817; else 
#line 747 
                                                           goto ldv_57819;
  ldv_57819: 
#line 748 
  ;
  
#line 754 
  i = 0;
  
#line 754 
  goto ldv_57822;
  ldv_57821: 
#line 755 
  ;
  
#line 755 
  if (bnad->tx_info[i].tx == (struct bna_tx *)0) 
#line 756 
                                                 goto ldv_57820; else ;
  
#line 757 
  count = (int)(bnad->num_txq_per_tx * 5U + (unsigned int)count);
  ldv_57820: 
#line 758 
  ;
  
#line 754 
  i += 1;
  ldv_57822: 
#line 755 
  ;
  
#line 754 
  if (bnad->num_tx > (unsigned int)i) 
#line 756 
                                      goto ldv_57821; else 
#line 759 
                                                           goto ldv_57823;
  ldv_57823: 
#line 760 
  ;
  
#line 759 
  return count;
}


#line 763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_per_q_stats_fill(struct bnad *bnad, u64 *buf, int bi)
{
  int i;
  int j;
  
#line 766 
  struct bna_rcb *rcb = (struct bna_rcb *)0;
  
#line 767 
  struct bna_tcb *tcb = (struct bna_tcb *)0;
  
#line 769 
  i = 0;
  
#line 769 
  goto ldv_57838;
  ldv_57837: 
#line 770 
  ;
  
#line 770 
  if (bnad->rx_info[i].rx == (struct bna_rx *)0) 
#line 771 
                                                 goto ldv_57833; else ;
  
#line 772 
  j = 0;
  
#line 772 
  goto ldv_57835;
  ldv_57834: 
#line 773 
  ;
  
#line 773 
  if ((bnad->rx_info[i].rx_ctrl[j].ccb != (struct bna_ccb *)0 && (bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0] != (struct bna_rcb *)0) && ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0])->rxq != (struct bna_rxq *)0) {
    int tmp;
    int tmp_0;
    int tmp_1;
    int tmp_2;
    int tmp_3;
    int tmp_4;
    int tmp_5;
    int tmp_6;
    
#line 776 
    tmp = bi;
    
#line 776 
    bi += 1;
    
#line 776 
    *(buf + tmp) = (unsigned long long)(bnad->rx_info[i].rx_ctrl[j].ccb)->producer_index;
    
#line 778 
    tmp_0 = bi;
    
#line 778 
    bi += 1;
    
#line 778 
    *(buf + tmp_0) = 0ULL;
    
#line 779 
    tmp_1 = bi;
    
#line 779 
    bi += 1;
    
#line 779 
    *(buf + tmp_1) = (unsigned long long)*((bnad->rx_info[i].rx_ctrl[j].ccb)->hw_producer_index);
    
#line 782 
    tmp_2 = bi;
    
#line 782 
    bi += 1;
    
#line 782 
    *(buf + tmp_2) = bnad->rx_info[i].rx_ctrl[j].rx_intr_ctr;
    
#line 784 
    tmp_3 = bi;
    
#line 784 
    bi += 1;
    
#line 784 
    *(buf + tmp_3) = bnad->rx_info[i].rx_ctrl[j].rx_poll_ctr;
    
#line 786 
    tmp_4 = bi;
    
#line 786 
    bi += 1;
    
#line 786 
    *(buf + tmp_4) = bnad->rx_info[i].rx_ctrl[j].rx_schedule;
    
#line 788 
    tmp_5 = bi;
    
#line 788 
    bi += 1;
    
#line 788 
    *(buf + tmp_5) = bnad->rx_info[i].rx_ctrl[j].rx_keep_poll;
    
#line 790 
    tmp_6 = bi;
    
#line 790 
    bi += 1;
    
#line 790 
    *(buf + tmp_6) = bnad->rx_info[i].rx_ctrl[j].rx_complete;
  }
  else ;
  
#line 772 
  j += 1;
  ldv_57835: 
#line 773 
  ;
  
#line 772 
  if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 774 
                                              goto ldv_57834; else 
#line 777 
                                                                   goto ldv_57836;
  ldv_57836: 
#line 778 
  ;
  ldv_57833: 
#line 779 
  ;
  
#line 769 
  i += 1;
  ldv_57838: 
#line 770 
  ;
  
#line 769 
  if (bnad->num_rx > (unsigned int)i) 
#line 771 
                                      goto ldv_57837; else 
#line 774 
                                                           goto ldv_57839;
  ldv_57839: 
#line 775 
  ;
  
#line 794 
  i = 0;
  
#line 794 
  goto ldv_57845;
  ldv_57844: 
#line 795 
  ;
  
#line 795 
  if (bnad->rx_info[i].rx == (struct bna_rx *)0) 
#line 796 
                                                 goto ldv_57840; else ;
  
#line 797 
  j = 0;
  
#line 797 
  goto ldv_57842;
  ldv_57841: 
#line 798 
  ;
  
#line 798 
  if (bnad->rx_info[i].rx_ctrl[j].ccb != (struct bna_ccb *)0) {
    
#line 799 
    if ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0] != (struct bna_rcb *)0 && ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0])->rxq != (struct bna_rxq *)0) {
      int tmp_7;
      int tmp_8;
      int tmp_9;
      int tmp_10;
      int tmp_11;
      int tmp_12;
      
#line 802 
      rcb = (bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0];
      
#line 804 
      tmp_7 = bi;
      
#line 804 
      bi += 1;
      
#line 804 
      *(buf + tmp_7) = (rcb->rxq)->rx_packets;
      
#line 805 
      tmp_8 = bi;
      
#line 805 
      bi += 1;
      
#line 805 
      *(buf + tmp_8) = (rcb->rxq)->rx_bytes;
      
#line 806 
      tmp_9 = bi;
      
#line 806 
      bi += 1;
      
#line 806 
      *(buf + tmp_9) = (rcb->rxq)->rx_packets_with_error;
      
#line 808 
      tmp_10 = bi;
      
#line 808 
      bi += 1;
      
#line 808 
      *(buf + tmp_10) = (rcb->rxq)->rxbuf_alloc_failed;
      
#line 810 
      tmp_11 = bi;
      
#line 810 
      bi += 1;
      
#line 810 
      *(buf + tmp_11) = (unsigned long long)rcb->producer_index;
      
#line 811 
      tmp_12 = bi;
      
#line 811 
      bi += 1;
      
#line 811 
      *(buf + tmp_12) = (unsigned long long)rcb->consumer_index;
    }
    else ;
    
#line 813 
    if ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1] != (struct bna_rcb *)0 && ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1])->rxq != (struct bna_rxq *)0) {
      int tmp_13;
      int tmp_14;
      int tmp_15;
      int tmp_16;
      int tmp_17;
      int tmp_18;
      
#line 816 
      rcb = (bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1];
      
#line 818 
      tmp_13 = bi;
      
#line 818 
      bi += 1;
      
#line 818 
      *(buf + tmp_13) = (rcb->rxq)->rx_packets;
      
#line 819 
      tmp_14 = bi;
      
#line 819 
      bi += 1;
      
#line 819 
      *(buf + tmp_14) = (rcb->rxq)->rx_bytes;
      
#line 820 
      tmp_15 = bi;
      
#line 820 
      bi += 1;
      
#line 820 
      *(buf + tmp_15) = (rcb->rxq)->rx_packets_with_error;
      
#line 822 
      tmp_16 = bi;
      
#line 822 
      bi += 1;
      
#line 822 
      *(buf + tmp_16) = (rcb->rxq)->rxbuf_alloc_failed;
      
#line 824 
      tmp_17 = bi;
      
#line 824 
      bi += 1;
      
#line 824 
      *(buf + tmp_17) = (unsigned long long)rcb->producer_index;
      
#line 825 
      tmp_18 = bi;
      
#line 825 
      bi += 1;
      
#line 825 
      *(buf + tmp_18) = (unsigned long long)rcb->consumer_index;
    }
    else ;
  }
  else ;
  
#line 797 
  j += 1;
  ldv_57842: 
#line 798 
  ;
  
#line 797 
  if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 799 
                                              goto ldv_57841; else 
#line 802 
                                                                   goto ldv_57843;
  ldv_57843: 
#line 803 
  ;
  ldv_57840: 
#line 804 
  ;
  
#line 794 
  i += 1;
  ldv_57845: 
#line 795 
  ;
  
#line 794 
  if (bnad->num_rx > (unsigned int)i) 
#line 796 
                                      goto ldv_57844; else 
#line 799 
                                                           goto ldv_57846;
  ldv_57846: 
#line 800 
  ;
  
#line 830 
  i = 0;
  
#line 830 
  goto ldv_57852;
  ldv_57851: 
#line 831 
  ;
  
#line 831 
  if (bnad->tx_info[i].tx == (struct bna_tx *)0) 
#line 832 
                                                 goto ldv_57847; else ;
  
#line 833 
  j = 0;
  
#line 833 
  goto ldv_57849;
  ldv_57848: 
#line 834 
  ;
  
#line 834 
  if (bnad->tx_info[i].tcb[j] != (struct bna_tcb *)0 && (bnad->tx_info[i].tcb[j])->txq != (struct bna_txq *)0) {
    int tmp_19;
    int tmp_20;
    int tmp_21;
    int tmp_22;
    int tmp_23;
    
#line 836 
    tcb = bnad->tx_info[i].tcb[j];
    
#line 837 
    tmp_19 = bi;
    
#line 837 
    bi += 1;
    
#line 837 
    *(buf + tmp_19) = (tcb->txq)->tx_packets;
    
#line 838 
    tmp_20 = bi;
    
#line 838 
    bi += 1;
    
#line 838 
    *(buf + tmp_20) = (tcb->txq)->tx_bytes;
    
#line 839 
    tmp_21 = bi;
    
#line 839 
    bi += 1;
    
#line 839 
    *(buf + tmp_21) = (unsigned long long)tcb->producer_index;
    
#line 840 
    tmp_22 = bi;
    
#line 840 
    bi += 1;
    
#line 840 
    *(buf + tmp_22) = (unsigned long long)tcb->consumer_index;
    
#line 841 
    tmp_23 = bi;
    
#line 841 
    bi += 1;
    
#line 841 
    *(buf + tmp_23) = (unsigned long long)*(tcb->hw_consumer_index);
  }
  else ;
  
#line 833 
  j += 1;
  ldv_57849: 
#line 834 
  ;
  
#line 833 
  if (bnad->num_txq_per_tx > (unsigned int)j) 
#line 835 
                                              goto ldv_57848; else 
#line 838 
                                                                   goto ldv_57850;
  ldv_57850: 
#line 839 
  ;
  ldv_57847: 
#line 840 
  ;
  
#line 830 
  i += 1;
  ldv_57852: 
#line 831 
  ;
  
#line 830 
  if (bnad->num_tx > (unsigned int)i) 
#line 832 
                                      goto ldv_57851; else 
#line 835 
                                                           goto ldv_57853;
  ldv_57853: 
#line 836 
  ;
  
#line 845 
  return bi;
}


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static void bnad_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *buf)
{
  int i;
  int j;
  int bi;
  unsigned long flags;
  struct rtnl_link_stats64 *net_stats64;
  u64 *stats64;
  u32 bmap_0;
  int tmp_0;
  bool tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 852 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 859 
  ldv_mutex_lock_101(& bnad->conf_mutex);
  
#line 860 
  tmp_0 = bnad_get_stats_count_locked(netdev);
  
#line 860 
  ;
  
#line 860 
  if ((unsigned int)tmp_0 != stats->n_stats) {
    
#line 861 
    ldv_mutex_unlock_102(& bnad->conf_mutex);
    
#line 862 
    goto return_label;
  }
  else ;
  
#line 869 
  ldv___ldv_spin_lock_103(& bnad->bna_lock);
  
#line 870 
  bi = 0;
  
#line 871 
  memset((void *)buf,0,(unsigned long)stats->n_stats * 8UL);
  
#line 873 
  net_stats64 = (struct rtnl_link_stats64 *)buf;
  
#line 874 
  bnad_netdev_qstats_fill(bnad,net_stats64);
  
#line 875 
  bnad_netdev_hwstats_fill(bnad,net_stats64);
  
#line 877 
  bi = 23;
  
#line 880 
  tmp_1 = netif_queue_stopped((struct net_device const *)netdev);
  
#line 880 
  bnad->stats.drv_stats.netif_queue_stopped = (unsigned long long)tmp_1;
  
#line 883 
  stats64 = (u64 *)(& bnad->stats.drv_stats);
  
#line 884 
  i = 0;
  
#line 884 
  goto ldv_57868;
  ldv_57867: 
#line 885 
  ;
  
#line 885 
  tmp_2 = bi;
  
#line 885 
  bi += 1;
  
#line 885 
  *(buf + tmp_2) = *(stats64 + i);
  
#line 884 
  i += 1;
  ldv_57868: 
#line 885 
  ;
  
#line 884 
  if ((unsigned int)i <= 32U) 
#line 886 
                              goto ldv_57867; else 
#line 889 
                                                   goto ldv_57869;
  ldv_57869: 
#line 890 
  ;
  
#line 888 
  stats64 = (u64 *)(& (bnad->stats.bna_stats)->hw_stats);
  
#line 889 
  i = 0;
  
#line 889 
  goto ldv_57871;
  ldv_57870: 
#line 890 
  ;
  
#line 893 
  tmp_3 = bi;
  
#line 893 
  bi += 1;
  
#line 893 
  *(buf + tmp_3) = *(stats64 + i);
  
#line 892 
  i += 1;
  ldv_57871: 
#line 893 
  ;
  
#line 889 
  if ((unsigned int)i <= 139U) 
#line 892 
                               goto ldv_57870; else 
#line 895 
                                                    goto ldv_57872;
  ldv_57872: 
#line 896 
  ;
  
#line 896 
  bmap_0 = bnad->bna.tx_mod.rid_mask;
  
#line 897 
  i = 0;
  
#line 897 
  goto ldv_57877;
  ldv_57876: 
#line 898 
  ;
  
#line 898 
  if ((bmap_0 & 1U) != 0U) {
    int tmp_4;
    
#line 899 
    stats64 = (u64 *)(& (bnad->stats.bna_stats)->hw_stats.txf_stats[i]);
    
#line 901 
    j = 0;
    
#line 901 
    goto ldv_57874;
    ldv_57873: 
#line 902 
    ;
    
#line 903 
    tmp_4 = bi;
    
#line 903 
    bi += 1;
    
#line 903 
    *(buf + tmp_4) = *(stats64 + j);
    
#line 902 
    j += 1;
    ldv_57874: 
#line 903 
    ;
    
#line 901 
    if ((unsigned int)j <= 11U) 
#line 903 
                                goto ldv_57873; else 
#line 906 
                                                     goto ldv_57875;
    ldv_57875: 
#line 907 
    ;
  }
  else ;
  
#line 905 
  bmap_0 >>= 1;
  
#line 897 
  i += 1;
  ldv_57877: 
#line 898 
  ;
  
#line 897 
  if (bmap_0 != 0U) 
#line 899 
                    goto ldv_57876; else 
#line 902 
                                         goto ldv_57878;
  ldv_57878: 
#line 903 
  ;
  
#line 909 
  bmap_0 = bnad->bna.rx_mod.rid_mask;
  
#line 910 
  i = 0;
  
#line 910 
  goto ldv_57883;
  ldv_57882: 
#line 911 
  ;
  
#line 911 
  if ((bmap_0 & 1U) != 0U) {
    int tmp_5;
    
#line 912 
    stats64 = (u64 *)(& (bnad->stats.bna_stats)->hw_stats.rxf_stats[i]);
    
#line 914 
    j = 0;
    
#line 914 
    goto ldv_57880;
    ldv_57879: 
#line 915 
    ;
    
#line 916 
    tmp_5 = bi;
    
#line 916 
    bi += 1;
    
#line 916 
    *(buf + tmp_5) = *(stats64 + j);
    
#line 915 
    j += 1;
    ldv_57880: 
#line 916 
    ;
    
#line 914 
    if ((unsigned int)j <= 9U) 
#line 916 
                               goto ldv_57879; else 
#line 919 
                                                    goto ldv_57881;
    ldv_57881: 
#line 920 
    ;
  }
  else ;
  
#line 918 
  bmap_0 >>= 1;
  
#line 910 
  i += 1;
  ldv_57883: 
#line 911 
  ;
  
#line 910 
  if (bmap_0 != 0U) 
#line 912 
                    goto ldv_57882; else 
#line 915 
                                         goto ldv_57884;
  ldv_57884: 
#line 916 
  ;
  
#line 922 
  bi = bnad_per_q_stats_fill(bnad,buf,bi);
  
#line 924 
  ldv_spin_unlock_irqrestore_104(& bnad->bna_lock,flags);
  
#line 926 
  ldv_mutex_unlock_105(& bnad->conf_mutex);
  return_label: 
#line 927 
                return;
}


#line 930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 932 
  switch (sset) {
    int tmp;
    case 1: 
#line 933 
    ;
    
#line 934 
    tmp = bnad_get_stats_count_locked(netdev);
    
#line 934 
    __retres = tmp;
    
#line 934 
    goto return_label;
    default: 
#line 935 
    ;
    
#line 936 
    __retres = -95;
    
#line 936 
    goto return_label;
  }
  return_label: 
#line 932 
                return __retres;
}


#line 941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static u32 bnad_get_flash_partition_by_offset(struct bnad *bnad, u32 offset, u32 *base_offset)
{
  u32 __retres;
  struct bfa_flash_attr *flash_attr;
  struct bnad_iocmd_comp fcomp;
  u32 i;
  u32 ret;
  enum bfa_status tmp_0;
  
#line 946 
  u32 flash_part = 0U;
  
#line 947 
  unsigned long flags = 0UL;
  
#line 949 
  flash_attr = (struct bfa_flash_attr *)kzalloc(1032UL,208U);
  
#line 950 
  if (flash_attr == (struct bfa_flash_attr *)0) {
    
#line 951 
    __retres = 0U;
    
#line 951 
    goto return_label;
  }
  else ;
  
#line 953 
  fcomp.bnad = bnad;
  
#line 954 
  fcomp.comp_status = 0;
  
#line 956 
  init_completion(& fcomp.comp);
  
#line 957 
  ldv___ldv_spin_lock_106(& bnad->bna_lock);
  
#line 958 
  tmp_0 = bfa_nw_flash_get_attr(& bnad->bna.flash,flash_attr,& bnad_cb_completion,(void *)(& fcomp));
  
#line 958 
  ret = (unsigned int)tmp_0;
  
#line 960 
  if (ret != 0U) {
    
#line 961 
    ldv_spin_unlock_irqrestore_107(& bnad->bna_lock,flags);
    
#line 962 
    kfree((void const *)flash_attr);
    
#line 963 
    __retres = 0U;
    
#line 963 
    goto return_label;
  }
  else ;
  
#line 965 
  ldv_spin_unlock_irqrestore_108(& bnad->bna_lock,flags);
  
#line 966 
  wait_for_completion(& fcomp.comp);
  
#line 967 
  ret = (unsigned int)fcomp.comp_status;
  
#line 970 
  if (ret == 0U) {
    
#line 971 
    i = 0U;
    
#line 971 
    goto ldv_57904;
    ldv_57903: 
#line 972 
    ;
    
#line 972 
    if (flash_attr->part[i].part_off <= offset && flash_attr->part[i].part_off + flash_attr->part[i].part_size > offset) {
      
#line 975 
      flash_part = flash_attr->part[i].part_type;
      
#line 976 
      *base_offset = flash_attr->part[i].part_off;
      
#line 977 
      goto ldv_57902;
    }
    else ;
    
#line 971 
    i += 1U;
    ldv_57904: 
#line 972 
    ;
    
#line 971 
    if (flash_attr->npart > i) 
#line 973 
                               goto ldv_57903; else 
#line 976 
                                                    goto ldv_57902;
    ldv_57902: 
#line 977 
    ;
  }
  else ;
  
#line 981 
  kfree((void const *)flash_attr);
  
#line 982 
  __retres = flash_part;
  return_label: 
#line 982 
                return __retres;
}


#line 986  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_get_eeprom_len(struct net_device *netdev)
{
  int __retres;
  
#line 988 
  __retres = 4194304;
  
#line 988 
  return __retres;
}


#line 992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_get_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  struct bnad_iocmd_comp fcomp;
  enum bfa_status tmp_0;
  
#line 995 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 997 
  u32 flash_part = 0U;
  
#line 997 
  u32 base_offset = 0U;
  
#line 998 
  unsigned long flags = 0UL;
  
#line 999 
  int ret = 0;
  
#line 1002 
  eeprom->magic = (unsigned int)((int)(bnad->pcidev)->vendor | ((int)(bnad->pcidev)->device << 16));
  
#line 1005 
  flash_part = bnad_get_flash_partition_by_offset(bnad,eeprom->offset,& base_offset);
  
#line 1007 
  if (flash_part == 0U) {
    
#line 1008 
    __retres = -14;
    
#line 1008 
    goto return_label;
  }
  else ;
  
#line 1010 
  fcomp.bnad = bnad;
  
#line 1011 
  fcomp.comp_status = 0;
  
#line 1013 
  init_completion(& fcomp.comp);
  
#line 1014 
  ldv___ldv_spin_lock_109(& bnad->bna_lock);
  
#line 1015 
  tmp_0 = bfa_nw_flash_read_part(& bnad->bna.flash,flash_part,(unsigned char)((int)((unsigned char)bnad->id)),(void *)bytes,eeprom->len,eeprom->offset - base_offset,& bnad_cb_completion,(void *)(& fcomp));
  
#line 1015 
  ret = (int)tmp_0;
  
#line 1019 
  if (ret != 0) {
    
#line 1020 
    ldv_spin_unlock_irqrestore_110(& bnad->bna_lock,flags);
    
#line 1021 
    goto done;
  }
  else ;
  
#line 1024 
  ldv_spin_unlock_irqrestore_111(& bnad->bna_lock,flags);
  
#line 1025 
  wait_for_completion(& fcomp.comp);
  
#line 1026 
  ret = fcomp.comp_status;
  done: 
#line 1027 
  ;
  
#line 1028 
  __retres = ret;
  return_label: 
#line 1028 
                return __retres;
}


#line 1032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_set_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  struct bnad_iocmd_comp fcomp;
  enum bfa_status tmp_0;
  
#line 1035 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 1037 
  u32 flash_part = 0U;
  
#line 1037 
  u32 base_offset = 0U;
  
#line 1038 
  unsigned long flags = 0UL;
  
#line 1039 
  int ret = 0;
  
#line 1042 
  if (eeprom->magic != (unsigned int)((int)(bnad->pcidev)->vendor | ((int)(bnad->pcidev)->device << 16))) {
    
#line 1044 
    __retres = -22;
    
#line 1044 
    goto return_label;
  }
  else ;
  
#line 1047 
  flash_part = bnad_get_flash_partition_by_offset(bnad,eeprom->offset,& base_offset);
  
#line 1049 
  if (flash_part == 0U) {
    
#line 1050 
    __retres = -14;
    
#line 1050 
    goto return_label;
  }
  else ;
  
#line 1052 
  fcomp.bnad = bnad;
  
#line 1053 
  fcomp.comp_status = 0;
  
#line 1055 
  init_completion(& fcomp.comp);
  
#line 1056 
  ldv___ldv_spin_lock_112(& bnad->bna_lock);
  
#line 1057 
  tmp_0 = bfa_nw_flash_update_part(& bnad->bna.flash,flash_part,(unsigned char)((int)((unsigned char)bnad->id)),(void *)bytes,eeprom->len,eeprom->offset - base_offset,& bnad_cb_completion,(void *)(& fcomp));
  
#line 1057 
  ret = (int)tmp_0;
  
#line 1061 
  if (ret != 0) {
    
#line 1062 
    ldv_spin_unlock_irqrestore_113(& bnad->bna_lock,flags);
    
#line 1063 
    goto done;
  }
  else ;
  
#line 1066 
  ldv_spin_unlock_irqrestore_114(& bnad->bna_lock,flags);
  
#line 1067 
  wait_for_completion(& fcomp.comp);
  
#line 1068 
  ret = fcomp.comp_status;
  done: 
#line 1069 
  ;
  
#line 1070 
  __retres = ret;
  return_label: 
#line 1070 
                return __retres;
}


#line 1074  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static int bnad_flash_device(struct net_device *netdev, struct ethtool_flash *eflash)
{
  struct bnad_iocmd_comp fcomp;
  struct firmware const *fw;
  enum bfa_status tmp_0;
  
#line 1076 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 1079 
  int ret = 0;
  
#line 1081 
  ret = request_firmware(& fw,(char const *)(& eflash->data),& (bnad->pcidev)->dev);
  
#line 1082 
  if (ret != 0) {
    
#line 1083 
    netdev_err((struct net_device const *)netdev,"can\'t load firmware %s\n",(char *)(& eflash->data));
    
#line 1084 
    goto out;
  }
  else ;
  
#line 1087 
  fcomp.bnad = bnad;
  
#line 1088 
  fcomp.comp_status = 0;
  
#line 1090 
  init_completion(& fcomp.comp);
  
#line 1091 
  ldv_spin_lock_irq_115(& bnad->bna_lock);
  
#line 1092 
  tmp_0 = bfa_nw_flash_update_part(& bnad->bna.flash,2U,(unsigned char)((int)((unsigned char)bnad->id)),(void *)fw->data,(unsigned int)fw->size,0U,& bnad_cb_completion,(void *)(& fcomp));
  
#line 1092 
  ret = (int)tmp_0;
  
#line 1095 
  if (ret != 0) {
    
#line 1096 
    netdev_warn((struct net_device const *)netdev,"flash update failed with err=%d\n",ret);
    
#line 1097 
    ret = -5;
    
#line 1098 
    ldv_spin_unlock_irq_116(& bnad->bna_lock);
    
#line 1099 
    goto out;
  }
  else ;
  
#line 1102 
  ldv_spin_unlock_irq_117(& bnad->bna_lock);
  
#line 1103 
  wait_for_completion(& fcomp.comp);
  
#line 1104 
  if (fcomp.comp_status != 0) {
    
#line 1105 
    ret = -5;
    
#line 1106 
    netdev_warn((struct net_device const *)netdev,"firmware image update failed with err=%d\n",fcomp.comp_status);
  }
  else ;
  out: 
#line 1110 
  ;
  
#line 1111 
  release_firmware(fw);
  
#line 1112 
  return ret;
}


#line 1115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
static struct ethtool_ops const bnad_ethtool_ops = {.get_settings = & bnad_get_settings, .set_settings = & bnad_set_settings, .get_drvinfo = & bnad_get_drvinfo, .get_regs_len = (int (*)(struct net_device *))0, .get_regs = (void (*)(struct net_device *, struct ethtool_regs *, void *))0, .get_wol = & bnad_get_wol, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = & bnad_get_eeprom_len, .get_eeprom = & bnad_get_eeprom, .set_eeprom = & bnad_set_eeprom, .get_coalesce = & bnad_get_coalesce, .set_coalesce = & bnad_set_coalesce, .get_ringparam = & bnad_get_ringparam, .set_ringparam = & bnad_set_ringparam, .get_pauseparam = & bnad_get_pauseparam, .set_pauseparam = & bnad_set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & bnad_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & bnad_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & bnad_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = & bnad_flash_device, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & ethtool_op_get_ts_info, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 1138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_ethtool.c"
void bnad_set_ethtool_ops(struct net_device *netdev)
{
  
#line 1140 
  netdev->ethtool_ops = & bnad_ethtool_ops;
  
#line 1141 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_10)(struct net_device *) = & ethtool_op_get_link;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int (*ldv_emg_alias_ethtool_op_get_ts_info_25)(struct net_device *, struct ethtool_ts_info *) = & ethtool_op_get_ts_info;

#line 60 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
void ldv_emg_wrapper_bnad_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 77 
  bnad_get_ethtool_stats(arg0,arg1,arg2);
  
#line 78 
  return;
}


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_get_eeprom_len_29(struct net_device *arg0)
{
  int tmp;
  
#line 82 
  tmp = bnad_get_eeprom_len(arg0);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
void ldv_emg_wrapper_bnad_get_drvinfo_12(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 87 
  bnad_get_drvinfo(arg0,arg1);
  
#line 88 
  return;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 92 
  tmp = bnad_set_settings(arg0,arg1);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_set_coalesce_26(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 97 
  tmp = bnad_set_coalesce(arg0,arg1);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_get_sset_count_24(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 102 
  tmp = bnad_get_sset_count(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
void ldv_emg_wrapper_bnad_get_wol_19(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 107 
  bnad_get_wol(arg0,arg1);
  
#line 108 
  return;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_set_eeprom_13(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 112 
  tmp = bnad_set_eeprom(arg0,arg1,arg2);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_get_coalesce_21(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 117 
  tmp = bnad_get_coalesce(arg0,arg1);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_flash_device_22(struct net_device *arg0, struct ethtool_flash *arg1)
{
  int tmp;
  
#line 122 
  tmp = bnad_flash_device(arg0,arg1);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_get_settings_17(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 127 
  tmp = bnad_get_settings(arg0,arg1);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
void ldv_emg_wrapper_bnad_get_strings_5(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 132 
  bnad_get_strings(arg0,arg1,arg2);
  
#line 133 
  return;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
void ldv_emg_wrapper_bnad_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 137 
  bnad_get_pauseparam(arg0,arg1);
  
#line 138 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_set_pauseparam_18(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 142 
  tmp = bnad_set_pauseparam(arg0,arg1);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_set_ringparam_14(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 147 
  tmp = bnad_set_ringparam(arg0,arg1);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
int ldv_emg_wrapper_bnad_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 152 
  tmp = bnad_get_eeprom(arg0,arg1,arg2);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
void ldv_emg_wrapper_bnad_get_ringparam_7(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 157 
  bnad_get_ringparam(arg0,arg1);
  
#line 158 
  return;
}


#line 602  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 605 
  tmp = ldv_kzalloc(size,flags);
  
#line 605 
  return tmp;
}


#line 858  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_75(spinlock_t *ldv_func_arg1)
{
  
#line 862 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 864 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 865 
  return;
}


#line 868  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_76(spinlock_t *lock, unsigned long flags)
{
  
#line 872 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 874 
  spin_unlock_irqrestore(lock,flags);
  
#line 875 
  return;
}


#line 878  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 882 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 884 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 885 
  return;
}


#line 888  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 892 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 894 
  spin_unlock_irqrestore(lock,flags);
  
#line 895 
  return;
}


#line 898  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1)
{
  
#line 902 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 903 
  return;
}


#line 906  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_80(spinlock_t *ldv_func_arg1)
{
  
#line 910 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 912 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 913 
  return;
}


#line 916  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_81(spinlock_t *lock, unsigned long flags)
{
  
#line 920 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 922 
  spin_unlock_irqrestore(lock,flags);
  
#line 923 
  return;
}


#line 926  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static int ldv_del_timer_sync_82(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 930 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 930 
  return tmp;
}


#line 934  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1)
{
  
#line 938 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 940 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 941 
  return;
}


#line 944  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_84(spinlock_t *lock, unsigned long flags)
{
  
#line 948 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 950 
  spin_unlock_irqrestore(lock,flags);
  
#line 951 
  return;
}


#line 954  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1)
{
  
#line 958 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 959 
  return;
}


#line 962  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_lock_86(struct mutex *ldv_func_arg1)
{
  
#line 966 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 967 
  return;
}


#line 970  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_87(struct mutex *ldv_func_arg1)
{
  
#line 974 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 975 
  return;
}


#line 978  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_88(struct mutex *ldv_func_arg1)
{
  
#line 982 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 983 
  return;
}


#line 986  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_89(struct mutex *ldv_func_arg1)
{
  
#line 990 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 991 
  return;
}


#line 994  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_90(struct mutex *ldv_func_arg1)
{
  
#line 998 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 999 
  return;
}


#line 1002  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_91(spinlock_t *ldv_func_arg1)
{
  
#line 1006 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1008 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1009 
  return;
}


#line 1012  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_92(spinlock_t *lock, unsigned long flags)
{
  
#line 1016 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1018 
  spin_unlock_irqrestore(lock,flags);
  
#line 1019 
  return;
}


#line 1022  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_93(struct mutex *ldv_func_arg1)
{
  
#line 1026 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1027 
  return;
}


#line 1030  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_94(struct mutex *ldv_func_arg1)
{
  
#line 1034 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1035 
  return;
}


#line 1038  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_lock_95(struct mutex *ldv_func_arg1)
{
  
#line 1042 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1043 
  return;
}


#line 1046  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_96(spinlock_t *ldv_func_arg1)
{
  
#line 1050 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1052 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1053 
  return;
}


#line 1056  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_97(spinlock_t *lock, unsigned long flags)
{
  
#line 1060 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1062 
  spin_unlock_irqrestore(lock,flags);
  
#line 1063 
  return;
}


#line 1066  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_98(struct mutex *ldv_func_arg1)
{
  
#line 1070 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1071 
  return;
}


#line 1074  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_lock_99(struct mutex *ldv_func_arg1)
{
  
#line 1078 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1079 
  return;
}


#line 1082  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_100(struct mutex *ldv_func_arg1)
{
  
#line 1086 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1087 
  return;
}


#line 1090  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_lock_101(struct mutex *ldv_func_arg1)
{
  
#line 1094 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1095 
  return;
}


#line 1098  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_102(struct mutex *ldv_func_arg1)
{
  
#line 1102 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1103 
  return;
}


#line 1106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_103(spinlock_t *ldv_func_arg1)
{
  
#line 1110 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1112 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1113 
  return;
}


#line 1116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_104(spinlock_t *lock, unsigned long flags)
{
  
#line 1120 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1122 
  spin_unlock_irqrestore(lock,flags);
  
#line 1123 
  return;
}


#line 1126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_mutex_unlock_105(struct mutex *ldv_func_arg1)
{
  
#line 1130 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1131 
  return;
}


#line 1134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_106(spinlock_t *ldv_func_arg1)
{
  
#line 1138 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1140 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1141 
  return;
}


#line 1144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_107(spinlock_t *lock, unsigned long flags)
{
  
#line 1148 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1150 
  spin_unlock_irqrestore(lock,flags);
  
#line 1151 
  return;
}


#line 1154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_108(spinlock_t *lock, unsigned long flags)
{
  
#line 1158 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1160 
  spin_unlock_irqrestore(lock,flags);
  
#line 1161 
  return;
}


#line 1164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_109(spinlock_t *ldv_func_arg1)
{
  
#line 1168 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1170 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1171 
  return;
}


#line 1174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_110(spinlock_t *lock, unsigned long flags)
{
  
#line 1178 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1180 
  spin_unlock_irqrestore(lock,flags);
  
#line 1181 
  return;
}


#line 1184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_111(spinlock_t *lock, unsigned long flags)
{
  
#line 1188 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1190 
  spin_unlock_irqrestore(lock,flags);
  
#line 1191 
  return;
}


#line 1194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv___ldv_spin_lock_112(spinlock_t *ldv_func_arg1)
{
  
#line 1198 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1200 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1201 
  return;
}


#line 1204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_113(spinlock_t *lock, unsigned long flags)
{
  
#line 1208 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1210 
  spin_unlock_irqrestore(lock,flags);
  
#line 1211 
  return;
}


#line 1214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irqrestore_114(spinlock_t *lock, unsigned long flags)
{
  
#line 1218 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1220 
  spin_unlock_irqrestore(lock,flags);
  
#line 1221 
  return;
}


#line 1224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_lock_irq_115(spinlock_t *lock)
{
  
#line 1228 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1230 
  spin_lock_irq(lock);
  
#line 1231 
  return;
}


#line 1234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irq_116(spinlock_t *lock)
{
  
#line 1238 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1240 
  spin_unlock_irq(lock);
  
#line 1241 
  return;
}


#line 1244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_ethtool.c.aux"
static void ldv_spin_unlock_irq_117(spinlock_t *lock)
{
  
#line 1248 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1250 
  spin_unlock_irq(lock);
  
#line 1251 
  return;
}

unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
__inline static void bfa_wc_up(struct bfa_wc *wc)
{
  
#line 83 
  wc->wc_count += 1;
  
#line 84 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
__inline static void bfa_wc_down(struct bfa_wc *wc)
{
  
#line 89 
  wc->wc_count -= 1;
  
#line 90 
  if (wc->wc_count == 0) 
#line 91 
                         (*(wc->wc_resume))(wc->wc_cbarg); else ;
  
#line 92 
  return;
}


#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
__inline static void bfa_wc_init(struct bfa_wc *wc, void (*wc_resume)(void *), void *wc_cbarg)
{
  
#line 98 
  wc->wc_resume = wc_resume;
  
#line 99 
  wc->wc_cbarg = wc_cbarg;
  
#line 100 
  wc->wc_count = 0;
  
#line 101 
  bfa_wc_up(wc);
  
#line 102 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
__inline static void bfa_wc_wait(struct bfa_wc *wc)
{
  
#line 108 
  bfa_wc_down(wc);
  
#line 109 
  return;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
__inline static void __bfa_dma_be_addr_set(union bfi_addr_u *dma_addr, u64 pa)
{
  
#line 63 
  if (0 != 0) 
#line 63 
              dma_addr->a32.addr_lo = ((((unsigned int)pa << 24) | (((unsigned int)pa << 8) & 16711680U)) | (((unsigned int)pa >> 8) & 65280U)) | ((unsigned int)pa >> 24); else 
                                                                    
#line 63 
                                                                    dma_addr->a32.addr_lo = __fswab32((unsigned int)pa);
  
#line 64 
  if (0 != 0) 
#line 64 
              dma_addr->a32.addr_hi = ((((unsigned int)(pa >> 32) << 24) | (((unsigned int)(pa >> 32) << 8) & 16711680U)) | (((unsigned int)(pa >> 32) >> 8) & 65280U)) | ((unsigned int)(pa >> 32) >> 24); else 
                                                                    
#line 64 
                                                                    dma_addr->a32.addr_hi = __fswab32((unsigned int)(pa >> 32));
  
#line 65 
  return;
}


#line 252 
bool bfa_nw_ioc_mbox_queue(struct bfa_ioc *ioc, struct bfa_mbox_cmd *cmd, void (*cbfn)(void *), void *cbarg);


#line 256 
void bfa_nw_ioc_mbox_regisr(struct bfa_ioc *ioc, enum bfi_mclass mc, void (*cbfn)(void *, struct bfi_mbmsg *), void *cbarg);


#line 286 
bool bfa_nw_ioc_is_disabled(struct bfa_ioc *ioc);


#line 290 
void bfa_nw_ioc_notify_register(struct bfa_ioc *ioc, struct bfa_ioc_notify *notify);


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.h"
u32 bfa_msgq_meminfo(void);


#line 123 
void bfa_msgq_memclaim(struct bfa_msgq *msgq, u8 *kva, u64 pa);


#line 124 
void bfa_msgq_attach(struct bfa_msgq *msgq, struct bfa_ioc *ioc);


#line 125 
void bfa_msgq_regisr(struct bfa_msgq *msgq, enum bfi_mclass mc, void (*cbfn)(void *, struct bfi_msgq_mhdr *), void *cbarg);


#line 127 
void bfa_msgq_cmd_post(struct bfa_msgq *msgq, struct bfa_msgq_cmd_entry *cmd);


#line 129 
void bfa_msgq_rsp_copy(struct bfa_msgq *msgq, u8 *buf, size_t buf_len);


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_dbell(struct bfa_msgq_cmdq *cmdq);


#line 40 
static void bfa_msgq_cmdq_copy_rsp(struct bfa_msgq_cmdq *cmdq);


#line 51 
static void cmdq_sm_stopped(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event);


#line 51 
static void cmdq_sm_stopped_entry(struct bfa_msgq_cmdq *cmdq);


#line 52 
static void cmdq_sm_init_wait(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event);


#line 52 
static void cmdq_sm_init_wait_entry(struct bfa_msgq_cmdq *cmdq);


#line 53 
static void cmdq_sm_ready(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event);


#line 53 
static void cmdq_sm_ready_entry(struct bfa_msgq_cmdq *cmdq);


#line 54 
static void cmdq_sm_dbell_wait(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event);


#line 54 
static void cmdq_sm_dbell_wait_entry(struct bfa_msgq_cmdq *cmdq);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_stopped_entry(struct bfa_msgq_cmdq *cmdq)
{
  struct bfa_msgq_cmd_entry *cmdq_ent;
  struct bfa_msgq_cmd_entry *tmp;
  int tmp_0;
  
#line 62 
  cmdq->producer_index = (unsigned short)0U;
  
#line 63 
  cmdq->consumer_index = (unsigned short)0U;
  
#line 64 
  cmdq->flags = (enum bfa_msgq_cmdq_flags)0;
  
#line 65 
  cmdq->token = (unsigned short)0U;
  
#line 66 
  cmdq->offset = 0;
  
#line 67 
  cmdq->bytes_to_copy = 0;
  
#line 68 
  goto ldv_46838;
  ldv_46837: 
#line 69 
  ;
  {
    
#line 69 
    struct list_head const *__mptr = (struct list_head const *)cmdq->pending_q.next;
    
#line 69 
    tmp = (struct bfa_msgq_cmd_entry *)__mptr;
  }
  
#line 69 
  cmdq_ent = tmp;
  
#line 71 
  list_del(& cmdq_ent->qe);
  {
    void (*cbfn)(void *, enum bfa_status );
    void *cbarg;
    
#line 72 
    cbfn = cmdq_ent->cbfn;
    
#line 72 
    cbarg = cmdq_ent->cbarg;
    
#line 72 
    cmdq_ent->cbfn = (void (*)(void *, enum bfa_status ))0;
    
#line 72 
    cmdq_ent->cbarg = (void *)0;
    
#line 72 
    if (cbfn != (void (*)(void *, enum bfa_status ))0) 
#line 72 
                                                       (*cbfn)(cbarg,(enum bfa_status)BFA_STATUS_FAILED); else ;
  }
  ldv_46838: 
#line 74 
  ;
  
#line 68 
  tmp_0 = list_empty((struct list_head const *)(& cmdq->pending_q));
  
#line 68 
  if (tmp_0 == 0) 
#line 70 
                  goto ldv_46837; else 
#line 73 
                                       goto ldv_46839;
  ldv_46839: 
#line 74 
  ;
  
#line 75 
  return;
}


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_stopped(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event)
{
  
#line 79 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 80 
    ;
    
#line 81 
    cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_init_wait);
    
#line 81 
    cmdq_sm_init_wait_entry(cmdq);
    
#line 82 
    goto ldv_46845;
    case (unsigned int)2: 
#line 84 
    ;
    case (unsigned int)3: 
#line 85 
    ;
    
#line 87 
    goto ldv_46845;
    case (unsigned int)4: 
#line 89 
    ;
    
#line 90 
    cmdq->flags = (enum bfa_msgq_cmdq_flags)((unsigned int)cmdq->flags | 1U);
    
#line 91 
    goto ldv_46845;
    default: 
#line 93 
    ;
    
#line 94 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",94,(unsigned int)event);
  }
  ldv_46845: 
#line 96 
  ;
  
#line 97 
  return;
}


#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_init_wait_entry(struct bfa_msgq_cmdq *cmdq)
{
  
#line 101 
  bfa_wc_down(& (cmdq->msgq)->init_wc);
  
#line 102 
  return;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_init_wait(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event)
{
  
#line 107 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 108 
    ;
    case (unsigned int)3: 
#line 109 
    ;
    
#line 110 
    cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_stopped);
    
#line 110 
    cmdq_sm_stopped_entry(cmdq);
    
#line 111 
    goto ldv_46859;
    case (unsigned int)4: 
#line 113 
    ;
    
#line 114 
    cmdq->flags = (enum bfa_msgq_cmdq_flags)((unsigned int)cmdq->flags | 1U);
    
#line 115 
    goto ldv_46859;
    case (unsigned int)5: 
#line 117 
    ;
    
#line 118 
    if (((unsigned int)cmdq->flags & 1U) != 0U) {
      
#line 119 
      cmdq->flags = (enum bfa_msgq_cmdq_flags)((unsigned int)cmdq->flags & 4294967294U);
      
#line 120 
      cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_dbell_wait);
      
#line 120 
      cmdq_sm_dbell_wait_entry(cmdq);
    }
    else {
      
#line 122 
      cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_ready);
      
#line 122 
      cmdq_sm_ready_entry(cmdq);
    }
    
#line 123 
    goto ldv_46859;
    default: 
#line 125 
    ;
    
#line 126 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",126,(unsigned int)event);
  }
  ldv_46859: 
#line 128 
  ;
  
#line 129 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_ready_entry(struct bfa_msgq_cmdq *cmdq)
{
  
#line 133 
  return;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_ready(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event)
{
  
#line 138 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 139 
    ;
    case (unsigned int)3: 
#line 140 
    ;
    
#line 141 
    cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_stopped);
    
#line 141 
    cmdq_sm_stopped_entry(cmdq);
    
#line 142 
    goto ldv_46872;
    case (unsigned int)4: 
#line 144 
    ;
    
#line 145 
    cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_dbell_wait);
    
#line 145 
    cmdq_sm_dbell_wait_entry(cmdq);
    
#line 146 
    goto ldv_46872;
    default: 
#line 148 
    ;
    
#line 149 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",149,(unsigned int)event);
  }
  ldv_46872: 
#line 151 
  ;
  
#line 152 
  return;
}


#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_dbell_wait_entry(struct bfa_msgq_cmdq *cmdq)
{
  
#line 156 
  bfa_msgq_cmdq_dbell(cmdq);
  
#line 157 
  return;
}


#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void cmdq_sm_dbell_wait(struct bfa_msgq_cmdq *cmdq, enum cmdq_event event)
{
  
#line 162 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 163 
    ;
    case (unsigned int)3: 
#line 164 
    ;
    
#line 165 
    cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_stopped);
    
#line 165 
    cmdq_sm_stopped_entry(cmdq);
    
#line 166 
    goto ldv_46884;
    case (unsigned int)4: 
#line 168 
    ;
    
#line 169 
    cmdq->flags = (enum bfa_msgq_cmdq_flags)((unsigned int)cmdq->flags | 1U);
    
#line 170 
    goto ldv_46884;
    case (unsigned int)6: 
#line 172 
    ;
    
#line 173 
    if (((unsigned int)cmdq->flags & 1U) != 0U) {
      
#line 174 
      cmdq->flags = (enum bfa_msgq_cmdq_flags)((unsigned int)cmdq->flags & 4294967294U);
      
#line 175 
      cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_dbell_wait);
      
#line 175 
      cmdq_sm_dbell_wait_entry(cmdq);
    }
    else {
      
#line 177 
      cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_ready);
      
#line 177 
      cmdq_sm_ready_entry(cmdq);
    }
    
#line 178 
    goto ldv_46884;
    default: 
#line 180 
    ;
    
#line 181 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",181,(unsigned int)event);
  }
  ldv_46884: 
#line 183 
  ;
  
#line 184 
  return;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_dbell_ready(void *arg)
{
  
#line 188 
  struct bfa_msgq_cmdq *cmdq = (struct bfa_msgq_cmdq *)arg;
  
#line 189 
  (*(cmdq->fsm))((void *)cmdq,6);
  
#line 190 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_dbell(struct bfa_msgq_cmdq *cmdq)
{
  int tmp_1;
  bool tmp_0;
  
#line 195 
  struct bfi_msgq_h2i_db *dbell = (struct bfi_msgq_h2i_db *)(& cmdq->dbell_mb.msg[0]);
  
#line 198 
  memset((void *)dbell,0,6UL);
  
#line 199 
  dbell->mh.msg_class = (unsigned char)23U;
  
#line 199 
  dbell->mh.msg_id = (unsigned char)2U;
  
#line 199 
  dbell->mh.mtag.h2i.fn_lpu = (unsigned char)0U;
  
#line 200 
  dbell->mh.mtag.i2htok = (unsigned short)0U;
  
#line 201 
  if (0 != 0) 
#line 201 
              dbell->idx.cmdq_pi = (unsigned short)(((int)cmdq->producer_index << 8) | ((int)cmdq->producer_index >> 8)); else 
                                                                    
#line 201 
                                                                    dbell->idx.cmdq_pi = __fswab16((unsigned short)((int)cmdq->producer_index));
  
#line 203 
  tmp_0 = bfa_nw_ioc_mbox_queue((cmdq->msgq)->ioc,& cmdq->dbell_mb,& bfa_msgq_cmdq_dbell_ready,(void *)cmdq);
  
#line 203 
  if (tmp_0) 
#line 203 
             tmp_1 = 0; else 
#line 203 
                             tmp_1 = 1;
  
#line 203 
  if (tmp_1) 
#line 205 
             bfa_msgq_cmdq_dbell_ready((void *)cmdq); else ;
  
#line 206 
  return;
}


#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void __cmd_copy(struct bfa_msgq_cmdq *cmdq, struct bfa_msgq_cmd_entry *cmd)
{
  size_t to_copy;
  u8 *src;
  u8 *dst;
  
#line 212 
  size_t len = cmd->msg_size;
  
#line 213 
  int num_entries = 0;
  
#line 217 
  src = (u8 *)cmd->msg_hdr;
  
#line 218 
  dst = (u8 *)cmdq->addr.kva;
  
#line 219 
  dst += (int)cmdq->producer_index * 64;
  
#line 221 
  goto ldv_46906;
  ldv_46905: 
#line 222 
  ;
  
#line 222 
  if (64UL < len) 
#line 222 
                  to_copy = 64UL; else 
#line 222 
                                       to_copy = len;
  
#line 224 
  memcpy((void *)dst,(void const *)src,to_copy);
  
#line 225 
  len -= to_copy;
  
#line 226 
  src += 64U;
  
#line 227 
  cmdq->producer_index = (unsigned short)(((unsigned int)cmdq->producer_index + 1U) & ((unsigned int)cmdq->depth + 65535U));
  
#line 228 
  dst = (u8 *)cmdq->addr.kva;
  
#line 229 
  dst += (int)cmdq->producer_index * 64;
  
#line 230 
  num_entries += 1;
  ldv_46906: 
#line 231 
  ;
  
#line 221 
  if (len != 0UL) 
#line 223 
                  goto ldv_46905; else 
#line 226 
                                       goto ldv_46907;
  ldv_46907: 
#line 227 
  ;
  
#line 228 
  return;
}


#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_ci_update(struct bfa_msgq_cmdq *cmdq, struct bfi_mbmsg *mb)
{
  struct bfa_msgq_cmd_entry *cmd;
  struct bfa_msgq_cmd_entry *tmp_0;
  int tmp_2;
  int tmp_3;
  
#line 238 
  struct bfi_msgq_i2h_db *dbell = (struct bfi_msgq_i2h_db *)mb;
  
#line 240 
  int posted = 0;
  
#line 242 
  if (0 != 0) 
#line 242 
              cmdq->consumer_index = (unsigned short)(((int)dbell->idx.cmdq_ci << 8) | ((int)dbell->idx.cmdq_ci >> 8)); else 
                                                                    
#line 242 
                                                                    cmdq->consumer_index = __fswab16((unsigned short)((int)dbell->idx.cmdq_ci));
  
#line 245 
  goto ldv_46921;
  ldv_46920: 
#line 246 
  ;
  {
    
#line 246 
    struct list_head const *__mptr = (struct list_head const *)cmdq->pending_q.next;
    
#line 246 
    tmp_0 = (struct bfa_msgq_cmd_entry *)__mptr;
  }
  
#line 246 
  cmd = tmp_0;
  
#line 248 
  if (0 != 0) 
#line 248 
              tmp_2 = (int)((unsigned short)(((int)(cmd->msg_hdr)->num_entries << 8) | ((int)(cmd->msg_hdr)->num_entries >> 8)));
  else {
    __u16 tmp_1;
    
#line 248 
    tmp_1 = __fswab16((unsigned short)((int)(cmd->msg_hdr)->num_entries));
    
#line 248 
    tmp_2 = (int)tmp_1;
  }
  
#line 248 
  ;
  
#line 248 
  if (tmp_2 <= ((((int)cmdq->consumer_index - (int)cmdq->producer_index) + -1) & ((int)cmdq->depth + -1))) {
    
#line 250 
    list_del(& cmd->qe);
    
#line 251 
    __cmd_copy(cmdq,cmd);
    
#line 252 
    posted = 1;
    {
      void (*cbfn)(void *, enum bfa_status );
      void *cbarg;
      
#line 253 
      cbfn = cmd->cbfn;
      
#line 253 
      cbarg = cmd->cbarg;
      
#line 253 
      cmd->cbfn = (void (*)(void *, enum bfa_status ))0;
      
#line 253 
      cmd->cbarg = (void *)0;
      
#line 253 
      if (cbfn != (void (*)(void *, enum bfa_status ))0) 
#line 253 
                                                         (*cbfn)(cbarg,(enum bfa_status)BFA_STATUS_OK); else ;
    }
  }
  else 
#line 255 
       goto ldv_46919;
  ldv_46921: 
#line 256 
  ;
  
#line 245 
  tmp_3 = list_empty((struct list_head const *)(& cmdq->pending_q));
  
#line 245 
  if (tmp_3 == 0) 
#line 247 
                  goto ldv_46920; else 
#line 250 
                                       goto ldv_46919;
  ldv_46919: 
#line 251 
  ;
  
#line 259 
  if (posted != 0) 
#line 260 
                   (*(cmdq->fsm))((void *)cmdq,4); else ;
  
#line 261 
  return;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_copy_next(void *arg)
{
  
#line 266 
  struct bfa_msgq_cmdq *cmdq = (struct bfa_msgq_cmdq *)arg;
  
#line 268 
  if (cmdq->bytes_to_copy != 0) 
#line 269 
                                bfa_msgq_cmdq_copy_rsp(cmdq); else ;
  
#line 270 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_copy_req(struct bfa_msgq_cmdq *cmdq, struct bfi_mbmsg *mb)
{
  
#line 275 
  struct bfi_msgq_i2h_cmdq_copy_req *req = (struct bfi_msgq_i2h_cmdq_copy_req *)mb;
  
#line 278 
  cmdq->token = (unsigned short)0U;
  
#line 279 
  if (0 != 0) 
#line 279 
              cmdq->offset = (int)((unsigned short)(((int)req->offset << 8) | ((int)req->offset >> 8)));
  else {
    __u16 tmp;
    
#line 279 
    tmp = __fswab16((unsigned short)((int)req->offset));
    
#line 279 
    cmdq->offset = (int)tmp;
  }
  
#line 280 
  if (0 != 0) 
#line 280 
              cmdq->bytes_to_copy = (int)((unsigned short)(((int)req->len << 8) | ((int)req->len >> 8)));
  else {
    __u16 tmp_0;
    
#line 280 
    tmp_0 = __fswab16((unsigned short)((int)req->len));
    
#line 280 
    cmdq->bytes_to_copy = (int)tmp_0;
  }
  
#line 281 
  bfa_msgq_cmdq_copy_rsp(cmdq);
  
#line 282 
  return;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_copy_rsp(struct bfa_msgq_cmdq *cmdq)
{
  int copied;
  int tmp_1;
  bool tmp_0;
  
#line 287 
  struct bfi_msgq_h2i_cmdq_copy_rsp *rsp = (struct bfi_msgq_h2i_cmdq_copy_rsp *)(& cmdq->copy_mb.msg[0]);
  
#line 290 
  u8 *addr = (u8 *)cmdq->addr.kva;
  
#line 292 
  memset((void *)rsp,0,32UL);
  
#line 293 
  rsp->mh.msg_class = (unsigned char)23U;
  
#line 293 
  rsp->mh.msg_id = (unsigned char)4U;
  
#line 293 
  rsp->mh.mtag.h2i.fn_lpu = (unsigned char)0U;
  
#line 294 
  if (0 != 0) 
#line 294 
              rsp->mh.mtag.i2htok = (unsigned short)(((int)cmdq->token << 8) | ((int)cmdq->token >> 8)); else 
                                                                    
#line 294 
                                                                    rsp->mh.mtag.i2htok = __fswab16((unsigned short)((int)cmdq->token));
  
#line 295 
  if (28 < cmdq->bytes_to_copy) 
#line 295 
                                copied = 28; else 
#line 295 
                                                  copied = cmdq->bytes_to_copy;
  
#line 297 
  addr += cmdq->offset;
  
#line 298 
  memcpy((void *)(& rsp->data),(void const *)addr,(unsigned long)copied);
  
#line 300 
  cmdq->token = (u16)((int)cmdq->token + 1);
  
#line 301 
  cmdq->offset += copied;
  
#line 302 
  cmdq->bytes_to_copy -= copied;
  
#line 304 
  tmp_0 = bfa_nw_ioc_mbox_queue((cmdq->msgq)->ioc,& cmdq->copy_mb,& bfa_msgq_cmdq_copy_next,(void *)cmdq);
  
#line 304 
  if (tmp_0) 
#line 304 
             tmp_1 = 0; else 
#line 304 
                             tmp_1 = 1;
  
#line 304 
  if (tmp_1) 
#line 306 
             bfa_msgq_cmdq_copy_next((void *)cmdq); else ;
  
#line 307 
  return;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_cmdq_attach(struct bfa_msgq_cmdq *cmdq, struct bfa_msgq *msgq)
{
  
#line 313 
  cmdq->depth = (unsigned short)128U;
  
#line 314 
  INIT_LIST_HEAD(& cmdq->pending_q);
  
#line 315 
  cmdq->msgq = msgq;
  
#line 316 
  cmdq->fsm = (void (*)(void *, int ))(& cmdq_sm_stopped);
  
#line 316 
  cmdq_sm_stopped_entry(cmdq);
  
#line 317 
  return;
}


#line 319 
static void bfa_msgq_rspq_dbell(struct bfa_msgq_rspq *rspq);


#line 330 
static void rspq_sm_stopped(struct bfa_msgq_rspq *rspq, enum rspq_event event);


#line 330 
static void rspq_sm_stopped_entry(struct bfa_msgq_rspq *rspq);


#line 331 
static void rspq_sm_init_wait(struct bfa_msgq_rspq *rspq, enum rspq_event event);


#line 331 
static void rspq_sm_init_wait_entry(struct bfa_msgq_rspq *rspq);


#line 333 
static void rspq_sm_ready(struct bfa_msgq_rspq *rspq, enum rspq_event event);


#line 333 
static void rspq_sm_ready_entry(struct bfa_msgq_rspq *rspq);


#line 334 
static void rspq_sm_dbell_wait(struct bfa_msgq_rspq *rspq, enum rspq_event event);


#line 334 
static void rspq_sm_dbell_wait_entry(struct bfa_msgq_rspq *rspq);


#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_stopped_entry(struct bfa_msgq_rspq *rspq)
{
  
#line 340 
  rspq->producer_index = (unsigned short)0U;
  
#line 341 
  rspq->consumer_index = (unsigned short)0U;
  
#line 342 
  rspq->flags = (enum bfa_msgq_rspq_flags)0;
  
#line 343 
  return;
}


#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_stopped(struct bfa_msgq_rspq *rspq, enum rspq_event event)
{
  
#line 348 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 349 
    ;
    
#line 350 
    rspq->fsm = (void (*)(void *, int ))(& rspq_sm_init_wait);
    
#line 350 
    rspq_sm_init_wait_entry(rspq);
    
#line 351 
    goto ldv_46978;
    case (unsigned int)2: 
#line 353 
    ;
    case (unsigned int)3: 
#line 354 
    ;
    
#line 356 
    goto ldv_46978;
    default: 
#line 358 
    ;
    
#line 359 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",359,(unsigned int)event);
  }
  ldv_46978: 
#line 361 
  ;
  
#line 362 
  return;
}


#line 364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_init_wait_entry(struct bfa_msgq_rspq *rspq)
{
  
#line 366 
  bfa_wc_down(& (rspq->msgq)->init_wc);
  
#line 367 
  return;
}


#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_init_wait(struct bfa_msgq_rspq *rspq, enum rspq_event event)
{
  
#line 372 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 373 
    ;
    case (unsigned int)2: 
#line 374 
    ;
    
#line 375 
    rspq->fsm = (void (*)(void *, int ))(& rspq_sm_stopped);
    
#line 375 
    rspq_sm_stopped_entry(rspq);
    
#line 376 
    goto ldv_46991;
    case (unsigned int)5: 
#line 378 
    ;
    
#line 379 
    rspq->fsm = (void (*)(void *, int ))(& rspq_sm_ready);
    
#line 379 
    rspq_sm_ready_entry(rspq);
    
#line 380 
    goto ldv_46991;
    default: 
#line 382 
    ;
    
#line 383 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",383,(unsigned int)event);
  }
  ldv_46991: 
#line 385 
  ;
  
#line 386 
  return;
}


#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_ready_entry(struct bfa_msgq_rspq *rspq)
{
  
#line 390 
  return;
}


#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_ready(struct bfa_msgq_rspq *rspq, enum rspq_event event)
{
  
#line 395 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 396 
    ;
    case (unsigned int)3: 
#line 397 
    ;
    
#line 398 
    rspq->fsm = (void (*)(void *, int ))(& rspq_sm_stopped);
    
#line 398 
    rspq_sm_stopped_entry(rspq);
    
#line 399 
    goto ldv_47003;
    case (unsigned int)4: 
#line 401 
    ;
    
#line 402 
    rspq->fsm = (void (*)(void *, int ))(& rspq_sm_dbell_wait);
    
#line 402 
    rspq_sm_dbell_wait_entry(rspq);
    
#line 403 
    goto ldv_47003;
    default: 
#line 405 
    ;
    
#line 406 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",406,(unsigned int)event);
  }
  ldv_47003: 
#line 408 
  ;
  
#line 409 
  return;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_dbell_wait_entry(struct bfa_msgq_rspq *rspq)
{
  int tmp_0;
  bool tmp;
  
#line 413 
  tmp = bfa_nw_ioc_is_disabled((rspq->msgq)->ioc);
  
#line 413 
  if (tmp) 
#line 413 
           tmp_0 = 0; else 
#line 413 
                           tmp_0 = 1;
  
#line 413 
  if (tmp_0) 
#line 414 
             bfa_msgq_rspq_dbell(rspq); else ;
  
#line 415 
  return;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void rspq_sm_dbell_wait(struct bfa_msgq_rspq *rspq, enum rspq_event event)
{
  
#line 420 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 421 
    ;
    case (unsigned int)3: 
#line 422 
    ;
    
#line 423 
    rspq->fsm = (void (*)(void *, int ))(& rspq_sm_stopped);
    
#line 423 
    rspq_sm_stopped_entry(rspq);
    
#line 424 
    goto ldv_47015;
    case (unsigned int)4: 
#line 426 
    ;
    
#line 427 
    rspq->flags = (enum bfa_msgq_rspq_flags)((unsigned int)rspq->flags | 1U);
    
#line 428 
    goto ldv_47015;
    case (unsigned int)6: 
#line 430 
    ;
    
#line 431 
    if (((unsigned int)rspq->flags & 1U) != 0U) {
      
#line 432 
      rspq->flags = (enum bfa_msgq_rspq_flags)((unsigned int)rspq->flags & 4294967294U);
      
#line 433 
      rspq->fsm = (void (*)(void *, int ))(& rspq_sm_dbell_wait);
      
#line 433 
      rspq_sm_dbell_wait_entry(rspq);
    }
    else {
      
#line 435 
      rspq->fsm = (void (*)(void *, int ))(& rspq_sm_ready);
      
#line 435 
      rspq_sm_ready_entry(rspq);
    }
    
#line 436 
    goto ldv_47015;
    default: 
#line 438 
    ;
    
#line 439 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c",439,(unsigned int)event);
  }
  ldv_47015: 
#line 441 
  ;
  
#line 442 
  return;
}


#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_rspq_dbell_ready(void *arg)
{
  
#line 446 
  struct bfa_msgq_rspq *rspq = (struct bfa_msgq_rspq *)arg;
  
#line 447 
  (*(rspq->fsm))((void *)rspq,6);
  
#line 448 
  return;
}


#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_rspq_dbell(struct bfa_msgq_rspq *rspq)
{
  int tmp_1;
  bool tmp_0;
  
#line 453 
  struct bfi_msgq_h2i_db *dbell = (struct bfi_msgq_h2i_db *)(& rspq->dbell_mb.msg[0]);
  
#line 456 
  memset((void *)dbell,0,6UL);
  
#line 457 
  dbell->mh.msg_class = (unsigned char)23U;
  
#line 457 
  dbell->mh.msg_id = (unsigned char)3U;
  
#line 457 
  dbell->mh.mtag.h2i.fn_lpu = (unsigned char)0U;
  
#line 458 
  dbell->mh.mtag.i2htok = (unsigned short)0U;
  
#line 459 
  if (0 != 0) 
#line 459 
              dbell->idx.rspq_ci = (unsigned short)(((int)rspq->consumer_index << 8) | ((int)rspq->consumer_index >> 8)); else 
                                                                    
#line 459 
                                                                    dbell->idx.rspq_ci = __fswab16((unsigned short)((int)rspq->consumer_index));
  
#line 461 
  tmp_0 = bfa_nw_ioc_mbox_queue((rspq->msgq)->ioc,& rspq->dbell_mb,& bfa_msgq_rspq_dbell_ready,(void *)rspq);
  
#line 461 
  if (tmp_0) 
#line 461 
             tmp_1 = 0; else 
#line 461 
                             tmp_1 = 1;
  
#line 461 
  if (tmp_1) 
#line 463 
             bfa_msgq_rspq_dbell_ready((void *)rspq); else ;
  
#line 464 
  return;
}


#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_rspq_pi_update(struct bfa_msgq_rspq *rspq, struct bfi_mbmsg *mb)
{
  struct bfi_msgq_mhdr *msghdr;
  int num_entries;
  int mc;
  u8 *rspq_qe;
  
#line 470 
  struct bfi_msgq_i2h_db *dbell = (struct bfi_msgq_i2h_db *)mb;
  
#line 476 
  if (0 != 0) 
#line 476 
              rspq->producer_index = (unsigned short)(((int)dbell->idx.rspq_pi << 8) | ((int)dbell->idx.rspq_pi >> 8)); else 
                                                                    
#line 476 
                                                                    rspq->producer_index = __fswab16((unsigned short)((int)dbell->idx.rspq_pi));
  
#line 478 
  goto ldv_47038;
  ldv_47037: 
#line 479 
  ;
  
#line 479 
  rspq_qe = (u8 *)rspq->addr.kva;
  
#line 480 
  rspq_qe += (int)rspq->consumer_index * 64;
  
#line 481 
  msghdr = (struct bfi_msgq_mhdr *)rspq_qe;
  
#line 483 
  mc = (int)msghdr->msg_class;
  
#line 484 
  if (0 != 0) 
#line 484 
              num_entries = (int)((unsigned short)(((int)msghdr->num_entries << 8) | ((int)msghdr->num_entries >> 8)));
  else {
    __u16 tmp_0;
    
#line 484 
    tmp_0 = __fswab16((unsigned short)((int)msghdr->num_entries));
    
#line 484 
    num_entries = (int)tmp_0;
  }
  
#line 486 
  if (mc > 33 || rspq->rsphdlr[mc].cbfn == (void (*)(void *, struct bfi_msgq_mhdr *))0) 
    
#line 487 
    goto ldv_47036; else ;
  
#line 489 
  (*(rspq->rsphdlr[mc].cbfn))(rspq->rsphdlr[mc].cbarg,msghdr);
  
#line 491 
  rspq->consumer_index = (unsigned short)((unsigned int)((int)rspq->consumer_index + num_entries) & ((unsigned int)rspq->depth + 65535U));
  ldv_47038: 
#line 492 
  ;
  
#line 478 
  if ((int)rspq->consumer_index != (int)rspq->producer_index) 
#line 480 
                                                              goto ldv_47037; else 
                                                                    
#line 483 
                                                                    goto ldv_47036;
  ldv_47036: 
#line 484 
  ;
  
#line 495 
  (*(rspq->fsm))((void *)rspq,4);
  
#line 496 
  return;
}


#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_rspq_attach(struct bfa_msgq_rspq *rspq, struct bfa_msgq *msgq)
{
  
#line 501 
  rspq->depth = (unsigned short)128U;
  
#line 502 
  rspq->msgq = msgq;
  
#line 503 
  rspq->fsm = (void (*)(void *, int ))(& rspq_sm_stopped);
  
#line 503 
  rspq_sm_stopped_entry(rspq);
  
#line 504 
  return;
}


#line 507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_init_rsp(struct bfa_msgq *msgq, struct bfi_mbmsg *mb)
{
  
#line 510 
  (*(msgq->cmdq.fsm))((void *)(& msgq->cmdq),5);
  
#line 511 
  (*(msgq->rspq.fsm))((void *)(& msgq->rspq),5);
  
#line 512 
  return;
}


#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_init(void *arg)
{
  
#line 517 
  struct bfa_msgq *msgq = (struct bfa_msgq *)arg;
  
#line 518 
  struct bfi_msgq_cfg_req *msgq_cfg = (struct bfi_msgq_cfg_req *)(& msgq->init_mb.msg[0]);
  
#line 521 
  memset((void *)msgq_cfg,0,28UL);
  
#line 522 
  msgq_cfg->mh.msg_class = (unsigned char)23U;
  
#line 522 
  msgq_cfg->mh.msg_id = (unsigned char)1U;
  
#line 522 
  msgq_cfg->mh.mtag.h2i.fn_lpu = (unsigned char)0U;
  
#line 523 
  msgq_cfg->mh.mtag.i2htok = (unsigned short)0U;
  
#line 525 
  __bfa_dma_be_addr_set(& msgq_cfg->cmdq.addr,msgq->cmdq.addr.pa);
  
#line 526 
  if (0 != 0) 
#line 526 
              msgq_cfg->cmdq.q_depth = (unsigned short)(((int)msgq->cmdq.depth << 8) | ((int)msgq->cmdq.depth >> 8)); else 
                                                                    
#line 526 
                                                                    msgq_cfg->cmdq.q_depth = __fswab16((unsigned short)((int)msgq->cmdq.depth));
  
#line 527 
  __bfa_dma_be_addr_set(& msgq_cfg->rspq.addr,msgq->rspq.addr.pa);
  
#line 528 
  if (0 != 0) 
#line 528 
              msgq_cfg->rspq.q_depth = (unsigned short)(((int)msgq->rspq.depth << 8) | ((int)msgq->rspq.depth >> 8)); else 
                                                                    
#line 528 
                                                                    msgq_cfg->rspq.q_depth = __fswab16((unsigned short)((int)msgq->rspq.depth));
  
#line 530 
  bfa_nw_ioc_mbox_queue(msgq->ioc,& msgq->init_mb,(void (*)(void *))0,(void *)0);
  
#line 531 
  return;
}


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_isr(void *cbarg, struct bfi_mbmsg *msg)
{
  
#line 536 
  struct bfa_msgq *msgq = (struct bfa_msgq *)cbarg;
  
#line 538 
  switch ((int)msg->mh.msg_id) {
    case 129: 
#line 539 
    ;
    
#line 540 
    bfa_msgq_init_rsp(msgq,msg);
    
#line 541 
    goto ldv_47058;
    case 130: 
#line 543 
    ;
    
#line 544 
    bfa_msgq_rspq_pi_update(& msgq->rspq,msg);
    
#line 545 
    goto ldv_47058;
    case 131: 
#line 547 
    ;
    
#line 548 
    bfa_msgq_cmdq_ci_update(& msgq->cmdq,msg);
    
#line 549 
    goto ldv_47058;
    case 132: 
#line 551 
    ;
    
#line 552 
    bfa_msgq_cmdq_copy_req(& msgq->cmdq,msg);
    
#line 553 
    goto ldv_47058;
    default: 
#line 555 
    ;
    
#line 558 
    ldv_inline_asm();
    
#line 556 
    ;
  }
  ldv_47058: 
#line 558 
  ;
  
#line 559 
  return;
}


#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
static void bfa_msgq_notify(void *cbarg, enum bfa_ioc_event event)
{
  
#line 563 
  struct bfa_msgq *msgq = (struct bfa_msgq *)cbarg;
  
#line 565 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 566 
    ;
    
#line 567 
    bfa_wc_init(& msgq->init_wc,& bfa_msgq_init,(void *)msgq);
    
#line 568 
    bfa_wc_up(& msgq->init_wc);
    
#line 569 
    (*(msgq->cmdq.fsm))((void *)(& msgq->cmdq),1);
    
#line 570 
    bfa_wc_up(& msgq->init_wc);
    
#line 571 
    (*(msgq->rspq.fsm))((void *)(& msgq->rspq),1);
    
#line 572 
    bfa_wc_wait(& msgq->init_wc);
    
#line 573 
    goto ldv_47069;
    case (unsigned int)2: 
#line 575 
    ;
    
#line 576 
    (*(msgq->cmdq.fsm))((void *)(& msgq->cmdq),2);
    
#line 577 
    (*(msgq->rspq.fsm))((void *)(& msgq->rspq),2);
    
#line 578 
    goto ldv_47069;
    case (unsigned int)3: 
#line 580 
    ;
    
#line 581 
    (*(msgq->cmdq.fsm))((void *)(& msgq->cmdq),3);
    
#line 582 
    (*(msgq->rspq.fsm))((void *)(& msgq->rspq),3);
    
#line 583 
    goto ldv_47069;
    default: 
#line 585 
    ;
    
#line 586 
    goto ldv_47069;
  }
  ldv_47069: 
#line 588 
  ;
  
#line 589 
  return;
}


#line 591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
u32 bfa_msgq_meminfo(void)
{
  u32 __retres;
  int tmp;
  int tmp_0;
  {
    
#line 593 
    int const __y = 256;
    
#line 593 
    tmp = 8192;
  }
  {
    
#line 594 
    int const __y_0 = 256;
    
#line 594 
    tmp_0 = 8192;
  }
  
#line 593 
  __retres = (unsigned int)(tmp + tmp_0);
  
#line 593 
  return __retres;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
void bfa_msgq_memclaim(struct bfa_msgq *msgq, u8 *kva, u64 pa)
{
  int tmp;
  int tmp_0;
  
#line 600 
  msgq->cmdq.addr.kva = (void *)kva;
  
#line 601 
  msgq->cmdq.addr.pa = pa;
  {
    
#line 603 
    int const __y = 256;
    
#line 603 
    tmp = 8192;
  }
  
#line 603 
  kva += tmp;
  {
    
#line 604 
    int const __y_0 = 256;
    
#line 604 
    tmp_0 = 8192;
  }
  
#line 604 
  pa = (unsigned long long)tmp_0 + pa;
  
#line 606 
  msgq->rspq.addr.kva = (void *)kva;
  
#line 607 
  msgq->rspq.addr.pa = pa;
  
#line 608 
  return;
}


#line 611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
void bfa_msgq_attach(struct bfa_msgq *msgq, struct bfa_ioc *ioc)
{
  
#line 613 
  msgq->ioc = ioc;
  
#line 615 
  bfa_msgq_cmdq_attach(& msgq->cmdq,msgq);
  
#line 616 
  bfa_msgq_rspq_attach(& msgq->rspq,msgq);
  
#line 618 
  bfa_nw_ioc_mbox_regisr(msgq->ioc,(enum bfi_mclass)BFI_MC_MSGQ,& bfa_msgq_isr,(void *)msgq);
  
#line 619 
  msgq->ioc_notify.cbfn = & bfa_msgq_notify;
  
#line 619 
  msgq->ioc_notify.cbarg = (void *)msgq;
  
#line 620 
  bfa_nw_ioc_notify_register(msgq->ioc,& msgq->ioc_notify);
  
#line 621 
  return;
}


#line 624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
void bfa_msgq_regisr(struct bfa_msgq *msgq, enum bfi_mclass mc, void (*cbfn)(void *, struct bfi_msgq_mhdr *), void *cbarg)
{
  
#line 627 
  msgq->rspq.rsphdlr[(unsigned int)mc].cbfn = cbfn;
  
#line 628 
  msgq->rspq.rsphdlr[(unsigned int)mc].cbarg = cbarg;
  
#line 629 
  return;
}


#line 632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
void bfa_msgq_cmd_post(struct bfa_msgq *msgq, struct bfa_msgq_cmd_entry *cmd)
{
  int tmp_0;
  
#line 634 
  if (0 != 0) 
#line 634 
              tmp_0 = (int)((unsigned short)(((int)(cmd->msg_hdr)->num_entries << 8) | ((int)(cmd->msg_hdr)->num_entries >> 8)));
  else {
    __u16 tmp;
    
#line 634 
    tmp = __fswab16((unsigned short)((int)(cmd->msg_hdr)->num_entries));
    
#line 634 
    tmp_0 = (int)tmp;
  }
  
#line 634 
  ;
  
#line 634 
  if (tmp_0 <= ((((int)msgq->cmdq.consumer_index - (int)msgq->cmdq.producer_index) + -1) & ((int)msgq->cmdq.depth + -1))) {
    
#line 636 
    __cmd_copy(& msgq->cmdq,cmd);
    {
      void (*cbfn)(void *, enum bfa_status );
      void *cbarg;
      
#line 637 
      cbfn = cmd->cbfn;
      
#line 637 
      cbarg = cmd->cbarg;
      
#line 637 
      cmd->cbfn = (void (*)(void *, enum bfa_status ))0;
      
#line 637 
      cmd->cbarg = (void *)0;
      
#line 637 
      if (cbfn != (void (*)(void *, enum bfa_status ))0) 
#line 637 
                                                         (*cbfn)(cbarg,(enum bfa_status)BFA_STATUS_OK); else ;
    }
    
#line 638 
    (*(msgq->cmdq.fsm))((void *)(& msgq->cmdq),4);
  }
  else 
#line 640 
       list_add_tail(& cmd->qe,& msgq->cmdq.pending_q);
  
#line 641 
  return;
}


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_msgq.c"
void bfa_msgq_rsp_copy(struct bfa_msgq *msgq, u8 *buf, size_t buf_len)
{
  size_t to_copy;
  int ci;
  u8 *src;
  u8 *dst;
  
#line 647 
  struct bfa_msgq_rspq *rspq = & msgq->rspq;
  
#line 648 
  size_t len = buf_len;
  
#line 653 
  ci = (int)rspq->consumer_index;
  
#line 654 
  src = (u8 *)rspq->addr.kva;
  
#line 655 
  src += ci * 64;
  
#line 656 
  dst = buf;
  
#line 658 
  goto ldv_47117;
  ldv_47116: 
#line 659 
  ;
  
#line 659 
  if (64UL < len) 
#line 659 
                  to_copy = 64UL; else 
#line 659 
                                       to_copy = len;
  
#line 661 
  memcpy((void *)dst,(void const *)src,to_copy);
  
#line 662 
  len -= to_copy;
  
#line 663 
  dst += 64U;
  
#line 664 
  ci = (ci + 1) & ((int)rspq->depth + -1);
  
#line 665 
  src = (u8 *)rspq->addr.kva;
  
#line 666 
  src += ci * 64;
  ldv_47117: 
#line 667 
  ;
  
#line 658 
  if (len != 0UL) 
#line 660 
                  goto ldv_47116; else 
#line 663 
                                       goto ldv_47118;
  ldv_47118: 
#line 664 
  ;
  
#line 665 
  return;
}


#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
bool bfa_nw_ioc_is_operational(struct bfa_ioc *ioc);


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.h"
u32 bfa_nw_cee_meminfo(void);


#line 60 
void bfa_nw_cee_mem_claim(struct bfa_cee *cee, u8 *dma_kva, u64 dma_pa);


#line 62 
void bfa_nw_cee_attach(struct bfa_cee *cee, struct bfa_ioc *ioc, void *dev);


#line 63 
enum bfa_status bfa_nw_cee_get_attr(struct bfa_cee *cee, struct bfa_cee_attr *attr, void (*cbfn)(void *, enum bfa_status ), void *cbarg);


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_format_lldp_cfg(struct bfa_cee_lldp_cfg *lldp_cfg);


#line 25 
static void bfa_cee_format_cee_cfg(void *buffer);


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_format_cee_cfg(void *buffer)
{
  
#line 30 
  struct bfa_cee_attr *cee_cfg = (struct bfa_cee_attr *)buffer;
  
#line 31 
  bfa_cee_format_lldp_cfg(& cee_cfg->lldp_remote);
  
#line 32 
  return;
}


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_stats_swap(struct bfa_cee_stats *stats)
{
  int i;
  
#line 37 
  u32 *buffer = (u32 *)stats;
  
#line 40 
  i = 0;
  
#line 40 
  goto ldv_47000;
  ldv_46999: 
#line 41 
  ;
  
#line 42 
  if (0 != 0) 
#line 42 
              *(buffer + i) = (((*(buffer + i) << 24) | ((*(buffer + i) << 8) & 16711680U)) | ((*(buffer + i) >> 8) & 65280U)) | (*(buffer + i) >> 24); else 
                                                                    
#line 42 
                                                                    *(buffer + i) = __fswab32(*(buffer + i));
  
#line 41 
  i += 1;
  ldv_47000: 
#line 42 
  ;
  
#line 40 
  if ((unsigned int)i <= 17U) 
#line 42 
                              goto ldv_46999; else 
#line 45 
                                                   goto ldv_47001;
  ldv_47001: 
#line 46 
  ;
  
#line 47 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_format_lldp_cfg(struct bfa_cee_lldp_cfg *lldp_cfg)
{
  
#line 49 
  if (0 != 0) 
#line 49 
              lldp_cfg->time_to_live = (unsigned short)(((int)lldp_cfg->time_to_live << 8) | ((int)lldp_cfg->time_to_live >> 8)); else 
                                                                    
#line 50 
                                                                    lldp_cfg->time_to_live = __fswab16((unsigned short)((int)lldp_cfg->time_to_live));
  
#line 51 
  if (0 != 0) 
#line 51 
              lldp_cfg->enabled_system_cap = (unsigned short)(((int)lldp_cfg->enabled_system_cap << 8) | ((int)lldp_cfg->enabled_system_cap >> 8)); else 
                                                                    
#line 52 
                                                                    lldp_cfg->enabled_system_cap = __fswab16((unsigned short)((int)lldp_cfg->enabled_system_cap));
  
#line 53 
  return;
}


#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static u32 bfa_cee_attr_meminfo(void)
{
  u32 __retres;
  unsigned long tmp;
  {
    
#line 61 
    int const __y = 256;
    
#line 61 
    tmp = 1024UL;
  }
  
#line 61 
  __retres = (unsigned int)tmp;
  
#line 61 
  return __retres;
}


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static u32 bfa_cee_stats_meminfo(void)
{
  u32 __retres;
  unsigned long tmp;
  {
    
#line 69 
    int const __y = 256;
    
#line 69 
    tmp = 256UL;
  }
  
#line 69 
  __retres = (unsigned int)tmp;
  
#line 69 
  return __retres;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_get_attr_isr(struct bfa_cee *cee, enum bfa_status status)
{
  
#line 81 
  cee->get_attr_status = status;
  
#line 82 
  if (status == (unsigned int)BFA_STATUS_OK) {
    
#line 83 
    memcpy((void *)cee->attr,(void const *)cee->attr_dma.kva,832UL);
    
#line 85 
    bfa_cee_format_cee_cfg((void *)cee->attr);
  }
  else ;
  
#line 87 
  cee->get_attr_pending = (_Bool)0;
  
#line 88 
  if (cee->cbfn.get_attr_cbfn != (void (*)(void *, enum bfa_status ))0) 
    
#line 89 
    (*(cee->cbfn.get_attr_cbfn))(cee->cbfn.get_attr_cbarg,status); else ;
  
#line 90 
  return;
}


#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_get_stats_isr(struct bfa_cee *cee, enum bfa_status status)
{
  
#line 101 
  cee->get_stats_status = status;
  
#line 102 
  if (status == (unsigned int)BFA_STATUS_OK) {
    
#line 103 
    memcpy((void *)cee->stats,(void const *)cee->stats_dma.kva,72UL);
    
#line 105 
    bfa_cee_stats_swap(cee->stats);
  }
  else ;
  
#line 107 
  cee->get_stats_pending = (_Bool)0;
  
#line 108 
  if (cee->cbfn.get_stats_cbfn != (void (*)(void *, enum bfa_status ))0) 
    
#line 109 
    (*(cee->cbfn.get_stats_cbfn))(cee->cbfn.get_stats_cbarg,status); else ;
  
#line 110 
  return;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_reset_stats_isr(struct bfa_cee *cee, enum bfa_status status)
{
  
#line 125 
  cee->reset_stats_status = status;
  
#line 126 
  cee->reset_stats_pending = (_Bool)0;
  
#line 127 
  if (cee->cbfn.reset_stats_cbfn != (void (*)(void *, enum bfa_status ))0) 
    
#line 128 
    (*(cee->cbfn.reset_stats_cbfn))(cee->cbfn.reset_stats_cbarg,status); else ;
  
#line 129 
  return;
}


#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
u32 bfa_nw_cee_meminfo(void)
{
  u32 __retres;
  u32 tmp;
  u32 tmp_0;
  
#line 136 
  tmp = bfa_cee_attr_meminfo();
  
#line 136 
  tmp_0 = bfa_cee_stats_meminfo();
  
#line 136 
  __retres = tmp + tmp_0;
  
#line 136 
  return __retres;
}


#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
void bfa_nw_cee_mem_claim(struct bfa_cee *cee, u8 *dma_kva, u64 dma_pa)
{
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  
#line 149 
  cee->attr_dma.kva = (void *)dma_kva;
  
#line 150 
  cee->attr_dma.pa = dma_pa;
  
#line 151 
  tmp = bfa_cee_attr_meminfo();
  
#line 151 
  cee->stats_dma.kva = (void *)(dma_kva + tmp);
  
#line 152 
  tmp_0 = bfa_cee_attr_meminfo();
  
#line 152 
  cee->stats_dma.pa = (unsigned long long)tmp_0 + dma_pa;
  
#line 153 
  cee->attr = (struct bfa_cee_attr *)dma_kva;
  
#line 155 
  tmp_1 = bfa_cee_attr_meminfo();
  
#line 154 
  cee->stats = (struct bfa_cee_stats *)(dma_kva + tmp_1);
  
#line 156 
  return;
}


#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
enum bfa_status bfa_nw_cee_get_attr(struct bfa_cee *cee, struct bfa_cee_attr *attr, void (*cbfn)(void *, enum bfa_status ), void *cbarg)
{
  enum bfa_status __retres;
  struct bfi_cee_get_req *cmd;
  int tmp_0;
  bool tmp;
  
#line 171 
  if ((long)(cee == (struct bfa_cee *)0) != 0L || (long)(cee->ioc == (struct bfa_ioc *)0) != 0L) {
    
#line 173 
    ldv_inline_asm();
    
#line 171 
    ;
  }
  else ;
  
#line 172 
  tmp = bfa_nw_ioc_is_operational(cee->ioc);
  
#line 172 
  if (tmp) 
#line 172 
           tmp_0 = 0; else 
#line 172 
                           tmp_0 = 1;
  
#line 172 
  if (tmp_0) {
    
#line 173 
    __retres = BFA_STATUS_IOC_FAILURE;
    
#line 173 
    goto return_label;
  }
  else ;
  
#line 175 
  if ((int)cee->get_attr_pending != 0) {
    
#line 176 
    __retres = BFA_STATUS_DEVBUSY;
    
#line 176 
    goto return_label;
  }
  else ;
  
#line 178 
  cee->get_attr_pending = (_Bool)1;
  
#line 179 
  cmd = (struct bfi_cee_get_req *)(& cee->get_cfg_mb.msg);
  
#line 180 
  cee->attr = attr;
  
#line 181 
  cee->cbfn.get_attr_cbfn = cbfn;
  
#line 182 
  cee->cbfn.get_attr_cbarg = cbarg;
  
#line 183 
  cmd->mh.msg_class = (unsigned char)4U;
  
#line 183 
  cmd->mh.msg_id = (unsigned char)1U;
  
#line 183 
  cmd->mh.mtag.h2i.fn_lpu = (cee->ioc)->port_id;
  
#line 185 
  __bfa_dma_be_addr_set(& cmd->dma_addr,cee->attr_dma.pa);
  
#line 186 
  bfa_nw_ioc_mbox_queue(cee->ioc,& cee->get_cfg_mb,(void (*)(void *))0,(void *)0);
  
#line 188 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 188 
                return __retres;
}


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_isr(void *cbarg, struct bfi_mbmsg *m)
{
  union bfi_cee_i2h_msg_u *msg;
  struct bfi_cee_get_rsp *get_rsp;
  
#line 200 
  struct bfa_cee *cee = (struct bfa_cee *)cbarg;
  
#line 201 
  msg = (union bfi_cee_i2h_msg_u *)m;
  
#line 202 
  get_rsp = (struct bfi_cee_get_rsp *)m;
  
#line 203 
  switch ((int)msg->mh.msg_id) {
    case 129: 
#line 204 
    ;
    
#line 205 
    bfa_cee_get_attr_isr(cee,(enum bfa_status)get_rsp->cmd_status);
    
#line 206 
    goto ldv_47050;
    case 131: 
#line 207 
    ;
    
#line 208 
    bfa_cee_get_stats_isr(cee,(enum bfa_status)get_rsp->cmd_status);
    
#line 209 
    goto ldv_47050;
    case 130: 
#line 210 
    ;
    
#line 211 
    bfa_cee_reset_stats_isr(cee,(enum bfa_status)get_rsp->cmd_status);
    
#line 212 
    goto ldv_47050;
    default: 
#line 213 
    ;
    
#line 216 
    ldv_inline_asm();
    
#line 214 
    ;
  }
  ldv_47050: 
#line 216 
  ;
  
#line 217 
  return;
}


#line 225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
static void bfa_cee_notify(void *arg, enum bfa_ioc_event event)
{
  struct bfa_cee *cee;
  
#line 228 
  cee = (struct bfa_cee *)arg;
  
#line 230 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 231 
    ;
    case (unsigned int)3: 
#line 232 
    ;
    
#line 233 
    if ((int)cee->get_attr_pending != 0) {
      
#line 234 
      cee->get_attr_status = BFA_STATUS_FAILED;
      
#line 235 
      cee->get_attr_pending = (_Bool)0;
      
#line 236 
      if (cee->cbfn.get_attr_cbfn != (void (*)(void *, enum bfa_status ))0) 
        
#line 237 
        (*(cee->cbfn.get_attr_cbfn))(cee->cbfn.get_attr_cbarg,(enum bfa_status)BFA_STATUS_FAILED); else ;
    }
    else ;
    
#line 242 
    if ((int)cee->get_stats_pending != 0) {
      
#line 243 
      cee->get_stats_status = BFA_STATUS_FAILED;
      
#line 244 
      cee->get_stats_pending = (_Bool)0;
      
#line 245 
      if (cee->cbfn.get_stats_cbfn != (void (*)(void *, enum bfa_status ))0) 
        
#line 246 
        (*(cee->cbfn.get_stats_cbfn))(cee->cbfn.get_stats_cbarg,(enum bfa_status)BFA_STATUS_FAILED); else ;
    }
    else ;
    
#line 251 
    if ((int)cee->reset_stats_pending != 0) {
      
#line 252 
      cee->reset_stats_status = BFA_STATUS_FAILED;
      
#line 253 
      cee->reset_stats_pending = (_Bool)0;
      
#line 254 
      if (cee->cbfn.reset_stats_cbfn != (void (*)(void *, enum bfa_status ))0) 
        
#line 255 
        (*(cee->cbfn.reset_stats_cbfn))(cee->cbfn.reset_stats_cbarg,(enum bfa_status)BFA_STATUS_FAILED); else ;
    }
    else ;
    
#line 260 
    goto ldv_47061;
    default: 
#line 262 
    ;
    
#line 263 
    goto ldv_47061;
  }
  ldv_47061: 
#line 265 
  ;
  
#line 266 
  return;
}


#line 277  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cee.c"
void bfa_nw_cee_attach(struct bfa_cee *cee, struct bfa_ioc *ioc, void *dev)
{
  
#line 280 
  if ((long)(cee == (struct bfa_cee *)0) != 0L) {
    
#line 282 
    ldv_inline_asm();
    
#line 280 
    ;
  }
  else ;
  
#line 281 
  cee->dev = dev;
  
#line 282 
  cee->ioc = ioc;
  
#line 284 
  bfa_nw_ioc_mbox_regisr(cee->ioc,(enum bfi_mclass)BFI_MC_CEE,& bfa_cee_isr,(void *)cee);
  
#line 285 
  cee->ioc_notify.cbfn = & bfa_cee_notify;
  
#line 285 
  cee->ioc_notify.cbarg = (void *)cee;
  
#line 286 
  bfa_nw_ioc_notify_register(cee->ioc,& cee->ioc_notify);
  
#line 287 
  return;
}

unsigned long __builtin_bswap64(unsigned long);

void __builtin_prefetch(void const * , ...);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __fswab64(__u64 val)
{
  __u64 tmp;
  
#line 71 
  tmp = (__u64)__builtin_bswap64((unsigned long)val);
  
#line 71 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/getorder.h"
__inline static int __get_order(unsigned long size)
{
  int order;
  
#line 17 
  size -= 1UL;
  
#line 18 
  size >>= 12;
  
#line 22 
  order = fls64((unsigned long long)size);
  
#line 24 
  return order;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_0(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_81_0(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_84_0(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_95(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_98(spinlock_t *lock, unsigned long flags);


#line 514 
static void ldv_spin_unlock_irqrestore_101(spinlock_t *lock, unsigned long flags);


#line 518 
static void ldv_spin_unlock_irqrestore_107_0(spinlock_t *lock, unsigned long flags);


#line 522 
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags);


#line 526 
static void ldv_spin_unlock_irqrestore_111_0(spinlock_t *lock, unsigned long flags);


#line 530 
static void ldv_spin_unlock_irqrestore_113_0(spinlock_t *lock, unsigned long flags);


#line 534 
static void ldv_spin_unlock_irqrestore_116(spinlock_t *lock, unsigned long flags);


#line 538 
static void ldv_spin_unlock_irqrestore_118(spinlock_t *lock, unsigned long flags);


#line 542 
static void ldv_spin_unlock_irqrestore_122(spinlock_t *lock, unsigned long flags);


#line 546 
static void ldv_spin_unlock_irqrestore_124(spinlock_t *lock, unsigned long flags);


#line 550 
static void ldv_spin_unlock_irqrestore_127(spinlock_t *lock, unsigned long flags);


#line 554 
static void ldv_spin_unlock_irqrestore_129(spinlock_t *lock, unsigned long flags);


#line 558 
static void ldv_spin_unlock_irqrestore_131(spinlock_t *lock, unsigned long flags);


#line 562 
static void ldv_spin_unlock_irqrestore_133(spinlock_t *lock, unsigned long flags);


#line 566 
static void ldv_spin_unlock_irqrestore_135(spinlock_t *lock, unsigned long flags);


#line 570 
static void ldv_spin_unlock_irqrestore_137(spinlock_t *lock, unsigned long flags);


#line 574 
static void ldv_spin_unlock_irqrestore_139(spinlock_t *lock, unsigned long flags);


#line 578 
static void ldv_spin_unlock_irqrestore_141(spinlock_t *lock, unsigned long flags);


#line 582 
static void ldv_spin_unlock_irqrestore_143(spinlock_t *lock, unsigned long flags);


#line 586 
static void ldv_spin_unlock_irqrestore_146(spinlock_t *lock, unsigned long flags);


#line 590 
static void ldv_spin_unlock_irqrestore_148(spinlock_t *lock, unsigned long flags);


#line 594 
static void ldv_spin_unlock_irqrestore_150(spinlock_t *lock, unsigned long flags);


#line 598 
static void ldv_spin_unlock_irqrestore_152(spinlock_t *lock, unsigned long flags);


#line 602 
static void ldv_spin_unlock_irqrestore_153(spinlock_t *lock, unsigned long flags);


#line 606 
static void ldv_spin_unlock_irqrestore_155(spinlock_t *lock, unsigned long flags);


#line 610 
static void ldv_spin_unlock_irqrestore_157(spinlock_t *lock, unsigned long flags);


#line 614 
static void ldv_spin_unlock_irqrestore_159(spinlock_t *lock, unsigned long flags);


#line 618 
static void ldv_spin_unlock_irqrestore_161(spinlock_t *lock, unsigned long flags);


#line 622 
static void ldv_spin_unlock_irqrestore_163(spinlock_t *lock, unsigned long flags);


#line 626 
static void ldv_spin_unlock_irqrestore_165(spinlock_t *lock, unsigned long flags);


#line 630 
static void ldv_spin_unlock_irqrestore_167(spinlock_t *lock, unsigned long flags);


#line 634 
static void ldv_spin_unlock_irqrestore_168(spinlock_t *lock, unsigned long flags);


#line 638 
static void ldv_spin_unlock_irqrestore_170(spinlock_t *lock, unsigned long flags);


#line 642 
static void ldv_spin_unlock_irqrestore_172(spinlock_t *lock, unsigned long flags);


#line 646 
static void ldv_spin_unlock_irqrestore_174(spinlock_t *lock, unsigned long flags);


#line 650 
static void ldv_spin_unlock_irqrestore_177(spinlock_t *lock, unsigned long flags);


#line 654 
static void ldv_spin_unlock_irqrestore_179(spinlock_t *lock, unsigned long flags);


#line 658 
static void ldv_spin_unlock_irqrestore_184(spinlock_t *lock, unsigned long flags);


#line 662 
static void ldv_spin_unlock_irqrestore_187(spinlock_t *lock, unsigned long flags);


#line 666 
static void ldv_spin_unlock_irqrestore_189(spinlock_t *lock, unsigned long flags);


#line 670 
static void ldv_spin_unlock_irqrestore_190(spinlock_t *lock, unsigned long flags);


#line 674 
static void ldv_spin_unlock_irqrestore_192(spinlock_t *lock, unsigned long flags);


#line 678 
static void ldv_spin_unlock_irqrestore_194(spinlock_t *lock, unsigned long flags);


#line 682 
static void ldv_spin_unlock_irqrestore_199(spinlock_t *lock, unsigned long flags);


#line 686 
static void ldv_spin_unlock_irqrestore_203(spinlock_t *lock, unsigned long flags);


#line 690 
static void ldv_spin_unlock_irqrestore_206(spinlock_t *lock, unsigned long flags);


#line 694 
static void ldv_spin_unlock_irqrestore_208(spinlock_t *lock, unsigned long flags);


#line 698 
static void ldv_spin_unlock_irqrestore_215(spinlock_t *lock, unsigned long flags);


#line 702 
static void ldv_spin_unlock_irqrestore_217(spinlock_t *lock, unsigned long flags);


#line 706 
static void ldv_spin_unlock_irqrestore_219(spinlock_t *lock, unsigned long flags);


#line 710 
static void ldv_spin_unlock_irqrestore_221(spinlock_t *lock, unsigned long flags);


#line 714 
static void ldv_spin_unlock_irqrestore_223(spinlock_t *lock, unsigned long flags);


#line 718 
static void ldv_spin_unlock_irqrestore_225(spinlock_t *lock, unsigned long flags);


#line 722 
static void ldv_spin_unlock_irqrestore_234(spinlock_t *lock, unsigned long flags);


#line 726 
static void ldv_spin_unlock_irqrestore_243(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_75(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_77(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_175(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_182(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_195(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_197(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_201(struct mutex *ldv_func_arg1);


#line 65 
static void ldv_mutex_lock_209(struct mutex *ldv_func_arg1);


#line 69 
static void ldv_mutex_lock_213(struct mutex *ldv_func_arg1);


#line 73 
static void ldv_mutex_lock_229(struct mutex *ldv_func_arg1);


#line 77 
static void ldv_mutex_lock_238(struct mutex *ldv_func_arg1);


#line 114 
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1);


#line 118 
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1);


#line 122 
static void ldv___ldv_spin_lock_87(spinlock_t *ldv_func_arg1);


#line 126 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 130 
static void ldv___ldv_spin_lock_94(spinlock_t *ldv_func_arg1);


#line 134 
static void ldv___ldv_spin_lock_97(spinlock_t *ldv_func_arg1);


#line 138 
static void ldv___ldv_spin_lock_100(spinlock_t *ldv_func_arg1);


#line 142 
static void ldv___ldv_spin_lock_106_0(spinlock_t *ldv_func_arg1);


#line 146 
static void ldv___ldv_spin_lock_108(spinlock_t *ldv_func_arg1);


#line 150 
static void ldv___ldv_spin_lock_110(spinlock_t *ldv_func_arg1);


#line 154 
static void ldv___ldv_spin_lock_112_0(spinlock_t *ldv_func_arg1);


#line 158 
static void ldv___ldv_spin_lock_114(spinlock_t *ldv_func_arg1);


#line 162 
static void ldv___ldv_spin_lock_117(spinlock_t *ldv_func_arg1);


#line 166 
static void ldv___ldv_spin_lock_120(spinlock_t *ldv_func_arg1);


#line 170 
static void ldv___ldv_spin_lock_123(spinlock_t *ldv_func_arg1);


#line 174 
static void ldv___ldv_spin_lock_126(spinlock_t *ldv_func_arg1);


#line 178 
static void ldv___ldv_spin_lock_128(spinlock_t *ldv_func_arg1);


#line 182 
static void ldv___ldv_spin_lock_130(spinlock_t *ldv_func_arg1);


#line 186 
static void ldv___ldv_spin_lock_132(spinlock_t *ldv_func_arg1);


#line 190 
static void ldv___ldv_spin_lock_134(spinlock_t *ldv_func_arg1);


#line 194 
static void ldv___ldv_spin_lock_136(spinlock_t *ldv_func_arg1);


#line 198 
static void ldv___ldv_spin_lock_138(spinlock_t *ldv_func_arg1);


#line 202 
static void ldv___ldv_spin_lock_140(spinlock_t *ldv_func_arg1);


#line 206 
static void ldv___ldv_spin_lock_142(spinlock_t *ldv_func_arg1);


#line 210 
static void ldv___ldv_spin_lock_145(spinlock_t *ldv_func_arg1);


#line 214 
static void ldv___ldv_spin_lock_147(spinlock_t *ldv_func_arg1);


#line 218 
static void ldv___ldv_spin_lock_149(spinlock_t *ldv_func_arg1);


#line 222 
static void ldv___ldv_spin_lock_151(spinlock_t *ldv_func_arg1);


#line 226 
static void ldv___ldv_spin_lock_154(spinlock_t *ldv_func_arg1);


#line 230 
static void ldv___ldv_spin_lock_156(spinlock_t *ldv_func_arg1);


#line 234 
static void ldv___ldv_spin_lock_158(spinlock_t *ldv_func_arg1);


#line 238 
static void ldv___ldv_spin_lock_160(spinlock_t *ldv_func_arg1);


#line 242 
static void ldv___ldv_spin_lock_162(spinlock_t *ldv_func_arg1);


#line 246 
static void ldv___ldv_spin_lock_164(spinlock_t *ldv_func_arg1);


#line 250 
static void ldv___ldv_spin_lock_166(spinlock_t *ldv_func_arg1);


#line 254 
static void ldv___ldv_spin_lock_169(spinlock_t *ldv_func_arg1);


#line 258 
static void ldv___ldv_spin_lock_171(spinlock_t *ldv_func_arg1);


#line 262 
static void ldv___ldv_spin_lock_173(spinlock_t *ldv_func_arg1);


#line 266 
static void ldv___ldv_spin_lock_176(spinlock_t *ldv_func_arg1);


#line 270 
static void ldv___ldv_spin_lock_178(spinlock_t *ldv_func_arg1);


#line 274 
static void ldv___ldv_spin_lock_183(spinlock_t *ldv_func_arg1);


#line 278 
static void ldv___ldv_spin_lock_186(spinlock_t *ldv_func_arg1);


#line 282 
static void ldv___ldv_spin_lock_188(spinlock_t *ldv_func_arg1);


#line 286 
static void ldv___ldv_spin_lock_191(spinlock_t *ldv_func_arg1);


#line 290 
static void ldv___ldv_spin_lock_193(spinlock_t *ldv_func_arg1);


#line 294 
static void ldv___ldv_spin_lock_198(spinlock_t *ldv_func_arg1);


#line 298 
static void ldv___ldv_spin_lock_202(spinlock_t *ldv_func_arg1);


#line 302 
static void ldv___ldv_spin_lock_205(spinlock_t *ldv_func_arg1);


#line 306 
static void ldv___ldv_spin_lock_207(spinlock_t *ldv_func_arg1);


#line 310 
static void ldv___ldv_spin_lock_214(spinlock_t *ldv_func_arg1);


#line 314 
static void ldv___ldv_spin_lock_216(spinlock_t *ldv_func_arg1);


#line 318 
static void ldv___ldv_spin_lock_218(spinlock_t *ldv_func_arg1);


#line 322 
static void ldv___ldv_spin_lock_220(spinlock_t *ldv_func_arg1);


#line 326 
static void ldv___ldv_spin_lock_222(spinlock_t *ldv_func_arg1);


#line 330 
static void ldv___ldv_spin_lock_224(spinlock_t *ldv_func_arg1);


#line 334 
static void ldv___ldv_spin_lock_233(spinlock_t *ldv_func_arg1);


#line 338 
static void ldv___ldv_spin_lock_242(spinlock_t *ldv_func_arg1);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_93(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_115(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_119(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_121(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_125(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_144(struct timer_list *ldv_func_arg1);


#line 240 
static int ldv_del_timer_sync_230(struct timer_list *ldv_func_arg1);


#line 244 
static int ldv_del_timer_sync_231(struct timer_list *ldv_func_arg1);


#line 248 
static int ldv_del_timer_sync_232(struct timer_list *ldv_func_arg1);


#line 252 
static int ldv_del_timer_sync_239(struct timer_list *ldv_func_arg1);


#line 256 
static int ldv_del_timer_sync_240(struct timer_list *ldv_func_arg1);


#line 260 
static int ldv_del_timer_sync_241(struct timer_list *ldv_func_arg1);


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/completion.h"
unsigned long wait_for_completion_timeout(struct completion *, unsigned long);


#line 106 
void complete(struct completion *);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 181 
void __init_work(struct work_struct *, int);


#line 361 
struct workqueue_struct *__alloc_workqueue_key(char const *, unsigned int, int, struct lock_class_key *, char const * , ...);


#line 421 
void destroy_workqueue(struct workqueue_struct *);


#line 436 
void flush_workqueue(struct workqueue_struct *);


#line 490 
static bool ldv_queue_work_92(struct workqueue_struct *wq, struct work_struct *work);


#line 505 
static bool ldv_queue_delayed_work_86(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 509 
static bool ldv_queue_delayed_work_89(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex-debug.h"
void mutex_destroy(struct mutex *);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_180(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_181(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_185(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_196(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_200(struct mutex *ldv_func_arg1);


#line 221 
static void ldv_mutex_unlock_204(struct mutex *ldv_func_arg1);


#line 225 
static void ldv_mutex_unlock_210(struct mutex *ldv_func_arg1);


#line 229 
static void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1);


#line 233 
static void ldv_mutex_unlock_226(struct mutex *ldv_func_arg1);


#line 237 
static void ldv_mutex_unlock_228(struct mutex *ldv_func_arg1);


#line 241 
static void ldv_mutex_unlock_235(struct mutex *ldv_func_arg1);


#line 245 
static void ldv_mutex_unlock_244(struct mutex *ldv_func_arg1);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 195 
void iounmap(void volatile *);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_48.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 532 
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_44.__anonCompField___anonstruct_160_43.__anonCompField___anonunion_162_42._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_44.__anonCompField___anonstruct_160_43.__anonCompField___anonunion_162_42._count);
  return_label: 
#line 545 
                return;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_44.__anonCompField___anonstruct_160_39.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc_0(size_t size, gfp_t flags);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 179 
__sum16 csum_ipv6_magic(struct in6_addr const *, struct in6_addr const *, __u32, unsigned short, __wsum);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  
#line 118 
  int rc = dma_set_mask(dev,mask);
  
#line 119 
  if (rc == 0) 
#line 120 
               dma_set_coherent_mask(dev,mask); else ;
  
#line 121 
  return rc;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  
#line 1635 
  __skb_fill_page_desc(skb,i,page,off,size);
  
#line 1636 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1636 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 1637 
  return;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int pskb_may_pull(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  unsigned int tmp;
  unsigned char *tmp_1;
  unsigned int tmp_0;
  
#line 1737 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 1737 
  ;
  
#line 1737 
  if ((long)(tmp >= len) != 0L) {
    
#line 1738 
    __retres = 1;
    
#line 1738 
    goto return_label;
  }
  else ;
  
#line 1739 
  if ((long)(skb->len < len) != 0L) {
    
#line 1740 
    __retres = 0;
    
#line 1740 
    goto return_label;
  }
  else ;
  
#line 1741 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 1741 
  ;
  
#line 1741 
  ;
  
#line 1741 
  tmp_1 = __pskb_pull_tail(skb,(int)(len - tmp_0));
  
#line 1741 
  __retres = tmp_1 != (unsigned char *)0U;
  return_label: 
#line 1741 
                return __retres;
}


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2430 
  int delta = 0;
  
#line 2432 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 2432 
  ;
  
#line 2432 
  if (tmp_0 < headroom) {
    unsigned int tmp;
    
#line 2433 
    tmp = skb_headroom((struct sk_buff const *)skb);
    
#line 2433 
    delta = (int)(headroom - tmp);
  }
  else ;
  
#line 2435 
  if (delta != 0 || cloned != 0) {
    int tmp_5;
    int tmp_2;
    int tmp_4;
    {
      int tmp_1;
      
#line 2436 
      int _max1 = 32;
      
#line 2436 
      int _max2 = 64;
      
#line 2436 
      if (_max1 > _max2) 
#line 2436 
                         tmp_1 = _max1; else 
#line 2436 
                                             tmp_1 = _max2;
      
#line 2436 
      tmp_2 = tmp_1;
    }
    {
      int tmp_3;
      
#line 2436 
      int _max1_0 = 32;
      
#line 2436 
      int _max2_0 = 64;
      
#line 2436 
      if (_max1_0 > _max2_0) 
#line 2436 
                             tmp_3 = _max1_0; else 
#line 2436 
                                                   tmp_3 = _max2_0;
      
#line 2436 
      tmp_4 = tmp_3;
    }
    
#line 2436 
    ;
    
#line 2436 
    ;
    
#line 2436 
    tmp_5 = pskb_expand_head(skb,((tmp_2 + -1) + delta) & ~ (tmp_4 + -1),0,32U);
    
#line 2436 
    __retres = tmp_5;
    
#line 2436 
    goto return_label;
  }
  else ;
  
#line 2438 
  __retres = 0;
  return_label: 
#line 2438 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  int tmp_0;
  int tmp;
  
#line 2470 
  tmp = skb_header_cloned((struct sk_buff const *)skb);
  
#line 2470 
  ;
  
#line 2470 
  ;
  
#line 2470 
  tmp_0 = __skb_cow(skb,headroom,tmp);
  
#line 2470 
  return tmp_0;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_99(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_103(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_105(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 161 
static void ldv_free_irq_96(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_102(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_104(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  clear_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_236(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_245(struct net_device *ldv_func_arg1);


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  clear_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2579 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2579 
  netif_tx_stop_queue(tmp);
  
#line 2580 
  return;
}


#line 2802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_subqueue(struct net_device *dev, u16 queue_index)
{
  
#line 2804 
  struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)queue_index);
  
#line 2805 
  netif_tx_stop_queue(txq);
  
#line 2806 
  return;
}


#line 2829 
void netif_wake_subqueue(struct net_device *, u16);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2949 
void napi_gro_flush(struct napi_struct *, bool);


#line 2950 
struct sk_buff *napi_get_frags(struct napi_struct *);


#line 2951 
gro_result_t napi_gro_frags(struct napi_struct *);


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3355 
static int ldv_register_netdev_227(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_237(struct net_device *ldv_func_arg1);


#line 3549 
void netdev_rss_key_fill(void *, size_t);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_212(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 __vlan_get_protocol(struct sk_buff *skb, __be16 type, int *depth)
{
  __be16 __retres;
  
#line 484 
  unsigned int vlan_depth = (unsigned int)skb->mac_len;
  
#line 490 
  if ((unsigned int)type == 129U || (unsigned int)type == 43144U) {
    
#line 491 
    if (vlan_depth != 0U) {
      int tmp;
      {
        
#line 492 
        int __ret_warn_on = vlan_depth <= 3U;
        
#line 492 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 492 
                                              warn_slowpath_null("include/linux/if_vlan.h",492); else ;
        
#line 492 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 492 
      if ((long)tmp != 0L) {
        
#line 493 
        __retres = (unsigned short)0U;
        
#line 493 
        goto return_label;
      }
      else ;
      
#line 494 
      vlan_depth += 4294967292U;
    }
    else 
#line 496 
         vlan_depth = 14U;
    ldv_45071: 
#line 497 
    ;
    {
      struct vlan_hdr *vh;
      int tmp_0;
      
#line 501 
      tmp_0 = pskb_may_pull(skb,vlan_depth + 4U);
      
#line 501 
      if ((long)(tmp_0 == 0) != 0L) {
        
#line 503 
        __retres = (unsigned short)0U;
        
#line 503 
        goto return_label;
      }
      else ;
      
#line 505 
      vh = (struct vlan_hdr *)(skb->data + vlan_depth);
      
#line 506 
      type = vh->h_vlan_encapsulated_proto;
      
#line 507 
      vlan_depth += 4U;
    }
    
#line 509 
    if ((unsigned int)type == 129U || (unsigned int)type == 43144U) 
#line 511 
                                                                    goto ldv_45071; else 
                                                                    
#line 514 
                                                                    goto ldv_45072;
    ldv_45072: 
#line 515 
    ;
  }
  else ;
  
#line 512 
  if (depth != (int *)0) 
#line 513 
                         *depth = (int)vlan_depth; else ;
  
#line 515 
  __retres = type;
  return_label: 
#line 515 
                return __retres;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 vlan_get_protocol(struct sk_buff *skb)
{
  __be16 tmp;
  
#line 527 
  tmp = __vlan_get_protocol(skb,(unsigned short)((int)skb->protocol),(int *)0);
  
#line 527 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 980 
void pci_intx(struct pci_dev *, int);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_246(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_247(struct pci_driver *ldv_func_arg1);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
void bfa_nw_ioc_auto_recover(bool auto_recover);


#line 307 
void bfa_nw_ioc_timeout(struct bfa_ioc *ioc);


#line 308 
void bfa_nw_ioc_hb_check(struct bfa_ioc *ioc);


#line 309 
void bfa_nw_iocpf_timeout(struct bfa_ioc *ioc);


#line 310 
void bfa_nw_iocpf_sem_timeout(struct bfa_ioc *ioc);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna.h"
u32 const bna_napi_dim_vector[8U][2U];


#line 266 
void bna_res_req(struct bna_res_info *res_info);


#line 267 
void bna_mod_res_req(struct bna *bna, struct bna_res_info *res_info);


#line 268 
void bna_init(struct bna *bna, struct bnad *bnad, struct bfa_pcidev *pcidev, struct bna_res_info *res_info);


#line 271 
void bna_mod_init(struct bna *bna, struct bna_res_info *res_info);


#line 272 
void bna_uninit(struct bna *bna);


#line 273 
int bna_num_txq_set(struct bna *bna, int num_txq);


#line 274 
int bna_num_rxp_set(struct bna *bna, int num_rxp);


#line 275 
void bna_hw_stats_get(struct bna *bna);


#line 286 
void bna_mbox_handler(struct bna *bna, u32 intr_status);


#line 314 
void bna_tx_res_req(int num_txq, int txq_depth, struct bna_res_info *res_info);


#line 316 
struct bna_tx *bna_tx_create(struct bna *bna, struct bnad *bnad, struct bna_tx_config *tx_cfg, struct bna_tx_event_cbfn const *tx_cbfn, struct bna_res_info *res_info, void *priv);


#line 320 
void bna_tx_destroy(struct bna_tx *tx);


#line 321 
void bna_tx_enable(struct bna_tx *tx);


#line 322 
void bna_tx_disable(struct bna_tx *tx, enum bna_cleanup_type type, void (*cbfn)(void *, struct bna_tx *));


#line 324 
void bna_tx_cleanup_complete(struct bna_tx *tx);


#line 325 
void bna_tx_coalescing_timeo_set(struct bna_tx *tx, int coalescing_timeo);


#line 351 
void bna_rx_res_req(struct bna_rx_config *q_cfg, struct bna_res_info *res_info);


#line 353 
struct bna_rx *bna_rx_create(struct bna *bna, struct bnad *bnad, struct bna_rx_config *rx_cfg, struct bna_rx_event_cbfn const *rx_cbfn, struct bna_res_info *res_info, void *priv);


#line 357 
void bna_rx_destroy(struct bna_rx *rx);


#line 358 
void bna_rx_enable(struct bna_rx *rx);


#line 359 
void bna_rx_disable(struct bna_rx *rx, enum bna_cleanup_type type, void (*cbfn)(void *, struct bna_rx *));


#line 361 
void bna_rx_cleanup_complete(struct bna_rx *rx);


#line 362 
void bna_rx_coalescing_timeo_set(struct bna_rx *rx, int coalescing_timeo);


#line 363 
void bna_rx_dim_reconfig(struct bna *bna, u32 const (*vector)[2U]);


#line 364 
void bna_rx_dim_update(struct bna_ccb *ccb);


#line 365 
enum bna_cb_status bna_rx_ucast_set(struct bna_rx *rx, u8 const *ucmac);


#line 366 
enum bna_cb_status bna_rx_ucast_listset(struct bna_rx *rx, int count, u8 const *uclist);


#line 368 
enum bna_cb_status bna_rx_mcast_add(struct bna_rx *rx, u8 const *addr, void (*cbfn)(struct bnad *, struct bna_rx *));


#line 371 
enum bna_cb_status bna_rx_mcast_listset(struct bna_rx *rx, int count, u8 const *mclist);


#line 374 
void bna_rx_mcast_delall(struct bna_rx *rx);


#line 376 
enum bna_cb_status bna_rx_mode_set(struct bna_rx *rx, enum bna_rxmode new_mode, enum bna_rxmode bitmask);


#line 378 
void bna_rx_vlan_add(struct bna_rx *rx, int vlan_id);


#line 379 
void bna_rx_vlan_del(struct bna_rx *rx, int vlan_id);


#line 380 
void bna_rx_vlanfilter_enable(struct bna_rx *rx);


#line 381 
void bna_rx_vlan_strip_enable(struct bna_rx *rx);


#line 382 
void bna_rx_vlan_strip_disable(struct bna_rx *rx);


#line 393 
void bna_enet_enable(struct bna_enet *enet);


#line 394 
void bna_enet_disable(struct bna_enet *enet, enum bna_cleanup_type type, void (*cbfn)(void *));


#line 398 
void bna_enet_mtu_set(struct bna_enet *enet, int mtu, void (*cbfn)(struct bnad *));


#line 400 
void bna_enet_perm_mac_get(struct bna_enet *enet, u8 *mac);


#line 405 
void bna_ioceth_enable(struct bna_ioceth *ioceth);


#line 406 
void bna_ioceth_disable(struct bna_ioceth *ioceth, enum bna_cleanup_type type);


#line 412 
void bnad_cb_ethport_link_status(struct bnad *bnad, enum bna_link_status link_status);


#line 416 
void bnad_cb_ioceth_ready(struct bnad *bnad);


#line 417 
void bnad_cb_ioceth_failed(struct bnad *bnad);


#line 418 
void bnad_cb_ioceth_disabled(struct bnad *bnad);


#line 419 
void bnad_cb_mbox_intr_enable(struct bnad *bnad);


#line 420 
void bnad_cb_mbox_intr_disable(struct bnad *bnad);


#line 423 
void bnad_cb_stats_get(struct bnad *bnad, enum bna_cb_status status, struct bna_stats *stats);


#line 379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.h"
struct firmware const *bfi_fw;


#line 384 
u32 *cna_get_firmware_buf(struct pci_dev *pdev);


#line 413 
void bnad_debugfs_init(struct bnad *bnad);


#line 414 
void bnad_debugfs_uninit(struct bnad *bnad);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct mutex bnad_fwimg_mutex = {.count = {.counter = 1}, .wait_lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "bnad_fwimg_mutex.wait_lock", .cpu = 0, .ip = 0UL}}}}, .wait_list = {.next = & bnad_fwimg_mutex.wait_list, .prev = & bnad_fwimg_mutex.wait_list}, .owner = (struct task_struct *)0, .magic = (void *)(& bnad_fwimg_mutex), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "bnad_fwimg_mutex", .cpu = 0, .ip = 0UL}};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static uint bnad_msix_disable;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static uint bnad_ioc_auto_recover = 1U;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static uint bna_debugfs_enable = 1U;

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_rxqs_per_cq = 2U;

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bna_id;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct mutex bnad_list_mutex;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct list_head bnad_list = {.next = & bnad_list, .prev = & bnad_list};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u8 const bnad_bcast_addr[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_add_to_list(struct bnad *bnad)
{
  u32 tmp;
  
#line 82 
  ldv_mutex_lock_75(& bnad_list_mutex);
  
#line 83 
  list_add_tail(& bnad->list_entry,& bnad_list);
  
#line 84 
  tmp = bna_id;
  
#line 84 
  bna_id += 1U;
  
#line 84 
  bnad->id = tmp;
  
#line 85 
  ldv_mutex_unlock_76(& bnad_list_mutex);
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_remove_from_list(struct bnad *bnad)
{
  
#line 91 
  ldv_mutex_lock_77(& bnad_list_mutex);
  
#line 92 
  list_del(& bnad->list_entry);
  
#line 93 
  ldv_mutex_unlock_78(& bnad_list_mutex);
  
#line 94 
  return;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cq_cleanup(struct bnad *bnad, struct bna_ccb *ccb)
{
  struct bna_cq_entry *cmpl;
  int i;
  
#line 105 
  i = 0;
  
#line 105 
  goto ldv_59492;
  ldv_59491: 
#line 106 
  ;
  
#line 106 
  cmpl = (struct bna_cq_entry *)ccb->sw_q + i;
  
#line 107 
  cmpl->valid = (unsigned char)0U;
  
#line 105 
  i += 1;
  ldv_59492: 
#line 106 
  ;
  
#line 105 
  if (ccb->q_depth > (unsigned int)i) 
#line 107 
                                      goto ldv_59491; else 
#line 110 
                                                           goto ldv_59493;
  ldv_59493: 
#line 111 
  ;
  
#line 112 
  return;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_tx_buff_unmap(struct bnad *bnad, struct bnad_tx_unmap *unmap_q, u32 q_depth, u32 index)
{
  struct bnad_tx_unmap *unmap;
  struct sk_buff *skb;
  int vector;
  int nvecs;
  unsigned int tmp;
  
#line 124 
  unmap = unmap_q + index;
  
#line 125 
  nvecs = (int)unmap->nvecs;
  
#line 127 
  skb = unmap->skb;
  
#line 128 
  unmap->skb = (struct sk_buff *)0;
  
#line 129 
  unmap->nvecs = 0U;
  
#line 130 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 130 
  ;
  
#line 130 
  ;
  
#line 130 
  dma_unmap_single_attrs(& (bnad->pcidev)->dev,unmap->vectors[0].dma_addr,(unsigned long)tmp,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 133 
  unmap->vectors[0].dma_addr = 0ULL;
  
#line 134 
  nvecs -= 1;
  
#line 136 
  vector = 0;
  
#line 137 
  goto ldv_59505;
  ldv_59504: 
#line 138 
  ;
  
#line 138 
  vector += 1;
  
#line 139 
  if (vector == 4) {
    
#line 140 
    vector = 0;
    
#line 141 
    index = (index + 1U) & (q_depth + 4294967295U);
    
#line 142 
    unmap = unmap_q + index;
  }
  else ;
  
#line 145 
  dma_unmap_page(& (bnad->pcidev)->dev,unmap->vectors[vector].dma_addr,(unsigned long)unmap->vectors[vector].dma_len,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 149 
  unmap->vectors[vector].dma_addr = 0ULL;
  
#line 150 
  nvecs -= 1;
  ldv_59505: 
#line 151 
  ;
  
#line 137 
  if (nvecs != 0) 
#line 139 
                  goto ldv_59504; else 
#line 142 
                                       goto ldv_59506;
  ldv_59506: 
#line 143 
  ;
  
#line 153 
  index = (index + 1U) & (q_depth + 4294967295U);
  
#line 155 
  return index;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_txq_cleanup(struct bnad *bnad, struct bna_tcb *tcb)
{
  struct sk_buff *skb;
  int i;
  
#line 166 
  struct bnad_tx_unmap *unmap_q = (struct bnad_tx_unmap *)tcb->unmap_q;
  
#line 170 
  i = 0;
  
#line 170 
  goto ldv_59516;
  ldv_59515: 
#line 171 
  ;
  
#line 171 
  skb = (unmap_q + i)->skb;
  
#line 172 
  if (skb == (struct sk_buff *)0) 
#line 173 
                                  goto ldv_59514; else ;
  
#line 174 
  bnad_tx_buff_unmap(bnad,unmap_q,tcb->q_depth,(unsigned int)i);
  
#line 176 
  dev_kfree_skb_any(skb);
  ldv_59514: 
#line 177 
  ;
  
#line 170 
  i += 1;
  ldv_59516: 
#line 171 
  ;
  
#line 170 
  if (tcb->q_depth > (unsigned int)i) 
#line 172 
                                      goto ldv_59515; else 
#line 175 
                                                           goto ldv_59517;
  ldv_59517: 
#line 176 
  ;
  
#line 177 
  return;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_txcmpl_process(struct bnad *bnad, struct bna_tcb *tcb)
{
  u32 __retres;
  u32 wis;
  u32 unmap_wis;
  u32 hw_cons;
  u32 cons;
  u32 q_depth;
  struct bnad_tx_unmap *unmap;
  struct sk_buff *skb;
  int tmp;
  
#line 188 
  u32 sent_packets = 0U;
  
#line 188 
  u32 sent_bytes = 0U;
  
#line 190 
  struct bnad_tx_unmap *unmap_q = (struct bnad_tx_unmap *)tcb->unmap_q;
  
#line 195 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
  
#line 195 
  if (tmp == 0) {
    
#line 196 
    __retres = 0U;
    
#line 196 
    goto return_label;
  }
  else ;
  
#line 198 
  hw_cons = *(tcb->hw_consumer_index);
  
#line 199 
  cons = tcb->consumer_index;
  
#line 200 
  q_depth = tcb->q_depth;
  
#line 202 
  wis = (hw_cons - cons) & (q_depth + 4294967295U);
  
#line 203 
  if ((long)(((tcb->producer_index - tcb->consumer_index) & (tcb->q_depth + 4294967295U)) < wis) != 0L) {
    
#line 205 
    ldv_inline_asm();
    
#line 203 
    ;
  }
  else ;
  
#line 205 
  goto ldv_59533;
  ldv_59532: 
#line 206 
  ;
  
#line 206 
  unmap = unmap_q + cons;
  
#line 208 
  skb = unmap->skb;
  
#line 210 
  sent_packets += 1U;
  
#line 211 
  sent_bytes = skb->len + sent_bytes;
  
#line 213 
  unmap_wis = (unmap->nvecs + 3U) >> 2;
  
#line 214 
  wis -= unmap_wis;
  
#line 216 
  cons = bnad_tx_buff_unmap(bnad,unmap_q,q_depth,cons);
  
#line 217 
  dev_kfree_skb_any(skb);
  ldv_59533: 
#line 218 
  ;
  
#line 205 
  if (wis != 0U) 
#line 207 
                 goto ldv_59532; else 
#line 210 
                                      goto ldv_59534;
  ldv_59534: 
#line 211 
  ;
  
#line 221 
  tcb->consumer_index = hw_cons;
  
#line 223 
  (tcb->txq)->tx_packets += (unsigned long long)sent_packets;
  
#line 224 
  (tcb->txq)->tx_bytes += (unsigned long long)sent_bytes;
  
#line 226 
  __retres = sent_packets;
  return_label: 
#line 226 
                return __retres;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_tx_complete(struct bnad *bnad, struct bna_tcb *tcb)
{
  u32 __retres;
  int tmp;
  int tmp_3;
  
#line 232 
  struct net_device *netdev = bnad->netdev;
  
#line 233 
  u32 sent = 0U;
  
#line 235 
  tmp = test_and_set_bit(0L,(unsigned long volatile *)(& tcb->flags));
  
#line 235 
  if (tmp != 0) {
    
#line 236 
    __retres = 0U;
    
#line 236 
    goto return_label;
  }
  else ;
  
#line 238 
  sent = bnad_txcmpl_process(bnad,tcb);
  
#line 239 
  if (sent != 0U) {
    bool tmp_1;
    
#line 240 
    tmp_1 = netif_queue_stopped((struct net_device const *)netdev);
    
#line 240 
    if ((int)tmp_1 != 0) {
      bool tmp_2;
      
#line 240 
      tmp_2 = netif_carrier_ok((struct net_device const *)netdev);
      
#line 240 
      if ((int)tmp_2 != 0) {
        
#line 241 
        if ((((tcb->consumer_index - tcb->producer_index) + 4294967295U) & (tcb->q_depth + 4294967295U)) > 7U) {
          int tmp_0;
          
#line 244 
          tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
          
#line 244 
          if (tmp_0 != 0) {
            
#line 245 
            netif_wake_queue(netdev);
            
#line 246 
            bnad->stats.drv_stats.netif_queue_wakeup += 1ULL;
          }
          else ;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 251 
  tmp_3 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
  
#line 251 
  if ((long)(tmp_3 != 0) != 0L) 
#line 252 
                                writel((tcb->i_dbell)->doorbell_ack | sent,(void volatile *)(tcb->i_dbell)->doorbell_addr); else ;
  
#line 253 
  ldv_inline_asm();
  
#line 255 
  clear_bit(0L,(unsigned long volatile *)(& tcb->flags));
  
#line 257 
  __retres = sent;
  return_label: 
#line 257 
                return __retres;
}


#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static irqreturn_t bnad_msix_tx(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 264 
  struct bna_tcb *tcb = (struct bna_tcb *)data;
  
#line 265 
  struct bnad *bnad = tcb->bnad;
  
#line 267 
  bnad_tx_complete(bnad,tcb);
  
#line 269 
  __retres = IRQ_HANDLED;
  
#line 269 
  return __retres;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
__inline static void bnad_rxq_alloc_uninit(struct bnad *bnad, struct bna_rcb *rcb)
{
  
#line 275 
  struct bnad_rx_unmap_q *unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 277 
  unmap_q->reuse_pi = -1;
  
#line 278 
  unmap_q->alloc_order = -1;
  
#line 279 
  unmap_q->map_size = 0U;
  
#line 280 
  unmap_q->type = BNAD_RXBUF_NONE;
  
#line 281 
  return;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_rxq_alloc_init(struct bnad *bnad, struct bna_rcb *rcb)
{
  int __retres;
  int order;
  
#line 287 
  struct bnad_rx_unmap_q *unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 290 
  bnad_rxq_alloc_uninit(bnad,rcb);
  
#line 292 
  if (0 != 0) {
    int tmp_69;
    
#line 292 
    if ((rcb->rxq)->buffer_size != 0) {
      int tmp_68;
      
#line 292 
      if ((unsigned int)(rcb->rxq)->buffer_size > 4095U) {
        int tmp_67;
        
#line 292 
        if (0 != 0) {
          int tmp_65;
          
#line 292 
          if ((rcb->rxq)->buffer_size + -1 <= 0) {
            int tmp;
            
#line 292 
            tmp = ____ilog2_NaN();
            
#line 292 
            tmp_65 = tmp + -11;
          }
          else {
            int tmp_64;
            
#line 292 
            if ((rcb->rxq)->buffer_size + -1 >= 0) {
              int tmp_63;
              
#line 292 
              if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4611686018427387904ULL) == 0ULL) {
                int tmp_62;
                
#line 292 
                if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 2305843009213693952ULL) == 0ULL) {
                  int tmp_61;
                  
#line 292 
                  if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1152921504606846976ULL) == 0ULL) {
                    int tmp_60;
                    
#line 292 
                    if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 576460752303423488ULL) == 0ULL) {
                      int tmp_59;
                      
#line 292 
                      if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 288230376151711744ULL) == 0ULL) {
                        int tmp_58;
                        
#line 292 
                        if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 144115188075855872ULL) == 0ULL) {
                          int tmp_57;
                          
#line 292 
                          if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 72057594037927936ULL) == 0ULL) {
                            int tmp_56;
                            
#line 292 
                            if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 36028797018963968ULL) == 0ULL) {
                              int tmp_55;
                              
#line 292 
                              if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 18014398509481984ULL) == 0ULL) {
                                int tmp_54;
                                
#line 292 
                                if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 9007199254740992ULL) == 0ULL) {
                                  int tmp_53;
                                  
#line 292 
                                  if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4503599627370496ULL) == 0ULL) {
                                    int tmp_52;
                                    
#line 292 
                                    if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 2251799813685248ULL) == 0ULL) {
                                      int tmp_51;
                                      
#line 292 
                                      if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1125899906842624ULL) == 0ULL) {
                                        int tmp_50;
                                        
#line 292 
                                        if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 562949953421312ULL) == 0ULL) {
                                          int tmp_49;
                                          
#line 292 
                                          if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 281474976710656ULL) == 0ULL) {
                                            int tmp_48;
                                            
#line 292 
                                            if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 140737488355328ULL) == 0ULL) {
                                              int tmp_47;
                                              
#line 292 
                                              if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 70368744177664ULL) == 0ULL) {
                                                int tmp_46;
                                                
#line 292 
                                                if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 35184372088832ULL) == 0ULL) {
                                                  int tmp_45;
                                                  
#line 292 
                                                  if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 17592186044416ULL) == 0ULL) {
                                                    int tmp_44;
                                                    
#line 292 
                                                    if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 8796093022208ULL) == 0ULL) {
                                                      int tmp_43;
                                                      
#line 292 
                                                      if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4398046511104ULL) == 0ULL) {
                                                        int tmp_42;
                                                        
#line 292 
                                                        if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 2199023255552ULL) == 0ULL) {
                                                          int tmp_41;
                                                          
#line 292 
                                                          if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1099511627776ULL) == 0ULL) {
                                                            int tmp_40;
                                                            
#line 292 
                                                            if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 549755813888ULL) == 0ULL) {
                                                              int tmp_39;
                                                              
#line 292 
                                                              if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 274877906944ULL) == 0ULL) {
                                                                int tmp_38;
                                                                
#line 292 
                                                                if (((unsigned long long)((rcb->rxq)->buffer_size + -1) & 137438953472ULL) == 0ULL) {
                                                                  int tmp_37;
                                                                  
#line 292 
                                                                  if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 68719476736ULL) == 0ULL) {
                                                                    int tmp_36;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 34359738368ULL) == 0ULL) {
                                                                    int tmp_35;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 17179869184ULL) == 0ULL) {
                                                                    int tmp_34;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 8589934592ULL) == 0ULL) {
                                                                    int tmp_33;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4294967296ULL) == 0ULL) {
                                                                    int tmp_32;
                                                                    
#line 292 
                                                                    if (
                                                                    (rcb->rxq)->buffer_size + -1 >= 0) {
                                                                    int tmp_31;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1073741824ULL) == 0ULL) {
                                                                    int tmp_30;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 536870912ULL) == 0ULL) {
                                                                    int tmp_29;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 268435456ULL) == 0ULL) {
                                                                    int tmp_28;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 134217728ULL) == 0ULL) {
                                                                    int tmp_27;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 67108864ULL) == 0ULL) {
                                                                    int tmp_26;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 33554432ULL) == 0ULL) {
                                                                    int tmp_25;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 16777216ULL) == 0ULL) {
                                                                    int tmp_24;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 8388608ULL) == 0ULL) {
                                                                    int tmp_23;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4194304ULL) == 0ULL) {
                                                                    int tmp_22;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 2097152ULL) == 0ULL) {
                                                                    int tmp_21;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1048576ULL) == 0ULL) {
                                                                    int tmp_20;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 524288ULL) == 0ULL) {
                                                                    int tmp_19;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 262144ULL) == 0ULL) {
                                                                    int tmp_18;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 131072ULL) == 0ULL) {
                                                                    int tmp_17;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 65536ULL) == 0ULL) {
                                                                    int tmp_16;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 32768ULL) == 0ULL) {
                                                                    int tmp_15;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 16384ULL) == 0ULL) {
                                                                    int tmp_14;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 8192ULL) == 0ULL) {
                                                                    int tmp_13;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4096ULL) == 0ULL) {
                                                                    int tmp_12;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 2048ULL) == 0ULL) {
                                                                    int tmp_11;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1024ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 512ULL) == 0ULL) {
                                                                    int tmp_9;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 256ULL) == 0ULL) {
                                                                    int tmp_8;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 128ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 64ULL) == 0ULL) {
                                                                    int tmp_6;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 32ULL) == 0ULL) {
                                                                    int tmp_5;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 16ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 8ULL) == 0ULL) {
                                                                    int tmp_3;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 4ULL) == 0ULL) {
                                                                    int tmp_2;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 2ULL) == 0ULL) {
                                                                    int tmp_1;
                                                                    
#line 292 
                                                                    if (
                                                                    ((unsigned long long)((rcb->rxq)->buffer_size + -1) & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 292 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 292 
                                                                    tmp_1 = tmp_0 + -11;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_1 = -11;
                                                                    
#line 292 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_2 = -10;
                                                                    
#line 292 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_3 = -9;
                                                                    
#line 292 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_4 = -8;
                                                                    
#line 292 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_5 = -7;
                                                                    
#line 292 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_6 = -6;
                                                                    
#line 292 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_7 = -5;
                                                                    
#line 292 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_8 = -4;
                                                                    
#line 292 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_9 = -3;
                                                                    
#line 292 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_10 = -2;
                                                                    
#line 292 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_11 = -1;
                                                                    
#line 292 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_12 = 0;
                                                                    
#line 292 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_13 = 1;
                                                                    
#line 292 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_14 = 2;
                                                                    
#line 292 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_15 = 3;
                                                                    
#line 292 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_16 = 4;
                                                                    
#line 292 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_17 = 5;
                                                                    
#line 292 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_18 = 6;
                                                                    
#line 292 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_19 = 7;
                                                                    
#line 292 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_20 = 8;
                                                                    
#line 292 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_21 = 9;
                                                                    
#line 292 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_22 = 10;
                                                                    
#line 292 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_23 = 11;
                                                                    
#line 292 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_24 = 12;
                                                                    
#line 292 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_25 = 13;
                                                                    
#line 292 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_26 = 14;
                                                                    
#line 292 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_27 = 15;
                                                                    
#line 292 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_28 = 16;
                                                                    
#line 292 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_29 = 17;
                                                                    
#line 292 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_30 = 18;
                                                                    
#line 292 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_31 = 19;
                                                                    
#line 292 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_32 = 20;
                                                                    
#line 292 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_33 = 21;
                                                                    
#line 292 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_34 = 22;
                                                                    
#line 292 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_35 = 23;
                                                                    
#line 292 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 292 
                                                                    tmp_36 = 24;
                                                                    
#line 292 
                                                                    tmp_37 = tmp_36;
                                                                  }
                                                                  else 
                                                                    
#line 292 
                                                                    tmp_37 = 25;
                                                                  
#line 292 
                                                                  tmp_38 = tmp_37;
                                                                }
                                                                else 
                                                                  
#line 292 
                                                                  tmp_38 = 26;
                                                                
#line 292 
                                                                tmp_39 = tmp_38;
                                                              }
                                                              else 
#line 292 
                                                                   tmp_39 = 27;
                                                              
#line 292 
                                                              tmp_40 = tmp_39;
                                                            }
                                                            else 
#line 292 
                                                                 tmp_40 = 28;
                                                            
#line 292 
                                                            tmp_41 = tmp_40;
                                                          }
                                                          else 
#line 292 
                                                               tmp_41 = 29;
                                                          
#line 292 
                                                          tmp_42 = tmp_41;
                                                        }
                                                        else 
#line 292 
                                                             tmp_42 = 30;
                                                        
#line 292 
                                                        tmp_43 = tmp_42;
                                                      }
                                                      else 
#line 292 
                                                           tmp_43 = 31;
                                                      
#line 292 
                                                      tmp_44 = tmp_43;
                                                    }
                                                    else 
#line 292 
                                                         tmp_44 = 32;
                                                    
#line 292 
                                                    tmp_45 = tmp_44;
                                                  }
                                                  else 
#line 292 
                                                       tmp_45 = 33;
                                                  
#line 292 
                                                  tmp_46 = tmp_45;
                                                }
                                                else 
#line 292 
                                                     tmp_46 = 34;
                                                
#line 292 
                                                tmp_47 = tmp_46;
                                              }
                                              else 
#line 292 
                                                   tmp_47 = 35;
                                              
#line 292 
                                              tmp_48 = tmp_47;
                                            }
                                            else 
#line 292 
                                                 tmp_48 = 36;
                                            
#line 292 
                                            tmp_49 = tmp_48;
                                          }
                                          else 
#line 292 
                                               tmp_49 = 37;
                                          
#line 292 
                                          tmp_50 = tmp_49;
                                        }
                                        else 
#line 292 
                                             tmp_50 = 38;
                                        
#line 292 
                                        tmp_51 = tmp_50;
                                      }
                                      else 
#line 292 
                                           tmp_51 = 39;
                                      
#line 292 
                                      tmp_52 = tmp_51;
                                    }
                                    else 
#line 292 
                                         tmp_52 = 40;
                                    
#line 292 
                                    tmp_53 = tmp_52;
                                  }
                                  else 
#line 292 
                                       tmp_53 = 41;
                                  
#line 292 
                                  tmp_54 = tmp_53;
                                }
                                else 
#line 292 
                                     tmp_54 = 42;
                                
#line 292 
                                tmp_55 = tmp_54;
                              }
                              else 
#line 292 
                                   tmp_55 = 43;
                              
#line 292 
                              tmp_56 = tmp_55;
                            }
                            else 
#line 292 
                                 tmp_56 = 44;
                            
#line 292 
                            tmp_57 = tmp_56;
                          }
                          else 
#line 292 
                               tmp_57 = 45;
                          
#line 292 
                          tmp_58 = tmp_57;
                        }
                        else 
#line 292 
                             tmp_58 = 46;
                        
#line 292 
                        tmp_59 = tmp_58;
                      }
                      else 
#line 292 
                           tmp_59 = 47;
                      
#line 292 
                      tmp_60 = tmp_59;
                    }
                    else 
#line 292 
                         tmp_60 = 48;
                    
#line 292 
                    tmp_61 = tmp_60;
                  }
                  else 
#line 292 
                       tmp_61 = 49;
                  
#line 292 
                  tmp_62 = tmp_61;
                }
                else 
#line 292 
                     tmp_62 = 50;
                
#line 292 
                tmp_63 = tmp_62;
              }
              else 
#line 292 
                   tmp_63 = 51;
              
#line 292 
              tmp_64 = tmp_63;
            }
            else 
#line 292 
                 tmp_64 = 52;
            
#line 292 
            tmp_65 = tmp_64;
          }
          
#line 292 
          tmp_67 = tmp_65;
        }
        else {
          int tmp_66;
          
#line 292 
          tmp_66 = __ilog2_u32((unsigned int)((rcb->rxq)->buffer_size + -1));
          
#line 292 
          tmp_67 = tmp_66 + -11;
        }
        
#line 292 
        tmp_68 = tmp_67;
      }
      else 
#line 292 
           tmp_68 = 0;
      
#line 292 
      tmp_69 = tmp_68;
    }
    else 
#line 292 
         tmp_69 = 52;
    
#line 292 
    order = tmp_69;
  }
  else 
#line 292 
       order = __get_order((unsigned long)(rcb->rxq)->buffer_size);
  
#line 294 
  unmap_q->type = BNAD_RXBUF_PAGE;
  
#line 296 
  if ((rcb->id & 1) != 0) {
    
#line 297 
    unmap_q->alloc_order = 0;
    
#line 298 
    unmap_q->map_size = (unsigned int)(rcb->rxq)->buffer_size;
  }
  else 
    
#line 300 
    if ((rcb->rxq)->multi_buffer != (unsigned int)BNA_STATUS_T_DISABLED) {
      
#line 301 
      unmap_q->alloc_order = 0;
      
#line 302 
      unmap_q->map_size = (unsigned int)(rcb->rxq)->buffer_size;
      
#line 303 
      unmap_q->type = BNAD_RXBUF_MULTI_BUFF;
    }
    else {
      
#line 305 
      unmap_q->alloc_order = order;
      
#line 306 
      if ((rcb->rxq)->buffer_size > 2048) 
#line 306 
                                          unmap_q->map_size = (unsigned int)(4096UL << order); else 
                                                                    
#line 306 
                                                                    unmap_q->map_size = 2048U;
    }
  
#line 312 
  if ((long)((4096UL << order) % (unsigned long)unmap_q->map_size != 0UL) != 0L) {
    
#line 314 
    ldv_inline_asm();
    
#line 312 
    ;
  }
  else ;
  
#line 314 
  __retres = 0;
  
#line 314 
  return __retres;
}


#line 318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
__inline static void bnad_rxq_cleanup_page(struct bnad *bnad, struct bnad_rx_unmap *unmap)
{
  
#line 320 
  if (unmap->page == (struct page *)0) 
#line 321 
                                       goto return_label; else ;
  
#line 323 
  dma_unmap_page(& (bnad->pcidev)->dev,unmap->vector.dma_addr,(unsigned long)unmap->vector.len,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 326 
  put_page(unmap->page);
  
#line 327 
  unmap->page = (struct page *)0;
  
#line 328 
  unmap->vector.dma_addr = 0ULL;
  
#line 329 
  unmap->vector.len = 0U;
  return_label: 
#line 330 
                return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
__inline static void bnad_rxq_cleanup_skb(struct bnad *bnad, struct bnad_rx_unmap *unmap)
{
  
#line 335 
  if (unmap->skb == (struct sk_buff *)0) 
#line 336 
                                         goto return_label; else ;
  
#line 338 
  dma_unmap_single_attrs(& (bnad->pcidev)->dev,unmap->vector.dma_addr,(unsigned long)unmap->vector.len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 341 
  dev_kfree_skb_any(unmap->skb);
  
#line 342 
  unmap->skb = (struct sk_buff *)0;
  
#line 343 
  unmap->vector.dma_addr = 0ULL;
  
#line 344 
  unmap->vector.len = 0U;
  return_label: 
#line 345 
                return;
}


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_rxq_cleanup(struct bnad *bnad, struct bna_rcb *rcb)
{
  int i;
  
#line 350 
  struct bnad_rx_unmap_q *unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 353 
  i = 0;
  
#line 353 
  goto ldv_59574;
  ldv_59573: 
#line 354 
  ;
  {
    
#line 354 
    struct bnad_rx_unmap *unmap = & unmap_q->unmap[i];
    
#line 356 
    if (unmap_q->type == (unsigned int)BNAD_RXBUF_SK_BUFF) 
#line 357 
                                                           bnad_rxq_cleanup_skb(bnad,unmap); else 
                                                                    
#line 359 
                                                                    bnad_rxq_cleanup_page(bnad,unmap);
  }
  
#line 353 
  i += 1;
  ldv_59574: 
#line 354 
  ;
  
#line 353 
  if (rcb->q_depth > (unsigned int)i) 
#line 355 
                                      goto ldv_59573; else 
#line 358 
                                                           goto ldv_59575;
  ldv_59575: 
#line 359 
  ;
  
#line 361 
  bnad_rxq_alloc_uninit(bnad,rcb);
  
#line 362 
  return;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_rxq_refill_page(struct bnad *bnad, struct bna_rcb *rcb, u32 nalloc)
{
  u32 alloced;
  u32 prod;
  u32 q_depth;
  struct bnad_rx_unmap *unmap;
  struct bnad_rx_unmap *prev;
  struct bna_rxq_entry *rxent;
  struct page *page;
  u32 page_offset;
  u32 alloc_size;
  dma_addr_t dma_addr;
  u32 tmp_1;
  
#line 368 
  struct bnad_rx_unmap_q *unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 375 
  prod = rcb->producer_index;
  
#line 376 
  q_depth = rcb->q_depth;
  
#line 378 
  alloc_size = (unsigned int)(4096UL << unmap_q->alloc_order);
  
#line 379 
  alloced = 0U;
  
#line 381 
  goto ldv_59595;
  ldv_59594: 
#line 382 
  ;
  
#line 382 
  unmap = & unmap_q->unmap[prod];
  
#line 384 
  if (unmap_q->reuse_pi < 0) {
    
#line 385 
    page = alloc_pages(16416U,(unsigned int)unmap_q->alloc_order);
    
#line 387 
    page_offset = 0U;
  }
  else {
    
#line 389 
    prev = & unmap_q->unmap[unmap_q->reuse_pi];
    
#line 390 
    page = prev->page;
    
#line 391 
    page_offset = prev->page_offset + unmap_q->map_size;
    
#line 392 
    get_page(page);
  }
  
#line 395 
  if ((long)(page == (struct page *)0) != 0L) {
    
#line 396 
    bnad->stats.drv_stats.rxbuf_alloc_failed += 1ULL;
    
#line 397 
    (rcb->rxq)->rxbuf_alloc_failed += 1ULL;
    
#line 398 
    goto finishing;
  }
  else ;
  
#line 401 
  dma_addr = dma_map_page(& (bnad->pcidev)->dev,page,(unsigned long)page_offset,(unsigned long)unmap_q->map_size,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 404 
  unmap->page = page;
  
#line 405 
  unmap->page_offset = page_offset;
  
#line 406 
  unmap->vector.dma_addr = dma_addr;
  
#line 407 
  unmap->vector.len = unmap_q->map_size;
  
#line 408 
  page_offset = unmap_q->map_size + page_offset;
  
#line 410 
  if (page_offset < alloc_size) 
#line 411 
                                unmap_q->reuse_pi = (int)prod; else 
#line 413 
                                                                    unmap_q->reuse_pi = -1;
  
#line 415 
  rxent = (struct bna_rxq_entry *)rcb->sw_q + prod;
  {
    unsigned long long tmp_0;
    
#line 416 
    if (0 != 0) 
#line 416 
                tmp_0 = (((((((dma_addr << 56) | ((dma_addr << 40) & 71776119061217280ULL)) | ((dma_addr << 24) & 280375465082880ULL)) | ((dma_addr << 8) & 1095216660480ULL)) | ((dma_addr >> 8) & 4278190080ULL)) | ((dma_addr >> 24) & 16711680ULL)) | ((dma_addr >> 40) & 65280ULL)) | (dma_addr >> 56); else 
                                                                    
#line 416 
                                                                    tmp_0 = __fswab64(dma_addr);
    
#line 416 
    u64 tmp_addr = tmp_0;
    
#line 416 
    rxent->host_addr.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
    
#line 416 
    rxent->host_addr.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
  }
  
#line 417 
  prod = (prod + 1U) & (q_depth + 4294967295U);
  
#line 418 
  alloced += 1U;
  ldv_59595: 
#line 419 
  ;
  
#line 381 
  tmp_1 = nalloc;
  
#line 381 
  nalloc -= 1U;
  
#line 381 
  ;
  
#line 381 
  if (tmp_1 != 0U) 
#line 383 
                   goto ldv_59594; else 
#line 386 
                                        goto ldv_59596;
  ldv_59596: 
#line 387 
  ;
  finishing: 
#line 421 
  ;
  
#line 422 
  if ((long)(alloced != 0U) != 0L) {
    int tmp_2;
    
#line 423 
    rcb->producer_index = prod;
    
#line 424 
    ldv_inline_asm();
    
#line 425 
    tmp_2 = constant_test_bit(1L,(unsigned long const volatile *)(& rcb->flags));
    
#line 425 
    if ((long)(tmp_2 != 0) != 0L) 
#line 426 
                                  writel(rcb->producer_index | 2147483648U,(void volatile *)rcb->q_dbell); else ;
  }
  else ;
  
#line 429 
  return alloced;
}


#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_rxq_refill_skb(struct bnad *bnad, struct bna_rcb *rcb, u32 nalloc)
{
  u32 alloced;
  u32 prod;
  u32 q_depth;
  u32 buff_sz;
  struct bnad_rx_unmap *unmap;
  struct bna_rxq_entry *rxent;
  struct sk_buff *skb;
  dma_addr_t dma_addr;
  u32 tmp_1;
  
#line 436 
  struct bnad_rx_unmap_q *unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 442 
  buff_sz = (unsigned int)(rcb->rxq)->buffer_size;
  
#line 443 
  prod = rcb->producer_index;
  
#line 444 
  q_depth = rcb->q_depth;
  
#line 446 
  alloced = 0U;
  
#line 447 
  goto ldv_59614;
  ldv_59613: 
#line 448 
  ;
  
#line 448 
  unmap = & unmap_q->unmap[prod];
  
#line 450 
  skb = netdev_alloc_skb_ip_align(bnad->netdev,buff_sz);
  
#line 452 
  if ((long)(skb == (struct sk_buff *)0) != 0L) {
    
#line 453 
    bnad->stats.drv_stats.rxbuf_alloc_failed += 1ULL;
    
#line 454 
    (rcb->rxq)->rxbuf_alloc_failed += 1ULL;
    
#line 455 
    goto finishing;
  }
  else ;
  
#line 457 
  dma_addr = dma_map_single_attrs(& (bnad->pcidev)->dev,(void *)skb->data,(unsigned long)buff_sz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 460 
  unmap->skb = skb;
  
#line 461 
  unmap->vector.dma_addr = dma_addr;
  
#line 462 
  unmap->vector.len = buff_sz;
  
#line 464 
  rxent = (struct bna_rxq_entry *)rcb->sw_q + prod;
  {
    unsigned long long tmp_0;
    
#line 465 
    if (0 != 0) 
#line 465 
                tmp_0 = (((((((dma_addr << 56) | ((dma_addr << 40) & 71776119061217280ULL)) | ((dma_addr << 24) & 280375465082880ULL)) | ((dma_addr << 8) & 1095216660480ULL)) | ((dma_addr >> 8) & 4278190080ULL)) | ((dma_addr >> 24) & 16711680ULL)) | ((dma_addr >> 40) & 65280ULL)) | (dma_addr >> 56); else 
                                                                    
#line 465 
                                                                    tmp_0 = __fswab64(dma_addr);
    
#line 465 
    u64 tmp_addr = tmp_0;
    
#line 465 
    rxent->host_addr.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
    
#line 465 
    rxent->host_addr.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
  }
  
#line 466 
  prod = (prod + 1U) & (q_depth + 4294967295U);
  
#line 467 
  alloced += 1U;
  ldv_59614: 
#line 468 
  ;
  
#line 447 
  tmp_1 = nalloc;
  
#line 447 
  nalloc -= 1U;
  
#line 447 
  ;
  
#line 447 
  if (tmp_1 != 0U) 
#line 449 
                   goto ldv_59613; else 
#line 452 
                                        goto ldv_59615;
  ldv_59615: 
#line 453 
  ;
  finishing: 
#line 470 
  ;
  
#line 471 
  if ((long)(alloced != 0U) != 0L) {
    int tmp_2;
    
#line 472 
    rcb->producer_index = prod;
    
#line 473 
    ldv_inline_asm();
    
#line 474 
    tmp_2 = constant_test_bit(1L,(unsigned long const volatile *)(& rcb->flags));
    
#line 474 
    if ((long)(tmp_2 != 0) != 0L) 
#line 475 
                                  writel(rcb->producer_index | 2147483648U,(void volatile *)rcb->q_dbell); else ;
  }
  else ;
  
#line 478 
  return alloced;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
__inline static void bnad_rxq_post(struct bnad *bnad, struct bna_rcb *rcb)
{
  u32 to_alloc;
  
#line 484 
  struct bnad_rx_unmap_q *unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 487 
  to_alloc = ((rcb->consumer_index - rcb->producer_index) + 4294967295U) & (rcb->q_depth + 4294967295U);
  
#line 488 
  if (to_alloc >> 3 == 0U) 
#line 489 
                           goto return_label; else ;
  
#line 491 
  if (unmap_q->type == (unsigned int)BNAD_RXBUF_SK_BUFF) 
#line 492 
                                                         bnad_rxq_refill_skb(bnad,rcb,to_alloc); else 
                                                                    
#line 494 
                                                                    bnad_rxq_refill_page(bnad,rcb,to_alloc);
  return_label: 
#line 495 
                return;
}


#line 512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cq_drop_packet(struct bnad *bnad, struct bna_rcb *rcb, u32 sop_ci, u32 nvecs)
{
  struct bnad_rx_unmap_q *unmap_q;
  struct bnad_rx_unmap *unmap;
  u32 ci;
  u32 vec;
  
#line 519 
  unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 520 
  vec = 0U;
  
#line 520 
  ci = sop_ci;
  
#line 520 
  goto ldv_59633;
  ldv_59632: 
#line 521 
  ;
  
#line 521 
  unmap = & unmap_q->unmap[ci];
  
#line 522 
  ci = (ci + 1U) & (rcb->q_depth + 4294967295U);
  
#line 524 
  if (unmap_q->type == (unsigned int)BNAD_RXBUF_SK_BUFF) 
#line 525 
                                                         bnad_rxq_cleanup_skb(bnad,unmap); else 
                                                                    
#line 527 
                                                                    bnad_rxq_cleanup_page(bnad,unmap);
  
#line 520 
  vec += 1U;
  ldv_59633: 
#line 521 
  ;
  
#line 520 
  if (vec < nvecs) 
#line 522 
                   goto ldv_59632; else 
#line 525 
                                        goto ldv_59634;
  ldv_59634: 
#line 526 
  ;
  
#line 527 
  return;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cq_setup_skb_frags(struct bna_rcb *rcb, struct sk_buff *skb, u32 sop_ci, u32 nvecs, u32 last_fraglen)
{
  struct bnad *bnad;
  u32 ci;
  u32 vec;
  u32 len;
  struct bnad_rx_unmap_q *unmap_q;
  struct bnad_rx_unmap *unmap;
  void *tmp;
  unsigned char *tmp_0;
  
#line 536 
  u32 totlen = 0U;
  
#line 540 
  unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 541 
  bnad = rcb->bnad;
  
#line 544 
  tmp = lowmem_page_address((struct page const *)unmap_q->unmap[sop_ci].page);
  
#line 544 
  ;
  
#line 544 
  __builtin_prefetch((void const *)(tmp + unmap_q->unmap[sop_ci].page_offset));
  
#line 547 
  vec = 1U;
  
#line 547 
  ci = sop_ci;
  
#line 547 
  goto ldv_59650;
  ldv_59649: 
#line 548 
  ;
  
#line 548 
  unmap = & unmap_q->unmap[ci];
  
#line 549 
  ci = (ci + 1U) & (rcb->q_depth + 4294967295U);
  
#line 551 
  dma_unmap_page(& (bnad->pcidev)->dev,unmap->vector.dma_addr,(unsigned long)unmap->vector.len,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 555 
  if (vec != nvecs) 
#line 555 
                    len = unmap->vector.len; else 
#line 555 
                                                  len = last_fraglen;
  
#line 557 
  skb->truesize += unmap->vector.len;
  
#line 558 
  totlen += len;
  
#line 560 
  ;
  
#line 560 
  ;
  
#line 560 
  ;
  
#line 560 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 560 
  ;
  
#line 560 
  skb_fill_page_desc(skb,(int)((struct skb_shared_info *)tmp_0)->nr_frags,unmap->page,(int)unmap->page_offset,(int)len);
  
#line 563 
  unmap->page = (struct page *)0;
  
#line 564 
  unmap->vector.len = 0U;
  
#line 547 
  vec += 1U;
  ldv_59650: 
#line 548 
  ;
  
#line 547 
  if (vec <= nvecs) 
#line 549 
                    goto ldv_59649; else 
#line 552 
                                         goto ldv_59651;
  ldv_59651: 
#line 553 
  ;
  
#line 567 
  skb->len += totlen;
  
#line 568 
  skb->data_len += totlen;
  
#line 569 
  return;
}


#line 572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
__inline static void bnad_cq_setup_skb(struct bnad *bnad, struct sk_buff *skb, struct bnad_rx_unmap *unmap, u32 len)
{
  
#line 575 
  __builtin_prefetch((void const *)skb->data);
  
#line 577 
  dma_unmap_single_attrs(& (bnad->pcidev)->dev,unmap->vector.dma_addr,(unsigned long)unmap->vector.len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 581 
  skb_put(skb,len);
  
#line 582 
  skb->protocol = eth_type_trans(skb,bnad->netdev);
  
#line 584 
  unmap->skb = (struct sk_buff *)0;
  
#line 585 
  unmap->vector.len = 0U;
  
#line 586 
  return;
}


#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_cq_process(struct bnad *bnad, struct bna_ccb *ccb, int budget)
{
  struct bna_cq_entry *cq;
  struct bna_cq_entry *cmpl;
  struct bna_cq_entry *next_cmpl;
  struct bnad_rx_unmap_q *unmap_q;
  u32 pi;
  u32 vec;
  u32 flags;
  u32 masked_flags;
  int tmp_0;
  int tmp_3;
  int tmp_9;
  
#line 592 
  struct bna_rcb *rcb = (struct bna_rcb *)0;
  
#line 594 
  struct bnad_rx_unmap *unmap = (struct bnad_rx_unmap *)0;
  
#line 595 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 596 
  struct bna_pkt_rate *pkt_rt = & ccb->pkt_rate;
  
#line 597 
  struct bnad_rx_ctrl *rx_ctrl = (struct bnad_rx_ctrl *)ccb->ctrl;
  
#line 598 
  u32 packets = 0U;
  
#line 598 
  u32 len = 0U;
  
#line 598 
  u32 totlen = 0U;
  
#line 599 
  u32 sop_ci = 0U;
  
#line 599 
  u32 nvecs = 0U;
  
#line 602 
  __builtin_prefetch((void const *)bnad->netdev);
  
#line 604 
  cq = (struct bna_cq_entry *)ccb->sw_q;
  
#line 606 
  goto ldv_59689;
  ldv_59688: 
#line 607 
  ;
  
#line 607 
  cmpl = cq + ccb->producer_index;
  
#line 608 
  if ((unsigned int)cmpl->valid == 0U) 
#line 609 
                                       goto ldv_59681; else ;
  
#line 610 
  ldv_inline_asm();
  
#line 619 
  if (0 != 0) 
#line 619 
              tmp_0 = (unsigned int)((unsigned short)(((int)cmpl->length << 8) | ((int)cmpl->length >> 8))) > 1000U;
  else {
    __u16 tmp;
    
#line 619 
    tmp = __fswab16((unsigned short)((int)cmpl->length));
    
#line 619 
    tmp_0 = (unsigned int)tmp > 1000U;
  }
  
#line 619 
  if (tmp_0) 
#line 619 
             pkt_rt->large_pkt_cnt += 1U; else 
#line 619 
                                               pkt_rt->small_pkt_cnt += 1U;
  
#line 621 
  if (((int)cmpl->rxq_id & 1) != 0) 
#line 622 
                                    rcb = ccb->rcb[1]; else 
#line 624 
                                                            rcb = ccb->rcb[0];
  
#line 626 
  unmap_q = (struct bnad_rx_unmap_q *)rcb->unmap_q;
  
#line 629 
  sop_ci = rcb->consumer_index;
  
#line 631 
  if (unmap_q->type == (unsigned int)BNAD_RXBUF_SK_BUFF) {
    
#line 632 
    unmap = & unmap_q->unmap[sop_ci];
    
#line 633 
    skb = unmap->skb;
  }
  else {
    
#line 635 
    skb = napi_get_frags(& rx_ctrl->napi);
    
#line 636 
    if ((long)(skb == (struct sk_buff *)0) != 0L) 
#line 637 
                                                  goto ldv_59681; else ;
  }
  
#line 639 
  __builtin_prefetch((void const *)skb);
  
#line 641 
  if (0 != 0) 
#line 641 
              flags = (((cmpl->flags << 24) | ((cmpl->flags << 8) & 16711680U)) | ((cmpl->flags >> 8) & 65280U)) | (cmpl->flags >> 24); else 
                                                                    
#line 641 
                                                                    flags = __fswab32(cmpl->flags);
  
#line 642 
  if (0 != 0) 
#line 642 
              tmp_3 = (int)((unsigned short)(((int)cmpl->length << 8) | ((int)cmpl->length >> 8)));
  else {
    __u16 tmp_2;
    
#line 642 
    tmp_2 = __fswab16((unsigned short)((int)cmpl->length));
    
#line 642 
    tmp_3 = (int)tmp_2;
  }
  
#line 642 
  len = (unsigned int)tmp_3;
  
#line 643 
  totlen = len;
  
#line 644 
  nvecs = 1U;
  
#line 649 
  if (unmap_q->type == (unsigned int)BNAD_RXBUF_MULTI_BUFF && flags >= (u32)0) {
    int tmp_5;
    
#line 651 
    pi = ccb->producer_index;
    ldv_59683: 
#line 652 
    ;
    
#line 653 
    pi = (pi + 1U) & (ccb->q_depth + 4294967295U);
    
#line 654 
    next_cmpl = cq + pi;
    
#line 656 
    if ((unsigned int)next_cmpl->valid == 0U) 
#line 657 
                                              goto ldv_59682; else ;
    
#line 658 
    ldv_inline_asm();
    
#line 669 
    if (0 != 0) 
#line 669 
                tmp_5 = (int)((unsigned short)(((int)next_cmpl->length << 8) | ((int)next_cmpl->length >> 8)));
    else {
      __u16 tmp_4;
      
#line 669 
      tmp_4 = __fswab16((unsigned short)((int)next_cmpl->length));
      
#line 669 
      tmp_5 = (int)tmp_4;
    }
    
#line 669 
    len = (unsigned int)tmp_5;
    
#line 670 
    if (0 != 0) 
#line 670 
                flags = (((next_cmpl->flags << 24) | ((next_cmpl->flags << 8) & 16711680U)) | ((next_cmpl->flags >> 8) & 65280U)) | (next_cmpl->flags >> 24); else 
                                                                    
#line 670 
                                                                    flags = __fswab32(next_cmpl->flags);
    
#line 672 
    nvecs += 1U;
    
#line 673 
    totlen += len;
    
#line 674 
    if (flags >= (u32)0) 
#line 676 
                         goto ldv_59683; else 
#line 679 
                                              goto ldv_59682;
    ldv_59682: 
#line 680 
    ;
    
#line 676 
    if ((unsigned int)next_cmpl->valid == 0U) 
#line 677 
                                              goto ldv_59681; else ;
  }
  else ;
  
#line 679 
  packets += 1U;
  
#line 682 
  if ((long)(((unsigned long)flags & 7UL) != 0UL) != 0L) {
    
#line 685 
    bnad_cq_drop_packet(bnad,rcb,sop_ci,nvecs);
    
#line 686 
    (rcb->rxq)->rx_packets_with_error += 1ULL;
    
#line 688 
    goto next;
  }
  else ;
  
#line 691 
  if (unmap_q->type == (unsigned int)BNAD_RXBUF_SK_BUFF) 
#line 692 
                                                         bnad_cq_setup_skb(bnad,skb,unmap,len); else 
                                                                    
#line 694 
                                                                    bnad_cq_setup_skb_frags(rcb,skb,sop_ci,nvecs,len);
  
#line 696 
  (rcb->rxq)->rx_packets += 1ULL;
  
#line 697 
  (rcb->rxq)->rx_bytes += (unsigned long long)totlen;
  
#line 698 
  ccb->bytes_per_intr += totlen;
  
#line 700 
  masked_flags = flags & 7008U;
  
#line 702 
  if ((long)(((bnad->netdev)->features & 17179869184ULL) != 0ULL) != 0L && (((long)((masked_flags == 4704U || masked_flags == 4448U) != 0) != 0L || (long)((masked_flags == 2592U || masked_flags == 2336U) != 0) != 0L) != 0) != 0) 
    
#line 708 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else 
                                                                    
#line 710 
                                                                    skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 712 
  if (((unsigned long)flags & 8192UL) != 0UL && ((bnad->netdev)->features & 256ULL) != 0ULL) {
    int tmp_8;
    
#line 714 
    if (0 != 0) 
#line 714 
                tmp_8 = (int)((unsigned short)(((int)cmpl->vlan_tag << 8) | ((int)cmpl->vlan_tag >> 8)));
    else {
      __u16 tmp_7;
      
#line 714 
      tmp_7 = __fswab16((unsigned short)((int)cmpl->vlan_tag));
      
#line 714 
      tmp_8 = (int)tmp_7;
    }
    
#line 714 
    ;
    
#line 714 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_8);
  }
  else ;
  
#line 716 
  if (unmap_q->type == (unsigned int)BNAD_RXBUF_SK_BUFF) 
#line 717 
                                                         netif_receive_skb(skb); else 
                                                                    
#line 719 
                                                                    napi_gro_frags(& rx_ctrl->napi);
  next: 
#line 721 
  ;
  
#line 722 
  rcb->consumer_index = (rcb->consumer_index + nvecs) & (rcb->q_depth + 4294967295U);
  
#line 723 
  vec = 0U;
  
#line 723 
  goto ldv_59686;
  ldv_59685: 
#line 724 
  ;
  
#line 724 
  cmpl = cq + ccb->producer_index;
  
#line 725 
  cmpl->valid = (unsigned char)0U;
  
#line 726 
  ccb->producer_index = (ccb->producer_index + 1U) & (ccb->q_depth + 4294967295U);
  
#line 723 
  vec += 1U;
  ldv_59686: 
#line 724 
  ;
  
#line 723 
  if (vec < nvecs) 
#line 725 
                   goto ldv_59685; else 
#line 728 
                                        goto ldv_59687;
  ldv_59687: 
#line 729 
  ;
  ldv_59689: 
#line 730 
  ;
  
#line 606 
  if (packets < (unsigned int)budget) 
#line 608 
                                      goto ldv_59688; else 
#line 611 
                                                           goto ldv_59681;
  ldv_59681: 
#line 612 
  ;
  
#line 730 
  napi_gro_flush(& rx_ctrl->napi,(_Bool)0);
  
#line 731 
  tmp_9 = constant_test_bit(0L,(unsigned long const volatile *)(& (ccb->rcb[0])->flags));
  
#line 731 
  if ((long)(tmp_9 != 0) != 0L) 
#line 732 
                                writel(packets | 2147483648U,(void volatile *)(ccb->i_dbell)->doorbell_addr); else ;
  
#line 734 
  bnad_rxq_post(bnad,ccb->rcb[0]);
  
#line 735 
  if (ccb->rcb[1] != (struct bna_rcb *)0) 
#line 736 
                                          bnad_rxq_post(bnad,ccb->rcb[1]); else ;
  
#line 738 
  return packets;
}


#line 742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_netif_rx_schedule_poll(struct bnad *bnad, struct bna_ccb *ccb)
{
  bool tmp;
  
#line 744 
  struct bnad_rx_ctrl *rx_ctrl = (struct bnad_rx_ctrl *)ccb->ctrl;
  
#line 745 
  struct napi_struct *napi = & rx_ctrl->napi;
  
#line 747 
  tmp = napi_schedule_prep(napi);
  
#line 747 
  if ((long)((int)tmp != 0) != 0L) {
    
#line 748 
    __napi_schedule(napi);
    
#line 749 
    rx_ctrl->rx_schedule += 1ULL;
  }
  else ;
  
#line 751 
  return;
}


#line 755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static irqreturn_t bnad_msix_rx(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 757 
  struct bna_ccb *ccb = (struct bna_ccb *)data;
  
#line 759 
  if (ccb != (struct bna_ccb *)0) {
    
#line 760 
    ((struct bnad_rx_ctrl *)ccb->ctrl)->rx_intr_ctr += 1ULL;
    
#line 761 
    bnad_netif_rx_schedule_poll(ccb->bnad,ccb);
  }
  else ;
  
#line 764 
  __retres = IRQ_HANDLED;
  
#line 764 
  return __retres;
}


#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static irqreturn_t bnad_msix_mbox_handler(int irq, void *data)
{
  irqreturn_t __retres;
  u32 intr_status;
  unsigned long flags;
  int tmp;
  
#line 775 
  struct bnad *bnad = (struct bnad *)data;
  
#line 777 
  ldv___ldv_spin_lock_79(& bnad->bna_lock);
  
#line 778 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& bnad->run_flags));
  
#line 778 
  if ((long)(tmp != 0) != 0L) {
    
#line 779 
    ldv_spin_unlock_irqrestore_80(& bnad->bna_lock,flags);
    
#line 780 
    __retres = IRQ_HANDLED;
    
#line 780 
    goto return_label;
  }
  else ;
  
#line 783 
  intr_status = readl((void const volatile *)bnad->bna.regs.fn_int_status);
  
#line 783 
  if (intr_status != 0U) 
#line 783 
                         writel(~ bnad->bna.bits.mbox_status_bits & intr_status,(void volatile *)bnad->bna.regs.fn_int_status); else ;
  
#line 785 
  if (((bnad->bna.bits.mbox_status_bits | bnad->bna.bits.error_status_bits) & intr_status) != 0U) 
    
#line 786 
    bna_mbox_handler(& bnad->bna,intr_status); else ;
  
#line 788 
  ldv_spin_unlock_irqrestore_81_0(& bnad->bna_lock,flags);
  
#line 790 
  __retres = IRQ_HANDLED;
  return_label: 
#line 790 
                return __retres;
}


#line 794  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static irqreturn_t bnad_isr(int irq, void *data)
{
  irqreturn_t __retres;
  int i;
  int j;
  u32 intr_status;
  unsigned long flags;
  struct bnad_rx_info *rx_info;
  struct bnad_rx_ctrl *rx_ctrl;
  int tmp;
  
#line 799 
  struct bnad *bnad = (struct bnad *)data;
  
#line 802 
  struct bna_tcb *tcb = (struct bna_tcb *)0;
  
#line 804 
  ldv___ldv_spin_lock_82(& bnad->bna_lock);
  
#line 805 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& bnad->run_flags));
  
#line 805 
  if ((long)(tmp != 0) != 0L) {
    
#line 806 
    ldv_spin_unlock_irqrestore_83(& bnad->bna_lock,flags);
    
#line 807 
    __retres = IRQ_NONE;
    
#line 807 
    goto return_label;
  }
  else ;
  
#line 810 
  intr_status = readl((void const volatile *)bnad->bna.regs.fn_int_status);
  
#line 810 
  if (intr_status != 0U) 
#line 810 
                         writel(~ bnad->bna.bits.mbox_status_bits & intr_status,(void volatile *)bnad->bna.regs.fn_int_status); else ;
  
#line 812 
  if ((long)(intr_status == 0U) != 0L) {
    
#line 813 
    ldv_spin_unlock_irqrestore_84_0(& bnad->bna_lock,flags);
    
#line 814 
    __retres = IRQ_NONE;
    
#line 814 
    goto return_label;
  }
  else ;
  
#line 817 
  if (((bnad->bna.bits.mbox_status_bits | bnad->bna.bits.error_status_bits) & intr_status) != 0U) 
    
#line 818 
    bna_mbox_handler(& bnad->bna,intr_status); else ;
  
#line 820 
  ldv_spin_unlock_irqrestore_85(& bnad->bna_lock,flags);
  
#line 822 
  if ((intr_status & 65535U) == 0U) {
    
#line 823 
    __retres = IRQ_HANDLED;
    
#line 823 
    goto return_label;
  }
  else ;
  
#line 827 
  i = 0;
  
#line 827 
  goto ldv_59724;
  ldv_59723: 
#line 828 
  ;
  
#line 828 
  j = 0;
  
#line 828 
  goto ldv_59721;
  ldv_59720: 
#line 829 
  ;
  
#line 829 
  tcb = bnad->tx_info[i].tcb[j];
  
#line 830 
  if (tcb != (struct bna_tcb *)0) {
    int tmp_0;
    
#line 830 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
    
#line 830 
    if (tmp_0 != 0) 
#line 831 
                    bnad_tx_complete(bnad,bnad->tx_info[i].tcb[j]); else ;
  }
  else ;
  
#line 828 
  j += 1;
  ldv_59721: 
#line 829 
  ;
  
#line 828 
  if (bnad->num_txq_per_tx > (unsigned int)j) 
#line 830 
                                              goto ldv_59720; else 
#line 833 
                                                                   goto ldv_59722;
  ldv_59722: 
#line 834 
  ;
  
#line 827 
  i += 1;
  ldv_59724: 
#line 828 
  ;
  
#line 827 
  if (bnad->num_tx > (unsigned int)i) 
#line 829 
                                      goto ldv_59723; else 
#line 832 
                                                           goto ldv_59725;
  ldv_59725: 
#line 833 
  ;
  
#line 835 
  i = 0;
  
#line 835 
  goto ldv_59731;
  ldv_59730: 
#line 836 
  ;
  
#line 836 
  rx_info = & bnad->rx_info[i];
  
#line 837 
  if (rx_info->rx == (struct bna_rx *)0) 
#line 838 
                                         goto ldv_59726; else ;
  
#line 839 
  j = 0;
  
#line 839 
  goto ldv_59728;
  ldv_59727: 
#line 840 
  ;
  
#line 840 
  rx_ctrl = & rx_info->rx_ctrl[j];
  
#line 841 
  if (rx_ctrl->ccb != (struct bna_ccb *)0) 
#line 842 
                                           bnad_netif_rx_schedule_poll(bnad,rx_ctrl->ccb); else ;
  
#line 839 
  j += 1;
  ldv_59728: 
#line 840 
  ;
  
#line 839 
  if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 841 
                                              goto ldv_59727; else 
#line 844 
                                                                   goto ldv_59729;
  ldv_59729: 
#line 845 
  ;
  ldv_59726: 
#line 846 
  ;
  
#line 835 
  i += 1;
  ldv_59731: 
#line 836 
  ;
  
#line 835 
  if (bnad->num_rx > (unsigned int)i) 
#line 837 
                                      goto ldv_59730; else 
#line 840 
                                                           goto ldv_59732;
  ldv_59732: 
#line 841 
  ;
  
#line 846 
  __retres = IRQ_HANDLED;
  return_label: 
#line 846 
                return __retres;
}


#line 854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_enable_mbox_irq(struct bnad *bnad)
{
  
#line 856 
  clear_bit(2L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 858 
  bnad->stats.drv_stats.mbox_intr_enabled += 1ULL;
  
#line 859 
  return;
}


#line 866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_disable_mbox_irq(struct bnad *bnad)
{
  
#line 868 
  clear_bit(2L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 870 
  bnad->stats.drv_stats.mbox_intr_disabled += 1ULL;
  
#line 871 
  return;
}


#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_set_netdev_perm_addr(struct bnad *bnad)
{
  bool tmp;
  
#line 876 
  struct net_device *netdev = bnad->netdev;
  
#line 878 
  ether_addr_copy((u8 *)(& netdev->perm_addr),(u8 const *)(& bnad->perm_addr));
  
#line 879 
  tmp = is_zero_ether_addr((u8 const *)netdev->dev_addr);
  
#line 879 
  if ((int)tmp != 0) 
#line 880 
                     ether_addr_copy(netdev->dev_addr,(u8 const *)(& bnad->perm_addr)); else ;
  
#line 881 
  return;
}


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_mbox_intr_enable(struct bnad *bnad)
{
  
#line 889 
  bnad_enable_mbox_irq(bnad);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_mbox_intr_disable(struct bnad *bnad)
{
  
#line 895 
  bnad_disable_mbox_irq(bnad);
  
#line 896 
  return;
}


#line 899  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_ioceth_ready(struct bnad *bnad)
{
  
#line 901 
  bnad->bnad_completions.ioc_comp_status = (unsigned char)0U;
  
#line 902 
  complete(& bnad->bnad_completions.ioc_comp);
  
#line 903 
  return;
}


#line 906  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_ioceth_failed(struct bnad *bnad)
{
  
#line 908 
  bnad->bnad_completions.ioc_comp_status = (unsigned char)1U;
  
#line 909 
  complete(& bnad->bnad_completions.ioc_comp);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_ioceth_disabled(struct bnad *bnad)
{
  
#line 915 
  bnad->bnad_completions.ioc_comp_status = (unsigned char)0U;
  
#line 916 
  complete(& bnad->bnad_completions.ioc_comp);
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_enet_disabled(void *arg)
{
  
#line 922 
  struct bnad *bnad = (struct bnad *)arg;
  
#line 924 
  netif_carrier_off(bnad->netdev);
  
#line 925 
  complete(& bnad->bnad_completions.enet_comp);
  
#line 926 
  return;
}


#line 929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_ethport_link_status(struct bnad *bnad, enum bna_link_status link_status)
{
  
#line 932 
  bool link_up = (_Bool)0;
  
#line 934 
  link_up = (_Bool)((unsigned int)link_status + 4294967295U <= 1U);
  
#line 936 
  if (link_status == (unsigned int)BNA_CEE_UP) {
    int tmp;
    
#line 937 
    tmp = constant_test_bit(0L,(unsigned long const volatile *)(& bnad->run_flags));
    
#line 937 
    if (tmp == 0) 
#line 938 
                  bnad->stats.drv_stats.cee_toggle += 1ULL; else ;
    
#line 939 
    clear_bit(0L,(unsigned long volatile *)(& bnad->run_flags));
  }
  else {
    int tmp_0;
    
#line 941 
    tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& bnad->run_flags));
    
#line 941 
    if (tmp_0 != 0) 
#line 942 
                    bnad->stats.drv_stats.cee_toggle += 1ULL; else ;
    
#line 943 
    clear_bit(0L,(unsigned long volatile *)(& bnad->run_flags));
  }
  
#line 946 
  if ((int)link_up != 0) {
    int tmp_3;
    bool tmp_2;
    
#line 947 
    tmp_2 = netif_carrier_ok((struct net_device const *)bnad->netdev);
    
#line 947 
    if (tmp_2) 
#line 947 
               tmp_3 = 0; else 
#line 947 
                               tmp_3 = 1;
    
#line 947 
    if (tmp_3) {
      uint tx_id;
      uint tcb_id;
      
#line 949 
      netdev_info((struct net_device const *)bnad->netdev,"link up\n");
      
#line 950 
      netif_carrier_on(bnad->netdev);
      
#line 951 
      bnad->stats.drv_stats.link_toggle += 1ULL;
      
#line 952 
      tx_id = 0U;
      
#line 952 
      goto ldv_59776;
      ldv_59775: 
#line 953 
      ;
      
#line 953 
      tcb_id = 0U;
      
#line 953 
      goto ldv_59773;
      ldv_59772: 
#line 954 
      ;
      {
        u32 txq_id;
        int tmp_1;
        
#line 955 
        struct bna_tcb *tcb = bnad->tx_info[tx_id].tcb[tcb_id];
        
#line 958 
        if (tcb == (struct bna_tcb *)0) 
#line 959 
                                        goto ldv_59771; else ;
        
#line 961 
        txq_id = (unsigned int)tcb->id;
        
#line 963 
        tmp_1 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
        
#line 963 
        if (tmp_1 != 0) {
          
#line 968 
          netif_wake_subqueue(bnad->netdev,(unsigned short)((int)((unsigned short)txq_id)));
          
#line 971 
          bnad->stats.drv_stats.netif_queue_wakeup += 1ULL;
        }
        else {
          
#line 974 
          netif_stop_subqueue(bnad->netdev,(unsigned short)((int)((unsigned short)txq_id)));
          
#line 977 
          bnad->stats.drv_stats.netif_queue_stop += 1ULL;
        }
      }
      ldv_59771: 
#line 980 
      ;
      
#line 954 
      tcb_id += 1U;
      ldv_59773: 
#line 955 
      ;
      
#line 953 
      if (bnad->num_txq_per_tx > tcb_id) 
#line 955 
                                         goto ldv_59772; else 
#line 958 
                                                              goto ldv_59774;
      ldv_59774: 
#line 959 
      ;
      
#line 952 
      tx_id += 1U;
      ldv_59776: 
#line 953 
      ;
      
#line 952 
      if (bnad->num_tx > tx_id) 
#line 954 
                                goto ldv_59775; else 
#line 957 
                                                     goto ldv_59777;
      ldv_59777: 
#line 958 
      ;
    }
    else ;
  }
  else {
    bool tmp_4;
    
#line 984 
    tmp_4 = netif_carrier_ok((struct net_device const *)bnad->netdev);
    
#line 984 
    if ((int)tmp_4 != 0) {
      
#line 985 
      netdev_info((struct net_device const *)bnad->netdev,"link down\n");
      
#line 986 
      netif_carrier_off(bnad->netdev);
      
#line 987 
      bnad->stats.drv_stats.link_toggle += 1ULL;
    }
    else ;
  }
  
#line 989 
  return;
}


#line 993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_tx_disabled(void *arg, struct bna_tx *tx)
{
  
#line 995 
  struct bnad *bnad = (struct bnad *)arg;
  
#line 997 
  complete(& bnad->bnad_completions.tx_comp);
  
#line 998 
  return;
}


#line 1001  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_tcb_setup(struct bnad *bnad, struct bna_tcb *tcb)
{
  
#line 1003 
  struct bnad_tx_info *tx_info = (struct bnad_tx_info *)((tcb->txq)->tx)->priv;
  
#line 1006 
  tcb->priv = (void *)tcb;
  
#line 1007 
  tx_info->tcb[tcb->id] = tcb;
  
#line 1008 
  return;
}


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_tcb_destroy(struct bnad *bnad, struct bna_tcb *tcb)
{
  
#line 1013 
  struct bnad_tx_info *tx_info = (struct bnad_tx_info *)((tcb->txq)->tx)->priv;
  
#line 1016 
  tx_info->tcb[tcb->id] = (struct bna_tcb *)0;
  
#line 1017 
  tcb->priv = (void *)0;
  
#line 1018 
  return;
}


#line 1021  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_ccb_setup(struct bnad *bnad, struct bna_ccb *ccb)
{
  
#line 1023 
  struct bnad_rx_info *rx_info = (struct bnad_rx_info *)((ccb->cq)->rx)->priv;
  
#line 1026 
  rx_info->rx_ctrl[ccb->id].ccb = ccb;
  
#line 1027 
  ccb->ctrl = (void *)(& rx_info->rx_ctrl[ccb->id]);
  
#line 1028 
  return;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_ccb_destroy(struct bnad *bnad, struct bna_ccb *ccb)
{
  
#line 1033 
  struct bnad_rx_info *rx_info = (struct bnad_rx_info *)((ccb->cq)->rx)->priv;
  
#line 1036 
  rx_info->rx_ctrl[ccb->id].ccb = (struct bna_ccb *)0;
  
#line 1037 
  return;
}


#line 1040  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_tx_stall(struct bnad *bnad, struct bna_tx *tx)
{
  struct bna_tcb *tcb;
  u32 txq_id;
  int i;
  
#line 1042 
  struct bnad_tx_info *tx_info = (struct bnad_tx_info *)tx->priv;
  
#line 1048 
  i = 0;
  
#line 1048 
  goto ldv_59813;
  ldv_59812: 
#line 1049 
  ;
  
#line 1049 
  tcb = tx_info->tcb[i];
  
#line 1050 
  if (tcb == (struct bna_tcb *)0) 
#line 1051 
                                  goto ldv_59811; else ;
  
#line 1052 
  txq_id = (unsigned int)tcb->id;
  
#line 1053 
  clear_bit(1L,(unsigned long volatile *)(& tcb->flags));
  
#line 1054 
  netif_stop_subqueue(bnad->netdev,(unsigned short)((int)((unsigned short)txq_id)));
  ldv_59811: 
#line 1055 
  ;
  
#line 1048 
  i += 1;
  ldv_59813: 
#line 1049 
  ;
  
#line 1048 
  if (i <= 7) 
#line 1050 
              goto ldv_59812; else 
#line 1053 
                                   goto ldv_59814;
  ldv_59814: 
#line 1054 
  ;
  
#line 1055 
  return;
}


#line 1059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_tx_resume(struct bnad *bnad, struct bna_tx *tx)
{
  struct bna_tcb *tcb;
  u32 txq_id;
  int i;
  int tmp;
  bool tmp_0;
  bool tmp_1;
  
#line 1061 
  struct bnad_tx_info *tx_info = (struct bnad_tx_info *)tx->priv;
  
#line 1066 
  i = 0;
  
#line 1066 
  goto ldv_59825;
  ldv_59824: 
#line 1067 
  ;
  
#line 1067 
  tcb = tx_info->tcb[i];
  
#line 1068 
  if (tcb == (struct bna_tcb *)0) 
#line 1069 
                                  goto ldv_59823; else ;
  
#line 1070 
  txq_id = (unsigned int)tcb->id;
  
#line 1072 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
  
#line 1072 
  if ((long)(tmp != 0) != 0L) {
    
#line 1074 
    ldv_inline_asm();
    
#line 1072 
    ;
  }
  else ;
  
#line 1073 
  clear_bit(1L,(unsigned long volatile *)(& tcb->flags));
  
#line 1074 
  if ((long)(*(tcb->hw_consumer_index) != 0U) != 0L) {
    
#line 1076 
    ldv_inline_asm();
    
#line 1074 
    ;
  }
  else ;
  
#line 1076 
  tmp_0 = netif_carrier_ok((struct net_device const *)bnad->netdev);
  
#line 1076 
  if ((int)tmp_0 != 0) {
    
#line 1077 
    netif_wake_subqueue(bnad->netdev,(unsigned short)((int)((unsigned short)txq_id)));
    
#line 1078 
    bnad->stats.drv_stats.netif_queue_wakeup += 1ULL;
  }
  else ;
  ldv_59823: 
#line 1080 
  ;
  
#line 1066 
  i += 1;
  ldv_59825: 
#line 1067 
  ;
  
#line 1066 
  if (i <= 7) 
#line 1068 
              goto ldv_59824; else 
#line 1071 
                                   goto ldv_59826;
  ldv_59826: 
#line 1072 
  ;
  
#line 1087 
  tmp_1 = is_zero_ether_addr((u8 const *)(& bnad->perm_addr));
  
#line 1087 
  if ((int)tmp_1 != 0) {
    
#line 1088 
    bna_enet_perm_mac_get(& bnad->bna.enet,(u8 *)(& bnad->perm_addr));
    
#line 1089 
    bnad_set_netdev_perm_addr(bnad);
  }
  else ;
  
#line 1091 
  return;
}


#line 1097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_tx_cleanup(struct delayed_work *work)
{
  struct bnad_tx_info *tmp;
  struct bna_tcb *tcb;
  unsigned long flags;
  u32 i;
  int tmp_0;
  {
    
#line 1100 
    struct delayed_work const *__mptr = (struct delayed_work const *)work;
    
#line 1100 
    tmp = (struct bnad_tx_info *)__mptr + 18446744073709551536U;
  }
  
#line 1099 
  struct bnad_tx_info *tx_info = tmp;
  
#line 1101 
  struct bnad *bnad = (struct bnad *)0;
  
#line 1104 
  u32 pending = 0U;
  
#line 1106 
  i = 0U;
  
#line 1106 
  goto ldv_59840;
  ldv_59839: 
#line 1107 
  ;
  
#line 1107 
  tcb = tx_info->tcb[i];
  
#line 1108 
  if (tcb == (struct bna_tcb *)0) 
#line 1109 
                                  goto ldv_59838; else ;
  
#line 1111 
  bnad = tcb->bnad;
  
#line 1113 
  tmp_0 = test_and_set_bit(0L,(unsigned long volatile *)(& tcb->flags));
  
#line 1113 
  if (tmp_0 != 0) {
    
#line 1114 
    pending += 1U;
    
#line 1115 
    goto ldv_59838;
  }
  else ;
  
#line 1118 
  bnad_txq_cleanup(bnad,tcb);
  
#line 1119 
  ldv_inline_asm();
  
#line 1121 
  clear_bit(0L,(unsigned long volatile *)(& tcb->flags));
  ldv_59838: 
#line 1122 
  ;
  
#line 1106 
  i += 1U;
  ldv_59840: 
#line 1107 
  ;
  
#line 1106 
  if (i <= 7U) 
#line 1108 
               goto ldv_59839; else 
#line 1111 
                                    goto ldv_59841;
  ldv_59841: 
#line 1112 
  ;
  
#line 1124 
  if (pending != 0U) {
    unsigned long tmp_1;
    
#line 1125 
    tmp_1 = msecs_to_jiffies(1U);
    
#line 1125 
    ;
    
#line 1125 
    ;
    
#line 1125 
    ldv_queue_delayed_work_86(bnad->work_q,& tx_info->tx_cleanup_work,tmp_1);
    
#line 1127 
    goto return_label;
  }
  else ;
  
#line 1130 
  ldv___ldv_spin_lock_87(& bnad->bna_lock);
  
#line 1131 
  bna_tx_cleanup_complete(tx_info->tx);
  
#line 1132 
  ldv_spin_unlock_irqrestore_88(& bnad->bna_lock,flags);
  return_label: 
#line 1133 
                return;
}


#line 1136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_tx_cleanup(struct bnad *bnad, struct bna_tx *tx)
{
  struct bna_tcb *tcb;
  int i;
  
#line 1138 
  struct bnad_tx_info *tx_info = (struct bnad_tx_info *)tx->priv;
  
#line 1142 
  i = 0;
  
#line 1142 
  goto ldv_59851;
  ldv_59850: 
#line 1143 
  ;
  
#line 1143 
  tcb = tx_info->tcb[i];
  
#line 1144 
  if (tcb == (struct bna_tcb *)0) 
#line 1145 
                                  goto ldv_59849; else ;
  ldv_59849: 
#line 1147 
  ;
  
#line 1142 
  i += 1;
  ldv_59851: 
#line 1143 
  ;
  
#line 1142 
  if (i <= 7) 
#line 1144 
              goto ldv_59850; else 
#line 1147 
                                   goto ldv_59852;
  ldv_59852: 
#line 1148 
  ;
  
#line 1148 
  ldv_queue_delayed_work_89(bnad->work_q,& tx_info->tx_cleanup_work,0UL);
  
#line 1149 
  return;
}


#line 1152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_rx_stall(struct bnad *bnad, struct bna_rx *rx)
{
  struct bna_ccb *ccb;
  struct bnad_rx_ctrl *rx_ctrl;
  int i;
  
#line 1154 
  struct bnad_rx_info *rx_info = (struct bnad_rx_info *)rx->priv;
  
#line 1159 
  i = 0;
  
#line 1159 
  goto ldv_59863;
  ldv_59862: 
#line 1160 
  ;
  
#line 1160 
  rx_ctrl = & rx_info->rx_ctrl[i];
  
#line 1161 
  ccb = rx_ctrl->ccb;
  
#line 1162 
  if (ccb == (struct bna_ccb *)0) 
#line 1163 
                                  goto ldv_59861; else ;
  
#line 1165 
  clear_bit(1L,(unsigned long volatile *)(& (ccb->rcb[0])->flags));
  
#line 1167 
  if (ccb->rcb[1] != (struct bna_rcb *)0) 
#line 1168 
                                          clear_bit(1L,(unsigned long volatile *)(& (ccb->rcb[1])->flags)); else ;
  ldv_59861: 
#line 1169 
  ;
  
#line 1159 
  i += 1;
  ldv_59863: 
#line 1160 
  ;
  
#line 1159 
  if (i <= 15) 
#line 1161 
               goto ldv_59862; else 
#line 1164 
                                    goto ldv_59864;
  ldv_59864: 
#line 1165 
  ;
  
#line 1166 
  return;
}


#line 1176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_rx_cleanup(void *work)
{
  struct bnad_rx_info *tmp;
  struct bnad_rx_ctrl *rx_ctrl;
  unsigned long flags;
  u32 i;
  {
    
#line 1179 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1179 
    tmp = (struct bnad_rx_info *)__mptr + 18446744073709546096U;
  }
  
#line 1178 
  struct bnad_rx_info *rx_info = tmp;
  
#line 1181 
  struct bnad *bnad = (struct bnad *)0;
  
#line 1185 
  i = 0U;
  
#line 1185 
  goto ldv_59877;
  ldv_59876: 
#line 1186 
  ;
  
#line 1186 
  rx_ctrl = & rx_info->rx_ctrl[i];
  
#line 1188 
  if (rx_ctrl->ccb == (struct bna_ccb *)0) 
#line 1189 
                                           goto ldv_59875; else ;
  
#line 1191 
  bnad = (rx_ctrl->ccb)->bnad;
  
#line 1197 
  napi_disable(& rx_ctrl->napi);
  
#line 1199 
  bnad_cq_cleanup(bnad,rx_ctrl->ccb);
  
#line 1200 
  bnad_rxq_cleanup(bnad,(rx_ctrl->ccb)->rcb[0]);
  
#line 1201 
  if ((rx_ctrl->ccb)->rcb[1] != (struct bna_rcb *)0) 
#line 1202 
                                                     bnad_rxq_cleanup(bnad,(rx_ctrl->ccb)->rcb[1]); else ;
  ldv_59875: 
#line 1203 
  ;
  
#line 1185 
  i += 1U;
  ldv_59877: 
#line 1186 
  ;
  
#line 1185 
  if (i <= 15U) 
#line 1187 
                goto ldv_59876; else 
#line 1190 
                                     goto ldv_59878;
  ldv_59878: 
#line 1191 
  ;
  
#line 1205 
  ldv___ldv_spin_lock_90(& bnad->bna_lock);
  
#line 1206 
  bna_rx_cleanup_complete(rx_info->rx);
  
#line 1207 
  ldv_spin_unlock_irqrestore_91(& bnad->bna_lock,flags);
  
#line 1208 
  return;
}


#line 1211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_rx_cleanup(struct bnad *bnad, struct bna_rx *rx)
{
  struct bna_ccb *ccb;
  struct bnad_rx_ctrl *rx_ctrl;
  int i;
  
#line 1213 
  struct bnad_rx_info *rx_info = (struct bnad_rx_info *)rx->priv;
  
#line 1218 
  i = 0;
  
#line 1218 
  goto ldv_59889;
  ldv_59888: 
#line 1219 
  ;
  
#line 1219 
  rx_ctrl = & rx_info->rx_ctrl[i];
  
#line 1220 
  ccb = rx_ctrl->ccb;
  
#line 1221 
  if (ccb == (struct bna_ccb *)0) 
#line 1222 
                                  goto ldv_59887; else ;
  
#line 1224 
  clear_bit(0L,(unsigned long volatile *)(& (ccb->rcb[0])->flags));
  
#line 1226 
  if (ccb->rcb[1] != (struct bna_rcb *)0) 
#line 1227 
                                          clear_bit(0L,(unsigned long volatile *)(& (ccb->rcb[1])->flags)); else ;
  ldv_59887: 
#line 1228 
  ;
  
#line 1218 
  i += 1;
  ldv_59889: 
#line 1219 
  ;
  
#line 1218 
  if (i <= 15) 
#line 1220 
               goto ldv_59888; else 
#line 1223 
                                    goto ldv_59890;
  ldv_59890: 
#line 1224 
  ;
  
#line 1230 
  ldv_queue_work_92(bnad->work_q,& rx_info->rx_cleanup_work);
  
#line 1231 
  return;
}


#line 1234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_rx_post(struct bnad *bnad, struct bna_rx *rx)
{
  struct bna_ccb *ccb;
  struct bna_rcb *rcb;
  struct bnad_rx_ctrl *rx_ctrl;
  int i;
  int j;
  
#line 1236 
  struct bnad_rx_info *rx_info = (struct bnad_rx_info *)rx->priv;
  
#line 1242 
  i = 0;
  
#line 1242 
  goto ldv_59907;
  ldv_59906: 
#line 1243 
  ;
  
#line 1243 
  rx_ctrl = & rx_info->rx_ctrl[i];
  
#line 1244 
  ccb = rx_ctrl->ccb;
  
#line 1245 
  if (ccb == (struct bna_ccb *)0) 
#line 1246 
                                  goto ldv_59901; else ;
  
#line 1248 
  napi_enable(& rx_ctrl->napi);
  
#line 1250 
  j = 0;
  
#line 1250 
  goto ldv_59904;
  ldv_59903: 
#line 1251 
  ;
  
#line 1251 
  rcb = ccb->rcb[j];
  
#line 1252 
  if (rcb == (struct bna_rcb *)0) 
#line 1253 
                                  goto ldv_59902; else ;
  
#line 1255 
  bnad_rxq_alloc_init(bnad,rcb);
  
#line 1256 
  clear_bit(0L,(unsigned long volatile *)(& rcb->flags));
  
#line 1257 
  clear_bit(1L,(unsigned long volatile *)(& rcb->flags));
  
#line 1258 
  bnad_rxq_post(bnad,rcb);
  ldv_59902: 
#line 1259 
  ;
  
#line 1250 
  j += 1;
  ldv_59904: 
#line 1251 
  ;
  
#line 1250 
  if (j <= 1) 
#line 1252 
              goto ldv_59903; else 
#line 1255 
                                   goto ldv_59905;
  ldv_59905: 
#line 1256 
  ;
  ldv_59901: 
#line 1257 
  ;
  
#line 1242 
  i += 1;
  ldv_59907: 
#line 1243 
  ;
  
#line 1242 
  if (i <= 15) 
#line 1244 
               goto ldv_59906; else 
#line 1247 
                                    goto ldv_59908;
  ldv_59908: 
#line 1248 
  ;
  
#line 1249 
  return;
}


#line 1264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_rx_disabled(void *arg, struct bna_rx *rx)
{
  
#line 1266 
  struct bnad *bnad = (struct bnad *)arg;
  
#line 1268 
  complete(& bnad->bnad_completions.rx_comp);
  
#line 1269 
  return;
}


#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_rx_mcast_add(struct bnad *bnad, struct bna_rx *rx)
{
  
#line 1274 
  bnad->bnad_completions.mcast_comp_status = (unsigned char)0U;
  
#line 1275 
  complete(& bnad->bnad_completions.mcast_comp);
  
#line 1276 
  return;
}


#line 1279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_stats_get(struct bnad *bnad, enum bna_cb_status status, struct bna_stats *stats)
{
  int tmp_0;
  bool tmp;
  unsigned long tmp_2;
  
#line 1282 
  if (status == (unsigned int)BNA_CB_SUCCESS) 
#line 1283 
                                              bnad->stats.drv_stats.hw_stats_updates += 1ULL; else ;
  
#line 1285 
  tmp = netif_running((struct net_device const *)bnad->netdev);
  
#line 1285 
  if (tmp) 
#line 1285 
           tmp_0 = 0; else 
#line 1285 
                           tmp_0 = 1;
  
#line 1285 
  if (tmp_0) 
#line 1287 
             goto return_label;
  else {
    int tmp_1;
    
#line 1285 
    tmp_1 = constant_test_bit(5L,(unsigned long const volatile *)(& bnad->run_flags));
    
#line 1285 
    if (tmp_1 == 0) 
#line 1287 
                    goto return_label; else ;
  }
  
#line 1289 
  tmp_2 = msecs_to_jiffies(1000U);
  
#line 1289 
  ;
  
#line 1289 
  ;
  
#line 1289 
  ldv_mod_timer_93(& bnad->stats_timer,tmp_2 + jiffies);
  return_label: 
#line 1291 
                return;
}


#line 1294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_cb_enet_mtu_set(struct bnad *bnad)
{
  
#line 1296 
  bnad->bnad_completions.mtu_comp_status = (unsigned char)0U;
  
#line 1297 
  complete(& bnad->bnad_completions.mtu_comp);
  
#line 1298 
  return;
}


#line 1301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_cb_completion(void *arg, enum bfa_status status)
{
  
#line 1303 
  struct bnad_iocmd_comp *iocmd_comp = (struct bnad_iocmd_comp *)arg;
  
#line 1306 
  iocmd_comp->comp_status = (int)status;
  
#line 1307 
  complete(& iocmd_comp->comp);
  
#line 1308 
  return;
}


#line 1313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_mem_free(struct bnad *bnad, struct bna_mem_info *mem_info)
{
  int i;
  dma_addr_t dma_pa;
  
#line 1319 
  if (mem_info->mdl == (struct bna_mem_descr *)0) 
#line 1320 
                                                  goto return_label; else ;
  
#line 1322 
  i = 0;
  
#line 1322 
  goto ldv_59938;
  ldv_59937: 
#line 1323 
  ;
  
#line 1323 
  if ((mem_info->mdl + i)->kva != (void *)0) 
    
#line 1324 
    if (mem_info->mem_type == (unsigned int)BNA_MEM_T_DMA) {
      unsigned int tmp_0;
      unsigned int tmp_2;
      
#line 1325 
      if (0 != 0) 
#line 1325 
                  tmp_0 = ((((mem_info->mdl + i)->dma.msb << 24) | (((mem_info->mdl + i)->dma.msb << 8) & 16711680U)) | (((mem_info->mdl + i)->dma.msb >> 8) & 65280U)) | ((mem_info->mdl + i)->dma.msb >> 24); else 
                                                                    
#line 1325 
                                                                    tmp_0 = __fswab32((mem_info->mdl + i)->dma.msb);
      
#line 1325 
      if (0 != 0) 
#line 1325 
                  tmp_2 = ((((mem_info->mdl + i)->dma.lsb << 24) | (((mem_info->mdl + i)->dma.lsb << 8) & 16711680U)) | (((mem_info->mdl + i)->dma.lsb >> 8) & 65280U)) | ((mem_info->mdl + i)->dma.lsb >> 24); else 
                                                                    
#line 1325 
                                                                    tmp_2 = __fswab32((mem_info->mdl + i)->dma.lsb);
      
#line 1325 
      dma_pa = ((unsigned long long)tmp_0 << 32) | (unsigned long long)tmp_2;
      
#line 1327 
      dma_free_attrs(& (bnad->pcidev)->dev,(unsigned long)(mem_info->mdl + i)->len,(mem_info->mdl + i)->kva,dma_pa,(struct dma_attrs *)0);
    }
    else 
#line 1331 
         kfree((void const *)(mem_info->mdl + i)->kva);
  else ;
  
#line 1322 
  i += 1;
  ldv_59938: 
#line 1323 
  ;
  
#line 1322 
  if (mem_info->num > (unsigned int)i) 
#line 1324 
                                       goto ldv_59937; else 
#line 1327 
                                                            goto ldv_59939;
  ldv_59939: 
#line 1328 
  ;
  
#line 1334 
  kfree((void const *)mem_info->mdl);
  
#line 1335 
  mem_info->mdl = (struct bna_mem_descr *)0;
  return_label: 
#line 1336 
                return;
}


#line 1339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_mem_alloc(struct bnad *bnad, struct bna_mem_info *mem_info)
{
  int __retres;
  int i;
  dma_addr_t dma_pa;
  
#line 1345 
  if (mem_info->num == 0U || mem_info->len == 0U) {
    
#line 1346 
    mem_info->mdl = (struct bna_mem_descr *)0;
    
#line 1347 
    __retres = 0;
    
#line 1347 
    goto return_label;
  }
  else ;
  
#line 1350 
  mem_info->mdl = (struct bna_mem_descr *)kcalloc((unsigned long)mem_info->num,24UL,208U);
  
#line 1352 
  if (mem_info->mdl == (struct bna_mem_descr *)0) {
    
#line 1353 
    __retres = -12;
    
#line 1353 
    goto return_label;
  }
  else ;
  
#line 1355 
  if (mem_info->mem_type == (unsigned int)BNA_MEM_T_DMA) {
    
#line 1356 
    i = 0;
    
#line 1356 
    goto ldv_59949;
    ldv_59948: 
#line 1357 
    ;
    
#line 1357 
    (mem_info->mdl + i)->len = mem_info->len;
    
#line 1358 
    (mem_info->mdl + i)->kva = dma_alloc_attrs(& (bnad->pcidev)->dev,(unsigned long)mem_info->len,& dma_pa,208U,(struct dma_attrs *)0);
    
#line 1362 
    if ((mem_info->mdl + i)->kva == (void *)0) 
#line 1363 
                                               goto err_return; else ;
    {
      unsigned long long tmp_1;
      
#line 1365 
      if (0 != 0) 
#line 1365 
                  tmp_1 = (((((((dma_pa << 56) | ((dma_pa << 40) & 71776119061217280ULL)) | ((dma_pa << 24) & 280375465082880ULL)) | ((dma_pa << 8) & 1095216660480ULL)) | ((dma_pa >> 8) & 4278190080ULL)) | ((dma_pa >> 24) & 16711680ULL)) | ((dma_pa >> 40) & 65280ULL)) | (dma_pa >> 56); else 
                                                                    
#line 1365 
                                                                    tmp_1 = __fswab64(dma_pa);
      
#line 1365 
      u64 tmp_addr = tmp_1;
      
#line 1365 
      (mem_info->mdl + i)->dma.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
      
#line 1365 
      (mem_info->mdl + i)->dma.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
    }
    
#line 1356 
    i += 1;
    ldv_59949: 
#line 1357 
    ;
    
#line 1356 
    if (mem_info->num > (unsigned int)i) 
#line 1358 
                                         goto ldv_59948; else 
#line 1361 
                                                              goto ldv_59950;
    ldv_59950: 
#line 1362 
    ;
  }
  else {
    
#line 1369 
    i = 0;
    
#line 1369 
    goto ldv_59952;
    ldv_59951: 
#line 1370 
    ;
    
#line 1370 
    (mem_info->mdl + i)->len = mem_info->len;
    
#line 1371 
    (mem_info->mdl + i)->kva = kzalloc_0((unsigned long)mem_info->len,208U);
    
#line 1373 
    if ((mem_info->mdl + i)->kva == (void *)0) 
#line 1374 
                                               goto err_return; else ;
    
#line 1369 
    i += 1;
    ldv_59952: 
#line 1370 
    ;
    
#line 1369 
    if (mem_info->num > (unsigned int)i) 
#line 1371 
                                         goto ldv_59951; else 
#line 1374 
                                                              goto ldv_59953;
    ldv_59953: 
#line 1375 
    ;
  }
  
#line 1378 
  __retres = 0;
  
#line 1378 
  goto return_label;
  err_return: 
#line 1380 
  ;
  
#line 1381 
  bnad_mem_free(bnad,mem_info);
  
#line 1382 
  __retres = -12;
  return_label: 
#line 1382 
                return __retres;
}


#line 1387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_mbox_irq_free(struct bnad *bnad)
{
  int irq;
  unsigned long flags;
  unsigned int tmp;
  
#line 1392 
  ldv___ldv_spin_lock_94(& bnad->bna_lock);
  
#line 1393 
  bnad_disable_mbox_irq(bnad);
  
#line 1394 
  ldv_spin_unlock_irqrestore_95(& bnad->bna_lock,flags);
  
#line 1396 
  if ((bnad->cfg_flags & 16U) != 0U) 
#line 1396 
                                     tmp = (bnad->msix_table)->vector; else 
                                                                    
#line 1396 
                                                                    tmp = (bnad->pcidev)->irq;
  
#line 1396 
  irq = (int)tmp;
  
#line 1397 
  ldv_free_irq_96((unsigned int)irq,(void *)bnad);
  
#line 1398 
  return;
}


#line 1406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_mbox_irq_alloc(struct bnad *bnad)
{
  unsigned long irq_flags;
  unsigned long flags;
  u32 irq;
  irqreturn_t (*irq_handler)(int , void *);
  
#line 1408 
  int err = 0;
  
#line 1413 
  ldv___ldv_spin_lock_97(& bnad->bna_lock);
  
#line 1414 
  if ((bnad->cfg_flags & 16U) != 0U) {
    
#line 1415 
    irq_handler = & bnad_msix_mbox_handler;
    
#line 1416 
    irq = (bnad->msix_table)->vector;
    
#line 1417 
    irq_flags = 0UL;
  }
  else {
    
#line 1419 
    irq_handler = & bnad_isr;
    
#line 1420 
    irq = (bnad->pcidev)->irq;
    
#line 1421 
    irq_flags = 128UL;
  }
  
#line 1424 
  ldv_spin_unlock_irqrestore_98(& bnad->bna_lock,flags);
  
#line 1425 
  sprintf((char *)(& bnad->mbox_irq_name),"%s",(char *)"bna");
  
#line 1431 
  clear_bit(2L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 1433 
  bnad->stats.drv_stats.mbox_intr_disabled += 1ULL;
  
#line 1435 
  err = ldv_request_irq_99(irq,irq_handler,irq_flags,(char const *)(& bnad->mbox_irq_name),(void *)bnad);
  
#line 1438 
  return err;
}


#line 1442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_txrx_irq_free(struct bnad *bnad, struct bna_intr_info *intr_info)
{
  
#line 1444 
  kfree((void const *)intr_info->idl);
  
#line 1445 
  intr_info->idl = (struct bna_intr_descr *)0;
  
#line 1446 
  return;
}


#line 1450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_txrx_irq_alloc(struct bnad *bnad, enum bnad_intr_source src, u32 txrx_id, struct bna_intr_info *intr_info)
{
  int __retres;
  int i;
  u32 cfg_flags;
  unsigned long flags;
  
#line 1453 
  int vector_start = 0;
  
#line 1457 
  ldv___ldv_spin_lock_100(& bnad->bna_lock);
  
#line 1458 
  cfg_flags = bnad->cfg_flags;
  
#line 1459 
  ldv_spin_unlock_irqrestore_101(& bnad->bna_lock,flags);
  
#line 1461 
  if ((cfg_flags & 16U) != 0U) {
    
#line 1462 
    intr_info->intr_type = BNA_INTR_T_MSIX;
    
#line 1463 
    intr_info->idl = (struct bna_intr_descr *)kcalloc((unsigned long)intr_info->num,4UL,208U);
    
#line 1466 
    if (intr_info->idl == (struct bna_intr_descr *)0) {
      
#line 1467 
      __retres = -12;
      
#line 1467 
      goto return_label;
    }
    else ;
    
#line 1469 
    switch ((unsigned int)src) {
      case (unsigned int)1: 
#line 1470 
      ;
      
#line 1471 
      vector_start = (int)(txrx_id + 1U);
      
#line 1472 
      goto ldv_59982;
      case (unsigned int)2: 
#line 1474 
      ;
      
#line 1475 
      vector_start = (int)((bnad->num_tx * bnad->num_txq_per_tx + txrx_id) + 1U);
      
#line 1478 
      goto ldv_59982;
      default: 
#line 1480 
      ;
      
#line 1481 
      ldv_inline_asm();
      
#line 1481 
      ;
    }
    ldv_59982: 
#line 1484 
    ;
    
#line 1484 
    i = 0;
    
#line 1484 
    goto ldv_59986;
    ldv_59985: 
#line 1485 
    ;
    
#line 1485 
    (intr_info->idl + i)->vector = vector_start + i;
    
#line 1484 
    i += 1;
    ldv_59986: 
#line 1485 
    ;
    
#line 1484 
    if (intr_info->num > i) 
#line 1486 
                            goto ldv_59985; else 
#line 1489 
                                                 goto ldv_59987;
    ldv_59987: 
#line 1490 
    ;
  }
  else {
    
#line 1487 
    intr_info->intr_type = BNA_INTR_T_INTX;
    
#line 1488 
    intr_info->num = 1;
    
#line 1489 
    intr_info->idl = (struct bna_intr_descr *)kcalloc((unsigned long)intr_info->num,4UL,208U);
    
#line 1492 
    if (intr_info->idl == (struct bna_intr_descr *)0) {
      
#line 1493 
      __retres = -12;
      
#line 1493 
      goto return_label;
    }
    else ;
    
#line 1495 
    switch ((unsigned int)src) {
      case (unsigned int)1: 
#line 1496 
      ;
      
#line 1497 
      (intr_info->idl)->vector = 1;
      
#line 1498 
      goto ldv_59989;
      case (unsigned int)2: 
#line 1500 
      ;
      
#line 1501 
      (intr_info->idl)->vector = 2;
      
#line 1502 
      goto ldv_59989;
    }
    ldv_59989: 
#line 1504 
    ;
  }
  
#line 1505 
  __retres = 0;
  return_label: 
#line 1505 
                return __retres;
}


#line 1512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_tx_msix_unregister(struct bnad *bnad, struct bnad_tx_info *tx_info, int num_txqs)
{
  int i;
  int vector_num;
  
#line 1518 
  i = 0;
  
#line 1518 
  goto ldv_60000;
  ldv_59999: 
#line 1519 
  ;
  
#line 1519 
  if (tx_info->tcb[i] == (struct bna_tcb *)0) 
#line 1520 
                                              goto ldv_59998; else ;
  
#line 1522 
  vector_num = (tx_info->tcb[i])->intr_vector;
  
#line 1523 
  ldv_free_irq_102((bnad->msix_table + vector_num)->vector,(void *)tx_info->tcb[i]);
  ldv_59998: 
#line 1524 
  ;
  
#line 1518 
  i += 1;
  ldv_60000: 
#line 1519 
  ;
  
#line 1518 
  if (i < num_txqs) 
#line 1520 
                    goto ldv_59999; else 
#line 1523 
                                         goto ldv_60001;
  ldv_60001: 
#line 1524 
  ;
  
#line 1525 
  return;
}


#line 1531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_tx_msix_register(struct bnad *bnad, struct bnad_tx_info *tx_info, u32 tx_id, int num_txqs)
{
  int __retres;
  int i;
  int err;
  int vector_num;
  
#line 1538 
  i = 0;
  
#line 1538 
  goto ldv_60013;
  ldv_60012: 
#line 1539 
  ;
  
#line 1539 
  vector_num = (tx_info->tcb[i])->intr_vector;
  
#line 1540 
  sprintf((char *)(& (tx_info->tcb[i])->name),"%s TXQ %d",(char *)(& (bnad->netdev)->name),(unsigned int)(tx_info->tcb[i])->id + tx_id);
  
#line 1542 
  err = ldv_request_irq_103((bnad->msix_table + vector_num)->vector,& bnad_msix_tx,0UL,(char const *)(& (tx_info->tcb[i])->name),(void *)tx_info->tcb[i]);
  
#line 1546 
  if (err != 0) 
#line 1547 
                goto err_return; else ;
  
#line 1538 
  i += 1;
  ldv_60013: 
#line 1539 
  ;
  
#line 1538 
  if (i < num_txqs) 
#line 1540 
                    goto ldv_60012; else 
#line 1543 
                                         goto ldv_60014;
  ldv_60014: 
#line 1544 
  ;
  
#line 1550 
  __retres = 0;
  
#line 1550 
  goto return_label;
  err_return: 
#line 1552 
  ;
  
#line 1553 
  if (i > 0) 
#line 1554 
             bnad_tx_msix_unregister(bnad,tx_info,i + -1); else ;
  
#line 1555 
  __retres = -1;
  return_label: 
#line 1555 
                return __retres;
}


#line 1562  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_rx_msix_unregister(struct bnad *bnad, struct bnad_rx_info *rx_info, int num_rxps)
{
  int i;
  int vector_num;
  
#line 1568 
  i = 0;
  
#line 1568 
  goto ldv_60024;
  ldv_60023: 
#line 1569 
  ;
  
#line 1569 
  if (rx_info->rx_ctrl[i].ccb == (struct bna_ccb *)0) 
#line 1570 
                                                      goto ldv_60022; else ;
  
#line 1572 
  vector_num = (rx_info->rx_ctrl[i].ccb)->intr_vector;
  
#line 1573 
  ldv_free_irq_104((bnad->msix_table + vector_num)->vector,(void *)rx_info->rx_ctrl[i].ccb);
  ldv_60022: 
#line 1575 
  ;
  
#line 1568 
  i += 1;
  ldv_60024: 
#line 1569 
  ;
  
#line 1568 
  if (i < num_rxps) 
#line 1570 
                    goto ldv_60023; else 
#line 1573 
                                         goto ldv_60025;
  ldv_60025: 
#line 1574 
  ;
  
#line 1575 
  return;
}


#line 1582  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_rx_msix_register(struct bnad *bnad, struct bnad_rx_info *rx_info, u32 rx_id, int num_rxps)
{
  int __retres;
  int i;
  int err;
  int vector_num;
  
#line 1589 
  i = 0;
  
#line 1589 
  goto ldv_60037;
  ldv_60036: 
#line 1590 
  ;
  
#line 1590 
  vector_num = (rx_info->rx_ctrl[i].ccb)->intr_vector;
  
#line 1591 
  sprintf((char *)(& (rx_info->rx_ctrl[i].ccb)->name),"%s CQ %d",(char *)(& (bnad->netdev)->name),(unsigned int)(rx_info->rx_ctrl[i].ccb)->id + rx_id);
  
#line 1594 
  err = ldv_request_irq_105((bnad->msix_table + vector_num)->vector,& bnad_msix_rx,0UL,(char const *)(& (rx_info->rx_ctrl[i].ccb)->name),(void *)rx_info->rx_ctrl[i].ccb);
  
#line 1598 
  if (err != 0) 
#line 1599 
                goto err_return; else ;
  
#line 1589 
  i += 1;
  ldv_60037: 
#line 1590 
  ;
  
#line 1589 
  if (i < num_rxps) 
#line 1591 
                    goto ldv_60036; else 
#line 1594 
                                         goto ldv_60038;
  ldv_60038: 
#line 1595 
  ;
  
#line 1602 
  __retres = 0;
  
#line 1602 
  goto return_label;
  err_return: 
#line 1604 
  ;
  
#line 1605 
  if (i > 0) 
#line 1606 
             bnad_rx_msix_unregister(bnad,rx_info,i + -1); else ;
  
#line 1607 
  __retres = -1;
  return_label: 
#line 1607 
                return __retres;
}


#line 1612  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_tx_res_free(struct bnad *bnad, struct bna_res_info *res_info)
{
  int i;
  
#line 1616 
  i = 0;
  
#line 1616 
  goto ldv_60045;
  ldv_60044: 
#line 1617 
  ;
  
#line 1617 
  if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_MEM) 
#line 1618 
                                                               bnad_mem_free(bnad,& (res_info + i)->res_u.mem_info);
  else 
    
#line 1619 
    if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_INTR) 
#line 1620 
                                                                  bnad_txrx_irq_free(bnad,& (res_info + i)->res_u.intr_info); else ;
  
#line 1616 
  i += 1;
  ldv_60045: 
#line 1617 
  ;
  
#line 1616 
  if (i <= 6) 
#line 1618 
              goto ldv_60044; else 
#line 1621 
                                   goto ldv_60046;
  ldv_60046: 
#line 1622 
  ;
  
#line 1623 
  return;
}


#line 1626  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_tx_res_alloc(struct bnad *bnad, struct bna_res_info *res_info, u32 tx_id)
{
  int __retres;
  int i;
  
#line 1629 
  int err = 0;
  
#line 1631 
  i = 0;
  
#line 1631 
  goto ldv_60056;
  ldv_60055: 
#line 1632 
  ;
  
#line 1632 
  if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_MEM) 
#line 1633 
                                                               err = bnad_mem_alloc(bnad,& (res_info + i)->res_u.mem_info);
  else 
    
#line 1635 
    if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_INTR) 
#line 1636 
                                                                  err = bnad_txrx_irq_alloc(bnad,(enum bnad_intr_source)BNAD_INTR_TX,tx_id,& (res_info + i)->res_u.intr_info); else ;
  
#line 1638 
  if (err != 0) 
#line 1639 
                goto err_return; else ;
  
#line 1631 
  i += 1;
  ldv_60056: 
#line 1632 
  ;
  
#line 1631 
  if (i <= 6) 
#line 1633 
              goto ldv_60055; else 
#line 1636 
                                   goto ldv_60057;
  ldv_60057: 
#line 1637 
  ;
  
#line 1641 
  __retres = 0;
  
#line 1641 
  goto return_label;
  err_return: 
#line 1643 
  ;
  
#line 1644 
  bnad_tx_res_free(bnad,res_info);
  
#line 1645 
  __retres = err;
  return_label: 
#line 1645 
                return __retres;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_rx_res_free(struct bnad *bnad, struct bna_res_info *res_info)
{
  int i;
  
#line 1654 
  i = 0;
  
#line 1654 
  goto ldv_60064;
  ldv_60063: 
#line 1655 
  ;
  
#line 1655 
  if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_MEM) 
#line 1656 
                                                               bnad_mem_free(bnad,& (res_info + i)->res_u.mem_info);
  else 
    
#line 1657 
    if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_INTR) 
#line 1658 
                                                                  bnad_txrx_irq_free(bnad,& (res_info + i)->res_u.intr_info); else ;
  
#line 1654 
  i += 1;
  ldv_60064: 
#line 1655 
  ;
  
#line 1654 
  if (i <= 15) 
#line 1656 
               goto ldv_60063; else 
#line 1659 
                                    goto ldv_60065;
  ldv_60065: 
#line 1660 
  ;
  
#line 1661 
  return;
}


#line 1664  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_rx_res_alloc(struct bnad *bnad, struct bna_res_info *res_info, uint rx_id)
{
  int __retres;
  int i;
  
#line 1667 
  int err = 0;
  
#line 1670 
  i = 0;
  
#line 1670 
  goto ldv_60075;
  ldv_60074: 
#line 1671 
  ;
  
#line 1671 
  if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_MEM) 
#line 1672 
                                                               err = bnad_mem_alloc(bnad,& (res_info + i)->res_u.mem_info);
  else 
    
#line 1674 
    if ((res_info + i)->res_type == (unsigned int)BNA_RES_T_INTR) 
#line 1675 
                                                                  err = bnad_txrx_irq_alloc(bnad,(enum bnad_intr_source)BNAD_INTR_RX,rx_id,& (res_info + i)->res_u.intr_info); else ;
  
#line 1677 
  if (err != 0) 
#line 1678 
                goto err_return; else ;
  
#line 1670 
  i += 1;
  ldv_60075: 
#line 1671 
  ;
  
#line 1670 
  if (i <= 15) 
#line 1672 
               goto ldv_60074; else 
#line 1675 
                                    goto ldv_60076;
  ldv_60076: 
#line 1676 
  ;
  
#line 1680 
  __retres = 0;
  
#line 1680 
  goto return_label;
  err_return: 
#line 1682 
  ;
  
#line 1683 
  bnad_rx_res_free(bnad,res_info);
  
#line 1684 
  __retres = err;
  return_label: 
#line 1684 
                return __retres;
}


#line 1690  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_ioc_timeout(unsigned long data)
{
  unsigned long flags;
  
#line 1692 
  struct bnad *bnad = (struct bnad *)data;
  
#line 1695 
  ldv___ldv_spin_lock_106_0(& bnad->bna_lock);
  
#line 1696 
  bfa_nw_ioc_timeout(& bnad->bna.ioceth.ioc);
  
#line 1697 
  ldv_spin_unlock_irqrestore_107_0(& bnad->bna_lock,flags);
  
#line 1698 
  return;
}


#line 1701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_ioc_hb_check(unsigned long data)
{
  unsigned long flags;
  
#line 1703 
  struct bnad *bnad = (struct bnad *)data;
  
#line 1706 
  ldv___ldv_spin_lock_108(& bnad->bna_lock);
  
#line 1707 
  bfa_nw_ioc_hb_check(& bnad->bna.ioceth.ioc);
  
#line 1708 
  ldv_spin_unlock_irqrestore_109(& bnad->bna_lock,flags);
  
#line 1709 
  return;
}


#line 1712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_iocpf_timeout(unsigned long data)
{
  unsigned long flags;
  
#line 1714 
  struct bnad *bnad = (struct bnad *)data;
  
#line 1717 
  ldv___ldv_spin_lock_110(& bnad->bna_lock);
  
#line 1718 
  bfa_nw_iocpf_timeout(& bnad->bna.ioceth.ioc);
  
#line 1719 
  ldv_spin_unlock_irqrestore_111_0(& bnad->bna_lock,flags);
  
#line 1720 
  return;
}


#line 1723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_iocpf_sem_timeout(unsigned long data)
{
  unsigned long flags;
  
#line 1725 
  struct bnad *bnad = (struct bnad *)data;
  
#line 1728 
  ldv___ldv_spin_lock_112_0(& bnad->bna_lock);
  
#line 1729 
  bfa_nw_iocpf_sem_timeout(& bnad->bna.ioceth.ioc);
  
#line 1730 
  ldv_spin_unlock_irqrestore_113_0(& bnad->bna_lock,flags);
  
#line 1731 
  return;
}


#line 1745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_dim_timeout(unsigned long data)
{
  struct bnad_rx_info *rx_info;
  struct bnad_rx_ctrl *rx_ctrl;
  int i;
  int j;
  unsigned long flags;
  int tmp_0;
  bool tmp;
  int tmp_2;
  
#line 1747 
  struct bnad *bnad = (struct bnad *)data;
  
#line 1753 
  tmp = netif_carrier_ok((struct net_device const *)bnad->netdev);
  
#line 1753 
  if (tmp) 
#line 1753 
           tmp_0 = 0; else 
#line 1753 
                           tmp_0 = 1;
  
#line 1753 
  if (tmp_0) 
#line 1754 
             goto return_label; else ;
  
#line 1756 
  ldv___ldv_spin_lock_114(& bnad->bna_lock);
  
#line 1757 
  i = 0;
  
#line 1757 
  goto ldv_60112;
  ldv_60111: 
#line 1758 
  ;
  
#line 1758 
  rx_info = & bnad->rx_info[i];
  
#line 1759 
  if (rx_info->rx == (struct bna_rx *)0) 
#line 1760 
                                         goto ldv_60106; else ;
  
#line 1761 
  j = 0;
  
#line 1761 
  goto ldv_60109;
  ldv_60108: 
#line 1762 
  ;
  
#line 1762 
  rx_ctrl = & rx_info->rx_ctrl[j];
  
#line 1763 
  if (rx_ctrl->ccb == (struct bna_ccb *)0) 
#line 1764 
                                           goto ldv_60107; else ;
  
#line 1765 
  bna_rx_dim_update(rx_ctrl->ccb);
  ldv_60107: 
#line 1766 
  ;
  
#line 1761 
  j += 1;
  ldv_60109: 
#line 1762 
  ;
  
#line 1761 
  if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 1763 
                                              goto ldv_60108; else 
#line 1766 
                                                                   goto ldv_60110;
  ldv_60110: 
#line 1767 
  ;
  ldv_60106: 
#line 1768 
  ;
  
#line 1757 
  i += 1;
  ldv_60112: 
#line 1758 
  ;
  
#line 1757 
  if (bnad->num_rx > (unsigned int)i) 
#line 1759 
                                      goto ldv_60111; else 
#line 1762 
                                                           goto ldv_60113;
  ldv_60113: 
#line 1763 
  ;
  
#line 1770 
  tmp_2 = constant_test_bit(4L,(unsigned long const volatile *)(& bnad->run_flags));
  
#line 1770 
  if (tmp_2 != 0) {
    unsigned long tmp_1;
    
#line 1771 
    tmp_1 = msecs_to_jiffies(1000U);
    
#line 1771 
    ;
    
#line 1771 
    ;
    
#line 1771 
    ldv_mod_timer_115(& bnad->dim_timer,tmp_1 + jiffies);
  }
  else ;
  
#line 1773 
  ldv_spin_unlock_irqrestore_116(& bnad->bna_lock,flags);
  return_label: 
#line 1774 
                return;
}


#line 1778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_stats_timeout(unsigned long data)
{
  unsigned long flags;
  int tmp_0;
  bool tmp;
  
#line 1780 
  struct bnad *bnad = (struct bnad *)data;
  
#line 1783 
  tmp = netif_running((struct net_device const *)bnad->netdev);
  
#line 1783 
  if (tmp) 
#line 1783 
           tmp_0 = 0; else 
#line 1783 
                           tmp_0 = 1;
  
#line 1783 
  if (tmp_0) 
#line 1785 
             goto return_label;
  else {
    int tmp_1;
    
#line 1783 
    tmp_1 = constant_test_bit(5L,(unsigned long const volatile *)(& bnad->run_flags));
    
#line 1783 
    if (tmp_1 == 0) 
#line 1785 
                    goto return_label; else ;
  }
  
#line 1787 
  ldv___ldv_spin_lock_117(& bnad->bna_lock);
  
#line 1788 
  bna_hw_stats_get(& bnad->bna);
  
#line 1789 
  ldv_spin_unlock_irqrestore_118(& bnad->bna_lock,flags);
  return_label: 
#line 1790 
                return;
}


#line 1797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_dim_timer_start(struct bnad *bnad)
{
  
#line 1799 
  if ((bnad->cfg_flags & 1U) != 0U) {
    int tmp_0;
    
#line 1799 
    tmp_0 = constant_test_bit(4L,(unsigned long const volatile *)(& bnad->run_flags));
    
#line 1799 
    if (tmp_0 == 0) {
      unsigned long tmp;
      {
        struct lock_class_key __key;
        
#line 1801 
        init_timer_key(& bnad->dim_timer,0U,"((&bnad->dim_timer))",& __key);
      }
      
#line 1801 
      bnad->dim_timer.function = & bnad_dim_timeout;
      
#line 1801 
      bnad->dim_timer.data = (unsigned long)bnad;
      
#line 1803 
      clear_bit(4L,(unsigned long volatile *)(& bnad->run_flags));
      
#line 1804 
      tmp = msecs_to_jiffies(1000U);
      
#line 1804 
      ;
      
#line 1804 
      ;
      
#line 1804 
      ldv_mod_timer_119(& bnad->dim_timer,tmp + jiffies);
    }
    else ;
  }
  else ;
  
#line 1807 
  return;
}


#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_stats_timer_start(struct bnad *bnad)
{
  unsigned long flags;
  int tmp_0;
  
#line 1818 
  ldv___ldv_spin_lock_120(& bnad->bna_lock);
  
#line 1819 
  tmp_0 = test_and_set_bit(5L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 1819 
  if (tmp_0 == 0) {
    unsigned long tmp;
    {
      struct lock_class_key __key;
      
#line 1820 
      init_timer_key(& bnad->stats_timer,0U,"((&bnad->stats_timer))",& __key);
    }
    
#line 1820 
    bnad->stats_timer.function = & bnad_stats_timeout;
    
#line 1820 
    bnad->stats_timer.data = (unsigned long)bnad;
    
#line 1822 
    tmp = msecs_to_jiffies(1000U);
    
#line 1822 
    ;
    
#line 1822 
    ;
    
#line 1822 
    ldv_mod_timer_121(& bnad->stats_timer,tmp + jiffies);
  }
  else ;
  
#line 1825 
  ldv_spin_unlock_irqrestore_122(& bnad->bna_lock,flags);
  
#line 1826 
  return;
}


#line 1833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_stats_timer_stop(struct bnad *bnad)
{
  unsigned long flags;
  int tmp;
  
#line 1835 
  int to_del = 0;
  
#line 1838 
  ldv___ldv_spin_lock_123(& bnad->bna_lock);
  
#line 1839 
  tmp = test_and_set_bit(5L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 1839 
  if (tmp != 0) 
#line 1840 
                to_del = 1; else ;
  
#line 1841 
  ldv_spin_unlock_irqrestore_124(& bnad->bna_lock,flags);
  
#line 1842 
  if (to_del != 0) 
#line 1843 
                   ldv_del_timer_sync_125(& bnad->stats_timer); else ;
  
#line 1844 
  return;
}


#line 1849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_netdev_mc_list_get(struct net_device *netdev, u8 *mc_list)
{
  struct netdev_hw_addr *mc_addr;
  struct netdev_hw_addr *tmp;
  struct netdev_hw_addr *tmp_0;
  
#line 1851 
  int i = 1;
  {
    
#line 1854 
    struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
    
#line 1854 
    tmp = (struct netdev_hw_addr *)__mptr;
  }
  
#line 1854 
  mc_addr = tmp;
  
#line 1854 
  goto ldv_60144;
  ldv_60143: 
#line 1855 
  ;
  
#line 1855 
  ether_addr_copy(mc_list + i * 6,(u8 const *)(& mc_addr->addr[0]));
  
#line 1856 
  i += 1;
  {
    
#line 1854 
    struct list_head const *__mptr_0 = (struct list_head const *)mc_addr->list.next;
    
#line 1854 
    tmp_0 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 1854 
  mc_addr = tmp_0;
  ldv_60144: 
#line 1856 
  ;
  
#line 1854 
  if (& mc_addr->list != & netdev->mc.list) 
#line 1856 
                                            goto ldv_60143; else 
#line 1859 
                                                                 goto ldv_60145;
  ldv_60145: 
#line 1860 
  ;
  
#line 1861 
  return;
}


#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_napi_poll_rx(struct napi_struct *napi, int budget)
{
  int __retres;
  struct bnad_rx_ctrl *tmp;
  int tmp_1;
  bool tmp_0;
  u32 tmp_2;
  {
    
#line 1864 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1864 
    tmp = (struct bnad_rx_ctrl *)__mptr + 18446744073709551592U;
  }
  
#line 1863 
  struct bnad_rx_ctrl *rx_ctrl = tmp;
  
#line 1865 
  struct bnad *bnad = rx_ctrl->bnad;
  
#line 1866 
  int rcvd = 0;
  
#line 1868 
  rx_ctrl->rx_poll_ctr += 1ULL;
  
#line 1870 
  tmp_0 = netif_carrier_ok((struct net_device const *)bnad->netdev);
  
#line 1870 
  if (tmp_0) 
#line 1870 
             tmp_1 = 0; else 
#line 1870 
                             tmp_1 = 1;
  
#line 1870 
  if (tmp_1) 
#line 1871 
             goto poll_exit; else ;
  
#line 1873 
  tmp_2 = bnad_cq_process(bnad,rx_ctrl->ccb,budget);
  
#line 1873 
  rcvd = (int)tmp_2;
  
#line 1874 
  if (rcvd >= budget) {
    
#line 1875 
    __retres = rcvd;
    
#line 1875 
    goto return_label;
  }
  else ;
  poll_exit: 
#line 1877 
  ;
  
#line 1878 
  napi_complete(napi);
  
#line 1880 
  rx_ctrl->rx_complete += 1ULL;
  
#line 1882 
  if (rx_ctrl->ccb != (struct bna_ccb *)0) {
    int tmp_3;
    
#line 1883 
    tmp_3 = constant_test_bit(0L,(unsigned long const volatile *)(& ((rx_ctrl->ccb)->rcb[0])->flags));
    
#line 1883 
    if ((long)(tmp_3 != 0) != 0L) {
      
#line 1883 
      ((rx_ctrl->ccb)->i_dbell)->doorbell_ack = (unsigned int)((int)(rx_ctrl->ccb)->rx_coalescing_timeo << 16) | 2147483648U;
      
#line 1883 
      writel(((rx_ctrl->ccb)->i_dbell)->doorbell_ack,(void volatile *)((rx_ctrl->ccb)->i_dbell)->doorbell_addr);
    }
    else ;
  }
  else ;
  
#line 1885 
  __retres = rcvd;
  return_label: 
#line 1885 
                return __retres;
}


#line 1890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_napi_add(struct bnad *bnad, u32 rx_id)
{
  struct bnad_rx_ctrl *rx_ctrl;
  int i;
  
#line 1896 
  i = 0;
  
#line 1896 
  goto ldv_60163;
  ldv_60162: 
#line 1897 
  ;
  
#line 1897 
  rx_ctrl = & bnad->rx_info[rx_id].rx_ctrl[i];
  
#line 1898 
  netif_napi_add(bnad->netdev,& rx_ctrl->napi,& bnad_napi_poll_rx,64);
  
#line 1896 
  i += 1;
  ldv_60163: 
#line 1897 
  ;
  
#line 1896 
  if (bnad->num_rxp_per_rx > (unsigned int)i) 
#line 1898 
                                              goto ldv_60162; else 
#line 1901 
                                                                   goto ldv_60164;
  ldv_60164: 
#line 1902 
  ;
  
#line 1903 
  return;
}


#line 1904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_napi_delete(struct bnad *bnad, u32 rx_id)
{
  int i;
  
#line 1909 
  i = 0;
  
#line 1909 
  goto ldv_60171;
  ldv_60170: 
#line 1910 
  ;
  
#line 1910 
  netif_napi_del(& bnad->rx_info[rx_id].rx_ctrl[i].napi);
  
#line 1909 
  i += 1;
  ldv_60171: 
#line 1910 
  ;
  
#line 1909 
  if (bnad->num_rxp_per_rx > (unsigned int)i) 
#line 1911 
                                              goto ldv_60170; else 
#line 1914 
                                                                   goto ldv_60172;
  ldv_60172: 
#line 1915 
  ;
  
#line 1916 
  return;
}


#line 1915  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_destroy_tx(struct bnad *bnad, u32 tx_id)
{
  unsigned long flags;
  
#line 1917 
  struct bnad_tx_info *tx_info = & bnad->tx_info[tx_id];
  
#line 1918 
  struct bna_res_info *res_info = & bnad->tx_res_info[tx_id].res_info[0];
  
#line 1921 
  if (tx_info->tx == (struct bna_tx *)0) 
#line 1922 
                                         goto return_label; else ;
  
#line 1924 
  init_completion(& bnad->bnad_completions.tx_comp);
  
#line 1925 
  ldv___ldv_spin_lock_126(& bnad->bna_lock);
  
#line 1926 
  bna_tx_disable(tx_info->tx,(enum bna_cleanup_type)BNA_HARD_CLEANUP,& bnad_cb_tx_disabled);
  
#line 1927 
  ldv_spin_unlock_irqrestore_127(& bnad->bna_lock,flags);
  
#line 1928 
  wait_for_completion(& bnad->bnad_completions.tx_comp);
  
#line 1930 
  if ((tx_info->tcb[0])->intr_type == (unsigned int)BNA_INTR_T_MSIX) 
    
#line 1931 
    bnad_tx_msix_unregister(bnad,tx_info,(int)bnad->num_txq_per_tx); else ;
  
#line 1934 
  ldv___ldv_spin_lock_128(& bnad->bna_lock);
  
#line 1935 
  bna_tx_destroy(tx_info->tx);
  
#line 1936 
  ldv_spin_unlock_irqrestore_129(& bnad->bna_lock,flags);
  
#line 1938 
  tx_info->tx = (struct bna_tx *)0;
  
#line 1939 
  tx_info->tx_id = 0U;
  
#line 1941 
  bnad_tx_res_free(bnad,res_info);
  return_label: 
#line 1942 
                return;
}


#line 1946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
int bnad_setup_tx(struct bnad *bnad, u32 tx_id)
{
  int __retres;
  int err;
  struct bna_tx *tx;
  unsigned long flags;
  
#line 1949 
  struct bnad_tx_info *tx_info = & bnad->tx_info[tx_id];
  
#line 1950 
  struct bna_res_info *res_info = & bnad->tx_res_info[tx_id].res_info[0];
  
#line 1951 
  struct bna_intr_info *intr_info = & (res_info + 6U)->res_u.intr_info;
  
#line 1953 
  struct bna_tx_config *tx_config = & bnad->tx_config[tx_id];
  
#line 1954 
  struct bna_tx_event_cbfn const tx_cbfn = {.tcb_setup_cbfn = & bnad_cb_tcb_setup, .tcb_destroy_cbfn = & bnad_cb_tcb_destroy, .tx_stall_cbfn = & bnad_cb_tx_stall, .tx_resume_cbfn = & bnad_cb_tx_resume, .tx_cleanup_cbfn = & bnad_cb_tx_cleanup};
  
#line 1965 
  tx_info->tx_id = tx_id;
  
#line 1968 
  tx_config->num_txq = (int)bnad->num_txq_per_tx;
  
#line 1969 
  tx_config->txq_depth = (int)bnad->txq_depth;
  
#line 1970 
  tx_config->tx_type = BNA_TX_T_REGULAR;
  
#line 1971 
  tx_config->coalescing_timeo = (int)bnad->tx_coalescing_timeo;
  
#line 1974 
  ldv___ldv_spin_lock_130(& bnad->bna_lock);
  
#line 1975 
  bna_tx_res_req((int)bnad->num_txq_per_tx,(int)bnad->txq_depth,res_info);
  
#line 1977 
  ldv_spin_unlock_irqrestore_131(& bnad->bna_lock,flags);
  
#line 1980 
  (res_info + 1U)->res_type = BNA_RES_T_MEM;
  
#line 1980 
  (res_info + 1U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1980 
  (res_info + 1U)->res_u.mem_info.num = bnad->num_txq_per_tx;
  
#line 1980 
  (res_info + 1U)->res_u.mem_info.len = bnad->txq_depth * 80U;
  
#line 1985 
  err = bnad_tx_res_alloc(bnad,res_info,tx_id);
  
#line 1986 
  if (err != 0) {
    
#line 1987 
    __retres = err;
    
#line 1987 
    goto return_label;
  }
  else ;
  
#line 1990 
  ldv___ldv_spin_lock_132(& bnad->bna_lock);
  
#line 1991 
  tx = bna_tx_create(& bnad->bna,bnad,tx_config,& tx_cbfn,res_info,(void *)tx_info);
  
#line 1993 
  ldv_spin_unlock_irqrestore_133(& bnad->bna_lock,flags);
  
#line 1994 
  if (tx == (struct bna_tx *)0) {
    
#line 1995 
    err = -12;
    
#line 1996 
    goto err_return;
  }
  else ;
  
#line 1998 
  tx_info->tx = tx;
  {
    struct lock_class_key __key;
    
#line 2000 
    __init_work(& tx_info->tx_cleanup_work.work,0);
    
#line 2000 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2000 
    tx_info->tx_cleanup_work.work.data = __constr_expr_37;
    
#line 2000 
    lockdep_init_map(& tx_info->tx_cleanup_work.work.lockdep_map,"(&(&tx_info->tx_cleanup_work)->work)",& __key,0);
    
#line 2000 
    INIT_LIST_HEAD(& tx_info->tx_cleanup_work.work.entry);
    
#line 2000 
    tx_info->tx_cleanup_work.work.func = (void (*)(struct work_struct *))(& bnad_tx_cleanup);
  }
  {
    struct lock_class_key __key_0;
    
#line 2000 
    init_timer_key(& tx_info->tx_cleanup_work.timer,2097152U,"(&(&tx_info->tx_cleanup_work)->timer)",& __key_0);
  }
  
#line 2000 
  tx_info->tx_cleanup_work.timer.function = & delayed_work_timer_fn;
  
#line 2000 
  tx_info->tx_cleanup_work.timer.data = (unsigned long)(& tx_info->tx_cleanup_work);
  
#line 2004 
  if (intr_info->intr_type == (unsigned int)BNA_INTR_T_MSIX) {
    
#line 2005 
    err = bnad_tx_msix_register(bnad,tx_info,tx_id,(int)bnad->num_txq_per_tx);
    
#line 2007 
    if (err != 0) 
#line 2008 
                  goto cleanup_tx; else ;
  }
  else ;
  
#line 2011 
  ldv___ldv_spin_lock_134(& bnad->bna_lock);
  
#line 2012 
  bna_tx_enable(tx);
  
#line 2013 
  ldv_spin_unlock_irqrestore_135(& bnad->bna_lock,flags);
  
#line 2015 
  __retres = 0;
  
#line 2015 
  goto return_label;
  cleanup_tx: 
#line 2017 
  ;
  
#line 2018 
  ldv___ldv_spin_lock_136(& bnad->bna_lock);
  
#line 2019 
  bna_tx_destroy(tx_info->tx);
  
#line 2020 
  ldv_spin_unlock_irqrestore_137(& bnad->bna_lock,flags);
  
#line 2021 
  tx_info->tx = (struct bna_tx *)0;
  
#line 2022 
  tx_info->tx_id = 0U;
  err_return: 
#line 2023 
  ;
  
#line 2024 
  bnad_tx_res_free(bnad,res_info);
  
#line 2025 
  __retres = err;
  return_label: 
#line 2025 
                return __retres;
}


#line 2031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_init_rx_config(struct bnad *bnad, struct bna_rx_config *rx_config)
{
  
#line 2033 
  memset((void *)rx_config,0,108UL);
  
#line 2034 
  rx_config->rx_type = BNA_RX_T_REGULAR;
  
#line 2035 
  rx_config->num_paths = (int)bnad->num_rxp_per_rx;
  
#line 2036 
  rx_config->coalescing_timeo = (int)bnad->rx_coalescing_timeo;
  
#line 2038 
  if (bnad->num_rxp_per_rx > 1U) {
    
#line 2039 
    rx_config->rss_status = BNA_STATUS_T_ENABLED;
    
#line 2040 
    rx_config->rss_config.hash_type = (enum bfi_enet_rss_type)15;
    
#line 2045 
    rx_config->rss_config.hash_mask = (unsigned char)((unsigned int)((unsigned char)bnad->num_rxp_per_rx) + 255U);
    
#line 2047 
    netdev_rss_key_fill((void *)(& rx_config->rss_config.toeplitz_hash_key),40UL);
  }
  else {
    
#line 2050 
    rx_config->rss_status = BNA_STATUS_T_DISABLED;
    
#line 2051 
    memset((void *)(& rx_config->rss_config),0,48UL);
  }
  
#line 2055 
  rx_config->frame_size = (bnad->netdev)->mtu + 22U;
  
#line 2056 
  rx_config->q0_multi_buf = BNA_STATUS_T_DISABLED;
  
#line 2063 
  rx_config->rxp_type = BNA_RXP_SLR;
  
#line 2065 
  if ((unsigned int)(bnad->pcidev)->device == 34U && rx_config->frame_size > 4096U) {
    
#line 2071 
    rx_config->q0_buf_size = 2048U;
    
#line 2073 
    rx_config->q0_num_vecs = 4U;
    
#line 2074 
    rx_config->q0_depth = bnad->rxq_depth * rx_config->q0_num_vecs;
    
#line 2075 
    rx_config->q0_multi_buf = BNA_STATUS_T_ENABLED;
  }
  else {
    
#line 2077 
    rx_config->q0_buf_size = rx_config->frame_size;
    
#line 2078 
    rx_config->q0_num_vecs = 1U;
    
#line 2079 
    rx_config->q0_depth = bnad->rxq_depth;
  }
  
#line 2083 
  if (rx_config->rxp_type == (unsigned int)BNA_RXP_SLR) {
    
#line 2084 
    rx_config->q1_depth = bnad->rxq_depth;
    
#line 2085 
    rx_config->q1_buf_size = 128U;
  }
  else ;
  
#line 2088 
  rx_config->vlan_strip_status = (enum bna_status)((int)((bnad->netdev)->features >> 8) & 1);
  
#line 2091 
  return;
}


#line 2094  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_rx_ctrl_init(struct bnad *bnad, u32 rx_id)
{
  int i;
  
#line 2096 
  struct bnad_rx_info *rx_info = & bnad->rx_info[rx_id];
  
#line 2099 
  i = 0;
  
#line 2099 
  goto ldv_60208;
  ldv_60207: 
#line 2100 
  ;
  
#line 2100 
  rx_info->rx_ctrl[i].bnad = bnad;
  
#line 2099 
  i += 1;
  ldv_60208: 
#line 2100 
  ;
  
#line 2099 
  if (bnad->num_rxp_per_rx > (unsigned int)i) 
#line 2101 
                                              goto ldv_60207; else 
#line 2104 
                                                                   goto ldv_60209;
  ldv_60209: 
#line 2105 
  ;
  
#line 2106 
  return;
}


#line 2105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static u32 bnad_reinit_rx(struct bnad *bnad)
{
  unsigned long flags;
  int tmp;
  
#line 2107 
  struct net_device *netdev = bnad->netdev;
  
#line 2108 
  u32 err = 0U;
  
#line 2108 
  u32 current_err = 0U;
  
#line 2109 
  u32 rx_id = 0U;
  
#line 2109 
  u32 count = 0U;
  
#line 2113 
  rx_id = 0U;
  
#line 2113 
  goto ldv_60221;
  ldv_60220: 
#line 2114 
  ;
  
#line 2114 
  if (bnad->rx_info[rx_id].rx == (struct bna_rx *)0) 
#line 2115 
                                                     goto ldv_60219; else ;
  
#line 2116 
  bnad_destroy_rx(bnad,rx_id);
  ldv_60219: 
#line 2117 
  ;
  
#line 2113 
  rx_id += 1U;
  ldv_60221: 
#line 2114 
  ;
  
#line 2113 
  if (bnad->num_rx > rx_id) 
#line 2115 
                            goto ldv_60220; else 
#line 2118 
                                                 goto ldv_60222;
  ldv_60222: 
#line 2119 
  ;
  
#line 2119 
  ldv___ldv_spin_lock_138(& bnad->bna_lock);
  
#line 2120 
  bna_enet_mtu_set(& bnad->bna.enet,(int)((bnad->netdev)->mtu + 22U),(void (*)(struct bnad *))0);
  
#line 2122 
  ldv_spin_unlock_irqrestore_139(& bnad->bna_lock,flags);
  
#line 2124 
  rx_id = 0U;
  
#line 2124 
  goto ldv_60224;
  ldv_60223: 
#line 2125 
  ;
  
#line 2125 
  count += 1U;
  
#line 2126 
  tmp = bnad_setup_rx(bnad,rx_id);
  
#line 2126 
  current_err = (unsigned int)tmp;
  
#line 2127 
  if (current_err != 0U && err == 0U) {
    
#line 2128 
    err = current_err;
    
#line 2129 
    netdev_err((struct net_device const *)netdev,"RXQ:%u setup failed\n",rx_id);
  }
  else ;
  
#line 2124 
  rx_id += 1U;
  ldv_60224: 
#line 2125 
  ;
  
#line 2124 
  if (bnad->num_rx > rx_id) 
#line 2126 
                            goto ldv_60223; else 
#line 2129 
                                                 goto ldv_60225;
  ldv_60225: 
#line 2130 
  ;
  
#line 2134 
  if (bnad->rx_info[0].rx != (struct bna_rx *)0 && err == 0U) {
    
#line 2135 
    bnad_restore_vlans(bnad,0U);
    
#line 2136 
    bnad_enable_default_bcast(bnad);
    
#line 2137 
    ldv___ldv_spin_lock_140(& bnad->bna_lock);
    
#line 2138 
    bnad_mac_addr_set_locked(bnad,(u8 const *)netdev->dev_addr);
    
#line 2139 
    ldv_spin_unlock_irqrestore_141(& bnad->bna_lock,flags);
    
#line 2140 
    bnad_set_rx_mode(netdev);
  }
  else ;
  
#line 2143 
  return count;
}


#line 2148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_destroy_rx(struct bnad *bnad, u32 rx_id)
{
  unsigned long flags;
  
#line 2150 
  struct bnad_rx_info *rx_info = & bnad->rx_info[rx_id];
  
#line 2151 
  struct bna_rx_config *rx_config = & bnad->rx_config[rx_id];
  
#line 2152 
  struct bna_res_info *res_info = & bnad->rx_res_info[rx_id].res_info[0];
  
#line 2154 
  int to_del = 0;
  
#line 2156 
  if (rx_info->rx == (struct bna_rx *)0) 
#line 2157 
                                         goto return_label; else ;
  
#line 2159 
  if (rx_id == 0U) {
    
#line 2160 
    ldv___ldv_spin_lock_142(& bnad->bna_lock);
    
#line 2161 
    if ((bnad->cfg_flags & 1U) != 0U) {
      int tmp;
      
#line 2161 
      tmp = constant_test_bit(4L,(unsigned long const volatile *)(& bnad->run_flags));
      
#line 2161 
      if (tmp != 0) {
        
#line 2163 
        clear_bit(4L,(unsigned long volatile *)(& bnad->run_flags));
        
#line 2164 
        to_del = 1;
      }
      else ;
    }
    else ;
    
#line 2166 
    ldv_spin_unlock_irqrestore_143(& bnad->bna_lock,flags);
    
#line 2167 
    if (to_del != 0) 
#line 2168 
                     ldv_del_timer_sync_144(& bnad->dim_timer); else ;
  }
  else ;
  
#line 2171 
  init_completion(& bnad->bnad_completions.rx_comp);
  
#line 2172 
  ldv___ldv_spin_lock_145(& bnad->bna_lock);
  
#line 2173 
  bna_rx_disable(rx_info->rx,(enum bna_cleanup_type)BNA_HARD_CLEANUP,& bnad_cb_rx_disabled);
  
#line 2174 
  ldv_spin_unlock_irqrestore_146(& bnad->bna_lock,flags);
  
#line 2175 
  wait_for_completion(& bnad->bnad_completions.rx_comp);
  
#line 2177 
  if ((rx_info->rx_ctrl[0].ccb)->intr_type == (unsigned int)BNA_INTR_T_MSIX) 
    
#line 2178 
    bnad_rx_msix_unregister(bnad,rx_info,rx_config->num_paths); else ;
  
#line 2180 
  bnad_napi_delete(bnad,rx_id);
  
#line 2182 
  ldv___ldv_spin_lock_147(& bnad->bna_lock);
  
#line 2183 
  bna_rx_destroy(rx_info->rx);
  
#line 2185 
  rx_info->rx = (struct bna_rx *)0;
  
#line 2186 
  rx_info->rx_id = 0U;
  
#line 2187 
  ldv_spin_unlock_irqrestore_148(& bnad->bna_lock,flags);
  
#line 2189 
  bnad_rx_res_free(bnad,res_info);
  return_label: 
#line 2190 
                return;
}


#line 2194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
int bnad_setup_rx(struct bnad *bnad, u32 rx_id)
{
  int __retres;
  int err;
  struct bna_rx *rx;
  unsigned long flags;
  
#line 2197 
  struct bnad_rx_info *rx_info = & bnad->rx_info[rx_id];
  
#line 2198 
  struct bna_res_info *res_info = & bnad->rx_res_info[rx_id].res_info[0];
  
#line 2199 
  struct bna_intr_info *intr_info = & (res_info + 15U)->res_u.intr_info;
  
#line 2201 
  struct bna_rx_config *rx_config = & bnad->rx_config[rx_id];
  
#line 2202 
  struct bna_rx_event_cbfn const rx_cbfn = {.rcb_setup_cbfn = (void (*)(struct bnad *, struct bna_rcb *))0, .rcb_destroy_cbfn = (void (*)(struct bnad *, struct bna_rcb *))0, .ccb_setup_cbfn = & bnad_cb_ccb_setup, .ccb_destroy_cbfn = & bnad_cb_ccb_destroy, .rx_stall_cbfn = & bnad_cb_rx_stall, .rx_cleanup_cbfn = & bnad_cb_rx_cleanup, .rx_post_cbfn = & bnad_cb_rx_post};
  
#line 2214 
  rx_info->rx_id = rx_id;
  
#line 2217 
  bnad_init_rx_config(bnad,rx_config);
  
#line 2220 
  ldv___ldv_spin_lock_149(& bnad->bna_lock);
  
#line 2221 
  bna_rx_res_req(rx_config,res_info);
  
#line 2222 
  ldv_spin_unlock_irqrestore_150(& bnad->bna_lock,flags);
  
#line 2225 
  (res_info + 3U)->res_type = BNA_RES_T_MEM;
  
#line 2225 
  (res_info + 3U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 2225 
  (res_info + 3U)->res_u.mem_info.num = (unsigned int)rx_config->num_paths;
  
#line 2225 
  (res_info + 3U)->res_u.mem_info.len = rx_config->q0_depth * 40U + 64U;
  
#line 2231 
  if (rx_config->rxp_type != (unsigned int)BNA_RXP_SINGLE) {
    
#line 2232 
    (res_info + 2U)->res_type = BNA_RES_T_MEM;
    
#line 2232 
    (res_info + 2U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
    
#line 2232 
    (res_info + 2U)->res_u.mem_info.num = (unsigned int)rx_config->num_paths;
    
#line 2232 
    (res_info + 2U)->res_u.mem_info.len = rx_config->q1_depth * 40U + 64U;
  }
  else ;
  
#line 2239 
  err = bnad_rx_res_alloc(bnad,res_info,rx_id);
  
#line 2240 
  if (err != 0) {
    
#line 2241 
    __retres = err;
    
#line 2241 
    goto return_label;
  }
  else ;
  
#line 2243 
  bnad_rx_ctrl_init(bnad,rx_id);
  
#line 2246 
  ldv___ldv_spin_lock_151(& bnad->bna_lock);
  
#line 2247 
  rx = bna_rx_create(& bnad->bna,bnad,rx_config,& rx_cbfn,res_info,(void *)rx_info);
  
#line 2249 
  if (rx == (struct bna_rx *)0) {
    
#line 2250 
    err = -12;
    
#line 2251 
    ldv_spin_unlock_irqrestore_152(& bnad->bna_lock,flags);
    
#line 2252 
    goto err_return;
  }
  else ;
  
#line 2254 
  rx_info->rx = rx;
  
#line 2255 
  ldv_spin_unlock_irqrestore_153(& bnad->bna_lock,flags);
  {
    struct lock_class_key __key;
    
#line 2257 
    __init_work(& rx_info->rx_cleanup_work,0);
    
#line 2257 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2257 
    rx_info->rx_cleanup_work.data = __constr_expr_38;
    
#line 2257 
    lockdep_init_map(& rx_info->rx_cleanup_work.lockdep_map,"(&rx_info->rx_cleanup_work)",& __key,0);
    
#line 2257 
    INIT_LIST_HEAD(& rx_info->rx_cleanup_work.entry);
    
#line 2257 
    rx_info->rx_cleanup_work.func = (void (*)(struct work_struct *))(& bnad_rx_cleanup);
  }
  
#line 2264 
  bnad_napi_add(bnad,rx_id);
  
#line 2267 
  if (intr_info->intr_type == (unsigned int)BNA_INTR_T_MSIX) {
    
#line 2268 
    err = bnad_rx_msix_register(bnad,rx_info,rx_id,rx_config->num_paths);
    
#line 2270 
    if (err != 0) 
#line 2271 
                  goto err_return; else ;
  }
  else ;
  
#line 2274 
  ldv___ldv_spin_lock_154(& bnad->bna_lock);
  
#line 2275 
  if (rx_id == 0U) {
    
#line 2277 
    if ((bnad->cfg_flags & 1U) != 0U) 
#line 2278 
                                      bna_rx_dim_reconfig(& bnad->bna,(u32 const (*)[2U])(& bna_napi_dim_vector)); else ;
    
#line 2281 
    bna_rx_vlanfilter_enable(rx);
    
#line 2284 
    bnad_dim_timer_start(bnad);
  }
  else ;
  
#line 2287 
  bna_rx_enable(rx);
  
#line 2288 
  ldv_spin_unlock_irqrestore_155(& bnad->bna_lock,flags);
  
#line 2290 
  __retres = 0;
  
#line 2290 
  goto return_label;
  err_return: 
#line 2292 
  ;
  
#line 2293 
  bnad_destroy_rx(bnad,rx_id);
  
#line 2294 
  __retres = err;
  return_label: 
#line 2294 
                return __retres;
}


#line 2299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_tx_coalescing_timeo_set(struct bnad *bnad)
{
  struct bnad_tx_info *tx_info;
  
#line 2303 
  tx_info = & bnad->tx_info[0];
  
#line 2304 
  if (tx_info->tx == (struct bna_tx *)0) 
#line 2305 
                                         goto return_label; else ;
  
#line 2307 
  bna_tx_coalescing_timeo_set(tx_info->tx,(int)bnad->tx_coalescing_timeo);
  return_label: 
#line 2308 
                return;
}


#line 2312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_rx_coalescing_timeo_set(struct bnad *bnad)
{
  struct bnad_rx_info *rx_info;
  int i;
  
#line 2317 
  i = 0;
  
#line 2317 
  goto ldv_60261;
  ldv_60260: 
#line 2318 
  ;
  
#line 2318 
  rx_info = & bnad->rx_info[i];
  
#line 2319 
  if (rx_info->rx == (struct bna_rx *)0) 
#line 2320 
                                         goto ldv_60259; else ;
  
#line 2321 
  bna_rx_coalescing_timeo_set(rx_info->rx,(int)bnad->rx_coalescing_timeo);
  ldv_60259: 
#line 2323 
  ;
  
#line 2317 
  i += 1;
  ldv_60261: 
#line 2318 
  ;
  
#line 2317 
  if (bnad->num_rx > (unsigned int)i) 
#line 2319 
                                      goto ldv_60260; else 
#line 2322 
                                                           goto ldv_60262;
  ldv_60262: 
#line 2323 
  ;
  
#line 2324 
  return;
}


#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
int bnad_mac_addr_set_locked(struct bnad *bnad, u8 const *mac_addr)
{
  int __retres;
  int ret;
  int tmp_0;
  bool tmp;
  enum bna_cb_status tmp_1;
  
#line 2334 
  tmp = is_valid_ether_addr(mac_addr);
  
#line 2334 
  if (tmp) 
#line 2334 
           tmp_0 = 0; else 
#line 2334 
                           tmp_0 = 1;
  
#line 2334 
  if (tmp_0) {
    
#line 2335 
    __retres = -99;
    
#line 2335 
    goto return_label;
  }
  else ;
  
#line 2338 
  if (bnad->rx_info[0].rx == (struct bna_rx *)0) {
    
#line 2339 
    __retres = 0;
    
#line 2339 
    goto return_label;
  }
  else ;
  
#line 2341 
  tmp_1 = bna_rx_ucast_set(bnad->rx_info[0].rx,mac_addr);
  
#line 2341 
  ret = (int)tmp_1;
  
#line 2342 
  if (ret != 0) {
    
#line 2343 
    __retres = -99;
    
#line 2343 
    goto return_label;
  }
  else ;
  
#line 2345 
  __retres = 0;
  return_label: 
#line 2345 
                return __retres;
}


#line 2350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
int bnad_enable_default_bcast(struct bnad *bnad)
{
  int __retres;
  int ret;
  unsigned long flags;
  enum bna_cb_status tmp;
  
#line 2352 
  struct bnad_rx_info *rx_info = & bnad->rx_info[0];
  
#line 2356 
  init_completion(& bnad->bnad_completions.mcast_comp);
  
#line 2358 
  ldv___ldv_spin_lock_156(& bnad->bna_lock);
  
#line 2359 
  tmp = bna_rx_mcast_add(rx_info->rx,(u8 const *)(& bnad_bcast_addr),& bnad_cb_rx_mcast_add);
  
#line 2359 
  ret = (int)tmp;
  
#line 2361 
  ldv_spin_unlock_irqrestore_157(& bnad->bna_lock,flags);
  
#line 2363 
  if (ret == 0) 
#line 2364 
                wait_for_completion(& bnad->bnad_completions.mcast_comp);
  else {
    
#line 2366 
    __retres = -19;
    
#line 2366 
    goto return_label;
  }
  
#line 2368 
  if ((unsigned int)bnad->bnad_completions.mcast_comp_status != 0U) {
    
#line 2369 
    __retres = -19;
    
#line 2369 
    goto return_label;
  }
  else ;
  
#line 2371 
  __retres = 0;
  return_label: 
#line 2371 
                return __retres;
}


#line 2376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_restore_vlans(struct bnad *bnad, u32 rx_id)
{
  u16 vid;
  unsigned long flags;
  unsigned long tmp;
  unsigned long tmp_0;
  
#line 2381 
  tmp = find_first_bit((unsigned long const *)(& bnad->active_vlans),4096UL);
  
#line 2381 
  vid = (unsigned short)tmp;
  
#line 2381 
  goto ldv_60281;
  ldv_60280: 
#line 2382 
  ;
  
#line 2382 
  ldv___ldv_spin_lock_158(& bnad->bna_lock);
  
#line 2383 
  bna_rx_vlan_add(bnad->rx_info[rx_id].rx,(int)vid);
  
#line 2384 
  ldv_spin_unlock_irqrestore_159(& bnad->bna_lock,flags);
  
#line 2381 
  tmp_0 = find_next_bit((unsigned long const *)(& bnad->active_vlans),4096UL,(unsigned long)((int)vid + 1));
  
#line 2381 
  vid = (unsigned short)tmp_0;
  ldv_60281: 
#line 2382 
  ;
  
#line 2381 
  if ((unsigned int)vid <= 4095U) 
#line 2383 
                                  goto ldv_60280; else 
#line 2386 
                                                       goto ldv_60282;
  ldv_60282: 
#line 2387 
  ;
  
#line 2388 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_netdev_qstats_fill(struct bnad *bnad, struct rtnl_link_stats64 *stats)
{
  int i;
  int j;
  
#line 2394 
  i = 0;
  
#line 2394 
  goto ldv_60293;
  ldv_60292: 
#line 2395 
  ;
  
#line 2395 
  j = 0;
  
#line 2395 
  goto ldv_60290;
  ldv_60289: 
#line 2396 
  ;
  
#line 2396 
  if (bnad->rx_info[i].rx_ctrl[j].ccb != (struct bna_ccb *)0) {
    
#line 2397 
    stats->rx_packets += (((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0])->rxq)->rx_packets;
    
#line 2399 
    stats->rx_bytes += (((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[0])->rxq)->rx_bytes;
    
#line 2401 
    if ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1] != (struct bna_rcb *)0 && ((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1])->rxq != (struct bna_rxq *)0) {
      
#line 2404 
      stats->rx_packets += (((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1])->rxq)->rx_packets;
      
#line 2407 
      stats->rx_bytes += (((bnad->rx_info[i].rx_ctrl[j].ccb)->rcb[1])->rxq)->rx_bytes;
    }
    else ;
  }
  else ;
  
#line 2395 
  j += 1;
  ldv_60290: 
#line 2396 
  ;
  
#line 2395 
  if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 2397 
                                              goto ldv_60289; else 
#line 2400 
                                                                   goto ldv_60291;
  ldv_60291: 
#line 2401 
  ;
  
#line 2394 
  i += 1;
  ldv_60293: 
#line 2395 
  ;
  
#line 2394 
  if (bnad->num_rx > (unsigned int)i) 
#line 2396 
                                      goto ldv_60292; else 
#line 2399 
                                                           goto ldv_60294;
  ldv_60294: 
#line 2400 
  ;
  
#line 2414 
  i = 0;
  
#line 2414 
  goto ldv_60299;
  ldv_60298: 
#line 2415 
  ;
  
#line 2415 
  j = 0;
  
#line 2415 
  goto ldv_60296;
  ldv_60295: 
#line 2416 
  ;
  
#line 2416 
  if (bnad->tx_info[i].tcb[j] != (struct bna_tcb *)0) {
    
#line 2417 
    stats->tx_packets += ((bnad->tx_info[i].tcb[j])->txq)->tx_packets;
    
#line 2419 
    stats->tx_bytes += ((bnad->tx_info[i].tcb[j])->txq)->tx_bytes;
  }
  else ;
  
#line 2415 
  j += 1;
  ldv_60296: 
#line 2416 
  ;
  
#line 2415 
  if (bnad->num_txq_per_tx > (unsigned int)j) 
#line 2417 
                                              goto ldv_60295; else 
#line 2420 
                                                                   goto ldv_60297;
  ldv_60297: 
#line 2421 
  ;
  
#line 2414 
  i += 1;
  ldv_60299: 
#line 2415 
  ;
  
#line 2414 
  if (bnad->num_tx > (unsigned int)i) 
#line 2416 
                                      goto ldv_60298; else 
#line 2419 
                                                           goto ldv_60300;
  ldv_60300: 
#line 2420 
  ;
  
#line 2421 
  return;
}


#line 2430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_netdev_hwstats_fill(struct bnad *bnad, struct rtnl_link_stats64 *stats)
{
  struct bfi_enet_stats_mac *mac_stats;
  u32 bmap_0;
  int i;
  
#line 2436 
  mac_stats = & (bnad->stats.bna_stats)->hw_stats.mac_stats;
  
#line 2437 
  stats->rx_errors = (((mac_stats->rx_fcs_error + mac_stats->rx_alignment_error) + mac_stats->rx_frame_length_error) + mac_stats->rx_code_error) + mac_stats->rx_undersize;
  
#line 2441 
  stats->tx_errors = mac_stats->tx_fcs_error + mac_stats->tx_undersize;
  
#line 2443 
  stats->rx_dropped = mac_stats->rx_drop;
  
#line 2444 
  stats->tx_dropped = mac_stats->tx_drop;
  
#line 2445 
  stats->multicast = mac_stats->rx_multicast;
  
#line 2446 
  stats->collisions = mac_stats->tx_total_collision;
  
#line 2448 
  stats->rx_length_errors = mac_stats->rx_frame_length_error;
  
#line 2452 
  stats->rx_crc_errors = mac_stats->rx_fcs_error;
  
#line 2453 
  stats->rx_frame_errors = mac_stats->rx_alignment_error;
  
#line 2455 
  bmap_0 = bnad->bna.rx_mod.rid_mask;
  
#line 2456 
  i = 0;
  
#line 2456 
  goto ldv_60310;
  ldv_60309: 
#line 2457 
  ;
  
#line 2457 
  if ((bmap_0 & 1U) != 0U) {
    
#line 2458 
    stats->rx_fifo_errors += (bnad->stats.bna_stats)->hw_stats.rxf_stats[i].frame_drops;
    
#line 2461 
    goto ldv_60308;
  }
  else ;
  
#line 2463 
  bmap_0 >>= 1;
  
#line 2456 
  i += 1;
  ldv_60310: 
#line 2457 
  ;
  
#line 2456 
  if (bmap_0 != 0U) 
#line 2458 
                    goto ldv_60309; else 
#line 2461 
                                         goto ldv_60308;
  ldv_60308: 
#line 2462 
  ;
  
#line 2463 
  return;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_mbox_irq_sync(struct bnad *bnad)
{
  u32 irq;
  unsigned long flags;
  
#line 2473 
  ldv___ldv_spin_lock_160(& bnad->bna_lock);
  
#line 2474 
  if ((bnad->cfg_flags & 16U) != 0U) 
#line 2475 
                                     irq = (bnad->msix_table)->vector; else 
                                                                    
#line 2477 
                                                                    irq = (bnad->pcidev)->irq;
  
#line 2478 
  ldv_spin_unlock_irqrestore_161(& bnad->bna_lock,flags);
  
#line 2480 
  synchronize_irq(irq);
  
#line 2481 
  return;
}


#line 2485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_tso_prepare(struct bnad *bnad, struct sk_buff *skb)
{
  int __retres;
  int err;
  __be16 tmp_5;
  
#line 2489 
  err = skb_cow_head(skb,0U);
  
#line 2490 
  if (err < 0) {
    
#line 2491 
    bnad->stats.drv_stats.tso_err += 1ULL;
    
#line 2492 
    __retres = err;
    
#line 2492 
    goto return_label;
  }
  else ;
  
#line 2499 
  tmp_5 = vlan_get_protocol(skb);
  
#line 2499 
  if ((unsigned int)tmp_5 == 8U) {
    struct tcphdr *tmp_0;
    __sum16 tmp_1;
    
#line 2500 
    struct iphdr *iph = ip_hdr((struct sk_buff const *)skb);
    
#line 2503 
    iph->tot_len = (unsigned short)0U;
    
#line 2504 
    iph->check = (unsigned short)0U;
    
#line 2506 
    tmp_0 = tcp_hdr((struct sk_buff const *)skb);
    
#line 2506 
    tmp_1 = csum_tcpudp_magic(iph->saddr,iph->daddr,(unsigned short)0,(unsigned short)6,0U);
    
#line 2506 
    tmp_0->check = (unsigned short)(~ ((int)tmp_1));
    
#line 2509 
    bnad->stats.drv_stats.tso4 += 1ULL;
  }
  else {
    struct tcphdr *tmp_3;
    __sum16 tmp_4;
    
#line 2511 
    struct ipv6hdr *ipv6h = ipv6_hdr((struct sk_buff const *)skb);
    
#line 2513 
    ipv6h->payload_len = (unsigned short)0U;
    
#line 2514 
    tmp_3 = tcp_hdr((struct sk_buff const *)skb);
    
#line 2514 
    tmp_4 = csum_ipv6_magic((struct in6_addr const *)(& ipv6h->saddr),(struct in6_addr const *)(& ipv6h->daddr),0U,(unsigned short)6,0U);
    
#line 2514 
    tmp_3->check = (unsigned short)(~ ((int)tmp_4));
    
#line 2517 
    bnad->stats.drv_stats.tso6 += 1ULL;
  }
  
#line 2520 
  __retres = 0;
  return_label: 
#line 2520 
                return __retres;
}


#line 2529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_q_num_init(struct bnad *bnad)
{
  int rxps;
  unsigned int tmp_1;
  {
    unsigned int tmp_0;
    
#line 2533 
    unsigned int _min1 = cpumask_weight(cpu_online_mask);
    
#line 2533 
    unsigned int _min2 = 16U;
    
#line 2533 
    if (_min1 < _min2) 
#line 2533 
                       tmp_0 = _min1; else 
#line 2533 
                                           tmp_0 = _min2;
    
#line 2533 
    tmp_1 = tmp_0;
  }
  
#line 2533 
  rxps = (int)tmp_1;
  
#line 2536 
  if ((bnad->cfg_flags & 16U) == 0U) 
#line 2537 
                                     rxps = 1; else ;
  
#line 2539 
  bnad->num_rx = 1U;
  
#line 2540 
  bnad->num_tx = 1U;
  
#line 2541 
  bnad->num_rxp_per_rx = (unsigned int)rxps;
  
#line 2542 
  bnad->num_txq_per_tx = 1U;
  
#line 2543 
  return;
}


#line 2552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_q_num_adjust(struct bnad *bnad, int msix_vectors, int temp)
{
  
#line 2554 
  bnad->num_txq_per_tx = 1U;
  
#line 2555 
  if ((bnad->num_tx * bnad->num_txq_per_tx + bnad_rxqs_per_cq) + 1U <= (unsigned int)msix_vectors && (bnad->cfg_flags & 16U) != 0U) 
    
#line 2558 
    bnad->num_rxp_per_rx = ((unsigned int)msix_vectors - bnad->num_tx * bnad->num_txq_per_tx) + 4294967295U; else 
                                                                    
#line 2562 
                                                                    bnad->num_rxp_per_rx = 1U;
  
#line 2563 
  return;
}


#line 2567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_ioceth_disable(struct bnad *bnad)
{
  unsigned long flags;
  unsigned long tmp;
  
#line 2570 
  int err = 0;
  
#line 2572 
  ldv___ldv_spin_lock_162(& bnad->bna_lock);
  
#line 2573 
  init_completion(& bnad->bnad_completions.ioc_comp);
  
#line 2574 
  bna_ioceth_disable(& bnad->bna.ioceth,(enum bna_cleanup_type)BNA_HARD_CLEANUP);
  
#line 2575 
  ldv_spin_unlock_irqrestore_163(& bnad->bna_lock,flags);
  
#line 2577 
  tmp = msecs_to_jiffies(10000U);
  
#line 2577 
  ;
  
#line 2577 
  wait_for_completion_timeout(& bnad->bnad_completions.ioc_comp,tmp);
  
#line 2580 
  err = (int)bnad->bnad_completions.ioc_comp_status;
  
#line 2581 
  return err;
}


#line 2585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_ioceth_enable(struct bnad *bnad)
{
  unsigned long flags;
  unsigned long tmp;
  
#line 2587 
  int err = 0;
  
#line 2590 
  ldv___ldv_spin_lock_164(& bnad->bna_lock);
  
#line 2591 
  init_completion(& bnad->bnad_completions.ioc_comp);
  
#line 2592 
  bnad->bnad_completions.ioc_comp_status = (unsigned char)7U;
  
#line 2593 
  bna_ioceth_enable(& bnad->bna.ioceth);
  
#line 2594 
  ldv_spin_unlock_irqrestore_165(& bnad->bna_lock,flags);
  
#line 2596 
  tmp = msecs_to_jiffies(10000U);
  
#line 2596 
  ;
  
#line 2596 
  wait_for_completion_timeout(& bnad->bnad_completions.ioc_comp,tmp);
  
#line 2599 
  err = (int)bnad->bnad_completions.ioc_comp_status;
  
#line 2601 
  return err;
}


#line 2606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_res_free(struct bnad *bnad, struct bna_res_info *res_info, u32 res_val_max)
{
  int i;
  
#line 2611 
  i = 0;
  
#line 2611 
  goto ldv_60352;
  ldv_60351: 
#line 2612 
  ;
  
#line 2612 
  bnad_mem_free(bnad,& (res_info + i)->res_u.mem_info);
  
#line 2611 
  i += 1;
  ldv_60352: 
#line 2612 
  ;
  
#line 2611 
  if ((unsigned int)i < res_val_max) 
#line 2613 
                                     goto ldv_60351; else 
#line 2616 
                                                          goto ldv_60353;
  ldv_60353: 
#line 2617 
  ;
  
#line 2618 
  return;
}


#line 2617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_res_alloc(struct bnad *bnad, struct bna_res_info *res_info, u32 res_val_max)
{
  int __retres;
  int i;
  int err;
  
#line 2622 
  i = 0;
  
#line 2622 
  goto ldv_60363;
  ldv_60362: 
#line 2623 
  ;
  
#line 2623 
  err = bnad_mem_alloc(bnad,& (res_info + i)->res_u.mem_info);
  
#line 2624 
  if (err != 0) 
#line 2625 
                goto err_return; else ;
  
#line 2622 
  i += 1;
  ldv_60363: 
#line 2623 
  ;
  
#line 2622 
  if ((unsigned int)i < res_val_max) 
#line 2624 
                                     goto ldv_60362; else 
#line 2627 
                                                          goto ldv_60364;
  ldv_60364: 
#line 2628 
  ;
  
#line 2627 
  __retres = 0;
  
#line 2627 
  goto return_label;
  err_return: 
#line 2629 
  ;
  
#line 2630 
  bnad_res_free(bnad,res_info,res_val_max);
  
#line 2631 
  __retres = err;
  return_label: 
#line 2631 
                return __retres;
}


#line 2636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_enable_msix(struct bnad *bnad)
{
  int i;
  int ret;
  unsigned long flags;
  
#line 2641 
  ldv___ldv_spin_lock_166(& bnad->bna_lock);
  
#line 2642 
  if ((bnad->cfg_flags & 16U) == 0U) {
    
#line 2643 
    ldv_spin_unlock_irqrestore_167(& bnad->bna_lock,flags);
    
#line 2644 
    goto return_label;
  }
  else ;
  
#line 2646 
  ldv_spin_unlock_irqrestore_168(& bnad->bna_lock,flags);
  
#line 2648 
  if (bnad->msix_table != (struct msix_entry *)0) 
#line 2649 
                                                  goto return_label; else ;
  
#line 2652 
  bnad->msix_table = (struct msix_entry *)kcalloc((unsigned long)bnad->msix_num,8UL,208U);
  
#line 2654 
  if (bnad->msix_table == (struct msix_entry *)0) 
#line 2655 
                                                  goto intx_mode; else ;
  
#line 2657 
  i = 0;
  
#line 2657 
  goto ldv_60373;
  ldv_60372: 
#line 2658 
  ;
  
#line 2658 
  (bnad->msix_table + i)->entry = (unsigned short)i;
  
#line 2657 
  i += 1;
  ldv_60373: 
#line 2658 
  ;
  
#line 2657 
  if (bnad->msix_num > (unsigned int)i) 
#line 2659 
                                        goto ldv_60372; else 
#line 2662 
                                                             goto ldv_60374;
  ldv_60374: 
#line 2663 
  ;
  
#line 2660 
  ret = pci_enable_msix_range(bnad->pcidev,bnad->msix_table,1,(int)bnad->msix_num);
  
#line 2662 
  if (ret < 0) 
#line 2663 
               goto intx_mode;
  else 
    
#line 2664 
    if (bnad->msix_num > (unsigned int)ret) {
      
#line 2665 
      dev_warn((struct device const *)(& (bnad->pcidev)->dev),"%d MSI-X vectors allocated < %d requested\n",ret,bnad->msix_num);
      
#line 2669 
      ldv___ldv_spin_lock_169(& bnad->bna_lock);
      
#line 2671 
      bnad_q_num_adjust(bnad,(ret + -1) / 2,(ret + -1) / 2);
      
#line 2673 
      ldv_spin_unlock_irqrestore_170(& bnad->bna_lock,flags);
      
#line 2675 
      bnad->msix_num = (bnad->num_tx * bnad->num_txq_per_tx + bnad->num_rx * bnad->num_rxp_per_rx) + 1U;
      
#line 2678 
      if (bnad->msix_num > (unsigned int)ret) {
        
#line 2679 
        pci_disable_msix(bnad->pcidev);
        
#line 2680 
        goto intx_mode;
      }
      else ;
    }
    else ;
  
#line 2684 
  pci_intx(bnad->pcidev,0);
  
#line 2686 
  goto return_label;
  intx_mode: 
#line 2688 
  ;
  
#line 2689 
  dev_warn((struct device const *)(& (bnad->pcidev)->dev),"MSI-X enable failed - operating in INTx mode\n");
  
#line 2692 
  kfree((void const *)bnad->msix_table);
  
#line 2693 
  bnad->msix_table = (struct msix_entry *)0;
  
#line 2694 
  bnad->msix_num = 0U;
  
#line 2695 
  ldv___ldv_spin_lock_171(& bnad->bna_lock);
  
#line 2696 
  bnad->cfg_flags &= 4294967279U;
  
#line 2697 
  bnad_q_num_init(bnad);
  
#line 2698 
  ldv_spin_unlock_irqrestore_172(& bnad->bna_lock,flags);
  return_label: 
#line 2699 
                return;
}


#line 2702  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_disable_msix(struct bnad *bnad)
{
  u32 cfg_flags;
  unsigned long flags;
  
#line 2707 
  ldv___ldv_spin_lock_173(& bnad->bna_lock);
  
#line 2708 
  cfg_flags = bnad->cfg_flags;
  
#line 2709 
  if ((bnad->cfg_flags & 16U) != 0U) 
#line 2710 
                                     bnad->cfg_flags &= 4294967279U; else ;
  
#line 2711 
  ldv_spin_unlock_irqrestore_174(& bnad->bna_lock,flags);
  
#line 2713 
  if ((cfg_flags & 16U) != 0U) {
    
#line 2714 
    pci_disable_msix(bnad->pcidev);
    
#line 2715 
    kfree((void const *)bnad->msix_table);
    
#line 2716 
    bnad->msix_table = (struct msix_entry *)0;
  }
  else ;
  
#line 2718 
  return;
}


#line 2722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_open(struct net_device *netdev)
{
  int __retres;
  int err;
  struct bna_pause_config pause_config;
  unsigned long flags;
  
#line 2725 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 2729 
  ldv_mutex_lock_175(& bnad->conf_mutex);
  
#line 2732 
  err = bnad_setup_tx(bnad,0U);
  
#line 2733 
  if (err != 0) 
#line 2734 
                goto err_return; else ;
  
#line 2737 
  err = bnad_setup_rx(bnad,0U);
  
#line 2738 
  if (err != 0) 
#line 2739 
                goto cleanup_tx; else ;
  
#line 2742 
  pause_config.tx_pause = BNA_STATUS_T_DISABLED;
  
#line 2743 
  pause_config.rx_pause = BNA_STATUS_T_DISABLED;
  
#line 2745 
  ldv___ldv_spin_lock_176(& bnad->bna_lock);
  
#line 2746 
  bna_enet_mtu_set(& bnad->bna.enet,(int)((bnad->netdev)->mtu + 22U),(void (*)(struct bnad *))0);
  
#line 2748 
  bna_enet_pause_config(& bnad->bna.enet,& pause_config);
  
#line 2749 
  bna_enet_enable(& bnad->bna.enet);
  
#line 2750 
  ldv_spin_unlock_irqrestore_177(& bnad->bna_lock,flags);
  
#line 2753 
  bnad_enable_default_bcast(bnad);
  
#line 2756 
  bnad_restore_vlans(bnad,0U);
  
#line 2759 
  ldv___ldv_spin_lock_178(& bnad->bna_lock);
  
#line 2760 
  bnad_mac_addr_set_locked(bnad,(u8 const *)netdev->dev_addr);
  
#line 2761 
  ldv_spin_unlock_irqrestore_179(& bnad->bna_lock,flags);
  
#line 2764 
  bnad_stats_timer_start(bnad);
  
#line 2766 
  ldv_mutex_unlock_180(& bnad->conf_mutex);
  
#line 2768 
  __retres = 0;
  
#line 2768 
  goto return_label;
  cleanup_tx: 
#line 2770 
  ;
  
#line 2771 
  bnad_destroy_tx(bnad,0U);
  err_return: 
#line 2773 
  ;
  
#line 2774 
  ldv_mutex_unlock_181(& bnad->conf_mutex);
  
#line 2775 
  __retres = err;
  return_label: 
#line 2775 
                return __retres;
}


#line 2779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_stop(struct net_device *netdev)
{
  int __retres;
  unsigned long flags;
  
#line 2781 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 2784 
  ldv_mutex_lock_182(& bnad->conf_mutex);
  
#line 2787 
  bnad_stats_timer_stop(bnad);
  
#line 2789 
  init_completion(& bnad->bnad_completions.enet_comp);
  
#line 2791 
  ldv___ldv_spin_lock_183(& bnad->bna_lock);
  
#line 2792 
  bna_enet_disable(& bnad->bna.enet,(enum bna_cleanup_type)BNA_HARD_CLEANUP,& bnad_cb_enet_disabled);
  
#line 2794 
  ldv_spin_unlock_irqrestore_184(& bnad->bna_lock,flags);
  
#line 2796 
  wait_for_completion(& bnad->bnad_completions.enet_comp);
  
#line 2798 
  bnad_destroy_tx(bnad,0U);
  
#line 2799 
  bnad_destroy_rx(bnad,0U);
  
#line 2802 
  bnad_mbox_irq_sync(bnad);
  
#line 2804 
  ldv_mutex_unlock_185(& bnad->conf_mutex);
  
#line 2806 
  __retres = 0;
  
#line 2806 
  return __retres;
}


#line 2812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_txq_wi_prepare(struct bnad *bnad, struct bna_tcb *tcb, struct sk_buff *skb, struct bna_txq_entry *txqent)
{
  int __retres;
  u32 gso_size;
  int tmp;
  bool tmp_21;
  
#line 2815 
  u16 flags = (unsigned short)0U;
  
#line 2817 
  u16 vlan_tag = (unsigned short)0U;
  
#line 2819 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 2820 
    vlan_tag = (unsigned short)((unsigned int)skb->vlan_tci & 61439U);
    
#line 2821 
    flags = (unsigned short)((unsigned int)flags | 24U);
  }
  else ;
  
#line 2823 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& bnad->run_flags));
  
#line 2823 
  if (tmp != 0) {
    
#line 2824 
    vlan_tag = (unsigned short)(((int)tcb->priority << 13) | ((int)vlan_tag & 8191));
    
#line 2826 
    flags = (unsigned short)((unsigned int)flags | 24U);
  }
  else ;
  
#line 2828 
  if (0 != 0) 
#line 2828 
              txqent->hdr.wi.vlan_tag = (unsigned short)(((int)vlan_tag << 8) | ((int)vlan_tag >> 8)); else 
                                                                    
#line 2828 
                                                                    txqent->hdr.wi.vlan_tag = __fswab16((unsigned short)((int)vlan_tag));
  
#line 2830 
  tmp_21 = skb_is_gso((struct sk_buff const *)skb);
  
#line 2830 
  if ((int)tmp_21 != 0) {
    unsigned char *tmp_1;
    int tmp_3;
    unsigned int tmp_4;
    int tmp_5;
    __u16 tmp_8;
    unsigned int tmp_6;
    int tmp_7;
    
#line 2831 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2831 
    gso_size = (unsigned int)((struct skb_shared_info *)tmp_1)->gso_size;
    
#line 2832 
    if ((long)((bnad->netdev)->mtu < gso_size) != 0L) {
      
#line 2833 
      bnad->stats.drv_stats.tx_skb_mss_too_long += 1ULL;
      
#line 2834 
      __retres = -22;
      
#line 2834 
      goto return_label;
    }
    else ;
    
#line 2836 
    tmp_3 = skb_transport_offset((struct sk_buff const *)skb);
    
#line 2836 
    tmp_4 = tcp_hdrlen((struct sk_buff const *)skb);
    
#line 2836 
    ;
    
#line 2836 
    if ((long)(((unsigned int)tmp_3 + gso_size) + tmp_4 >= skb->len) != 0L) {
      
#line 2838 
      txqent->hdr.wi.opcode = (unsigned short)516U;
      
#line 2839 
      txqent->hdr.wi.lso_mss = (unsigned short)0U;
      
#line 2840 
      bnad->stats.drv_stats.tx_skb_tso_too_short += 1ULL;
    }
    else {
      
#line 2842 
      txqent->hdr.wi.opcode = (unsigned short)772U;
      
#line 2843 
      if (0 != 0) 
#line 2843 
                  txqent->hdr.wi.lso_mss = (unsigned short)(((int)((unsigned short)gso_size) << 8) | ((int)((unsigned short)gso_size) >> 8)); else 
                                                                    
#line 2843 
                                                                    txqent->hdr.wi.lso_mss = __fswab16((unsigned short)((int)((unsigned short)gso_size)));
    }
    
#line 2846 
    tmp_5 = bnad_tso_prepare(bnad,skb);
    
#line 2846 
    if (tmp_5 != 0) {
      
#line 2847 
      bnad->stats.drv_stats.tx_skb_tso_prepare += 1ULL;
      
#line 2848 
      __retres = -22;
      
#line 2848 
      goto return_label;
    }
    else ;
    
#line 2851 
    flags = (unsigned short)((unsigned int)flags | 3U);
    
#line 2853 
    tmp_6 = tcp_hdrlen((struct sk_buff const *)skb);
    
#line 2853 
    tmp_7 = skb_transport_offset((struct sk_buff const *)skb);
    
#line 2853 
    tmp_8 = __fswab16((unsigned short)((int)((unsigned int)((int)((unsigned short)(tmp_6 >> 2)) << 10U) | ((unsigned int)((unsigned short)tmp_7) & 1023U))));
    
#line 2852 
    txqent->hdr.wi.l4_hdr_size_n_offset = tmp_8;
  }
  else {
    
#line 2856 
    txqent->hdr.wi.opcode = (unsigned short)516U;
    
#line 2857 
    txqent->hdr.wi.lso_mss = (unsigned short)0U;
    
#line 2859 
    if ((long)(skb->len > (bnad->netdev)->mtu + 18U) != 0L) {
      
#line 2860 
      bnad->stats.drv_stats.tx_skb_non_tso_too_long += 1ULL;
      
#line 2861 
      __retres = -22;
      
#line 2861 
      goto return_label;
    }
    else ;
    
#line 2864 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      
#line 2865 
      __be16 net_proto = vlan_get_protocol(skb);
      
#line 2866 
      u8 proto = (unsigned char)0U;
      
#line 2868 
      if ((unsigned int)net_proto == 8U) {
        struct iphdr *tmp_10;
        
#line 2869 
        tmp_10 = ip_hdr((struct sk_buff const *)skb);
        
#line 2869 
        proto = tmp_10->protocol;
      }
      else 
        
#line 2871 
        if ((unsigned int)net_proto == 56710U) {
          struct ipv6hdr *tmp_11;
          
#line 2873 
          tmp_11 = ipv6_hdr((struct sk_buff const *)skb);
          
#line 2873 
          proto = tmp_11->nexthdr;
        }
        else ;
      
#line 2876 
      if ((unsigned int)proto == 6U) {
        __u16 tmp_13;
        int tmp_12;
        unsigned int tmp_14;
        int tmp_15;
        unsigned int tmp_16;
        
#line 2877 
        flags = (unsigned short)((unsigned int)flags | 2U);
        
#line 2879 
        tmp_12 = skb_transport_offset((struct sk_buff const *)skb);
        
#line 2879 
        tmp_13 = __fswab16((unsigned short)((int)((unsigned short)tmp_12) & 1023));
        
#line 2878 
        txqent->hdr.wi.l4_hdr_size_n_offset = tmp_13;
        
#line 2882 
        bnad->stats.drv_stats.tcpcsum_offload += 1ULL;
        
#line 2884 
        tmp_14 = skb_headlen((struct sk_buff const *)skb);
        
#line 2884 
        tmp_15 = skb_transport_offset((struct sk_buff const *)skb);
        
#line 2884 
        tmp_16 = tcp_hdrlen((struct sk_buff const *)skb);
        
#line 2884 
        if ((long)(tmp_14 < (unsigned int)tmp_15 + tmp_16) != 0L) {
          
#line 2887 
          bnad->stats.drv_stats.tx_skb_tcp_hdr += 1ULL;
          
#line 2888 
          __retres = -22;
          
#line 2888 
          goto return_label;
        }
        else ;
      }
      else 
        
#line 2890 
        if ((unsigned int)proto == 17U) {
          __u16 tmp_18;
          int tmp_17;
          unsigned int tmp_19;
          int tmp_20;
          
#line 2891 
          flags = (unsigned short)((unsigned int)flags | 4U);
          
#line 2893 
          tmp_17 = skb_transport_offset((struct sk_buff const *)skb);
          
#line 2893 
          tmp_18 = __fswab16((unsigned short)((int)((unsigned short)tmp_17) & 1023));
          
#line 2892 
          txqent->hdr.wi.l4_hdr_size_n_offset = tmp_18;
          
#line 2896 
          bnad->stats.drv_stats.udpcsum_offload += 1ULL;
          
#line 2897 
          tmp_19 = skb_headlen((struct sk_buff const *)skb);
          
#line 2897 
          tmp_20 = skb_transport_offset((struct sk_buff const *)skb);
          
#line 2897 
          if ((long)((unsigned long)tmp_19 < (unsigned long)tmp_20 + 8UL) != 0L) {
            
#line 2900 
            bnad->stats.drv_stats.tx_skb_udp_hdr += 1ULL;
            
#line 2901 
            __retres = -22;
            
#line 2901 
            goto return_label;
          }
          else ;
        }
        else {
          
#line 2905 
          bnad->stats.drv_stats.tx_skb_csum_err += 1ULL;
          
#line 2906 
          __retres = -22;
          
#line 2906 
          goto return_label;
        }
    }
    else 
#line 2909 
         txqent->hdr.wi.l4_hdr_size_n_offset = (unsigned short)0U;
  }
  
#line 2912 
  if (0 != 0) 
#line 2912 
              txqent->hdr.wi.flags = (unsigned short)(((int)flags << 8) | ((int)flags >> 8)); else 
                                                                    
#line 2912 
                                                                    txqent->hdr.wi.flags = __fswab16((unsigned short)((int)flags));
  
#line 2913 
  if (0 != 0) 
#line 2913 
              txqent->hdr.wi.frame_length = (((skb->len << 24) | ((skb->len << 8) & 16711680U)) | ((skb->len >> 8) & 65280U)) | (skb->len >> 24); else 
                                                                    
#line 2913 
                                                                    txqent->hdr.wi.frame_length = __fswab32(skb->len);
  
#line 2915 
  __retres = 0;
  return_label: 
#line 2915 
                return __retres;
}


#line 2923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static netdev_tx_t bnad_start_xmit(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  struct bnad_tx_unmap *unmap_q;
  struct bnad_tx_unmap *unmap;
  struct bnad_tx_unmap *head_unmap;
  u32 prod;
  u32 q_depth;
  u32 vect_id;
  u32 wis;
  u32 vectors;
  u32 len;
  int i;
  dma_addr_t dma_addr;
  struct bna_txq_entry *txqent;
  unsigned char *tmp_1;
  int tmp_4;
  int tmp_13;
  
#line 2925 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 2926 
  u32 txq_id = 0U;
  
#line 2927 
  struct bna_tcb *tcb = (struct bna_tcb *)0;
  
#line 2935 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 2939 
  if ((long)(skb->len <= 14U) != 0L) {
    
#line 2940 
    dev_kfree_skb_any(skb);
    
#line 2941 
    bnad->stats.drv_stats.tx_skb_too_short += 1ULL;
    
#line 2942 
    __retres = NETDEV_TX_OK;
    
#line 2942 
    goto return_label;
  }
  else ;
  
#line 2944 
  if ((long)(len > 65535U) != 0L) {
    
#line 2945 
    dev_kfree_skb_any(skb);
    
#line 2946 
    bnad->stats.drv_stats.tx_skb_headlen_zero += 1ULL;
    
#line 2947 
    __retres = NETDEV_TX_OK;
    
#line 2947 
    goto return_label;
  }
  else ;
  
#line 2949 
  if ((long)(len == 0U) != 0L) {
    
#line 2950 
    dev_kfree_skb_any(skb);
    
#line 2951 
    bnad->stats.drv_stats.tx_skb_headlen_zero += 1ULL;
    
#line 2952 
    __retres = NETDEV_TX_OK;
    
#line 2952 
    goto return_label;
  }
  else ;
  
#line 2955 
  tcb = bnad->tx_info[0].tcb[txq_id];
  
#line 2961 
  if ((long)(tcb == (struct bna_tcb *)0) != 0L) 
#line 2961 
                                                goto _LOR;
  else {
    int tmp_0;
    
#line 2961 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
    
#line 2961 
    if ((long)(tmp_0 == 0) != 0L) {
      _LOR: {
              
#line 2962 
              dev_kfree_skb_any(skb);
              
#line 2963 
              bnad->stats.drv_stats.tx_skb_stopping += 1ULL;
              
#line 2964 
              __retres = NETDEV_TX_OK;
              
#line 2964 
              goto return_label;
            }
    }
    else ;
  }
  
#line 2967 
  q_depth = tcb->q_depth;
  
#line 2968 
  prod = tcb->producer_index;
  
#line 2969 
  unmap_q = (struct bnad_tx_unmap *)tcb->unmap_q;
  
#line 2971 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2971 
  vectors = (unsigned int)((int)((struct skb_shared_info *)tmp_1)->nr_frags + 1);
  
#line 2972 
  wis = (vectors + 3U) >> 2;
  
#line 2974 
  if ((long)(vectors > 255U) != 0L) {
    
#line 2975 
    dev_kfree_skb_any(skb);
    
#line 2976 
    bnad->stats.drv_stats.tx_skb_max_vectors += 1ULL;
    
#line 2977 
    __retres = NETDEV_TX_OK;
    
#line 2977 
    goto return_label;
  }
  else ;
  
#line 2981 
  if ((long)((((tcb->consumer_index - tcb->producer_index) + 4294967295U) & (q_depth + 4294967295U)) < wis) != 0L) {
    
#line 2982 
    if (*(tcb->hw_consumer_index) != tcb->consumer_index) {
      int tmp_3;
      
#line 2982 
      tmp_3 = test_and_set_bit(0L,(unsigned long volatile *)(& tcb->flags));
      
#line 2982 
      if (tmp_3 == 0) {
        u32 sent;
        int tmp_2;
        
#line 2985 
        sent = bnad_txcmpl_process(bnad,tcb);
        
#line 2986 
        tmp_2 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
        
#line 2986 
        if ((long)(tmp_2 != 0) != 0L) 
#line 2987 
                                      writel((tcb->i_dbell)->doorbell_ack | sent,(void volatile *)(tcb->i_dbell)->doorbell_addr); else ;
        
#line 2988 
        ldv_inline_asm();
        
#line 2989 
        clear_bit(0L,(unsigned long volatile *)(& tcb->flags));
      }
      else 
#line 2982 
           goto _LAND;
    }
    else {
      _LAND: {
               
#line 2991 
               netif_stop_queue(netdev);
               
#line 2992 
               bnad->stats.drv_stats.netif_queue_stop += 1ULL;
             }
    }
    
#line 2994 
    ldv_inline_asm();
    
#line 3001 
    if ((long)((((tcb->consumer_index - tcb->producer_index) + 4294967295U) & (q_depth + 4294967295U)) < wis) != 0L) {
      
#line 3002 
      bnad->stats.drv_stats.netif_queue_stop += 1ULL;
      
#line 3003 
      __retres = NETDEV_TX_BUSY;
      
#line 3003 
      goto return_label;
    }
    else {
      
#line 3005 
      netif_wake_queue(netdev);
      
#line 3006 
      bnad->stats.drv_stats.netif_queue_wakeup += 1ULL;
    }
  }
  else ;
  
#line 3010 
  txqent = (struct bna_txq_entry *)tcb->sw_q + prod;
  
#line 3011 
  head_unmap = unmap_q + prod;
  
#line 3014 
  tmp_4 = bnad_txq_wi_prepare(bnad,tcb,skb,txqent);
  
#line 3014 
  if (tmp_4 != 0) {
    
#line 3015 
    dev_kfree_skb_any(skb);
    
#line 3016 
    __retres = NETDEV_TX_OK;
    
#line 3016 
    goto return_label;
  }
  else ;
  
#line 3018 
  txqent->hdr.wi.reserved = (unsigned char)0U;
  
#line 3019 
  txqent->hdr.wi.num_vectors = (unsigned char)vectors;
  
#line 3021 
  head_unmap->skb = skb;
  
#line 3022 
  head_unmap->nvecs = 0U;
  
#line 3025 
  unmap = head_unmap;
  
#line 3026 
  dma_addr = dma_map_single_attrs(& (bnad->pcidev)->dev,(void *)skb->data,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  {
    unsigned long long tmp_6;
    
#line 3028 
    if (0 != 0) 
#line 3028 
                tmp_6 = (((((((dma_addr << 56) | ((dma_addr << 40) & 71776119061217280ULL)) | ((dma_addr << 24) & 280375465082880ULL)) | ((dma_addr << 8) & 1095216660480ULL)) | ((dma_addr >> 8) & 4278190080ULL)) | ((dma_addr >> 24) & 16711680ULL)) | ((dma_addr >> 40) & 65280ULL)) | (dma_addr >> 56); else 
                                                                    
#line 3028 
                                                                    tmp_6 = __fswab64(dma_addr);
    
#line 3028 
    u64 tmp_addr = tmp_6;
    
#line 3028 
    txqent->vector[0].host_addr.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
    
#line 3028 
    txqent->vector[0].host_addr.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
  }
  
#line 3029 
  if (0 != 0) 
#line 3029 
              txqent->vector[0].length = (unsigned short)(((int)((unsigned short)len) << 8) | ((int)((unsigned short)len) >> 8)); else 
                                                                    
#line 3029 
                                                                    txqent->vector[0].length = __fswab16((unsigned short)((int)((unsigned short)len)));
  
#line 3030 
  unmap->vectors[0].dma_addr = dma_addr;
  
#line 3031 
  head_unmap->nvecs += 1U;
  
#line 3033 
  i = 0;
  
#line 3033 
  vect_id = 0U;
  
#line 3033 
  goto ldv_60430;
  ldv_60429: 
#line 3034 
  ;
  {
    unsigned char *tmp_8;
    
#line 3034 
    tmp_8 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 3034 
    struct skb_frag_struct const *frag = (struct skb_frag_struct const *)(& ((struct skb_shared_info *)tmp_8)->frags[i]);
    
#line 3035 
    u32 size = skb_frag_size(frag);
    
#line 3037 
    if ((long)(size == 0U) != 0L) {
      
#line 3039 
      bnad_tx_buff_unmap(bnad,unmap_q,q_depth,tcb->producer_index);
      
#line 3041 
      dev_kfree_skb_any(skb);
      
#line 3042 
      bnad->stats.drv_stats.tx_skb_frag_zero += 1ULL;
      
#line 3043 
      __retres = NETDEV_TX_OK;
      
#line 3043 
      goto return_label;
    }
    else ;
    
#line 3046 
    len += size;
    
#line 3048 
    vect_id += 1U;
    
#line 3049 
    if (vect_id == 4U) {
      
#line 3050 
      vect_id = 0U;
      
#line 3051 
      prod = (prod + 1U) & (q_depth + 4294967295U);
      
#line 3052 
      txqent = (struct bna_txq_entry *)tcb->sw_q + prod;
      
#line 3053 
      txqent->hdr.wi_ext.opcode = (unsigned short)1025U;
      
#line 3054 
      unmap = unmap_q + prod;
    }
    else ;
    
#line 3057 
    dma_addr = skb_frag_dma_map(& (bnad->pcidev)->dev,frag,0UL,(unsigned long)size,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 3059 
    unmap->vectors[vect_id].dma_len = size;
    {
      unsigned long long tmp_11;
      
#line 3060 
      if (0 != 0) 
#line 3060 
                  tmp_11 = (((((((dma_addr << 56) | ((dma_addr << 40) & 71776119061217280ULL)) | ((dma_addr << 24) & 280375465082880ULL)) | ((dma_addr << 8) & 1095216660480ULL)) | ((dma_addr >> 8) & 4278190080ULL)) | ((dma_addr >> 24) & 16711680ULL)) | ((dma_addr >> 40) & 65280ULL)) | (dma_addr >> 56); else 
                                                                    
#line 3060 
                                                                    tmp_11 = __fswab64(dma_addr);
      
#line 3060 
      u64 tmp_addr_0 = tmp_11;
      
#line 3060 
      txqent->vector[vect_id].host_addr.msb = ((struct bna_dma_addr *)(& tmp_addr_0))->msb;
      
#line 3060 
      txqent->vector[vect_id].host_addr.lsb = ((struct bna_dma_addr *)(& tmp_addr_0))->lsb;
    }
    
#line 3061 
    if (0 != 0) 
#line 3061 
                txqent->vector[vect_id].length = (unsigned short)(((int)((unsigned short)size) << 8) | ((int)((unsigned short)size) >> 8)); else 
                                                                    
#line 3061 
                                                                    txqent->vector[vect_id].length = __fswab16((unsigned short)((int)((unsigned short)size)));
    
#line 3062 
    unmap->vectors[vect_id].dma_addr = dma_addr;
    
#line 3064 
    head_unmap->nvecs += 1U;
  }
  
#line 3033 
  i += 1;
  ldv_60430: 
#line 3034 
  ;
  
#line 3033 
  if (vectors + 4294967295U > (unsigned int)i) 
#line 3035 
                                               goto ldv_60429; else 
#line 3038 
                                                                    goto ldv_60431;
  ldv_60431: 
#line 3039 
  ;
  
#line 3067 
  if ((long)(skb->len != len) != 0L) {
    
#line 3069 
    bnad_tx_buff_unmap(bnad,unmap_q,q_depth,tcb->producer_index);
    
#line 3070 
    dev_kfree_skb_any(skb);
    
#line 3071 
    bnad->stats.drv_stats.tx_skb_len_mismatch += 1ULL;
    
#line 3072 
    __retres = NETDEV_TX_OK;
    
#line 3072 
    goto return_label;
  }
  else ;
  
#line 3075 
  prod = (prod + 1U) & (q_depth + 4294967295U);
  
#line 3076 
  tcb->producer_index = prod;
  
#line 3077 
  ldv_inline_asm();
  
#line 3080 
  tmp_13 = constant_test_bit(1L,(unsigned long const volatile *)(& tcb->flags));
  
#line 3080 
  if ((long)(tmp_13 == 0) != 0L) {
    
#line 3081 
    __retres = NETDEV_TX_OK;
    
#line 3081 
    goto return_label;
  }
  else ;
  
#line 3083 
  skb_tx_timestamp(skb);
  
#line 3085 
  writel(tcb->producer_index | 2147483648U,(void volatile *)tcb->q_dbell);
  
#line 3086 
  ldv_inline_asm();
  
#line 3088 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 3088 
                return __retres;
}


#line 3096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct rtnl_link_stats64 *bnad_get_stats64(struct net_device *netdev, struct rtnl_link_stats64 *stats)
{
  unsigned long flags;
  
#line 3098 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3101 
  ldv___ldv_spin_lock_186(& bnad->bna_lock);
  
#line 3103 
  bnad_netdev_qstats_fill(bnad,stats);
  
#line 3104 
  bnad_netdev_hwstats_fill(bnad,stats);
  
#line 3106 
  ldv_spin_unlock_irqrestore_187(& bnad->bna_lock,flags);
  
#line 3108 
  return stats;
}


#line 3112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_set_rx_ucast_fltr(struct bnad *bnad)
{
  enum bna_cb_status ret;
  u8 *mac_list;
  struct netdev_hw_addr *ha;
  int entry;
  struct netdev_hw_addr *tmp_0;
  struct netdev_hw_addr *tmp_1;
  
#line 3114 
  struct net_device *netdev = bnad->netdev;
  
#line 3115 
  int uc_count = netdev->uc.count;
  
#line 3121 
  if ((bnad->netdev)->uc.count == 0) {
    
#line 3122 
    bna_rx_ucast_listset(bnad->rx_info[0].rx,0,(u8 const *)0U);
    
#line 3123 
    goto return_label;
  }
  else ;
  
#line 3126 
  if (bnad->bna.ioceth.attr.num_ucmac < uc_count) 
#line 3127 
                                                  goto mode_default; else ;
  
#line 3129 
  mac_list = (u8 *)kzalloc_0((unsigned long)(uc_count * 6),32U);
  
#line 3130 
  if (mac_list == (u8 *)0U) 
#line 3131 
                            goto mode_default; else ;
  
#line 3133 
  entry = 0;
  {
    
#line 3134 
    struct list_head const *__mptr = (struct list_head const *)netdev->uc.list.next;
    
#line 3134 
    tmp_0 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 3134 
  ha = tmp_0;
  
#line 3134 
  goto ldv_60453;
  ldv_60452: 
#line 3135 
  ;
  
#line 3135 
  ether_addr_copy(mac_list + entry * 6,(u8 const *)(& ha->addr[0]));
  
#line 3136 
  entry += 1;
  {
    
#line 3134 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 3134 
    tmp_1 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 3134 
  ha = tmp_1;
  ldv_60453: 
#line 3136 
  ;
  
#line 3134 
  if (& ha->list != & netdev->uc.list) 
#line 3136 
                                       goto ldv_60452; else 
#line 3139 
                                                            goto ldv_60454;
  ldv_60454: 
#line 3140 
  ;
  
#line 3139 
  ret = bna_rx_ucast_listset(bnad->rx_info[0].rx,entry,(u8 const *)mac_list);
  
#line 3140 
  kfree((void const *)mac_list);
  
#line 3142 
  if (ret != (unsigned int)BNA_CB_SUCCESS) 
#line 3143 
                                           goto mode_default; else ;
  
#line 3145 
  goto return_label;
  mode_default: 
#line 3148 
  ;
  
#line 3149 
  bnad->cfg_flags |= 8U;
  
#line 3150 
  bna_rx_ucast_listset(bnad->rx_info[0].rx,0,(u8 const *)0U);
  return_label: 
#line 3151 
                return;
}


#line 3154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_set_rx_mcast_fltr(struct bnad *bnad)
{
  enum bna_cb_status ret;
  u8 *mac_list;
  
#line 3156 
  struct net_device *netdev = bnad->netdev;
  
#line 3157 
  int mc_count = netdev->mc.count;
  
#line 3161 
  if ((netdev->flags & 512U) != 0U) 
#line 3162 
                                    goto mode_allmulti; else ;
  
#line 3164 
  if (netdev->mc.count == 0) 
#line 3165 
                             goto return_label; else ;
  
#line 3167 
  if (bnad->bna.ioceth.attr.num_mcmac < mc_count) 
#line 3168 
                                                  goto mode_allmulti; else ;
  
#line 3170 
  mac_list = (u8 *)kzalloc_0((unsigned long)((mc_count + 1) * 6),32U);
  
#line 3172 
  if (mac_list == (u8 *)0U) 
#line 3173 
                            goto mode_allmulti; else ;
  
#line 3175 
  ether_addr_copy(mac_list,&(bnad_bcast_addr[0]));
  
#line 3178 
  bnad_netdev_mc_list_get(netdev,mac_list);
  
#line 3179 
  ret = bna_rx_mcast_listset(bnad->rx_info[0].rx,mc_count + 1,(u8 const *)mac_list);
  
#line 3180 
  kfree((void const *)mac_list);
  
#line 3182 
  if (ret != (unsigned int)BNA_CB_SUCCESS) 
#line 3183 
                                           goto mode_allmulti; else ;
  
#line 3185 
  goto return_label;
  mode_allmulti: 
#line 3187 
  ;
  
#line 3188 
  bnad->cfg_flags |= 4U;
  
#line 3189 
  bna_rx_mcast_delall(bnad->rx_info[0].rx);
  return_label: 
#line 3190 
                return;
}


#line 3193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
void bnad_set_rx_mode(struct net_device *netdev)
{
  enum bna_rxmode new_mode;
  enum bna_rxmode mode_mask;
  unsigned long flags;
  
#line 3195 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3199 
  ldv___ldv_spin_lock_188(& bnad->bna_lock);
  
#line 3201 
  if (bnad->rx_info[0].rx == (struct bna_rx *)0) {
    
#line 3202 
    ldv_spin_unlock_irqrestore_189(& bnad->bna_lock,flags);
    
#line 3203 
    goto return_label;
  }
  else ;
  
#line 3207 
  bnad->cfg_flags &= 4294967281U;
  
#line 3210 
  new_mode = (enum bna_rxmode)0;
  
#line 3211 
  if ((netdev->flags & 256U) != 0U) {
    
#line 3212 
    new_mode = (enum bna_rxmode)((unsigned int)new_mode | 1U);
    
#line 3213 
    bnad->cfg_flags |= 2U;
  }
  else {
    
#line 3215 
    bnad_set_rx_mcast_fltr(bnad);
    
#line 3217 
    if ((bnad->cfg_flags & 4U) != 0U) 
#line 3218 
                                      new_mode = (enum bna_rxmode)((unsigned int)new_mode | 4U); else ;
    
#line 3220 
    bnad_set_rx_ucast_fltr(bnad);
    
#line 3222 
    if ((bnad->cfg_flags & 8U) != 0U) 
#line 3223 
                                      new_mode = (enum bna_rxmode)((unsigned int)new_mode | 2U); else ;
  }
  
#line 3226 
  mode_mask = (enum bna_rxmode)7;
  
#line 3228 
  bna_rx_mode_set(bnad->rx_info[0].rx,new_mode,mode_mask);
  
#line 3230 
  ldv_spin_unlock_irqrestore_190(& bnad->bna_lock,flags);
  return_label: 
#line 3231 
                return;
}


#line 3239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_set_mac_address(struct net_device *netdev, void *addr)
{
  int err;
  unsigned long flags;
  
#line 3242 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3243 
  struct sockaddr *sa = (struct sockaddr *)addr;
  
#line 3246 
  ldv___ldv_spin_lock_191(& bnad->bna_lock);
  
#line 3248 
  err = bnad_mac_addr_set_locked(bnad,(u8 const *)(& sa->sa_data));
  
#line 3249 
  if (err == 0) 
#line 3250 
                ether_addr_copy(netdev->dev_addr,(u8 const *)(& sa->sa_data)); else ;
  
#line 3252 
  ldv_spin_unlock_irqrestore_192(& bnad->bna_lock,flags);
  
#line 3254 
  return err;
}


#line 3258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_mtu_set(struct bnad *bnad, int frame_size)
{
  int __retres;
  unsigned long flags;
  
#line 3262 
  init_completion(& bnad->bnad_completions.mtu_comp);
  
#line 3264 
  ldv___ldv_spin_lock_193(& bnad->bna_lock);
  
#line 3265 
  bna_enet_mtu_set(& bnad->bna.enet,frame_size,& bnad_cb_enet_mtu_set);
  
#line 3266 
  ldv_spin_unlock_irqrestore_194(& bnad->bna_lock,flags);
  
#line 3268 
  wait_for_completion(& bnad->bnad_completions.mtu_comp);
  
#line 3270 
  __retres = (int)bnad->bnad_completions.mtu_comp_status;
  
#line 3270 
  return __retres;
}


#line 3274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  int err;
  int mtu;
  u32 frame;
  u32 new_frame;
  
#line 3277 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3278 
  u32 rx_count = 0U;
  
#line 3280 
  if (new_mtu + 14 <= 59 || new_mtu > 9000) {
    
#line 3281 
    __retres = -22;
    
#line 3281 
    goto return_label;
  }
  else ;
  
#line 3283 
  ldv_mutex_lock_195(& bnad->conf_mutex);
  
#line 3285 
  mtu = (int)netdev->mtu;
  
#line 3286 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 3288 
  frame = (unsigned int)(mtu + 22);
  
#line 3289 
  new_frame = (unsigned int)(new_mtu + 22);
  
#line 3292 
  if ((unsigned int)(bnad->pcidev)->device == 34U) {
    bool tmp_0;
    
#line 3292 
    tmp_0 = netif_running((struct net_device const *)bnad->netdev);
    
#line 3292 
    if ((int)tmp_0 != 0) {
      
#line 3295 
      if ((frame <= 4096U) ^ (new_frame <= 4096U)) 
#line 3297 
                                                   rx_count = bnad_reinit_rx(bnad); else ;
    }
    else ;
  }
  else ;
  
#line 3303 
  err = bnad_mtu_set(bnad,(int)new_frame);
  
#line 3304 
  if (err != 0) 
#line 3305 
                err = -16; else ;
  
#line 3307 
  ldv_mutex_unlock_196(& bnad->conf_mutex);
  
#line 3308 
  __retres = err;
  return_label: 
#line 3308 
                return __retres;
}


#line 3312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  unsigned long flags;
  
#line 3314 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3317 
  if (bnad->rx_info[0].rx == (struct bna_rx *)0) {
    
#line 3318 
    __retres = 0;
    
#line 3318 
    goto return_label;
  }
  else ;
  
#line 3320 
  ldv_mutex_lock_197(& bnad->conf_mutex);
  
#line 3322 
  ldv___ldv_spin_lock_198(& bnad->bna_lock);
  
#line 3323 
  bna_rx_vlan_add(bnad->rx_info[0].rx,(int)vid);
  
#line 3324 
  clear_bit((long)vid,(unsigned long volatile *)(& bnad->active_vlans));
  
#line 3325 
  ldv_spin_unlock_irqrestore_199(& bnad->bna_lock,flags);
  
#line 3327 
  ldv_mutex_unlock_200(& bnad->conf_mutex);
  
#line 3329 
  __retres = 0;
  return_label: 
#line 3329 
                return __retres;
}


#line 3333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  unsigned long flags;
  
#line 3335 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3338 
  if (bnad->rx_info[0].rx == (struct bna_rx *)0) {
    
#line 3339 
    __retres = 0;
    
#line 3339 
    goto return_label;
  }
  else ;
  
#line 3341 
  ldv_mutex_lock_201(& bnad->conf_mutex);
  
#line 3343 
  ldv___ldv_spin_lock_202(& bnad->bna_lock);
  
#line 3344 
  clear_bit((long)vid,(unsigned long volatile *)(& bnad->active_vlans));
  
#line 3345 
  bna_rx_vlan_del(bnad->rx_info[0].rx,(int)vid);
  
#line 3346 
  ldv_spin_unlock_irqrestore_203(& bnad->bna_lock,flags);
  
#line 3348 
  ldv_mutex_unlock_204(& bnad->conf_mutex);
  
#line 3350 
  __retres = 0;
  return_label: 
#line 3350 
                return __retres;
}


#line 3353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 3355 
  struct bnad *bnad = netdev_priv((struct net_device const *)dev);
  
#line 3356 
  netdev_features_t changed = dev->features ^ features;
  
#line 3358 
  if ((changed & 256ULL) != 0ULL) {
    bool tmp_0;
    
#line 3358 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 3358 
    if ((int)tmp_0 != 0) {
      unsigned long flags;
      
#line 3361 
      ldv___ldv_spin_lock_205(& bnad->bna_lock);
      
#line 3363 
      if ((features & 256ULL) != 0ULL) 
#line 3364 
                                       bna_rx_vlan_strip_enable(bnad->rx_info[0].rx); else 
                                                                    
#line 3366 
                                                                    bna_rx_vlan_strip_disable(bnad->rx_info[0].rx);
      
#line 3368 
      ldv_spin_unlock_irqrestore_206(& bnad->bna_lock,flags);
    }
    else ;
  }
  else ;
  
#line 3371 
  __retres = 0;
  
#line 3371 
  return __retres;
}


#line 3376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_netpoll(struct net_device *netdev)
{
  struct bnad_rx_info *rx_info;
  struct bnad_rx_ctrl *rx_ctrl;
  u32 curr_mask;
  int i;
  int j;
  
#line 3378 
  struct bnad *bnad = netdev_priv((struct net_device const *)netdev);
  
#line 3384 
  if ((bnad->cfg_flags & 16U) == 0U) {
    
#line 3385 
    curr_mask = readl((void const volatile *)bnad->bna.regs.fn_int_mask);
    
#line 3385 
    writel(4294967295U,(void volatile *)bnad->bna.regs.fn_int_mask);
    
#line 3386 
    bnad_isr((int)(bnad->pcidev)->irq,(void *)netdev);
    
#line 3387 
    writel(curr_mask,(void volatile *)bnad->bna.regs.fn_int_mask);
  }
  else {
    
#line 3395 
    i = 0;
    
#line 3395 
    goto ldv_60528;
    ldv_60527: 
#line 3396 
    ;
    
#line 3396 
    rx_info = & bnad->rx_info[i];
    
#line 3397 
    if (rx_info->rx == (struct bna_rx *)0) 
#line 3398 
                                           goto ldv_60523; else ;
    
#line 3399 
    j = 0;
    
#line 3399 
    goto ldv_60525;
    ldv_60524: 
#line 3400 
    ;
    
#line 3400 
    rx_ctrl = & rx_info->rx_ctrl[j];
    
#line 3401 
    if (rx_ctrl->ccb != (struct bna_ccb *)0) 
#line 3402 
                                             bnad_netif_rx_schedule_poll(bnad,rx_ctrl->ccb); else ;
    
#line 3399 
    j += 1;
    ldv_60525: 
#line 3400 
    ;
    
#line 3399 
    if (bnad->num_rxp_per_rx > (unsigned int)j) 
#line 3401 
                                                goto ldv_60524; else 
                                                                  
#line 3404 
                                                                  goto ldv_60526;
    ldv_60526: 
#line 3405 
    ;
    ldv_60523: 
#line 3406 
    ;
    
#line 3395 
    i += 1;
    ldv_60528: 
#line 3396 
    ;
    
#line 3395 
    if (bnad->num_rx > (unsigned int)i) 
#line 3397 
                                        goto ldv_60527; else 
#line 3400 
                                                             goto ldv_60529;
    ldv_60529: 
#line 3401 
    ;
  }
  
#line 3403 
  return;
}


#line 3410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct net_device_ops const bnad_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & bnad_open, .ndo_stop = & bnad_stop, .ndo_start_xmit = & bnad_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & bnad_set_rx_mode, .ndo_set_mac_address = & bnad_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & bnad_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = & bnad_get_stats64, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = & bnad_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & bnad_vlan_rx_kill_vid, .ndo_poll_controller = & bnad_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & bnad_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_netdev_init(struct bnad *bnad, bool using_dac)
{
  
#line 3430 
  struct net_device *netdev = bnad->netdev;
  
#line 3432 
  netdev->hw_features = 17180983699ULL;
  
#line 3437 
  netdev->vlan_features = 1114163ULL;
  
#line 3441 
  netdev->features = (netdev->features | netdev->hw_features) | 512ULL;
  
#line 3443 
  if ((int)using_dac != 0) 
#line 3444 
                           netdev->features |= 32ULL; else ;
  
#line 3446 
  netdev->mem_start = (unsigned long)bnad->mmio_start;
  
#line 3447 
  netdev->mem_end = (unsigned long)((bnad->mmio_start + bnad->mmio_len) + 18446744073709551615ULL);
  
#line 3449 
  netdev->netdev_ops = & bnad_netdev_ops;
  
#line 3450 
  bnad_set_ethtool_ops(netdev);
  
#line 3451 
  return;
}


#line 3460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_init(struct bnad *bnad, struct pci_dev *pdev, struct net_device *netdev)
{
  int __retres;
  unsigned long flags;
  struct workqueue_struct *tmp_0;
  
#line 3465 
  netdev->dev.parent = & pdev->dev;
  
#line 3466 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 3468 
  bnad->netdev = netdev;
  
#line 3469 
  bnad->pcidev = pdev;
  
#line 3470 
  bnad->mmio_start = pdev->resource[0].start;
  
#line 3471 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 3471 
    bnad->mmio_len = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 3471 
                                                                    bnad->mmio_len = 0ULL;
  
#line 3472 
  bnad->bar0 = ioremap_nocache(bnad->mmio_start,(unsigned long)bnad->mmio_len);
  
#line 3473 
  if (bnad->bar0 == (void *)0) {
    
#line 3474 
    dev_err((struct device const *)(& pdev->dev),"ioremap for bar0 failed\n");
    
#line 3475 
    __retres = -12;
    
#line 3475 
    goto return_label;
  }
  else ;
  
#line 3477 
  _dev_info((struct device const *)(& pdev->dev),"bar0 mapped to %p, len %llu\n",bnad->bar0,bnad->mmio_len);
  
#line 3480 
  ldv___ldv_spin_lock_207(& bnad->bna_lock);
  
#line 3481 
  if (bnad_msix_disable == 0U) 
#line 3482 
                               bnad->cfg_flags = 16U; else ;
  
#line 3484 
  bnad->cfg_flags |= 1U;
  
#line 3486 
  bnad_q_num_init(bnad);
  
#line 3487 
  ldv_spin_unlock_irqrestore_208(& bnad->bna_lock,flags);
  
#line 3489 
  bnad->msix_num = (bnad->num_tx * bnad->num_txq_per_tx + bnad->num_rx * bnad->num_rxp_per_rx) + 1U;
  
#line 3493 
  bnad->txq_depth = 2048U;
  
#line 3494 
  bnad->rxq_depth = 2048U;
  
#line 3496 
  bnad->tx_coalescing_timeo = (unsigned char)20U;
  
#line 3497 
  bnad->rx_coalescing_timeo = (unsigned char)12U;
  
#line 3499 
  sprintf((char *)(& bnad->wq_name),"%s_wq_%d",(char *)"bna",bnad->id);
  {
    struct lock_class_key __key;
    char const *__lock_name;
    
#line 3500 
    __lock_name = "\"%s\"";
    
#line 3500 
    tmp_0 = __alloc_workqueue_key("%s",131082U,1,& __key,__lock_name,(char *)(& bnad->wq_name));
  }
  
#line 3500 
  bnad->work_q = tmp_0;
  
#line 3501 
  if (bnad->work_q == (struct workqueue_struct *)0) {
    
#line 3502 
    iounmap((void volatile *)bnad->bar0);
    
#line 3503 
    __retres = -12;
    
#line 3503 
    goto return_label;
  }
  else ;
  
#line 3506 
  __retres = 0;
  return_label: 
#line 3506 
                return __retres;
}


#line 3515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_uninit(struct bnad *bnad)
{
  
#line 3517 
  if (bnad->work_q != (struct workqueue_struct *)0) {
    
#line 3518 
    flush_workqueue(bnad->work_q);
    
#line 3519 
    destroy_workqueue(bnad->work_q);
    
#line 3520 
    bnad->work_q = (struct workqueue_struct *)0;
  }
  else ;
  
#line 3523 
  if (bnad->bar0 != (void *)0) 
#line 3524 
                               iounmap((void volatile *)bnad->bar0); else ;
  
#line 3525 
  return;
}


#line 3534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_lock_init(struct bnad *bnad)
{
  
#line 3536 
  spinlock_check(& bnad->bna_lock);
  {
    struct lock_class_key __key;
    
#line 3536 
    __raw_spin_lock_init(& bnad->bna_lock.__anonCompField_spinlock_18.rlock,"&(&bnad->bna_lock)->rlock",& __key);
  }
  {
    struct lock_class_key __key_0;
    
#line 3537 
    __mutex_init(& bnad->conf_mutex,"&bnad->conf_mutex",& __key_0);
  }
  {
    struct lock_class_key __key_1;
    
#line 3538 
    __mutex_init(& bnad_list_mutex,"&bnad_list_mutex",& __key_1);
  }
  
#line 3540 
  return;
}


#line 3542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_lock_uninit(struct bnad *bnad)
{
  
#line 3544 
  mutex_destroy(& bnad->conf_mutex);
  
#line 3545 
  mutex_destroy(& bnad_list_mutex);
  
#line 3546 
  return;
}


#line 3550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_pci_init(struct bnad *bnad, struct pci_dev *pdev, bool *using_dac)
{
  int __retres;
  int err;
  int tmp;
  
#line 3555 
  err = pci_enable_device(pdev);
  
#line 3556 
  if (err != 0) {
    
#line 3557 
    __retres = err;
    
#line 3557 
    goto return_label;
  }
  else ;
  
#line 3558 
  err = pci_request_regions(pdev,"bna");
  
#line 3559 
  if (err != 0) 
#line 3560 
                goto disable_device; else ;
  
#line 3561 
  tmp = dma_set_mask_and_coherent(& pdev->dev,18446744073709551615ULL);
  
#line 3561 
  if (tmp == 0) 
#line 3562 
                *using_dac = (_Bool)1;
  else {
    
#line 3564 
    err = dma_set_mask_and_coherent(& pdev->dev,4294967295ULL);
    
#line 3565 
    if (err != 0) 
#line 3566 
                  goto release_regions; else ;
    
#line 3567 
    *using_dac = (_Bool)0;
  }
  
#line 3569 
  pci_set_master(pdev);
  
#line 3570 
  __retres = 0;
  
#line 3570 
  goto return_label;
  release_regions: 
#line 3572 
  ;
  
#line 3573 
  pci_release_regions(pdev);
  disable_device: 
#line 3574 
  ;
  
#line 3575 
  pci_disable_device(pdev);
  
#line 3577 
  __retres = err;
  return_label: 
#line 3577 
                return __retres;
}


#line 3581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_pci_uninit(struct pci_dev *pdev)
{
  
#line 3583 
  pci_release_regions(pdev);
  
#line 3584 
  pci_disable_device(pdev);
  
#line 3585 
  return;
}


#line 3588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_pci_probe(struct pci_dev *pdev, struct pci_device_id const *pcidev_id)
{
  int __retres;
  bool using_dac;
  int err;
  struct bnad *bnad;
  struct bna *bna;
  struct net_device *netdev;
  struct bfa_pcidev pcidev_info;
  unsigned long flags;
  u32 *tmp;
  int tmp_3;
  
#line 3599 
  ldv_mutex_lock_209(& bnad_fwimg_mutex);
  
#line 3600 
  tmp = cna_get_firmware_buf(pdev);
  
#line 3600 
  if (tmp == (u32 *)0U) {
    
#line 3601 
    ldv_mutex_unlock_210(& bnad_fwimg_mutex);
    
#line 3602 
    dev_err((struct device const *)(& pdev->dev),"failed to load firmware image!\n");
    
#line 3603 
    __retres = -19;
    
#line 3603 
    goto return_label;
  }
  else ;
  
#line 3605 
  ldv_mutex_unlock_211(& bnad_fwimg_mutex);
  
#line 3611 
  netdev = ldv_alloc_etherdev_mqs_212(21248,1U,1U);
  
#line 3612 
  if (netdev == (struct net_device *)0) {
    
#line 3613 
    err = -12;
    
#line 3614 
    __retres = err;
    
#line 3614 
    goto return_label;
  }
  else ;
  
#line 3616 
  bnad = (struct bnad *)netdev_priv((struct net_device const *)netdev);
  
#line 3617 
  bnad_lock_init(bnad);
  
#line 3618 
  bnad_add_to_list(bnad);
  
#line 3620 
  ldv_mutex_lock_213(& bnad->conf_mutex);
  
#line 3626 
  using_dac = (_Bool)0;
  
#line 3627 
  err = bnad_pci_init(bnad,pdev,& using_dac);
  
#line 3628 
  if (err != 0) 
#line 3629 
                goto unlock_mutex; else ;
  
#line 3635 
  err = bnad_init(bnad,pdev,netdev);
  
#line 3636 
  if (err != 0) 
#line 3637 
                goto pci_uninit; else ;
  
#line 3640 
  bnad_netdev_init(bnad,(_Bool)((bool)((int)using_dac) != 0));
  
#line 3643 
  netif_carrier_off(netdev);
  
#line 3646 
  if (bna_debugfs_enable != 0U) 
#line 3647 
                                bnad_debugfs_init(bnad); else ;
  
#line 3650 
  ldv___ldv_spin_lock_214(& bnad->bna_lock);
  
#line 3651 
  bna_res_req(& bnad->res_info[0]);
  
#line 3652 
  ldv_spin_unlock_irqrestore_215(& bnad->bna_lock,flags);
  
#line 3655 
  err = bnad_res_alloc(bnad,& bnad->res_info[0],4U);
  
#line 3656 
  if (err != 0) 
#line 3657 
                goto drv_uninit; else ;
  
#line 3659 
  bna = & bnad->bna;
  
#line 3662 
  pcidev_info.pci_slot = (int)((bnad->pcidev)->devfn >> 3) & 31;
  
#line 3663 
  pcidev_info.pci_func = (unsigned char)((unsigned int)((unsigned char)(bnad->pcidev)->devfn) & 7U);
  
#line 3664 
  pcidev_info.device_id = (bnad->pcidev)->device;
  
#line 3665 
  pcidev_info.pci_bar_kva = bnad->bar0;
  
#line 3667 
  ldv___ldv_spin_lock_216(& bnad->bna_lock);
  
#line 3668 
  bna_init(bna,bnad,& pcidev_info,& bnad->res_info[0]);
  
#line 3669 
  ldv_spin_unlock_irqrestore_217(& bnad->bna_lock,flags);
  
#line 3671 
  bnad->stats.bna_stats = & bna->stats;
  
#line 3673 
  bnad_enable_msix(bnad);
  
#line 3674 
  err = bnad_mbox_irq_alloc(bnad);
  
#line 3675 
  if (err != 0) 
#line 3676 
                goto res_free; else ;
  {
    struct lock_class_key __key;
    
#line 3679 
    init_timer_key(& bnad->bna.ioceth.ioc.ioc_timer,0U,"((&bnad->bna.ioceth.ioc.ioc_timer))",& __key);
  }
  
#line 3679 
  bnad->bna.ioceth.ioc.ioc_timer.function = & bnad_ioc_timeout;
  
#line 3679 
  bnad->bna.ioceth.ioc.ioc_timer.data = (unsigned long)bnad;
  {
    struct lock_class_key __key_0;
    
#line 3681 
    init_timer_key(& bnad->bna.ioceth.ioc.hb_timer,0U,"((&bnad->bna.ioceth.ioc.hb_timer))",& __key_0);
  }
  
#line 3681 
  bnad->bna.ioceth.ioc.hb_timer.function = & bnad_ioc_hb_check;
  
#line 3681 
  bnad->bna.ioceth.ioc.hb_timer.data = (unsigned long)bnad;
  {
    struct lock_class_key __key_1;
    
#line 3683 
    init_timer_key(& bnad->bna.ioceth.ioc.iocpf_timer,0U,"((&bnad->bna.ioceth.ioc.iocpf_timer))",& __key_1);
  }
  
#line 3683 
  bnad->bna.ioceth.ioc.iocpf_timer.function = & bnad_iocpf_timeout;
  
#line 3683 
  bnad->bna.ioceth.ioc.iocpf_timer.data = (unsigned long)bnad;
  {
    struct lock_class_key __key_2;
    
#line 3685 
    init_timer_key(& bnad->bna.ioceth.ioc.sem_timer,0U,"((&bnad->bna.ioceth.ioc.sem_timer))",& __key_2);
  }
  
#line 3685 
  bnad->bna.ioceth.ioc.sem_timer.function = & bnad_iocpf_sem_timeout;
  
#line 3685 
  bnad->bna.ioceth.ioc.sem_timer.data = (unsigned long)bnad;
  
#line 3693 
  err = bnad_ioceth_enable(bnad);
  
#line 3694 
  if (err != 0) {
    
#line 3695 
    dev_err((struct device const *)(& pdev->dev),"initialization failed err=%d\n",err);
    
#line 3696 
    goto probe_success;
  }
  else ;
  
#line 3699 
  ldv___ldv_spin_lock_218(& bnad->bna_lock);
  
#line 3700 
  tmp_3 = bna_num_txq_set(bna,(int)(bnad->num_tx * bnad->num_txq_per_tx + 1U));
  
#line 3700 
  if (tmp_3 != 0) 
#line 3700 
                  goto _LOR;
  else {
    int tmp_4;
    
#line 3700 
    tmp_4 = bna_num_rxp_set(bna,(int)(bnad->num_rx * bnad->num_rxp_per_rx + 1U));
    
#line 3700 
    if (tmp_4 != 0) {
      _LOR: {
              int tmp_1;
              
#line 3702 
              bnad_q_num_adjust(bnad,bna->ioceth.attr.num_txq + -1,bna->ioceth.attr.num_rxp + -1);
              
#line 3704 
              tmp_1 = bna_num_txq_set(bna,(int)(bnad->num_tx * bnad->num_txq_per_tx + 1U));
              
#line 3704 
              if (tmp_1 != 0) 
#line 3706 
                              err = -5;
              else {
                int tmp_2;
                
#line 3704 
                tmp_2 = bna_num_rxp_set(bna,(int)(bnad->num_rx * bnad->num_rxp_per_rx + 1U));
                
#line 3704 
                if (tmp_2 != 0) 
#line 3706 
                                err = -5; else ;
              }
            }
    }
    else ;
  }
  
#line 3708 
  ldv_spin_unlock_irqrestore_219(& bnad->bna_lock,flags);
  
#line 3709 
  if (err != 0) 
#line 3710 
                goto disable_ioceth; else ;
  
#line 3712 
  ldv___ldv_spin_lock_220(& bnad->bna_lock);
  
#line 3713 
  bna_mod_res_req(& bnad->bna,& bnad->mod_res_info[0]);
  
#line 3714 
  ldv_spin_unlock_irqrestore_221(& bnad->bna_lock,flags);
  
#line 3716 
  err = bnad_res_alloc(bnad,& bnad->mod_res_info[0],8U);
  
#line 3717 
  if (err != 0) {
    
#line 3718 
    err = -5;
    
#line 3719 
    goto disable_ioceth;
  }
  else ;
  
#line 3722 
  ldv___ldv_spin_lock_222(& bnad->bna_lock);
  
#line 3723 
  bna_mod_init(& bnad->bna,& bnad->mod_res_info[0]);
  
#line 3724 
  ldv_spin_unlock_irqrestore_223(& bnad->bna_lock,flags);
  
#line 3727 
  ldv___ldv_spin_lock_224(& bnad->bna_lock);
  
#line 3728 
  bna_enet_perm_mac_get(& bna->enet,(u8 *)(& bnad->perm_addr));
  
#line 3729 
  bnad_set_netdev_perm_addr(bnad);
  
#line 3730 
  ldv_spin_unlock_irqrestore_225(& bnad->bna_lock,flags);
  
#line 3732 
  ldv_mutex_unlock_226(& bnad->conf_mutex);
  
#line 3735 
  err = ldv_register_netdev_227(netdev);
  
#line 3736 
  if (err != 0) {
    
#line 3737 
    dev_err((struct device const *)(& pdev->dev),"registering net device failed\n");
    
#line 3738 
    goto probe_uninit;
  }
  else ;
  
#line 3740 
  clear_bit(3L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 3742 
  __retres = 0;
  
#line 3742 
  goto return_label;
  probe_success: 
#line 3744 
  ;
  
#line 3745 
  ldv_mutex_unlock_228(& bnad->conf_mutex);
  
#line 3746 
  __retres = 0;
  
#line 3746 
  goto return_label;
  probe_uninit: 
#line 3748 
  ;
  
#line 3749 
  ldv_mutex_lock_229(& bnad->conf_mutex);
  
#line 3750 
  bnad_res_free(bnad,& bnad->mod_res_info[0],8U);
  disable_ioceth: 
#line 3751 
  ;
  
#line 3752 
  bnad_ioceth_disable(bnad);
  
#line 3753 
  ldv_del_timer_sync_230(& bnad->bna.ioceth.ioc.ioc_timer);
  
#line 3754 
  ldv_del_timer_sync_231(& bnad->bna.ioceth.ioc.sem_timer);
  
#line 3755 
  ldv_del_timer_sync_232(& bnad->bna.ioceth.ioc.hb_timer);
  
#line 3756 
  ldv___ldv_spin_lock_233(& bnad->bna_lock);
  
#line 3757 
  bna_uninit(bna);
  
#line 3758 
  ldv_spin_unlock_irqrestore_234(& bnad->bna_lock,flags);
  
#line 3759 
  bnad_mbox_irq_free(bnad);
  
#line 3760 
  bnad_disable_msix(bnad);
  res_free: 
#line 3761 
  ;
  
#line 3762 
  bnad_res_free(bnad,& bnad->res_info[0],4U);
  drv_uninit: 
#line 3763 
  ;
  
#line 3765 
  kfree((void const *)bnad->regdata);
  
#line 3766 
  bnad_debugfs_uninit(bnad);
  
#line 3767 
  bnad_uninit(bnad);
  pci_uninit: 
#line 3768 
  ;
  
#line 3769 
  bnad_pci_uninit(pdev);
  unlock_mutex: 
#line 3770 
  ;
  
#line 3771 
  ldv_mutex_unlock_235(& bnad->conf_mutex);
  
#line 3772 
  bnad_remove_from_list(bnad);
  
#line 3773 
  bnad_lock_uninit(bnad);
  
#line 3774 
  ldv_free_netdev_236(netdev);
  
#line 3775 
  __retres = err;
  return_label: 
#line 3775 
                return __retres;
}


#line 3779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_pci_remove(struct pci_dev *pdev)
{
  struct bnad *bnad;
  struct bna *bna;
  unsigned long flags;
  int tmp_1;
  
#line 3781 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3786 
  if (netdev == (struct net_device *)0) 
#line 3787 
                                        goto return_label; else ;
  
#line 3789 
  bnad = (struct bnad *)netdev_priv((struct net_device const *)netdev);
  
#line 3790 
  bna = & bnad->bna;
  
#line 3792 
  tmp_1 = test_and_set_bit(3L,(unsigned long volatile *)(& bnad->run_flags));
  
#line 3792 
  if (tmp_1 != 0) 
#line 3793 
                  ldv_unregister_netdev_237(netdev); else ;
  
#line 3795 
  ldv_mutex_lock_238(& bnad->conf_mutex);
  
#line 3796 
  bnad_ioceth_disable(bnad);
  
#line 3797 
  ldv_del_timer_sync_239(& bnad->bna.ioceth.ioc.ioc_timer);
  
#line 3798 
  ldv_del_timer_sync_240(& bnad->bna.ioceth.ioc.sem_timer);
  
#line 3799 
  ldv_del_timer_sync_241(& bnad->bna.ioceth.ioc.hb_timer);
  
#line 3800 
  ldv___ldv_spin_lock_242(& bnad->bna_lock);
  
#line 3801 
  bna_uninit(bna);
  
#line 3802 
  ldv_spin_unlock_irqrestore_243(& bnad->bna_lock,flags);
  
#line 3804 
  bnad_res_free(bnad,& bnad->mod_res_info[0],8U);
  
#line 3805 
  bnad_res_free(bnad,& bnad->res_info[0],4U);
  
#line 3806 
  bnad_mbox_irq_free(bnad);
  
#line 3807 
  bnad_disable_msix(bnad);
  
#line 3808 
  bnad_pci_uninit(pdev);
  
#line 3809 
  ldv_mutex_unlock_244(& bnad->conf_mutex);
  
#line 3810 
  bnad_remove_from_list(bnad);
  
#line 3811 
  bnad_lock_uninit(bnad);
  
#line 3813 
  kfree((void const *)bnad->regdata);
  
#line 3814 
  bnad_debugfs_uninit(bnad);
  
#line 3815 
  bnad_uninit(bnad);
  
#line 3816 
  ldv_free_netdev_245(netdev);
  return_label: 
#line 3817 
                return;
}


#line 3819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct pci_device_id const bnad_pci_id_table[3U] = {{.vendor = 5719U, .device = 20U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 5719U, .device = 34U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
struct pci_device_id const __mod_pci__bnad_pci_id_table_device_table[3U];

#line 3837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static struct pci_driver bnad_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "bna", .id_table = (struct pci_device_id const *)(& bnad_pci_id_table), .probe = & bnad_pci_probe, .remove = & bnad_pci_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static int bnad_module_init(void)
{
  int __retres;
  int err;
  
#line 3849 
  printk("\001",(char *)"3.2.25.1");
  
#line 3852 
  bfa_nw_ioc_auto_recover((_Bool)(bnad_ioc_auto_recover != 0U));
  
#line 3854 
  err = ldv___pci_register_driver_246(& bnad_pci_driver,& __this_module,"bna");
  
#line 3855 
  if (err < 0) {
    
#line 3856 
    printk("\001",err);
    
#line 3857 
    __retres = err;
    
#line 3857 
    goto return_label;
  }
  else ;
  
#line 3860 
  __retres = 0;
  return_label: 
#line 3860 
                return __retres;
}


#line 3864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad.c"
static void bnad_module_exit(void)
{
  
#line 3866 
  ldv_pci_unregister_driver_247(& bnad_pci_driver);
  
#line 3867 
  release_firmware(bfi_fw);
  
#line 3868 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int (*ldv_emg_alias_eth_validate_addr_23)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
struct pci_driver *ldv_emg_alias_bnad_pci_driver_2 = & bnad_pci_driver;

#line 62 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 63 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 64 
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);


#line 65 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 66 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 67 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 68 
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 71 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 72 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
void ldv_emg_bnad_module_exit(void)
{
  
#line 77 
  bnad_module_exit();
  
#line 78 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
enum irqreturn ldv_emg_wrapper_bnad_msix_tx_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 81 
  tmp = bnad_msix_tx(arg0,arg1);
  
#line 81 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_bnad_module_init(void)
{
  int tmp;
  
#line 86 
  tmp = bnad_module_init();
  
#line 86 
  return tmp;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_stop_2(struct net_device *arg0)
{
  int tmp;
  
#line 90 
  tmp = bnad_stop(arg0);
  
#line 90 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
enum irqreturn ldv_emg_wrapper_bnad_msix_rx_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 95 
  tmp = bnad_msix_rx(arg0,arg1);
  
#line 95 
  return tmp;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_pci_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 100 
  tmp = bnad_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 100 
  return tmp;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
enum netdev_tx ldv_emg_wrapper_bnad_start_xmit_15(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 105 
  tmp = bnad_start_xmit(arg0,arg1);
  
#line 105 
  return tmp;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_change_mtu_9(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 110 
  tmp = bnad_change_mtu(arg0,arg1);
  
#line 110 
  return tmp;
}


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
void ldv_emg_wrapper_bnad_netpoll_28(struct net_device *arg0)
{
  
#line 115 
  bnad_netpoll(arg0);
  
#line 116 
  return;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_bnad_get_stats64_6(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 120 
  tmp = bnad_get_stats64(arg0,arg1);
  
#line 120 
  return tmp;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
void ldv_emg_wrapper_bnad_pci_remove_3(struct pci_dev *arg0)
{
  
#line 125 
  bnad_pci_remove(arg0);
  
#line 126 
  return;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_vlan_rx_add_vid_20(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 130 
  tmp = bnad_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 130 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_vlan_rx_kill_vid_27(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 135 
  tmp = bnad_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 140 
  tmp = bnad_open(arg0);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_set_features_11(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 145 
  tmp = bnad_set_features(arg0,arg1);
  
#line 145 
  return tmp;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
int ldv_emg_wrapper_bnad_set_mac_address_16(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 150 
  tmp = bnad_set_mac_address(arg0,arg1);
  
#line 150 
  return tmp;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 211 
  ldv_atomic_inc(v);
  
#line 212 
  return;
}


#line 694  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 697 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 697 
  return tmp;
}


#line 701  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 704 
  tmp = ldv_kzalloc(size,flags);
  
#line 704 
  return tmp;
}


#line 851  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_75(struct mutex *ldv_func_arg1)
{
  
#line 855 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"bnad_list_mutex");
  
#line 856 
  return;
}


#line 859  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1)
{
  
#line 863 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"bnad_list_mutex");
  
#line 864 
  return;
}


#line 867  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_77(struct mutex *ldv_func_arg1)
{
  
#line 871 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"bnad_list_mutex");
  
#line 872 
  return;
}


#line 875  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1)
{
  
#line 879 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"bnad_list_mutex");
  
#line 880 
  return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1)
{
  
#line 887 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 889 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 897 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 899 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_81_0(spinlock_t *lock, unsigned long flags)
{
  
#line 907 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 909 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1)
{
  
#line 917 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 919 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 920 
  return;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 927 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 929 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 930 
  return;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_84_0(spinlock_t *lock, unsigned long flags)
{
  
#line 937 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 939 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 940 
  return;
}


#line 943  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags)
{
  
#line 947 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 949 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 950 
  return;
}


#line 953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static bool ldv_queue_delayed_work_86(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 957 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 957 
  __retres = tmp != 0;
  
#line 957 
  return __retres;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_87(spinlock_t *ldv_func_arg1)
{
  
#line 965 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 967 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 968 
  return;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags)
{
  
#line 975 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 977 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 978 
  return;
}


#line 981  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static bool ldv_queue_delayed_work_89(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 985 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 985 
  __retres = tmp != 0;
  
#line 985 
  return __retres;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 993 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 995 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1005 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static bool ldv_queue_work_92(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1013 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1013 
  __retres = tmp != 0;
  
#line 1013 
  return __retres;
}


#line 1017  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_mod_timer_93(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1021 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1021 
  return tmp;
}


#line 1025  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_94(spinlock_t *ldv_func_arg1)
{
  
#line 1029 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1031 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1032 
  return;
}


#line 1035  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_95(spinlock_t *lock, unsigned long flags)
{
  
#line 1039 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1041 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1042 
  return;
}


#line 1045  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_free_irq_96(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1049 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1050 
  return;
}


#line 1053  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_97(spinlock_t *ldv_func_arg1)
{
  
#line 1057 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1059 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1060 
  return;
}


#line 1063  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_98(spinlock_t *lock, unsigned long flags)
{
  
#line 1067 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1069 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1070 
  return;
}


#line 1073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_request_irq_99(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1077 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1077 
  return tmp;
}


#line 1081  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_100(spinlock_t *ldv_func_arg1)
{
  
#line 1085 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1087 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1088 
  return;
}


#line 1091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_101(spinlock_t *lock, unsigned long flags)
{
  
#line 1095 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1097 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1098 
  return;
}


#line 1101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_free_irq_102(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1105 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1106 
  return;
}


#line 1109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_request_irq_103(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1113 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1113 
  return tmp;
}


#line 1117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_free_irq_104(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1121 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1122 
  return;
}


#line 1125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_request_irq_105(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1129 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1129 
  return tmp;
}


#line 1133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_106_0(spinlock_t *ldv_func_arg1)
{
  
#line 1137 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1139 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1140 
  return;
}


#line 1143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_107_0(spinlock_t *lock, unsigned long flags)
{
  
#line 1147 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1149 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1150 
  return;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_108(spinlock_t *ldv_func_arg1)
{
  
#line 1157 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1159 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1160 
  return;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_109(spinlock_t *lock, unsigned long flags)
{
  
#line 1167 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1169 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1170 
  return;
}


#line 1173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_110(spinlock_t *ldv_func_arg1)
{
  
#line 1177 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1179 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1180 
  return;
}


#line 1183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_111_0(spinlock_t *lock, unsigned long flags)
{
  
#line 1187 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1189 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1190 
  return;
}


#line 1193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_112_0(spinlock_t *ldv_func_arg1)
{
  
#line 1197 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1199 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1200 
  return;
}


#line 1203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_113_0(spinlock_t *lock, unsigned long flags)
{
  
#line 1207 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1209 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1210 
  return;
}


#line 1213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_114(spinlock_t *ldv_func_arg1)
{
  
#line 1217 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1219 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1220 
  return;
}


#line 1223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_mod_timer_115(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1227 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1227 
  return tmp;
}


#line 1231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_116(spinlock_t *lock, unsigned long flags)
{
  
#line 1235 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1237 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1238 
  return;
}


#line 1241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_117(spinlock_t *ldv_func_arg1)
{
  
#line 1245 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1247 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1248 
  return;
}


#line 1251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_118(spinlock_t *lock, unsigned long flags)
{
  
#line 1255 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1257 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1258 
  return;
}


#line 1261  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_mod_timer_119(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1265 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1265 
  return tmp;
}


#line 1269  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_120(spinlock_t *ldv_func_arg1)
{
  
#line 1273 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1275 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1276 
  return;
}


#line 1279  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_mod_timer_121(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1283 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1283 
  return tmp;
}


#line 1287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_122(spinlock_t *lock, unsigned long flags)
{
  
#line 1291 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1293 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1294 
  return;
}


#line 1297  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_123(spinlock_t *ldv_func_arg1)
{
  
#line 1301 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1303 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1304 
  return;
}


#line 1307  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_124(spinlock_t *lock, unsigned long flags)
{
  
#line 1311 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1313 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1314 
  return;
}


#line 1317  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_125(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1321 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1321 
  return tmp;
}


#line 1325  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_126(spinlock_t *ldv_func_arg1)
{
  
#line 1329 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1331 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1332 
  return;
}


#line 1335  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_127(spinlock_t *lock, unsigned long flags)
{
  
#line 1339 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1341 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1342 
  return;
}


#line 1345  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_128(spinlock_t *ldv_func_arg1)
{
  
#line 1349 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1351 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1352 
  return;
}


#line 1355  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_129(spinlock_t *lock, unsigned long flags)
{
  
#line 1359 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1361 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1362 
  return;
}


#line 1365  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_130(spinlock_t *ldv_func_arg1)
{
  
#line 1369 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1371 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1372 
  return;
}


#line 1375  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_131(spinlock_t *lock, unsigned long flags)
{
  
#line 1379 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1381 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1382 
  return;
}


#line 1385  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_132(spinlock_t *ldv_func_arg1)
{
  
#line 1389 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1391 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1392 
  return;
}


#line 1395  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_133(spinlock_t *lock, unsigned long flags)
{
  
#line 1399 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1401 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1402 
  return;
}


#line 1405  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_134(spinlock_t *ldv_func_arg1)
{
  
#line 1409 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1411 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1412 
  return;
}


#line 1415  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_135(spinlock_t *lock, unsigned long flags)
{
  
#line 1419 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1421 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1422 
  return;
}


#line 1425  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_136(spinlock_t *ldv_func_arg1)
{
  
#line 1429 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1431 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1432 
  return;
}


#line 1435  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_137(spinlock_t *lock, unsigned long flags)
{
  
#line 1439 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1441 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1442 
  return;
}


#line 1445  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_138(spinlock_t *ldv_func_arg1)
{
  
#line 1449 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1451 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1452 
  return;
}


#line 1455  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_139(spinlock_t *lock, unsigned long flags)
{
  
#line 1459 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1461 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1462 
  return;
}


#line 1465  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_140(spinlock_t *ldv_func_arg1)
{
  
#line 1469 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1471 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1472 
  return;
}


#line 1475  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_141(spinlock_t *lock, unsigned long flags)
{
  
#line 1479 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1481 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1482 
  return;
}


#line 1485  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_142(spinlock_t *ldv_func_arg1)
{
  
#line 1489 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1491 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1492 
  return;
}


#line 1495  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_143(spinlock_t *lock, unsigned long flags)
{
  
#line 1499 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1501 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1502 
  return;
}


#line 1505  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_144(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1509 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1509 
  return tmp;
}


#line 1513  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_145(spinlock_t *ldv_func_arg1)
{
  
#line 1517 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1519 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1520 
  return;
}


#line 1523  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_146(spinlock_t *lock, unsigned long flags)
{
  
#line 1527 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1529 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1530 
  return;
}


#line 1533  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_147(spinlock_t *ldv_func_arg1)
{
  
#line 1537 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1539 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1540 
  return;
}


#line 1543  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_148(spinlock_t *lock, unsigned long flags)
{
  
#line 1547 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1549 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1550 
  return;
}


#line 1553  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_149(spinlock_t *ldv_func_arg1)
{
  
#line 1557 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1559 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1560 
  return;
}


#line 1563  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_150(spinlock_t *lock, unsigned long flags)
{
  
#line 1567 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1569 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1570 
  return;
}


#line 1573  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_151(spinlock_t *ldv_func_arg1)
{
  
#line 1577 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1579 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1580 
  return;
}


#line 1583  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_152(spinlock_t *lock, unsigned long flags)
{
  
#line 1587 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1589 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1590 
  return;
}


#line 1593  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_153(spinlock_t *lock, unsigned long flags)
{
  
#line 1597 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1599 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1600 
  return;
}


#line 1603  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_154(spinlock_t *ldv_func_arg1)
{
  
#line 1607 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1609 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1610 
  return;
}


#line 1613  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_155(spinlock_t *lock, unsigned long flags)
{
  
#line 1617 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1619 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1620 
  return;
}


#line 1623  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_156(spinlock_t *ldv_func_arg1)
{
  
#line 1627 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1629 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1630 
  return;
}


#line 1633  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_157(spinlock_t *lock, unsigned long flags)
{
  
#line 1637 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1639 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1640 
  return;
}


#line 1643  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_158(spinlock_t *ldv_func_arg1)
{
  
#line 1647 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1649 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1650 
  return;
}


#line 1653  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_159(spinlock_t *lock, unsigned long flags)
{
  
#line 1657 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1659 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1660 
  return;
}


#line 1663  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_160(spinlock_t *ldv_func_arg1)
{
  
#line 1667 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1669 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1670 
  return;
}


#line 1673  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_161(spinlock_t *lock, unsigned long flags)
{
  
#line 1677 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1679 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1680 
  return;
}


#line 1683  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_162(spinlock_t *ldv_func_arg1)
{
  
#line 1687 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1689 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1690 
  return;
}


#line 1693  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_163(spinlock_t *lock, unsigned long flags)
{
  
#line 1697 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1699 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1700 
  return;
}


#line 1703  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_164(spinlock_t *ldv_func_arg1)
{
  
#line 1707 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1709 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1710 
  return;
}


#line 1713  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_165(spinlock_t *lock, unsigned long flags)
{
  
#line 1717 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1719 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1720 
  return;
}


#line 1723  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_166(spinlock_t *ldv_func_arg1)
{
  
#line 1727 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1729 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1730 
  return;
}


#line 1733  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_167(spinlock_t *lock, unsigned long flags)
{
  
#line 1737 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1739 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1740 
  return;
}


#line 1743  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_168(spinlock_t *lock, unsigned long flags)
{
  
#line 1747 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1749 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1750 
  return;
}


#line 1753  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_169(spinlock_t *ldv_func_arg1)
{
  
#line 1757 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1759 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1760 
  return;
}


#line 1763  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_170(spinlock_t *lock, unsigned long flags)
{
  
#line 1767 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1769 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1770 
  return;
}


#line 1773  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_171(spinlock_t *ldv_func_arg1)
{
  
#line 1777 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1779 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1780 
  return;
}


#line 1783  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_172(spinlock_t *lock, unsigned long flags)
{
  
#line 1787 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1789 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1790 
  return;
}


#line 1793  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_173(spinlock_t *ldv_func_arg1)
{
  
#line 1797 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1799 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1800 
  return;
}


#line 1803  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_174(spinlock_t *lock, unsigned long flags)
{
  
#line 1807 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1809 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1810 
  return;
}


#line 1813  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_175(struct mutex *ldv_func_arg1)
{
  
#line 1817 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1818 
  return;
}


#line 1821  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_176(spinlock_t *ldv_func_arg1)
{
  
#line 1825 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1827 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1828 
  return;
}


#line 1831  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_177(spinlock_t *lock, unsigned long flags)
{
  
#line 1835 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1837 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1838 
  return;
}


#line 1841  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_178(spinlock_t *ldv_func_arg1)
{
  
#line 1845 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1847 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1848 
  return;
}


#line 1851  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_179(spinlock_t *lock, unsigned long flags)
{
  
#line 1855 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1857 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1858 
  return;
}


#line 1861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_180(struct mutex *ldv_func_arg1)
{
  
#line 1865 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1866 
  return;
}


#line 1869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_181(struct mutex *ldv_func_arg1)
{
  
#line 1873 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1874 
  return;
}


#line 1877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_182(struct mutex *ldv_func_arg1)
{
  
#line 1881 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1882 
  return;
}


#line 1885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_183(spinlock_t *ldv_func_arg1)
{
  
#line 1889 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1891 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1892 
  return;
}


#line 1895  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_184(spinlock_t *lock, unsigned long flags)
{
  
#line 1899 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1901 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1902 
  return;
}


#line 1905  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_185(struct mutex *ldv_func_arg1)
{
  
#line 1909 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 1910 
  return;
}


#line 1913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_186(spinlock_t *ldv_func_arg1)
{
  
#line 1917 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1919 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1920 
  return;
}


#line 1923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_187(spinlock_t *lock, unsigned long flags)
{
  
#line 1927 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1929 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1930 
  return;
}


#line 1933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_188(spinlock_t *ldv_func_arg1)
{
  
#line 1937 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1939 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1940 
  return;
}


#line 1943  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_189(spinlock_t *lock, unsigned long flags)
{
  
#line 1947 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1949 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1950 
  return;
}


#line 1953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_190(spinlock_t *lock, unsigned long flags)
{
  
#line 1957 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1959 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1960 
  return;
}


#line 1963  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_191(spinlock_t *ldv_func_arg1)
{
  
#line 1967 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1969 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1970 
  return;
}


#line 1973  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_192(spinlock_t *lock, unsigned long flags)
{
  
#line 1977 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1979 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 1980 
  return;
}


#line 1983  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_193(spinlock_t *ldv_func_arg1)
{
  
#line 1987 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 1989 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1990 
  return;
}


#line 1993  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_194(spinlock_t *lock, unsigned long flags)
{
  
#line 1997 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1999 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2000 
  return;
}


#line 2003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_195(struct mutex *ldv_func_arg1)
{
  
#line 2007 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2008 
  return;
}


#line 2011  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_196(struct mutex *ldv_func_arg1)
{
  
#line 2015 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2016 
  return;
}


#line 2019  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_197(struct mutex *ldv_func_arg1)
{
  
#line 2023 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2024 
  return;
}


#line 2027  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_198(spinlock_t *ldv_func_arg1)
{
  
#line 2031 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2033 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2034 
  return;
}


#line 2037  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_199(spinlock_t *lock, unsigned long flags)
{
  
#line 2041 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2043 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2044 
  return;
}


#line 2047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_200(struct mutex *ldv_func_arg1)
{
  
#line 2051 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2052 
  return;
}


#line 2055  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_201(struct mutex *ldv_func_arg1)
{
  
#line 2059 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2060 
  return;
}


#line 2063  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_202(spinlock_t *ldv_func_arg1)
{
  
#line 2067 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2069 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2070 
  return;
}


#line 2073  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_203(spinlock_t *lock, unsigned long flags)
{
  
#line 2077 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2079 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2080 
  return;
}


#line 2083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_204(struct mutex *ldv_func_arg1)
{
  
#line 2087 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2088 
  return;
}


#line 2091  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_205(spinlock_t *ldv_func_arg1)
{
  
#line 2095 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2097 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2098 
  return;
}


#line 2101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_206(spinlock_t *lock, unsigned long flags)
{
  
#line 2105 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2107 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2108 
  return;
}


#line 2111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_207(spinlock_t *ldv_func_arg1)
{
  
#line 2115 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2117 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2118 
  return;
}


#line 2121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_208(spinlock_t *lock, unsigned long flags)
{
  
#line 2125 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2127 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2128 
  return;
}


#line 2131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_209(struct mutex *ldv_func_arg1)
{
  
#line 2135 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"bnad_fwimg_mutex");
  
#line 2136 
  return;
}


#line 2139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_210(struct mutex *ldv_func_arg1)
{
  
#line 2143 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"bnad_fwimg_mutex");
  
#line 2144 
  return;
}


#line 2147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_211(struct mutex *ldv_func_arg1)
{
  
#line 2151 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"bnad_fwimg_mutex");
  
#line 2152 
  return;
}


#line 2155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_212(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 2159 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 2159 
  return tmp;
}


#line 2163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_213(struct mutex *ldv_func_arg1)
{
  
#line 2167 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2168 
  return;
}


#line 2171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_214(spinlock_t *ldv_func_arg1)
{
  
#line 2175 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2177 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2178 
  return;
}


#line 2181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_215(spinlock_t *lock, unsigned long flags)
{
  
#line 2185 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2187 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2188 
  return;
}


#line 2191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_216(spinlock_t *ldv_func_arg1)
{
  
#line 2195 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2197 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2198 
  return;
}


#line 2201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_217(spinlock_t *lock, unsigned long flags)
{
  
#line 2205 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2207 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2208 
  return;
}


#line 2211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_218(spinlock_t *ldv_func_arg1)
{
  
#line 2215 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2217 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2218 
  return;
}


#line 2221  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_219(spinlock_t *lock, unsigned long flags)
{
  
#line 2225 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2227 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2228 
  return;
}


#line 2231  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_220(spinlock_t *ldv_func_arg1)
{
  
#line 2235 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2237 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2238 
  return;
}


#line 2241  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_221(spinlock_t *lock, unsigned long flags)
{
  
#line 2245 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2247 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2248 
  return;
}


#line 2251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_222(spinlock_t *ldv_func_arg1)
{
  
#line 2255 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2257 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2258 
  return;
}


#line 2261  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_223(spinlock_t *lock, unsigned long flags)
{
  
#line 2265 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2267 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2268 
  return;
}


#line 2271  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_224(spinlock_t *ldv_func_arg1)
{
  
#line 2275 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2277 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2278 
  return;
}


#line 2281  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_225(spinlock_t *lock, unsigned long flags)
{
  
#line 2285 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2287 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2288 
  return;
}


#line 2291  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_226(struct mutex *ldv_func_arg1)
{
  
#line 2295 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2296 
  return;
}


#line 2299  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_register_netdev_227(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 2303 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 2303 
  return tmp;
}


#line 2307  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_228(struct mutex *ldv_func_arg1)
{
  
#line 2311 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2312 
  return;
}


#line 2315  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_229(struct mutex *ldv_func_arg1)
{
  
#line 2319 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2320 
  return;
}


#line 2323  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_230(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 2327 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 2327 
  return tmp;
}


#line 2331  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_231(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 2335 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 2335 
  return tmp;
}


#line 2339  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_232(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 2343 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 2343 
  return tmp;
}


#line 2347  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_233(spinlock_t *ldv_func_arg1)
{
  
#line 2351 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2353 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2354 
  return;
}


#line 2357  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_234(spinlock_t *lock, unsigned long flags)
{
  
#line 2361 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2363 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2364 
  return;
}


#line 2367  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_235(struct mutex *ldv_func_arg1)
{
  
#line 2371 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2372 
  return;
}


#line 2375  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_free_netdev_236(struct net_device *ldv_func_arg1)
{
  
#line 2379 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 2380 
  return;
}


#line 2383  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_unregister_netdev_237(struct net_device *ldv_func_arg1)
{
  
#line 2387 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 2388 
  return;
}


#line 2391  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_lock_238(struct mutex *ldv_func_arg1)
{
  
#line 2395 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2396 
  return;
}


#line 2399  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_239(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 2403 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 2403 
  return tmp;
}


#line 2407  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_240(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 2411 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 2411 
  return tmp;
}


#line 2415  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv_del_timer_sync_241(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 2419 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 2419 
  return tmp;
}


#line 2423  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv___ldv_spin_lock_242(spinlock_t *ldv_func_arg1)
{
  
#line 2427 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 2429 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 2430 
  return;
}


#line 2433  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_spin_unlock_irqrestore_243(spinlock_t *lock, unsigned long flags)
{
  
#line 2437 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 2439 
  spin_unlock_irqrestore_0(lock,flags);
  
#line 2440 
  return;
}


#line 2443  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_mutex_unlock_244(struct mutex *ldv_func_arg1)
{
  
#line 2447 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 2448 
  return;
}


#line 2451  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_free_netdev_245(struct net_device *ldv_func_arg1)
{
  
#line 2455 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 2456 
  return;
}


#line 2459  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static int ldv___pci_register_driver_246(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 2463 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 2463 
  return tmp;
}


#line 2467  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad.c.aux"
static void ldv_pci_unregister_driver_247(struct pci_driver *ldv_func_arg1)
{
  
#line 2471 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 2472 
  return;
}


#line 8  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
void ldv_atomic_dec(atomic_t *v);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 418 
int sscanf(char const *, char const * , ...);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
void *memdup_user(void const *, size_t);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 98 
static void atomic_inc_0(atomic_t *v);


#line 114 
static void atomic_dec(atomic_t *v);


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore_1(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_76_0(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_78_0(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_80_0(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_83_0(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_85_0(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_90(spinlock_t *lock, unsigned long flags);


#line 510 
static void ldv_spin_unlock_irqrestore_92_0(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_mutex_lock_87(struct mutex *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_75_0(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_77_0(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_79_0(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1);


#line 94 
static void ldv___ldv_spin_lock_89(spinlock_t *ldv_func_arg1);


#line 98 
static void ldv___ldv_spin_lock_91_0(spinlock_t *ldv_func_arg1);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/completion.h"
__inline static void reinit_completion(struct completion *x)
{
  
#line 88 
  x->done = 0U;
  
#line 89 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_88_0(struct mutex *ldv_func_arg1);


#line 2665  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
loff_t fixed_size_llseek(struct file *, loff_t, int, loff_t);


#line 2843 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
static struct dentry *ldv_debugfs_create_file_93(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5);


#line 62 
struct dentry *debugfs_create_dir(char const *, struct dentry *);


#line 75 
static void ldv_debugfs_remove_94(struct dentry *ldv_func_arg1);


#line 79 
static void ldv_debugfs_remove_95(struct dentry *ldv_func_arg1);


#line 83 
static void ldv_debugfs_remove_96(struct dentry *ldv_func_arg1);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_1(size_t size, gfp_t flags);


#line 301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
int bfa_nw_ioc_debug_fwtrc(struct bfa_ioc *ioc, void *trcdata, int *trclen);


#line 302 
int bfa_nw_ioc_debug_fwsave(struct bfa_ioc *ioc, void *trcdata, int *trclen);


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_debugfs_open_fwtrc(struct inode *inode, struct file *file)
{
  int __retres;
  struct bnad_debug_info *fw_debug;
  unsigned long flags;
  int rc;
  
#line 51 
  struct bnad *bnad = (struct bnad *)inode->i_private;
  
#line 56 
  fw_debug = (struct bnad_debug_info *)kzalloc_1(24UL,208U);
  
#line 57 
  if (fw_debug == (struct bnad_debug_info *)0) {
    
#line 58 
    __retres = -12;
    
#line 58 
    goto return_label;
  }
  else ;
  
#line 60 
  fw_debug->buffer_len = 4128;
  
#line 62 
  fw_debug->debug_buffer = (char *)kzalloc_1((unsigned long)fw_debug->buffer_len,208U);
  
#line 63 
  if (fw_debug->debug_buffer == (char *)0) {
    
#line 64 
    kfree((void const *)fw_debug);
    
#line 65 
    fw_debug = (struct bnad_debug_info *)0;
    
#line 66 
    __retres = -12;
    
#line 66 
    goto return_label;
  }
  else ;
  
#line 69 
  ldv___ldv_spin_lock_75_0(& bnad->bna_lock);
  
#line 70 
  rc = bfa_nw_ioc_debug_fwtrc(& bnad->bna.ioceth.ioc,(void *)fw_debug->debug_buffer,& fw_debug->buffer_len);
  
#line 73 
  ldv_spin_unlock_irqrestore_76_0(& bnad->bna_lock,flags);
  
#line 74 
  if (rc != 0) {
    
#line 75 
    kfree((void const *)fw_debug->debug_buffer);
    
#line 76 
    fw_debug->debug_buffer = (char *)0;
    
#line 77 
    kfree((void const *)fw_debug);
    
#line 78 
    fw_debug = (struct bnad_debug_info *)0;
    
#line 79 
    netdev_warn((struct net_device const *)bnad->netdev,"failed to collect fwtrc\n");
    
#line 80 
    __retres = -12;
    
#line 80 
    goto return_label;
  }
  else ;
  
#line 83 
  file->private_data = (void *)fw_debug;
  
#line 85 
  __retres = 0;
  return_label: 
#line 85 
                return __retres;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_debugfs_open_fwsave(struct inode *inode, struct file *file)
{
  int __retres;
  struct bnad_debug_info *fw_debug;
  unsigned long flags;
  int rc;
  
#line 91 
  struct bnad *bnad = (struct bnad *)inode->i_private;
  
#line 96 
  fw_debug = (struct bnad_debug_info *)kzalloc_1(24UL,208U);
  
#line 97 
  if (fw_debug == (struct bnad_debug_info *)0) {
    
#line 98 
    __retres = -12;
    
#line 98 
    goto return_label;
  }
  else ;
  
#line 100 
  fw_debug->buffer_len = 4128;
  
#line 102 
  fw_debug->debug_buffer = (char *)kzalloc_1((unsigned long)fw_debug->buffer_len,208U);
  
#line 103 
  if (fw_debug->debug_buffer == (char *)0) {
    
#line 104 
    kfree((void const *)fw_debug);
    
#line 105 
    fw_debug = (struct bnad_debug_info *)0;
    
#line 106 
    __retres = -12;
    
#line 106 
    goto return_label;
  }
  else ;
  
#line 109 
  ldv___ldv_spin_lock_77_0(& bnad->bna_lock);
  
#line 110 
  rc = bfa_nw_ioc_debug_fwsave(& bnad->bna.ioceth.ioc,(void *)fw_debug->debug_buffer,& fw_debug->buffer_len);
  
#line 113 
  ldv_spin_unlock_irqrestore_78_0(& bnad->bna_lock,flags);
  
#line 114 
  if (rc != 0 && rc != 78) {
    
#line 115 
    kfree((void const *)fw_debug->debug_buffer);
    
#line 116 
    fw_debug->debug_buffer = (char *)0;
    
#line 117 
    kfree((void const *)fw_debug);
    
#line 118 
    fw_debug = (struct bnad_debug_info *)0;
    
#line 119 
    netdev_warn((struct net_device const *)bnad->netdev,"failed to collect fwsave\n");
    
#line 120 
    __retres = -12;
    
#line 120 
    goto return_label;
  }
  else ;
  
#line 123 
  file->private_data = (void *)fw_debug;
  
#line 125 
  __retres = 0;
  return_label: 
#line 125 
                return __retres;
}


#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_debugfs_open_reg(struct inode *inode, struct file *file)
{
  int __retres;
  struct bnad_debug_info *reg_debug;
  
#line 133 
  reg_debug = (struct bnad_debug_info *)kzalloc_1(24UL,208U);
  
#line 134 
  if (reg_debug == (struct bnad_debug_info *)0) {
    
#line 135 
    __retres = -12;
    
#line 135 
    goto return_label;
  }
  else ;
  
#line 137 
  reg_debug->i_private = inode->i_private;
  
#line 139 
  file->private_data = (void *)reg_debug;
  
#line 141 
  __retres = 0;
  return_label: 
#line 141 
                return __retres;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_get_debug_drvinfo(struct bnad *bnad, void *buffer, u32 len)
{
  struct bnad_iocmd_comp fcomp;
  enum bfa_status tmp;
  enum bfa_status tmp_0;
  
#line 147 
  struct bnad_drvinfo *drvinfo = (struct bnad_drvinfo *)buffer;
  
#line 149 
  unsigned long flags = 0UL;
  
#line 150 
  int ret = 1;
  
#line 153 
  ldv___ldv_spin_lock_79_0(& bnad->bna_lock);
  
#line 154 
  bfa_nw_ioc_get_attr(& bnad->bna.ioceth.ioc,& drvinfo->ioc_attr);
  
#line 155 
  ldv_spin_unlock_irqrestore_80_0(& bnad->bna_lock,flags);
  
#line 158 
  fcomp.bnad = bnad;
  
#line 159 
  fcomp.comp_status = 0;
  
#line 160 
  init_completion(& fcomp.comp);
  
#line 161 
  ldv___ldv_spin_lock_81(& bnad->bna_lock);
  
#line 162 
  tmp = bfa_nw_cee_get_attr(& bnad->bna.cee,& drvinfo->cee_attr,& bnad_cb_completion,(void *)(& fcomp));
  
#line 162 
  ret = (int)tmp;
  
#line 164 
  if (ret != 0) {
    
#line 165 
    ldv_spin_unlock_irqrestore_82(& bnad->bna_lock,flags);
    
#line 166 
    goto out;
  }
  else ;
  
#line 168 
  ldv_spin_unlock_irqrestore_83_0(& bnad->bna_lock,flags);
  
#line 169 
  wait_for_completion(& fcomp.comp);
  
#line 170 
  drvinfo->cee_status = (unsigned int)fcomp.comp_status;
  
#line 173 
  fcomp.comp_status = 0;
  
#line 174 
  reinit_completion(& fcomp.comp);
  
#line 175 
  ldv___ldv_spin_lock_84(& bnad->bna_lock);
  
#line 176 
  tmp_0 = bfa_nw_flash_get_attr(& bnad->bna.flash,& drvinfo->flash_attr,& bnad_cb_completion,(void *)(& fcomp));
  
#line 176 
  ret = (int)tmp_0;
  
#line 178 
  if (ret != 0) {
    
#line 179 
    ldv_spin_unlock_irqrestore_85_0(& bnad->bna_lock,flags);
    
#line 180 
    goto out;
  }
  else ;
  
#line 182 
  ldv_spin_unlock_irqrestore_86(& bnad->bna_lock,flags);
  
#line 183 
  wait_for_completion(& fcomp.comp);
  
#line 184 
  drvinfo->flash_status = (unsigned int)fcomp.comp_status;
  out: 
#line 185 
  ;
  
#line 186 
  return ret;
}


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_debugfs_open_drvinfo(struct inode *inode, struct file *file)
{
  int __retres;
  struct bnad_debug_info *drv_info;
  int rc;
  
#line 192 
  struct bnad *bnad = (struct bnad *)inode->i_private;
  
#line 196 
  drv_info = (struct bnad_debug_info *)kzalloc_1(24UL,208U);
  
#line 197 
  if (drv_info == (struct bnad_debug_info *)0) {
    
#line 198 
    __retres = -12;
    
#line 198 
    goto return_label;
  }
  else ;
  
#line 200 
  drv_info->buffer_len = 3472;
  
#line 202 
  drv_info->debug_buffer = (char *)kzalloc_1((unsigned long)drv_info->buffer_len,208U);
  
#line 203 
  if (drv_info->debug_buffer == (char *)0) {
    
#line 204 
    kfree((void const *)drv_info);
    
#line 205 
    drv_info = (struct bnad_debug_info *)0;
    
#line 206 
    __retres = -12;
    
#line 206 
    goto return_label;
  }
  else ;
  
#line 209 
  ldv_mutex_lock_87(& bnad->conf_mutex);
  
#line 210 
  rc = bnad_get_debug_drvinfo(bnad,(void *)drv_info->debug_buffer,(unsigned int)drv_info->buffer_len);
  
#line 212 
  ldv_mutex_unlock_88_0(& bnad->conf_mutex);
  
#line 213 
  if (rc != 0) {
    
#line 214 
    kfree((void const *)drv_info->debug_buffer);
    
#line 215 
    drv_info->debug_buffer = (char *)0;
    
#line 216 
    kfree((void const *)drv_info);
    
#line 217 
    drv_info = (struct bnad_debug_info *)0;
    
#line 218 
    netdev_warn((struct net_device const *)bnad->netdev,"failed to collect drvinfo\n");
    
#line 219 
    __retres = -12;
    
#line 219 
    goto return_label;
  }
  else ;
  
#line 222 
  file->private_data = (void *)drv_info;
  
#line 224 
  __retres = 0;
  return_label: 
#line 224 
                return __retres;
}


#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static loff_t bnad_debugfs_lseek(struct file *file, loff_t offset, int orig)
{
  loff_t __retres;
  loff_t tmp;
  
#line 231 
  struct bnad_debug_info *debug = (struct bnad_debug_info *)file->private_data;
  
#line 233 
  if (debug == (struct bnad_debug_info *)0) {
    
#line 234 
    __retres = -22LL;
    
#line 234 
    goto return_label;
  }
  else ;
  
#line 236 
  tmp = fixed_size_llseek(file,offset,orig,(long long)debug->buffer_len);
  
#line 236 
  __retres = tmp;
  return_label: 
#line 236 
                return __retres;
}


#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static ssize_t bnad_debugfs_read(struct file *file, char *buf, size_t nbytes, loff_t *pos)
{
  ssize_t __retres;
  ssize_t tmp;
  
#line 243 
  struct bnad_debug_info *debug = (struct bnad_debug_info *)file->private_data;
  
#line 245 
  if (debug == (struct bnad_debug_info *)0 || debug->debug_buffer == (char *)0) {
    
#line 246 
    __retres = 0L;
    
#line 246 
    goto return_label;
  }
  else ;
  
#line 248 
  tmp = simple_read_from_buffer((void *)buf,nbytes,pos,(void const *)debug->debug_buffer,(unsigned long)debug->buffer_len);
  
#line 248 
  __retres = tmp;
  return_label: 
#line 248 
                return __retres;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bna_reg_offset_check(struct bfa_ioc *ioc, u32 offset, u32 len)
{
  int __retres;
  u8 area;
  
#line 268 
  area = (unsigned char)((unsigned int)((unsigned char)(offset >> 15)) & 7U);
  
#line 269 
  if ((unsigned int)area == 0U) {
    
#line 271 
    if ((len << 2) + offset > 32768U) {
      
#line 272 
      __retres = 2;
      
#line 272 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 273 
    if ((unsigned int)area == 1U) {
      
#line 275 
      if ((len << 2) + offset > 65536U) {
        
#line 276 
        __retres = 2;
        
#line 276 
        goto return_label;
      }
      else ;
    }
    else {
      unsigned int tmp;
      
#line 279 
      if (((unsigned int)ioc->pcidev.device_id == 20U || (unsigned int)ioc->pcidev.device_id == 33U) || (unsigned int)ioc->pcidev.device_id == 34U) 
        
#line 279 
        tmp = 262143U; else 
#line 279 
                            tmp = 131071U;
      
#line 279 
      ;
      
#line 279 
      if ((len << 2) + offset > tmp) {
        
#line 280 
        __retres = 2;
        
#line 280 
        goto return_label;
      }
      else ;
    }
  
#line 282 
  __retres = 0;
  return_label: 
#line 282 
                return __retres;
}


#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static ssize_t bnad_debugfs_read_regrd(struct file *file, char *buf, size_t nbytes, loff_t *pos)
{
  ssize_t __retres;
  ssize_t rc;
  
#line 289 
  struct bnad_debug_info *regrd_debug = (struct bnad_debug_info *)file->private_data;
  
#line 290 
  struct bnad *bnad = (struct bnad *)regrd_debug->i_private;
  
#line 293 
  if (bnad->regdata == (char *)0) {
    
#line 294 
    __retres = 0L;
    
#line 294 
    goto return_label;
  }
  else ;
  
#line 296 
  rc = simple_read_from_buffer((void *)buf,nbytes,pos,(void const *)bnad->regdata,(unsigned long)bnad->reglen);
  
#line 299 
  if ((unsigned long long)*pos + (unsigned long long)nbytes >= (unsigned long long)bnad->reglen) {
    
#line 300 
    kfree((void const *)bnad->regdata);
    
#line 301 
    bnad->regdata = (char *)0;
    
#line 302 
    bnad->reglen = 0U;
  }
  else ;
  
#line 305 
  __retres = rc;
  return_label: 
#line 305 
                return __retres;
}


#line 309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static ssize_t bnad_debugfs_write_regrd(struct file *file, char const *buf, size_t nbytes, loff_t *ppos)
{
  ssize_t __retres;
  int addr;
  int len;
  int rc;
  int i;
  u32 *regbuf;
  void *rb;
  void *reg_addr;
  unsigned long flags;
  void *kern_buf;
  bool tmp_0;
  unsigned int tmp_2;
  
#line 312 
  struct bnad_debug_info *regrd_debug = (struct bnad_debug_info *)file->private_data;
  
#line 313 
  struct bnad *bnad = (struct bnad *)regrd_debug->i_private;
  
#line 314 
  struct bfa_ioc *ioc = & bnad->bna.ioceth.ioc;
  
#line 322 
  kern_buf = memdup_user((void const *)buf,nbytes);
  
#line 323 
  tmp_0 = IS_ERR((void const *)kern_buf);
  
#line 323 
  if ((int)tmp_0 != 0) {
    ssize_t tmp;
    
#line 324 
    tmp = PTR_ERR((void const *)kern_buf);
    
#line 324 
    __retres = tmp;
    
#line 324 
    goto return_label;
  }
  else ;
  
#line 326 
  rc = sscanf((char const *)kern_buf,"%x:%x",& addr,& len);
  
#line 327 
  if (rc <= 1) {
    
#line 328 
    netdev_warn((struct net_device const *)bnad->netdev,"failed to read user buffer\n");
    
#line 329 
    kfree((void const *)kern_buf);
    
#line 330 
    __retres = -22L;
    
#line 330 
    goto return_label;
  }
  else ;
  
#line 333 
  kfree((void const *)kern_buf);
  
#line 334 
  kfree((void const *)bnad->regdata);
  
#line 335 
  bnad->reglen = 0U;
  
#line 337 
  bnad->regdata = (char *)kzalloc_1((unsigned long)(len << 2),208U);
  
#line 338 
  if (bnad->regdata == (char *)0) {
    
#line 339 
    __retres = -12L;
    
#line 339 
    goto return_label;
  }
  else ;
  
#line 341 
  bnad->reglen = (unsigned int)(len << 2);
  
#line 342 
  rb = ioc->pcidev.pci_bar_kva;
  
#line 343 
  if (((unsigned int)ioc->pcidev.device_id == 20U || (unsigned int)ioc->pcidev.device_id == 33U) || (unsigned int)ioc->pcidev.device_id == 34U) 
    
#line 343 
    tmp_2 = 262143U; else 
#line 343 
                          tmp_2 = 131071U;
  
#line 343 
  addr = (int)(tmp_2 & (unsigned int)addr);
  
#line 346 
  rc = bna_reg_offset_check(ioc,(unsigned int)addr,(unsigned int)len);
  
#line 347 
  if (rc != 0) {
    
#line 348 
    netdev_warn((struct net_device const *)bnad->netdev,"failed reg offset check\n");
    
#line 349 
    kfree((void const *)bnad->regdata);
    
#line 350 
    bnad->regdata = (char *)0;
    
#line 351 
    bnad->reglen = 0U;
    
#line 352 
    __retres = -22L;
    
#line 352 
    goto return_label;
  }
  else ;
  
#line 355 
  reg_addr = rb + addr;
  
#line 356 
  regbuf = (u32 *)bnad->regdata;
  
#line 357 
  ldv___ldv_spin_lock_89(& bnad->bna_lock);
  
#line 358 
  i = 0;
  
#line 358 
  goto ldv_58713;
  ldv_58712: 
#line 359 
  ;
  
#line 359 
  *regbuf = readl((void const volatile *)reg_addr);
  
#line 360 
  regbuf += 1;
  
#line 361 
  reg_addr += 4U;
  
#line 358 
  i += 1;
  ldv_58713: 
#line 359 
  ;
  
#line 358 
  if (i < len) 
#line 360 
               goto ldv_58712; else 
#line 363 
                                    goto ldv_58714;
  ldv_58714: 
#line 364 
  ;
  
#line 363 
  ldv_spin_unlock_irqrestore_90(& bnad->bna_lock,flags);
  
#line 365 
  __retres = (long)nbytes;
  return_label: 
#line 365 
                return __retres;
}


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static ssize_t bnad_debugfs_write_regwr(struct file *file, char const *buf, size_t nbytes, loff_t *ppos)
{
  ssize_t __retres;
  int addr;
  int val;
  int rc;
  void *reg_addr;
  unsigned long flags;
  void *kern_buf;
  bool tmp_0;
  unsigned int tmp_1;
  
#line 372 
  struct bnad_debug_info *debug = (struct bnad_debug_info *)file->private_data;
  
#line 373 
  struct bnad *bnad = (struct bnad *)debug->i_private;
  
#line 374 
  struct bfa_ioc *ioc = & bnad->bna.ioceth.ioc;
  
#line 381 
  kern_buf = memdup_user((void const *)buf,nbytes);
  
#line 382 
  tmp_0 = IS_ERR((void const *)kern_buf);
  
#line 382 
  if ((int)tmp_0 != 0) {
    ssize_t tmp;
    
#line 383 
    tmp = PTR_ERR((void const *)kern_buf);
    
#line 383 
    __retres = tmp;
    
#line 383 
    goto return_label;
  }
  else ;
  
#line 385 
  rc = sscanf((char const *)kern_buf,"%x:%x",& addr,& val);
  
#line 386 
  if (rc <= 1) {
    
#line 387 
    netdev_warn((struct net_device const *)bnad->netdev,"failed to read user buffer\n");
    
#line 388 
    kfree((void const *)kern_buf);
    
#line 389 
    __retres = -22L;
    
#line 389 
    goto return_label;
  }
  else ;
  
#line 391 
  kfree((void const *)kern_buf);
  
#line 393 
  if (((unsigned int)ioc->pcidev.device_id == 20U || (unsigned int)ioc->pcidev.device_id == 33U) || (unsigned int)ioc->pcidev.device_id == 34U) 
    
#line 393 
    tmp_1 = 262143U; else 
#line 393 
                          tmp_1 = 131071U;
  
#line 393 
  addr = (int)(tmp_1 & (unsigned int)addr);
  
#line 396 
  rc = bna_reg_offset_check(ioc,(unsigned int)addr,1U);
  
#line 397 
  if (rc != 0) {
    
#line 398 
    netdev_warn((struct net_device const *)bnad->netdev,"failed reg offset check\n");
    
#line 399 
    __retres = -22L;
    
#line 399 
    goto return_label;
  }
  else ;
  
#line 402 
  reg_addr = ioc->pcidev.pci_bar_kva + addr;
  
#line 403 
  ldv___ldv_spin_lock_91_0(& bnad->bna_lock);
  
#line 404 
  writel((unsigned int)val,(void volatile *)reg_addr);
  
#line 405 
  ldv_spin_unlock_irqrestore_92_0(& bnad->bna_lock,flags);
  
#line 407 
  __retres = (long)nbytes;
  return_label: 
#line 407 
                return __retres;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_debugfs_release(struct inode *inode, struct file *file)
{
  int __retres;
  
#line 413 
  struct bnad_debug_info *debug = (struct bnad_debug_info *)file->private_data;
  
#line 415 
  if (debug == (struct bnad_debug_info *)0) {
    
#line 416 
    __retres = 0;
    
#line 416 
    goto return_label;
  }
  else ;
  
#line 418 
  file->private_data = (void *)0;
  
#line 419 
  kfree((void const *)debug);
  
#line 420 
  __retres = 0;
  return_label: 
#line 420 
                return __retres;
}


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static int bnad_debugfs_buffer_release(struct inode *inode, struct file *file)
{
  int __retres;
  
#line 426 
  struct bnad_debug_info *debug = (struct bnad_debug_info *)file->private_data;
  
#line 428 
  if (debug == (struct bnad_debug_info *)0) {
    
#line 429 
    __retres = 0;
    
#line 429 
    goto return_label;
  }
  else ;
  
#line 431 
  kfree((void const *)debug->debug_buffer);
  
#line 433 
  file->private_data = (void *)0;
  
#line 434 
  kfree((void const *)debug);
  
#line 435 
  debug = (struct bnad_debug_info *)0;
  
#line 436 
  __retres = 0;
  return_label: 
#line 436 
                return __retres;
}


#line 439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct file_operations const bnad_debugfs_op_fwtrc = {.owner = & __this_module, .llseek = & bnad_debugfs_lseek, .read = & bnad_debugfs_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & bnad_debugfs_open_fwtrc, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & bnad_debugfs_buffer_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct file_operations const bnad_debugfs_op_fwsave = {.owner = & __this_module, .llseek = & bnad_debugfs_lseek, .read = & bnad_debugfs_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & bnad_debugfs_open_fwsave, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & bnad_debugfs_buffer_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct file_operations const bnad_debugfs_op_regrd = {.owner = & __this_module, .llseek = & bnad_debugfs_lseek, .read = & bnad_debugfs_read_regrd, .write = & bnad_debugfs_write_regrd, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & bnad_debugfs_open_reg, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & bnad_debugfs_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct file_operations const bnad_debugfs_op_regwr = {.owner = & __this_module, .llseek = & bnad_debugfs_lseek, .read = (ssize_t (*)(struct file *, char *, size_t , loff_t *))0, .write = & bnad_debugfs_write_regwr, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & bnad_debugfs_open_reg, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & bnad_debugfs_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct file_operations const bnad_debugfs_op_drvinfo = {.owner = & __this_module, .llseek = & bnad_debugfs_lseek, .read = & bnad_debugfs_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & bnad_debugfs_open_drvinfo, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & bnad_debugfs_buffer_release, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct bnad_debugfs_entry const bnad_debugfs_files[5U] = {{.name = "fwtrc", .mode = (unsigned short)33060U, .fops = & bnad_debugfs_op_fwtrc}, {.name = "fwsave", .mode = (unsigned short)33060U, .fops = & bnad_debugfs_op_fwsave}, {.name = "regrd", .mode = (unsigned short)33188U, .fops = & bnad_debugfs_op_regrd}, {.name = "regwr", .mode = (unsigned short)32896U, .fops = & bnad_debugfs_op_regwr}, {.name = "drvinfo", .mode = (unsigned short)33060U, .fops = & bnad_debugfs_op_drvinfo}};

#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static struct dentry *bna_debugfs_root;

#line 495  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
static atomic_t bna_debugfs_port_count;

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
void bnad_debugfs_init(struct bnad *bnad)
{
  struct bnad_debugfs_entry const *file;
  char name[64U];
  int i;
  char const *tmp;
  
#line 506 
  if (bna_debugfs_root == (struct dentry *)0) {
    
#line 507 
    bna_debugfs_root = debugfs_create_dir("bna",(struct dentry *)0);
    
#line 508 
    atomic_set(& bna_debugfs_port_count,0);
    
#line 509 
    if (bna_debugfs_root == (struct dentry *)0) {
      
#line 510 
      netdev_warn((struct net_device const *)bnad->netdev,"debugfs root dir creation failed\n");
      
#line 512 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 517 
  tmp = pci_name((struct pci_dev const *)bnad->pcidev);
  
#line 517 
  snprintf((char *)(& name),64UL,"pci_dev:%s",tmp);
  
#line 518 
  if (bnad->port_debugfs_root == (struct dentry *)0) {
    
#line 519 
    bnad->port_debugfs_root = debugfs_create_dir((char const *)(& name),bna_debugfs_root);
    
#line 521 
    if (bnad->port_debugfs_root == (struct dentry *)0) {
      
#line 522 
      netdev_warn((struct net_device const *)bnad->netdev,"debugfs root dir creation failed\n");
      
#line 524 
      goto return_label;
    }
    else ;
    
#line 527 
    atomic_inc_0(& bna_debugfs_port_count);
    
#line 529 
    i = 0;
    
#line 529 
    goto ldv_58762;
    ldv_58761: 
#line 530 
    ;
    
#line 530 
    file = & bnad_debugfs_files[i];
    
#line 531 
    bnad->bnad_dentry_files[i] = ldv_debugfs_create_file_93(file->name,(unsigned short)((int)file->mode),bnad->port_debugfs_root,(void *)bnad,file->fops);
    
#line 537 
    if (bnad->bnad_dentry_files[i] == (struct dentry *)0) {
      
#line 538 
      netdev_warn((struct net_device const *)bnad->netdev,"create %s entry failed\n",file->name);
      
#line 541 
      goto return_label;
    }
    else ;
    
#line 529 
    i += 1;
    ldv_58762: 
#line 530 
    ;
    
#line 529 
    if ((unsigned int)i <= 4U) 
#line 531 
                               goto ldv_58761; else 
#line 534 
                                                    goto ldv_58763;
    ldv_58763: 
#line 535 
    ;
  }
  else ;
  return_label: 
#line 537 
                return;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bnad_debugfs.c"
void bnad_debugfs_uninit(struct bnad *bnad)
{
  int i;
  int tmp;
  
#line 553 
  i = 0;
  
#line 553 
  goto ldv_58772;
  ldv_58771: 
#line 554 
  ;
  
#line 554 
  if (bnad->bnad_dentry_files[i] != (struct dentry *)0) {
    
#line 555 
    ldv_debugfs_remove_94(bnad->bnad_dentry_files[i]);
    
#line 556 
    bnad->bnad_dentry_files[i] = (struct dentry *)0;
  }
  else ;
  
#line 553 
  i += 1;
  ldv_58772: 
#line 554 
  ;
  
#line 553 
  if ((unsigned int)i <= 4U) 
#line 555 
                             goto ldv_58771; else 
#line 558 
                                                  goto ldv_58773;
  ldv_58773: 
#line 559 
  ;
  
#line 561 
  if (bnad->port_debugfs_root != (struct dentry *)0) {
    
#line 562 
    ldv_debugfs_remove_95(bnad->port_debugfs_root);
    
#line 563 
    bnad->port_debugfs_root = (struct dentry *)0;
    
#line 564 
    atomic_dec(& bna_debugfs_port_count);
  }
  else ;
  
#line 568 
  tmp = atomic_read((atomic_t const *)(& bna_debugfs_port_count));
  
#line 568 
  if (tmp == 0) {
    
#line 569 
    ldv_debugfs_remove_96(bna_debugfs_root);
    
#line 570 
    bna_debugfs_root = (struct dentry *)0;
  }
  else ;
  
#line 572 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
struct file_operations *ldv_emg_alias_bnad_debugfs_op_regrd_2 = (struct file_operations *)(& bnad_debugfs_op_regrd);

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
struct file_operations *ldv_emg_alias_bnad_debugfs_op_fwtrc_2 = (struct file_operations *)(& bnad_debugfs_op_fwtrc);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
struct file_operations *ldv_emg_alias_bnad_debugfs_op_fwsave_2 = (struct file_operations *)(& bnad_debugfs_op_fwsave);

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
struct file_operations *ldv_emg_alias_bnad_debugfs_op_drvinfo_2 = (struct file_operations *)(& bnad_debugfs_op_drvinfo);

#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
struct file_operations *ldv_emg_alias_bnad_debugfs_op_regwr_2 = (struct file_operations *)(& bnad_debugfs_op_regwr);

#line 66 
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4);


#line 67 
void ldv_emg_debugfs_remove(struct dentry *arg0);


#line 81  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
long ldv_emg_wrapper_bnad_debugfs_read_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 82 
  tmp = bnad_debugfs_read(arg0,arg1,arg2,arg3);
  
#line 82 
  return tmp;
}


#line 86  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
int ldv_emg_wrapper_bnad_debugfs_release_5(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 87 
  tmp = bnad_debugfs_release(arg0,arg1);
  
#line 87 
  return tmp;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
int ldv_emg_wrapper_bnad_debugfs_open_fwtrc_3(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 92 
  tmp = bnad_debugfs_open_fwtrc(arg0,arg1);
  
#line 92 
  return tmp;
}


#line 96  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
long ldv_emg_wrapper_bnad_debugfs_read_regrd_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 97 
  tmp = bnad_debugfs_read_regrd(arg0,arg1,arg2,arg3);
  
#line 97 
  return tmp;
}


#line 101  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
int ldv_emg_wrapper_bnad_debugfs_open_reg_6(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 102 
  tmp = bnad_debugfs_open_reg(arg0,arg1);
  
#line 102 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
long ldv_emg_wrapper_bnad_debugfs_write_regwr_3(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 107 
  tmp = bnad_debugfs_write_regwr(arg0,(char const *)arg1,arg2,arg3);
  
#line 107 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
int ldv_emg_wrapper_bnad_debugfs_open_fwsave_3(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 112 
  tmp = bnad_debugfs_open_fwsave(arg0,arg1);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
long ldv_emg_wrapper_bnad_debugfs_write_regrd_4(struct file *arg0, char *arg1, unsigned long arg2, long long *arg3)
{
  long tmp;
  
#line 117 
  tmp = bnad_debugfs_write_regrd(arg0,(char const *)arg1,arg2,arg3);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
long long ldv_emg_wrapper_bnad_debugfs_lseek_3(struct file *arg0, long long arg1, int arg2)
{
  long long tmp;
  
#line 122 
  tmp = bnad_debugfs_lseek(arg0,arg1,arg2);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
int ldv_emg_wrapper_bnad_debugfs_open_drvinfo_6(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 127 
  tmp = bnad_debugfs_open_drvinfo(arg0,arg1);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
int ldv_emg_wrapper_bnad_debugfs_buffer_release_5(struct inode *arg0, struct file *arg1)
{
  int tmp;
  
#line 132 
  tmp = bnad_debugfs_buffer_release(arg0,arg1);
  
#line 132 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 147 
  tmp = ldv_ptr_err(ptr);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 155 
  ret = ldv_is_err(ptr);
  
#line 156 
  __retres = (_Bool)(ret != 0L);
  
#line 156 
  return __retres;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void atomic_inc_0(atomic_t *v)
{
  
#line 193 
  ldv_atomic_inc(v);
  
#line 194 
  return;
}


#line 197  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void atomic_dec(atomic_t *v)
{
  
#line 200 
  ldv_atomic_dec(v);
  
#line 201 
  return;
}


#line 683  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 686 
  tmp = ldv_kzalloc(size,flags);
  
#line 686 
  return tmp;
}


#line 833  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_75_0(spinlock_t *ldv_func_arg1)
{
  
#line 837 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 839 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 840 
  return;
}


#line 843  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_76_0(spinlock_t *lock, unsigned long flags)
{
  
#line 847 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 849 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 850 
  return;
}


#line 853  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_77_0(spinlock_t *ldv_func_arg1)
{
  
#line 857 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 859 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 860 
  return;
}


#line 863  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_78_0(spinlock_t *lock, unsigned long flags)
{
  
#line 867 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 869 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 870 
  return;
}


#line 873  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_79_0(spinlock_t *ldv_func_arg1)
{
  
#line 877 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 879 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 880 
  return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_80_0(spinlock_t *lock, unsigned long flags)
{
  
#line 887 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 889 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 897 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 899 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 907 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 909 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_83_0(spinlock_t *lock, unsigned long flags)
{
  
#line 917 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 919 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 920 
  return;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1)
{
  
#line 927 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 929 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 930 
  return;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_85_0(spinlock_t *lock, unsigned long flags)
{
  
#line 937 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 939 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 940 
  return;
}


#line 943  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 947 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 949 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 950 
  return;
}


#line 953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_mutex_lock_87(struct mutex *ldv_func_arg1)
{
  
#line 957 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 958 
  return;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_mutex_unlock_88_0(struct mutex *ldv_func_arg1)
{
  
#line 965 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"conf_mutex_of_bnad");
  
#line 966 
  return;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_89(spinlock_t *ldv_func_arg1)
{
  
#line 973 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 975 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_90(spinlock_t *lock, unsigned long flags)
{
  
#line 983 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 985 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv___ldv_spin_lock_91_0(spinlock_t *ldv_func_arg1)
{
  
#line 993 
  ldv_spin_model_lock((char *)"bna_lock_of_bnad");
  
#line 995 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_spin_unlock_irqrestore_92_0(spinlock_t *lock, unsigned long flags)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"bna_lock_of_bnad");
  
#line 1005 
  spin_unlock_irqrestore_1(lock,flags);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static struct dentry *ldv_debugfs_create_file_93(char const *ldv_func_arg1, umode_t ldv_func_arg2, struct dentry *ldv_func_arg3, void *ldv_func_arg4, struct file_operations const *ldv_func_arg5)
{
  struct dentry *tmp;
  
#line 1013 
  tmp = ldv_emg_debugfs_create_file((char *)ldv_func_arg1,(unsigned short)((int)ldv_func_arg2),ldv_func_arg3,ldv_func_arg4,(struct file_operations *)ldv_func_arg5);
  
#line 1013 
  return tmp;
}


#line 1017  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_debugfs_remove_94(struct dentry *ldv_func_arg1)
{
  
#line 1021 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1022 
  return;
}


#line 1025  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_debugfs_remove_95(struct dentry *ldv_func_arg1)
{
  
#line 1029 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1030 
  return;
}


#line 1033  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bnad_debugfs.c.aux"
static void ldv_debugfs_remove_96(struct dentry *ldv_func_arg1)
{
  
#line 1037 
  ldv_emg_debugfs_remove(ldv_func_arg1);
  
#line 1038 
  return;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timekeeping.h"
void do_gettimeofday(struct timeval *);


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
static int ldv_del_timer_75(struct timer_list *ldv_func_arg1);


#line 176 
static int ldv_del_timer_76(struct timer_list *ldv_func_arg1);


#line 180 
static int ldv_del_timer_77(struct timer_list *ldv_func_arg1);


#line 184 
static int ldv_del_timer_80(struct timer_list *ldv_func_arg1);


#line 188 
static int ldv_del_timer_81(struct timer_list *ldv_func_arg1);


#line 192 
static int ldv_del_timer_83(struct timer_list *ldv_func_arg1);


#line 196 
static int ldv_del_timer_85(struct timer_list *ldv_func_arg1);


#line 200 
static int ldv_del_timer_86(struct timer_list *ldv_func_arg1);


#line 204 
static int ldv_del_timer_87(struct timer_list *ldv_func_arg1);


#line 208 
static int ldv_del_timer_89(struct timer_list *ldv_func_arg1);


#line 212 
static int ldv_del_timer_90(struct timer_list *ldv_func_arg1);


#line 216 
static int ldv_del_timer_92(struct timer_list *ldv_func_arg1);


#line 220 
static int ldv_del_timer_95(struct timer_list *ldv_func_arg1);


#line 225 
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 229 
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 233 
static int ldv_mod_timer_79(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 237 
static int ldv_mod_timer_82(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 241 
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 245 
static int ldv_mod_timer_88(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 249 
static int ldv_mod_timer_91(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 253 
static int ldv_mod_timer_93_0(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 257 
static int ldv_mod_timer_94(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 261 
static int ldv_mod_timer_96(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_cs.h"
__inline static int bfa_sm_to_state(struct bfa_sm_table const *smt, void (*sm)(void *, int ))
{
  int __retres;
  
#line 63 
  int i = 0;
  
#line 65 
  goto ldv_45825;
  ldv_45824: 
#line 66 
  ;
  
#line 66 
  i += 1;
  ldv_45825: 
#line 67 
  ;
  
#line 65 
  if ((smt + i)->sm != (void (*)(void *, int ))0 && (smt + i)->sm != sm) 
    
#line 67 
    goto ldv_45824; else 
#line 70 
                         goto ldv_45826;
  ldv_45826: 
#line 71 
  ;
  
#line 67 
  __retres = (smt + i)->state;
  
#line 67 
  return __retres;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.h"
__inline static void __bfa_alen_set(struct bfi_alen *alen, u32 len, u64 pa)
{
  
#line 73 
  if (0 != 0) 
#line 73 
              alen->al_len = (((len << 24) | ((len << 8) & 16711680U)) | ((len >> 8) & 65280U)) | (len >> 24); else 
                                                                    
#line 73 
                                                                    alen->al_len = __fswab32(len);
  
#line 74 
  __bfa_dma_be_addr_set(& alen->al_addr,pa);
  
#line 75 
  return;
}


#line 255 
void bfa_nw_ioc_mbox_isr(struct bfa_ioc *ioc);


#line 270 
void bfa_nw_ioc_set_ct_hwif(struct bfa_ioc *ioc);


#line 271 
void bfa_nw_ioc_set_ct2_hwif(struct bfa_ioc *ioc);


#line 272 
void bfa_nw_ioc_ct2_poweron(struct bfa_ioc *ioc);


#line 274 
void bfa_nw_ioc_attach(struct bfa_ioc *ioc, void *bfa, struct bfa_ioc_cbfn *cbfn);


#line 277 
void bfa_nw_ioc_detach(struct bfa_ioc *ioc);


#line 278 
void bfa_nw_ioc_pci_init(struct bfa_ioc *ioc, struct bfa_pcidev *pcidev, enum bfi_pcifn_class clscode);


#line 280 
u32 bfa_nw_ioc_meminfo(void);


#line 281 
void bfa_nw_ioc_mem_claim(struct bfa_ioc *ioc, u8 *dm_kva, u64 dm_pa);


#line 282 
void bfa_nw_ioc_enable(struct bfa_ioc *ioc);


#line 283 
void bfa_nw_ioc_disable(struct bfa_ioc *ioc);


#line 285 
void bfa_nw_ioc_error_isr(struct bfa_ioc *ioc);


#line 292 
bool bfa_nw_ioc_sem_get(void *sem_reg);


#line 293 
void bfa_nw_ioc_sem_release(void *sem_reg);


#line 294 
void bfa_nw_ioc_hw_sem_release(struct bfa_ioc *ioc);


#line 295 
void bfa_nw_ioc_fwver_get(struct bfa_ioc *ioc, struct bfi_ioc_image_hdr *fwhdr);


#line 297 
bool bfa_nw_ioc_fwver_cmp(struct bfa_ioc *ioc, struct bfi_ioc_image_hdr *fwhdr);


#line 299 
void bfa_nw_ioc_get_mac(struct bfa_ioc *ioc, u8 *mac);


#line 300 
void bfa_nw_ioc_debug_memclaim(struct bfa_ioc *ioc, void *dbg_fwsave);


#line 315 
u32 *bfa_cb_image_get_chunk(enum bfi_asic_gen asic_gen, u32 off);


#line 316 
u32 bfa_cb_image_get_size(enum bfi_asic_gen asic_gen);


#line 351 
u32 bfa_nw_flash_meminfo(void);


#line 352 
void bfa_nw_flash_attach(struct bfa_flash *flash, struct bfa_ioc *ioc, void *dev);


#line 354 
void bfa_nw_flash_memclaim(struct bfa_flash *flash, u8 *dm_kva, u64 dm_pa);


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool bfa_nw_auto_recover = (_Bool)1;

#line 58 
static void bfa_ioc_hw_sem_init(struct bfa_ioc *ioc);


#line 59 
static void bfa_ioc_hw_sem_get(struct bfa_ioc *ioc);


#line 60 
static void bfa_ioc_hw_sem_get_cancel(struct bfa_ioc *ioc);


#line 61 
static void bfa_ioc_hwinit(struct bfa_ioc *ioc, bool force);


#line 62 
static void bfa_ioc_poll_fwinit(struct bfa_ioc *ioc);


#line 63 
static void bfa_ioc_send_enable(struct bfa_ioc *ioc);


#line 64 
static void bfa_ioc_send_disable(struct bfa_ioc *ioc);


#line 65 
static void bfa_ioc_send_getattr(struct bfa_ioc *ioc);


#line 66 
static void bfa_ioc_hb_monitor(struct bfa_ioc *ioc);


#line 67 
static void bfa_ioc_hb_stop(struct bfa_ioc *ioc);


#line 68 
static void bfa_ioc_reset(struct bfa_ioc *ioc, bool force);


#line 69 
static void bfa_ioc_mbox_poll(struct bfa_ioc *ioc);


#line 70 
static void bfa_ioc_mbox_flush(struct bfa_ioc *ioc);


#line 71 
static void bfa_ioc_recover(struct bfa_ioc *ioc);


#line 72 
static void bfa_ioc_event_notify(struct bfa_ioc *ioc, enum bfa_ioc_event event);


#line 73 
static void bfa_ioc_disable_comp(struct bfa_ioc *ioc);


#line 74 
static void bfa_ioc_lpu_stop(struct bfa_ioc *ioc);


#line 75 
static void bfa_nw_ioc_debug_save_ftrc(struct bfa_ioc *ioc);


#line 76 
static void bfa_ioc_fail_notify(struct bfa_ioc *ioc);


#line 77 
static void bfa_ioc_pf_enabled(struct bfa_ioc *ioc);


#line 78 
static void bfa_ioc_pf_disabled(struct bfa_ioc *ioc);


#line 79 
static void bfa_ioc_pf_failed(struct bfa_ioc *ioc);


#line 80 
static void bfa_ioc_pf_hwfailed(struct bfa_ioc *ioc);


#line 81 
static void bfa_ioc_pf_fwmismatch(struct bfa_ioc *ioc);


#line 82 
static enum bfa_status bfa_ioc_boot(struct bfa_ioc *ioc, enum bfi_fwboot_type boot_type, u32 boot_env);


#line 84 
static u32 bfa_ioc_smem_pgnum(struct bfa_ioc *ioc, u32 fmaddr);


#line 85 
static void bfa_ioc_get_adapter_serial_num(struct bfa_ioc *ioc, char *serial_num);


#line 87 
static void bfa_ioc_get_adapter_fw_ver(struct bfa_ioc *ioc, char *fw_ver);


#line 89 
static void bfa_ioc_get_pci_chip_rev(struct bfa_ioc *ioc, char *chip_rev);


#line 91 
static void bfa_ioc_get_adapter_optrom_ver(struct bfa_ioc *ioc, char *optrom_ver);


#line 93 
static void bfa_ioc_get_adapter_manufacturer(struct bfa_ioc *ioc, char *manufacturer);


#line 95 
static void bfa_ioc_get_adapter_model(struct bfa_ioc *ioc, char *model);


#line 96 
static u64 bfa_ioc_get_pwwn(struct bfa_ioc *ioc);


#line 114 
static void bfa_ioc_sm_uninit(struct bfa_ioc *ioc, enum ioc_event event);


#line 114 
static void bfa_ioc_sm_uninit_entry(struct bfa_ioc *ioc);


#line 115 
static void bfa_ioc_sm_reset(struct bfa_ioc *ioc, enum ioc_event event);


#line 115 
static void bfa_ioc_sm_reset_entry(struct bfa_ioc *ioc);


#line 116 
static void bfa_ioc_sm_enabling(struct bfa_ioc *ioc, enum ioc_event event);


#line 116 
static void bfa_ioc_sm_enabling_entry(struct bfa_ioc *ioc);


#line 117 
static void bfa_ioc_sm_getattr(struct bfa_ioc *ioc, enum ioc_event event);


#line 117 
static void bfa_ioc_sm_getattr_entry(struct bfa_ioc *ioc);


#line 118 
static void bfa_ioc_sm_op(struct bfa_ioc *ioc, enum ioc_event event);


#line 118 
static void bfa_ioc_sm_op_entry(struct bfa_ioc *ioc);


#line 119 
static void bfa_ioc_sm_fail_retry(struct bfa_ioc *ioc, enum ioc_event event);


#line 119 
static void bfa_ioc_sm_fail_retry_entry(struct bfa_ioc *ioc);


#line 120 
static void bfa_ioc_sm_fail(struct bfa_ioc *ioc, enum ioc_event event);


#line 120 
static void bfa_ioc_sm_fail_entry(struct bfa_ioc *ioc);


#line 121 
static void bfa_ioc_sm_disabling(struct bfa_ioc *ioc, enum ioc_event event);


#line 121 
static void bfa_ioc_sm_disabling_entry(struct bfa_ioc *ioc);


#line 122 
static void bfa_ioc_sm_disabled(struct bfa_ioc *ioc, enum ioc_event event);


#line 122 
static void bfa_ioc_sm_disabled_entry(struct bfa_ioc *ioc);


#line 123 
static void bfa_ioc_sm_hwfail(struct bfa_ioc *ioc, enum ioc_event event);


#line 123 
static void bfa_ioc_sm_hwfail_entry(struct bfa_ioc *ioc);


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static struct bfa_sm_table ioc_sm_table[10U] = {{.sm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit), .state = 1, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_reset), .state = 2, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_enabling), .state = 12, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_getattr), .state = 5, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_op), .state = 6, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_fail_retry), .state = 7, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_fail), .state = 8, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_disabling), .state = 9, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_disabled), .state = 10, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_ioc_sm_hwfail), .state = 13, .name = (char *)0}};

#line 141 
static void bfa_iocpf_enable(struct bfa_ioc *ioc);


#line 142 
static void bfa_iocpf_disable(struct bfa_ioc *ioc);


#line 143 
static void bfa_iocpf_fail(struct bfa_ioc *ioc);


#line 144 
static void bfa_iocpf_initfail(struct bfa_ioc *ioc);


#line 145 
static void bfa_iocpf_getattrfail(struct bfa_ioc *ioc);


#line 146 
static void bfa_iocpf_stop(struct bfa_ioc *ioc);


#line 177 
static void bfa_iocpf_sm_reset(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 177 
static void bfa_iocpf_sm_reset_entry(struct bfa_iocpf *iocpf);


#line 178 
static void bfa_iocpf_sm_fwcheck(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 178 
static void bfa_iocpf_sm_fwcheck_entry(struct bfa_iocpf *iocpf);


#line 179 
static void bfa_iocpf_sm_mismatch(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 179 
static void bfa_iocpf_sm_mismatch_entry(struct bfa_iocpf *iocpf);


#line 180 
static void bfa_iocpf_sm_semwait(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 180 
static void bfa_iocpf_sm_semwait_entry(struct bfa_iocpf *iocpf);


#line 181 
static void bfa_iocpf_sm_hwinit(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 181 
static void bfa_iocpf_sm_hwinit_entry(struct bfa_iocpf *iocpf);


#line 182 
static void bfa_iocpf_sm_enabling(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 182 
static void bfa_iocpf_sm_enabling_entry(struct bfa_iocpf *iocpf);


#line 183 
static void bfa_iocpf_sm_ready(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 183 
static void bfa_iocpf_sm_ready_entry(struct bfa_iocpf *iocpf);


#line 184 
static void bfa_iocpf_sm_initfail_sync(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 184 
static void bfa_iocpf_sm_initfail_sync_entry(struct bfa_iocpf *iocpf);


#line 186 
static void bfa_iocpf_sm_initfail(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 186 
static void bfa_iocpf_sm_initfail_entry(struct bfa_iocpf *iocpf);


#line 187 
static void bfa_iocpf_sm_fail_sync(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 187 
static void bfa_iocpf_sm_fail_sync_entry(struct bfa_iocpf *iocpf);


#line 188 
static void bfa_iocpf_sm_fail(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 188 
static void bfa_iocpf_sm_fail_entry(struct bfa_iocpf *iocpf);


#line 189 
static void bfa_iocpf_sm_disabling(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 189 
static void bfa_iocpf_sm_disabling_entry(struct bfa_iocpf *iocpf);


#line 190 
static void bfa_iocpf_sm_disabling_sync(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 190 
static void bfa_iocpf_sm_disabling_sync_entry(struct bfa_iocpf *iocpf);


#line 192 
static void bfa_iocpf_sm_disabled(struct bfa_iocpf *iocpf, enum iocpf_event event);


#line 192 
static void bfa_iocpf_sm_disabled_entry(struct bfa_iocpf *iocpf);


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static struct bfa_sm_table iocpf_sm_table[14U] = {{.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset), .state = 1, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_fwcheck), .state = 9, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_mismatch), .state = 9, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_semwait), .state = 2, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_hwinit), .state = 3, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_enabling), .state = 3, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_ready), .state = 4, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_initfail_sync), .state = 5, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_initfail), .state = 5, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail_sync), .state = 6, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail), .state = 6, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling), .state = 7, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling_sync), .state = 7, .name = (char *)0}, {.sm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabled), .state = 8, .name = (char *)0}};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_uninit_entry(struct bfa_ioc *ioc)
{
  
#line 217 
  return;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_uninit(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 223 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 224 
    ;
    
#line 225 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_reset);
    
#line 225 
    bfa_ioc_sm_reset_entry(ioc);
    
#line 226 
    goto ldv_47107;
    default: 
#line 228 
    ;
    
#line 229 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",229,(unsigned int)event);
  }
  ldv_47107: 
#line 231 
  ;
  
#line 232 
  return;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_reset_entry(struct bfa_ioc *ioc)
{
  
#line 237 
  ioc->iocpf.fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
  
#line 237 
  bfa_iocpf_sm_reset_entry(& ioc->iocpf);
  
#line 238 
  return;
}


#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_reset(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 244 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 245 
    ;
    
#line 246 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_enabling);
    
#line 246 
    bfa_ioc_sm_enabling_entry(ioc);
    
#line 247 
    goto ldv_47117;
    case (unsigned int)3: 
#line 249 
    ;
    
#line 250 
    bfa_ioc_disable_comp(ioc);
    
#line 251 
    goto ldv_47117;
    case (unsigned int)4: 
#line 253 
    ;
    
#line 254 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
    
#line 254 
    bfa_ioc_sm_uninit_entry(ioc);
    
#line 255 
    goto ldv_47117;
    default: 
#line 257 
    ;
    
#line 258 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",258,(unsigned int)event);
  }
  ldv_47117: 
#line 260 
  ;
  
#line 261 
  return;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_enabling_entry(struct bfa_ioc *ioc)
{
  
#line 265 
  bfa_iocpf_enable(ioc);
  
#line 266 
  return;
}


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_enabling(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 274 
  switch ((unsigned int)event) {
    case (unsigned int)5: 
#line 275 
    ;
    
#line 276 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_getattr);
    
#line 276 
    bfa_ioc_sm_getattr_entry(ioc);
    
#line 277 
    goto ldv_47129;
    case (unsigned int)8: 
#line 279 
    ;
    case (unsigned int)10: 
#line 281 
    ;
    
#line 282 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 283 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_fail);
    
#line 283 
    bfa_ioc_sm_fail_entry(ioc);
    
#line 284 
    if (event != (unsigned int)IOC_E_PFFAILED) 
#line 285 
                                               bfa_iocpf_initfail(ioc); else ;
    
#line 286 
    goto ldv_47129;
    case (unsigned int)12: 
#line 288 
    ;
    
#line 289 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 290 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_hwfail);
    
#line 290 
    bfa_ioc_sm_hwfail_entry(ioc);
    
#line 291 
    goto ldv_47129;
    case (unsigned int)3: 
#line 293 
    ;
    
#line 294 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_disabling);
    
#line 294 
    bfa_ioc_sm_disabling_entry(ioc);
    
#line 295 
    goto ldv_47129;
    case (unsigned int)4: 
#line 297 
    ;
    
#line 298 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
    
#line 298 
    bfa_ioc_sm_uninit_entry(ioc);
    
#line 299 
    bfa_iocpf_stop(ioc);
    
#line 300 
    goto ldv_47129;
    case (unsigned int)2: 
#line 302 
    ;
    
#line 303 
    goto ldv_47129;
    default: 
#line 305 
    ;
    
#line 306 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",306,(unsigned int)event);
  }
  ldv_47129: 
#line 308 
  ;
  
#line 309 
  return;
}


#line 312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_getattr_entry(struct bfa_ioc *ioc)
{
  unsigned long tmp;
  
#line 314 
  tmp = msecs_to_jiffies(3000U);
  
#line 314 
  ;
  
#line 314 
  ;
  
#line 314 
  ldv_mod_timer_74(& ioc->ioc_timer,tmp + jiffies);
  
#line 316 
  bfa_ioc_send_getattr(ioc);
  
#line 317 
  return;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_getattr(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 323 
  switch ((unsigned int)event) {
    case (unsigned int)6: 
#line 324 
    ;
    
#line 325 
    ldv_del_timer_75(& ioc->ioc_timer);
    
#line 326 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_op);
    
#line 326 
    bfa_ioc_sm_op_entry(ioc);
    
#line 327 
    goto ldv_47145;
    case (unsigned int)8: 
#line 329 
    ;
    case (unsigned int)10: 
#line 330 
    ;
    
#line 331 
    ldv_del_timer_76(& ioc->ioc_timer);
    case (unsigned int)11: 
#line 333 
    ;
    
#line 334 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 335 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_fail);
    
#line 335 
    bfa_ioc_sm_fail_entry(ioc);
    
#line 336 
    if (event != (unsigned int)IOC_E_PFFAILED) 
#line 337 
                                               bfa_iocpf_getattrfail(ioc); else ;
    
#line 338 
    goto ldv_47145;
    case (unsigned int)3: 
#line 340 
    ;
    
#line 341 
    ldv_del_timer_77(& ioc->ioc_timer);
    
#line 342 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_disabling);
    
#line 342 
    bfa_ioc_sm_disabling_entry(ioc);
    
#line 343 
    goto ldv_47145;
    case (unsigned int)2: 
#line 345 
    ;
    
#line 346 
    goto ldv_47145;
    default: 
#line 348 
    ;
    
#line 349 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",349,(unsigned int)event);
  }
  ldv_47145: 
#line 351 
  ;
  
#line 352 
  return;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_op_entry(struct bfa_ioc *ioc)
{
  
#line 356 
  (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_OK);
  
#line 357 
  bfa_ioc_event_notify(ioc,(enum bfa_ioc_event)BFA_IOC_E_ENABLED);
  
#line 358 
  bfa_ioc_hb_monitor(ioc);
  
#line 359 
  return;
}


#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_op(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 364 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 365 
    ;
    
#line 366 
    goto ldv_47160;
    case (unsigned int)3: 
#line 368 
    ;
    
#line 369 
    bfa_ioc_hb_stop(ioc);
    
#line 370 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_disabling);
    
#line 370 
    bfa_ioc_sm_disabling_entry(ioc);
    
#line 371 
    goto ldv_47160;
    case (unsigned int)8: 
#line 373 
    ;
    case (unsigned int)10: 
#line 374 
    ;
    
#line 375 
    bfa_ioc_hb_stop(ioc);
    case (unsigned int)9: 
#line 377 
    ;
    
#line 378 
    if ((int)ioc->iocpf.auto_recover != 0) {
      
#line 379 
      ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_fail_retry);
      
#line 379 
      bfa_ioc_sm_fail_retry_entry(ioc);
    }
    else {
      
#line 381 
      ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_fail);
      
#line 381 
      bfa_ioc_sm_fail_entry(ioc);
    }
    
#line 383 
    bfa_ioc_fail_notify(ioc);
    
#line 385 
    if (event != (unsigned int)IOC_E_PFFAILED) 
#line 386 
                                               bfa_iocpf_fail(ioc); else ;
    
#line 387 
    goto ldv_47160;
    default: 
#line 389 
    ;
    
#line 390 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",390,(unsigned int)event);
  }
  ldv_47160: 
#line 392 
  ;
  
#line 393 
  return;
}


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_disabling_entry(struct bfa_ioc *ioc)
{
  
#line 397 
  bfa_iocpf_disable(ioc);
  
#line 398 
  return;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_disabling(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 404 
  switch ((unsigned int)event) {
    case (unsigned int)7: 
#line 405 
    ;
    
#line 406 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_disabled);
    
#line 406 
    bfa_ioc_sm_disabled_entry(ioc);
    
#line 407 
    goto ldv_47174;
    case (unsigned int)10: 
#line 409 
    ;
    
#line 415 
    bfa_iocpf_fail(ioc);
    
#line 416 
    goto ldv_47174;
    case (unsigned int)12: 
#line 418 
    ;
    
#line 419 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_hwfail);
    
#line 419 
    bfa_ioc_sm_hwfail_entry(ioc);
    
#line 420 
    bfa_ioc_disable_comp(ioc);
    
#line 421 
    goto ldv_47174;
    default: 
#line 423 
    ;
    
#line 424 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",424,(unsigned int)event);
  }
  ldv_47174: 
#line 426 
  ;
  
#line 427 
  return;
}


#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_disabled_entry(struct bfa_ioc *ioc)
{
  
#line 432 
  bfa_ioc_disable_comp(ioc);
  
#line 433 
  return;
}


#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_disabled(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 438 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 439 
    ;
    
#line 440 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_enabling);
    
#line 440 
    bfa_ioc_sm_enabling_entry(ioc);
    
#line 441 
    goto ldv_47186;
    case (unsigned int)3: 
#line 443 
    ;
    
#line 444 
    (*((ioc->cbfn)->disable_cbfn))((void *)ioc->bfa);
    
#line 445 
    goto ldv_47186;
    case (unsigned int)4: 
#line 447 
    ;
    
#line 448 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
    
#line 448 
    bfa_ioc_sm_uninit_entry(ioc);
    
#line 449 
    bfa_iocpf_stop(ioc);
    
#line 450 
    goto ldv_47186;
    default: 
#line 452 
    ;
    
#line 453 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",453,(unsigned int)event);
  }
  ldv_47186: 
#line 455 
  ;
  
#line 456 
  return;
}


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_fail_retry_entry(struct bfa_ioc *ioc)
{
  
#line 460 
  return;
}


#line 464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_fail_retry(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 466 
  switch ((unsigned int)event) {
    case (unsigned int)5: 
#line 467 
    ;
    
#line 468 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_getattr);
    
#line 468 
    bfa_ioc_sm_getattr_entry(ioc);
    
#line 469 
    goto ldv_47198;
    case (unsigned int)8: 
#line 471 
    ;
    case (unsigned int)10: 
#line 472 
    ;
    
#line 476 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 477 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_fail);
    
#line 477 
    bfa_ioc_sm_fail_entry(ioc);
    
#line 478 
    if (event != (unsigned int)IOC_E_PFFAILED) 
#line 479 
                                               bfa_iocpf_initfail(ioc); else ;
    
#line 480 
    goto ldv_47198;
    case (unsigned int)12: 
#line 482 
    ;
    
#line 483 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 484 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_hwfail);
    
#line 484 
    bfa_ioc_sm_hwfail_entry(ioc);
    
#line 485 
    goto ldv_47198;
    case (unsigned int)2: 
#line 487 
    ;
    
#line 488 
    goto ldv_47198;
    case (unsigned int)3: 
#line 490 
    ;
    
#line 491 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_disabling);
    
#line 491 
    bfa_ioc_sm_disabling_entry(ioc);
    
#line 492 
    goto ldv_47198;
    case (unsigned int)4: 
#line 494 
    ;
    
#line 495 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
    
#line 495 
    bfa_ioc_sm_uninit_entry(ioc);
    
#line 496 
    bfa_iocpf_stop(ioc);
    
#line 497 
    goto ldv_47198;
    default: 
#line 499 
    ;
    
#line 500 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",500,(unsigned int)event);
  }
  ldv_47198: 
#line 502 
  ;
  
#line 503 
  return;
}


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_fail_entry(struct bfa_ioc *ioc)
{
  
#line 507 
  return;
}


#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_fail(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 513 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 514 
    ;
    
#line 515 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 516 
    goto ldv_47214;
    case (unsigned int)3: 
#line 518 
    ;
    
#line 519 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_disabling);
    
#line 519 
    bfa_ioc_sm_disabling_entry(ioc);
    
#line 520 
    goto ldv_47214;
    case (unsigned int)4: 
#line 522 
    ;
    
#line 523 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
    
#line 523 
    bfa_ioc_sm_uninit_entry(ioc);
    
#line 524 
    bfa_iocpf_stop(ioc);
    
#line 525 
    goto ldv_47214;
    case (unsigned int)10: 
#line 527 
    ;
    
#line 529 
    goto ldv_47214;
    default: 
#line 531 
    ;
    
#line 532 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",532,(unsigned int)event);
  }
  ldv_47214: 
#line 534 
  ;
  
#line 535 
  return;
}


#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_hwfail_entry(struct bfa_ioc *ioc)
{
  
#line 539 
  return;
}


#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_sm_hwfail(struct bfa_ioc *ioc, enum ioc_event event)
{
  
#line 545 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 547 
    ;
    
#line 548 
    (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
    
#line 549 
    goto ldv_47227;
    case (unsigned int)3: 
#line 551 
    ;
    
#line 552 
    (*((ioc->cbfn)->disable_cbfn))((void *)ioc->bfa);
    
#line 553 
    goto ldv_47227;
    case (unsigned int)4: 
#line 555 
    ;
    
#line 556 
    ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
    
#line 556 
    bfa_ioc_sm_uninit_entry(ioc);
    
#line 557 
    goto ldv_47227;
    default: 
#line 559 
    ;
    
#line 560 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",560,(unsigned int)event);
  }
  ldv_47227: 
#line 562 
  ;
  
#line 563 
  return;
}


#line 568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_reset_entry(struct bfa_iocpf *iocpf)
{
  
#line 570 
  iocpf->fw_mismatch_notified = (_Bool)0;
  
#line 571 
  iocpf->auto_recover = bfa_nw_auto_recover;
  
#line 572 
  return;
}


#line 576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_reset(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 578 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 579 
    ;
    
#line 580 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fwcheck);
    
#line 580 
    bfa_iocpf_sm_fwcheck_entry(iocpf);
    
#line 581 
    goto ldv_47239;
    case (unsigned int)3: 
#line 583 
    ;
    
#line 584 
    goto ldv_47239;
    default: 
#line 586 
    ;
    
#line 587 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",587,(unsigned int)event);
  }
  ldv_47239: 
#line 589 
  ;
  
#line 590 
  return;
}


#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_fwcheck_entry(struct bfa_iocpf *iocpf)
{
  
#line 595 
  bfa_ioc_hw_sem_init(iocpf->ioc);
  
#line 596 
  bfa_ioc_hw_sem_get(iocpf->ioc);
  
#line 597 
  return;
}


#line 601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_fwcheck(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 603 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 605 
  switch ((unsigned int)event) {
    bool tmp_1;
    case (unsigned int)10: 
#line 606 
    ;
    
#line 607 
    tmp_1 = (*((ioc->ioc_hwif)->ioc_firmware_lock))(ioc);
    
#line 607 
    if ((int)tmp_1 != 0) {
      bool tmp_0;
      
#line 608 
      tmp_0 = (*((ioc->ioc_hwif)->ioc_sync_start))(ioc);
      
#line 608 
      if ((int)tmp_0 != 0) {
        
#line 609 
        (*((ioc->ioc_hwif)->ioc_sync_join))(ioc);
        
#line 610 
        iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_hwinit);
        
#line 610 
        bfa_iocpf_sm_hwinit_entry(iocpf);
      }
      else {
        unsigned long tmp;
        
#line 612 
        (*((ioc->ioc_hwif)->ioc_firmware_unlock))(ioc);
        
#line 613 
        bfa_nw_ioc_hw_sem_release(ioc);
        
#line 614 
        tmp = msecs_to_jiffies(500U);
        
#line 614 
        ;
        
#line 614 
        ;
        
#line 614 
        ldv_mod_timer_78(& ioc->sem_timer,tmp + jiffies);
      }
    }
    else {
      
#line 618 
      bfa_nw_ioc_hw_sem_release(ioc);
      
#line 619 
      iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_mismatch);
      
#line 619 
      bfa_iocpf_sm_mismatch_entry(iocpf);
    }
    
#line 621 
    goto ldv_47251;
    case (unsigned int)12: 
#line 623 
    ;
    
#line 624 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail);
    
#line 624 
    bfa_iocpf_sm_fail_entry(iocpf);
    
#line 625 
    bfa_ioc_pf_hwfailed(ioc);
    
#line 626 
    goto ldv_47251;
    case (unsigned int)2: 
#line 628 
    ;
    
#line 629 
    bfa_ioc_hw_sem_get_cancel(ioc);
    
#line 630 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 630 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 631 
    bfa_ioc_pf_disabled(ioc);
    
#line 632 
    goto ldv_47251;
    case (unsigned int)3: 
#line 634 
    ;
    
#line 635 
    bfa_ioc_hw_sem_get_cancel(ioc);
    
#line 636 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 636 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 637 
    goto ldv_47251;
    default: 
#line 639 
    ;
    
#line 640 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",640,(unsigned int)event);
  }
  ldv_47251: 
#line 642 
  ;
  
#line 643 
  return;
}


#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_mismatch_entry(struct bfa_iocpf *iocpf)
{
  unsigned long tmp;
  
#line 649 
  if (! iocpf->fw_mismatch_notified) 
#line 650 
                                     bfa_ioc_pf_fwmismatch(iocpf->ioc); else ;
  
#line 652 
  iocpf->fw_mismatch_notified = (_Bool)1;
  
#line 653 
  tmp = msecs_to_jiffies(3000U);
  
#line 653 
  ;
  
#line 653 
  ;
  
#line 653 
  ldv_mod_timer_79(& (iocpf->ioc)->iocpf_timer,tmp + jiffies);
  
#line 654 
  return;
}


#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_mismatch(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 661 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 663 
  switch ((unsigned int)event) {
    case (unsigned int)11: 
#line 664 
    ;
    
#line 665 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fwcheck);
    
#line 665 
    bfa_iocpf_sm_fwcheck_entry(iocpf);
    
#line 666 
    goto ldv_47265;
    case (unsigned int)2: 
#line 668 
    ;
    
#line 669 
    ldv_del_timer_80(& ioc->iocpf_timer);
    
#line 670 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 670 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 671 
    bfa_ioc_pf_disabled(ioc);
    
#line 672 
    goto ldv_47265;
    case (unsigned int)3: 
#line 674 
    ;
    
#line 675 
    ldv_del_timer_81(& ioc->iocpf_timer);
    
#line 676 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 676 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 677 
    goto ldv_47265;
    default: 
#line 679 
    ;
    
#line 680 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",680,(unsigned int)event);
  }
  ldv_47265: 
#line 682 
  ;
  
#line 683 
  return;
}


#line 686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_semwait_entry(struct bfa_iocpf *iocpf)
{
  
#line 688 
  bfa_ioc_hw_sem_get(iocpf->ioc);
  
#line 689 
  return;
}


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_semwait(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 695 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 697 
  switch ((unsigned int)event) {
    bool tmp_0;
    case (unsigned int)10: 
#line 698 
    ;
    
#line 699 
    tmp_0 = (*((ioc->ioc_hwif)->ioc_sync_complete))(ioc);
    
#line 699 
    if ((int)tmp_0 != 0) {
      
#line 700 
      (*((ioc->ioc_hwif)->ioc_sync_join))(ioc);
      
#line 701 
      iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_hwinit);
      
#line 701 
      bfa_iocpf_sm_hwinit_entry(iocpf);
    }
    else {
      unsigned long tmp;
      
#line 703 
      bfa_nw_ioc_hw_sem_release(ioc);
      
#line 704 
      tmp = msecs_to_jiffies(500U);
      
#line 704 
      ;
      
#line 704 
      ;
      
#line 704 
      ldv_mod_timer_82(& ioc->sem_timer,tmp + jiffies);
    }
    
#line 707 
    goto ldv_47278;
    case (unsigned int)12: 
#line 709 
    ;
    
#line 710 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail);
    
#line 710 
    bfa_iocpf_sm_fail_entry(iocpf);
    
#line 711 
    bfa_ioc_pf_hwfailed(ioc);
    
#line 712 
    goto ldv_47278;
    case (unsigned int)2: 
#line 714 
    ;
    
#line 715 
    bfa_ioc_hw_sem_get_cancel(ioc);
    
#line 716 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling_sync);
    
#line 716 
    bfa_iocpf_sm_disabling_sync_entry(iocpf);
    
#line 717 
    goto ldv_47278;
    default: 
#line 719 
    ;
    
#line 720 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",720,(unsigned int)event);
  }
  ldv_47278: 
#line 722 
  ;
  
#line 723 
  return;
}


#line 725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_hwinit_entry(struct bfa_iocpf *iocpf)
{
  
#line 727 
  iocpf->poll_time = 0U;
  
#line 728 
  bfa_ioc_reset(iocpf->ioc,(_Bool)0);
  
#line 729 
  return;
}


#line 735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_hwinit(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 737 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 739 
  switch ((unsigned int)event) {
    case (unsigned int)4: 
#line 740 
    ;
    
#line 741 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_enabling);
    
#line 741 
    bfa_iocpf_sm_enabling_entry(iocpf);
    
#line 742 
    goto ldv_47291;
    case (unsigned int)11: 
#line 744 
    ;
    
#line 745 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 746 
    bfa_ioc_pf_failed(ioc);
    
#line 747 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_initfail_sync);
    
#line 747 
    bfa_iocpf_sm_initfail_sync_entry(iocpf);
    
#line 748 
    goto ldv_47291;
    case (unsigned int)2: 
#line 750 
    ;
    
#line 751 
    ldv_del_timer_83(& ioc->iocpf_timer);
    
#line 752 
    (*((ioc->ioc_hwif)->ioc_sync_leave))(ioc);
    
#line 753 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 754 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabled);
    
#line 754 
    bfa_iocpf_sm_disabled_entry(iocpf);
    
#line 755 
    goto ldv_47291;
    default: 
#line 757 
    ;
    
#line 758 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",758,(unsigned int)event);
  }
  ldv_47291: 
#line 760 
  ;
  
#line 761 
  return;
}


#line 763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_enabling_entry(struct bfa_iocpf *iocpf)
{
  unsigned long tmp;
  
#line 765 
  tmp = msecs_to_jiffies(3000U);
  
#line 765 
  ;
  
#line 765 
  ;
  
#line 765 
  ldv_mod_timer_84(& (iocpf->ioc)->iocpf_timer,tmp + jiffies);
  
#line 770 
  (*(((iocpf->ioc)->cbfn)->reset_cbfn))((void *)(iocpf->ioc)->bfa);
  
#line 771 
  bfa_ioc_send_enable(iocpf->ioc);
  
#line 772 
  return;
}


#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_enabling(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 780 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 782 
  switch ((unsigned int)event) {
    case (unsigned int)5: 
#line 783 
    ;
    
#line 784 
    ldv_del_timer_85(& ioc->iocpf_timer);
    
#line 785 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 786 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_ready);
    
#line 786 
    bfa_iocpf_sm_ready_entry(iocpf);
    
#line 787 
    goto ldv_47304;
    case (unsigned int)8: 
#line 789 
    ;
    
#line 790 
    ldv_del_timer_86(& ioc->iocpf_timer);
    case (unsigned int)11: 
#line 794 
    ;
    
#line 795 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 796 
    if (event == (unsigned int)IOCPF_E_TIMEOUT) 
#line 797 
                                                bfa_ioc_pf_failed(ioc); else ;
    
#line 798 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_initfail_sync);
    
#line 798 
    bfa_iocpf_sm_initfail_sync_entry(iocpf);
    
#line 799 
    goto ldv_47304;
    case (unsigned int)2: 
#line 801 
    ;
    
#line 802 
    ldv_del_timer_87(& ioc->iocpf_timer);
    
#line 803 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 804 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling);
    
#line 804 
    bfa_iocpf_sm_disabling_entry(iocpf);
    
#line 805 
    goto ldv_47304;
    default: 
#line 807 
    ;
    
#line 808 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",808,(unsigned int)event);
  }
  ldv_47304: 
#line 810 
  ;
  
#line 811 
  return;
}


#line 813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_ready_entry(struct bfa_iocpf *iocpf)
{
  
#line 815 
  bfa_ioc_pf_enabled(iocpf->ioc);
  
#line 816 
  return;
}


#line 819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_ready(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 821 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 822 
    ;
    
#line 823 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling);
    
#line 823 
    bfa_iocpf_sm_disabling_entry(iocpf);
    
#line 824 
    goto ldv_47317;
    case (unsigned int)9: 
#line 826 
    ;
    
#line 827 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_initfail_sync);
    
#line 827 
    bfa_iocpf_sm_initfail_sync_entry(iocpf);
    
#line 828 
    goto ldv_47317;
    case (unsigned int)7: 
#line 830 
    ;
    
#line 831 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail_sync);
    
#line 831 
    bfa_iocpf_sm_fail_sync_entry(iocpf);
    
#line 832 
    goto ldv_47317;
    default: 
#line 834 
    ;
    
#line 835 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",835,(unsigned int)event);
  }
  ldv_47317: 
#line 837 
  ;
  
#line 838 
  return;
}


#line 840  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_disabling_entry(struct bfa_iocpf *iocpf)
{
  unsigned long tmp;
  
#line 842 
  tmp = msecs_to_jiffies(3000U);
  
#line 842 
  ;
  
#line 842 
  ;
  
#line 842 
  ldv_mod_timer_88(& (iocpf->ioc)->iocpf_timer,tmp + jiffies);
  
#line 844 
  bfa_ioc_send_disable(iocpf->ioc);
  
#line 845 
  return;
}


#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_disabling(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 851 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 853 
  switch ((unsigned int)event) {
    case (unsigned int)6: 
#line 854 
    ;
    
#line 855 
    ldv_del_timer_89(& ioc->iocpf_timer);
    
#line 856 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling_sync);
    
#line 856 
    bfa_iocpf_sm_disabling_sync_entry(iocpf);
    
#line 857 
    goto ldv_47330;
    case (unsigned int)7: 
#line 859 
    ;
    
#line 860 
    ldv_del_timer_90(& ioc->iocpf_timer);
    case (unsigned int)11: 
#line 865 
    ;
    
#line 866 
    (*((ioc->ioc_hwif)->ioc_set_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_FAIL);
    
#line 867 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling_sync);
    
#line 867 
    bfa_iocpf_sm_disabling_sync_entry(iocpf);
    
#line 868 
    goto ldv_47330;
    case (unsigned int)5: 
#line 870 
    ;
    
#line 871 
    goto ldv_47330;
    default: 
#line 873 
    ;
    
#line 874 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",874,(unsigned int)event);
  }
  ldv_47330: 
#line 876 
  ;
  
#line 877 
  return;
}


#line 879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_disabling_sync_entry(struct bfa_iocpf *iocpf)
{
  
#line 881 
  bfa_ioc_hw_sem_get(iocpf->ioc);
  
#line 882 
  return;
}


#line 886  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_disabling_sync(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 888 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 890 
  switch ((unsigned int)event) {
    case (unsigned int)10: 
#line 891 
    ;
    
#line 892 
    (*((ioc->ioc_hwif)->ioc_sync_leave))(ioc);
    
#line 893 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 894 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabled);
    
#line 894 
    bfa_iocpf_sm_disabled_entry(iocpf);
    
#line 895 
    goto ldv_47344;
    case (unsigned int)12: 
#line 897 
    ;
    
#line 898 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail);
    
#line 898 
    bfa_iocpf_sm_fail_entry(iocpf);
    
#line 899 
    bfa_ioc_pf_hwfailed(ioc);
    
#line 900 
    goto ldv_47344;
    case (unsigned int)7: 
#line 902 
    ;
    
#line 903 
    goto ldv_47344;
    default: 
#line 905 
    ;
    
#line 906 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",906,(unsigned int)event);
  }
  ldv_47344: 
#line 908 
  ;
  
#line 909 
  return;
}


#line 912  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_disabled_entry(struct bfa_iocpf *iocpf)
{
  
#line 914 
  bfa_ioc_mbox_flush(iocpf->ioc);
  
#line 915 
  bfa_ioc_pf_disabled(iocpf->ioc);
  
#line 916 
  return;
}


#line 919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_disabled(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 921 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 923 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 924 
    ;
    
#line 925 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_semwait);
    
#line 925 
    bfa_iocpf_sm_semwait_entry(iocpf);
    
#line 926 
    goto ldv_47357;
    case (unsigned int)3: 
#line 928 
    ;
    
#line 929 
    (*((ioc->ioc_hwif)->ioc_firmware_unlock))(ioc);
    
#line 930 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 930 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 931 
    goto ldv_47357;
    default: 
#line 933 
    ;
    
#line 934 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",934,(unsigned int)event);
  }
  ldv_47357: 
#line 936 
  ;
  
#line 937 
  return;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_initfail_sync_entry(struct bfa_iocpf *iocpf)
{
  
#line 941 
  bfa_nw_ioc_debug_save_ftrc(iocpf->ioc);
  
#line 942 
  bfa_ioc_hw_sem_get(iocpf->ioc);
  
#line 943 
  return;
}


#line 947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_initfail_sync(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 949 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 951 
  switch ((unsigned int)event) {
    case (unsigned int)10: 
#line 952 
    ;
    
#line 953 
    (*((ioc->ioc_hwif)->ioc_notify_fail))(ioc);
    
#line 954 
    (*((ioc->ioc_hwif)->ioc_sync_leave))(ioc);
    
#line 955 
    (*((ioc->ioc_hwif)->ioc_set_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_FAIL);
    
#line 956 
    bfa_nw_ioc_hw_sem_release(ioc);
    
#line 957 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_initfail);
    
#line 957 
    bfa_iocpf_sm_initfail_entry(iocpf);
    
#line 958 
    goto ldv_47369;
    case (unsigned int)12: 
#line 960 
    ;
    
#line 961 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail);
    
#line 961 
    bfa_iocpf_sm_fail_entry(iocpf);
    
#line 962 
    bfa_ioc_pf_hwfailed(ioc);
    
#line 963 
    goto ldv_47369;
    case (unsigned int)2: 
#line 965 
    ;
    
#line 966 
    bfa_ioc_hw_sem_get_cancel(ioc);
    
#line 967 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling_sync);
    
#line 967 
    bfa_iocpf_sm_disabling_sync_entry(iocpf);
    
#line 968 
    goto ldv_47369;
    case (unsigned int)3: 
#line 970 
    ;
    
#line 971 
    bfa_ioc_hw_sem_get_cancel(ioc);
    
#line 972 
    (*((ioc->ioc_hwif)->ioc_firmware_unlock))(ioc);
    
#line 973 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 973 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 974 
    goto ldv_47369;
    case (unsigned int)7: 
#line 976 
    ;
    
#line 977 
    goto ldv_47369;
    default: 
#line 979 
    ;
    
#line 980 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",980,(unsigned int)event);
  }
  ldv_47369: 
#line 982 
  ;
  
#line 983 
  return;
}


#line 985  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_initfail_entry(struct bfa_iocpf *iocpf)
{
  
#line 987 
  return;
}


#line 991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_initfail(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 993 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 995 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 996 
    ;
    
#line 997 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabled);
    
#line 997 
    bfa_iocpf_sm_disabled_entry(iocpf);
    
#line 998 
    goto ldv_47384;
    case (unsigned int)3: 
#line 1000 
    ;
    
#line 1001 
    (*((ioc->ioc_hwif)->ioc_firmware_unlock))(ioc);
    
#line 1002 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_reset);
    
#line 1002 
    bfa_iocpf_sm_reset_entry(iocpf);
    
#line 1003 
    goto ldv_47384;
    default: 
#line 1005 
    ;
    
#line 1006 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",1006,(unsigned int)event);
  }
  ldv_47384: 
#line 1008 
  ;
  
#line 1009 
  return;
}


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_fail_sync_entry(struct bfa_iocpf *iocpf)
{
  
#line 1016 
  bfa_ioc_lpu_stop(iocpf->ioc);
  
#line 1021 
  bfa_ioc_mbox_flush(iocpf->ioc);
  
#line 1022 
  bfa_ioc_hw_sem_get(iocpf->ioc);
  
#line 1023 
  return;
}


#line 1027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_fail_sync(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 1029 
  struct bfa_ioc *ioc = iocpf->ioc;
  
#line 1031 
  switch ((unsigned int)event) {
    case (unsigned int)10: 
#line 1032 
    ;
    
#line 1033 
    (*((ioc->ioc_hwif)->ioc_sync_ack))(ioc);
    
#line 1034 
    (*((ioc->ioc_hwif)->ioc_notify_fail))(ioc);
    
#line 1035 
    if (! iocpf->auto_recover) {
      
#line 1036 
      (*((ioc->ioc_hwif)->ioc_sync_leave))(ioc);
      
#line 1037 
      (*((ioc->ioc_hwif)->ioc_set_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_FAIL);
      
#line 1038 
      bfa_nw_ioc_hw_sem_release(ioc);
      
#line 1039 
      iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail);
      
#line 1039 
      bfa_iocpf_sm_fail_entry(iocpf);
    }
    else {
      bool tmp;
      
#line 1041 
      tmp = (*((ioc->ioc_hwif)->ioc_sync_complete))(ioc);
      
#line 1041 
      if ((int)tmp != 0) {
        
#line 1042 
        iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_hwinit);
        
#line 1042 
        bfa_iocpf_sm_hwinit_entry(iocpf);
      }
      else {
        
#line 1044 
        bfa_nw_ioc_hw_sem_release(ioc);
        
#line 1045 
        iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_semwait);
        
#line 1045 
        bfa_iocpf_sm_semwait_entry(iocpf);
      }
    }
    
#line 1048 
    goto ldv_47396;
    case (unsigned int)12: 
#line 1050 
    ;
    
#line 1051 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_fail);
    
#line 1051 
    bfa_iocpf_sm_fail_entry(iocpf);
    
#line 1052 
    bfa_ioc_pf_hwfailed(ioc);
    
#line 1053 
    goto ldv_47396;
    case (unsigned int)2: 
#line 1055 
    ;
    
#line 1056 
    bfa_ioc_hw_sem_get_cancel(ioc);
    
#line 1057 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabling_sync);
    
#line 1057 
    bfa_iocpf_sm_disabling_sync_entry(iocpf);
    
#line 1058 
    goto ldv_47396;
    case (unsigned int)7: 
#line 1060 
    ;
    
#line 1061 
    goto ldv_47396;
    default: 
#line 1063 
    ;
    
#line 1064 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",1064,(unsigned int)event);
  }
  ldv_47396: 
#line 1066 
  ;
  
#line 1067 
  return;
}


#line 1069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_fail_entry(struct bfa_iocpf *iocpf)
{
  
#line 1071 
  return;
}


#line 1075  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_sm_fail(struct bfa_iocpf *iocpf, enum iocpf_event event)
{
  
#line 1077 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1078 
    ;
    
#line 1079 
    iocpf->fsm = (void (*)(void *, int ))(& bfa_iocpf_sm_disabled);
    
#line 1079 
    bfa_iocpf_sm_disabled_entry(iocpf);
    
#line 1080 
    goto ldv_47409;
    default: 
#line 1082 
    ;
    
#line 1083 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",1083,(unsigned int)event);
  }
  ldv_47409: 
#line 1085 
  ;
  
#line 1086 
  return;
}


#line 1091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_event_notify(struct bfa_ioc *ioc, enum bfa_ioc_event event)
{
  struct bfa_ioc_notify *notify;
  struct bfa_ioc_notify *tmp;
  struct bfa_ioc_notify *tmp_0;
  {
    
#line 1095 
    struct list_head const *__mptr = (struct list_head const *)ioc->notify_q.next;
    
#line 1095 
    tmp = (struct bfa_ioc_notify *)__mptr;
  }
  
#line 1095 
  notify = tmp;
  
#line 1095 
  goto ldv_47421;
  ldv_47420: 
#line 1096 
  ;
  
#line 1096 
  (*(notify->cbfn))(notify->cbarg,event);
  {
    
#line 1095 
    struct list_head const *__mptr_0 = (struct list_head const *)notify->qe.next;
    
#line 1095 
    tmp_0 = (struct bfa_ioc_notify *)__mptr_0;
  }
  
#line 1095 
  notify = tmp_0;
  ldv_47421: 
#line 1097 
  ;
  
#line 1095 
  if (& notify->qe != & ioc->notify_q) 
#line 1097 
                                       goto ldv_47420; else 
#line 1100 
                                                            goto ldv_47422;
  ldv_47422: 
#line 1101 
  ;
  
#line 1102 
  return;
}


#line 1100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_disable_comp(struct bfa_ioc *ioc)
{
  
#line 1102 
  (*((ioc->cbfn)->disable_cbfn))((void *)ioc->bfa);
  
#line 1103 
  bfa_ioc_event_notify(ioc,(enum bfa_ioc_event)BFA_IOC_E_DISABLED);
  
#line 1104 
  return;
}


#line 1107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
bool bfa_nw_ioc_sem_get(void *sem_reg)
{
  bool __retres;
  u32 r32;
  
#line 1110 
  int cnt = 0;
  
#line 1113 
  r32 = readl((void const volatile *)sem_reg);
  
#line 1115 
  goto ldv_47432;
  ldv_47431: 
#line 1116 
  ;
  
#line 1116 
  cnt += 1;
  
#line 1117 
  __const_udelay(8590UL);
  
#line 1118 
  r32 = readl((void const volatile *)sem_reg);
  ldv_47432: 
#line 1119 
  ;
  
#line 1115 
  if ((r32 & 1U) != 0U && cnt <= 2999) 
#line 1117 
                                       goto ldv_47431; else 
#line 1120 
                                                            goto ldv_47433;
  ldv_47433: 
#line 1121 
  ;
  
#line 1121 
  if ((r32 & 1U) == 0U) {
    
#line 1122 
    __retres = (_Bool)1;
    
#line 1122 
    goto return_label;
  }
  else ;
  
#line 1124 
  __retres = (_Bool)0;
  return_label: 
#line 1124 
                return __retres;
}


#line 1128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_sem_release(void *sem_reg)
{
  
#line 1130 
  readl((void const volatile *)sem_reg);
  
#line 1131 
  writel(1U,(void volatile *)sem_reg);
  
#line 1132 
  return;
}


#line 1136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_fwver_clear(struct bfa_ioc *ioc)
{
  u32 pgnum;
  u32 pgoff;
  int i;
  
#line 1138 
  u32 loff = 0U;
  
#line 1141 
  pgnum = ioc->ioc_regs.smem_pg0 + (loff >> 15);
  
#line 1142 
  pgoff = loff & 32767U;
  
#line 1143 
  writel(pgnum,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  
#line 1145 
  i = 0;
  
#line 1145 
  goto ldv_47445;
  ldv_47444: 
#line 1146 
  ;
  
#line 1146 
  writel(0U,(void volatile *)(ioc->ioc_regs.smem_page_start + loff));
  
#line 1147 
  loff += 4U;
  
#line 1145 
  i += 1;
  ldv_47445: 
#line 1146 
  ;
  
#line 1145 
  if ((unsigned int)i <= 11U) 
#line 1147 
                              goto ldv_47444; else 
#line 1150 
                                                   goto ldv_47446;
  ldv_47446: 
#line 1151 
  ;
  
#line 1152 
  return;
}


#line 1153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_hw_sem_init(struct bfa_ioc *ioc)
{
  struct bfi_ioc_image_hdr fwhdr;
  u32 fwstate;
  u32 r32;
  enum bfi_ioc_state tmp;
  int tmp_1;
  
#line 1159 
  r32 = readl((void const volatile *)ioc->ioc_regs.ioc_init_sem_reg);
  
#line 1160 
  goto ldv_47454;
  ldv_47453: 
#line 1161 
  ;
  
#line 1161 
  __const_udelay(85900UL);
  
#line 1162 
  r32 = readl((void const volatile *)ioc->ioc_regs.ioc_init_sem_reg);
  ldv_47454: 
#line 1163 
  ;
  
#line 1160 
  if ((r32 & 1U) != 0U) 
#line 1162 
                        goto ldv_47453; else 
#line 1165 
                                             goto ldv_47455;
  ldv_47455: 
#line 1166 
  ;
  
#line 1165 
  tmp = (*((ioc->ioc_hwif)->ioc_get_fwstate))(ioc);
  
#line 1165 
  fwstate = (unsigned int)tmp;
  
#line 1166 
  if (fwstate == 0U) {
    
#line 1167 
    writel(1U,(void volatile *)ioc->ioc_regs.ioc_init_sem_reg);
    
#line 1168 
    goto return_label;
  }
  else ;
  
#line 1171 
  bfa_nw_ioc_fwver_get(ioc,& fwhdr);
  
#line 1173 
  if (0 != 0) 
#line 1173 
              tmp_1 = ((((fwhdr.exec << 24) | ((fwhdr.exec << 8) & 16711680U)) | ((fwhdr.exec >> 8) & 65280U)) | (fwhdr.exec >> 24)) == 0U;
  else {
    __u32 tmp_0;
    
#line 1173 
    tmp_0 = __fswab32(fwhdr.exec);
    
#line 1173 
    tmp_1 = tmp_0 == 0U;
  }
  
#line 1173 
  if (tmp_1) {
    
#line 1174 
    writel(1U,(void volatile *)ioc->ioc_regs.ioc_init_sem_reg);
    
#line 1175 
    goto return_label;
  }
  else ;
  
#line 1178 
  bfa_ioc_fwver_clear(ioc);
  
#line 1179 
  (*((ioc->ioc_hwif)->ioc_set_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_UNINIT);
  
#line 1180 
  (*((ioc->ioc_hwif)->ioc_set_alt_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_UNINIT);
  
#line 1185 
  readl((void const volatile *)ioc->ioc_regs.ioc_sem_reg);
  
#line 1186 
  writel(1U,(void volatile *)ioc->ioc_regs.ioc_sem_reg);
  
#line 1189 
  writel(1U,(void volatile *)ioc->ioc_regs.ioc_init_sem_reg);
  return_label: 
#line 1190 
                return;
}


#line 1193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_hw_sem_get(struct bfa_ioc *ioc)
{
  u32 r32;
  unsigned long tmp;
  
#line 1201 
  r32 = readl((void const volatile *)ioc->ioc_regs.ioc_sem_reg);
  
#line 1202 
  if (r32 == 4294967295U) {
    
#line 1203 
    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),12);
    
#line 1204 
    goto return_label;
  }
  else ;
  
#line 1206 
  if ((r32 & 1U) == 0U) {
    
#line 1207 
    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),10);
    
#line 1208 
    goto return_label;
  }
  else ;
  
#line 1211 
  tmp = msecs_to_jiffies(500U);
  
#line 1211 
  ;
  
#line 1211 
  ;
  
#line 1211 
  ldv_mod_timer_91(& ioc->sem_timer,tmp + jiffies);
  return_label: 
#line 1212 
                return;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_hw_sem_release(struct bfa_ioc *ioc)
{
  
#line 1218 
  writel(1U,(void volatile *)ioc->ioc_regs.ioc_sem_reg);
  
#line 1219 
  return;
}


#line 1222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_hw_sem_get_cancel(struct bfa_ioc *ioc)
{
  
#line 1224 
  ldv_del_timer_92(& ioc->sem_timer);
  
#line 1225 
  return;
}


#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_lmem_init(struct bfa_ioc *ioc)
{
  u32 pss_ctl;
  int i;
  
#line 1235 
  pss_ctl = readl((void const volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1236 
  pss_ctl &= 4294966783U;
  
#line 1237 
  pss_ctl |= 256U;
  
#line 1242 
  pss_ctl |= 196608U;
  
#line 1243 
  writel(pss_ctl,(void volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1248 
  i = 0;
  ldv_47471: 
#line 1249 
  ;
  
#line 1250 
  pss_ctl = readl((void const volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1251 
  i += 1;
  
#line 1252 
  if ((pss_ctl & 4096U) == 0U && i <= 9999) 
#line 1254 
                                            goto ldv_47471; else 
#line 1257 
                                                                 goto ldv_47472;
  ldv_47472: 
#line 1258 
  ;
  
#line 1258 
  if ((long)((pss_ctl & 4096U) == 0U) != 0L) {
    
#line 1260 
    ldv_inline_asm();
    
#line 1258 
    ;
  }
  else ;
  
#line 1260 
  pss_ctl &= 4294962943U;
  
#line 1261 
  writel(pss_ctl,(void volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1262 
  return;
}


#line 1265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_lpu_start(struct bfa_ioc *ioc)
{
  u32 pss_ctl;
  
#line 1272 
  pss_ctl = readl((void const volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1273 
  pss_ctl &= 4294967294U;
  
#line 1275 
  writel(pss_ctl,(void volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1276 
  return;
}


#line 1279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_lpu_stop(struct bfa_ioc *ioc)
{
  u32 pss_ctl;
  
#line 1286 
  pss_ctl = readl((void const volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1287 
  pss_ctl |= 3U;
  
#line 1289 
  writel(pss_ctl,(void volatile *)ioc->ioc_regs.pss_ctl_reg);
  
#line 1290 
  return;
}


#line 1294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_fwver_get(struct bfa_ioc *ioc, struct bfi_ioc_image_hdr *fwhdr)
{
  u32 pgnum;
  int i;
  __u32 tmp_0;
  unsigned int tmp;
  
#line 1297 
  u32 loff = 0U;
  
#line 1299 
  u32 *fwsig = (u32 *)fwhdr;
  
#line 1301 
  pgnum = bfa_ioc_smem_pgnum(ioc,loff);
  
#line 1302 
  writel(pgnum,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  
#line 1304 
  i = 0;
  
#line 1304 
  goto ldv_47490;
  ldv_47489: 
#line 1305 
  ;
  
#line 1307 
  tmp = readl((void const volatile *)(ioc->ioc_regs.smem_page_start + loff));
  
#line 1307 
  tmp_0 = __fswab32(tmp);
  
#line 1306 
  *(fwsig + i) = tmp_0;
  
#line 1308 
  loff += 4U;
  
#line 1305 
  i += 1;
  ldv_47490: 
#line 1306 
  ;
  
#line 1304 
  if ((unsigned int)i <= 11U) 
#line 1306 
                              goto ldv_47489; else 
#line 1309 
                                                   goto ldv_47491;
  ldv_47491: 
#line 1310 
  ;
  
#line 1311 
  return;
}


#line 1313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool bfa_ioc_fwver_md5_check(struct bfi_ioc_image_hdr *fwhdr_1, struct bfi_ioc_image_hdr *fwhdr_2)
{
  bool __retres;
  int i;
  
#line 1318 
  i = 0;
  
#line 1318 
  goto ldv_47498;
  ldv_47497: 
#line 1319 
  ;
  
#line 1319 
  if (fwhdr_1->md5sum[i] != fwhdr_2->md5sum[i]) {
    
#line 1320 
    __retres = (_Bool)0;
    
#line 1320 
    goto return_label;
  }
  else ;
  
#line 1318 
  i += 1;
  ldv_47498: 
#line 1319 
  ;
  
#line 1318 
  if (i <= 3) 
#line 1320 
              goto ldv_47497; else 
#line 1323 
                                   goto ldv_47499;
  ldv_47499: 
#line 1324 
  ;
  
#line 1323 
  __retres = (_Bool)1;
  return_label: 
#line 1323 
                return __retres;
}


#line 1330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool bfa_ioc_fw_ver_compatible(struct bfi_ioc_image_hdr *drv_fwhdr, struct bfi_ioc_image_hdr *fwhdr_to_cmp)
{
  bool __retres;
  
#line 1333 
  if (drv_fwhdr->signature != fwhdr_to_cmp->signature) {
    
#line 1334 
    __retres = (_Bool)0;
    
#line 1334 
    goto return_label;
  }
  else ;
  
#line 1335 
  if ((int)drv_fwhdr->fwver.major != (int)fwhdr_to_cmp->fwver.major) {
    
#line 1336 
    __retres = (_Bool)0;
    
#line 1336 
    goto return_label;
  }
  else ;
  
#line 1337 
  if ((int)drv_fwhdr->fwver.minor != (int)fwhdr_to_cmp->fwver.minor) {
    
#line 1338 
    __retres = (_Bool)0;
    
#line 1338 
    goto return_label;
  }
  else ;
  
#line 1339 
  if ((int)drv_fwhdr->fwver.maint != (int)fwhdr_to_cmp->fwver.maint) {
    
#line 1340 
    __retres = (_Bool)0;
    
#line 1340 
    goto return_label;
  }
  else ;
  
#line 1341 
  if (((int)drv_fwhdr->fwver.patch == (int)fwhdr_to_cmp->fwver.patch && (int)drv_fwhdr->fwver.phase == (int)fwhdr_to_cmp->fwver.phase) && (int)drv_fwhdr->fwver.build == (int)fwhdr_to_cmp->fwver.build) {
    bool tmp;
    
#line 1344 
    tmp = bfa_ioc_fwver_md5_check(drv_fwhdr,fwhdr_to_cmp);
    
#line 1344 
    __retres = tmp;
    
#line 1344 
    goto return_label;
  }
  else ;
  
#line 1346 
  __retres = (_Bool)1;
  return_label: 
#line 1346 
                return __retres;
}


#line 1350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool bfa_ioc_flash_fwver_valid(struct bfi_ioc_image_hdr *flash_fwhdr)
{
  bool __retres;
  
#line 1352 
  if ((unsigned int)flash_fwhdr->fwver.major + 255U > 253U) {
    
#line 1353 
    __retres = (_Bool)0;
    
#line 1353 
    goto return_label;
  }
  else ;
  
#line 1355 
  __retres = (_Bool)1;
  return_label: 
#line 1355 
                return __retres;
}


#line 1359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool fwhdr_is_ga(struct bfi_ioc_image_hdr *fwhdr)
{
  bool __retres;
  
#line 1361 
  if ((unsigned int)fwhdr->fwver.phase == 0U && (unsigned int)fwhdr->fwver.build == 0U) {
    
#line 1363 
    __retres = (_Bool)0;
    
#line 1363 
    goto return_label;
  }
  else ;
  
#line 1365 
  __retres = (_Bool)1;
  return_label: 
#line 1365 
                return __retres;
}


#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfi_ioc_img_ver_cmp bfa_ioc_fw_ver_patch_cmp(struct bfi_ioc_image_hdr *base_fwhdr, struct bfi_ioc_image_hdr *fwhdr_to_cmp)
{
  enum bfi_ioc_img_ver_cmp __retres;
  int tmp_0;
  bool tmp;
  bool tmp_3;
  
#line 1373 
  tmp = bfa_ioc_fw_ver_compatible(base_fwhdr,fwhdr_to_cmp);
  
#line 1373 
  if (tmp) 
#line 1373 
           tmp_0 = 0; else 
#line 1373 
                           tmp_0 = 1;
  
#line 1373 
  if (tmp_0) {
    
#line 1374 
    __retres = BFI_IOC_IMG_VER_INCOMP;
    
#line 1374 
    goto return_label;
  }
  else ;
  
#line 1376 
  if ((int)fwhdr_to_cmp->fwver.patch > (int)base_fwhdr->fwver.patch) {
    
#line 1377 
    __retres = BFI_IOC_IMG_VER_BETTER;
    
#line 1377 
    goto return_label;
  }
  else 
    
#line 1378 
    if ((int)fwhdr_to_cmp->fwver.patch < (int)base_fwhdr->fwver.patch) {
      
#line 1379 
      __retres = BFI_IOC_IMG_VER_OLD;
      
#line 1379 
      goto return_label;
    }
    else ;
  
#line 1384 
  tmp_3 = fwhdr_is_ga(base_fwhdr);
  
#line 1384 
  if ((int)tmp_3 != 0) {
    bool tmp_1;
    
#line 1385 
    tmp_1 = fwhdr_is_ga(fwhdr_to_cmp);
    
#line 1385 
    if ((int)tmp_1 != 0) {
      
#line 1386 
      __retres = BFI_IOC_IMG_VER_SAME;
      
#line 1386 
      goto return_label;
    }
    else {
      
#line 1388 
      __retres = BFI_IOC_IMG_VER_OLD;
      
#line 1388 
      goto return_label;
    }
  }
  else {
    bool tmp_2;
    
#line 1390 
    tmp_2 = fwhdr_is_ga(fwhdr_to_cmp);
    
#line 1390 
    if ((int)tmp_2 != 0) {
      
#line 1391 
      __retres = BFI_IOC_IMG_VER_BETTER;
      
#line 1391 
      goto return_label;
    }
    else ;
  }
  
#line 1393 
  if ((int)fwhdr_to_cmp->fwver.phase > (int)base_fwhdr->fwver.phase) {
    
#line 1394 
    __retres = BFI_IOC_IMG_VER_BETTER;
    
#line 1394 
    goto return_label;
  }
  else 
    
#line 1395 
    if ((int)fwhdr_to_cmp->fwver.phase < (int)base_fwhdr->fwver.phase) {
      
#line 1396 
      __retres = BFI_IOC_IMG_VER_OLD;
      
#line 1396 
      goto return_label;
    }
    else ;
  
#line 1398 
  if ((int)fwhdr_to_cmp->fwver.build > (int)base_fwhdr->fwver.build) {
    
#line 1399 
    __retres = BFI_IOC_IMG_VER_BETTER;
    
#line 1399 
    goto return_label;
  }
  else 
    
#line 1400 
    if ((int)fwhdr_to_cmp->fwver.build < (int)base_fwhdr->fwver.build) {
      
#line 1401 
      __retres = BFI_IOC_IMG_VER_OLD;
      
#line 1401 
      goto return_label;
    }
    else ;
  
#line 1406 
  __retres = BFI_IOC_IMG_VER_SAME;
  return_label: 
#line 1406 
                return __retres;
}


#line 1508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_set_cmd(void *pci_bar, u8 wr_cnt, u8 rd_cnt, u8 ad_cnt, u8 op)
{
  union bfa_flash_cmd_reg cmd;
  
#line 1513 
  cmd.i = 0U;
  
#line 1514 
  cmd.r.act = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1515 
  cmd.r.write_cnt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(9))))wr_cnt;
  
#line 1516 
  cmd.r.read_cnt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(9))))rd_cnt;
  
#line 1517 
  cmd.r.addr_cnt = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))ad_cnt;
  
#line 1518 
  cmd.r.cmd = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))op;
  
#line 1519 
  writel(cmd.i,(void volatile *)(pci_bar + 118784U));
  
#line 1520 
  return;
}


#line 1523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_set_addr(void *pci_bar, u32 address)
{
  union bfa_flash_addr_reg addr;
  
#line 1527 
  addr.r.addr = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(24))))address;
  
#line 1528 
  addr.r.dummy = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U;
  
#line 1529 
  writel(addr.i,(void volatile *)(pci_bar + 118788U));
  
#line 1530 
  return;
}


#line 1533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static int bfa_flash_cmd_act_check(void *pci_bar)
{
  int __retres;
  union bfa_flash_cmd_reg cmd;
  
#line 1537 
  cmd.i = readl((void const volatile *)(pci_bar + 118784U));
  
#line 1539 
  if ((unsigned int)*((unsigned char *)(& cmd.r) + 3UL) != 0U) {
    
#line 1540 
    __retres = -5;
    
#line 1540 
    goto return_label;
  }
  else ;
  
#line 1542 
  __retres = 0;
  return_label: 
#line 1542 
                return __retres;
}


#line 1547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static u32 bfa_flash_fifo_flush(void *pci_bar)
{
  u32 __retres;
  u32 i;
  u32 t;
  union bfa_flash_dev_status_reg dev_status;
  
#line 1553 
  dev_status.i = readl((void const volatile *)(pci_bar + 118804U));
  
#line 1555 
  if ((unsigned int)*((unsigned short *)(& dev_status.r) + 0UL) == 0U) {
    
#line 1556 
    __retres = 0U;
    
#line 1556 
    goto return_label;
  }
  else ;
  
#line 1559 
  i = 0U;
  
#line 1559 
  goto ldv_47584;
  ldv_47583: 
#line 1560 
  ;
  
#line 1560 
  t = readl((void const volatile *)(pci_bar + 118800U));
  
#line 1559 
  i += 1U;
  ldv_47584: 
#line 1560 
  ;
  
#line 1559 
  if ((unsigned int)dev_status.r.fifo_cnt > i) 
#line 1561 
                                               goto ldv_47583; else 
#line 1564 
                                                                    goto ldv_47585;
  ldv_47585: 
#line 1565 
  ;
  
#line 1563 
  i = 0U;
  
#line 1563 
  goto ldv_47588;
  ldv_47587: 
#line 1564 
  ;
  
#line 1564 
  dev_status.i = readl((void const volatile *)(pci_bar + 118804U));
  
#line 1565 
  if ((unsigned int)*((unsigned short *)(& dev_status.r) + 0UL) == 0U) 
    
#line 1566 
    goto ldv_47586; else ;
  
#line 1563 
  i += 1U;
  ldv_47588: 
#line 1564 
  ;
  
#line 1563 
  if (i <= 9999U) 
#line 1565 
                  goto ldv_47587; else 
#line 1568 
                                       goto ldv_47586;
  ldv_47586: 
#line 1569 
  ;
  
#line 1569 
  if ((unsigned int)*((unsigned short *)(& dev_status.r) + 0UL) != 0U) {
    
#line 1570 
    __retres = 4294967290U;
    
#line 1570 
    goto return_label;
  }
  else ;
  
#line 1572 
  __retres = 0U;
  return_label: 
#line 1572 
                return __retres;
}


#line 1577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static u32 bfa_flash_status_read(void *pci_bar)
{
  u32 __retres;
  union bfa_flash_dev_status_reg dev_status;
  u32 status;
  u32 ret_status;
  int i;
  int tmp;
  
#line 1584 
  status = bfa_flash_fifo_flush(pci_bar);
  
#line 1588 
  bfa_flash_set_cmd(pci_bar,(unsigned char)0,(unsigned char)4,(unsigned char)0,(unsigned char)5);
  
#line 1590 
  i = 0;
  
#line 1590 
  goto ldv_47598;
  ldv_47597: 
#line 1591 
  ;
  
#line 1591 
  tmp = bfa_flash_cmd_act_check(pci_bar);
  
#line 1591 
  status = (unsigned int)tmp;
  
#line 1592 
  if (status == 0U) 
#line 1593 
                    goto ldv_47596; else ;
  
#line 1590 
  i += 1;
  ldv_47598: 
#line 1591 
  ;
  
#line 1590 
  if (i <= 9999) 
#line 1592 
                 goto ldv_47597; else 
#line 1595 
                                      goto ldv_47596;
  ldv_47596: 
#line 1596 
  ;
  
#line 1596 
  if (status != 0U) {
    
#line 1597 
    __retres = status;
    
#line 1597 
    goto return_label;
  }
  else ;
  
#line 1599 
  dev_status.i = readl((void const volatile *)(pci_bar + 118804U));
  
#line 1600 
  if ((unsigned int)*((unsigned short *)(& dev_status.r) + 0UL) == 0U) {
    
#line 1601 
    __retres = 4294967292U;
    
#line 1601 
    goto return_label;
  }
  else ;
  
#line 1603 
  ret_status = readl((void const volatile *)(pci_bar + 118800U));
  
#line 1604 
  ret_status >>= 24;
  
#line 1606 
  status = bfa_flash_fifo_flush(pci_bar);
  
#line 1610 
  __retres = ret_status;
  return_label: 
#line 1610 
                return __retres;
}


#line 1615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static u32 bfa_flash_read_start(void *pci_bar, u32 offset, u32 len, char *buf)
{
  u32 __retres;
  u32 status;
  
#line 1621 
  if (len + 4294967295U > 127U || (len & 3U) != 0U) {
    
#line 1622 
    __retres = 4294967287U;
    
#line 1622 
    goto return_label;
  }
  else ;
  
#line 1625 
  status = bfa_flash_status_read(pci_bar);
  
#line 1626 
  if (status == 4294967292U) 
#line 1627 
                             status = bfa_flash_status_read(pci_bar); else ;
  
#line 1633 
  if ((status & 1U) != 0U) {
    
#line 1634 
    __retres = 4294967289U;
    
#line 1634 
    goto return_label;
  }
  else ;
  
#line 1636 
  bfa_flash_set_addr(pci_bar,offset);
  
#line 1638 
  bfa_flash_set_cmd(pci_bar,(unsigned char)0,(unsigned char)((int)((unsigned char)len)),(unsigned char)4,(unsigned char)11);
  
#line 1640 
  __retres = 0U;
  return_label: 
#line 1640 
                return __retres;
}


#line 1645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static u32 bfa_flash_read_check(void *pci_bar)
{
  u32 __retres;
  int tmp;
  
#line 1647 
  tmp = bfa_flash_cmd_act_check(pci_bar);
  
#line 1647 
  if (tmp != 0) {
    
#line 1648 
    __retres = 1U;
    
#line 1648 
    goto return_label;
  }
  else ;
  
#line 1650 
  __retres = 0U;
  return_label: 
#line 1650 
                return __retres;
}


#line 1655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_read_end(void *pci_bar, u32 len, char *buf)
{
  u32 i;
  
#line 1660 
  i = 0U;
  
#line 1660 
  goto ldv_47617;
  ldv_47616: 
#line 1661 
  ;
  {
    
#line 1661 
    u32 w = readl((void const volatile *)(pci_bar + 118800U));
    
#line 1662 
    if (0 != 0) 
#line 1662 
                *((u32 *)(buf + i)) = (((w << 24) | ((w << 8) & 16711680U)) | ((w >> 8) & 65280U)) | (w >> 24); else 
                                                                    
#line 1662 
                                                                    *((u32 *)(buf + i)) = __fswab32(w);
  }
  
#line 1660 
  i += 4U;
  ldv_47617: 
#line 1661 
  ;
  
#line 1660 
  if (i < len) 
#line 1662 
               goto ldv_47616; else 
#line 1665 
                                    goto ldv_47618;
  ldv_47618: 
#line 1666 
  ;
  
#line 1665 
  bfa_flash_fifo_flush(pci_bar);
  
#line 1666 
  return;
}


#line 1674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static int bfa_raw_sem_get(void *bar)
{
  int __retres;
  int locked;
  unsigned int tmp;
  
#line 1678 
  tmp = readl((void const volatile *)(bar + 100384U));
  
#line 1678 
  locked = (int)tmp;
  
#line 1680 
  __retres = locked == 0;
  
#line 1680 
  return __retres;
}


#line 1684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_status bfa_flash_sem_get(void *bar)
{
  enum bfa_status __retres;
  int tmp_0;
  
#line 1686 
  u32 n = 500U;
  
#line 1688 
  goto ldv_47632;
  ldv_47631: 
#line 1689 
  ;
  
#line 1689 
  n -= 1U;
  
#line 1689 
  if (n == 0U) {
    
#line 1690 
    __retres = BFA_STATUS_BADFLASH;
    
#line 1690 
    goto return_label;
  }
  else ;
  {
    
#line 1691 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp;
      
#line 1691 
      goto ldv_47629;
      ldv_47628: 
#line 1692 
      ;
      
#line 1691 
      __const_udelay(4295000UL);
      ldv_47629: 
#line 1693 
      ;
      
#line 1691 
      tmp = __ms;
      
#line 1691 
      __ms -= 1UL;
      
#line 1691 
      ;
      
#line 1691 
      if (tmp != 0UL) 
#line 1693 
                      goto ldv_47628; else 
#line 1696 
                                           goto ldv_47630;
      ldv_47630: 
#line 1697 
      ;
    }
  }
  ldv_47632: 
#line 1700 
  ;
  
#line 1688 
  tmp_0 = bfa_raw_sem_get(bar);
  
#line 1688 
  if (tmp_0 == 0) 
#line 1690 
                  goto ldv_47631; else 
#line 1693 
                                       goto ldv_47633;
  ldv_47633: 
#line 1694 
  ;
  
#line 1693 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 1693 
                return __retres;
}


#line 1697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_sem_put(void *bar)
{
  
#line 1699 
  writel(0U,(void volatile *)(bar + 100384U));
  
#line 1700 
  return;
}


#line 1703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_status bfa_flash_raw_read(void *pci_bar, u32 offset, char *buf, u32 len)
{
  enum bfa_status __retres;
  u32 n;
  u32 status;
  u32 off;
  u32 l;
  u32 s;
  u32 residue;
  u32 fifo_sz;
  enum bfa_status tmp;
  u32 tmp_0;
  
#line 1709 
  residue = len;
  
#line 1710 
  off = 0U;
  
#line 1711 
  fifo_sz = 128U;
  
#line 1712 
  tmp = bfa_flash_sem_get(pci_bar);
  
#line 1712 
  status = (unsigned int)tmp;
  
#line 1713 
  if (status != 0U) {
    
#line 1714 
    __retres = (enum bfa_status)status;
    
#line 1714 
    goto return_label;
  }
  else ;
  
#line 1716 
  goto ldv_47654;
  ldv_47653: 
#line 1717 
  ;
  
#line 1717 
  s = offset + off;
  
#line 1718 
  n = s / fifo_sz;
  
#line 1719 
  l = (n + 1U) * fifo_sz - s;
  
#line 1720 
  if (l > residue) 
#line 1721 
                   l = residue; else ;
  
#line 1723 
  status = bfa_flash_read_start(pci_bar,offset + off,l,buf + off);
  
#line 1730 
  n = 1000000U;
  
#line 1731 
  goto ldv_47651;
  ldv_47650: 
#line 1732 
  ;
  
#line 1732 
  n -= 1U;
  
#line 1732 
  if (n == 0U) {
    
#line 1733 
    bfa_flash_sem_put(pci_bar);
    
#line 1734 
    __retres = BFA_STATUS_FAILED;
    
#line 1734 
    goto return_label;
  }
  else ;
  ldv_47651: 
#line 1736 
  ;
  
#line 1731 
  tmp_0 = bfa_flash_read_check(pci_bar);
  
#line 1731 
  if (tmp_0 != 0U) 
#line 1733 
                   goto ldv_47650; else 
#line 1736 
                                        goto ldv_47652;
  ldv_47652: 
#line 1737 
  ;
  
#line 1738 
  bfa_flash_read_end(pci_bar,l,buf + off);
  
#line 1740 
  residue -= l;
  
#line 1741 
  off += l;
  ldv_47654: 
#line 1742 
  ;
  
#line 1716 
  if (residue != 0U) 
#line 1718 
                     goto ldv_47653; else 
#line 1721 
                                          goto ldv_47655;
  ldv_47655: 
#line 1722 
  ;
  
#line 1743 
  bfa_flash_sem_put(pci_bar);
  
#line 1745 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 1745 
                return __retres;
}


#line 1751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_status bfa_nw_ioc_flash_img_get_chnk(struct bfa_ioc *ioc, u32 off, u32 *fwimg)
{
  enum bfa_status tmp;
  
#line 1754 
  tmp = bfa_flash_raw_read(ioc->pcidev.pci_bar_kva,(off + 262144U) * 4U,(char *)fwimg,256U);
  
#line 1754 
  return tmp;
}


#line 1760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfi_ioc_img_ver_cmp bfa_ioc_flash_fwver_cmp(struct bfa_ioc *ioc, struct bfi_ioc_image_hdr *base_fwhdr)
{
  enum bfi_ioc_img_ver_cmp __retres;
  struct bfi_ioc_image_hdr *flash_fwhdr;
  enum bfa_status status;
  u32 fwimg[64U];
  bool tmp_0;
  
#line 1767 
  status = bfa_nw_ioc_flash_img_get_chnk(ioc,0U,(u32 *)(& fwimg));
  
#line 1768 
  if (status != (unsigned int)BFA_STATUS_OK) {
    
#line 1769 
    __retres = BFI_IOC_IMG_VER_INCOMP;
    
#line 1769 
    goto return_label;
  }
  else ;
  
#line 1771 
  flash_fwhdr = (struct bfi_ioc_image_hdr *)(& fwimg);
  
#line 1772 
  tmp_0 = bfa_ioc_flash_fwver_valid(flash_fwhdr);
  
#line 1772 
  if ((int)tmp_0 != 0) {
    enum bfi_ioc_img_ver_cmp tmp;
    
#line 1773 
    tmp = bfa_ioc_fw_ver_patch_cmp(base_fwhdr,flash_fwhdr);
    
#line 1773 
    __retres = tmp;
    
#line 1773 
    goto return_label;
  }
  else {
    
#line 1775 
    __retres = BFI_IOC_IMG_VER_INCOMP;
    
#line 1775 
    goto return_label;
  }
  return_label: 
#line 1772 
                return __retres;
}


#line 1782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
bool bfa_nw_ioc_fwver_cmp(struct bfa_ioc *ioc, struct bfi_ioc_image_hdr *fwhdr)
{
  bool __retres;
  struct bfi_ioc_image_hdr *drv_fwhdr;
  enum bfi_ioc_img_ver_cmp smem_flash_cmp;
  enum bfi_ioc_img_ver_cmp drv_smem_cmp;
  
#line 1787 
  drv_fwhdr = (struct bfi_ioc_image_hdr *)bfa_cb_image_get_chunk(ioc->asic_gen,0U);
  
#line 1791 
  drv_smem_cmp = bfa_ioc_fw_ver_patch_cmp(drv_fwhdr,fwhdr);
  
#line 1792 
  if (drv_smem_cmp <= (unsigned int)BFI_IOC_IMG_VER_OLD) {
    
#line 1794 
    __retres = (_Bool)0;
    
#line 1794 
    goto return_label;
  }
  else ;
  
#line 1801 
  smem_flash_cmp = bfa_ioc_flash_fwver_cmp(ioc,fwhdr);
  
#line 1803 
  if (smem_flash_cmp == (unsigned int)BFI_IOC_IMG_VER_BETTER) {
    
#line 1804 
    __retres = (_Bool)0;
    
#line 1804 
    goto return_label;
  }
  else 
    
#line 1805 
    if (smem_flash_cmp == (unsigned int)BFI_IOC_IMG_VER_SAME) {
      
#line 1806 
      __retres = (_Bool)1;
      
#line 1806 
      goto return_label;
    }
    else {
      
#line 1809 
      __retres = (_Bool)(drv_smem_cmp == (unsigned int)BFI_IOC_IMG_VER_SAME);
      
#line 1809 
      goto return_label;
    }
  return_label: 
#line 1803 
                return __retres;
}


#line 1816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool bfa_ioc_fwver_valid(struct bfa_ioc *ioc, u32 boot_env)
{
  bool __retres;
  struct bfi_ioc_image_hdr fwhdr;
  unsigned int tmp_0;
  bool tmp_1;
  
#line 1820 
  bfa_nw_ioc_fwver_get(ioc,& fwhdr);
  
#line 1821 
  if (0 != 0) 
#line 1821 
              tmp_0 = (((fwhdr.bootenv << 24) | ((fwhdr.bootenv << 8) & 16711680U)) | ((fwhdr.bootenv >> 8) & 65280U)) | (fwhdr.bootenv >> 24); else 
                                                                    
#line 1821 
                                                                    tmp_0 = __fswab32(fwhdr.bootenv);
  
#line 1821 
  ;
  
#line 1821 
  if (tmp_0 != boot_env) {
    
#line 1822 
    __retres = (_Bool)0;
    
#line 1822 
    goto return_label;
  }
  else ;
  
#line 1824 
  tmp_1 = bfa_nw_ioc_fwver_cmp(ioc,& fwhdr);
  
#line 1824 
  __retres = tmp_1;
  return_label: 
#line 1824 
                return __retres;
}


#line 1829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_msgflush(struct bfa_ioc *ioc)
{
  u32 r32;
  
#line 1833 
  r32 = readl((void const volatile *)ioc->ioc_regs.lpu_mbox_cmd);
  
#line 1834 
  if (r32 != 0U) 
#line 1835 
                 writel(1U,(void volatile *)ioc->ioc_regs.lpu_mbox_cmd); else ;
  
#line 1836 
  return;
}


#line 1839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_hwinit(struct bfa_ioc *ioc, bool force)
{
  enum bfi_ioc_state ioc_fwstate;
  bool fwvalid;
  u32 boot_env;
  int tmp_0;
  enum bfa_status tmp_2;
  
#line 1845 
  ioc_fwstate = (*((ioc->ioc_hwif)->ioc_get_fwstate))(ioc);
  
#line 1847 
  if ((int)force != 0) 
#line 1848 
                       ioc_fwstate = BFI_IOC_UNINIT; else ;
  
#line 1850 
  boot_env = 0U;
  
#line 1856 
  if (ioc_fwstate != (unsigned int)BFI_IOC_UNINIT) {
    bool tmp;
    
#line 1856 
    tmp = bfa_ioc_fwver_valid(ioc,boot_env);
    
#line 1856 
    tmp_0 = (int)tmp != 0;
  }
  else 
#line 1856 
       tmp_0 = 0;
  
#line 1855 
  fwvalid = (_Bool)(tmp_0 != 0);
  
#line 1858 
  if (! fwvalid) {
    enum bfa_status tmp_1;
    
#line 1859 
    tmp_1 = bfa_ioc_boot(ioc,(enum bfi_fwboot_type)BFI_FWBOOT_TYPE_NORMAL,boot_env);
    
#line 1859 
    if (tmp_1 == (unsigned int)BFA_STATUS_OK) 
#line 1861 
                                              bfa_ioc_poll_fwinit(ioc); else ;
    
#line 1863 
    goto return_label;
  }
  else ;
  
#line 1870 
  if (ioc_fwstate == (unsigned int)BFI_IOC_INITING) {
    
#line 1871 
    bfa_ioc_poll_fwinit(ioc);
    
#line 1872 
    goto return_label;
  }
  else ;
  
#line 1879 
  if (ioc_fwstate == (unsigned int)BFI_IOC_DISABLED || ioc_fwstate == (unsigned int)BFI_IOC_OP) {
    
#line 1884 
    bfa_ioc_msgflush(ioc);
    
#line 1885 
    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),4);
    
#line 1886 
    goto return_label;
  }
  else ;
  
#line 1892 
  tmp_2 = bfa_ioc_boot(ioc,(enum bfi_fwboot_type)BFI_FWBOOT_TYPE_NORMAL,boot_env);
  
#line 1892 
  if (tmp_2 == (unsigned int)BFA_STATUS_OK) 
#line 1894 
                                            bfa_ioc_poll_fwinit(ioc); else ;
  return_label: 
#line 1895 
                return;
}


#line 1898  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_timeout(struct bfa_ioc *ioc)
{
  
#line 1900 
  (*(ioc->fsm))((void *)ioc,11);
  
#line 1901 
  return;
}


#line 1904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_mbox_send(struct bfa_ioc *ioc, void *ioc_msg, int len)
{
  u32 i;
  
#line 1906 
  u32 *msgp = (u32 *)ioc_msg;
  
#line 1909 
  if ((long)(len > 32) != 0L) {
    
#line 1911 
    ldv_inline_asm();
    
#line 1909 
    ;
  }
  else ;
  
#line 1914 
  i = 0U;
  
#line 1914 
  goto ldv_47702;
  ldv_47701: 
#line 1915 
  ;
  
#line 1915 
  writel(*(msgp + i),(void volatile *)(ioc->ioc_regs.hfn_mbox + (unsigned long)i * 4UL));
  
#line 1914 
  i += 1U;
  ldv_47702: 
#line 1915 
  ;
  
#line 1914 
  if ((unsigned long)i < (unsigned long)len / 4UL) 
#line 1916 
                                                   goto ldv_47701; else 
                                                                    
#line 1919 
                                                                    goto ldv_47703;
  ldv_47703: 
#line 1920 
  ;
  
#line 1918 
  goto ldv_47705;
  ldv_47704: 
#line 1919 
  ;
  
#line 1919 
  writel(0U,(void volatile *)(ioc->ioc_regs.hfn_mbox + (unsigned long)i * 4UL));
  
#line 1918 
  i += 1U;
  ldv_47705: 
#line 1919 
  ;
  
#line 1918 
  if (i <= 7U) 
#line 1920 
               goto ldv_47704; else 
#line 1923 
                                    goto ldv_47706;
  ldv_47706: 
#line 1924 
  ;
  
#line 1924 
  writel(1U,(void volatile *)ioc->ioc_regs.hfn_mbox_cmd);
  
#line 1925 
  readl((void const volatile *)ioc->ioc_regs.hfn_mbox_cmd);
  
#line 1926 
  return;
}


#line 1929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_send_enable(struct bfa_ioc *ioc)
{
  struct bfi_ioc_ctrl_req enable_req;
  struct timeval tv;
  
#line 1934 
  enable_req.mh.msg_class = (unsigned char)1U;
  
#line 1934 
  enable_req.mh.msg_id = (unsigned char)1U;
  
#line 1934 
  enable_req.mh.mtag.h2i.fn_lpu = ioc->port_id;
  
#line 1936 
  if (0 != 0) 
#line 1936 
              enable_req.clscode = (unsigned short)(((int)((unsigned short)ioc->clscode) << 8) | ((int)((unsigned short)ioc->clscode) >> 8)); else 
                                                                    
#line 1936 
                                                                    enable_req.clscode = __fswab16((unsigned short)((int)((unsigned short)ioc->clscode)));
  
#line 1937 
  do_gettimeofday(& tv);
  
#line 1938 
  if (0 != 0) 
#line 1938 
              enable_req.tv_sec = ((((unsigned int)tv.tv_sec << 24) | (((unsigned int)tv.tv_sec << 8) & 16711680U)) | (((unsigned int)tv.tv_sec >> 8) & 65280U)) | ((unsigned int)tv.tv_sec >> 24); else 
                                                                    
#line 1938 
                                                                    enable_req.tv_sec = __fswab32((unsigned int)tv.tv_sec);
  
#line 1939 
  bfa_ioc_mbox_send(ioc,(void *)(& enable_req),12);
  
#line 1940 
  return;
}


#line 1943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_send_disable(struct bfa_ioc *ioc)
{
  struct bfi_ioc_ctrl_req disable_req;
  
#line 1947 
  disable_req.mh.msg_class = (unsigned char)1U;
  
#line 1947 
  disable_req.mh.msg_id = (unsigned char)2U;
  
#line 1947 
  disable_req.mh.mtag.h2i.fn_lpu = ioc->port_id;
  
#line 1949 
  bfa_ioc_mbox_send(ioc,(void *)(& disable_req),12);
  
#line 1950 
  return;
}


#line 1953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_send_getattr(struct bfa_ioc *ioc)
{
  struct bfi_ioc_getattr_req attr_req;
  
#line 1957 
  attr_req.mh.msg_class = (unsigned char)1U;
  
#line 1957 
  attr_req.mh.msg_id = (unsigned char)3U;
  
#line 1957 
  attr_req.mh.mtag.h2i.fn_lpu = ioc->port_id;
  
#line 1959 
  __bfa_dma_be_addr_set(& attr_req.attr_addr,ioc->attr_dma.pa);
  
#line 1960 
  bfa_ioc_mbox_send(ioc,(void *)(& attr_req),12);
  
#line 1961 
  return;
}


#line 1964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_hb_check(struct bfa_ioc *ioc)
{
  u32 hb_count;
  unsigned long tmp;
  
#line 1968 
  hb_count = readl((void const volatile *)ioc->ioc_regs.heartbeat);
  
#line 1969 
  if (ioc->hb_count == hb_count) {
    
#line 1970 
    bfa_ioc_recover(ioc);
    
#line 1971 
    goto return_label;
  }
  else 
#line 1973 
       ioc->hb_count = hb_count;
  
#line 1976 
  bfa_ioc_mbox_poll(ioc);
  
#line 1977 
  tmp = msecs_to_jiffies(500U);
  
#line 1977 
  ;
  
#line 1977 
  ;
  
#line 1977 
  ldv_mod_timer_93_0(& ioc->hb_timer,tmp + jiffies);
  return_label: 
#line 1978 
                return;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_hb_monitor(struct bfa_ioc *ioc)
{
  unsigned long tmp;
  
#line 1984 
  ioc->hb_count = readl((void const volatile *)ioc->ioc_regs.heartbeat);
  
#line 1985 
  tmp = msecs_to_jiffies(500U);
  
#line 1985 
  ;
  
#line 1985 
  ;
  
#line 1985 
  ldv_mod_timer_94(& ioc->hb_timer,tmp + jiffies);
  
#line 1986 
  return;
}


#line 1990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_hb_stop(struct bfa_ioc *ioc)
{
  
#line 1992 
  ldv_del_timer_95(& ioc->hb_timer);
  
#line 1993 
  return;
}


#line 1997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_status bfa_ioc_download_fw(struct bfa_ioc *ioc, u32 boot_type, u32 boot_env)
{
  enum bfa_status __retres;
  u32 *fwimg;
  u32 pgnum;
  u32 i;
  u32 asicmode;
  u32 fwimg_size;
  u32 fwimg_buf[64U];
  enum bfa_status status;
  unsigned int tmp_0;
  u32 tmp_1;
  
#line 2002 
  u32 loff = 0U;
  
#line 2003 
  u32 chunkno = 0U;
  
#line 2010 
  if (boot_env == 0U && boot_type == 1U) {
    
#line 2012 
    fwimg_size = 262144U;
    
#line 2014 
    status = bfa_nw_ioc_flash_img_get_chnk(ioc,chunkno * 64U,(u32 *)(& fwimg_buf));
    
#line 2016 
    if (status != (unsigned int)BFA_STATUS_OK) {
      
#line 2017 
      __retres = status;
      
#line 2017 
      goto return_label;
    }
    else ;
    
#line 2019 
    fwimg = (u32 *)(& fwimg_buf);
  }
  else {
    
#line 2021 
    fwimg_size = bfa_cb_image_get_size(ioc->asic_gen);
    
#line 2022 
    fwimg = bfa_cb_image_get_chunk(ioc->asic_gen,chunkno * 64U);
  }
  
#line 2026 
  pgnum = bfa_ioc_smem_pgnum(ioc,loff);
  
#line 2028 
  writel(pgnum,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  
#line 2030 
  i = 0U;
  
#line 2030 
  goto ldv_47745;
  ldv_47744: 
#line 2031 
  ;
  
#line 2031 
  if (i / 64U != chunkno) {
    
#line 2032 
    chunkno = i / 64U;
    
#line 2033 
    if (boot_env == 0U && boot_type == 1U) {
      
#line 2035 
      status = bfa_nw_ioc_flash_img_get_chnk(ioc,chunkno * 64U,(u32 *)(& fwimg_buf));
      
#line 2038 
      if (status != (unsigned int)BFA_STATUS_OK) {
        
#line 2039 
        __retres = status;
        
#line 2039 
        goto return_label;
      }
      else ;
      
#line 2041 
      fwimg = (u32 *)(& fwimg_buf);
    }
    else 
#line 2043 
         fwimg = bfa_cb_image_get_chunk(ioc->asic_gen,chunkno * 64U);
  }
  else ;
  
#line 2052 
  ;
  
#line 2052 
  if (0 != 0) 
#line 2052 
              tmp_0 = (((*(fwimg + (i & 63U)) << 24) | ((*(fwimg + (i & 63U)) << 8) & 16711680U)) | ((*(fwimg + (i & 63U)) >> 8) & 65280U)) | (*(fwimg + (i & 63U)) >> 24); else 
                                                                    
#line 2052 
                                                                    tmp_0 = __fswab32(*(fwimg + (i & 63U)));
  
#line 2052 
  writel(tmp_0,(void volatile *)(ioc->ioc_regs.smem_page_start + loff));
  
#line 2055 
  loff += 4U;
  
#line 2060 
  loff &= 32767U;
  
#line 2061 
  if (loff == 0U) {
    
#line 2062 
    pgnum += 1U;
    
#line 2063 
    writel(pgnum,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  }
  else ;
  
#line 2030 
  i += 1U;
  ldv_47745: 
#line 2031 
  ;
  
#line 2030 
  if (i < fwimg_size) 
#line 2032 
                      goto ldv_47744; else 
#line 2035 
                                           goto ldv_47746;
  ldv_47746: 
#line 2036 
  ;
  
#line 2068 
  ;
  
#line 2068 
  tmp_1 = bfa_ioc_smem_pgnum(ioc,0U);
  
#line 2068 
  writel(tmp_1,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  
#line 2074 
  if (boot_env == 0U && boot_type == 1U) 
#line 2076 
                                         boot_type = 0U; else ;
  
#line 2078 
  asicmode = ((((unsigned int)ioc->asic_gen << 24) | ((unsigned int)ioc->asic_mode << 16)) | ((unsigned int)ioc->port0_mode << 8)) | (unsigned int)ioc->port1_mode;
  
#line 2080 
  writel(asicmode,(void volatile *)(ioc->ioc_regs.smem_page_start + 4U));
  
#line 2082 
  writel(boot_type,(void volatile *)(ioc->ioc_regs.smem_page_start + 8U));
  
#line 2084 
  writel(boot_env,(void volatile *)(ioc->ioc_regs.smem_page_start + 12U));
  
#line 2086 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 2086 
                return __retres;
}


#line 2090  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_reset(struct bfa_ioc *ioc, bool force)
{
  
#line 2092 
  bfa_ioc_hwinit(ioc,(_Bool)((bool)((int)force) != 0));
  
#line 2093 
  return;
}


#line 2097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_enable_reply(struct bfa_ioc *ioc, enum bfa_mode port_mode, u8 cap_bm)
{
  u8 tmp;
  
#line 2100 
  struct bfa_iocpf *iocpf = & ioc->iocpf;
  
#line 2102 
  tmp = (unsigned char)port_mode;
  
#line 2102 
  ioc->port_mode_cfg = tmp;
  
#line 2102 
  ioc->port_mode = (enum bfa_mode)tmp;
  
#line 2103 
  ioc->ad_cap_bm = cap_bm;
  
#line 2104 
  (*(iocpf->fsm))((void *)iocpf,5);
  
#line 2105 
  return;
}


#line 2109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_getattr_reply(struct bfa_ioc *ioc)
{
  
#line 2111 
  struct bfi_ioc_attr *attr = ioc->attr;
  
#line 2113 
  if (0 != 0) 
#line 2113 
              attr->adapter_prop = (((attr->adapter_prop << 24) | ((attr->adapter_prop << 8) & 16711680U)) | ((attr->adapter_prop >> 8) & 65280U)) | (attr->adapter_prop >> 24); else 
                                                                    
#line 2113 
                                                                    attr->adapter_prop = __fswab32(attr->adapter_prop);
  
#line 2114 
  if (0 != 0) 
#line 2114 
              attr->card_type = (((attr->card_type << 24) | ((attr->card_type << 8) & 16711680U)) | ((attr->card_type >> 8) & 65280U)) | (attr->card_type >> 24); else 
                                                                    
#line 2114 
                                                                    attr->card_type = __fswab32(attr->card_type);
  
#line 2115 
  if (0 != 0) 
#line 2115 
              attr->maxfrsize = (unsigned short)(((int)attr->maxfrsize << 8) | ((int)attr->maxfrsize >> 8)); else 
                                                                    
#line 2115 
                                                                    attr->maxfrsize = __fswab16((unsigned short)((int)attr->maxfrsize));
  
#line 2117 
  (*(ioc->fsm))((void *)ioc,6);
  
#line 2118 
  return;
}


#line 2122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_mbox_attach(struct bfa_ioc *ioc)
{
  int mc;
  
#line 2124 
  struct bfa_ioc_mbox_mod *mod = & ioc->mbox_mod;
  
#line 2127 
  INIT_LIST_HEAD(& mod->cmd_q);
  
#line 2128 
  mc = 0;
  
#line 2128 
  goto ldv_47767;
  ldv_47766: 
#line 2129 
  ;
  
#line 2129 
  mod->mbhdlr[mc].cbfn = (void (*)(void *, struct bfi_mbmsg *))0;
  
#line 2130 
  mod->mbhdlr[mc].cbarg = (void *)ioc->bfa;
  
#line 2128 
  mc += 1;
  ldv_47767: 
#line 2129 
  ;
  
#line 2128 
  if (mc <= 33) 
#line 2130 
                goto ldv_47766; else 
#line 2133 
                                     goto ldv_47768;
  ldv_47768: 
#line 2134 
  ;
  
#line 2135 
  return;
}


#line 2136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_mbox_poll(struct bfa_ioc *ioc)
{
  struct bfa_mbox_cmd *cmd;
  void (*cbfn)(void *);
  void *cbarg;
  u32 stat;
  int tmp;
  struct bfa_mbox_cmd *tmp_0;
  
#line 2138 
  struct bfa_ioc_mbox_mod *mod = & ioc->mbox_mod;
  
#line 2147 
  tmp = list_empty((struct list_head const *)(& mod->cmd_q));
  
#line 2147 
  if (tmp != 0) 
#line 2148 
                goto return_label; else ;
  
#line 2153 
  stat = readl((void const volatile *)ioc->ioc_regs.hfn_mbox_cmd);
  
#line 2154 
  if (stat != 0U) 
#line 2155 
                  goto return_label; else ;
  {
    
#line 2160 
    struct list_head const *__mptr = (struct list_head const *)mod->cmd_q.next;
    
#line 2160 
    tmp_0 = (struct bfa_mbox_cmd *)__mptr;
  }
  
#line 2160 
  cmd = tmp_0;
  
#line 2161 
  list_del(& cmd->qe);
  
#line 2162 
  bfa_ioc_mbox_send(ioc,(void *)(& cmd->msg),32);
  
#line 2167 
  if (cmd->cbfn != (void (*)(void *))0) {
    
#line 2168 
    cbfn = cmd->cbfn;
    
#line 2169 
    cbarg = cmd->cbarg;
    
#line 2170 
    cmd->cbfn = (void (*)(void *))0;
    
#line 2171 
    (*cbfn)(cbarg);
  }
  else ;
  return_label: 
#line 2173 
                return;
}


#line 2177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_mbox_flush(struct bfa_ioc *ioc)
{
  struct bfa_mbox_cmd *cmd;
  struct bfa_mbox_cmd *tmp;
  int tmp_0;
  
#line 2179 
  struct bfa_ioc_mbox_mod *mod = & ioc->mbox_mod;
  
#line 2182 
  goto ldv_47787;
  ldv_47786: 
#line 2183 
  ;
  {
    
#line 2183 
    struct list_head const *__mptr = (struct list_head const *)mod->cmd_q.next;
    
#line 2183 
    tmp = (struct bfa_mbox_cmd *)__mptr;
  }
  
#line 2183 
  cmd = tmp;
  
#line 2184 
  list_del(& cmd->qe);
  ldv_47787: 
#line 2185 
  ;
  
#line 2182 
  tmp_0 = list_empty((struct list_head const *)(& mod->cmd_q));
  
#line 2182 
  if (tmp_0 == 0) 
#line 2184 
                  goto ldv_47786; else 
#line 2187 
                                       goto ldv_47788;
  ldv_47788: 
#line 2188 
  ;
  
#line 2189 
  return;
}


#line 2197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static int bfa_nw_ioc_smem_read(struct bfa_ioc *ioc, void *tbuf, u32 soff, u32 sz)
{
  int __retres;
  u32 pgnum;
  u32 loff;
  u32 r32;
  int i;
  int len;
  int tmp_0;
  bool tmp;
  __u32 tmp_2;
  unsigned int tmp_1;
  
#line 2201 
  u32 *buf = (u32 *)tbuf;
  
#line 2203 
  pgnum = ioc->ioc_regs.smem_pg0 + (soff >> 15);
  
#line 2204 
  loff = soff & 32767U;
  
#line 2209 
  tmp = bfa_nw_ioc_sem_get(ioc->ioc_regs.ioc_init_sem_reg);
  
#line 2209 
  if (tmp) 
#line 2209 
           tmp_0 = 0; else 
#line 2209 
                           tmp_0 = 1;
  
#line 2209 
  if (tmp_0) {
    
#line 2210 
    __retres = 1;
    
#line 2210 
    goto return_label;
  }
  else ;
  
#line 2212 
  writel(pgnum,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  
#line 2214 
  len = (int)(sz / 4U);
  
#line 2215 
  i = 0;
  
#line 2215 
  goto ldv_47802;
  ldv_47801: 
#line 2216 
  ;
  
#line 2216 
  tmp_1 = readl((void const volatile *)(ioc->ioc_regs.smem_page_start + loff));
  
#line 2216 
  tmp_2 = __fswab32(tmp_1);
  
#line 2216 
  r32 = tmp_2;
  
#line 2217 
  if (0 != 0) 
#line 2217 
              *(buf + i) = (((r32 << 24) | ((r32 << 8) & 16711680U)) | ((r32 >> 8) & 65280U)) | (r32 >> 24); else 
                                                                    
#line 2217 
                                                                    *(buf + i) = __fswab32(r32);
  
#line 2218 
  loff += 4U;
  
#line 2223 
  loff &= 32767U;
  
#line 2224 
  if (loff == 0U) {
    
#line 2225 
    pgnum += 1U;
    
#line 2226 
    writel(pgnum,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  }
  else ;
  
#line 2215 
  i += 1;
  ldv_47802: 
#line 2216 
  ;
  
#line 2215 
  if (i < len) 
#line 2217 
               goto ldv_47801; else 
#line 2220 
                                    goto ldv_47803;
  ldv_47803: 
#line 2221 
  ;
  
#line 2230 
  writel(ioc->ioc_regs.smem_pg0,(void volatile *)ioc->ioc_regs.host_page_num_fn);
  
#line 2236 
  readl((void const volatile *)ioc->ioc_regs.ioc_init_sem_reg);
  
#line 2237 
  writel(1U,(void volatile *)ioc->ioc_regs.ioc_init_sem_reg);
  
#line 2238 
  __retres = 0;
  return_label: 
#line 2238 
                return __retres;
}


#line 2243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
int bfa_nw_ioc_debug_fwtrc(struct bfa_ioc *ioc, void *trcdata, int *trclen)
{
  int tlen;
  
#line 2245 
  u32 loff = (unsigned int)((int)ioc->port_id * 4128 + 19200);
  
#line 2246 
  int status = 0;
  
#line 2248 
  tlen = *trclen;
  
#line 2249 
  if (tlen > 4128) 
#line 2250 
                   tlen = 4128; else ;
  
#line 2252 
  status = bfa_nw_ioc_smem_read(ioc,trcdata,loff,(unsigned int)tlen);
  
#line 2253 
  *trclen = tlen;
  
#line 2254 
  return status;
}


#line 2259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_nw_ioc_debug_save_ftrc(struct bfa_ioc *ioc)
{
  int tlen;
  
#line 2263 
  if ((int)ioc->dbg_fwsave_once != 0) {
    
#line 2264 
    ioc->dbg_fwsave_once = (_Bool)0;
    
#line 2265 
    if (ioc->dbg_fwsave_len != 0) {
      
#line 2266 
      tlen = ioc->dbg_fwsave_len;
      
#line 2267 
      bfa_nw_ioc_debug_fwtrc(ioc,ioc->dbg_fwsave,& tlen);
    }
    else ;
  }
  else ;
  
#line 2270 
  return;
}


#line 2274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
int bfa_nw_ioc_debug_fwsave(struct bfa_ioc *ioc, void *trcdata, int *trclen)
{
  int __retres;
  int tlen;
  
#line 2278 
  if (ioc->dbg_fwsave_len == 0) {
    
#line 2279 
    __retres = 78;
    
#line 2279 
    goto return_label;
  }
  else ;
  
#line 2281 
  tlen = *trclen;
  
#line 2282 
  if (ioc->dbg_fwsave_len < tlen) 
#line 2283 
                                  tlen = ioc->dbg_fwsave_len; else ;
  
#line 2285 
  memcpy(trcdata,(void const *)ioc->dbg_fwsave,(unsigned long)tlen);
  
#line 2286 
  *trclen = tlen;
  
#line 2287 
  __retres = 0;
  return_label: 
#line 2287 
                return __retres;
}


#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_fail_notify(struct bfa_ioc *ioc)
{
  
#line 2296 
  (*((ioc->cbfn)->hbfail_cbfn))((void *)ioc->bfa);
  
#line 2297 
  bfa_ioc_event_notify(ioc,(enum bfa_ioc_event)BFA_IOC_E_FAILED);
  
#line 2298 
  bfa_nw_ioc_debug_save_ftrc(ioc);
  
#line 2299 
  return;
}


#line 2303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_pf_enabled(struct bfa_ioc *ioc)
{
  
#line 2305 
  (*(ioc->fsm))((void *)ioc,5);
  
#line 2306 
  return;
}


#line 2309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_pf_disabled(struct bfa_ioc *ioc)
{
  
#line 2311 
  (*(ioc->fsm))((void *)ioc,7);
  
#line 2312 
  return;
}


#line 2315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_pf_failed(struct bfa_ioc *ioc)
{
  
#line 2317 
  (*(ioc->fsm))((void *)ioc,8);
  
#line 2318 
  return;
}


#line 2321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_pf_hwfailed(struct bfa_ioc *ioc)
{
  
#line 2323 
  (*(ioc->fsm))((void *)ioc,12);
  
#line 2324 
  return;
}


#line 2327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_pf_fwmismatch(struct bfa_ioc *ioc)
{
  
#line 2332 
  (*((ioc->cbfn)->enable_cbfn))((void *)ioc->bfa,(enum bfa_status)BFA_STATUS_IOC_FAILURE);
  
#line 2333 
  return;
}


#line 2337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_status bfa_ioc_pll_init(struct bfa_ioc *ioc)
{
  enum bfa_status __retres;
  
#line 2342 
  bfa_nw_ioc_sem_get(ioc->ioc_regs.ioc_init_sem_reg);
  
#line 2344 
  (*((ioc->ioc_hwif)->ioc_pll_init))(ioc->pcidev.pci_bar_kva,ioc->asic_mode);
  
#line 2346 
  ioc->pllinit = (_Bool)1;
  
#line 2349 
  bfa_ioc_lmem_init(ioc);
  
#line 2354 
  bfa_nw_ioc_sem_release(ioc->ioc_regs.ioc_init_sem_reg);
  
#line 2356 
  __retres = BFA_STATUS_OK;
  
#line 2356 
  return __retres;
}


#line 2363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_status bfa_ioc_boot(struct bfa_ioc *ioc, enum bfi_fwboot_type boot_type, u32 boot_env)
{
  enum bfa_status __retres;
  struct bfi_ioc_image_hdr *drv_fwhdr;
  enum bfa_status status;
  enum bfa_status tmp;
  
#line 2368 
  ioc->stats.ioc_boots += 1U;
  
#line 2370 
  tmp = bfa_ioc_pll_init(ioc);
  
#line 2370 
  if (tmp != (unsigned int)BFA_STATUS_OK) {
    
#line 2371 
    __retres = BFA_STATUS_FAILED;
    
#line 2371 
    goto return_label;
  }
  else ;
  
#line 2372 
  if (boot_env == 0U && boot_type == (unsigned int)BFI_FWBOOT_TYPE_NORMAL) {
    enum bfi_ioc_img_ver_cmp tmp_1;
    
#line 2374 
    drv_fwhdr = (struct bfi_ioc_image_hdr *)bfa_cb_image_get_chunk(ioc->asic_gen,0U);
    
#line 2379 
    tmp_1 = bfa_ioc_flash_fwver_cmp(ioc,drv_fwhdr);
    
#line 2379 
    if (tmp_1 == (unsigned int)BFI_IOC_IMG_VER_BETTER) 
#line 2381 
                                                       boot_type = BFI_FWBOOT_TYPE_FLASH; else ;
  }
  else ;
  
#line 2387 
  if (boot_type == (unsigned int)BFI_FWBOOT_TYPE_MEMTEST) {
    
#line 2388 
    (*((ioc->ioc_hwif)->ioc_set_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_MEMTEST);
    
#line 2389 
    (*((ioc->ioc_hwif)->ioc_set_alt_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_MEMTEST);
  }
  else {
    
#line 2391 
    (*((ioc->ioc_hwif)->ioc_set_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_INITING);
    
#line 2392 
    (*((ioc->ioc_hwif)->ioc_set_alt_fwstate))(ioc,(enum bfi_ioc_state)BFI_IOC_INITING);
  }
  
#line 2395 
  bfa_ioc_msgflush(ioc);
  
#line 2396 
  status = bfa_ioc_download_fw(ioc,(unsigned int)boot_type,boot_env);
  
#line 2397 
  if (status == (unsigned int)BFA_STATUS_OK) 
#line 2398 
                                             bfa_ioc_lpu_start(ioc); else 
                                                                    
#line 2400 
                                                                    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),11);
  
#line 2402 
  __retres = status;
  return_label: 
#line 2402 
                return __retres;
}


#line 2407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_auto_recover(bool auto_recover)
{
  
#line 2409 
  bfa_nw_auto_recover = auto_recover;
  
#line 2410 
  return;
}


#line 2413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static bool bfa_ioc_msgget(struct bfa_ioc *ioc, void *mbmsg)
{
  bool __retres;
  u32 r32;
  int i;
  
#line 2415 
  u32 *msgp = (u32 *)mbmsg;
  
#line 2419 
  r32 = readl((void const volatile *)ioc->ioc_regs.lpu_mbox_cmd);
  
#line 2420 
  if ((r32 & 1U) == 0U) {
    
#line 2421 
    __retres = (_Bool)0;
    
#line 2421 
    goto return_label;
  }
  else ;
  
#line 2426 
  i = 0;
  
#line 2426 
  goto ldv_47861;
  ldv_47860: 
#line 2427 
  ;
  
#line 2428 
  r32 = readl((void const volatile *)(ioc->ioc_regs.lpu_mbox + (unsigned long)i * 4UL));
  
#line 2430 
  if (0 != 0) 
#line 2430 
              *(msgp + i) = (((r32 << 24) | ((r32 << 8) & 16711680U)) | ((r32 >> 8) & 65280U)) | (r32 >> 24); else 
                                                                    
#line 2430 
                                                                    *(msgp + i) = __fswab32(r32);
  
#line 2427 
  i += 1;
  ldv_47861: 
#line 2428 
  ;
  
#line 2426 
  if ((unsigned int)i <= 7U) 
#line 2428 
                             goto ldv_47860; else 
#line 2431 
                                                  goto ldv_47862;
  ldv_47862: 
#line 2432 
  ;
  
#line 2436 
  writel(1U,(void volatile *)ioc->ioc_regs.lpu_mbox_cmd);
  
#line 2437 
  readl((void const volatile *)ioc->ioc_regs.lpu_mbox_cmd);
  
#line 2439 
  __retres = (_Bool)1;
  return_label: 
#line 2439 
                return __retres;
}


#line 2443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_isr(struct bfa_ioc *ioc, struct bfi_mbmsg *m)
{
  union bfi_ioc_i2h_msg_u *msg;
  
#line 2446 
  struct bfa_iocpf *iocpf = & ioc->iocpf;
  
#line 2448 
  msg = (union bfi_ioc_i2h_msg_u *)m;
  
#line 2450 
  ioc->stats.ioc_isrs += 1U;
  
#line 2452 
  switch ((int)msg->mh.msg_id) {
    case 132: 
#line 2453 
    ;
    
#line 2454 
    goto ldv_47870;
    case 129: 
#line 2456 
    ;
    
#line 2457 
    bfa_ioc_enable_reply(ioc,(enum bfa_mode)msg->fw_event.port_mode,(unsigned char)((int)msg->fw_event.cap_bm));
    
#line 2460 
    goto ldv_47870;
    case 130: 
#line 2462 
    ;
    
#line 2463 
    (*(iocpf->fsm))((void *)iocpf,6);
    
#line 2464 
    goto ldv_47870;
    case 131: 
#line 2466 
    ;
    
#line 2467 
    bfa_ioc_getattr_reply(ioc);
    
#line 2468 
    goto ldv_47870;
    default: 
#line 2470 
    ;
    
#line 2473 
    ldv_inline_asm();
    
#line 2471 
    ;
  }
  ldv_47870: 
#line 2473 
  ;
  
#line 2474 
  return;
}


#line 2482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_attach(struct bfa_ioc *ioc, void *bfa, struct bfa_ioc_cbfn *cbfn)
{
  
#line 2484 
  ioc->bfa = (struct bfa *)bfa;
  
#line 2485 
  ioc->cbfn = cbfn;
  
#line 2486 
  ioc->fcmode = (_Bool)0;
  
#line 2487 
  ioc->pllinit = (_Bool)0;
  
#line 2488 
  ioc->dbg_fwsave_once = (_Bool)1;
  
#line 2489 
  ioc->iocpf.ioc = ioc;
  
#line 2491 
  bfa_ioc_mbox_attach(ioc);
  
#line 2492 
  INIT_LIST_HEAD(& ioc->notify_q);
  
#line 2494 
  ioc->fsm = (void (*)(void *, int ))(& bfa_ioc_sm_uninit);
  
#line 2494 
  bfa_ioc_sm_uninit_entry(ioc);
  
#line 2495 
  (*(ioc->fsm))((void *)ioc,1);
  
#line 2496 
  return;
}


#line 2500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_detach(struct bfa_ioc *ioc)
{
  
#line 2502 
  (*(ioc->fsm))((void *)ioc,4);
  
#line 2505 
  INIT_LIST_HEAD(& ioc->notify_q);
  
#line 2506 
  return;
}


#line 2514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_pci_init(struct bfa_ioc *ioc, struct bfa_pcidev *pcidev, enum bfi_pcifn_class clscode)
{
  enum bfi_port_mode tmp;
  
#line 2517 
  ioc->clscode = clscode;
  
#line 2518 
  ioc->pcidev = *pcidev;
  
#line 2523 
  tmp = BFI_PORT_MODE_FC;
  
#line 2523 
  ioc->port1_mode = tmp;
  
#line 2523 
  ioc->port0_mode = tmp;
  
#line 2524 
  ioc->asic_mode = BFI_ASIC_MODE_FC;
  
#line 2526 
  switch ((int)pcidev->device_id) {
    enum bfi_port_mode tmp_0;
    case 20: 
#line 2527 
    ;
    
#line 2528 
    ioc->asic_gen = BFI_ASIC_GEN_CT;
    
#line 2529 
    tmp_0 = BFI_PORT_MODE_ETH;
    
#line 2529 
    ioc->port1_mode = tmp_0;
    
#line 2529 
    ioc->port0_mode = tmp_0;
    
#line 2530 
    ioc->asic_mode = BFI_ASIC_MODE_ETH;
    
#line 2531 
    ioc->port_mode_cfg = (unsigned char)2U;
    
#line 2531 
    ioc->port_mode = BFA_MODE_CNA;
    
#line 2532 
    ioc->ad_cap_bm = (unsigned char)2U;
    
#line 2533 
    goto ldv_47889;
    case 34: 
#line 2535 
    ;
    
#line 2536 
    ioc->asic_gen = BFI_ASIC_GEN_CT2;
    
#line 2537 
    if (clscode == (unsigned int)BFI_PCIFN_CLASS_FC && (unsigned int)pcidev->ssid == 36U) {
      
#line 2539 
      ioc->asic_mode = BFI_ASIC_MODE_FC16;
      
#line 2540 
      ioc->fcmode = (_Bool)1;
      
#line 2541 
      ioc->port_mode_cfg = (unsigned char)1U;
      
#line 2541 
      ioc->port_mode = BFA_MODE_HBA;
      
#line 2542 
      ioc->ad_cap_bm = (unsigned char)1U;
    }
    else {
      enum bfi_port_mode tmp_1;
      
#line 2544 
      tmp_1 = BFI_PORT_MODE_ETH;
      
#line 2544 
      ioc->port1_mode = tmp_1;
      
#line 2544 
      ioc->port0_mode = tmp_1;
      
#line 2545 
      ioc->asic_mode = BFI_ASIC_MODE_ETH;
      
#line 2546 
      if ((unsigned int)pcidev->ssid == 34U) {
        
#line 2547 
        ioc->port_mode_cfg = (unsigned char)2U;
        
#line 2547 
        ioc->port_mode = BFA_MODE_CNA;
        
#line 2549 
        ioc->ad_cap_bm = (unsigned char)2U;
      }
      else {
        
#line 2551 
        ioc->port_mode_cfg = (unsigned char)3U;
        
#line 2551 
        ioc->port_mode = BFA_MODE_NIC;
        
#line 2553 
        ioc->ad_cap_bm = (unsigned char)4U;
      }
    }
    
#line 2556 
    goto ldv_47889;
    default: 
#line 2558 
    ;
    
#line 2561 
    ldv_inline_asm();
    
#line 2559 
    ;
  }
  ldv_47889: 
#line 2565 
  ;
  
#line 2565 
  if (ioc->asic_gen == (unsigned int)BFI_ASIC_GEN_CT) 
#line 2566 
                                                      bfa_nw_ioc_set_ct_hwif(ioc);
  else {
    {
      
#line 2568 
      int __ret_warn_on = ioc->asic_gen != (unsigned int)BFI_ASIC_GEN_CT2;
      
#line 2568 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 2568 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",2568); else ;
      
#line 2568 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 2569 
    bfa_nw_ioc_set_ct2_hwif(ioc);
    
#line 2570 
    bfa_nw_ioc_ct2_poweron(ioc);
  }
  
#line 2573 
  (*((ioc->ioc_hwif)->ioc_map_port))(ioc);
  
#line 2574 
  (*((ioc->ioc_hwif)->ioc_reg_init))(ioc);
  
#line 2575 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_mem_claim(struct bfa_ioc *ioc, u8 *dm_kva, u64 dm_pa)
{
  
#line 2589 
  ioc->attr_dma.kva = (void *)dm_kva;
  
#line 2590 
  ioc->attr_dma.pa = dm_pa;
  
#line 2591 
  ioc->attr = (struct bfi_ioc_attr *)dm_kva;
  
#line 2592 
  return;
}


#line 2596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
u32 bfa_nw_ioc_meminfo(void)
{
  u32 __retres;
  unsigned long tmp;
  {
    
#line 2598 
    int const __y = 256;
    
#line 2598 
    tmp = 768UL;
  }
  
#line 2598 
  __retres = (unsigned int)tmp;
  
#line 2598 
  return __retres;
}


#line 2602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_enable(struct bfa_ioc *ioc)
{
  
#line 2604 
  ioc->stats.ioc_enables += 1U;
  
#line 2605 
  ioc->dbg_fwsave_once = (_Bool)1;
  
#line 2607 
  (*(ioc->fsm))((void *)ioc,2);
  
#line 2608 
  return;
}


#line 2611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_disable(struct bfa_ioc *ioc)
{
  
#line 2613 
  ioc->stats.ioc_disables += 1U;
  
#line 2614 
  (*(ioc->fsm))((void *)ioc,3);
  
#line 2615 
  return;
}


#line 2619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_debug_memclaim(struct bfa_ioc *ioc, void *dbg_fwsave)
{
  
#line 2621 
  ioc->dbg_fwsave = dbg_fwsave;
  
#line 2622 
  if ((int)ioc->iocpf.auto_recover != 0) 
#line 2622 
                                         ioc->dbg_fwsave_len = 4128; else 
                                                                    
#line 2622 
                                                                    ioc->dbg_fwsave_len = 0;
  
#line 2623 
  return;
}


#line 2626  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static u32 bfa_ioc_smem_pgnum(struct bfa_ioc *ioc, u32 fmaddr)
{
  u32 __retres;
  
#line 2628 
  __retres = ioc->ioc_regs.smem_pg0 + (fmaddr >> 15);
  
#line 2628 
  return __retres;
}


#line 2633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_mbox_regisr(struct bfa_ioc *ioc, enum bfi_mclass mc, void (*cbfn)(void *, struct bfi_mbmsg *), void *cbarg)
{
  
#line 2636 
  struct bfa_ioc_mbox_mod *mod = & ioc->mbox_mod;
  
#line 2638 
  mod->mbhdlr[(unsigned int)mc].cbfn = cbfn;
  
#line 2639 
  mod->mbhdlr[(unsigned int)mc].cbarg = cbarg;
  
#line 2640 
  return;
}


#line 2651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
bool bfa_nw_ioc_mbox_queue(struct bfa_ioc *ioc, struct bfa_mbox_cmd *cmd, void (*cbfn)(void *), void *cbarg)
{
  bool __retres;
  u32 stat;
  int tmp;
  
#line 2654 
  struct bfa_ioc_mbox_mod *mod = & ioc->mbox_mod;
  
#line 2657 
  cmd->cbfn = cbfn;
  
#line 2658 
  cmd->cbarg = cbarg;
  
#line 2663 
  tmp = list_empty((struct list_head const *)(& mod->cmd_q));
  
#line 2663 
  if (tmp == 0) {
    
#line 2664 
    list_add_tail(& cmd->qe,& mod->cmd_q);
    
#line 2665 
    __retres = (_Bool)1;
    
#line 2665 
    goto return_label;
  }
  else ;
  
#line 2671 
  stat = readl((void const volatile *)ioc->ioc_regs.hfn_mbox_cmd);
  
#line 2672 
  if (stat != 0U) {
    
#line 2673 
    list_add_tail(& cmd->qe,& mod->cmd_q);
    
#line 2674 
    __retres = (_Bool)1;
    
#line 2674 
    goto return_label;
  }
  else ;
  
#line 2680 
  bfa_ioc_mbox_send(ioc,(void *)(& cmd->msg),32);
  
#line 2682 
  __retres = (_Bool)0;
  return_label: 
#line 2682 
                return __retres;
}


#line 2687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_mbox_isr(struct bfa_ioc *ioc)
{
  struct bfi_mbmsg m;
  int mc;
  bool tmp;
  
#line 2689 
  struct bfa_ioc_mbox_mod *mod = & ioc->mbox_mod;
  
#line 2693 
  tmp = bfa_ioc_msgget(ioc,(void *)(& m));
  
#line 2693 
  if ((int)tmp != 0) {
    
#line 2697 
    mc = (int)m.mh.msg_class;
    
#line 2698 
    if (mc == 1) {
      
#line 2699 
      bfa_ioc_isr(ioc,& m);
      
#line 2700 
      goto return_label;
    }
    else ;
    
#line 2703 
    if (mc > 33 || mod->mbhdlr[mc].cbfn == (void (*)(void *, struct bfi_mbmsg *))0) 
      
#line 2704 
      goto return_label; else ;
    
#line 2706 
    (*(mod->mbhdlr[mc].cbfn))(mod->mbhdlr[mc].cbarg,& m);
  }
  else ;
  
#line 2709 
  if ((ioc->ioc_hwif)->ioc_lpu_read_stat != (bool (*)(struct bfa_ioc *))0) 
    
#line 2709 
    (*((ioc->ioc_hwif)->ioc_lpu_read_stat))(ioc); else ;
  
#line 2714 
  bfa_ioc_mbox_poll(ioc);
  return_label: 
#line 2715 
                return;
}


#line 2718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_error_isr(struct bfa_ioc *ioc)
{
  
#line 2720 
  ioc->stats.ioc_hbfails += 1U;
  
#line 2721 
  ioc->stats.hb_count = ioc->hb_count;
  
#line 2722 
  (*(ioc->fsm))((void *)ioc,10);
  
#line 2723 
  return;
}


#line 2727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
bool bfa_nw_ioc_is_disabled(struct bfa_ioc *ioc)
{
  bool __retres;
  
#line 2729 
  __retres = (_Bool)((ioc->fsm == (void (*)(void *, int ))(& bfa_ioc_sm_disabling) || ioc->fsm == (void (*)(void *, int ))(& bfa_ioc_sm_disabled)) != 0);
  
#line 2729 
  return __retres;
}


#line 2735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
bool bfa_nw_ioc_is_operational(struct bfa_ioc *ioc)
{
  bool __retres;
  
#line 2737 
  __retres = (_Bool)(ioc->fsm == (void (*)(void *, int ))(& bfa_ioc_sm_op));
  
#line 2737 
  return __retres;
}


#line 2744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_notify_register(struct bfa_ioc *ioc, struct bfa_ioc_notify *notify)
{
  
#line 2747 
  list_add_tail(& notify->qe,& ioc->notify_q);
  
#line 2748 
  return;
}


#line 2752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_adapter_attr(struct bfa_ioc *ioc, struct bfa_adapter_attr *ad_attr)
{
  struct bfi_ioc_attr *ioc_attr;
  
#line 2757 
  ioc_attr = ioc->attr;
  
#line 2759 
  bfa_ioc_get_adapter_serial_num(ioc,(char *)(& ad_attr->serial_num));
  
#line 2760 
  bfa_ioc_get_adapter_fw_ver(ioc,(char *)(& ad_attr->fw_ver));
  
#line 2761 
  bfa_ioc_get_adapter_optrom_ver(ioc,(char *)(& ad_attr->optrom_ver));
  
#line 2762 
  bfa_ioc_get_adapter_manufacturer(ioc,(char *)(& ad_attr->manufacturer));
  
#line 2763 
  memcpy((void *)(& ad_attr->vpd),(void const *)(& ioc_attr->vpd),520UL);
  
#line 2766 
  ad_attr->nports = (unsigned char)((ioc->attr)->adapter_prop >> 8);
  
#line 2767 
  ad_attr->max_speed = (unsigned char)(ioc->attr)->adapter_prop;
  
#line 2769 
  bfa_ioc_get_adapter_model(ioc,(char *)(& ad_attr->model));
  
#line 2771 
  bfa_ioc_get_adapter_model(ioc,(char *)(& ad_attr->model_descr));
  
#line 2773 
  ad_attr->card_type = ioc_attr->card_type;
  
#line 2774 
  ad_attr->is_mezz = (unsigned char)((((((ioc_attr->card_type == 804U || ioc_attr->card_type == 1007U) || ioc_attr->card_type == 807U) || ioc_attr->card_type == 902U) || ioc_attr->card_type == 1741U) || ioc_attr->card_type == 1867U) != 0);
  
#line 2776 
  if ((ioc_attr->adapter_prop & 7340032U) != 0U) 
#line 2777 
                                                 ad_attr->prototype = (unsigned char)1U; else 
                                                                    
#line 2779 
                                                                    ad_attr->prototype = (unsigned char)0U;
  
#line 2781 
  ad_attr->pwwn = bfa_ioc_get_pwwn(ioc);
  
#line 2782 
  bfa_nw_ioc_get_mac(ioc,(u8 *)(& ad_attr->mac));
  
#line 2784 
  ad_attr->pcie_gen = ioc_attr->pcie_gen;
  
#line 2785 
  ad_attr->pcie_lanes = ioc_attr->pcie_lanes;
  
#line 2786 
  ad_attr->pcie_lanes_orig = ioc_attr->pcie_lanes_orig;
  
#line 2787 
  ad_attr->asic_rev = ioc_attr->asic_rev;
  
#line 2789 
  bfa_ioc_get_pci_chip_rev(ioc,(char *)(& ad_attr->hw_ver));
  
#line 2790 
  return;
}


#line 2793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_ioc_type bfa_ioc_get_type(struct bfa_ioc *ioc)
{
  enum bfa_ioc_type __retres;
  int tmp;
  
#line 2795 
  if (ioc->clscode == (unsigned int)BFI_PCIFN_CLASS_ETH) {
    
#line 2796 
    __retres = BFA_IOC_TYPE_LL;
    
#line 2796 
    goto return_label;
  }
  else ;
  
#line 2798 
  if ((long)(ioc->clscode != (unsigned int)BFI_PCIFN_CLASS_FC) != 0L) {
    
#line 2800 
    ldv_inline_asm();
    
#line 2798 
    ;
  }
  else ;
  
#line 2801 
  if ((unsigned int)(ioc->attr)->port_mode == 1U) 
#line 2801 
                                                  tmp = 1; else 
#line 2801 
                                                                tmp = 2;
  
#line 2801 
  __retres = (enum bfa_ioc_type)tmp;
  return_label: 
#line 2801 
                return __retres;
}


#line 2805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_adapter_serial_num(struct bfa_ioc *ioc, char *serial_num)
{
  
#line 2807 
  memcpy((void *)serial_num,(void const *)(& (ioc->attr)->brcd_serialnum),12UL);
  
#line 2809 
  return;
}


#line 2813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_adapter_fw_ver(struct bfa_ioc *ioc, char *fw_ver)
{
  
#line 2815 
  memcpy((void *)fw_ver,(void const *)(& (ioc->attr)->fw_version),64UL);
  
#line 2816 
  return;
}


#line 2819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_pci_chip_rev(struct bfa_ioc *ioc, char *chip_rev)
{
  
#line 2821 
  if ((long)(chip_rev == (char *)0) != 0L) {
    
#line 2823 
    ldv_inline_asm();
    
#line 2821 
    ;
  }
  else ;
  
#line 2823 
  memset((void *)chip_rev,0,8UL);
  
#line 2825 
  *chip_rev = (char)82;
  
#line 2826 
  *(chip_rev + 1U) = (char)101;
  
#line 2827 
  *(chip_rev + 2U) = (char)118;
  
#line 2828 
  *(chip_rev + 3U) = (char)45;
  
#line 2829 
  *(chip_rev + 4U) = (ioc->attr)->asic_rev;
  
#line 2830 
  *(chip_rev + 5U) = (char)0;
  
#line 2831 
  return;
}


#line 2834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_adapter_optrom_ver(struct bfa_ioc *ioc, char *optrom_ver)
{
  
#line 2836 
  memcpy((void *)optrom_ver,(void const *)(& (ioc->attr)->optrom_version),64UL);
  
#line 2837 
  return;
}


#line 2841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_adapter_manufacturer(struct bfa_ioc *ioc, char *manufacturer)
{
  
#line 2843 
  memcpy((void *)manufacturer,(void const *)"QLogic",8UL);
  
#line 2844 
  return;
}


#line 2847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_get_adapter_model(struct bfa_ioc *ioc, char *model)
{
  struct bfi_ioc_attr *ioc_attr;
  
#line 2851 
  if ((long)(model == (char *)0) != 0L) {
    
#line 2853 
    ldv_inline_asm();
    
#line 2851 
    ;
  }
  else ;
  
#line 2852 
  memset((void *)model,0,16UL);
  
#line 2854 
  ioc_attr = ioc->attr;
  
#line 2856 
  snprintf(model,16UL,"%s-%u",(char *)"QLogic",ioc_attr->card_type);
  
#line 2858 
  return;
}


#line 2861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static enum bfa_ioc_state bfa_ioc_get_state(struct bfa_ioc *ioc)
{
  enum bfa_iocpf_state iocpf_st;
  int tmp;
  
#line 2864 
  tmp = bfa_sm_to_state((struct bfa_sm_table const *)(& ioc_sm_table),ioc->fsm);
  
#line 2864 
  enum bfa_ioc_state ioc_st = (enum bfa_ioc_state)tmp;
  
#line 2866 
  if ((ioc_st == (unsigned int)BFA_IOC_ENABLING || ioc_st == (unsigned int)BFA_IOC_FAIL) || ioc_st == (unsigned int)BFA_IOC_INITFAIL) {
    int tmp_0;
    
#line 2869 
    tmp_0 = bfa_sm_to_state((struct bfa_sm_table const *)(& iocpf_sm_table),ioc->iocpf.fsm);
    
#line 2869 
    iocpf_st = (enum bfa_iocpf_state)tmp_0;
    
#line 2871 
    switch ((unsigned int)iocpf_st) {
      case (unsigned int)2: 
#line 2872 
      ;
      
#line 2873 
      ioc_st = BFA_IOC_SEMWAIT;
      
#line 2874 
      goto ldv_47991;
      case (unsigned int)3: 
#line 2876 
      ;
      
#line 2877 
      ioc_st = BFA_IOC_HWINIT;
      
#line 2878 
      goto ldv_47991;
      case (unsigned int)9: 
#line 2880 
      ;
      
#line 2881 
      ioc_st = BFA_IOC_FWMISMATCH;
      
#line 2882 
      goto ldv_47991;
      case (unsigned int)6: 
#line 2884 
      ;
      
#line 2885 
      ioc_st = BFA_IOC_FAIL;
      
#line 2886 
      goto ldv_47991;
      case (unsigned int)5: 
#line 2888 
      ;
      
#line 2889 
      ioc_st = BFA_IOC_INITFAIL;
      
#line 2890 
      goto ldv_47991;
      default: 
#line 2892 
      ;
      
#line 2893 
      goto ldv_47991;
    }
    ldv_47991: 
#line 2895 
    ;
  }
  else ;
  
#line 2896 
  return ioc_st;
}


#line 2900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_get_attr(struct bfa_ioc *ioc, struct bfa_ioc_attr *ioc_attr)
{
  
#line 2902 
  memset((void *)ioc_attr,0,1600UL);
  
#line 2904 
  ioc_attr->state = bfa_ioc_get_state(ioc);
  
#line 2905 
  ioc_attr->port_id = ioc->port_id;
  
#line 2906 
  ioc_attr->port_mode = (unsigned char)ioc->port_mode;
  
#line 2908 
  ioc_attr->port_mode_cfg = ioc->port_mode_cfg;
  
#line 2909 
  ioc_attr->cap_bm = ioc->ad_cap_bm;
  
#line 2911 
  ioc_attr->ioc_type = bfa_ioc_get_type(ioc);
  
#line 2913 
  bfa_ioc_get_adapter_attr(ioc,& ioc_attr->adapter_attr);
  
#line 2915 
  ioc_attr->pci_attr.device_id = ioc->pcidev.device_id;
  
#line 2916 
  ioc_attr->pci_attr.pcifn = (unsigned int)ioc->pcidev.pci_func;
  
#line 2917 
  ioc_attr->def_fn = (unsigned char)((int)ioc->pcidev.pci_func == (int)ioc->port_id);
  
#line 2918 
  bfa_ioc_get_pci_chip_rev(ioc,(char *)(& ioc_attr->pci_attr.chip_rev));
  
#line 2919 
  return;
}


#line 2923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static u64 bfa_ioc_get_pwwn(struct bfa_ioc *ioc)
{
  u64 __retres;
  
#line 2925 
  __retres = (ioc->attr)->pwwn;
  
#line 2925 
  return __retres;
}


#line 2929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_ioc_get_mac(struct bfa_ioc *ioc, u8 *mac)
{
  
#line 2931 
  ether_addr_copy(mac,(u8 const *)(& (ioc->attr)->mac));
  
#line 2932 
  return;
}


#line 2936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_recover(struct bfa_ioc *ioc)
{
  
#line 2938 
  printk("\001");
  
#line 2939 
  ioc->stats.ioc_hbfails += 1U;
  
#line 2940 
  ioc->stats.hb_count = ioc->hb_count;
  
#line 2941 
  (*(ioc->fsm))((void *)ioc,9);
  
#line 2942 
  return;
}


#line 2947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_enable(struct bfa_ioc *ioc)
{
  
#line 2949 
  (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),1);
  
#line 2950 
  return;
}


#line 2953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_disable(struct bfa_ioc *ioc)
{
  
#line 2955 
  (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),2);
  
#line 2956 
  return;
}


#line 2959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_fail(struct bfa_ioc *ioc)
{
  
#line 2961 
  (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),7);
  
#line 2962 
  return;
}


#line 2965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_initfail(struct bfa_ioc *ioc)
{
  
#line 2967 
  (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),8);
  
#line 2968 
  return;
}


#line 2971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_getattrfail(struct bfa_ioc *ioc)
{
  
#line 2973 
  (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),9);
  
#line 2974 
  return;
}


#line 2977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_iocpf_stop(struct bfa_ioc *ioc)
{
  
#line 2979 
  (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),3);
  
#line 2980 
  return;
}


#line 2983  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_iocpf_timeout(struct bfa_ioc *ioc)
{
  enum bfa_iocpf_state iocpf_st;
  int tmp;
  
#line 2987 
  tmp = bfa_sm_to_state((struct bfa_sm_table const *)(& iocpf_sm_table),ioc->iocpf.fsm);
  
#line 2987 
  iocpf_st = (enum bfa_iocpf_state)tmp;
  
#line 2989 
  if (iocpf_st == (unsigned int)BFA_IOCPF_HWINIT) 
#line 2990 
                                                  bfa_ioc_poll_fwinit(ioc); else 
                                                                    
#line 2992 
                                                                    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),11);
  
#line 2993 
  return;
}


#line 2996  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_iocpf_sem_timeout(struct bfa_ioc *ioc)
{
  
#line 2998 
  bfa_ioc_hw_sem_get(ioc);
  
#line 2999 
  return;
}


#line 3002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_ioc_poll_fwinit(struct bfa_ioc *ioc)
{
  enum bfi_ioc_state tmp;
  
#line 3004 
  tmp = (*((ioc->ioc_hwif)->ioc_get_fwstate))(ioc);
  
#line 3004 
  u32 fwstate = tmp;
  
#line 3006 
  if (fwstate == 6U) {
    
#line 3007 
    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),4);
    
#line 3008 
    goto return_label;
  }
  else ;
  
#line 3011 
  if (ioc->iocpf.poll_time > 2999U) 
#line 3012 
                                    (*(ioc->iocpf.fsm))((void *)(& ioc->iocpf),11);
  else {
    unsigned long tmp_0;
    
#line 3014 
    ioc->iocpf.poll_time += 200U;
    
#line 3015 
    tmp_0 = msecs_to_jiffies(200U);
    
#line 3015 
    ;
    
#line 3015 
    ;
    
#line 3015 
    ldv_mod_timer_96(& ioc->iocpf_timer,tmp_0 + jiffies);
  }
  return_label: 
#line 3017 
                return;
}


#line 3034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_cb(struct bfa_flash *flash)
{
  
#line 3036 
  flash->op_busy = 0U;
  
#line 3037 
  if (flash->cbfn != (void (*)(void *, enum bfa_status ))0) 
#line 3038 
                                                            (*(flash->cbfn))(flash->cbarg,flash->status); else ;
  
#line 3039 
  return;
}


#line 3042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_notify(void *cbarg, enum bfa_ioc_event event)
{
  
#line 3044 
  struct bfa_flash *flash = (struct bfa_flash *)cbarg;
  
#line 3046 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 3047 
    ;
    case (unsigned int)3: 
#line 3048 
    ;
    
#line 3049 
    if (flash->op_busy != 0U) {
      
#line 3050 
      flash->status = BFA_STATUS_IOC_FAILURE;
      
#line 3051 
      (*(flash->cbfn))(flash->cbarg,flash->status);
      
#line 3052 
      flash->op_busy = 0U;
    }
    else ;
    
#line 3054 
    goto ldv_48050;
    default: 
#line 3055 
    ;
    
#line 3056 
    goto ldv_48050;
  }
  ldv_48050: 
#line 3058 
  ;
  
#line 3059 
  return;
}


#line 3064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_write_send(struct bfa_flash *flash)
{
  u32 len;
  unsigned long tmp_1;
  
#line 3066 
  struct bfi_flash_write_req *msg = (struct bfi_flash_write_req *)(& flash->mb.msg);
  
#line 3070 
  if (0 != 0) 
#line 3070 
              msg->type = (((flash->type << 24) | ((flash->type << 8) & 16711680U)) | ((flash->type >> 8) & 65280U)) | (flash->type >> 24); else 
                                                                    
#line 3070 
                                                                    msg->type = __fswab32(flash->type);
  
#line 3071 
  msg->instance = flash->instance;
  
#line 3072 
  if (0 != 0) 
#line 3072 
              msg->offset = ((((flash->addr_off + flash->offset) << 24) | (((flash->addr_off + flash->offset) << 8) & 16711680U)) | (((flash->addr_off + flash->offset) >> 8) & 65280U)) | ((flash->addr_off + flash->offset) >> 24); else 
                                                                    
#line 3072 
                                                                    msg->offset = __fswab32(flash->addr_off + flash->offset);
  {
    
#line 3073 
    int const __y = 2048;
    
#line 3073 
    tmp_1 = 67584UL;
  }
  
#line 3073 
  ;
  
#line 3073 
  if ((unsigned long)flash->residue < tmp_1) 
#line 3073 
                                             len = flash->residue;
  else {
    unsigned long tmp_2;
    {
      
#line 3074 
      int const __y_0 = 2048;
      
#line 3074 
      tmp_2 = 67584UL;
    }
    
#line 3073 
    len = (unsigned int)tmp_2;
  }
  
#line 3075 
  if (0 != 0) 
#line 3075 
              msg->length = (((len << 24) | ((len << 8) & 16711680U)) | ((len >> 8) & 65280U)) | (len >> 24); else 
                                                                    
#line 3075 
                                                                    msg->length = __fswab32(len);
  
#line 3078 
  msg->last = (unsigned char)(flash->residue == len);
  
#line 3080 
  msg->mh.msg_class = (unsigned char)3U;
  
#line 3080 
  msg->mh.msg_id = (unsigned char)3U;
  
#line 3080 
  msg->mh.mtag.h2i.fn_lpu = (flash->ioc)->port_id;
  
#line 3082 
  __bfa_alen_set(& msg->alen,len,flash->dbuf_pa);
  
#line 3083 
  memcpy((void *)flash->dbuf_kva,(void const *)(flash->ubuf + flash->offset),(unsigned long)len);
  
#line 3084 
  bfa_nw_ioc_mbox_queue(flash->ioc,& flash->mb,(void (*)(void *))0,(void *)0);
  
#line 3086 
  flash->residue -= len;
  
#line 3087 
  flash->offset += len;
  
#line 3088 
  return;
}


#line 3096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_read_send(void *cbarg)
{
  u32 len;
  unsigned long tmp_1;
  
#line 3098 
  struct bfa_flash *flash = (struct bfa_flash *)cbarg;
  
#line 3099 
  struct bfi_flash_read_req *msg = (struct bfi_flash_read_req *)(& flash->mb.msg);
  
#line 3103 
  if (0 != 0) 
#line 3103 
              msg->type = (((flash->type << 24) | ((flash->type << 8) & 16711680U)) | ((flash->type >> 8) & 65280U)) | (flash->type >> 24); else 
                                                                    
#line 3103 
                                                                    msg->type = __fswab32(flash->type);
  
#line 3104 
  msg->instance = flash->instance;
  
#line 3105 
  if (0 != 0) 
#line 3105 
              msg->offset = ((((flash->addr_off + flash->offset) << 24) | (((flash->addr_off + flash->offset) << 8) & 16711680U)) | (((flash->addr_off + flash->offset) >> 8) & 65280U)) | ((flash->addr_off + flash->offset) >> 24); else 
                                                                    
#line 3105 
                                                                    msg->offset = __fswab32(flash->addr_off + flash->offset);
  {
    
#line 3106 
    int const __y = 2048;
    
#line 3106 
    tmp_1 = 67584UL;
  }
  
#line 3106 
  ;
  
#line 3106 
  if ((unsigned long)flash->residue < tmp_1) 
#line 3106 
                                             len = flash->residue;
  else {
    unsigned long tmp_2;
    {
      
#line 3107 
      int const __y_0 = 2048;
      
#line 3107 
      tmp_2 = 67584UL;
    }
    
#line 3106 
    len = (unsigned int)tmp_2;
  }
  
#line 3108 
  if (0 != 0) 
#line 3108 
              msg->length = (((len << 24) | ((len << 8) & 16711680U)) | ((len >> 8) & 65280U)) | (len >> 24); else 
                                                                    
#line 3108 
                                                                    msg->length = __fswab32(len);
  
#line 3109 
  msg->mh.msg_class = (unsigned char)3U;
  
#line 3109 
  msg->mh.msg_id = (unsigned char)4U;
  
#line 3109 
  msg->mh.mtag.h2i.fn_lpu = (flash->ioc)->port_id;
  
#line 3111 
  __bfa_alen_set(& msg->alen,len,flash->dbuf_pa);
  
#line 3112 
  bfa_nw_ioc_mbox_queue(flash->ioc,& flash->mb,(void (*)(void *))0,(void *)0);
  
#line 3113 
  return;
}


#line 3122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
static void bfa_flash_intr(void *flasharg, struct bfi_mbmsg *msg)
{
  u32 status;
  union __anonunion_m_2205 m;
  
#line 3124 
  struct bfa_flash *flash = (struct bfa_flash *)flasharg;
  
#line 3134 
  m.msg = msg;
  
#line 3137 
  if (flash->op_busy == 0U && (unsigned int)msg->mh.msg_id != 255U) 
#line 3138 
                                                                    goto return_label; else ;
  
#line 3140 
  switch ((int)msg->mh.msg_id) {
    case 129: 
#line 3141 
    ;
    
#line 3142 
    if (0 != 0) 
#line 3142 
                status = ((((m.query)->status << 24) | (((m.query)->status << 8) & 16711680U)) | (((m.query)->status >> 8) & 65280U)) | ((m.query)->status >> 24); else 
                                                                    
#line 3142 
                                                                    status = __fswab32((m.query)->status);
    
#line 3143 
    if (status == 0U) {
      u32 i;
      struct bfa_flash_attr *attr;
      struct bfa_flash_attr *f;
      
#line 3147 
      attr = (struct bfa_flash_attr *)flash->ubuf;
      
#line 3148 
      f = (struct bfa_flash_attr *)flash->dbuf_kva;
      
#line 3149 
      if (0 != 0) 
#line 3149 
                  attr->status = (((f->status << 24) | ((f->status << 8) & 16711680U)) | ((f->status >> 8) & 65280U)) | (f->status >> 24); else 
                                                                    
#line 3149 
                                                                    attr->status = __fswab32(f->status);
      
#line 3150 
      if (0 != 0) 
#line 3150 
                  attr->npart = (((f->npart << 24) | ((f->npart << 8) & 16711680U)) | ((f->npart >> 8) & 65280U)) | (f->npart >> 24); else 
                                                                    
#line 3150 
                                                                    attr->npart = __fswab32(f->npart);
      
#line 3151 
      i = 0U;
      
#line 3151 
      goto ldv_48088;
      ldv_48087: 
#line 3152 
      ;
      
#line 3152 
      if (0 != 0) 
#line 3152 
                  attr->part[i].part_type = (((f->part[i].part_type << 24) | ((f->part[i].part_type << 8) & 16711680U)) | ((f->part[i].part_type >> 8) & 65280U)) | (f->part[i].part_type >> 24); else 
                                                                    
#line 3153 
                                                                    attr->part[i].part_type = __fswab32(f->part[i].part_type);
      
#line 3154 
      if (0 != 0) 
#line 3154 
                  attr->part[i].part_instance = (((f->part[i].part_instance << 24) | ((f->part[i].part_instance << 8) & 16711680U)) | ((f->part[i].part_instance >> 8) & 65280U)) | (f->part[i].part_instance >> 24); else 
                                                                    
#line 3155 
                                                                    attr->part[i].part_instance = __fswab32(f->part[i].part_instance);
      
#line 3156 
      if (0 != 0) 
#line 3156 
                  attr->part[i].part_off = (((f->part[i].part_off << 24) | ((f->part[i].part_off << 8) & 16711680U)) | ((f->part[i].part_off >> 8) & 65280U)) | (f->part[i].part_off >> 24); else 
                                                                    
#line 3157 
                                                                    attr->part[i].part_off = __fswab32(f->part[i].part_off);
      
#line 3158 
      if (0 != 0) 
#line 3158 
                  attr->part[i].part_size = (((f->part[i].part_size << 24) | ((f->part[i].part_size << 8) & 16711680U)) | ((f->part[i].part_size >> 8) & 65280U)) | (f->part[i].part_size >> 24); else 
                                                                    
#line 3159 
                                                                    attr->part[i].part_size = __fswab32(f->part[i].part_size);
      
#line 3160 
      if (0 != 0) 
#line 3160 
                  attr->part[i].part_len = (((f->part[i].part_len << 24) | ((f->part[i].part_len << 8) & 16711680U)) | ((f->part[i].part_len >> 8) & 65280U)) | (f->part[i].part_len >> 24); else 
                                                                    
#line 3161 
                                                                    attr->part[i].part_len = __fswab32(f->part[i].part_len);
      
#line 3162 
      if (0 != 0) 
#line 3162 
                  attr->part[i].part_status = (((f->part[i].part_status << 24) | ((f->part[i].part_status << 8) & 16711680U)) | ((f->part[i].part_status >> 8) & 65280U)) | (f->part[i].part_status >> 24); else 
                                                                    
#line 3163 
                                                                    attr->part[i].part_status = __fswab32(f->part[i].part_status);
      
#line 3151 
      i += 1U;
      ldv_48088: 
#line 3152 
      ;
      
#line 3151 
      if (attr->npart > i) 
#line 3153 
                           goto ldv_48087; else 
#line 3156 
                                                goto ldv_48089;
      ldv_48089: 
#line 3157 
      ;
    }
    else ;
    
#line 3166 
    flash->status = (enum bfa_status)status;
    
#line 3167 
    bfa_flash_cb(flash);
    
#line 3168 
    goto ldv_48090;
    case 131: 
#line 3169 
    ;
    
#line 3170 
    if (0 != 0) 
#line 3170 
                status = ((((m.write)->status << 24) | (((m.write)->status << 8) & 16711680U)) | (((m.write)->status >> 8) & 65280U)) | ((m.write)->status >> 24); else 
                                                                    
#line 3170 
                                                                    status = __fswab32((m.write)->status);
    
#line 3171 
    if (status != 0U || flash->residue == 0U) {
      
#line 3172 
      flash->status = (enum bfa_status)status;
      
#line 3173 
      bfa_flash_cb(flash);
    }
    else 
#line 3175 
         bfa_flash_write_send(flash);
    
#line 3176 
    goto ldv_48090;
    case 132: 
#line 3177 
    ;
    
#line 3178 
    if (0 != 0) 
#line 3178 
                status = ((((m.read)->status << 24) | (((m.read)->status << 8) & 16711680U)) | (((m.read)->status >> 8) & 65280U)) | ((m.read)->status >> 24); else 
                                                                    
#line 3178 
                                                                    status = __fswab32((m.read)->status);
    
#line 3179 
    if (status != 0U) {
      
#line 3180 
      flash->status = (enum bfa_status)status;
      
#line 3181 
      bfa_flash_cb(flash);
    }
    else {
      unsigned int tmp_11;
      
#line 3183 
      if (0 != 0) 
#line 3183 
                  tmp_11 = ((((m.read)->length << 24) | (((m.read)->length << 8) & 16711680U)) | (((m.read)->length >> 8) & 65280U)) | ((m.read)->length >> 24); else 
                                                                    
#line 3183 
                                                                    tmp_11 = __fswab32((m.read)->length);
      
#line 3183 
      u32 len = tmp_11;
      
#line 3184 
      memcpy((void *)(flash->ubuf + flash->offset),(void const *)flash->dbuf_kva,(unsigned long)len);
      
#line 3186 
      flash->residue -= len;
      
#line 3187 
      flash->offset += len;
      
#line 3188 
      if (flash->residue == 0U) {
        
#line 3189 
        flash->status = (enum bfa_status)status;
        
#line 3190 
        bfa_flash_cb(flash);
      }
      else 
#line 3192 
           bfa_flash_read_send((void *)flash);
    }
    
#line 3194 
    goto ldv_48090;
    case 133: 
#line 3195 
    ;
    case 255: 
#line 3196 
    ;
    
#line 3197 
    goto ldv_48090;
    default: 
#line 3198 
    ;
    {
      
#line 3199 
      int __ret_warn_on = 1;
      
#line 3199 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 3199 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c",3199); else ;
      
#line 3199 
      long tmp_12 = (long)(__ret_warn_on != 0);
    }
  }
  ldv_48090: 
#line 3201 
  ;
  return_label: 
#line 3202 
                return;
}


#line 3207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
u32 bfa_nw_flash_meminfo(void)
{
  u32 __retres;
  unsigned long tmp_0;
  {
    unsigned long tmp;
    
#line 3209 
    int const __y = 256;
    {
      
#line 3209 
      int const __y_0 = 2048;
      
#line 3209 
      tmp = 67584UL;
    }
    
#line 3209 
    tmp_0 = (tmp + 255UL) & 18446744073709551360UL;
  }
  
#line 3209 
  __retres = (unsigned int)tmp_0;
  
#line 3209 
  return __retres;
}


#line 3220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_flash_attach(struct bfa_flash *flash, struct bfa_ioc *ioc, void *dev)
{
  
#line 3222 
  flash->ioc = ioc;
  
#line 3223 
  flash->cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 3224 
  flash->cbarg = (void *)0;
  
#line 3225 
  flash->op_busy = 0U;
  
#line 3227 
  bfa_nw_ioc_mbox_regisr(flash->ioc,(enum bfi_mclass)BFI_MC_FLASH,& bfa_flash_intr,(void *)flash);
  
#line 3228 
  flash->ioc_notify.cbfn = & bfa_flash_notify;
  
#line 3228 
  flash->ioc_notify.cbarg = (void *)flash;
  
#line 3229 
  list_add_tail(& flash->ioc_notify.qe,& (flash->ioc)->notify_q);
  
#line 3230 
  return;
}


#line 3240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
void bfa_nw_flash_memclaim(struct bfa_flash *flash, u8 *dm_kva, u64 dm_pa)
{
  unsigned long tmp;
  unsigned long tmp_1;
  unsigned long tmp_3;
  
#line 3242 
  flash->dbuf_kva = dm_kva;
  
#line 3243 
  flash->dbuf_pa = dm_pa;
  {
    
#line 3244 
    int const __y = 2048;
    
#line 3244 
    tmp = 67584UL;
  }
  
#line 3244 
  ;
  
#line 3244 
  memset((void *)flash->dbuf_kva,0,tmp);
  {
    unsigned long tmp_0;
    
#line 3245 
    int const __y_0 = 256;
    {
      
#line 3245 
      int const __y_1 = 2048;
      
#line 3245 
      tmp_0 = 67584UL;
    }
    
#line 3245 
    tmp_1 = (tmp_0 + 255UL) & 18446744073709551360UL;
  }
  
#line 3245 
  dm_kva += tmp_1;
  {
    unsigned long tmp_2;
    
#line 3246 
    int const __y_2 = 256;
    {
      
#line 3246 
      int const __y_3 = 2048;
      
#line 3246 
      tmp_2 = 67584UL;
    }
    
#line 3246 
    tmp_3 = (tmp_2 + 255UL) & 18446744073709551360UL;
  }
  
#line 3246 
  dm_pa = (unsigned long long)tmp_3 + dm_pa;
  
#line 3247 
  return;
}


#line 3260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
enum bfa_status bfa_nw_flash_get_attr(struct bfa_flash *flash, struct bfa_flash_attr *attr, void (*cbfn)(void *, enum bfa_status ), void *cbarg)
{
  enum bfa_status __retres;
  int tmp_0;
  bool tmp;
  
#line 3263 
  struct bfi_flash_query_req *msg = (struct bfi_flash_query_req *)(& flash->mb.msg);
  
#line 3266 
  tmp = bfa_nw_ioc_is_operational(flash->ioc);
  
#line 3266 
  if (tmp) 
#line 3266 
           tmp_0 = 0; else 
#line 3266 
                           tmp_0 = 1;
  
#line 3266 
  if (tmp_0) {
    
#line 3267 
    __retres = BFA_STATUS_IOC_NON_OP;
    
#line 3267 
    goto return_label;
  }
  else ;
  
#line 3269 
  if (flash->op_busy != 0U) {
    
#line 3270 
    __retres = BFA_STATUS_DEVBUSY;
    
#line 3270 
    goto return_label;
  }
  else ;
  
#line 3272 
  flash->op_busy = 1U;
  
#line 3273 
  flash->cbfn = cbfn;
  
#line 3274 
  flash->cbarg = cbarg;
  
#line 3275 
  flash->ubuf = (u8 *)attr;
  
#line 3277 
  msg->mh.msg_class = (unsigned char)3U;
  
#line 3277 
  msg->mh.msg_id = (unsigned char)1U;
  
#line 3277 
  msg->mh.mtag.h2i.fn_lpu = (flash->ioc)->port_id;
  
#line 3279 
  __bfa_alen_set(& msg->alen,1032U,flash->dbuf_pa);
  
#line 3280 
  bfa_nw_ioc_mbox_queue(flash->ioc,& flash->mb,(void (*)(void *))0,(void *)0);
  
#line 3282 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 3282 
                return __retres;
}


#line 3300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
enum bfa_status bfa_nw_flash_update_part(struct bfa_flash *flash, u32 type, u8 instance, void *buf, u32 len, u32 offset, void (*cbfn)(void *, enum bfa_status ), void *cbarg)
{
  enum bfa_status __retres;
  int tmp_0;
  bool tmp;
  
#line 3304 
  tmp = bfa_nw_ioc_is_operational(flash->ioc);
  
#line 3304 
  if (tmp) 
#line 3304 
           tmp_0 = 0; else 
#line 3304 
                           tmp_0 = 1;
  
#line 3304 
  if (tmp_0) {
    
#line 3305 
    __retres = BFA_STATUS_IOC_NON_OP;
    
#line 3305 
    goto return_label;
  }
  else ;
  
#line 3310 
  if (len == 0U || (len & 3U) != 0U) {
    
#line 3311 
    __retres = BFA_STATUS_FLASH_BAD_LEN;
    
#line 3311 
    goto return_label;
  }
  else ;
  
#line 3313 
  if (type == 7U) {
    
#line 3314 
    __retres = BFA_STATUS_EINVAL;
    
#line 3314 
    goto return_label;
  }
  else ;
  
#line 3316 
  if (flash->op_busy != 0U) {
    
#line 3317 
    __retres = BFA_STATUS_DEVBUSY;
    
#line 3317 
    goto return_label;
  }
  else ;
  
#line 3319 
  flash->op_busy = 1U;
  
#line 3320 
  flash->cbfn = cbfn;
  
#line 3321 
  flash->cbarg = cbarg;
  
#line 3322 
  flash->type = type;
  
#line 3323 
  flash->instance = instance;
  
#line 3324 
  flash->residue = len;
  
#line 3325 
  flash->offset = 0U;
  
#line 3326 
  flash->addr_off = offset;
  
#line 3327 
  flash->ubuf = (u8 *)buf;
  
#line 3329 
  bfa_flash_write_send(flash);
  
#line 3331 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 3331 
                return __retres;
}


#line 3349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc.c"
enum bfa_status bfa_nw_flash_read_part(struct bfa_flash *flash, u32 type, u8 instance, void *buf, u32 len, u32 offset, void (*cbfn)(void *, enum bfa_status ), void *cbarg)
{
  enum bfa_status __retres;
  int tmp_0;
  bool tmp;
  
#line 3353 
  tmp = bfa_nw_ioc_is_operational(flash->ioc);
  
#line 3353 
  if (tmp) 
#line 3353 
           tmp_0 = 0; else 
#line 3353 
                           tmp_0 = 1;
  
#line 3353 
  if (tmp_0) {
    
#line 3354 
    __retres = BFA_STATUS_IOC_NON_OP;
    
#line 3354 
    goto return_label;
  }
  else ;
  
#line 3359 
  if (len == 0U || (len & 3U) != 0U) {
    
#line 3360 
    __retres = BFA_STATUS_FLASH_BAD_LEN;
    
#line 3360 
    goto return_label;
  }
  else ;
  
#line 3362 
  if (flash->op_busy != 0U) {
    
#line 3363 
    __retres = BFA_STATUS_DEVBUSY;
    
#line 3363 
    goto return_label;
  }
  else ;
  
#line 3365 
  flash->op_busy = 1U;
  
#line 3366 
  flash->cbfn = cbfn;
  
#line 3367 
  flash->cbarg = cbarg;
  
#line 3368 
  flash->type = type;
  
#line 3369 
  flash->instance = instance;
  
#line 3370 
  flash->residue = len;
  
#line 3371 
  flash->offset = 0U;
  
#line 3372 
  flash->addr_off = offset;
  
#line 3373 
  flash->ubuf = (u8 *)buf;
  
#line 3375 
  bfa_flash_read_send((void *)flash);
  
#line 3377 
  __retres = BFA_STATUS_OK;
  return_label: 
#line 3377 
                return __retres;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
int ldv_emg_del_timer(struct timer_list *arg0);


#line 757  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_74(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 761 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 761 
  return tmp;
}


#line 765  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_75(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 769 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 769 
  return tmp;
}


#line 773  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_76(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 777 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 777 
  return tmp;
}


#line 781  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_77(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 785 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 785 
  return tmp;
}


#line 789  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 793 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 793 
  return tmp;
}


#line 797  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_79(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 801 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 801 
  return tmp;
}


#line 805  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_80(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 809 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 809 
  return tmp;
}


#line 813  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_81(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 817 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 817 
  return tmp;
}


#line 821  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_82(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 825 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 825 
  return tmp;
}


#line 829  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_83(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 833 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 833 
  return tmp;
}


#line 837  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 841 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 841 
  return tmp;
}


#line 845  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_85(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 849 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 849 
  return tmp;
}


#line 853  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_86(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 857 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 857 
  return tmp;
}


#line 861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_87(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 865 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 865 
  return tmp;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_88(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 873 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 873 
  return tmp;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_89(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 881 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 881 
  return tmp;
}


#line 885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_90(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 889 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 889 
  return tmp;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_91(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 897 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 897 
  return tmp;
}


#line 901  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_92(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 905 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 905 
  return tmp;
}


#line 909  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_93_0(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 913 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 913 
  return tmp;
}


#line 917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_94(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 921 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 921 
  return tmp;
}


#line 925  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_del_timer_95(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 929 
  tmp = ldv_emg_del_timer(ldv_func_arg1);
  
#line 929 
  return tmp;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/weaver/.tmp_bfa_ioc.c.aux"
static int ldv_mod_timer_96(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 937 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 937 
  return tmp;
}


#line 1079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_alert(struct device const *, char const * , ...);


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
struct firmware const *bfi_fw;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
static u32 *bfi_image_ct_cna;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
static u32 *bfi_image_ct2_cna;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
static u32 bfi_image_ct_cna_size;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
static u32 bfi_image_ct2_cna_size;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
static u32 *cna_read_firmware(struct pci_dev *pdev, u32 **bfi_image, u32 *bfi_image_size, char *fw_name)
{
  u32 *__retres;
  struct firmware const *fw;
  u32 n;
  int tmp;
  
#line 35 
  tmp = request_firmware(& fw,(char const *)fw_name,& pdev->dev);
  
#line 35 
  if (tmp != 0) {
    
#line 36 
    dev_alert((struct device const *)(& pdev->dev),"can\'t load firmware %s\n",fw_name);
    
#line 37 
    goto error;
  }
  else ;
  
#line 40 
  *bfi_image = (u32 *)fw->data;
  
#line 41 
  *bfi_image_size = (unsigned int)(fw->size / 4UL);
  
#line 42 
  bfi_fw = fw;
  
#line 47 
  n = 0U;
  
#line 47 
  goto ldv_57475;
  ldv_57474: 
#line 48 
  ;
  
#line 48 
  u32 *tmp_2 = *bfi_image + n;
  
#line 47 
  n += 1U;
  ldv_57475: 
#line 48 
  ;
  
#line 47 
  if (*bfi_image_size > n) 
#line 49 
                           goto ldv_57474; else 
#line 52 
                                                goto ldv_57476;
  ldv_57476: 
#line 53 
  ;
  
#line 50 
  __retres = *bfi_image;
  
#line 50 
  goto return_label;
  error: 
#line 51 
  ;
  
#line 52 
  __retres = (u32 *)0U;
  return_label: 
#line 52 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
u32 *cna_get_firmware_buf(struct pci_dev *pdev)
{
  u32 *__retres;
  
#line 58 
  if ((unsigned int)pdev->device == 34U) {
    
#line 59 
    if (bfi_image_ct2_cna_size == 0U) 
#line 60 
                                      cna_read_firmware(pdev,& bfi_image_ct2_cna,& bfi_image_ct2_cna_size,(char *)"ct2fw-3.2.5.1.bin"); else ;
    
#line 62 
    __retres = bfi_image_ct2_cna;
    
#line 62 
    goto return_label;
  }
  else 
    
#line 63 
    if ((unsigned int)pdev->device == 20U || (unsigned int)pdev->device == 33U) {
      
#line 64 
      if (bfi_image_ct_cna_size == 0U) 
#line 65 
                                       cna_read_firmware(pdev,& bfi_image_ct_cna,& bfi_image_ct_cna_size,(char *)"ctfw-3.2.5.1.bin"); else ;
      
#line 67 
      __retres = bfi_image_ct_cna;
      
#line 67 
      goto return_label;
    }
    else ;
  
#line 70 
  __retres = (u32 *)0U;
  return_label: 
#line 70 
                return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
u32 *bfa_cb_image_get_chunk(enum bfi_asic_gen asic_gen, u32 off)
{
  u32 *__retres;
  
#line 76 
  switch ((unsigned int)asic_gen) {
    case (unsigned int)2: 
#line 77 
    ;
    
#line 78 
    __retres = bfi_image_ct_cna + off;
    
#line 78 
    goto return_label;
    case (unsigned int)3: 
#line 79 
    ;
    
#line 80 
    __retres = bfi_image_ct2_cna + off;
    
#line 80 
    goto return_label;
    default: 
#line 81 
    ;
    
#line 82 
    __retres = (u32 *)0U;
    
#line 82 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/cna_fwimg.c"
u32 bfa_cb_image_get_size(enum bfi_asic_gen asic_gen)
{
  u32 __retres;
  
#line 89 
  switch ((unsigned int)asic_gen) {
    case (unsigned int)2: 
#line 90 
    ;
    
#line 91 
    __retres = bfi_image_ct_cna_size;
    
#line 91 
    goto return_label;
    case (unsigned int)3: 
#line 92 
    ;
    
#line 93 
    __retres = bfi_image_ct2_cna_size;
    
#line 93 
    goto return_label;
    default: 
#line 94 
    ;
    
#line 95 
    __retres = 0U;
    
#line 95 
    goto return_label;
  }
  return_label: 
#line 89 
                return __retres;
}


#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna.h"
struct bna_mac *bna_cam_mod_mac_get(struct list_head *head);


#line 279 
struct bna_mcam_handle *bna_mcam_mod_handle_get(struct bna_mcam_mod *mcam_mod);


#line 280 
void bna_mcam_mod_handle_put(struct bna_mcam_mod *mcam_mod, struct bna_mcam_handle *handle);


#line 291 
void bna_ethport_cb_rx_started(struct bna_ethport *ethport);


#line 292 
void bna_ethport_cb_rx_stopped(struct bna_ethport *ethport);


#line 297 
void bna_bfi_tx_enet_start_rsp(struct bna_tx *tx, struct bfi_msgq_mhdr *msghdr);


#line 299 
void bna_bfi_tx_enet_stop_rsp(struct bna_tx *tx, struct bfi_msgq_mhdr *msghdr);


#line 301 
void bna_bfi_bw_update_aen(struct bna_tx_mod *tx_mod);


#line 304 
void bna_tx_mod_init(struct bna_tx_mod *tx_mod, struct bna *bna, struct bna_res_info *res_info);


#line 306 
void bna_tx_mod_uninit(struct bna_tx_mod *tx_mod);


#line 309 
void bna_tx_mod_start(struct bna_tx_mod *tx_mod, enum bna_tx_type type);


#line 310 
void bna_tx_mod_stop(struct bna_tx_mod *tx_mod, enum bna_tx_type type);


#line 311 
void bna_tx_mod_fail(struct bna_tx_mod *tx_mod);


#line 330 
void bna_bfi_rx_enet_start_rsp(struct bna_rx *rx, struct bfi_msgq_mhdr *msghdr);


#line 332 
void bna_bfi_rx_enet_stop_rsp(struct bna_rx *rx, struct bfi_msgq_mhdr *msghdr);


#line 334 
void bna_bfi_rxf_cfg_rsp(struct bna_rxf *rxf, struct bfi_msgq_mhdr *msghdr);


#line 335 
void bna_bfi_rxf_mcast_add_rsp(struct bna_rxf *rxf, struct bfi_msgq_mhdr *msghdr);


#line 337 
void bna_bfi_rxf_ucast_set_rsp(struct bna_rxf *rxf, struct bfi_msgq_mhdr *msghdr);


#line 341 
void bna_rx_mod_init(struct bna_rx_mod *rx_mod, struct bna *bna, struct bna_res_info *res_info);


#line 343 
void bna_rx_mod_uninit(struct bna_rx_mod *rx_mod);


#line 346 
void bna_rx_mod_start(struct bna_rx_mod *rx_mod, enum bna_rx_type type);


#line 347 
void bna_rx_mod_stop(struct bna_rx_mod *rx_mod, enum bna_rx_type type);


#line 348 
void bna_rx_mod_fail(struct bna_rx_mod *rx_mod);


#line 386 
int bna_enet_mtu_get(struct bna_enet *enet);


#line 389 
void bna_enet_cb_tx_stopped(struct bna_enet *enet);


#line 390 
void bna_enet_cb_rx_stopped(struct bna_enet *enet);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
__inline static int ethport_can_be_up(struct bna_ethport *ethport)
{
  
#line 24 
  int ready = 0;
  
#line 25 
  if ((ethport->bna)->enet.type == (unsigned int)BNA_ENET_T_REGULAR) 
    
#line 26 
    ready = ((((unsigned int)ethport->flags & 1U) != 0U && ((unsigned int)ethport->flags & 4U) != 0U) && ((unsigned int)ethport->flags & 2U) != 0U) != 0; else 
                                                                    
#line 30 
                                                                    ready = ((((unsigned int)ethport->flags & 1U) != 0U && ((unsigned int)ethport->flags & 4U) != 0U) && ((unsigned int)ethport->flags & 2U) == 0U) != 0;
  
#line 33 
  return ready;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_enable_aen(struct bna_ethport *ethport, struct bfi_msgq_mhdr *msghdr)
{
  int tmp;
  
#line 87 
  ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags | 2U);
  
#line 89 
  tmp = ethport_can_be_up(ethport);
  
#line 89 
  if (tmp != 0) 
#line 90 
                (*(ethport->fsm))((void *)ethport,4); else ;
  
#line 91 
  return;
}


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_disable_aen(struct bna_ethport *ethport, struct bfi_msgq_mhdr *msghdr)
{
  
#line 97 
  int ethport_up = ethport_can_be_up(ethport);
  
#line 99 
  ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags & 4294967293U);
  
#line 101 
  if (ethport_up != 0) 
#line 102 
                       (*(ethport->fsm))((void *)ethport,5); else ;
  
#line 103 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_admin_rsp(struct bna_ethport *ethport, struct bfi_msgq_mhdr *msghdr)
{
  struct bfi_enet_rsp *tmp;
  
#line 109 
  struct bfi_enet_enable_req *admin_req = & ethport->bfi_enet_cmd.admin_req;
  {
    
#line 112 
    struct bfi_msgq_mhdr const *__mptr = (struct bfi_msgq_mhdr const *)msghdr;
    
#line 112 
    tmp = (struct bfi_enet_rsp *)__mptr;
  }
  
#line 111 
  struct bfi_enet_rsp *rsp = tmp;
  
#line 114 
  switch ((int)admin_req->enable) {
    case 1: 
#line 115 
    ;
    
#line 116 
    if ((unsigned int)rsp->error == 0U) 
#line 117 
                                        (*(ethport->fsm))((void *)ethport,6);
    else {
      
#line 119 
      ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags & 4294967293U);
      
#line 120 
      (*(ethport->fsm))((void *)ethport,8);
    }
    
#line 122 
    goto ldv_48419;
    case 0: 
#line 124 
    ;
    
#line 125 
    (*(ethport->fsm))((void *)ethport,7);
    
#line 126 
    ethport->link_status = BNA_LINK_DOWN;
    
#line 127 
    (*(ethport->link_cbfn))((ethport->bna)->bnad,(enum bna_link_status)BNA_LINK_DOWN);
    
#line 128 
    goto ldv_48419;
  }
  ldv_48419: 
#line 130 
  ;
  
#line 131 
  return;
}


#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_lpbk_rsp(struct bna_ethport *ethport, struct bfi_msgq_mhdr *msghdr)
{
  struct bfi_enet_rsp *tmp;
  
#line 136 
  struct bfi_enet_diag_lb_req *diag_lb_req = & ethport->bfi_enet_cmd.lpbk_req;
  {
    
#line 139 
    struct bfi_msgq_mhdr const *__mptr = (struct bfi_msgq_mhdr const *)msghdr;
    
#line 139 
    tmp = (struct bfi_enet_rsp *)__mptr;
  }
  
#line 138 
  struct bfi_enet_rsp *rsp = tmp;
  
#line 141 
  switch ((int)diag_lb_req->enable) {
    case 1: 
#line 142 
    ;
    
#line 143 
    if ((unsigned int)rsp->error == 0U) 
#line 144 
                                        (*(ethport->fsm))((void *)ethport,6);
    else {
      
#line 146 
      ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags & 4294967294U);
      
#line 147 
      (*(ethport->fsm))((void *)ethport,8);
    }
    
#line 149 
    goto ldv_48430;
    case 0: 
#line 151 
    ;
    
#line 152 
    (*(ethport->fsm))((void *)ethport,7);
    
#line 153 
    goto ldv_48430;
  }
  ldv_48430: 
#line 155 
  ;
  
#line 156 
  return;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_pause_set_rsp(struct bna_enet *enet, struct bfi_msgq_mhdr *msghdr)
{
  
#line 160 
  (*(enet->fsm))((void *)enet,6);
  
#line 161 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_attr_get_rsp(struct bna_ioceth *ioceth, struct bfi_msgq_mhdr *msghdr)
{
  struct bfi_enet_attr_rsp *tmp;
  {
    
#line 168 
    struct bfi_msgq_mhdr const *__mptr = (struct bfi_msgq_mhdr const *)msghdr;
    
#line 168 
    tmp = (struct bfi_enet_attr_rsp *)__mptr;
  }
  
#line 167 
  struct bfi_enet_attr_rsp *rsp = tmp;
  
#line 174 
  if (! ioceth->attr.fw_query_complete) {
    unsigned int tmp_1;
    unsigned int tmp_3;
    unsigned int tmp_5;
    unsigned int tmp_7;
    
#line 175 
    if (0 != 0) 
#line 175 
                tmp_1 = (((rsp->max_cfg << 24) | ((rsp->max_cfg << 8) & 16711680U)) | ((rsp->max_cfg >> 8) & 65280U)) | (rsp->max_cfg >> 24); else 
                                                                    
#line 175 
                                                                    tmp_1 = __fswab32(rsp->max_cfg);
    
#line 175 
    ioceth->attr.num_txq = (int)tmp_1;
    
#line 176 
    if (0 != 0) 
#line 176 
                tmp_3 = (((rsp->max_cfg << 24) | ((rsp->max_cfg << 8) & 16711680U)) | ((rsp->max_cfg >> 8) & 65280U)) | (rsp->max_cfg >> 24); else 
                                                                    
#line 176 
                                                                    tmp_3 = __fswab32(rsp->max_cfg);
    
#line 176 
    ioceth->attr.num_rxp = (int)tmp_3;
    
#line 177 
    if (0 != 0) 
#line 177 
                tmp_5 = (((rsp->max_ucmac << 24) | ((rsp->max_ucmac << 8) & 16711680U)) | ((rsp->max_ucmac >> 8) & 65280U)) | (rsp->max_ucmac >> 24); else 
                                                                    
#line 177 
                                                                    tmp_5 = __fswab32(rsp->max_ucmac);
    
#line 177 
    ioceth->attr.num_ucmac = (int)tmp_5;
    
#line 178 
    ioceth->attr.num_mcmac = 256;
    
#line 179 
    if (0 != 0) 
#line 179 
                tmp_7 = (((rsp->rit_size << 24) | ((rsp->rit_size << 8) & 16711680U)) | ((rsp->rit_size >> 8) & 65280U)) | (rsp->rit_size >> 24); else 
                                                                    
#line 179 
                                                                    tmp_7 = __fswab32(rsp->rit_size);
    
#line 179 
    ioceth->attr.max_rit_size = (int)tmp_7;
    
#line 180 
    ioceth->attr.fw_query_complete = (_Bool)1;
  }
  else ;
  
#line 183 
  (*(ioceth->fsm))((void *)ioceth,6);
  
#line 184 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_stats_get_rsp(struct bna *bna, struct bfi_msgq_mhdr *msghdr)
{
  u64 *stats_src;
  u64 *stats_dst;
  unsigned int tmp_0;
  unsigned int tmp_2;
  int count;
  int i;
  
#line 189 
  struct bfi_enet_stats_req *stats_req = & bna->stats_mod.stats_get;
  
#line 192 
  if (0 != 0) 
#line 192 
              tmp_0 = (((stats_req->tx_enet_mask << 24) | ((stats_req->tx_enet_mask << 8) & 16711680U)) | ((stats_req->tx_enet_mask >> 8) & 65280U)) | (stats_req->tx_enet_mask >> 24); else 
                                                                    
#line 192 
                                                                    tmp_0 = __fswab32(stats_req->tx_enet_mask);
  
#line 192 
  u32 tx_enet_mask = tmp_0;
  
#line 193 
  if (0 != 0) 
#line 193 
              tmp_2 = (((stats_req->rx_enet_mask << 24) | ((stats_req->rx_enet_mask << 8) & 16711680U)) | ((stats_req->rx_enet_mask >> 8) & 65280U)) | (stats_req->rx_enet_mask >> 24); else 
                                                                    
#line 193 
                                                                    tmp_2 = __fswab32(stats_req->rx_enet_mask);
  
#line 193 
  u32 rx_enet_mask = tmp_2;
  
#line 197 
  count = 45;
  
#line 197 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->mac_stats);
  
#line 197 
  stats_dst = (u64 *)(& bna->stats.hw_stats.mac_stats);
  
#line 197 
  i = 0;
  
#line 197 
  goto ldv_48455;
  ldv_48454: 
#line 198 
  ;
  
#line 197 
  if (0 != 0) 
#line 197 
              *(stats_dst + i) = (((((((*(stats_src + i) << 56) | ((*(stats_src + i) << 40) & 71776119061217280ULL)) | ((*(stats_src + i) << 24) & 280375465082880ULL)) | ((*(stats_src + i) << 8) & 1095216660480ULL)) | ((*(stats_src + i) >> 8) & 4278190080ULL)) | ((*(stats_src + i) >> 24) & 16711680ULL)) | ((*(stats_src + i) >> 40) & 65280ULL)) | (*(stats_src + i) >> 56); else 
                                                                    
#line 197 
                                                                    *(stats_dst + i) = __fswab64(*(stats_src + i));
  
#line 197 
  i += 1;
  ldv_48455: 
#line 198 
  ;
  
#line 197 
  if (i < count) 
#line 199 
                 goto ldv_48454; else 
#line 202 
                                      goto ldv_48456;
  ldv_48456: 
#line 203 
  ;
  
#line 198 
  count = 48;
  
#line 198 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->bpc_stats);
  
#line 198 
  stats_dst = (u64 *)(& bna->stats.hw_stats.bpc_stats);
  
#line 198 
  i = 0;
  
#line 198 
  goto ldv_48458;
  ldv_48457: 
#line 199 
  ;
  
#line 198 
  if (0 != 0) 
#line 198 
              *(stats_dst + i) = (((((((*(stats_src + i) << 56) | ((*(stats_src + i) << 40) & 71776119061217280ULL)) | ((*(stats_src + i) << 24) & 280375465082880ULL)) | ((*(stats_src + i) << 8) & 1095216660480ULL)) | ((*(stats_src + i) >> 8) & 4278190080ULL)) | ((*(stats_src + i) >> 24) & 16711680ULL)) | ((*(stats_src + i) >> 40) & 65280ULL)) | (*(stats_src + i) >> 56); else 
                                                                    
#line 198 
                                                                    *(stats_dst + i) = __fswab64(*(stats_src + i));
  
#line 198 
  i += 1;
  ldv_48458: 
#line 199 
  ;
  
#line 198 
  if (i < count) 
#line 200 
                 goto ldv_48457; else 
#line 203 
                                      goto ldv_48459;
  ldv_48459: 
#line 204 
  ;
  
#line 199 
  count = 13;
  
#line 199 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->rad_stats);
  
#line 199 
  stats_dst = (u64 *)(& bna->stats.hw_stats.rad_stats);
  
#line 199 
  i = 0;
  
#line 199 
  goto ldv_48461;
  ldv_48460: 
#line 200 
  ;
  
#line 199 
  if (0 != 0) 
#line 199 
              *(stats_dst + i) = (((((((*(stats_src + i) << 56) | ((*(stats_src + i) << 40) & 71776119061217280ULL)) | ((*(stats_src + i) << 24) & 280375465082880ULL)) | ((*(stats_src + i) << 8) & 1095216660480ULL)) | ((*(stats_src + i) >> 8) & 4278190080ULL)) | ((*(stats_src + i) >> 24) & 16711680ULL)) | ((*(stats_src + i) >> 40) & 65280ULL)) | (*(stats_src + i) >> 56); else 
                                                                    
#line 199 
                                                                    *(stats_dst + i) = __fswab64(*(stats_src + i));
  
#line 199 
  i += 1;
  ldv_48461: 
#line 200 
  ;
  
#line 199 
  if (i < count) 
#line 201 
                 goto ldv_48460; else 
#line 204 
                                      goto ldv_48462;
  ldv_48462: 
#line 205 
  ;
  
#line 200 
  count = 13;
  
#line 200 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->rlb_stats);
  
#line 200 
  stats_dst = (u64 *)(& bna->stats.hw_stats.rlb_stats);
  
#line 200 
  i = 0;
  
#line 200 
  goto ldv_48464;
  ldv_48463: 
#line 201 
  ;
  
#line 200 
  if (0 != 0) 
#line 200 
              *(stats_dst + i) = (((((((*(stats_src + i) << 56) | ((*(stats_src + i) << 40) & 71776119061217280ULL)) | ((*(stats_src + i) << 24) & 280375465082880ULL)) | ((*(stats_src + i) << 8) & 1095216660480ULL)) | ((*(stats_src + i) >> 8) & 4278190080ULL)) | ((*(stats_src + i) >> 24) & 16711680ULL)) | ((*(stats_src + i) >> 40) & 65280ULL)) | (*(stats_src + i) >> 56); else 
                                                                    
#line 200 
                                                                    *(stats_dst + i) = __fswab64(*(stats_src + i));
  
#line 200 
  i += 1;
  ldv_48464: 
#line 201 
  ;
  
#line 200 
  if (i < count) 
#line 202 
                 goto ldv_48463; else 
#line 205 
                                      goto ldv_48465;
  ldv_48465: 
#line 206 
  ;
  
#line 201 
  count = 9;
  
#line 201 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->fc_rx_stats);
  
#line 201 
  stats_dst = (u64 *)(& bna->stats.hw_stats.fc_rx_stats);
  
#line 201 
  i = 0;
  
#line 201 
  goto ldv_48467;
  ldv_48466: 
#line 202 
  ;
  
#line 201 
  if (0 != 0) 
#line 201 
              *(stats_dst + i) = (((((((*(stats_src + i) << 56) | ((*(stats_src + i) << 40) & 71776119061217280ULL)) | ((*(stats_src + i) << 24) & 280375465082880ULL)) | ((*(stats_src + i) << 8) & 1095216660480ULL)) | ((*(stats_src + i) >> 8) & 4278190080ULL)) | ((*(stats_src + i) >> 24) & 16711680ULL)) | ((*(stats_src + i) >> 40) & 65280ULL)) | (*(stats_src + i) >> 56); else 
                                                                    
#line 201 
                                                                    *(stats_dst + i) = __fswab64(*(stats_src + i));
  
#line 201 
  i += 1;
  ldv_48467: 
#line 202 
  ;
  
#line 201 
  if (i < count) 
#line 203 
                 goto ldv_48466; else 
#line 206 
                                      goto ldv_48468;
  ldv_48468: 
#line 207 
  ;
  
#line 202 
  count = 12;
  
#line 202 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->fc_tx_stats);
  
#line 202 
  stats_dst = (u64 *)(& bna->stats.hw_stats.fc_tx_stats);
  
#line 202 
  i = 0;
  
#line 202 
  goto ldv_48470;
  ldv_48469: 
#line 203 
  ;
  
#line 202 
  if (0 != 0) 
#line 202 
              *(stats_dst + i) = (((((((*(stats_src + i) << 56) | ((*(stats_src + i) << 40) & 71776119061217280ULL)) | ((*(stats_src + i) << 24) & 280375465082880ULL)) | ((*(stats_src + i) << 8) & 1095216660480ULL)) | ((*(stats_src + i) >> 8) & 4278190080ULL)) | ((*(stats_src + i) >> 24) & 16711680ULL)) | ((*(stats_src + i) >> 40) & 65280ULL)) | (*(stats_src + i) >> 56); else 
                                                                    
#line 202 
                                                                    *(stats_dst + i) = __fswab64(*(stats_src + i));
  
#line 202 
  i += 1;
  ldv_48470: 
#line 203 
  ;
  
#line 202 
  if (i < count) 
#line 204 
                 goto ldv_48469; else 
#line 207 
                                      goto ldv_48471;
  ldv_48471: 
#line 208 
  ;
  
#line 204 
  stats_src = (u64 *)(& (bna->stats.hw_stats_kva)->rxf_stats[0]);
  
#line 207 
  i = 0;
  
#line 207 
  goto ldv_48477;
  ldv_48476: 
#line 208 
  ;
  
#line 208 
  stats_dst = (u64 *)(& bna->stats.hw_stats.rxf_stats[i]);
  
#line 209 
  memset((void *)stats_dst,0,80UL);
  
#line 210 
  if ((((unsigned long)rx_enet_mask >> i) & 1UL) != 0UL) {
    int k;
    
#line 212 
    count = 10;
    
#line 214 
    k = 0;
    
#line 214 
    goto ldv_48474;
    ldv_48473: 
#line 215 
    ;
    
#line 215 
    if (0 != 0) 
#line 215 
                *(stats_dst + k) = (((((((*stats_src << 56) | ((*stats_src << 40) & 71776119061217280ULL)) | ((*stats_src << 24) & 280375465082880ULL)) | ((*stats_src << 8) & 1095216660480ULL)) | ((*stats_src >> 8) & 4278190080ULL)) | ((*stats_src >> 24) & 16711680ULL)) | ((*stats_src >> 40) & 65280ULL)) | (*stats_src >> 56); else 
                                                                    
#line 215 
                                                                    *(stats_dst + k) = __fswab64(*stats_src);
    
#line 216 
    stats_src += 1;
    
#line 214 
    k += 1;
    ldv_48474: 
#line 215 
    ;
    
#line 214 
    if (k < count) 
#line 216 
                   goto ldv_48473; else 
#line 219 
                                        goto ldv_48475;
    ldv_48475: 
#line 220 
    ;
  }
  else ;
  
#line 207 
  i += 1;
  ldv_48477: 
#line 208 
  ;
  
#line 207 
  if (i <= 31) 
#line 209 
               goto ldv_48476; else 
#line 212 
                                    goto ldv_48478;
  ldv_48478: 
#line 213 
  ;
  
#line 222 
  i = 0;
  
#line 222 
  goto ldv_48484;
  ldv_48483: 
#line 223 
  ;
  
#line 223 
  stats_dst = (u64 *)(& bna->stats.hw_stats.txf_stats[i]);
  
#line 224 
  memset((void *)stats_dst,0,96UL);
  
#line 225 
  if ((((unsigned long)tx_enet_mask >> i) & 1UL) != 0UL) {
    int k_0;
    
#line 227 
    count = 12;
    
#line 229 
    k_0 = 0;
    
#line 229 
    goto ldv_48481;
    ldv_48480: 
#line 230 
    ;
    
#line 230 
    if (0 != 0) 
#line 230 
                *(stats_dst + k_0) = (((((((*stats_src << 56) | ((*stats_src << 40) & 71776119061217280ULL)) | ((*stats_src << 24) & 280375465082880ULL)) | ((*stats_src << 8) & 1095216660480ULL)) | ((*stats_src >> 8) & 4278190080ULL)) | ((*stats_src >> 24) & 16711680ULL)) | ((*stats_src >> 40) & 65280ULL)) | (*stats_src >> 56); else 
                                                                    
#line 230 
                                                                    *(stats_dst + k_0) = __fswab64(*stats_src);
    
#line 231 
    stats_src += 1;
    
#line 229 
    k_0 += 1;
    ldv_48481: 
#line 230 
    ;
    
#line 229 
    if (k_0 < count) 
#line 231 
                     goto ldv_48480; else 
#line 234 
                                          goto ldv_48482;
    ldv_48482: 
#line 235 
    ;
  }
  else ;
  
#line 222 
  i += 1;
  ldv_48484: 
#line 223 
  ;
  
#line 222 
  if (i <= 31) 
#line 224 
               goto ldv_48483; else 
#line 227 
                                    goto ldv_48485;
  ldv_48485: 
#line 228 
  ;
  
#line 236 
  bna->stats_mod.stats_get_busy = (_Bool)0;
  
#line 237 
  bnad_cb_stats_get(bna->bnad,(enum bna_cb_status)BNA_CB_SUCCESS,& bna->stats);
  
#line 238 
  return;
}


#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_linkup_aen(struct bna_ethport *ethport, struct bfi_msgq_mhdr *msghdr)
{
  
#line 244 
  ethport->link_status = BNA_LINK_UP;
  
#line 247 
  (*(ethport->link_cbfn))((ethport->bna)->bnad,ethport->link_status);
  
#line 248 
  return;
}


#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_linkdown_aen(struct bna_ethport *ethport, struct bfi_msgq_mhdr *msghdr)
{
  
#line 254 
  ethport->link_status = BNA_LINK_DOWN;
  
#line 257 
  (*(ethport->link_cbfn))((ethport->bna)->bnad,(enum bna_link_status)BNA_LINK_DOWN);
  
#line 258 
  return;
}


#line 261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_err_handler(struct bna *bna, u32 intr_status)
{
  
#line 263 
  if ((bna->bits.halt_status_bits & intr_status) != 0U) {
    u32 init_halt;
    
#line 264 
    init_halt = readl((void const volatile *)bna->ioceth.ioc.ioc_regs.ll_halt);
    
#line 264 
    init_halt &= 4294967294U;
    
#line 264 
    writel(init_halt,(void volatile *)bna->ioceth.ioc.ioc_regs.ll_halt);
    
#line 264 
    init_halt = readl((void const volatile *)bna->ioceth.ioc.ioc_regs.ll_halt);
  }
  else ;
  
#line 266 
  bfa_nw_ioc_error_isr(& bna->ioceth.ioc);
  
#line 267 
  return;
}


#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_mbox_handler(struct bna *bna, u32 intr_status)
{
  
#line 272 
  if ((bna->bits.error_status_bits & intr_status) != 0U) {
    
#line 273 
    bna_err_handler(bna,intr_status);
    
#line 274 
    goto return_label;
  }
  else ;
  
#line 276 
  if ((bna->bits.mbox_status_bits & intr_status) != 0U) 
#line 277 
                                                        bfa_nw_ioc_mbox_isr(& bna->ioceth.ioc); else ;
  return_label: 
#line 278 
                return;
}


#line 281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_msgq_rsp_handler(void *arg, struct bfi_msgq_mhdr *msghdr)
{
  struct bna_tx *tx;
  struct bna_rx *rx;
  
#line 283 
  struct bna *bna = (struct bna *)arg;
  
#line 287 
  switch ((int)msghdr->msg_id) {
    case 129: 
#line 288 
    ;
    {
      struct bna_rx *__rx;
      struct bna_rx *tmp;
      struct bna_rx *tmp_0;
      
#line 289 
      struct bna_rx_mod *__rx_mod = & bna->rx_mod;
      
#line 289 
      rx = (struct bna_rx *)0;
      {
        
#line 289 
        struct list_head const *__mptr = (struct list_head const *)__rx_mod->rx_active_q.next;
        
#line 289 
        tmp = (struct bna_rx *)__mptr;
      }
      
#line 289 
      __rx = tmp;
      
#line 289 
      goto ldv_48519;
      ldv_48518: 
#line 290 
      ;
      
#line 289 
      if (__rx->rid == (int)msghdr->enet_id) {
        
#line 289 
        rx = __rx;
        
#line 289 
        goto ldv_48517;
      }
      else ;
      {
        
#line 289 
        struct list_head const *__mptr_0 = (struct list_head const *)__rx->qe.next;
        
#line 289 
        tmp_0 = (struct bna_rx *)__mptr_0;
      }
      
#line 289 
      __rx = tmp_0;
      ldv_48519: 
#line 291 
      ;
      
#line 289 
      if (& __rx->qe != & __rx_mod->rx_active_q) 
#line 291 
                                                 goto ldv_48518; else 
                                                                   
#line 294 
                                                                   goto ldv_48517;
      ldv_48517: 
#line 295 
      ;
    }
    
#line 290 
    if (rx != (struct bna_rx *)0) 
#line 291 
                                  bna_bfi_rx_enet_start_rsp(rx,msghdr); else ;
    
#line 292 
    goto ldv_48520;
    case 130: 
#line 294 
    ;
    {
      struct bna_rx *__rx_0;
      struct bna_rx *tmp_1;
      struct bna_rx *tmp_2;
      
#line 295 
      struct bna_rx_mod *__rx_mod_0 = & bna->rx_mod;
      
#line 295 
      rx = (struct bna_rx *)0;
      {
        
#line 295 
        struct list_head const *__mptr_1 = (struct list_head const *)__rx_mod_0->rx_active_q.next;
        
#line 295 
        tmp_1 = (struct bna_rx *)__mptr_1;
      }
      
#line 295 
      __rx_0 = tmp_1;
      
#line 295 
      goto ldv_48530;
      ldv_48529: 
#line 296 
      ;
      
#line 295 
      if (__rx_0->rid == (int)msghdr->enet_id) {
        
#line 295 
        rx = __rx_0;
        
#line 295 
        goto ldv_48528;
      }
      else ;
      {
        
#line 295 
        struct list_head const *__mptr_2 = (struct list_head const *)__rx_0->qe.next;
        
#line 295 
        tmp_2 = (struct bna_rx *)__mptr_2;
      }
      
#line 295 
      __rx_0 = tmp_2;
      ldv_48530: 
#line 297 
      ;
      
#line 295 
      if (& __rx_0->qe != & __rx_mod_0->rx_active_q) 
#line 297 
                                                     goto ldv_48529; else 
                                                                    
#line 300 
                                                                    goto ldv_48528;
      ldv_48528: 
#line 301 
      ;
    }
    
#line 296 
    if (rx != (struct bna_rx *)0) 
#line 297 
                                  bna_bfi_rx_enet_stop_rsp(rx,msghdr); else ;
    
#line 298 
    goto ldv_48520;
    case 131: 
#line 300 
    ;
    case 132: 
#line 301 
    ;
    case 133: 
#line 302 
    ;
    case 134: 
#line 303 
    ;
    case 135: 
#line 304 
    ;
    case 137: 
#line 305 
    ;
    case 138: 
#line 306 
    ;
    case 139: 
#line 307 
    ;
    case 141: 
#line 308 
    ;
    case 142: 
#line 309 
    ;
    case 143: 
#line 310 
    ;
    case 144: 
#line 311 
    ;
    {
      struct bna_rx *__rx_1;
      struct bna_rx *tmp_3;
      struct bna_rx *tmp_4;
      
#line 312 
      struct bna_rx_mod *__rx_mod_1 = & bna->rx_mod;
      
#line 312 
      rx = (struct bna_rx *)0;
      {
        
#line 312 
        struct list_head const *__mptr_3 = (struct list_head const *)__rx_mod_1->rx_active_q.next;
        
#line 312 
        tmp_3 = (struct bna_rx *)__mptr_3;
      }
      
#line 312 
      __rx_1 = tmp_3;
      
#line 312 
      goto ldv_48551;
      ldv_48550: 
#line 313 
      ;
      
#line 312 
      if (__rx_1->rid == (int)msghdr->enet_id) {
        
#line 312 
        rx = __rx_1;
        
#line 312 
        goto ldv_48549;
      }
      else ;
      {
        
#line 312 
        struct list_head const *__mptr_4 = (struct list_head const *)__rx_1->qe.next;
        
#line 312 
        tmp_4 = (struct bna_rx *)__mptr_4;
      }
      
#line 312 
      __rx_1 = tmp_4;
      ldv_48551: 
#line 314 
      ;
      
#line 312 
      if (& __rx_1->qe != & __rx_mod_1->rx_active_q) 
#line 314 
                                                     goto ldv_48550; else 
                                                                    
#line 317 
                                                                    goto ldv_48549;
      ldv_48549: 
#line 318 
      ;
    }
    
#line 313 
    if (rx != (struct bna_rx *)0) 
#line 314 
                                  bna_bfi_rxf_cfg_rsp(& rx->rxf,msghdr); else ;
    
#line 315 
    goto ldv_48520;
    case 136: 
#line 317 
    ;
    {
      struct bna_rx *__rx_2;
      struct bna_rx *tmp_5;
      struct bna_rx *tmp_6;
      
#line 318 
      struct bna_rx_mod *__rx_mod_2 = & bna->rx_mod;
      
#line 318 
      rx = (struct bna_rx *)0;
      {
        
#line 318 
        struct list_head const *__mptr_5 = (struct list_head const *)__rx_mod_2->rx_active_q.next;
        
#line 318 
        tmp_5 = (struct bna_rx *)__mptr_5;
      }
      
#line 318 
      __rx_2 = tmp_5;
      
#line 318 
      goto ldv_48561;
      ldv_48560: 
#line 319 
      ;
      
#line 318 
      if (__rx_2->rid == (int)msghdr->enet_id) {
        
#line 318 
        rx = __rx_2;
        
#line 318 
        goto ldv_48559;
      }
      else ;
      {
        
#line 318 
        struct list_head const *__mptr_6 = (struct list_head const *)__rx_2->qe.next;
        
#line 318 
        tmp_6 = (struct bna_rx *)__mptr_6;
      }
      
#line 318 
      __rx_2 = tmp_6;
      ldv_48561: 
#line 320 
      ;
      
#line 318 
      if (& __rx_2->qe != & __rx_mod_2->rx_active_q) 
#line 320 
                                                     goto ldv_48560; else 
                                                                    
#line 323 
                                                                    goto ldv_48559;
      ldv_48559: 
#line 324 
      ;
    }
    
#line 319 
    if (rx != (struct bna_rx *)0) 
#line 320 
                                  bna_bfi_rxf_ucast_set_rsp(& rx->rxf,msghdr); else ;
    
#line 321 
    goto ldv_48520;
    case 140: 
#line 323 
    ;
    {
      struct bna_rx *__rx_3;
      struct bna_rx *tmp_7;
      struct bna_rx *tmp_8;
      
#line 324 
      struct bna_rx_mod *__rx_mod_3 = & bna->rx_mod;
      
#line 324 
      rx = (struct bna_rx *)0;
      {
        
#line 324 
        struct list_head const *__mptr_7 = (struct list_head const *)__rx_mod_3->rx_active_q.next;
        
#line 324 
        tmp_7 = (struct bna_rx *)__mptr_7;
      }
      
#line 324 
      __rx_3 = tmp_7;
      
#line 324 
      goto ldv_48571;
      ldv_48570: 
#line 325 
      ;
      
#line 324 
      if (__rx_3->rid == (int)msghdr->enet_id) {
        
#line 324 
        rx = __rx_3;
        
#line 324 
        goto ldv_48569;
      }
      else ;
      {
        
#line 324 
        struct list_head const *__mptr_8 = (struct list_head const *)__rx_3->qe.next;
        
#line 324 
        tmp_8 = (struct bna_rx *)__mptr_8;
      }
      
#line 324 
      __rx_3 = tmp_8;
      ldv_48571: 
#line 326 
      ;
      
#line 324 
      if (& __rx_3->qe != & __rx_mod_3->rx_active_q) 
#line 326 
                                                     goto ldv_48570; else 
                                                                    
#line 329 
                                                                    goto ldv_48569;
      ldv_48569: 
#line 330 
      ;
    }
    
#line 325 
    if (rx != (struct bna_rx *)0) 
#line 326 
                                  bna_bfi_rxf_mcast_add_rsp(& rx->rxf,msghdr); else ;
    
#line 327 
    goto ldv_48520;
    case 145: 
#line 329 
    ;
    {
      struct bna_tx *__tx;
      struct bna_tx *tmp_9;
      struct bna_tx *tmp_10;
      
#line 330 
      struct bna_tx_mod *__tx_mod = & bna->tx_mod;
      
#line 330 
      tx = (struct bna_tx *)0;
      {
        
#line 330 
        struct list_head const *__mptr_9 = (struct list_head const *)__tx_mod->tx_active_q.next;
        
#line 330 
        tmp_9 = (struct bna_tx *)__mptr_9;
      }
      
#line 330 
      __tx = tmp_9;
      
#line 330 
      goto ldv_48581;
      ldv_48580: 
#line 331 
      ;
      
#line 330 
      if (__tx->rid == (int)msghdr->enet_id) {
        
#line 330 
        tx = __tx;
        
#line 330 
        goto ldv_48579;
      }
      else ;
      {
        
#line 330 
        struct list_head const *__mptr_10 = (struct list_head const *)__tx->qe.next;
        
#line 330 
        tmp_10 = (struct bna_tx *)__mptr_10;
      }
      
#line 330 
      __tx = tmp_10;
      ldv_48581: 
#line 332 
      ;
      
#line 330 
      if (& __tx->qe != & __tx_mod->tx_active_q) 
#line 332 
                                                 goto ldv_48580; else 
                                                                   
#line 335 
                                                                   goto ldv_48579;
      ldv_48579: 
#line 336 
      ;
    }
    
#line 331 
    if (tx != (struct bna_tx *)0) 
#line 332 
                                  bna_bfi_tx_enet_start_rsp(tx,msghdr); else ;
    
#line 333 
    goto ldv_48520;
    case 146: 
#line 335 
    ;
    {
      struct bna_tx *__tx_0;
      struct bna_tx *tmp_11;
      struct bna_tx *tmp_12;
      
#line 336 
      struct bna_tx_mod *__tx_mod_0 = & bna->tx_mod;
      
#line 336 
      tx = (struct bna_tx *)0;
      {
        
#line 336 
        struct list_head const *__mptr_11 = (struct list_head const *)__tx_mod_0->tx_active_q.next;
        
#line 336 
        tmp_11 = (struct bna_tx *)__mptr_11;
      }
      
#line 336 
      __tx_0 = tmp_11;
      
#line 336 
      goto ldv_48591;
      ldv_48590: 
#line 337 
      ;
      
#line 336 
      if (__tx_0->rid == (int)msghdr->enet_id) {
        
#line 336 
        tx = __tx_0;
        
#line 336 
        goto ldv_48589;
      }
      else ;
      {
        
#line 336 
        struct list_head const *__mptr_12 = (struct list_head const *)__tx_0->qe.next;
        
#line 336 
        tmp_12 = (struct bna_tx *)__mptr_12;
      }
      
#line 336 
      __tx_0 = tmp_12;
      ldv_48591: 
#line 338 
      ;
      
#line 336 
      if (& __tx_0->qe != & __tx_mod_0->tx_active_q) 
#line 338 
                                                     goto ldv_48590; else 
                                                                    
#line 341 
                                                                    goto ldv_48589;
      ldv_48589: 
#line 342 
      ;
    }
    
#line 337 
    if (tx != (struct bna_tx *)0) 
#line 338 
                                  bna_bfi_tx_enet_stop_rsp(tx,msghdr); else ;
    
#line 339 
    goto ldv_48520;
    case 147: 
#line 341 
    ;
    
#line 342 
    bna_bfi_ethport_admin_rsp(& bna->ethport,msghdr);
    
#line 343 
    goto ldv_48520;
    case 149: 
#line 345 
    ;
    
#line 346 
    bna_bfi_ethport_lpbk_rsp(& bna->ethport,msghdr);
    
#line 347 
    goto ldv_48520;
    case 148: 
#line 349 
    ;
    
#line 350 
    bna_bfi_pause_set_rsp(& bna->enet,msghdr);
    
#line 351 
    goto ldv_48520;
    case 150: 
#line 353 
    ;
    
#line 354 
    bna_bfi_attr_get_rsp(& bna->ioceth,msghdr);
    
#line 355 
    goto ldv_48520;
    case 151: 
#line 357 
    ;
    
#line 358 
    bna_bfi_stats_get_rsp(bna,msghdr);
    
#line 359 
    goto ldv_48520;
    case 152: 
#line 361 
    ;
    
#line 363 
    goto ldv_48520;
    case 156: 
#line 365 
    ;
    
#line 366 
    bna_bfi_ethport_linkup_aen(& bna->ethport,msghdr);
    
#line 367 
    goto ldv_48520;
    case 155: 
#line 369 
    ;
    
#line 370 
    bna_bfi_ethport_linkdown_aen(& bna->ethport,msghdr);
    
#line 371 
    goto ldv_48520;
    case 157: 
#line 373 
    ;
    
#line 374 
    bna_bfi_ethport_enable_aen(& bna->ethport,msghdr);
    
#line 375 
    goto ldv_48520;
    case 158: 
#line 377 
    ;
    
#line 378 
    bna_bfi_ethport_disable_aen(& bna->ethport,msghdr);
    
#line 379 
    goto ldv_48520;
    case 159: 
#line 381 
    ;
    
#line 382 
    bna_bfi_bw_update_aen(& bna->tx_mod);
    
#line 383 
    goto ldv_48520;
    default: 
#line 385 
    ;
    
#line 386 
    goto ldv_48520;
  }
  ldv_48520: 
#line 388 
  ;
  
#line 389 
  return;
}


#line 413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_admin_up(struct bna_ethport *ethport)
{
  
#line 415 
  struct bfi_enet_enable_req *admin_up_req = & ethport->bfi_enet_cmd.admin_req;
  
#line 418 
  admin_up_req->mh.msg_class = (unsigned char)24U;
  
#line 418 
  admin_up_req->mh.msg_id = (unsigned char)19U;
  
#line 418 
  admin_up_req->mh.msg_token = (unsigned short)0U;
  
#line 418 
  admin_up_req->mh.enet_id = (unsigned char)0U;
  
#line 420 
  admin_up_req->mh.num_entries = (unsigned short)256U;
  
#line 422 
  admin_up_req->enable = (unsigned char)1U;
  
#line 424 
  ethport->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 424 
  ethport->msgq_cmd.cbarg = (void *)0;
  
#line 424 
  ethport->msgq_cmd.msg_size = 12UL;
  
#line 424 
  ethport->msgq_cmd.msg_hdr = & admin_up_req->mh;
  
#line 426 
  bfa_msgq_cmd_post(& (ethport->bna)->msgq,& ethport->msgq_cmd);
  
#line 427 
  return;
}


#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_admin_down(struct bna_ethport *ethport)
{
  
#line 432 
  struct bfi_enet_enable_req *admin_down_req = & ethport->bfi_enet_cmd.admin_req;
  
#line 435 
  admin_down_req->mh.msg_class = (unsigned char)24U;
  
#line 435 
  admin_down_req->mh.msg_id = (unsigned char)19U;
  
#line 435 
  admin_down_req->mh.msg_token = (unsigned short)0U;
  
#line 435 
  admin_down_req->mh.enet_id = (unsigned char)0U;
  
#line 437 
  admin_down_req->mh.num_entries = (unsigned short)256U;
  
#line 439 
  admin_down_req->enable = (unsigned char)0U;
  
#line 441 
  ethport->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 441 
  ethport->msgq_cmd.cbarg = (void *)0;
  
#line 441 
  ethport->msgq_cmd.msg_size = 12UL;
  
#line 441 
  ethport->msgq_cmd.msg_hdr = & admin_down_req->mh;
  
#line 443 
  bfa_msgq_cmd_post(& (ethport->bna)->msgq,& ethport->msgq_cmd);
  
#line 444 
  return;
}


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_lpbk_up(struct bna_ethport *ethport)
{
  
#line 449 
  struct bfi_enet_diag_lb_req *lpbk_up_req = & ethport->bfi_enet_cmd.lpbk_req;
  
#line 452 
  lpbk_up_req->mh.msg_class = (unsigned char)24U;
  
#line 452 
  lpbk_up_req->mh.msg_id = (unsigned char)21U;
  
#line 452 
  lpbk_up_req->mh.msg_token = (unsigned short)0U;
  
#line 452 
  lpbk_up_req->mh.enet_id = (unsigned char)0U;
  
#line 454 
  lpbk_up_req->mh.num_entries = (unsigned short)256U;
  
#line 456 
  lpbk_up_req->mode = (unsigned char)((ethport->bna)->enet.type != (unsigned int)BNA_ENET_T_LOOPBACK_INTERNAL);
  
#line 460 
  lpbk_up_req->enable = (unsigned char)1U;
  
#line 462 
  ethport->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 462 
  ethport->msgq_cmd.cbarg = (void *)0;
  
#line 462 
  ethport->msgq_cmd.msg_size = 12UL;
  
#line 462 
  ethport->msgq_cmd.msg_hdr = & lpbk_up_req->mh;
  
#line 464 
  bfa_msgq_cmd_post(& (ethport->bna)->msgq,& ethport->msgq_cmd);
  
#line 465 
  return;
}


#line 468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_lpbk_down(struct bna_ethport *ethport)
{
  
#line 470 
  struct bfi_enet_diag_lb_req *lpbk_down_req = & ethport->bfi_enet_cmd.lpbk_req;
  
#line 473 
  lpbk_down_req->mh.msg_class = (unsigned char)24U;
  
#line 473 
  lpbk_down_req->mh.msg_id = (unsigned char)21U;
  
#line 473 
  lpbk_down_req->mh.msg_token = (unsigned short)0U;
  
#line 473 
  lpbk_down_req->mh.enet_id = (unsigned char)0U;
  
#line 475 
  lpbk_down_req->mh.num_entries = (unsigned short)256U;
  
#line 477 
  lpbk_down_req->enable = (unsigned char)0U;
  
#line 479 
  ethport->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 479 
  ethport->msgq_cmd.cbarg = (void *)0;
  
#line 479 
  ethport->msgq_cmd.msg_size = 12UL;
  
#line 479 
  ethport->msgq_cmd.msg_hdr = & lpbk_down_req->mh;
  
#line 481 
  bfa_msgq_cmd_post(& (ethport->bna)->msgq,& ethport->msgq_cmd);
  
#line 482 
  return;
}


#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_up(struct bna_ethport *ethport)
{
  
#line 487 
  if ((ethport->bna)->enet.type == (unsigned int)BNA_ENET_T_REGULAR) 
    
#line 488 
    bna_bfi_ethport_admin_up(ethport); else 
#line 490 
                                            bna_bfi_ethport_lpbk_up(ethport);
  
#line 491 
  return;
}


#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_ethport_down(struct bna_ethport *ethport)
{
  
#line 496 
  if ((ethport->bna)->enet.type == (unsigned int)BNA_ENET_T_REGULAR) 
    
#line 497 
    bna_bfi_ethport_admin_down(ethport); else 
#line 499 
                                              bna_bfi_ethport_lpbk_down(ethport);
  
#line 500 
  return;
}


#line 502 
static void bna_ethport_sm_stopped(struct bna_ethport *ethport, enum bna_ethport_event event);


#line 502 
static void bna_ethport_sm_stopped_entry(struct bna_ethport *ethport);


#line 504 
static void bna_ethport_sm_down(struct bna_ethport *ethport, enum bna_ethport_event event);


#line 504 
static void bna_ethport_sm_down_entry(struct bna_ethport *ethport);


#line 506 
static void bna_ethport_sm_up_resp_wait(struct bna_ethport *ethport, enum bna_ethport_event event);


#line 506 
static void bna_ethport_sm_up_resp_wait_entry(struct bna_ethport *ethport);


#line 508 
static void bna_ethport_sm_down_resp_wait(struct bna_ethport *ethport, enum bna_ethport_event event);


#line 508 
static void bna_ethport_sm_down_resp_wait_entry(struct bna_ethport *ethport);


#line 510 
static void bna_ethport_sm_up(struct bna_ethport *ethport, enum bna_ethport_event event);


#line 510 
static void bna_ethport_sm_up_entry(struct bna_ethport *ethport);


#line 512 
static void bna_ethport_sm_last_resp_wait(struct bna_ethport *ethport, enum bna_ethport_event event);


#line 512 
static void bna_ethport_sm_last_resp_wait_entry(struct bna_ethport *ethport);


#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_stopped_entry(struct bna_ethport *ethport)
{
  
#line 518 
  if (ethport->stop_cbfn != (void (*)(struct bna_enet *))0) {
    void (*cbfn)(struct bna_enet *);
    
#line 518 
    cbfn = ethport->stop_cbfn;
    
#line 518 
    ethport->stop_cbfn = (void (*)(struct bna_enet *))0;
    
#line 518 
    (*cbfn)(& (ethport->bna)->enet);
  }
  else ;
  
#line 520 
  return;
}


#line 522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_stopped(struct bna_ethport *ethport, enum bna_ethport_event event)
{
  
#line 525 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 526 
    ;
    
#line 527 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_down);
    
#line 527 
    bna_ethport_sm_down_entry(ethport);
    
#line 528 
    goto ldv_48666;
    case (unsigned int)2: 
#line 530 
    ;
    
#line 531 
    if (ethport->stop_cbfn != (void (*)(struct bna_enet *))0) {
      void (*cbfn)(struct bna_enet *);
      
#line 531 
      cbfn = ethport->stop_cbfn;
      
#line 531 
      ethport->stop_cbfn = (void (*)(struct bna_enet *))0;
      
#line 531 
      (*cbfn)(& (ethport->bna)->enet);
    }
    else ;
    
#line 532 
    goto ldv_48666;
    case (unsigned int)3: 
#line 534 
    ;
    
#line 536 
    goto ldv_48666;
    case (unsigned int)5: 
#line 538 
    ;
    
#line 541 
    goto ldv_48666;
    default: 
#line 543 
    ;
    
#line 544 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",544,(unsigned int)event);
  }
  ldv_48666: 
#line 546 
  ;
  
#line 547 
  return;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_down_entry(struct bna_ethport *ethport)
{
  
#line 551 
  return;
}


#line 554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_down(struct bna_ethport *ethport, enum bna_ethport_event event)
{
  
#line 557 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 558 
    ;
    
#line 559 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 559 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 560 
    goto ldv_48681;
    case (unsigned int)3: 
#line 562 
    ;
    
#line 563 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 563 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 564 
    goto ldv_48681;
    case (unsigned int)4: 
#line 566 
    ;
    
#line 567 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_up_resp_wait);
    
#line 567 
    bna_ethport_sm_up_resp_wait_entry(ethport);
    
#line 568 
    bna_bfi_ethport_up(ethport);
    
#line 569 
    goto ldv_48681;
    default: 
#line 571 
    ;
    
#line 572 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",572,(unsigned int)event);
  }
  ldv_48681: 
#line 574 
  ;
  
#line 575 
  return;
}


#line 577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_up_resp_wait_entry(struct bna_ethport *ethport)
{
  
#line 579 
  return;
}


#line 582  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_up_resp_wait(struct bna_ethport *ethport, enum bna_ethport_event event)
{
  
#line 585 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 586 
    ;
    
#line 587 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_last_resp_wait);
    
#line 587 
    bna_ethport_sm_last_resp_wait_entry(ethport);
    
#line 588 
    goto ldv_48693;
    case (unsigned int)3: 
#line 590 
    ;
    
#line 591 
    if (ethport->adminup_cbfn != (void (*)(struct bnad *, enum bna_cb_status ))0) {
      void (*cbfn)(struct bnad *, enum bna_cb_status );
      
#line 591 
      cbfn = ethport->adminup_cbfn;
      
#line 591 
      ethport->adminup_cbfn = (void (*)(struct bnad *, enum bna_cb_status ))0;
      
#line 591 
      (*cbfn)((ethport->bna)->bnad,(enum bna_cb_status)BNA_CB_FAIL);
    }
    else ;
    
#line 592 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 592 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 593 
    goto ldv_48693;
    case (unsigned int)5: 
#line 595 
    ;
    
#line 596 
    if (ethport->adminup_cbfn != (void (*)(struct bnad *, enum bna_cb_status ))0) {
      void (*cbfn_0)(struct bnad *, enum bna_cb_status );
      
#line 596 
      cbfn_0 = ethport->adminup_cbfn;
      
#line 596 
      ethport->adminup_cbfn = (void (*)(struct bnad *, enum bna_cb_status ))0;
      
#line 596 
      (*cbfn_0)((ethport->bna)->bnad,(enum bna_cb_status)BNA_CB_INTERRUPT);
    }
    else ;
    
#line 597 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_down_resp_wait);
    
#line 597 
    bna_ethport_sm_down_resp_wait_entry(ethport);
    
#line 598 
    goto ldv_48693;
    case (unsigned int)6: 
#line 600 
    ;
    
#line 601 
    if (ethport->adminup_cbfn != (void (*)(struct bnad *, enum bna_cb_status ))0) {
      void (*cbfn_1)(struct bnad *, enum bna_cb_status );
      
#line 601 
      cbfn_1 = ethport->adminup_cbfn;
      
#line 601 
      ethport->adminup_cbfn = (void (*)(struct bnad *, enum bna_cb_status ))0;
      
#line 601 
      (*cbfn_1)((ethport->bna)->bnad,(enum bna_cb_status)BNA_CB_SUCCESS);
    }
    else ;
    
#line 602 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_up);
    
#line 602 
    bna_ethport_sm_up_entry(ethport);
    
#line 603 
    goto ldv_48693;
    case (unsigned int)8: 
#line 605 
    ;
    
#line 606 
    if (ethport->adminup_cbfn != (void (*)(struct bnad *, enum bna_cb_status ))0) {
      void (*cbfn_2)(struct bnad *, enum bna_cb_status );
      
#line 606 
      cbfn_2 = ethport->adminup_cbfn;
      
#line 606 
      ethport->adminup_cbfn = (void (*)(struct bnad *, enum bna_cb_status ))0;
      
#line 606 
      (*cbfn_2)((ethport->bna)->bnad,(enum bna_cb_status)BNA_CB_FAIL);
    }
    else ;
    
#line 607 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_down);
    
#line 607 
    bna_ethport_sm_down_entry(ethport);
    
#line 608 
    goto ldv_48693;
    case (unsigned int)7: 
#line 610 
    ;
    
#line 612 
    bna_bfi_ethport_up(ethport);
    
#line 613 
    goto ldv_48693;
    default: 
#line 615 
    ;
    
#line 616 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",616,(unsigned int)event);
  }
  ldv_48693: 
#line 618 
  ;
  
#line 619 
  return;
}


#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_down_resp_wait_entry(struct bna_ethport *ethport)
{
  
#line 623 
  return;
}


#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_down_resp_wait(struct bna_ethport *ethport, enum bna_ethport_event event)
{
  
#line 634 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 635 
    ;
    
#line 636 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_last_resp_wait);
    
#line 636 
    bna_ethport_sm_last_resp_wait_entry(ethport);
    
#line 637 
    goto ldv_48720;
    case (unsigned int)3: 
#line 639 
    ;
    
#line 640 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 640 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 641 
    goto ldv_48720;
    case (unsigned int)4: 
#line 643 
    ;
    
#line 644 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_up_resp_wait);
    
#line 644 
    bna_ethport_sm_up_resp_wait_entry(ethport);
    
#line 645 
    goto ldv_48720;
    case (unsigned int)6: 
#line 647 
    ;
    
#line 649 
    bna_bfi_ethport_down(ethport);
    
#line 650 
    goto ldv_48720;
    case (unsigned int)8: 
#line 652 
    ;
    case (unsigned int)7: 
#line 653 
    ;
    
#line 654 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_down);
    
#line 654 
    bna_ethport_sm_down_entry(ethport);
    
#line 655 
    goto ldv_48720;
    default: 
#line 657 
    ;
    
#line 658 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",658,(unsigned int)event);
  }
  ldv_48720: 
#line 660 
  ;
  
#line 661 
  return;
}


#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_up_entry(struct bna_ethport *ethport)
{
  
#line 665 
  return;
}


#line 668  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_up(struct bna_ethport *ethport, enum bna_ethport_event event)
{
  
#line 671 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 672 
    ;
    
#line 673 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_last_resp_wait);
    
#line 673 
    bna_ethport_sm_last_resp_wait_entry(ethport);
    
#line 674 
    bna_bfi_ethport_down(ethport);
    
#line 675 
    goto ldv_48735;
    case (unsigned int)3: 
#line 677 
    ;
    
#line 678 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 678 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 679 
    goto ldv_48735;
    case (unsigned int)5: 
#line 681 
    ;
    
#line 682 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_down_resp_wait);
    
#line 682 
    bna_ethport_sm_down_resp_wait_entry(ethport);
    
#line 683 
    bna_bfi_ethport_down(ethport);
    
#line 684 
    goto ldv_48735;
    default: 
#line 686 
    ;
    
#line 687 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",687,(unsigned int)event);
  }
  ldv_48735: 
#line 689 
  ;
  
#line 690 
  return;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_last_resp_wait_entry(struct bna_ethport *ethport)
{
  
#line 694 
  return;
}


#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_sm_last_resp_wait(struct bna_ethport *ethport, enum bna_ethport_event event)
{
  
#line 700 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 701 
    ;
    
#line 702 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 702 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 703 
    goto ldv_48747;
    case (unsigned int)5: 
#line 705 
    ;
    
#line 711 
    goto ldv_48747;
    case (unsigned int)6: 
#line 713 
    ;
    
#line 715 
    bna_bfi_ethport_down(ethport);
    
#line 716 
    goto ldv_48747;
    case (unsigned int)8: 
#line 718 
    ;
    case (unsigned int)7: 
#line 719 
    ;
    
#line 720 
    ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
    
#line 720 
    bna_ethport_sm_stopped_entry(ethport);
    
#line 721 
    goto ldv_48747;
    default: 
#line 723 
    ;
    
#line 724 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",724,(unsigned int)event);
  }
  ldv_48747: 
#line 726 
  ;
  
#line 727 
  return;
}


#line 729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_init(struct bna_ethport *ethport, struct bna *bna)
{
  
#line 731 
  ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags | 3U);
  
#line 732 
  ethport->bna = bna;
  
#line 734 
  ethport->link_status = BNA_LINK_DOWN;
  
#line 735 
  ethport->link_cbfn = & bnad_cb_ethport_link_status;
  
#line 737 
  ethport->rx_started_count = 0;
  
#line 739 
  ethport->stop_cbfn = (void (*)(struct bna_enet *))0;
  
#line 740 
  ethport->adminup_cbfn = (void (*)(struct bnad *, enum bna_cb_status ))0;
  
#line 742 
  ethport->fsm = (void (*)(void *, int ))(& bna_ethport_sm_stopped);
  
#line 742 
  bna_ethport_sm_stopped_entry(ethport);
  
#line 743 
  return;
}


#line 746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_uninit(struct bna_ethport *ethport)
{
  
#line 748 
  ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags & 4294967294U);
  
#line 749 
  ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags & 4294967293U);
  
#line 751 
  ethport->bna = (struct bna *)0;
  
#line 752 
  return;
}


#line 755  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_start(struct bna_ethport *ethport)
{
  
#line 757 
  (*(ethport->fsm))((void *)ethport,1);
  
#line 758 
  return;
}


#line 761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_cb_ethport_stopped(struct bna_enet *enet)
{
  
#line 763 
  bfa_wc_down(& enet->chld_stop_wc);
  
#line 764 
  return;
}


#line 767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_stop(struct bna_ethport *ethport)
{
  
#line 769 
  ethport->stop_cbfn = & bna_enet_cb_ethport_stopped;
  
#line 770 
  (*(ethport->fsm))((void *)ethport,2);
  
#line 771 
  return;
}


#line 774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ethport_fail(struct bna_ethport *ethport)
{
  
#line 777 
  ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags | 2U);
  
#line 779 
  if (ethport->link_status != (unsigned int)BNA_LINK_DOWN) {
    
#line 780 
    ethport->link_status = BNA_LINK_DOWN;
    
#line 781 
    (*(ethport->link_cbfn))((ethport->bna)->bnad,(enum bna_link_status)BNA_LINK_DOWN);
  }
  else ;
  
#line 783 
  (*(ethport->fsm))((void *)ethport,3);
  
#line 784 
  return;
}


#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_ethport_cb_rx_started(struct bna_ethport *ethport)
{
  
#line 790 
  ethport->rx_started_count += 1;
  
#line 792 
  if (ethport->rx_started_count == 1) {
    int tmp;
    
#line 793 
    ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags | 4U);
    
#line 795 
    tmp = ethport_can_be_up(ethport);
    
#line 795 
    if (tmp != 0) 
#line 796 
                  (*(ethport->fsm))((void *)ethport,4); else ;
  }
  else ;
  
#line 798 
  return;
}


#line 801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_ethport_cb_rx_stopped(struct bna_ethport *ethport)
{
  
#line 803 
  int ethport_up = ethport_can_be_up(ethport);
  
#line 805 
  ethport->rx_started_count -= 1;
  
#line 807 
  if (ethport->rx_started_count == 0) {
    
#line 808 
    ethport->flags = (enum bna_ethport_flags)((unsigned int)ethport->flags & 4294967291U);
    
#line 810 
    if (ethport_up != 0) 
#line 811 
                         (*(ethport->fsm))((void *)ethport,5); else ;
  }
  else ;
  
#line 813 
  return;
}


#line 897 
static void bna_enet_cb_chld_stopped(void *arg);


#line 898 
static void bna_bfi_pause_set(struct bna_enet *enet);


#line 900 
static void bna_enet_sm_stopped(struct bna_enet *enet, enum bna_enet_event event);


#line 900 
static void bna_enet_sm_stopped_entry(struct bna_enet *enet);


#line 902 
static void bna_enet_sm_pause_init_wait(struct bna_enet *enet, enum bna_enet_event event);


#line 902 
static void bna_enet_sm_pause_init_wait_entry(struct bna_enet *enet);


#line 904 
static void bna_enet_sm_last_resp_wait(struct bna_enet *enet, enum bna_enet_event event);


#line 904 
static void bna_enet_sm_last_resp_wait_entry(struct bna_enet *enet);


#line 906 
static void bna_enet_sm_started(struct bna_enet *enet, enum bna_enet_event event);


#line 906 
static void bna_enet_sm_started_entry(struct bna_enet *enet);


#line 908 
static void bna_enet_sm_cfg_wait(struct bna_enet *enet, enum bna_enet_event event);


#line 908 
static void bna_enet_sm_cfg_wait_entry(struct bna_enet *enet);


#line 910 
static void bna_enet_sm_cfg_stop_wait(struct bna_enet *enet, enum bna_enet_event event);


#line 910 
static void bna_enet_sm_cfg_stop_wait_entry(struct bna_enet *enet);


#line 912 
static void bna_enet_sm_chld_stop_wait(struct bna_enet *enet, enum bna_enet_event event);


#line 912 
static void bna_enet_sm_chld_stop_wait_entry(struct bna_enet *enet);


#line 916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_stopped_entry(struct bna_enet *enet)
{
  
#line 918 
  if (enet->mtu_cbfn != (void (*)(struct bnad *))0) {
    void (*cbfn)(struct bnad *);
    
#line 918 
    cbfn = enet->mtu_cbfn;
    
#line 918 
    enet->mtu_cbfn = (void (*)(struct bnad *))0;
    
#line 918 
    (*cbfn)((enet->bna)->bnad);
  }
  else ;
  
#line 919 
  if (enet->stop_cbfn != (void (*)(void *))0) {
    void (*cbfn_0)(void *);
    void *cbarg;
    
#line 919 
    cbfn_0 = enet->stop_cbfn;
    
#line 919 
    cbarg = enet->stop_cbarg;
    
#line 919 
    enet->stop_cbfn = (void (*)(void *))0;
    
#line 919 
    enet->stop_cbarg = (void *)0;
    
#line 919 
    (*cbfn_0)(cbarg);
  }
  else ;
  
#line 921 
  return;
}


#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_stopped(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 925 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 926 
    ;
    
#line 927 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_pause_init_wait);
    
#line 927 
    bna_enet_sm_pause_init_wait_entry(enet);
    
#line 928 
    goto ldv_48831;
    case (unsigned int)2: 
#line 930 
    ;
    
#line 931 
    if (enet->stop_cbfn != (void (*)(void *))0) {
      void (*cbfn)(void *);
      void *cbarg;
      
#line 931 
      cbfn = enet->stop_cbfn;
      
#line 931 
      cbarg = enet->stop_cbarg;
      
#line 931 
      enet->stop_cbfn = (void (*)(void *))0;
      
#line 931 
      enet->stop_cbarg = (void *)0;
      
#line 931 
      (*cbfn)(cbarg);
    }
    else ;
    
#line 932 
    goto ldv_48831;
    case (unsigned int)3: 
#line 934 
    ;
    
#line 936 
    goto ldv_48831;
    case (unsigned int)4: 
#line 938 
    ;
    
#line 939 
    goto ldv_48831;
    case (unsigned int)5: 
#line 941 
    ;
    
#line 942 
    if (enet->mtu_cbfn != (void (*)(struct bnad *))0) {
      void (*cbfn_0)(struct bnad *);
      
#line 942 
      cbfn_0 = enet->mtu_cbfn;
      
#line 942 
      enet->mtu_cbfn = (void (*)(struct bnad *))0;
      
#line 942 
      (*cbfn_0)((enet->bna)->bnad);
    }
    else ;
    
#line 943 
    goto ldv_48831;
    case (unsigned int)7: 
#line 945 
    ;
    
#line 951 
    goto ldv_48831;
    default: 
#line 953 
    ;
    
#line 954 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",954,(unsigned int)event);
  }
  ldv_48831: 
#line 956 
  ;
  
#line 957 
  return;
}


#line 959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_pause_init_wait_entry(struct bna_enet *enet)
{
  
#line 961 
  bna_bfi_pause_set(enet);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_pause_init_wait(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 968 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 969 
    ;
    
#line 970 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
    
#line 971 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_last_resp_wait);
    
#line 971 
    bna_enet_sm_last_resp_wait_entry(enet);
    
#line 972 
    goto ldv_48851;
    case (unsigned int)3: 
#line 974 
    ;
    
#line 975 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
    
#line 976 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 976 
    bna_enet_sm_stopped_entry(enet);
    
#line 977 
    goto ldv_48851;
    case (unsigned int)4: 
#line 979 
    ;
    
#line 980 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags | 4U);
    
#line 981 
    goto ldv_48851;
    case (unsigned int)5: 
#line 983 
    ;
    
#line 985 
    goto ldv_48851;
    case (unsigned int)6: 
#line 987 
    ;
    
#line 988 
    if (((unsigned int)enet->flags & 4U) != 0U) {
      
#line 989 
      enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
      
#line 990 
      bna_bfi_pause_set(enet);
    }
    else {
      
#line 992 
      enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_started);
      
#line 992 
      bna_enet_sm_started_entry(enet);
      {
        
#line 993 
        enum bna_tx_type tx_type = (enum bna_tx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
        
#line 993 
        enum bna_rx_type rx_type = (enum bna_rx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
        
#line 993 
        bna_ethport_start(& (enet->bna)->ethport);
        
#line 993 
        bna_tx_mod_start(& (enet->bna)->tx_mod,tx_type);
        
#line 993 
        bna_rx_mod_start(& (enet->bna)->rx_mod,rx_type);
      }
    }
    
#line 995 
    goto ldv_48851;
    default: 
#line 997 
    ;
    
#line 998 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",998,(unsigned int)event);
  }
  ldv_48851: 
#line 1000 
  ;
  
#line 1001 
  return;
}


#line 1003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_last_resp_wait_entry(struct bna_enet *enet)
{
  
#line 1005 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_last_resp_wait(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 1012 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1013 
    ;
    case (unsigned int)6: 
#line 1014 
    ;
    
#line 1015 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 1015 
    bna_enet_sm_stopped_entry(enet);
    
#line 1016 
    goto ldv_48868;
    default: 
#line 1018 
    ;
    
#line 1019 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1019,(unsigned int)event);
  }
  ldv_48868: 
#line 1021 
  ;
  
#line 1022 
  return;
}


#line 1024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_started_entry(struct bna_enet *enet)
{
  
#line 1030 
  if (enet->mtu_cbfn != (void (*)(struct bnad *))0) {
    void (*cbfn)(struct bnad *);
    
#line 1030 
    cbfn = enet->mtu_cbfn;
    
#line 1030 
    enet->mtu_cbfn = (void (*)(struct bnad *))0;
    
#line 1030 
    (*cbfn)((enet->bna)->bnad);
  }
  else ;
  
#line 1032 
  return;
}


#line 1034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_started(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 1037 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1038 
    ;
    
#line 1039 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_chld_stop_wait);
    
#line 1039 
    bna_enet_sm_chld_stop_wait_entry(enet);
    
#line 1040 
    goto ldv_48880;
    case (unsigned int)3: 
#line 1042 
    ;
    
#line 1043 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 1043 
    bna_enet_sm_stopped_entry(enet);
    
#line 1044 
    bna_ethport_fail(& (enet->bna)->ethport);
    
#line 1044 
    bna_tx_mod_fail(& (enet->bna)->tx_mod);
    
#line 1044 
    bna_rx_mod_fail(& (enet->bna)->rx_mod);
    
#line 1045 
    goto ldv_48880;
    case (unsigned int)4: 
#line 1047 
    ;
    
#line 1048 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_cfg_wait);
    
#line 1048 
    bna_enet_sm_cfg_wait_entry(enet);
    
#line 1049 
    bna_bfi_pause_set(enet);
    
#line 1050 
    goto ldv_48880;
    case (unsigned int)5: 
#line 1052 
    ;
    
#line 1053 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_cfg_wait);
    
#line 1053 
    bna_enet_sm_cfg_wait_entry(enet);
    {
      
#line 1054 
      enum bna_rx_type rx_type = (enum bna_rx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
      
#line 1054 
      bfa_wc_init(& enet->chld_stop_wc,& bna_enet_cb_chld_stopped,(void *)enet);
      
#line 1054 
      bfa_wc_up(& enet->chld_stop_wc);
      
#line 1054 
      bna_rx_mod_stop(& (enet->bna)->rx_mod,rx_type);
      
#line 1054 
      bfa_wc_wait(& enet->chld_stop_wc);
    }
    
#line 1055 
    goto ldv_48880;
    default: 
#line 1057 
    ;
    
#line 1058 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1058,(unsigned int)event);
  }
  ldv_48880: 
#line 1060 
  ;
  
#line 1061 
  return;
}


#line 1063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_cfg_wait_entry(struct bna_enet *enet)
{
  
#line 1065 
  return;
}


#line 1068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_cfg_wait(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 1071 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1072 
    ;
    
#line 1073 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
    
#line 1074 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967287U);
    
#line 1075 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_cfg_stop_wait);
    
#line 1075 
    bna_enet_sm_cfg_stop_wait_entry(enet);
    
#line 1076 
    goto ldv_48894;
    case (unsigned int)3: 
#line 1078 
    ;
    
#line 1079 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
    
#line 1080 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967287U);
    
#line 1081 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 1081 
    bna_enet_sm_stopped_entry(enet);
    
#line 1082 
    bna_ethport_fail(& (enet->bna)->ethport);
    
#line 1082 
    bna_tx_mod_fail(& (enet->bna)->tx_mod);
    
#line 1082 
    bna_rx_mod_fail(& (enet->bna)->rx_mod);
    
#line 1083 
    goto ldv_48894;
    case (unsigned int)4: 
#line 1085 
    ;
    
#line 1086 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags | 4U);
    
#line 1087 
    goto ldv_48894;
    case (unsigned int)5: 
#line 1089 
    ;
    
#line 1090 
    enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags | 8U);
    
#line 1091 
    goto ldv_48894;
    case (unsigned int)7: 
#line 1093 
    ;
    {
      
#line 1094 
      enum bna_rx_type rx_type = (enum bna_rx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
      
#line 1094 
      bna_rx_mod_start(& (enet->bna)->rx_mod,rx_type);
    }
    case (unsigned int)6: 
#line 1096 
    ;
    
#line 1097 
    if (((unsigned int)enet->flags & 4U) != 0U) {
      
#line 1098 
      enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
      
#line 1099 
      bna_bfi_pause_set(enet);
    }
    else 
      
#line 1100 
      if (((unsigned int)enet->flags & 8U) != 0U) {
        
#line 1101 
        enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967287U);
        {
          
#line 1102 
          enum bna_rx_type rx_type_0 = (enum bna_rx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
          
#line 1102 
          bfa_wc_init(& enet->chld_stop_wc,& bna_enet_cb_chld_stopped,(void *)enet);
          
#line 1102 
          bfa_wc_up(& enet->chld_stop_wc);
          
#line 1102 
          bna_rx_mod_stop(& (enet->bna)->rx_mod,rx_type_0);
          
#line 1102 
          bfa_wc_wait(& enet->chld_stop_wc);
        }
      }
      else {
        
#line 1104 
        enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_started);
        
#line 1104 
        bna_enet_sm_started_entry(enet);
      }
    
#line 1106 
    goto ldv_48894;
    default: 
#line 1108 
    ;
    
#line 1109 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1109,(unsigned int)event);
  }
  ldv_48894: 
#line 1111 
  ;
  
#line 1112 
  return;
}


#line 1114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_cfg_stop_wait_entry(struct bna_enet *enet)
{
  
#line 1116 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967291U);
  
#line 1117 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967287U);
  
#line 1118 
  return;
}


#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_cfg_stop_wait(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 1124 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1125 
    ;
    
#line 1126 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 1126 
    bna_enet_sm_stopped_entry(enet);
    
#line 1127 
    bna_ethport_fail(& (enet->bna)->ethport);
    
#line 1127 
    bna_tx_mod_fail(& (enet->bna)->tx_mod);
    
#line 1127 
    bna_rx_mod_fail(& (enet->bna)->rx_mod);
    
#line 1128 
    goto ldv_48911;
    case (unsigned int)6: 
#line 1130 
    ;
    case (unsigned int)7: 
#line 1131 
    ;
    
#line 1132 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_chld_stop_wait);
    
#line 1132 
    bna_enet_sm_chld_stop_wait_entry(enet);
    
#line 1133 
    goto ldv_48911;
    default: 
#line 1135 
    ;
    
#line 1136 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1136,(unsigned int)event);
  }
  ldv_48911: 
#line 1138 
  ;
  
#line 1139 
  return;
}


#line 1141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_chld_stop_wait_entry(struct bna_enet *enet)
{
  
#line 1143 
  enum bna_tx_type tx_type = (enum bna_tx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
  
#line 1143 
  enum bna_rx_type rx_type = (enum bna_rx_type)(enet->type != (unsigned int)BNA_ENET_T_REGULAR);
  
#line 1143 
  bfa_wc_init(& enet->chld_stop_wc,& bna_enet_cb_chld_stopped,(void *)enet);
  
#line 1143 
  bfa_wc_up(& enet->chld_stop_wc);
  
#line 1143 
  bna_ethport_stop(& (enet->bna)->ethport);
  
#line 1143 
  bfa_wc_up(& enet->chld_stop_wc);
  
#line 1143 
  bna_tx_mod_stop(& (enet->bna)->tx_mod,tx_type);
  
#line 1143 
  bfa_wc_up(& enet->chld_stop_wc);
  
#line 1143 
  bna_rx_mod_stop(& (enet->bna)->rx_mod,rx_type);
  
#line 1143 
  bfa_wc_wait(& enet->chld_stop_wc);
  
#line 1145 
  return;
}


#line 1147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_sm_chld_stop_wait(struct bna_enet *enet, enum bna_enet_event event)
{
  
#line 1150 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1151 
    ;
    
#line 1152 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 1152 
    bna_enet_sm_stopped_entry(enet);
    
#line 1153 
    bna_ethport_fail(& (enet->bna)->ethport);
    
#line 1153 
    bna_tx_mod_fail(& (enet->bna)->tx_mod);
    
#line 1153 
    bna_rx_mod_fail(& (enet->bna)->rx_mod);
    
#line 1154 
    goto ldv_48925;
    case (unsigned int)7: 
#line 1156 
    ;
    
#line 1157 
    enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
    
#line 1157 
    bna_enet_sm_stopped_entry(enet);
    
#line 1158 
    goto ldv_48925;
    default: 
#line 1160 
    ;
    
#line 1161 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1161,(unsigned int)event);
  }
  ldv_48925: 
#line 1163 
  ;
  
#line 1164 
  return;
}


#line 1166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_pause_set(struct bna_enet *enet)
{
  
#line 1168 
  struct bfi_enet_set_pause_req *pause_req = & enet->pause_req;
  
#line 1170 
  pause_req->mh.msg_class = (unsigned char)24U;
  
#line 1170 
  pause_req->mh.msg_id = (unsigned char)20U;
  
#line 1170 
  pause_req->mh.msg_token = (unsigned short)0U;
  
#line 1170 
  pause_req->mh.enet_id = (unsigned char)0U;
  
#line 1172 
  pause_req->mh.num_entries = (unsigned short)256U;
  
#line 1174 
  pause_req->tx_pause = (unsigned char)enet->pause_config.tx_pause;
  
#line 1175 
  pause_req->rx_pause = (unsigned char)enet->pause_config.rx_pause;
  
#line 1177 
  enet->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 1177 
  enet->msgq_cmd.cbarg = (void *)0;
  
#line 1177 
  enet->msgq_cmd.msg_size = 12UL;
  
#line 1177 
  enet->msgq_cmd.msg_hdr = & pause_req->mh;
  
#line 1179 
  bfa_msgq_cmd_post(& (enet->bna)->msgq,& enet->msgq_cmd);
  
#line 1180 
  return;
}


#line 1183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_cb_chld_stopped(void *arg)
{
  
#line 1185 
  struct bna_enet *enet = (struct bna_enet *)arg;
  
#line 1187 
  (*(enet->fsm))((void *)enet,7);
  
#line 1188 
  return;
}


#line 1191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_init(struct bna_enet *enet, struct bna *bna)
{
  
#line 1193 
  enet->bna = bna;
  
#line 1194 
  enet->flags = (enum bna_enet_flags)0;
  
#line 1195 
  enet->mtu = 0;
  
#line 1196 
  enet->type = BNA_ENET_T_REGULAR;
  
#line 1198 
  enet->stop_cbfn = (void (*)(void *))0;
  
#line 1199 
  enet->stop_cbarg = (void *)0;
  
#line 1201 
  enet->mtu_cbfn = (void (*)(struct bnad *))0;
  
#line 1203 
  enet->fsm = (void (*)(void *, int ))(& bna_enet_sm_stopped);
  
#line 1203 
  bna_enet_sm_stopped_entry(enet);
  
#line 1204 
  return;
}


#line 1207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_uninit(struct bna_enet *enet)
{
  
#line 1209 
  enet->flags = (enum bna_enet_flags)0;
  
#line 1211 
  enet->bna = (struct bna *)0;
  
#line 1212 
  return;
}


#line 1215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_start(struct bna_enet *enet)
{
  
#line 1217 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags | 1U);
  
#line 1218 
  if (((unsigned int)enet->flags & 2U) != 0U) 
#line 1219 
                                              (*(enet->fsm))((void *)enet,1); else ;
  
#line 1220 
  return;
}


#line 1223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_cb_enet_stopped(void *arg)
{
  
#line 1225 
  struct bna_ioceth *ioceth = (struct bna_ioceth *)arg;
  
#line 1227 
  (*(ioceth->fsm))((void *)ioceth,7);
  
#line 1228 
  return;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_stop(struct bna_enet *enet)
{
  
#line 1233 
  enet->stop_cbfn = & bna_ioceth_cb_enet_stopped;
  
#line 1234 
  enet->stop_cbarg = (void *)(& (enet->bna)->ioceth);
  
#line 1236 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967294U);
  
#line 1237 
  (*(enet->fsm))((void *)enet,2);
  
#line 1238 
  return;
}


#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_enet_fail(struct bna_enet *enet)
{
  
#line 1243 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967294U);
  
#line 1244 
  (*(enet->fsm))((void *)enet,3);
  
#line 1245 
  return;
}


#line 1248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_cb_tx_stopped(struct bna_enet *enet)
{
  
#line 1250 
  bfa_wc_down(& enet->chld_stop_wc);
  
#line 1251 
  return;
}


#line 1254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_cb_rx_stopped(struct bna_enet *enet)
{
  
#line 1256 
  bfa_wc_down(& enet->chld_stop_wc);
  
#line 1257 
  return;
}


#line 1260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
int bna_enet_mtu_get(struct bna_enet *enet)
{
  int __retres;
  
#line 1262 
  __retres = enet->mtu;
  
#line 1262 
  return __retres;
}


#line 1266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_enable(struct bna_enet *enet)
{
  
#line 1268 
  if (enet->fsm != (void (*)(void *, int ))(& bna_enet_sm_stopped)) 
#line 1269 
                                                                    goto return_label; else ;
  
#line 1271 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags | 2U);
  
#line 1273 
  if (((unsigned int)enet->flags & 1U) != 0U) 
#line 1274 
                                              (*(enet->fsm))((void *)enet,1); else ;
  return_label: 
#line 1275 
                return;
}


#line 1278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_disable(struct bna_enet *enet, enum bna_cleanup_type type, void (*cbfn)(void *))
{
  
#line 1281 
  if (type == (unsigned int)BNA_SOFT_CLEANUP) {
    
#line 1282 
    (*cbfn)((void *)(enet->bna)->bnad);
    
#line 1283 
    goto return_label;
  }
  else ;
  
#line 1286 
  enet->stop_cbfn = cbfn;
  
#line 1287 
  enet->stop_cbarg = (void *)(enet->bna)->bnad;
  
#line 1289 
  enet->flags = (enum bna_enet_flags)((unsigned int)enet->flags & 4294967293U);
  
#line 1291 
  (*(enet->fsm))((void *)enet,2);
  return_label: 
#line 1292 
                return;
}


#line 1295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_pause_config(struct bna_enet *enet, struct bna_pause_config *pause_config)
{
  
#line 1298 
  enet->pause_config = *pause_config;
  
#line 1300 
  (*(enet->fsm))((void *)enet,4);
  
#line 1301 
  return;
}


#line 1304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_mtu_set(struct bna_enet *enet, int mtu, void (*cbfn)(struct bnad *))
{
  
#line 1307 
  enet->mtu = mtu;
  
#line 1309 
  enet->mtu_cbfn = cbfn;
  
#line 1311 
  (*(enet->fsm))((void *)enet,5);
  
#line 1312 
  return;
}


#line 1315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_enet_perm_mac_get(struct bna_enet *enet, u8 *mac)
{
  
#line 1317 
  bfa_nw_ioc_get_mac(& (enet->bna)->ioceth.ioc,mac);
  
#line 1318 
  return;
}


#line 1370 
static void bna_bfi_attr_get(struct bna_ioceth *ioceth);


#line 1372 
static void bna_ioceth_sm_stopped(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1372 
static void bna_ioceth_sm_stopped_entry(struct bna_ioceth *ioceth);


#line 1374 
static void bna_ioceth_sm_ioc_ready_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1374 
static void bna_ioceth_sm_ioc_ready_wait_entry(struct bna_ioceth *ioceth);


#line 1376 
static void bna_ioceth_sm_enet_attr_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1376 
static void bna_ioceth_sm_enet_attr_wait_entry(struct bna_ioceth *ioceth);


#line 1378 
static void bna_ioceth_sm_ready(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1378 
static void bna_ioceth_sm_ready_entry(struct bna_ioceth *ioceth);


#line 1380 
static void bna_ioceth_sm_last_resp_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1380 
static void bna_ioceth_sm_last_resp_wait_entry(struct bna_ioceth *ioceth);


#line 1382 
static void bna_ioceth_sm_enet_stop_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1382 
static void bna_ioceth_sm_enet_stop_wait_entry(struct bna_ioceth *ioceth);


#line 1384 
static void bna_ioceth_sm_ioc_disable_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1384 
static void bna_ioceth_sm_ioc_disable_wait_entry(struct bna_ioceth *ioceth);


#line 1386 
static void bna_ioceth_sm_failed(struct bna_ioceth *ioceth, enum bna_ioceth_event event);


#line 1386 
static void bna_ioceth_sm_failed_entry(struct bna_ioceth *ioceth);


#line 1390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_stopped_entry(struct bna_ioceth *ioceth)
{
  
#line 1392 
  if (ioceth->stop_cbfn != (void (*)(struct bnad *))0) {
    void (*cbfn)(struct bnad *);
    struct bnad *cbarg;
    
#line 1392 
    cbfn = ioceth->stop_cbfn;
    
#line 1392 
    cbarg = ioceth->stop_cbarg;
    
#line 1392 
    ioceth->stop_cbfn = (void (*)(struct bnad *))0;
    
#line 1392 
    ioceth->stop_cbarg = (struct bnad *)0;
    
#line 1392 
    (*cbfn)(cbarg);
  }
  else ;
  
#line 1394 
  return;
}


#line 1396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_stopped(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1399 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 1400 
    ;
    
#line 1401 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_ready_wait);
    
#line 1401 
    bna_ioceth_sm_ioc_ready_wait_entry(ioceth);
    
#line 1402 
    bfa_nw_ioc_enable(& ioceth->ioc);
    
#line 1403 
    goto ldv_49041;
    case (unsigned int)2: 
#line 1405 
    ;
    
#line 1406 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_stopped);
    
#line 1406 
    bna_ioceth_sm_stopped_entry(ioceth);
    
#line 1407 
    goto ldv_49041;
    case (unsigned int)3: 
#line 1409 
    ;
    {
      u32 intr_status;
      
#line 1410 
      intr_status = readl((void const volatile *)(ioceth->bna)->regs.fn_int_status);
      
#line 1410 
      if (intr_status != 0U) 
#line 1410 
                             writel(~ (ioceth->bna)->bits.mbox_status_bits & intr_status,(void volatile *)(ioceth->bna)->regs.fn_int_status); else ;
      
#line 1410 
      bnad_cb_mbox_intr_enable((ioceth->bna)->bnad);
      {
        u32 mask;
        
#line 1410 
        mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
        
#line 1410 
        writel(~ ((ioceth->bna)->bits.mbox_mask_bits | (ioceth->bna)->bits.error_mask_bits) & mask,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
        
#line 1410 
        mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      }
    }
    
#line 1411 
    goto ldv_49041;
    case (unsigned int)4: 
#line 1413 
    ;
    {
      u32 mask_0;
      
#line 1414 
      mask_0 = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1414 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask_0) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1414 
      mask_0 = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1414 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1415 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_failed);
    
#line 1415 
    bna_ioceth_sm_failed_entry(ioceth);
    
#line 1416 
    goto ldv_49041;
    default: 
#line 1418 
    ;
    
#line 1419 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1419,(unsigned int)event);
  }
  ldv_49041: 
#line 1421 
  ;
  
#line 1422 
  return;
}


#line 1424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_ioc_ready_wait_entry(struct bna_ioceth *ioceth)
{
  
#line 1426 
  return;
}


#line 1433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_ioc_ready_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1436 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1437 
    ;
    
#line 1438 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_disable_wait);
    
#line 1438 
    bna_ioceth_sm_ioc_disable_wait_entry(ioceth);
    
#line 1439 
    bfa_nw_ioc_disable(& ioceth->ioc);
    
#line 1440 
    goto ldv_49057;
    case (unsigned int)3: 
#line 1442 
    ;
    {
      u32 intr_status;
      
#line 1443 
      intr_status = readl((void const volatile *)(ioceth->bna)->regs.fn_int_status);
      
#line 1443 
      if (intr_status != 0U) 
#line 1443 
                             writel(~ (ioceth->bna)->bits.mbox_status_bits & intr_status,(void volatile *)(ioceth->bna)->regs.fn_int_status); else ;
      
#line 1443 
      bnad_cb_mbox_intr_enable((ioceth->bna)->bnad);
      {
        u32 mask;
        
#line 1443 
        mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
        
#line 1443 
        writel(~ ((ioceth->bna)->bits.mbox_mask_bits | (ioceth->bna)->bits.error_mask_bits) & mask,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
        
#line 1443 
        mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      }
    }
    
#line 1444 
    goto ldv_49057;
    case (unsigned int)4: 
#line 1446 
    ;
    {
      u32 mask_0;
      
#line 1447 
      mask_0 = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1447 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask_0) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1447 
      mask_0 = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1447 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1448 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_failed);
    
#line 1448 
    bna_ioceth_sm_failed_entry(ioceth);
    
#line 1449 
    goto ldv_49057;
    case (unsigned int)5: 
#line 1451 
    ;
    
#line 1452 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_enet_attr_wait);
    
#line 1452 
    bna_ioceth_sm_enet_attr_wait_entry(ioceth);
    
#line 1453 
    goto ldv_49057;
    default: 
#line 1455 
    ;
    
#line 1456 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1456,(unsigned int)event);
  }
  ldv_49057: 
#line 1458 
  ;
  
#line 1459 
  return;
}


#line 1461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_enet_attr_wait_entry(struct bna_ioceth *ioceth)
{
  
#line 1463 
  bna_bfi_attr_get(ioceth);
  
#line 1464 
  return;
}


#line 1467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_enet_attr_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1470 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1471 
    ;
    
#line 1472 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_last_resp_wait);
    
#line 1472 
    bna_ioceth_sm_last_resp_wait_entry(ioceth);
    
#line 1473 
    goto ldv_49073;
    case (unsigned int)4: 
#line 1475 
    ;
    {
      u32 mask;
      
#line 1476 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1476 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1476 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1476 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1477 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_failed);
    
#line 1477 
    bna_ioceth_sm_failed_entry(ioceth);
    
#line 1478 
    goto ldv_49073;
    case (unsigned int)6: 
#line 1480 
    ;
    
#line 1481 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ready);
    
#line 1481 
    bna_ioceth_sm_ready_entry(ioceth);
    
#line 1482 
    goto ldv_49073;
    default: 
#line 1484 
    ;
    
#line 1485 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1485,(unsigned int)event);
  }
  ldv_49073: 
#line 1487 
  ;
  
#line 1488 
  return;
}


#line 1490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_ready_entry(struct bna_ioceth *ioceth)
{
  
#line 1492 
  bna_enet_start(& (ioceth->bna)->enet);
  
#line 1493 
  (ioceth->bna)->stats_mod.ioc_ready = (_Bool)1;
  
#line 1494 
  bnad_cb_ioceth_ready((ioceth->bna)->bnad);
  
#line 1495 
  return;
}


#line 1498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_ready(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1500 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1501 
    ;
    
#line 1502 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_enet_stop_wait);
    
#line 1502 
    bna_ioceth_sm_enet_stop_wait_entry(ioceth);
    
#line 1503 
    goto ldv_49086;
    case (unsigned int)4: 
#line 1505 
    ;
    {
      u32 mask;
      
#line 1506 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1506 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1506 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1506 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1507 
    bna_enet_fail(& (ioceth->bna)->enet);
    
#line 1508 
    (ioceth->bna)->stats_mod.ioc_ready = (_Bool)0;
    
#line 1508 
    (ioceth->bna)->stats_mod.stats_get_busy = (_Bool)0;
    
#line 1508 
    (ioceth->bna)->stats_mod.stats_clr_busy = (_Bool)0;
    
#line 1509 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_failed);
    
#line 1509 
    bna_ioceth_sm_failed_entry(ioceth);
    
#line 1510 
    goto ldv_49086;
    default: 
#line 1512 
    ;
    
#line 1513 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1513,(unsigned int)event);
  }
  ldv_49086: 
#line 1515 
  ;
  
#line 1516 
  return;
}


#line 1518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_last_resp_wait_entry(struct bna_ioceth *ioceth)
{
  
#line 1520 
  return;
}


#line 1523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_last_resp_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1526 
  switch ((unsigned int)event) {
    case (unsigned int)4: 
#line 1527 
    ;
    
#line 1528 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_disable_wait);
    
#line 1528 
    bna_ioceth_sm_ioc_disable_wait_entry(ioceth);
    {
      u32 mask;
      
#line 1529 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1529 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1529 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1529 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1530 
    bfa_nw_ioc_disable(& ioceth->ioc);
    
#line 1531 
    goto ldv_49099;
    case (unsigned int)6: 
#line 1533 
    ;
    
#line 1534 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_disable_wait);
    
#line 1534 
    bna_ioceth_sm_ioc_disable_wait_entry(ioceth);
    
#line 1535 
    bfa_nw_ioc_disable(& ioceth->ioc);
    
#line 1536 
    goto ldv_49099;
    default: 
#line 1538 
    ;
    
#line 1539 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1539,(unsigned int)event);
  }
  ldv_49099: 
#line 1541 
  ;
  
#line 1542 
  return;
}


#line 1544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_enet_stop_wait_entry(struct bna_ioceth *ioceth)
{
  
#line 1546 
  (ioceth->bna)->stats_mod.ioc_ready = (_Bool)0;
  
#line 1547 
  bna_enet_stop(& (ioceth->bna)->enet);
  
#line 1548 
  return;
}


#line 1551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_enet_stop_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1554 
  switch ((unsigned int)event) {
    case (unsigned int)4: 
#line 1555 
    ;
    
#line 1556 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_disable_wait);
    
#line 1556 
    bna_ioceth_sm_ioc_disable_wait_entry(ioceth);
    {
      u32 mask;
      
#line 1557 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1557 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1557 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1557 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1558 
    bna_enet_fail(& (ioceth->bna)->enet);
    
#line 1559 
    (ioceth->bna)->stats_mod.ioc_ready = (_Bool)0;
    
#line 1559 
    (ioceth->bna)->stats_mod.stats_get_busy = (_Bool)0;
    
#line 1559 
    (ioceth->bna)->stats_mod.stats_clr_busy = (_Bool)0;
    
#line 1560 
    bfa_nw_ioc_disable(& ioceth->ioc);
    
#line 1561 
    goto ldv_49111;
    case (unsigned int)7: 
#line 1563 
    ;
    
#line 1564 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_disable_wait);
    
#line 1564 
    bna_ioceth_sm_ioc_disable_wait_entry(ioceth);
    
#line 1565 
    bfa_nw_ioc_disable(& ioceth->ioc);
    
#line 1566 
    goto ldv_49111;
    default: 
#line 1568 
    ;
    
#line 1569 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1569,(unsigned int)event);
  }
  ldv_49111: 
#line 1571 
  ;
  
#line 1572 
  return;
}


#line 1574  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_ioc_disable_wait_entry(struct bna_ioceth *ioceth)
{
  
#line 1576 
  return;
}


#line 1579  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_ioc_disable_wait(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1582 
  switch ((unsigned int)event) {
    case (unsigned int)8: 
#line 1583 
    ;
    {
      u32 mask;
      
#line 1584 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1584 
      writel(((ioceth->bna)->bits.mbox_mask_bits | mask) | (ioceth->bna)->bits.error_mask_bits,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
      
#line 1584 
      mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
    }
    
#line 1584 
    bnad_cb_mbox_intr_disable((ioceth->bna)->bnad);
    
#line 1585 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_stopped);
    
#line 1585 
    bna_ioceth_sm_stopped_entry(ioceth);
    
#line 1586 
    goto ldv_49123;
    case (unsigned int)7: 
#line 1588 
    ;
    
#line 1591 
    goto ldv_49123;
    default: 
#line 1593 
    ;
    
#line 1594 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1594,(unsigned int)event);
  }
  ldv_49123: 
#line 1596 
  ;
  
#line 1597 
  return;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_failed_entry(struct bna_ioceth *ioceth)
{
  
#line 1601 
  bnad_cb_ioceth_failed((ioceth->bna)->bnad);
  
#line 1602 
  return;
}


#line 1605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_sm_failed(struct bna_ioceth *ioceth, enum bna_ioceth_event event)
{
  
#line 1608 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1609 
    ;
    
#line 1610 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_disable_wait);
    
#line 1610 
    bna_ioceth_sm_ioc_disable_wait_entry(ioceth);
    
#line 1611 
    bfa_nw_ioc_disable(& ioceth->ioc);
    
#line 1612 
    goto ldv_49134;
    case (unsigned int)3: 
#line 1614 
    ;
    {
      u32 intr_status;
      
#line 1615 
      intr_status = readl((void const volatile *)(ioceth->bna)->regs.fn_int_status);
      
#line 1615 
      if (intr_status != 0U) 
#line 1615 
                             writel(~ (ioceth->bna)->bits.mbox_status_bits & intr_status,(void volatile *)(ioceth->bna)->regs.fn_int_status); else ;
      
#line 1615 
      bnad_cb_mbox_intr_enable((ioceth->bna)->bnad);
      {
        u32 mask;
        
#line 1615 
        mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
        
#line 1615 
        writel(~ ((ioceth->bna)->bits.mbox_mask_bits | (ioceth->bna)->bits.error_mask_bits) & mask,(void volatile *)(ioceth->bna)->regs.fn_int_mask);
        
#line 1615 
        mask = readl((void const volatile *)(ioceth->bna)->regs.fn_int_mask);
      }
    }
    
#line 1616 
    ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_ioc_ready_wait);
    
#line 1616 
    bna_ioceth_sm_ioc_ready_wait_entry(ioceth);
    
#line 1617 
    goto ldv_49134;
    case (unsigned int)4: 
#line 1619 
    ;
    
#line 1620 
    goto ldv_49134;
    default: 
#line 1622 
    ;
    
#line 1623 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c",1623,(unsigned int)event);
  }
  ldv_49134: 
#line 1625 
  ;
  
#line 1626 
  return;
}


#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_attr_get(struct bna_ioceth *ioceth)
{
  
#line 1630 
  struct bfi_enet_attr_req *attr_req = & ioceth->attr_req;
  
#line 1632 
  attr_req->mh.msg_class = (unsigned char)24U;
  
#line 1632 
  attr_req->mh.msg_id = (unsigned char)22U;
  
#line 1632 
  attr_req->mh.msg_token = (unsigned short)0U;
  
#line 1632 
  attr_req->mh.enet_id = (unsigned char)0U;
  
#line 1634 
  attr_req->mh.num_entries = (unsigned short)256U;
  
#line 1636 
  ioceth->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 1636 
  ioceth->msgq_cmd.cbarg = (void *)0;
  
#line 1636 
  ioceth->msgq_cmd.msg_size = 8UL;
  
#line 1636 
  ioceth->msgq_cmd.msg_hdr = & attr_req->mh;
  
#line 1638 
  bfa_msgq_cmd_post(& (ioceth->bna)->msgq,& ioceth->msgq_cmd);
  
#line 1639 
  return;
}


#line 1644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_cb_ioceth_enable(void *arg, enum bfa_status error)
{
  
#line 1646 
  struct bna_ioceth *ioceth = (struct bna_ioceth *)arg;
  
#line 1648 
  if (error != (unsigned int)BFA_STATUS_OK) 
#line 1649 
                                            (*(ioceth->fsm))((void *)ioceth,4); else 
                                                                    
#line 1651 
                                                                    (*(ioceth->fsm))((void *)ioceth,5);
  
#line 1652 
  return;
}


#line 1655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_cb_ioceth_disable(void *arg)
{
  
#line 1657 
  struct bna_ioceth *ioceth = (struct bna_ioceth *)arg;
  
#line 1659 
  (*(ioceth->fsm))((void *)ioceth,8);
  
#line 1660 
  return;
}


#line 1663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_cb_ioceth_hbfail(void *arg)
{
  
#line 1665 
  struct bna_ioceth *ioceth = (struct bna_ioceth *)arg;
  
#line 1667 
  (*(ioceth->fsm))((void *)ioceth,4);
  
#line 1668 
  return;
}


#line 1671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_cb_ioceth_reset(void *arg)
{
  
#line 1673 
  struct bna_ioceth *ioceth = (struct bna_ioceth *)arg;
  
#line 1675 
  (*(ioceth->fsm))((void *)ioceth,3);
  
#line 1676 
  return;
}


#line 1678  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static struct bfa_ioc_cbfn bna_ioceth_cbfn = {.enable_cbfn = & bna_cb_ioceth_enable, .disable_cbfn = & bna_cb_ioceth_disable, .hbfail_cbfn = & bna_cb_ioceth_hbfail, .reset_cbfn = & bna_cb_ioceth_reset};

#line 1685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_attr_init(struct bna_ioceth *ioceth)
{
  
#line 1687 
  ioceth->attr.num_txq = 1;
  
#line 1688 
  ioceth->attr.num_rxp = 1;
  
#line 1689 
  ioceth->attr.num_ucmac = 1;
  
#line 1690 
  ioceth->attr.num_mcmac = 256;
  
#line 1691 
  ioceth->attr.max_rit_size = 1;
  
#line 1692 
  ioceth->attr.fw_query_complete = (_Bool)0;
  
#line 1693 
  return;
}


#line 1696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_init(struct bna_ioceth *ioceth, struct bna *bna, struct bna_res_info *res_info)
{
  u64 dma;
  u8 *kva;
  unsigned int tmp_0;
  unsigned int tmp_2;
  unsigned int tmp_4;
  unsigned int tmp_6;
  u32 tmp_7;
  u32 tmp_8;
  u32 tmp_9;
  u32 tmp_10;
  u32 tmp_11;
  u32 tmp_12;
  
#line 1702 
  ioceth->bna = bna;
  
#line 1709 
  bfa_nw_ioc_attach(& ioceth->ioc,(void *)ioceth,& bna_ioceth_cbfn);
  
#line 1710 
  bfa_nw_ioc_pci_init(& ioceth->ioc,& bna->pcidev,(enum bfi_pcifn_class)BFI_PCIFN_CLASS_ETH);
  
#line 1712 
  if (0 != 0) 
#line 1712 
              tmp_0 = (((((res_info + 1U)->res_u.mem_info.mdl)->dma.msb << 24) | ((((res_info + 1U)->res_u.mem_info.mdl)->dma.msb << 8) & 16711680U)) | ((((res_info + 1U)->res_u.mem_info.mdl)->dma.msb >> 8) & 65280U)) | (((res_info + 1U)->res_u.mem_info.mdl)->dma.msb >> 24); else 
                                                                    
#line 1712 
                                                                    tmp_0 = __fswab32(((res_info + 1U)->res_u.mem_info.mdl)->dma.msb);
  
#line 1712 
  if (0 != 0) 
#line 1712 
              tmp_2 = (((((res_info + 1U)->res_u.mem_info.mdl)->dma.lsb << 24) | ((((res_info + 1U)->res_u.mem_info.mdl)->dma.lsb << 8) & 16711680U)) | ((((res_info + 1U)->res_u.mem_info.mdl)->dma.lsb >> 8) & 65280U)) | (((res_info + 1U)->res_u.mem_info.mdl)->dma.lsb >> 24); else 
                                                                    
#line 1712 
                                                                    tmp_2 = __fswab32(((res_info + 1U)->res_u.mem_info.mdl)->dma.lsb);
  
#line 1712 
  dma = ((unsigned long long)tmp_0 << 32) | (unsigned long long)tmp_2;
  
#line 1714 
  kva = (u8 *)((res_info + 1U)->res_u.mem_info.mdl)->kva;
  
#line 1715 
  bfa_nw_ioc_mem_claim(& ioceth->ioc,kva,dma);
  
#line 1717 
  kva = (u8 *)((res_info + 2U)->res_u.mem_info.mdl)->kva;
  
#line 1718 
  bfa_nw_ioc_debug_memclaim(& ioceth->ioc,(void *)kva);
  
#line 1724 
  if (0 != 0) 
#line 1724 
              tmp_4 = ((((res_info->res_u.mem_info.mdl)->dma.msb << 24) | (((res_info->res_u.mem_info.mdl)->dma.msb << 8) & 16711680U)) | (((res_info->res_u.mem_info.mdl)->dma.msb >> 8) & 65280U)) | ((res_info->res_u.mem_info.mdl)->dma.msb >> 24); else 
                                                                    
#line 1724 
                                                                    tmp_4 = __fswab32((res_info->res_u.mem_info.mdl)->dma.msb);
  
#line 1724 
  if (0 != 0) 
#line 1724 
              tmp_6 = ((((res_info->res_u.mem_info.mdl)->dma.lsb << 24) | (((res_info->res_u.mem_info.mdl)->dma.lsb << 8) & 16711680U)) | (((res_info->res_u.mem_info.mdl)->dma.lsb >> 8) & 65280U)) | ((res_info->res_u.mem_info.mdl)->dma.lsb >> 24); else 
                                                                    
#line 1724 
                                                                    tmp_6 = __fswab32((res_info->res_u.mem_info.mdl)->dma.lsb);
  
#line 1724 
  dma = ((unsigned long long)tmp_4 << 32) | (unsigned long long)tmp_6;
  
#line 1726 
  kva = (u8 *)(res_info->res_u.mem_info.mdl)->kva;
  
#line 1727 
  bfa_nw_cee_attach(& bna->cee,& ioceth->ioc,(void *)bna);
  
#line 1728 
  bfa_nw_cee_mem_claim(& bna->cee,kva,dma);
  
#line 1729 
  tmp_7 = bfa_nw_cee_meminfo();
  
#line 1729 
  kva += tmp_7;
  
#line 1730 
  tmp_8 = bfa_nw_cee_meminfo();
  
#line 1730 
  dma = (unsigned long long)tmp_8 + dma;
  
#line 1732 
  bfa_nw_flash_attach(& bna->flash,& ioceth->ioc,(void *)bna);
  
#line 1733 
  bfa_nw_flash_memclaim(& bna->flash,kva,dma);
  
#line 1734 
  tmp_9 = bfa_nw_flash_meminfo();
  
#line 1734 
  kva += tmp_9;
  
#line 1735 
  tmp_10 = bfa_nw_flash_meminfo();
  
#line 1735 
  dma = (unsigned long long)tmp_10 + dma;
  
#line 1737 
  bfa_msgq_attach(& bna->msgq,& ioceth->ioc);
  
#line 1738 
  bfa_msgq_memclaim(& bna->msgq,kva,dma);
  
#line 1739 
  bfa_msgq_regisr(& bna->msgq,(enum bfi_mclass)BFI_MC_ENET,& bna_msgq_rsp_handler,(void *)bna);
  
#line 1740 
  tmp_11 = bfa_msgq_meminfo();
  
#line 1740 
  kva += tmp_11;
  
#line 1741 
  tmp_12 = bfa_msgq_meminfo();
  
#line 1741 
  dma = (unsigned long long)tmp_12 + dma;
  
#line 1743 
  ioceth->stop_cbfn = (void (*)(struct bnad *))0;
  
#line 1744 
  ioceth->stop_cbarg = (struct bnad *)0;
  
#line 1746 
  bna_attr_init(ioceth);
  
#line 1748 
  ioceth->fsm = (void (*)(void *, int ))(& bna_ioceth_sm_stopped);
  
#line 1748 
  bna_ioceth_sm_stopped_entry(ioceth);
  
#line 1749 
  return;
}


#line 1752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ioceth_uninit(struct bna_ioceth *ioceth)
{
  
#line 1754 
  bfa_nw_ioc_detach(& ioceth->ioc);
  
#line 1756 
  ioceth->bna = (struct bna *)0;
  
#line 1757 
  return;
}


#line 1760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_ioceth_enable(struct bna_ioceth *ioceth)
{
  
#line 1762 
  if (ioceth->fsm == (void (*)(void *, int ))(& bna_ioceth_sm_ready)) {
    
#line 1763 
    bnad_cb_ioceth_ready((ioceth->bna)->bnad);
    
#line 1764 
    goto return_label;
  }
  else ;
  
#line 1767 
  if (ioceth->fsm == (void (*)(void *, int ))(& bna_ioceth_sm_stopped)) 
    
#line 1768 
    (*(ioceth->fsm))((void *)ioceth,1); else ;
  return_label: 
#line 1769 
                return;
}


#line 1772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_ioceth_disable(struct bna_ioceth *ioceth, enum bna_cleanup_type type)
{
  
#line 1774 
  if (type == (unsigned int)BNA_SOFT_CLEANUP) {
    
#line 1775 
    bnad_cb_ioceth_disabled((ioceth->bna)->bnad);
    
#line 1776 
    goto return_label;
  }
  else ;
  
#line 1779 
  ioceth->stop_cbfn = & bnad_cb_ioceth_disabled;
  
#line 1780 
  ioceth->stop_cbarg = (ioceth->bna)->bnad;
  
#line 1782 
  (*(ioceth->fsm))((void *)ioceth,2);
  return_label: 
#line 1783 
                return;
}


#line 1786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ucam_mod_init(struct bna_ucam_mod *ucam_mod, struct bna *bna, struct bna_res_info *res_info)
{
  int i;
  
#line 1791 
  ucam_mod->ucmac = (struct bna_mac *)((res_info + 5U)->res_u.mem_info.mdl)->kva;
  
#line 1794 
  INIT_LIST_HEAD(& ucam_mod->free_q);
  
#line 1795 
  i = 0;
  
#line 1795 
  goto ldv_49189;
  ldv_49188: 
#line 1796 
  ;
  
#line 1796 
  list_add_tail(& (ucam_mod->ucmac + i)->qe,& ucam_mod->free_q);
  
#line 1795 
  i += 1;
  ldv_49189: 
#line 1796 
  ;
  
#line 1795 
  if (bna->ioceth.attr.num_ucmac > i) 
#line 1797 
                                      goto ldv_49188; else 
#line 1800 
                                                           goto ldv_49190;
  ldv_49190: 
#line 1801 
  ;
  
#line 1799 
  INIT_LIST_HEAD(& ucam_mod->del_q);
  
#line 1800 
  i = i;
  
#line 1800 
  goto ldv_49192;
  ldv_49191: 
#line 1801 
  ;
  
#line 1801 
  list_add_tail(& (ucam_mod->ucmac + i)->qe,& ucam_mod->del_q);
  
#line 1800 
  i += 1;
  ldv_49192: 
#line 1801 
  ;
  
#line 1800 
  if (bna->ioceth.attr.num_ucmac * 2 > i) 
#line 1802 
                                          goto ldv_49191; else 
#line 1805 
                                                               goto ldv_49193;
  ldv_49193: 
#line 1806 
  ;
  
#line 1803 
  ucam_mod->bna = bna;
  
#line 1804 
  return;
}


#line 1807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_ucam_mod_uninit(struct bna_ucam_mod *ucam_mod)
{
  
#line 1809 
  ucam_mod->bna = (struct bna *)0;
  
#line 1810 
  return;
}


#line 1813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_mcam_mod_init(struct bna_mcam_mod *mcam_mod, struct bna *bna, struct bna_res_info *res_info)
{
  int i;
  
#line 1818 
  mcam_mod->mcmac = (struct bna_mac *)((res_info + 6U)->res_u.mem_info.mdl)->kva;
  
#line 1821 
  INIT_LIST_HEAD(& mcam_mod->free_q);
  
#line 1822 
  i = 0;
  
#line 1822 
  goto ldv_49204;
  ldv_49203: 
#line 1823 
  ;
  
#line 1823 
  list_add_tail(& (mcam_mod->mcmac + i)->qe,& mcam_mod->free_q);
  
#line 1822 
  i += 1;
  ldv_49204: 
#line 1823 
  ;
  
#line 1822 
  if (bna->ioceth.attr.num_mcmac > i) 
#line 1824 
                                      goto ldv_49203; else 
#line 1827 
                                                           goto ldv_49205;
  ldv_49205: 
#line 1828 
  ;
  
#line 1825 
  mcam_mod->mchandle = (struct bna_mcam_handle *)((res_info + 7U)->res_u.mem_info.mdl)->kva;
  
#line 1828 
  INIT_LIST_HEAD(& mcam_mod->free_handle_q);
  
#line 1829 
  i = 0;
  
#line 1829 
  goto ldv_49207;
  ldv_49206: 
#line 1830 
  ;
  
#line 1830 
  list_add_tail(& (mcam_mod->mchandle + i)->qe,& mcam_mod->free_handle_q);
  
#line 1829 
  i += 1;
  ldv_49207: 
#line 1830 
  ;
  
#line 1829 
  if (bna->ioceth.attr.num_mcmac > i) 
#line 1831 
                                      goto ldv_49206; else 
#line 1834 
                                                           goto ldv_49208;
  ldv_49208: 
#line 1835 
  ;
  
#line 1834 
  INIT_LIST_HEAD(& mcam_mod->del_q);
  
#line 1835 
  i = i;
  
#line 1835 
  goto ldv_49210;
  ldv_49209: 
#line 1836 
  ;
  
#line 1836 
  list_add_tail(& (mcam_mod->mcmac + i)->qe,& mcam_mod->del_q);
  
#line 1835 
  i += 1;
  ldv_49210: 
#line 1836 
  ;
  
#line 1835 
  if (bna->ioceth.attr.num_mcmac * 2 > i) 
#line 1837 
                                          goto ldv_49209; else 
#line 1840 
                                                               goto ldv_49211;
  ldv_49211: 
#line 1841 
  ;
  
#line 1838 
  mcam_mod->bna = bna;
  
#line 1839 
  return;
}


#line 1842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_mcam_mod_uninit(struct bna_mcam_mod *mcam_mod)
{
  
#line 1844 
  mcam_mod->bna = (struct bna *)0;
  
#line 1845 
  return;
}


#line 1848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
static void bna_bfi_stats_get(struct bna *bna)
{
  
#line 1850 
  struct bfi_enet_stats_req *stats_req = & bna->stats_mod.stats_get;
  
#line 1852 
  bna->stats_mod.stats_get_busy = (_Bool)1;
  
#line 1854 
  stats_req->mh.msg_class = (unsigned char)24U;
  
#line 1854 
  stats_req->mh.msg_id = (unsigned char)23U;
  
#line 1854 
  stats_req->mh.msg_token = (unsigned short)0U;
  
#line 1854 
  stats_req->mh.enet_id = (unsigned char)0U;
  
#line 1856 
  stats_req->mh.num_entries = (unsigned short)256U;
  
#line 1858 
  stats_req->stats_mask = (unsigned short)7936U;
  
#line 1859 
  if (0 != 0) 
#line 1859 
              stats_req->tx_enet_mask = (((bna->tx_mod.rid_mask << 24) | ((bna->tx_mod.rid_mask << 8) & 16711680U)) | ((bna->tx_mod.rid_mask >> 8) & 65280U)) | (bna->tx_mod.rid_mask >> 24); else 
                                                                    
#line 1859 
                                                                    stats_req->tx_enet_mask = __fswab32(bna->tx_mod.rid_mask);
  
#line 1860 
  if (0 != 0) 
#line 1860 
              stats_req->rx_enet_mask = (((bna->rx_mod.rid_mask << 24) | ((bna->rx_mod.rid_mask << 8) & 16711680U)) | ((bna->rx_mod.rid_mask >> 8) & 65280U)) | (bna->rx_mod.rid_mask >> 24); else 
                                                                    
#line 1860 
                                                                    stats_req->rx_enet_mask = __fswab32(bna->rx_mod.rid_mask);
  
#line 1861 
  stats_req->host_buffer.a32.addr_hi = bna->stats.hw_stats_dma.msb;
  
#line 1862 
  stats_req->host_buffer.a32.addr_lo = bna->stats.hw_stats_dma.lsb;
  
#line 1864 
  bna->stats_mod.stats_get_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 1864 
  bna->stats_mod.stats_get_cmd.cbarg = (void *)0;
  
#line 1864 
  bna->stats_mod.stats_get_cmd.msg_size = 28UL;
  
#line 1864 
  bna->stats_mod.stats_get_cmd.msg_hdr = & stats_req->mh;
  
#line 1866 
  bfa_msgq_cmd_post(& bna->msgq,& bna->stats_mod.stats_get_cmd);
  
#line 1867 
  return;
}


#line 1870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_res_req(struct bna_res_info *res_info)
{
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  
#line 1873 
  res_info->res_type = BNA_RES_T_MEM;
  
#line 1874 
  res_info->res_u.mem_info.mem_type = BNA_MEM_T_DMA;
  
#line 1875 
  res_info->res_u.mem_info.num = 1U;
  
#line 1876 
  tmp = bfa_nw_cee_meminfo();
  
#line 1876 
  tmp_0 = bfa_nw_flash_meminfo();
  
#line 1876 
  tmp_1 = bfa_msgq_meminfo();
  
#line 1876 
  res_info->res_u.mem_info.len = (((tmp + tmp_0) + tmp_1) + 4095U) & 4294963200U;
  
#line 1882 
  (res_info + 1U)->res_type = BNA_RES_T_MEM;
  
#line 1883 
  (res_info + 1U)->res_u.mem_info.mem_type = BNA_MEM_T_DMA;
  
#line 1884 
  (res_info + 1U)->res_u.mem_info.num = 1U;
  
#line 1885 
  tmp_2 = bfa_nw_ioc_meminfo();
  
#line 1885 
  (res_info + 1U)->res_u.mem_info.len = (tmp_2 + 4095U) & 4294963200U;
  
#line 1889 
  (res_info + 2U)->res_type = BNA_RES_T_MEM;
  
#line 1890 
  (res_info + 2U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1891 
  (res_info + 2U)->res_u.mem_info.num = 1U;
  
#line 1892 
  (res_info + 2U)->res_u.mem_info.len = 4128U;
  
#line 1895 
  (res_info + 3U)->res_type = BNA_RES_T_MEM;
  
#line 1896 
  (res_info + 3U)->res_u.mem_info.mem_type = BNA_MEM_T_DMA;
  
#line 1897 
  (res_info + 3U)->res_u.mem_info.num = 1U;
  
#line 1898 
  (res_info + 3U)->res_u.mem_info.len = 8192U;
  
#line 1899 
  return;
}


#line 1904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_mod_res_req(struct bna *bna, struct bna_res_info *res_info)
{
  
#line 1906 
  struct bna_attr *attr = & bna->ioceth.attr;
  
#line 1909 
  res_info->res_type = BNA_RES_T_MEM;
  
#line 1910 
  res_info->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1912 
  res_info->res_u.mem_info.num = 1U;
  
#line 1913 
  res_info->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_txq) * 520U;
  
#line 1917 
  (res_info + 1U)->res_type = BNA_RES_T_MEM;
  
#line 1918 
  (res_info + 1U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1920 
  (res_info + 1U)->res_u.mem_info.num = 1U;
  
#line 1921 
  (res_info + 1U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_txq) * 144U;
  
#line 1925 
  (res_info + 2U)->res_type = BNA_RES_T_MEM;
  
#line 1926 
  (res_info + 2U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1928 
  (res_info + 2U)->res_u.mem_info.num = 1U;
  
#line 1929 
  (res_info + 2U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_rxp) * 2512U;
  
#line 1933 
  (res_info + 3U)->res_type = BNA_RES_T_MEM;
  
#line 1934 
  (res_info + 3U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1936 
  (res_info + 3U)->res_u.mem_info.num = 1U;
  
#line 1937 
  (res_info + 3U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_rxp) * 152U;
  
#line 1941 
  (res_info + 4U)->res_type = BNA_RES_T_MEM;
  
#line 1942 
  (res_info + 4U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1944 
  (res_info + 4U)->res_u.mem_info.num = 1U;
  
#line 1945 
  (res_info + 4U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_rxp) * 240U;
  
#line 1949 
  (res_info + 5U)->res_type = BNA_RES_T_MEM;
  
#line 1950 
  (res_info + 5U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1952 
  (res_info + 5U)->res_u.mem_info.num = 1U;
  
#line 1953 
  (res_info + 5U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_ucmac) * 64U;
  
#line 1957 
  (res_info + 6U)->res_type = BNA_RES_T_MEM;
  
#line 1958 
  (res_info + 6U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1960 
  (res_info + 6U)->res_u.mem_info.num = 1U;
  
#line 1961 
  (res_info + 6U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_mcmac) * 64U;
  
#line 1965 
  (res_info + 7U)->res_type = BNA_RES_T_MEM;
  
#line 1966 
  (res_info + 7U)->res_u.mem_info.mem_type = BNA_MEM_T_KVA;
  
#line 1968 
  (res_info + 7U)->res_u.mem_info.num = 1U;
  
#line 1969 
  (res_info + 7U)->res_u.mem_info.len = (unsigned int)((unsigned long)attr->num_mcmac) * 24U;
  
#line 1971 
  return;
}


#line 1974  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_init(struct bna *bna, struct bnad *bnad, struct bfa_pcidev *pcidev, struct bna_res_info *res_info)
{
  
#line 1977 
  bna->bnad = bnad;
  
#line 1978 
  bna->pcidev = *pcidev;
  
#line 1980 
  bna->stats.hw_stats_kva = (struct bfi_enet_stats *)((res_info + 3U)->res_u.mem_info.mdl)->kva;
  
#line 1982 
  bna->stats.hw_stats_dma.msb = ((res_info + 3U)->res_u.mem_info.mdl)->dma.msb;
  
#line 1984 
  bna->stats.hw_stats_dma.lsb = ((res_info + 3U)->res_u.mem_info.mdl)->dma.lsb;
  
#line 1987 
  switch ((int)bna->pcidev.device_id) {
    case 20: 
#line 1987 
    ;
    {
      
#line 1987 
      struct bna_reg_offset reg_offset[4U] = {{.fn_int_status = 81920U, .fn_int_mask = 81924U}, {.fn_int_status = 82176U, .fn_int_mask = 82180U}, {.fn_int_status = 82688U, .fn_int_mask = 82692U}, {.fn_int_status = 82944U, .fn_int_mask = 82948U}};
      
#line 1987 
      bna->regs.fn_int_status = bna->pcidev.pci_bar_kva + reg_offset[(int)bna->pcidev.pci_func].fn_int_status;
      
#line 1987 
      bna->regs.fn_int_mask = bna->pcidev.pci_bar_kva + reg_offset[(int)bna->pcidev.pci_func].fn_int_mask;
    }
    
#line 1987 
    bna->bits.mbox_status_bits = 3145728U;
    
#line 1987 
    bna->bits.mbox_mask_bits = 3145728U;
    
#line 1987 
    bna->bits.error_status_bits = 17760256U;
    
#line 1987 
    bna->bits.error_mask_bits = 17760256U;
    
#line 1987 
    bna->bits.halt_status_bits = 16777216U;
    
#line 1987 
    bna->bits.halt_mask_bits = 16777216U;
    
#line 1987 
    goto ldv_49235;
    case 34: 
#line 1987 
    ;
    
#line 1987 
    bna->regs.fn_int_status = bna->pcidev.pci_bar_kva + 196864U;
    
#line 1987 
    bna->regs.fn_int_mask = bna->pcidev.pci_bar_kva + 196868U;
    
#line 1987 
    bna->bits.mbox_status_bits = 196608U;
    
#line 1987 
    bna->bits.mbox_mask_bits = 196608U;
    
#line 1987 
    bna->bits.error_status_bits = 33292288U;
    
#line 1987 
    bna->bits.error_mask_bits = 33292288U;
    
#line 1987 
    bna->bits.halt_status_bits = 2097152U;
    
#line 1987 
    bna->bits.halt_mask_bits = 2097152U;
    
#line 1987 
    goto ldv_49235;
  }
  ldv_49235: 
#line 1987 
  ;
  
#line 1990 
  bna_ioceth_init(& bna->ioceth,bna,res_info);
  
#line 1992 
  bna_enet_init(& bna->enet,bna);
  
#line 1993 
  bna_ethport_init(& bna->ethport,bna);
  
#line 1994 
  return;
}


#line 1997  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_mod_init(struct bna *bna, struct bna_res_info *res_info)
{
  
#line 1999 
  bna_tx_mod_init(& bna->tx_mod,bna,res_info);
  
#line 2001 
  bna_rx_mod_init(& bna->rx_mod,bna,res_info);
  
#line 2003 
  bna_ucam_mod_init(& bna->ucam_mod,bna,res_info);
  
#line 2005 
  bna_mcam_mod_init(& bna->mcam_mod,bna,res_info);
  
#line 2007 
  bna->default_mode_rid = -1;
  
#line 2008 
  bna->promisc_rid = -1;
  
#line 2010 
  bna->mod_flags = (enum bna_mod_flags)((unsigned int)bna->mod_flags | 1U);
  
#line 2011 
  return;
}


#line 2014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_uninit(struct bna *bna)
{
  
#line 2016 
  if (((unsigned int)bna->mod_flags & 1U) != 0U) {
    
#line 2017 
    bna_mcam_mod_uninit(& bna->mcam_mod);
    
#line 2018 
    bna_ucam_mod_uninit(& bna->ucam_mod);
    
#line 2019 
    bna_rx_mod_uninit(& bna->rx_mod);
    
#line 2020 
    bna_tx_mod_uninit(& bna->tx_mod);
    
#line 2021 
    bna->mod_flags = (enum bna_mod_flags)((unsigned int)bna->mod_flags & 4294967294U);
  }
  else ;
  
#line 2025 
  bna_ethport_uninit(& bna->ethport);
  
#line 2026 
  bna_enet_uninit(& bna->enet);
  
#line 2028 
  bna_ioceth_uninit(& bna->ioceth);
  
#line 2030 
  bna->bnad = (struct bnad *)0;
  
#line 2031 
  return;
}


#line 2034  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
int bna_num_txq_set(struct bna *bna, int num_txq)
{
  int __retres;
  
#line 2036 
  if ((int)bna->ioceth.attr.fw_query_complete != 0 && bna->ioceth.attr.num_txq >= num_txq) {
    
#line 2038 
    bna->ioceth.attr.num_txq = num_txq;
    
#line 2039 
    __retres = 0;
    
#line 2039 
    goto return_label;
  }
  else ;
  
#line 2042 
  __retres = 1;
  return_label: 
#line 2042 
                return __retres;
}


#line 2046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
int bna_num_rxp_set(struct bna *bna, int num_rxp)
{
  int __retres;
  
#line 2048 
  if ((int)bna->ioceth.attr.fw_query_complete != 0 && bna->ioceth.attr.num_rxp >= num_rxp) {
    
#line 2050 
    bna->ioceth.attr.num_rxp = num_rxp;
    
#line 2051 
    __retres = 0;
    
#line 2051 
    goto return_label;
  }
  else ;
  
#line 2054 
  __retres = 1;
  return_label: 
#line 2054 
                return __retres;
}


#line 2058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
struct bna_mac *bna_cam_mod_mac_get(struct list_head *head)
{
  struct bna_mac *mac;
  int tmp;
  
#line 2062 
  tmp = list_empty((struct list_head const *)head);
  
#line 2062 
  if (tmp == 0) {
    struct bna_mac *tmp_0;
    {
      
#line 2062 
      struct list_head const *__mptr = (struct list_head const *)head->next;
      
#line 2062 
      tmp_0 = (struct bna_mac *)__mptr;
    }
    
#line 2062 
    mac = tmp_0;
  }
  else 
#line 2062 
       mac = (struct bna_mac *)0;
  
#line 2063 
  if (mac != (struct bna_mac *)0) 
#line 2064 
                                  list_del(& mac->qe); else ;
  
#line 2066 
  return mac;
}


#line 2070  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
struct bna_mcam_handle *bna_mcam_mod_handle_get(struct bna_mcam_mod *mcam_mod)
{
  struct bna_mcam_handle *handle;
  int tmp;
  
#line 2074 
  tmp = list_empty((struct list_head const *)(& mcam_mod->free_handle_q));
  
#line 2074 
  if (tmp == 0) {
    struct bna_mcam_handle *tmp_0;
    {
      
#line 2074 
      struct list_head const *__mptr = (struct list_head const *)mcam_mod->free_handle_q.next;
      
#line 2074 
      tmp_0 = (struct bna_mcam_handle *)__mptr;
    }
    
#line 2074 
    handle = tmp_0;
  }
  else 
#line 2074 
       handle = (struct bna_mcam_handle *)0;
  
#line 2076 
  if (handle != (struct bna_mcam_handle *)0) 
#line 2077 
                                             list_del(& handle->qe); else ;
  
#line 2079 
  return handle;
}


#line 2083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_mcam_mod_handle_put(struct bna_mcam_mod *mcam_mod, struct bna_mcam_handle *handle)
{
  
#line 2086 
  list_add_tail(& handle->qe,& mcam_mod->free_handle_q);
  
#line 2087 
  return;
}


#line 2090  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_enet.c"
void bna_hw_stats_get(struct bna *bna)
{
  
#line 2092 
  if (! bna->stats_mod.ioc_ready) {
    
#line 2093 
    bnad_cb_stats_get(bna->bnad,(enum bna_cb_status)BNA_CB_FAIL,& bna->stats);
    
#line 2094 
    goto return_label;
  }
  else ;
  
#line 2096 
  if ((int)bna->stats_mod.stats_get_busy != 0) {
    
#line 2097 
    bnad_cb_stats_get(bna->bnad,(enum bna_cb_status)BNA_CB_BUSY,& bna->stats);
    
#line 2098 
    goto return_label;
  }
  else ;
  
#line 2101 
  bna_bfi_stats_get(bna);
  return_label: 
#line 2102 
                return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static bool bfa_ioc_ct_firmware_lock(struct bfa_ioc *ioc);


#line 38 
static void bfa_ioc_ct_firmware_unlock(struct bfa_ioc *ioc);


#line 39 
static void bfa_ioc_ct_reg_init(struct bfa_ioc *ioc);


#line 40 
static void bfa_ioc_ct2_reg_init(struct bfa_ioc *ioc);


#line 41 
static void bfa_ioc_ct_map_port(struct bfa_ioc *ioc);


#line 42 
static void bfa_ioc_ct2_map_port(struct bfa_ioc *ioc);


#line 43 
static void bfa_ioc_ct_isr_mode_set(struct bfa_ioc *ioc, bool msix);


#line 44 
static void bfa_ioc_ct_notify_fail(struct bfa_ioc *ioc);


#line 45 
static void bfa_ioc_ct_ownership_reset(struct bfa_ioc *ioc);


#line 46 
static bool bfa_ioc_ct_sync_start(struct bfa_ioc *ioc);


#line 47 
static void bfa_ioc_ct_sync_join(struct bfa_ioc *ioc);


#line 48 
static void bfa_ioc_ct_sync_leave(struct bfa_ioc *ioc);


#line 49 
static void bfa_ioc_ct_sync_ack(struct bfa_ioc *ioc);


#line 50 
static bool bfa_ioc_ct_sync_complete(struct bfa_ioc *ioc);


#line 51 
static void bfa_ioc_ct_set_cur_ioc_fwstate(struct bfa_ioc *ioc, enum bfi_ioc_state fwstate);


#line 53 
static enum bfi_ioc_state bfa_ioc_ct_get_cur_ioc_fwstate(struct bfa_ioc *ioc);


#line 54 
static void bfa_ioc_ct_set_alt_ioc_fwstate(struct bfa_ioc *ioc, enum bfi_ioc_state fwstate);


#line 56 
static enum bfi_ioc_state bfa_ioc_ct_get_alt_ioc_fwstate(struct bfa_ioc *ioc);


#line 57 
static enum bfa_status bfa_ioc_ct_pll_init(void *rb, enum bfi_asic_mode asic_mode);


#line 59 
static enum bfa_status bfa_ioc_ct2_pll_init(void *rb, enum bfi_asic_mode asic_mode);


#line 61 
static bool bfa_ioc_ct2_lpu_read_stat(struct bfa_ioc *ioc);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static struct bfa_ioc_hwif const nw_hwif_ct = {.ioc_pll_init = & bfa_ioc_ct_pll_init, .ioc_firmware_lock = & bfa_ioc_ct_firmware_lock, .ioc_firmware_unlock = & bfa_ioc_ct_firmware_unlock, .ioc_reg_init = & bfa_ioc_ct_reg_init, .ioc_map_port = & bfa_ioc_ct_map_port, .ioc_isr_mode_set = & bfa_ioc_ct_isr_mode_set, .ioc_notify_fail = & bfa_ioc_ct_notify_fail, .ioc_ownership_reset = & bfa_ioc_ct_ownership_reset, .ioc_sync_start = & bfa_ioc_ct_sync_start, .ioc_sync_join = & bfa_ioc_ct_sync_join, .ioc_sync_leave = & bfa_ioc_ct_sync_leave, .ioc_sync_ack = & bfa_ioc_ct_sync_ack, .ioc_sync_complete = & bfa_ioc_ct_sync_complete, .ioc_lpu_read_stat = (bool (*)(struct bfa_ioc *))0, .ioc_set_fwstate = & bfa_ioc_ct_set_cur_ioc_fwstate, .ioc_get_fwstate = & bfa_ioc_ct_get_cur_ioc_fwstate, .ioc_set_alt_fwstate = & bfa_ioc_ct_set_alt_ioc_fwstate, .ioc_get_alt_fwstate = & bfa_ioc_ct_get_alt_ioc_fwstate};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static struct bfa_ioc_hwif const nw_hwif_ct2 = {.ioc_pll_init = & bfa_ioc_ct2_pll_init, .ioc_firmware_lock = & bfa_ioc_ct_firmware_lock, .ioc_firmware_unlock = & bfa_ioc_ct_firmware_unlock, .ioc_reg_init = & bfa_ioc_ct2_reg_init, .ioc_map_port = & bfa_ioc_ct2_map_port, .ioc_isr_mode_set = (void (*)(struct bfa_ioc *, bool ))0, .ioc_notify_fail = & bfa_ioc_ct_notify_fail, .ioc_ownership_reset = & bfa_ioc_ct_ownership_reset, .ioc_sync_start = & bfa_ioc_ct_sync_start, .ioc_sync_join = & bfa_ioc_ct_sync_join, .ioc_sync_leave = & bfa_ioc_ct_sync_leave, .ioc_sync_ack = & bfa_ioc_ct_sync_ack, .ioc_sync_complete = & bfa_ioc_ct_sync_complete, .ioc_lpu_read_stat = & bfa_ioc_ct2_lpu_read_stat, .ioc_set_fwstate = & bfa_ioc_ct_set_cur_ioc_fwstate, .ioc_get_fwstate = & bfa_ioc_ct_get_cur_ioc_fwstate, .ioc_set_alt_fwstate = & bfa_ioc_ct_set_alt_ioc_fwstate, .ioc_get_alt_fwstate = & bfa_ioc_ct_get_alt_ioc_fwstate};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
void bfa_nw_ioc_set_ct_hwif(struct bfa_ioc *ioc)
{
  
#line 108 
  ioc->ioc_hwif = & nw_hwif_ct;
  
#line 109 
  return;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
void bfa_nw_ioc_set_ct2_hwif(struct bfa_ioc *ioc)
{
  
#line 114 
  ioc->ioc_hwif = & nw_hwif_ct2;
  
#line 115 
  return;
}


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static bool bfa_ioc_ct_firmware_lock(struct bfa_ioc *ioc)
{
  bool __retres;
  enum bfi_ioc_state ioc_fwstate;
  u32 usecnt;
  struct bfi_ioc_image_hdr fwhdr;
  u32 tmp;
  unsigned int tmp_0;
  int tmp_2;
  bool tmp_1;
  
#line 128 
  tmp = bfa_cb_image_get_size(ioc->asic_gen);
  
#line 128 
  if (tmp <= 16383U) {
    
#line 130 
    __retres = (_Bool)1;
    
#line 130 
    goto return_label;
  }
  else ;
  
#line 132 
  bfa_nw_ioc_sem_get(ioc->ioc_regs.ioc_usage_sem_reg);
  
#line 133 
  usecnt = readl((void const volatile *)ioc->ioc_regs.ioc_usage_reg);
  
#line 138 
  if (usecnt == 0U) {
    
#line 139 
    writel(1U,(void volatile *)ioc->ioc_regs.ioc_usage_reg);
    
#line 140 
    bfa_nw_ioc_sem_release(ioc->ioc_regs.ioc_usage_sem_reg);
    
#line 141 
    writel(0U,(void volatile *)ioc->ioc_regs.ioc_fail_sync);
    
#line 142 
    __retres = (_Bool)1;
    
#line 142 
    goto return_label;
  }
  else ;
  
#line 145 
  tmp_0 = readl((void const volatile *)ioc->ioc_regs.ioc_fwstate);
  
#line 145 
  ioc_fwstate = (enum bfi_ioc_state)tmp_0;
  
#line 150 
  if ((long)(ioc_fwstate == (unsigned int)BFI_IOC_UNINIT) != 0L) {
    
#line 152 
    ldv_inline_asm();
    
#line 150 
    ;
  }
  else ;
  
#line 155 
  bfa_nw_ioc_fwver_get(ioc,& fwhdr);
  
#line 156 
  tmp_1 = bfa_nw_ioc_fwver_cmp(ioc,& fwhdr);
  
#line 156 
  if (tmp_1) 
#line 156 
             tmp_2 = 0; else 
#line 156 
                             tmp_2 = 1;
  
#line 156 
  if (tmp_2) {
    
#line 157 
    bfa_nw_ioc_sem_release(ioc->ioc_regs.ioc_usage_sem_reg);
    
#line 158 
    __retres = (_Bool)0;
    
#line 158 
    goto return_label;
  }
  else ;
  
#line 164 
  usecnt += 1U;
  
#line 165 
  writel(usecnt,(void volatile *)ioc->ioc_regs.ioc_usage_reg);
  
#line 166 
  bfa_nw_ioc_sem_release(ioc->ioc_regs.ioc_usage_sem_reg);
  
#line 167 
  __retres = (_Bool)1;
  return_label: 
#line 167 
                return __retres;
}


#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_firmware_unlock(struct bfa_ioc *ioc)
{
  u32 usecnt;
  u32 tmp;
  
#line 178 
  tmp = bfa_cb_image_get_size(ioc->asic_gen);
  
#line 178 
  if (tmp <= 16383U) 
#line 180 
                     goto return_label; else ;
  
#line 185 
  bfa_nw_ioc_sem_get(ioc->ioc_regs.ioc_usage_sem_reg);
  
#line 186 
  usecnt = readl((void const volatile *)ioc->ioc_regs.ioc_usage_reg);
  
#line 187 
  if ((long)(usecnt == 0U) != 0L) {
    
#line 189 
    ldv_inline_asm();
    
#line 187 
    ;
  }
  else ;
  
#line 189 
  usecnt -= 1U;
  
#line 190 
  writel(usecnt,(void volatile *)ioc->ioc_regs.ioc_usage_reg);
  
#line 192 
  bfa_nw_ioc_sem_release(ioc->ioc_regs.ioc_usage_sem_reg);
  return_label: 
#line 193 
                return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_notify_fail(struct bfa_ioc *ioc)
{
  
#line 199 
  writel(1U,(void volatile *)ioc->ioc_regs.ll_halt);
  
#line 200 
  writel(1U,(void volatile *)ioc->ioc_regs.alt_ll_halt);
  
#line 202 
  readl((void const volatile *)ioc->ioc_regs.ll_halt);
  
#line 203 
  readl((void const volatile *)ioc->ioc_regs.alt_ll_halt);
  
#line 204 
  return;
}


#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static struct __anonstruct_ct_fnreg_3275 const ct_fnreg[4U] = {{.hfn_mbox = 102912U, .lpu_mbox = 103040U, .hfn_pgn = 81928U}, {.hfn_mbox = 103008U, .lpu_mbox = 103136U, .hfn_pgn = 82184U}, {.hfn_mbox = 103424U, .lpu_mbox = 103552U, .hfn_pgn = 82696U}, {.hfn_mbox = 103520U, .lpu_mbox = 103648U, .hfn_pgn = 82952U}};

#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static struct __anonstruct_ct_p0reg_3276 const ct_p0reg[4U] = {{.hfn = 102400U, .lpu = 102408U}, {.hfn = 102416U, .lpu = 102424U}, {.hfn = 102736U, .lpu = 102744U}, {.hfn = 102752U, .lpu = 102760U}};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static struct __anonstruct_ct_p1reg_3277 const ct_p1reg[4U] = {{.hfn = 102404U, .lpu = 102412U}, {.hfn = 102420U, .lpu = 102428U}, {.hfn = 102740U, .lpu = 102748U}, {.hfn = 102756U, .lpu = 102764U}};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static struct __anonstruct_ct2_reg_3278 const ct2_reg[2U] = {{.hfn_mbox = 196608U, .lpu_mbox = 196672U, .hfn_pgn = 196888U, .hfn = 196736U, .lpu = 196744U, .lpu_read = 196752U}, {.hfn_mbox = 196640U, .lpu_mbox = 196704U, .hfn_pgn = 196888U, .hfn = 196740U, .lpu = 196748U, .lpu_read = 196756U}};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_reg_init(struct bfa_ioc *ioc)
{
  void *rb;
  
#line 260 
  int pcifn = (int)ioc->pcidev.pci_func;
  
#line 262 
  rb = ioc->pcidev.pci_bar_kva;
  
#line 264 
  ioc->ioc_regs.hfn_mbox = rb + ct_fnreg[pcifn].hfn_mbox;
  
#line 265 
  ioc->ioc_regs.lpu_mbox = rb + ct_fnreg[pcifn].lpu_mbox;
  
#line 266 
  ioc->ioc_regs.host_page_num_fn = rb + ct_fnreg[pcifn].hfn_pgn;
  
#line 268 
  if ((unsigned int)ioc->port_id == 0U) {
    
#line 269 
    ioc->ioc_regs.heartbeat = rb + 82496U;
    
#line 270 
    ioc->ioc_regs.ioc_fwstate = rb + 82500U;
    
#line 271 
    ioc->ioc_regs.alt_ioc_fwstate = rb + 82508U;
    
#line 272 
    ioc->ioc_regs.hfn_mbox_cmd = rb + ct_p0reg[pcifn].hfn;
    
#line 273 
    ioc->ioc_regs.lpu_mbox_cmd = rb + ct_p0reg[pcifn].lpu;
    
#line 274 
    ioc->ioc_regs.ll_halt = rb + 102828U;
    
#line 275 
    ioc->ioc_regs.alt_ll_halt = rb + 102844U;
  }
  else {
    
#line 277 
    ioc->ioc_regs.heartbeat = rb + 82504U;
    
#line 278 
    ioc->ioc_regs.ioc_fwstate = rb + 82508U;
    
#line 279 
    ioc->ioc_regs.alt_ioc_fwstate = rb + 82500U;
    
#line 280 
    ioc->ioc_regs.hfn_mbox_cmd = rb + ct_p1reg[pcifn].hfn;
    
#line 281 
    ioc->ioc_regs.lpu_mbox_cmd = rb + ct_p1reg[pcifn].lpu;
    
#line 282 
    ioc->ioc_regs.ll_halt = rb + 102844U;
    
#line 283 
    ioc->ioc_regs.alt_ll_halt = rb + 102828U;
  }
  
#line 289 
  ioc->ioc_regs.pss_ctl_reg = rb + 100352U;
  
#line 290 
  ioc->ioc_regs.pss_err_status_reg = rb + 100368U;
  
#line 291 
  ioc->ioc_regs.app_pll_fast_ctl_reg = rb + 82436U;
  
#line 292 
  ioc->ioc_regs.app_pll_slow_ctl_reg = rb + 82440U;
  
#line 297 
  ioc->ioc_regs.ioc_sem_reg = rb + 82480U;
  
#line 298 
  ioc->ioc_regs.ioc_usage_sem_reg = rb + 82484U;
  
#line 299 
  ioc->ioc_regs.ioc_init_sem_reg = rb + 82488U;
  
#line 300 
  ioc->ioc_regs.ioc_usage_reg = rb + 83488U;
  
#line 301 
  ioc->ioc_regs.ioc_fail_sync = rb + 83492U;
  
#line 306 
  ioc->ioc_regs.smem_page_start = rb + 32768U;
  
#line 307 
  ioc->ioc_regs.smem_pg0 = 384U;
  
#line 312 
  ioc->ioc_regs.err_set = rb + 100376U;
  
#line 313 
  return;
}


#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_reg_init(struct bfa_ioc *ioc)
{
  void *rb;
  
#line 319 
  int port = (int)ioc->port_id;
  
#line 321 
  rb = ioc->pcidev.pci_bar_kva;
  
#line 323 
  ioc->ioc_regs.hfn_mbox = rb + ct2_reg[port].hfn_mbox;
  
#line 324 
  ioc->ioc_regs.lpu_mbox = rb + ct2_reg[port].lpu_mbox;
  
#line 325 
  ioc->ioc_regs.host_page_num_fn = rb + ct2_reg[port].hfn_pgn;
  
#line 326 
  ioc->ioc_regs.hfn_mbox_cmd = rb + ct2_reg[port].hfn;
  
#line 327 
  ioc->ioc_regs.lpu_mbox_cmd = rb + ct2_reg[port].lpu;
  
#line 328 
  ioc->ioc_regs.lpu_read_stat = rb + ct2_reg[port].lpu_read;
  
#line 330 
  if (port == 0) {
    
#line 331 
    ioc->ioc_regs.heartbeat = rb + 84144U;
    
#line 332 
    ioc->ioc_regs.ioc_fwstate = rb + 84148U;
    
#line 333 
    ioc->ioc_regs.alt_ioc_fwstate = rb + 84156U;
    
#line 334 
    ioc->ioc_regs.ll_halt = rb + 102828U;
    
#line 335 
    ioc->ioc_regs.alt_ll_halt = rb + 102844U;
  }
  else {
    
#line 337 
    ioc->ioc_regs.heartbeat = rb + 84152U;
    
#line 338 
    ioc->ioc_regs.ioc_fwstate = rb + 84156U;
    
#line 339 
    ioc->ioc_regs.alt_ioc_fwstate = rb + 84148U;
    
#line 340 
    ioc->ioc_regs.ll_halt = rb + 102844U;
    
#line 341 
    ioc->ioc_regs.alt_ll_halt = rb + 102828U;
  }
  
#line 347 
  ioc->ioc_regs.pss_ctl_reg = rb + 100352U;
  
#line 348 
  ioc->ioc_regs.pss_err_status_reg = rb + 100368U;
  
#line 349 
  ioc->ioc_regs.app_pll_fast_ctl_reg = rb + 83976U;
  
#line 350 
  ioc->ioc_regs.app_pll_slow_ctl_reg = rb + 83980U;
  
#line 355 
  ioc->ioc_regs.ioc_sem_reg = rb + 84208U;
  
#line 356 
  ioc->ioc_regs.ioc_usage_sem_reg = rb + 84212U;
  
#line 357 
  ioc->ioc_regs.ioc_init_sem_reg = rb + 84216U;
  
#line 358 
  ioc->ioc_regs.ioc_usage_reg = rb + 84160U;
  
#line 359 
  ioc->ioc_regs.ioc_fail_sync = rb + 84164U;
  
#line 364 
  ioc->ioc_regs.smem_page_start = rb + 32768U;
  
#line 365 
  ioc->ioc_regs.smem_pg0 = 384U;
  
#line 370 
  ioc->ioc_regs.err_set = rb + 100376U;
  
#line 371 
  return;
}


#line 377  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_map_port(struct bfa_ioc *ioc)
{
  u32 r32;
  
#line 379 
  void *rb = ioc->pcidev.pci_bar_kva;
  
#line 385 
  r32 = readl((void const volatile *)(rb + 83460U));
  
#line 386 
  r32 >>= (int)ioc->pcidev.pci_func * 8;
  
#line 387 
  ioc->port_id = (unsigned char)((unsigned int)((unsigned char)(r32 >> 4)) & 3U);
  
#line 388 
  return;
}


#line 392  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_map_port(struct bfa_ioc *ioc)
{
  u32 r32;
  
#line 394 
  void *rb = ioc->pcidev.pci_bar_kva;
  
#line 397 
  r32 = readl((void const volatile *)(rb + 196872U));
  
#line 398 
  ioc->port_id = (unsigned char)((unsigned int)((unsigned char)(r32 >> 17)) & 3U);
  
#line 399 
  return;
}


#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_isr_mode_set(struct bfa_ioc *ioc, bool msix)
{
  u32 r32;
  u32 mode;
  
#line 405 
  void *rb = ioc->pcidev.pci_bar_kva;
  
#line 408 
  r32 = readl((void const volatile *)(rb + 83460U));
  
#line 410 
  mode = (r32 >> (int)ioc->pcidev.pci_func * 8) & 7U;
  
#line 416 
  if ((! msix && mode != 0U) || ((int)msix != 0 && mode == 0U)) 
#line 417 
                                                                goto return_label; else ;
  
#line 419 
  if ((int)msix != 0) 
#line 420 
                      mode = 0U; else 
#line 422 
                                      mode = 1U;
  
#line 424 
  r32 = (unsigned int)(~ (7 << (int)ioc->pcidev.pci_func * 8)) & r32;
  
#line 425 
  r32 = (mode << (int)ioc->pcidev.pci_func * 8) | r32;
  
#line 427 
  writel(r32,(void volatile *)(rb + 83460U));
  return_label: 
#line 428 
                return;
}


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static bool bfa_ioc_ct2_lpu_read_stat(struct bfa_ioc *ioc)
{
  bool __retres;
  u32 r32;
  
#line 435 
  r32 = readl((void const volatile *)ioc->ioc_regs.lpu_read_stat);
  
#line 436 
  if (r32 != 0U) {
    
#line 437 
    writel(1U,(void volatile *)ioc->ioc_regs.lpu_read_stat);
    
#line 438 
    __retres = (_Bool)1;
    
#line 438 
    goto return_label;
  }
  else ;
  
#line 441 
  __retres = (_Bool)0;
  return_label: 
#line 441 
                return __retres;
}


#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
void bfa_nw_ioc_ct2_poweron(struct bfa_ioc *ioc)
{
  u32 r32;
  
#line 455 
  void *rb = ioc->pcidev.pci_bar_kva;
  
#line 458 
  r32 = readl((void const volatile *)(rb + 196924U));
  
#line 459 
  if ((r32 & 4192256U) != 0U) {
    
#line 460 
    writel(r32 & 2047U,(void volatile *)(rb + 196920U));
    
#line 462 
    goto return_label;
  }
  else ;
  
#line 465 
  writel((unsigned int)((int)ioc->pcidev.pci_func * 64 | 129024),(void volatile *)(rb + 196924U));
  
#line 468 
  writel((unsigned int)((int)ioc->pcidev.pci_func * 64),(void volatile *)(rb + 196920U));
  return_label: 
#line 470 
                return;
}


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_ownership_reset(struct bfa_ioc *ioc)
{
  
#line 476 
  bfa_nw_ioc_sem_get(ioc->ioc_regs.ioc_usage_sem_reg);
  
#line 477 
  writel(0U,(void volatile *)ioc->ioc_regs.ioc_usage_reg);
  
#line 478 
  bfa_nw_ioc_sem_release(ioc->ioc_regs.ioc_usage_sem_reg);
  
#line 485 
  readl((void const volatile *)ioc->ioc_regs.ioc_sem_reg);
  
#line 486 
  bfa_nw_ioc_hw_sem_release(ioc);
  
#line 487 
  return;
}


#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static bool bfa_ioc_ct_sync_start(struct bfa_ioc *ioc)
{
  bool __retres;
  bool tmp_0;
  
#line 493 
  u32 r32 = readl((void const volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 494 
  u32 sync_reqd = r32 >> 16;
  
#line 503 
  if ((((unsigned long)sync_reqd >> (int)ioc->pcidev.pci_func) & 1UL) != 0UL) {
    
#line 504 
    writel(0U,(void volatile *)ioc->ioc_regs.ioc_fail_sync);
    
#line 505 
    writel(1U,(void volatile *)ioc->ioc_regs.ioc_usage_reg);
    
#line 506 
    writel(0U,(void volatile *)ioc->ioc_regs.ioc_fwstate);
    
#line 507 
    writel(0U,(void volatile *)ioc->ioc_regs.alt_ioc_fwstate);
    
#line 508 
    __retres = (_Bool)1;
    
#line 508 
    goto return_label;
  }
  else ;
  
#line 511 
  tmp_0 = bfa_ioc_ct_sync_complete(ioc);
  
#line 511 
  __retres = tmp_0;
  return_label: 
#line 511 
                return __retres;
}


#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_sync_join(struct bfa_ioc *ioc)
{
  
#line 517 
  u32 r32 = readl((void const volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 518 
  u32 sync_pos = (unsigned int)(1UL << (int)ioc->pcidev.pci_func) << 16U;
  
#line 520 
  writel(r32 | sync_pos,(void volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 521 
  return;
}


#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_sync_leave(struct bfa_ioc *ioc)
{
  
#line 526 
  u32 r32 = readl((void const volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 527 
  u32 sync_msk = ((unsigned int)(1UL << (int)ioc->pcidev.pci_func) << 16U) | (unsigned int)(1UL << (int)ioc->pcidev.pci_func);
  
#line 530 
  writel(~ sync_msk & r32,(void volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 531 
  return;
}


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_sync_ack(struct bfa_ioc *ioc)
{
  
#line 536 
  u32 r32 = readl((void const volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 538 
  writel((unsigned int)(1UL << (int)ioc->pcidev.pci_func) | r32,(void volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 539 
  return;
}


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static bool bfa_ioc_ct_sync_complete(struct bfa_ioc *ioc)
{
  bool __retres;
  u32 tmp_ackd;
  
#line 544 
  u32 r32 = readl((void const volatile *)ioc->ioc_regs.ioc_fail_sync);
  
#line 545 
  u32 sync_reqd = r32 >> 16;
  
#line 546 
  u32 sync_ackd = r32 & 65535U;
  
#line 549 
  if (sync_ackd == 0U) {
    
#line 550 
    __retres = (_Bool)1;
    
#line 550 
    goto return_label;
  }
  else ;
  
#line 558 
  tmp_ackd = sync_ackd;
  
#line 559 
  if ((((unsigned long)sync_reqd >> (int)ioc->pcidev.pci_func) & 1UL) != 0UL && (((unsigned long)sync_ackd >> (int)ioc->pcidev.pci_func) & 1UL) == 0UL) 
    
#line 561 
    sync_ackd = (unsigned int)(1UL << (int)ioc->pcidev.pci_func) | sync_ackd; else ;
  
#line 563 
  if (sync_reqd == sync_ackd) {
    
#line 564 
    writel(r32 & 4294901760U,(void volatile *)ioc->ioc_regs.ioc_fail_sync);
    
#line 566 
    writel(8U,(void volatile *)ioc->ioc_regs.ioc_fwstate);
    
#line 567 
    writel(8U,(void volatile *)ioc->ioc_regs.alt_ioc_fwstate);
    
#line 568 
    __retres = (_Bool)1;
    
#line 568 
    goto return_label;
  }
  else ;
  
#line 576 
  if (tmp_ackd != sync_ackd) 
#line 577 
                             writel(r32 | sync_ackd,(void volatile *)ioc->ioc_regs.ioc_fail_sync); else ;
  
#line 579 
  __retres = (_Bool)0;
  return_label: 
#line 579 
                return __retres;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_set_cur_ioc_fwstate(struct bfa_ioc *ioc, enum bfi_ioc_state fwstate)
{
  
#line 586 
  writel((unsigned int)fwstate,(void volatile *)ioc->ioc_regs.ioc_fwstate);
  
#line 587 
  return;
}


#line 590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static enum bfi_ioc_state bfa_ioc_ct_get_cur_ioc_fwstate(struct bfa_ioc *ioc)
{
  enum bfi_ioc_state __retres;
  unsigned int tmp;
  
#line 592 
  tmp = readl((void const volatile *)ioc->ioc_regs.ioc_fwstate);
  
#line 592 
  __retres = (enum bfi_ioc_state)tmp;
  
#line 592 
  return __retres;
}


#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct_set_alt_ioc_fwstate(struct bfa_ioc *ioc, enum bfi_ioc_state fwstate)
{
  
#line 599 
  writel((unsigned int)fwstate,(void volatile *)ioc->ioc_regs.alt_ioc_fwstate);
  
#line 600 
  return;
}


#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static enum bfi_ioc_state bfa_ioc_ct_get_alt_ioc_fwstate(struct bfa_ioc *ioc)
{
  enum bfi_ioc_state __retres;
  unsigned int tmp;
  
#line 605 
  tmp = readl((void const volatile *)ioc->ioc_regs.alt_ioc_fwstate);
  
#line 605 
  __retres = (enum bfi_ioc_state)tmp;
  
#line 605 
  return __retres;
}


#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static enum bfa_status bfa_ioc_ct_pll_init(void *rb, enum bfi_asic_mode asic_mode)
{
  enum bfa_status __retres;
  u32 pll_sclk;
  u32 pll_fclk;
  u32 r32;
  
#line 612 
  bool fcmode = (_Bool)(asic_mode == (unsigned int)BFI_ASIC_MODE_FC);
  
#line 614 
  pll_sclk = 29466U;
  
#line 618 
  pll_fclk = 29466U;
  
#line 623 
  if ((int)fcmode != 0) {
    
#line 624 
    writel(0U,(void volatile *)(rb + 83468U));
    
#line 625 
    writel(13U,(void volatile *)(rb + 82568U));
  }
  else {
    
#line 630 
    writel(1U,(void volatile *)(rb + 83468U));
    
#line 631 
    writel(2U,(void volatile *)(rb + 82568U));
  }
  
#line 634 
  writel(0U,(void volatile *)(rb + 82500U));
  
#line 635 
  writel(0U,(void volatile *)(rb + 82508U));
  
#line 636 
  writel(4294967295U,(void volatile *)(rb + 81924U));
  
#line 637 
  writel(4294967295U,(void volatile *)(rb + 82180U));
  
#line 638 
  writel(4294967295U,(void volatile *)(rb + 81920U));
  
#line 639 
  writel(4294967295U,(void volatile *)(rb + 82176U));
  
#line 640 
  writel(4294967295U,(void volatile *)(rb + 81924U));
  
#line 641 
  writel(4294967295U,(void volatile *)(rb + 82180U));
  
#line 642 
  writel(pll_sclk | 65536U,(void volatile *)(rb + 82440U));
  
#line 645 
  writel(pll_fclk | 65536U,(void volatile *)(rb + 82436U));
  
#line 648 
  writel(pll_sclk | 65537U,(void volatile *)(rb + 82440U));
  
#line 651 
  writel(pll_fclk | 65537U,(void volatile *)(rb + 82436U));
  
#line 654 
  readl((void const volatile *)(rb + 81924U));
  
#line 655 
  __const_udelay(8590000UL);
  
#line 656 
  writel(4294967295U,(void volatile *)(rb + 81920U));
  
#line 657 
  writel(4294967295U,(void volatile *)(rb + 82176U));
  
#line 658 
  writel(pll_sclk | 1U,(void volatile *)(rb + 82440U));
  
#line 661 
  writel(pll_fclk | 1U,(void volatile *)(rb + 82436U));
  
#line 665 
  if (! fcmode) {
    
#line 666 
    writel(1U,(void volatile *)(rb + 145436U));
    
#line 667 
    writel(1U,(void volatile *)(rb + 146460U));
  }
  else ;
  
#line 669 
  r32 = readl((void const volatile *)(rb + 100352U));
  
#line 670 
  r32 &= 4294966783U;
  
#line 671 
  writel(r32,(void volatile *)(rb + 100352U));
  
#line 672 
  __const_udelay(4295000UL);
  
#line 673 
  if (! fcmode) {
    
#line 674 
    writel(0U,(void volatile *)(rb + 145436U));
    
#line 675 
    writel(0U,(void volatile *)(rb + 146460U));
  }
  else ;
  
#line 678 
  writel(4U,(void volatile *)(rb + 82464U));
  
#line 679 
  __const_udelay(4295000UL);
  
#line 680 
  r32 = readl((void const volatile *)(rb + 82468U));
  
#line 681 
  writel(0U,(void volatile *)(rb + 82464U));
  
#line 682 
  __retres = BFA_STATUS_OK;
  
#line 682 
  return __retres;
}


#line 686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_sclk_init(void *rb)
{
  u32 r32;
  
#line 693 
  r32 = readl((void const volatile *)(rb + 83980U));
  
#line 694 
  r32 &= 4294967292U;
  
#line 695 
  r32 |= 65548U;
  
#line 697 
  writel(r32,(void volatile *)(rb + 83980U));
  
#line 703 
  r32 = readl((void const volatile *)(rb + 83980U));
  
#line 704 
  r32 &= 2684354559U;
  
#line 705 
  writel(r32,(void volatile *)(rb + 83980U));
  
#line 710 
  r32 = readl((void const volatile *)(rb + 84132U));
  
#line 711 
  writel(r32 | 16384U,(void volatile *)(rb + 84132U));
  
#line 714 
  r32 = readl((void const volatile *)(rb + 83972U));
  
#line 715 
  writel(r32 | 16U,(void volatile *)(rb + 83972U));
  
#line 721 
  r32 = readl((void const volatile *)(rb + 83980U));
  
#line 722 
  r32 &= 3758096384U;
  
#line 724 
  writel(r32 | 274821915U,(void volatile *)(rb + 83980U));
  
#line 729 
  __const_udelay(4295000UL);
  
#line 731 
  return;
}


#line 738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_lclk_init(void *rb)
{
  u32 r32;
  
#line 745 
  r32 = readl((void const volatile *)(rb + 83976U));
  
#line 746 
  r32 &= 4294967292U;
  
#line 747 
  r32 |= 65548U;
  
#line 749 
  writel(r32,(void volatile *)(rb + 83976U));
  
#line 754 
  r32 = readl((void const volatile *)(rb + 84132U));
  
#line 755 
  writel(r32,(void volatile *)(rb + 84132U));
  
#line 760 
  r32 = readl((void const volatile *)(rb + 83976U));
  
#line 761 
  writel(r32,(void volatile *)(rb + 83976U));
  
#line 766 
  r32 = readl((void const volatile *)(rb + 83976U));
  
#line 767 
  r32 &= 3221225472U;
  
#line 768 
  r32 |= 549548827U;
  
#line 769 
  writel(r32,(void volatile *)(rb + 83976U));
  
#line 774 
  __const_udelay(4295000UL);
  
#line 776 
  return;
}


#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_mem_init(void *rb)
{
  u32 r32;
  
#line 782 
  r32 = readl((void const volatile *)(rb + 100352U));
  
#line 783 
  r32 &= 4294966783U;
  
#line 784 
  writel(r32,(void volatile *)(rb + 100352U));
  
#line 785 
  __const_udelay(4295000UL);
  
#line 787 
  writel(4U,(void volatile *)(rb + 83996U));
  
#line 788 
  __const_udelay(4295000UL);
  
#line 789 
  writel(0U,(void volatile *)(rb + 83996U));
  
#line 790 
  return;
}


#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_mac_reset(void *rb)
{
  u32 volatile r32;
  
#line 797 
  bfa_ioc_ct2_sclk_init(rb);
  
#line 798 
  bfa_ioc_ct2_lclk_init(rb);
  
#line 803 
  r32 = readl((void const volatile *)(rb + 83980U));
  
#line 804 
  writel(r32 & 4294901759U,(void volatile *)(rb + 83980U));
  
#line 810 
  r32 = readl((void const volatile *)(rb + 83976U));
  
#line 811 
  writel(r32 & 4294901759U,(void volatile *)(rb + 83976U));
  
#line 815 
  writel(24U,(void volatile *)(rb + 159952U));
  
#line 817 
  writel(24U,(void volatile *)(rb + 159956U));
  
#line 819 
  return;
}


#line 826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static bool bfa_ioc_ct2_nfc_halted(void *rb)
{
  bool __retres;
  u32 volatile r32;
  
#line 830 
  r32 = readl((void const volatile *)(rb + 160804U));
  
#line 831 
  if ((r32 & 4096U) != 0U) {
    
#line 832 
    __retres = (_Bool)1;
    
#line 832 
    goto return_label;
  }
  else ;
  
#line 834 
  __retres = (_Bool)0;
  return_label: 
#line 834 
                return __retres;
}


#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static void bfa_ioc_ct2_nfc_resume(void *rb)
{
  u32 volatile r32;
  int i;
  
#line 843 
  writel(2U,(void volatile *)(rb + 160800U));
  
#line 844 
  i = 0;
  
#line 844 
  goto ldv_46940;
  ldv_46939: 
#line 845 
  ;
  
#line 845 
  r32 = readl((void const volatile *)(rb + 160804U));
  
#line 846 
  if ((r32 & 4096U) == 0U) 
#line 847 
                           goto return_label; else ;
  
#line 848 
  __const_udelay(4295000UL);
  
#line 844 
  i += 1;
  ldv_46940: 
#line 845 
  ;
  
#line 844 
  if (i <= 999) 
#line 846 
                goto ldv_46939; else 
#line 849 
                                     goto ldv_46941;
  ldv_46941: 
#line 850 
  ;
  
#line 852 
  ldv_inline_asm();
  
#line 850 
  ;
  return_label: 
#line 852 
                return;
}


#line 854  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bfa_ioc_ct.c"
static enum bfa_status bfa_ioc_ct2_pll_init(void *rb, enum bfi_asic_mode asic_mode)
{
  enum bfa_status __retres;
  u32 volatile wgn;
  u32 volatile r32;
  u32 nfc_ver;
  u32 i;
  
#line 859 
  wgn = readl((void const volatile *)(rb + 84368U));
  
#line 861 
  nfc_ver = readl((void const volatile *)(rb + 161372U));
  
#line 863 
  if (wgn == 3072U && nfc_ver > 322U) {
    bool tmp;
    
#line 865 
    tmp = bfa_ioc_ct2_nfc_halted(rb);
    
#line 865 
    if ((int)tmp != 0) 
#line 866 
                       bfa_ioc_ct2_nfc_resume(rb); else ;
    
#line 867 
    writel(65536U,(void volatile *)(rb + 159880U));
    
#line 870 
    i = 0U;
    
#line 870 
    goto ldv_46952;
    ldv_46951: 
#line 871 
    ;
    
#line 871 
    r32 = readl((void const volatile *)(rb + 83976U));
    
#line 872 
    if ((r32 & 65536U) != 0U) 
#line 873 
                              goto ldv_46950; else ;
    
#line 870 
    i += 1U;
    ldv_46952: 
#line 871 
    ;
    
#line 870 
    if (i <= 999999U) 
#line 872 
                      goto ldv_46951; else 
#line 875 
                                           goto ldv_46950;
    ldv_46950: 
#line 876 
    ;
    
#line 875 
    if ((long)((r32 & 65536U) == 0U) != 0L) {
      
#line 877 
      ldv_inline_asm();
      
#line 875 
      ;
    }
    else ;
    
#line 877 
    i = 0U;
    
#line 877 
    goto ldv_46955;
    ldv_46954: 
#line 878 
    ;
    
#line 878 
    r32 = readl((void const volatile *)(rb + 83976U));
    
#line 879 
    if ((r32 & 65536U) == 0U) 
#line 880 
                              goto ldv_46953; else ;
    
#line 877 
    i += 1U;
    ldv_46955: 
#line 878 
    ;
    
#line 877 
    if (i <= 999999U) 
#line 879 
                      goto ldv_46954; else 
#line 882 
                                           goto ldv_46953;
    ldv_46953: 
#line 883 
    ;
    
#line 882 
    if ((long)((r32 & 65536U) != 0U) != 0L) {
      
#line 884 
      ldv_inline_asm();
      
#line 882 
      ;
    }
    else ;
    
#line 883 
    __const_udelay(4295000UL);
    
#line 885 
    r32 = readl((void const volatile *)(rb + 159872U));
    
#line 886 
    if ((long)((r32 & 65536U) != 0U) != 0L) {
      
#line 888 
      ldv_inline_asm();
      
#line 886 
      ;
    }
    else ;
  }
  else {
    
#line 888 
    writel(2U,(void volatile *)(rb + 160804U));
    
#line 889 
    i = 0U;
    
#line 889 
    goto ldv_46958;
    ldv_46957: 
#line 890 
    ;
    
#line 890 
    r32 = readl((void const volatile *)(rb + 160804U));
    
#line 891 
    if ((r32 & 4096U) != 0U) 
#line 892 
                             goto ldv_46956; else ;
    
#line 893 
    __const_udelay(4295000UL);
    
#line 889 
    i += 1U;
    ldv_46958: 
#line 890 
    ;
    
#line 889 
    if (i <= 999U) 
#line 891 
                   goto ldv_46957; else 
#line 894 
                                        goto ldv_46956;
    ldv_46956: 
#line 895 
    ;
    
#line 896 
    bfa_ioc_ct2_mac_reset(rb);
    
#line 897 
    bfa_ioc_ct2_sclk_init(rb);
    
#line 898 
    bfa_ioc_ct2_lclk_init(rb);
    
#line 901 
    r32 = readl((void const volatile *)(rb + 83980U));
    
#line 902 
    writel(r32 & 4294901759U,(void volatile *)(rb + 83980U));
    
#line 904 
    r32 = readl((void const volatile *)(rb + 83976U));
    
#line 905 
    writel(r32 & 4294901759U,(void volatile *)(rb + 83976U));
  }
  
#line 910 
  if (wgn == 1536U) {
    
#line 911 
    r32 = readl((void const volatile *)(rb + 100544U));
    
#line 912 
    writel(r32 & 4294967294U,(void volatile *)(rb + 100544U));
    
#line 913 
    r32 = readl((void const volatile *)(rb + 100552U));
    
#line 914 
    writel(r32 | 1U,(void volatile *)(rb + 100552U));
  }
  else ;
  
#line 921 
  writel(1U,(void volatile *)(rb + 196760U));
  
#line 922 
  writel(1U,(void volatile *)(rb + 196764U));
  
#line 925 
  r32 = readl((void const volatile *)(rb + 83476U));
  
#line 926 
  if ((r32 & 1U) != 0U) {
    
#line 927 
    r32 = readl((void const volatile *)(rb + 196744U));
    
#line 928 
    if (r32 == 1U) {
      
#line 929 
      writel(1U,(void volatile *)(rb + 196744U));
      
#line 930 
      readl((void const volatile *)(rb + 196744U));
    }
    else ;
    
#line 932 
    r32 = readl((void const volatile *)(rb + 196748U));
    
#line 933 
    if (r32 == 1U) {
      
#line 934 
      writel(1U,(void volatile *)(rb + 196748U));
      
#line 935 
      readl((void const volatile *)(rb + 196748U));
    }
    else ;
  }
  else ;
  
#line 939 
  bfa_ioc_ct2_mem_init(rb);
  
#line 941 
  writel(0U,(void volatile *)(rb + 84148U));
  
#line 942 
  writel(0U,(void volatile *)(rb + 84156U));
  
#line 943 
  __retres = BFA_STATUS_OK;
  
#line 943 
  return __retres;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 63 
  tmp = fls_long(n + 18446744073709551615UL);
  
#line 63 
  __retres = 1UL << tmp;
  
#line 63 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add(struct list_head *new, struct list_head *head)
{
  
#line 63 
  __list_add(new,head,head->next);
  
#line 64 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_move_tail(struct list_head *list, struct list_head *head)
{
  
#line 168 
  __list_del_entry(list);
  
#line 169 
  list_add_tail(list,head);
  
#line 170 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna.h"
__inline static struct bna_mac *bna_mac_find(struct list_head *q, u8 const *addr)
{
  struct bna_mac *__retres;
  struct bna_mac *mac;
  struct bna_mac *tmp;
  bool tmp_0;
  struct bna_mac *tmp_1;
  {
    
#line 250 
    struct list_head const *__mptr = (struct list_head const *)q->next;
    
#line 250 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 250 
  mac = tmp;
  
#line 250 
  goto ldv_48141;
  ldv_48140: 
#line 251 
  ;
  
#line 251 
  tmp_0 = ether_addr_equal((u8 const *)(& mac->addr),addr);
  
#line 251 
  if ((int)tmp_0 != 0) {
    
#line 252 
    __retres = mac;
    
#line 252 
    goto return_label;
  }
  else ;
  {
    
#line 250 
    struct list_head const *__mptr_0 = (struct list_head const *)mac->qe.next;
    
#line 250 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 250 
  mac = tmp_1;
  ldv_48141: 
#line 252 
  ;
  
#line 250 
  if (& mac->qe != q) 
#line 252 
                      goto ldv_48140; else 
#line 255 
                                           goto ldv_48142;
  ldv_48142: 
#line 256 
  ;
  
#line 253 
  __retres = (struct bna_mac *)0;
  return_label: 
#line 253 
                return __retres;
}


#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_ib_coalescing_timeo_set(struct bna_ib *ib, u8 coalescing_timeo)
{
  
#line 26 
  ib->coalescing_timeo = coalescing_timeo;
  
#line 27 
  ib->door_bell.doorbell_ack = ((unsigned int)ib->coalescing_timeo << 16) | 2147483648U;
  
#line 28 
  return;
}


#line 47 
static int bna_rxf_cfg_apply(struct bna_rxf *rxf);


#line 48 
static void bna_rxf_cfg_reset(struct bna_rxf *rxf);


#line 49 
static int bna_rxf_ucast_cfg_apply(struct bna_rxf *rxf);


#line 50 
static int bna_rxf_promisc_cfg_apply(struct bna_rxf *rxf);


#line 51 
static int bna_rxf_allmulti_cfg_apply(struct bna_rxf *rxf);


#line 52 
static int bna_rxf_vlan_strip_cfg_apply(struct bna_rxf *rxf);


#line 53 
static int bna_rxf_ucast_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup);


#line 55 
static int bna_rxf_promisc_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup);


#line 57 
static int bna_rxf_allmulti_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup);


#line 60 
static void bna_rxf_sm_stopped(struct bna_rxf *rxf, enum bna_rxf_event event);


#line 60 
static void bna_rxf_sm_stopped_entry(struct bna_rxf *rxf);


#line 62 
static void bna_rxf_sm_cfg_wait(struct bna_rxf *rxf, enum bna_rxf_event event);


#line 62 
static void bna_rxf_sm_cfg_wait_entry(struct bna_rxf *rxf);


#line 64 
static void bna_rxf_sm_started(struct bna_rxf *rxf, enum bna_rxf_event event);


#line 64 
static void bna_rxf_sm_started_entry(struct bna_rxf *rxf);


#line 66 
static void bna_rxf_sm_last_resp_wait(struct bna_rxf *rxf, enum bna_rxf_event event);


#line 66 
static void bna_rxf_sm_last_resp_wait_entry(struct bna_rxf *rxf);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_stopped_entry(struct bna_rxf *rxf)
{
  
#line 72 
  if (rxf->stop_cbfn != (void (*)(struct bna_rx *))0) {
    void (*cbfn)(struct bna_rx *);
    struct bna_rx *cbarg;
    
#line 72 
    cbfn = rxf->stop_cbfn;
    
#line 72 
    cbarg = rxf->stop_cbarg;
    
#line 72 
    rxf->stop_cbfn = (void (*)(struct bna_rx *))0;
    
#line 72 
    rxf->stop_cbarg = (struct bna_rx *)0;
    
#line 72 
    (*cbfn)(cbarg);
  }
  else ;
  
#line 74 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_stopped(struct bna_rxf *rxf, enum bna_rxf_event event)
{
  
#line 78 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 79 
    ;
    
#line 80 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_cfg_wait);
    
#line 80 
    bna_rxf_sm_cfg_wait_entry(rxf);
    
#line 81 
    goto ldv_48427;
    case (unsigned int)2: 
#line 83 
    ;
    
#line 84 
    if (rxf->stop_cbfn != (void (*)(struct bna_rx *))0) {
      void (*cbfn)(struct bna_rx *);
      struct bna_rx *cbarg;
      
#line 84 
      cbfn = rxf->stop_cbfn;
      
#line 84 
      cbarg = rxf->stop_cbarg;
      
#line 84 
      rxf->stop_cbfn = (void (*)(struct bna_rx *))0;
      
#line 84 
      rxf->stop_cbarg = (struct bna_rx *)0;
      
#line 84 
      (*cbfn)(cbarg);
    }
    else ;
    
#line 85 
    goto ldv_48427;
    case (unsigned int)3: 
#line 87 
    ;
    
#line 89 
    goto ldv_48427;
    case (unsigned int)4: 
#line 91 
    ;
    
#line 92 
    if (rxf->cam_fltr_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) {
      void (*cbfn_0)(struct bnad *, struct bna_rx *);
      struct bnad *cbarg_0;
      
#line 92 
      cbfn_0 = rxf->cam_fltr_cbfn;
      
#line 92 
      cbarg_0 = rxf->cam_fltr_cbarg;
      
#line 92 
      rxf->cam_fltr_cbfn = (void (*)(struct bnad *, struct bna_rx *))0;
      
#line 92 
      rxf->cam_fltr_cbarg = (struct bnad *)0;
      
#line 92 
      (*cbfn_0)(cbarg_0,rxf->rx);
    }
    else ;
    
#line 93 
    goto ldv_48427;
    default: 
#line 95 
    ;
    
#line 96 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",96,(unsigned int)event);
  }
  ldv_48427: 
#line 98 
  ;
  
#line 99 
  return;
}


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_cfg_wait_entry(struct bna_rxf *rxf)
{
  int tmp;
  
#line 103 
  tmp = bna_rxf_cfg_apply(rxf);
  
#line 103 
  if (tmp == 0) {
    
#line 105 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_started);
    
#line 105 
    bna_rxf_sm_started_entry(rxf);
  }
  else ;
  
#line 107 
  return;
}


#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_cfg_wait(struct bna_rxf *rxf, enum bna_rxf_event event)
{
  
#line 112 
  switch ((unsigned int)event) {
    int tmp;
    case (unsigned int)2: 
#line 113 
    ;
    
#line 114 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_last_resp_wait);
    
#line 114 
    bna_rxf_sm_last_resp_wait_entry(rxf);
    
#line 115 
    goto ldv_48447;
    case (unsigned int)3: 
#line 117 
    ;
    
#line 118 
    bna_rxf_cfg_reset(rxf);
    
#line 119 
    if (rxf->start_cbfn != (void (*)(struct bna_rx *))0) {
      void (*cbfn)(struct bna_rx *);
      struct bna_rx *cbarg;
      
#line 119 
      cbfn = rxf->start_cbfn;
      
#line 119 
      cbarg = rxf->start_cbarg;
      
#line 119 
      rxf->start_cbfn = (void (*)(struct bna_rx *))0;
      
#line 119 
      rxf->start_cbarg = (struct bna_rx *)0;
      
#line 119 
      (*cbfn)(cbarg);
    }
    else ;
    
#line 120 
    if (rxf->cam_fltr_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) {
      void (*cbfn_0)(struct bnad *, struct bna_rx *);
      struct bnad *cbarg_0;
      
#line 120 
      cbfn_0 = rxf->cam_fltr_cbfn;
      
#line 120 
      cbarg_0 = rxf->cam_fltr_cbarg;
      
#line 120 
      rxf->cam_fltr_cbfn = (void (*)(struct bnad *, struct bna_rx *))0;
      
#line 120 
      rxf->cam_fltr_cbarg = (struct bnad *)0;
      
#line 120 
      (*cbfn_0)(cbarg_0,rxf->rx);
    }
    else ;
    
#line 121 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_stopped);
    
#line 121 
    bna_rxf_sm_stopped_entry(rxf);
    
#line 122 
    goto ldv_48447;
    case (unsigned int)4: 
#line 124 
    ;
    
#line 126 
    goto ldv_48447;
    case (unsigned int)7: 
#line 128 
    ;
    
#line 129 
    tmp = bna_rxf_cfg_apply(rxf);
    
#line 129 
    if (tmp == 0) {
      
#line 131 
      rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_started);
      
#line 131 
      bna_rxf_sm_started_entry(rxf);
    }
    else ;
    
#line 133 
    goto ldv_48447;
    default: 
#line 135 
    ;
    
#line 136 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",136,(unsigned int)event);
  }
  ldv_48447: 
#line 138 
  ;
  
#line 139 
  return;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_started_entry(struct bna_rxf *rxf)
{
  
#line 143 
  if (rxf->start_cbfn != (void (*)(struct bna_rx *))0) {
    void (*cbfn)(struct bna_rx *);
    struct bna_rx *cbarg;
    
#line 143 
    cbfn = rxf->start_cbfn;
    
#line 143 
    cbarg = rxf->start_cbarg;
    
#line 143 
    rxf->start_cbfn = (void (*)(struct bna_rx *))0;
    
#line 143 
    rxf->start_cbarg = (struct bna_rx *)0;
    
#line 143 
    (*cbfn)(cbarg);
  }
  else ;
  
#line 144 
  if (rxf->cam_fltr_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) {
    void (*cbfn_0)(struct bnad *, struct bna_rx *);
    struct bnad *cbarg_0;
    
#line 144 
    cbfn_0 = rxf->cam_fltr_cbfn;
    
#line 144 
    cbarg_0 = rxf->cam_fltr_cbarg;
    
#line 144 
    rxf->cam_fltr_cbfn = (void (*)(struct bnad *, struct bna_rx *))0;
    
#line 144 
    rxf->cam_fltr_cbarg = (struct bnad *)0;
    
#line 144 
    (*cbfn_0)(cbarg_0,rxf->rx);
  }
  else ;
  
#line 146 
  return;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_started(struct bna_rxf *rxf, enum bna_rxf_event event)
{
  
#line 150 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 151 
    ;
    case (unsigned int)3: 
#line 152 
    ;
    
#line 153 
    bna_rxf_cfg_reset(rxf);
    
#line 154 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_stopped);
    
#line 154 
    bna_rxf_sm_stopped_entry(rxf);
    
#line 155 
    goto ldv_48475;
    case (unsigned int)4: 
#line 157 
    ;
    
#line 158 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_cfg_wait);
    
#line 158 
    bna_rxf_sm_cfg_wait_entry(rxf);
    
#line 159 
    goto ldv_48475;
    default: 
#line 161 
    ;
    
#line 162 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",162,(unsigned int)event);
  }
  ldv_48475: 
#line 164 
  ;
  
#line 165 
  return;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_last_resp_wait_entry(struct bna_rxf *rxf)
{
  
#line 169 
  return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_sm_last_resp_wait(struct bna_rxf *rxf, enum bna_rxf_event event)
{
  
#line 174 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 175 
    ;
    case (unsigned int)7: 
#line 176 
    ;
    
#line 177 
    bna_rxf_cfg_reset(rxf);
    
#line 178 
    rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_stopped);
    
#line 178 
    bna_rxf_sm_stopped_entry(rxf);
    
#line 179 
    goto ldv_48487;
    default: 
#line 181 
    ;
    
#line 182 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",182,(unsigned int)event);
  }
  ldv_48487: 
#line 184 
  ;
  
#line 185 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_ucast_req(struct bna_rxf *rxf, struct bna_mac *mac, enum bfi_enet_h2i_msgs req_type)
{
  
#line 190 
  struct bfi_enet_ucast_req *req = & rxf->bfi_enet_cmd.ucast_req;
  
#line 192 
  req->mh.msg_class = (unsigned char)24U;
  
#line 192 
  req->mh.msg_id = (unsigned char)req_type;
  
#line 192 
  req->mh.msg_token = (unsigned short)0U;
  
#line 192 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 193 
  req->mh.num_entries = (unsigned short)256U;
  
#line 195 
  ether_addr_copy((u8 *)(& req->mac_addr),(u8 const *)(& mac->addr));
  
#line 196 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 196 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 196 
  rxf->msgq_cmd.msg_size = 16UL;
  
#line 196 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 198 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 199 
  return;
}


#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_mcast_add_req(struct bna_rxf *rxf, struct bna_mac *mac)
{
  
#line 204 
  struct bfi_enet_mcast_add_req *req = & rxf->bfi_enet_cmd.mcast_add_req;
  
#line 207 
  req->mh.msg_class = (unsigned char)24U;
  
#line 207 
  req->mh.msg_id = (unsigned char)12U;
  
#line 207 
  req->mh.msg_token = (unsigned short)0U;
  
#line 207 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 209 
  req->mh.num_entries = (unsigned short)256U;
  
#line 211 
  ether_addr_copy((u8 *)(& req->mac_addr),(u8 const *)(& mac->addr));
  
#line 212 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 212 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 212 
  rxf->msgq_cmd.msg_size = 16UL;
  
#line 212 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 214 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 215 
  return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_mcast_del_req(struct bna_rxf *rxf, u16 handle)
{
  
#line 220 
  struct bfi_enet_mcast_del_req *req = & rxf->bfi_enet_cmd.mcast_del_req;
  
#line 223 
  req->mh.msg_class = (unsigned char)24U;
  
#line 223 
  req->mh.msg_id = (unsigned char)13U;
  
#line 223 
  req->mh.msg_token = (unsigned short)0U;
  
#line 223 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 225 
  req->mh.num_entries = (unsigned short)256U;
  
#line 227 
  if (0 != 0) 
#line 227 
              req->handle = (unsigned short)(((int)handle << 8) | ((int)handle >> 8)); else 
                                                                    
#line 227 
                                                                    req->handle = __fswab16((unsigned short)((int)handle));
  
#line 228 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 228 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 228 
  rxf->msgq_cmd.msg_size = 12UL;
  
#line 228 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 230 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 231 
  return;
}


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_mcast_filter_req(struct bna_rxf *rxf, enum bna_status status)
{
  
#line 236 
  struct bfi_enet_enable_req *req = & rxf->bfi_enet_cmd.req;
  
#line 238 
  req->mh.msg_class = (unsigned char)24U;
  
#line 238 
  req->mh.msg_id = (unsigned char)14U;
  
#line 238 
  req->mh.msg_token = (unsigned short)0U;
  
#line 238 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 240 
  req->mh.num_entries = (unsigned short)256U;
  
#line 242 
  req->enable = (unsigned char)status;
  
#line 243 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 243 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 243 
  rxf->msgq_cmd.msg_size = 12UL;
  
#line 243 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 245 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 246 
  return;
}


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rx_promisc_req(struct bna_rxf *rxf, enum bna_status status)
{
  
#line 251 
  struct bfi_enet_enable_req *req = & rxf->bfi_enet_cmd.req;
  
#line 253 
  req->mh.msg_class = (unsigned char)24U;
  
#line 253 
  req->mh.msg_id = (unsigned char)6U;
  
#line 253 
  req->mh.msg_token = (unsigned short)0U;
  
#line 253 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 255 
  req->mh.num_entries = (unsigned short)256U;
  
#line 257 
  req->enable = (unsigned char)status;
  
#line 258 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 258 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 258 
  rxf->msgq_cmd.msg_size = 12UL;
  
#line 258 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 260 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 261 
  return;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rx_vlan_filter_set(struct bna_rxf *rxf, u8 block_idx)
{
  int i;
  int j;
  
#line 266 
  struct bfi_enet_rx_vlan_req *req = & rxf->bfi_enet_cmd.vlan_req;
  
#line 270 
  req->mh.msg_class = (unsigned char)24U;
  
#line 270 
  req->mh.msg_id = (unsigned char)15U;
  
#line 270 
  req->mh.msg_token = (unsigned short)0U;
  
#line 270 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 272 
  req->mh.num_entries = (unsigned short)512U;
  
#line 274 
  req->block_idx = block_idx;
  
#line 275 
  i = 0;
  
#line 275 
  goto ldv_48523;
  ldv_48522: 
#line 276 
  ;
  
#line 276 
  j = (int)block_idx * 16 + i;
  
#line 277 
  if (rxf->vlan_filter_status == (unsigned int)BNA_STATUS_T_ENABLED) 
    
#line 278 
    if (0 != 0) 
#line 278 
                req->bit_mask[i] = (((rxf->vlan_filter_table[j] << 24) | ((rxf->vlan_filter_table[j] << 8) & 16711680U)) | ((rxf->vlan_filter_table[j] >> 8) & 65280U)) | (rxf->vlan_filter_table[j] >> 24); else 
                                                                    
#line 279 
                                                                    req->bit_mask[i] = __fswab32(rxf->vlan_filter_table[j]);
  else 
#line 281 
       req->bit_mask[i] = 4294967295U;
  
#line 275 
  i += 1;
  ldv_48523: 
#line 276 
  ;
  
#line 275 
  if (i <= 15) 
#line 277 
               goto ldv_48522; else 
#line 280 
                                    goto ldv_48524;
  ldv_48524: 
#line 281 
  ;
  
#line 283 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 283 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 283 
  rxf->msgq_cmd.msg_size = 76UL;
  
#line 283 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 285 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 286 
  return;
}


#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_vlan_strip_enable(struct bna_rxf *rxf)
{
  
#line 291 
  struct bfi_enet_enable_req *req = & rxf->bfi_enet_cmd.req;
  
#line 293 
  req->mh.msg_class = (unsigned char)24U;
  
#line 293 
  req->mh.msg_id = (unsigned char)16U;
  
#line 293 
  req->mh.msg_token = (unsigned short)0U;
  
#line 293 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 295 
  req->mh.num_entries = (unsigned short)256U;
  
#line 297 
  req->enable = (unsigned char)rxf->vlan_strip_status;
  
#line 298 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 298 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 298 
  rxf->msgq_cmd.msg_size = 12UL;
  
#line 298 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 300 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 301 
  return;
}


#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rit_cfg(struct bna_rxf *rxf)
{
  
#line 306 
  struct bfi_enet_rit_req *req = & rxf->bfi_enet_cmd.rit_req;
  
#line 308 
  req->mh.msg_class = (unsigned char)24U;
  
#line 308 
  req->mh.msg_id = (unsigned char)3U;
  
#line 308 
  req->mh.msg_token = (unsigned short)0U;
  
#line 308 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 310 
  req->mh.num_entries = (unsigned short)512U;
  
#line 312 
  if (0 != 0) 
#line 312 
              req->size = (unsigned short)(((int)((unsigned short)rxf->rit_size) << 8) | ((int)((unsigned short)rxf->rit_size) >> 8)); else 
                                                                    
#line 312 
                                                                    req->size = __fswab16((unsigned short)((int)((unsigned short)rxf->rit_size)));
  
#line 313 
  memcpy((void *)(& req->table[0]),(void const *)rxf->rit,(unsigned long)rxf->rit_size);
  
#line 314 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 314 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 314 
  rxf->msgq_cmd.msg_size = 76UL;
  
#line 314 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 316 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 317 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rss_cfg(struct bna_rxf *rxf)
{
  int i;
  
#line 322 
  struct bfi_enet_rss_cfg_req *req = & rxf->bfi_enet_cmd.rss_req;
  
#line 325 
  req->mh.msg_class = (unsigned char)24U;
  
#line 325 
  req->mh.msg_id = (unsigned char)4U;
  
#line 325 
  req->mh.msg_token = (unsigned short)0U;
  
#line 325 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 327 
  req->mh.num_entries = (unsigned short)256U;
  
#line 329 
  req->cfg.type = (unsigned char)rxf->rss_cfg.hash_type;
  
#line 330 
  req->cfg.mask = rxf->rss_cfg.hash_mask;
  
#line 331 
  i = 0;
  
#line 331 
  goto ldv_48539;
  ldv_48538: 
#line 332 
  ;
  
#line 332 
  if (0 != 0) 
#line 332 
              req->cfg.key[i] = (((rxf->rss_cfg.toeplitz_hash_key[i] << 24) | ((rxf->rss_cfg.toeplitz_hash_key[i] << 8) & 16711680U)) | ((rxf->rss_cfg.toeplitz_hash_key[i] >> 8) & 65280U)) | (rxf->rss_cfg.toeplitz_hash_key[i] >> 24); else 
                                                                    
#line 333 
                                                                    req->cfg.key[i] = __fswab32(rxf->rss_cfg.toeplitz_hash_key[i]);
  
#line 331 
  i += 1;
  ldv_48539: 
#line 332 
  ;
  
#line 331 
  if (i <= 9) 
#line 333 
              goto ldv_48538; else 
#line 336 
                                   goto ldv_48540;
  ldv_48540: 
#line 337 
  ;
  
#line 334 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 334 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 334 
  rxf->msgq_cmd.msg_size = 52UL;
  
#line 334 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 336 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 337 
  return;
}


#line 340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rss_enable(struct bna_rxf *rxf)
{
  
#line 342 
  struct bfi_enet_enable_req *req = & rxf->bfi_enet_cmd.req;
  
#line 344 
  req->mh.msg_class = (unsigned char)24U;
  
#line 344 
  req->mh.msg_id = (unsigned char)5U;
  
#line 344 
  req->mh.msg_token = (unsigned short)0U;
  
#line 344 
  req->mh.enet_id = (unsigned char)(rxf->rx)->rid;
  
#line 346 
  req->mh.num_entries = (unsigned short)256U;
  
#line 348 
  req->enable = (unsigned char)rxf->rss_status;
  
#line 349 
  rxf->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 349 
  rxf->msgq_cmd.cbarg = (void *)0;
  
#line 349 
  rxf->msgq_cmd.msg_size = 12UL;
  
#line 349 
  rxf->msgq_cmd.msg_hdr = & req->mh;
  
#line 351 
  bfa_msgq_cmd_post(& ((rxf->rx)->bna)->msgq,& rxf->msgq_cmd);
  
#line 352 
  return;
}


#line 356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static struct bna_mac *bna_rxf_mcmac_get(struct bna_rxf *rxf, u8 const *mac_addr)
{
  struct bna_mac *__retres;
  struct bna_mac *mac;
  struct bna_mac *tmp;
  bool tmp_0;
  struct bna_mac *tmp_1;
  struct bna_mac *tmp_2;
  bool tmp_3;
  struct bna_mac *tmp_4;
  {
    
#line 360 
    struct list_head const *__mptr = (struct list_head const *)rxf->mcast_active_q.next;
    
#line 360 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 360 
  mac = tmp;
  
#line 360 
  goto ldv_48555;
  ldv_48554: 
#line 361 
  ;
  
#line 361 
  tmp_0 = ether_addr_equal((u8 const *)(& mac->addr),mac_addr);
  
#line 361 
  if ((int)tmp_0 != 0) {
    
#line 362 
    __retres = mac;
    
#line 362 
    goto return_label;
  }
  else ;
  {
    
#line 360 
    struct list_head const *__mptr_0 = (struct list_head const *)mac->qe.next;
    
#line 360 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 360 
  mac = tmp_1;
  ldv_48555: 
#line 362 
  ;
  
#line 360 
  if (& mac->qe != & rxf->mcast_active_q) 
#line 362 
                                          goto ldv_48554; else 
#line 365 
                                                               goto ldv_48556;
  ldv_48556: 
#line 366 
  ;
  {
    
#line 364 
    struct list_head const *__mptr_1 = (struct list_head const *)rxf->mcast_pending_del_q.next;
    
#line 364 
    tmp_2 = (struct bna_mac *)__mptr_1;
  }
  
#line 364 
  mac = tmp_2;
  
#line 364 
  goto ldv_48562;
  ldv_48561: 
#line 365 
  ;
  
#line 365 
  tmp_3 = ether_addr_equal((u8 const *)(& mac->addr),mac_addr);
  
#line 365 
  if ((int)tmp_3 != 0) {
    
#line 366 
    __retres = mac;
    
#line 366 
    goto return_label;
  }
  else ;
  {
    
#line 364 
    struct list_head const *__mptr_2 = (struct list_head const *)mac->qe.next;
    
#line 364 
    tmp_4 = (struct bna_mac *)__mptr_2;
  }
  
#line 364 
  mac = tmp_4;
  ldv_48562: 
#line 366 
  ;
  
#line 364 
  if (& mac->qe != & rxf->mcast_pending_del_q) 
#line 366 
                                               goto ldv_48561; else 
#line 369 
                                                                    goto ldv_48563;
  ldv_48563: 
#line 370 
  ;
  
#line 368 
  __retres = (struct bna_mac *)0;
  return_label: 
#line 368 
                return __retres;
}


#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static struct bna_mcam_handle *bna_rxf_mchandle_get(struct bna_rxf *rxf, int handle)
{
  struct bna_mcam_handle *__retres;
  struct bna_mcam_handle *mchandle;
  struct bna_mcam_handle *tmp;
  struct bna_mcam_handle *tmp_0;
  {
    
#line 376 
    struct list_head const *__mptr = (struct list_head const *)rxf->mcast_handle_q.next;
    
#line 376 
    tmp = (struct bna_mcam_handle *)__mptr;
  }
  
#line 376 
  mchandle = tmp;
  
#line 376 
  goto ldv_48574;
  ldv_48573: 
#line 377 
  ;
  
#line 377 
  if (mchandle->handle == handle) {
    
#line 378 
    __retres = mchandle;
    
#line 378 
    goto return_label;
  }
  else ;
  {
    
#line 376 
    struct list_head const *__mptr_0 = (struct list_head const *)mchandle->qe.next;
    
#line 376 
    tmp_0 = (struct bna_mcam_handle *)__mptr_0;
  }
  
#line 376 
  mchandle = tmp_0;
  ldv_48574: 
#line 378 
  ;
  
#line 376 
  if (& mchandle->qe != & rxf->mcast_handle_q) 
#line 378 
                                               goto ldv_48573; else 
#line 381 
                                                                    goto ldv_48575;
  ldv_48575: 
#line 382 
  ;
  
#line 380 
  __retres = (struct bna_mcam_handle *)0;
  return_label: 
#line 380 
                return __retres;
}


#line 384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_mchandle_attach(struct bna_rxf *rxf, u8 *mac_addr, int handle)
{
  struct bna_mac *mcmac;
  struct bna_mcam_handle *mchandle;
  
#line 389 
  mcmac = bna_rxf_mcmac_get(rxf,(u8 const *)mac_addr);
  
#line 390 
  mchandle = bna_rxf_mchandle_get(rxf,handle);
  
#line 391 
  if (mchandle == (struct bna_mcam_handle *)0) {
    
#line 392 
    mchandle = bna_mcam_mod_handle_get(& ((rxf->rx)->bna)->mcam_mod);
    
#line 393 
    mchandle->handle = handle;
    
#line 394 
    mchandle->refcnt = 0;
    
#line 395 
    list_add_tail(& mchandle->qe,& rxf->mcast_handle_q);
  }
  else ;
  
#line 397 
  mchandle->refcnt += 1;
  
#line 398 
  mcmac->handle = mchandle;
  
#line 399 
  return;
}


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_mcast_del(struct bna_rxf *rxf, struct bna_mac *mac, enum bna_cleanup_type cleanup)
{
  int __retres;
  struct bna_mcam_handle *mchandle;
  
#line 406 
  int ret = 0;
  
#line 408 
  mchandle = mac->handle;
  
#line 409 
  if (mchandle == (struct bna_mcam_handle *)0) {
    
#line 410 
    __retres = ret;
    
#line 410 
    goto return_label;
  }
  else ;
  
#line 412 
  mchandle->refcnt -= 1;
  
#line 413 
  if (mchandle->refcnt == 0) {
    
#line 414 
    if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
      
#line 415 
      bna_bfi_mcast_del_req(rxf,(unsigned short)((int)((unsigned short)mchandle->handle)));
      
#line 416 
      ret = 1;
    }
    else ;
    
#line 418 
    list_del(& mchandle->qe);
    
#line 419 
    bna_mcam_mod_handle_put(& ((rxf->rx)->bna)->mcam_mod,mchandle);
  }
  else ;
  
#line 421 
  mac->handle = (struct bna_mcam_handle *)0;
  
#line 423 
  __retres = ret;
  return_label: 
#line 423 
                return __retres;
}


#line 427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_mcast_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  int ret;
  struct bna_mac *tmp;
  int tmp_0;
  int tmp_2;
  
#line 429 
  struct bna_mac *mac = (struct bna_mac *)0;
  
#line 433 
  goto ldv_48598;
  ldv_48597: 
#line 434 
  ;
  {
    
#line 434 
    struct list_head const *__mptr = (struct list_head const *)rxf->mcast_pending_del_q.next;
    
#line 434 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 434 
  mac = tmp;
  
#line 436 
  ret = bna_rxf_mcast_del(rxf,mac,(enum bna_cleanup_type)BNA_HARD_CLEANUP);
  
#line 437 
  list_move_tail(& mac->qe,& ((rxf->rx)->bna)->mcam_mod.del_q);
  
#line 438 
  if (ret != 0) {
    
#line 439 
    __retres = ret;
    
#line 439 
    goto return_label;
  }
  else ;
  ldv_48598: 
#line 440 
  ;
  
#line 433 
  tmp_0 = list_empty((struct list_head const *)(& rxf->mcast_pending_del_q));
  
#line 433 
  if (tmp_0 == 0) 
#line 435 
                  goto ldv_48597; else 
#line 438 
                                       goto ldv_48599;
  ldv_48599: 
#line 439 
  ;
  
#line 443 
  tmp_2 = list_empty((struct list_head const *)(& rxf->mcast_pending_add_q));
  
#line 443 
  if (tmp_2 == 0) {
    struct bna_mac *tmp_1;
    {
      
#line 444 
      struct list_head const *__mptr_0 = (struct list_head const *)rxf->mcast_pending_add_q.next;
      
#line 444 
      tmp_1 = (struct bna_mac *)__mptr_0;
    }
    
#line 444 
    mac = tmp_1;
    
#line 446 
    list_move_tail(& mac->qe,& rxf->mcast_active_q);
    
#line 447 
    bna_bfi_mcast_add_req(rxf,mac);
    
#line 448 
    __retres = 1;
    
#line 448 
    goto return_label;
  }
  else ;
  
#line 451 
  __retres = 0;
  return_label: 
#line 451 
                return __retres;
}


#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_vlan_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  u8 vlan_pending_bitmask;
  
#line 458 
  int block_idx = 0;
  
#line 460 
  if ((unsigned int)rxf->vlan_pending_bitmask != 0U) {
    
#line 461 
    vlan_pending_bitmask = rxf->vlan_pending_bitmask;
    
#line 462 
    goto ldv_48608;
    ldv_48607: 
#line 463 
    ;
    
#line 463 
    block_idx += 1;
    
#line 464 
    vlan_pending_bitmask = (unsigned char)((int)vlan_pending_bitmask >> 1);
    ldv_48608: 
#line 465 
    ;
    
#line 462 
    if (((int)vlan_pending_bitmask & 1) == 0) 
#line 464 
                                              goto ldv_48607; else 
#line 467 
                                                                   goto ldv_48609;
    ldv_48609: 
#line 468 
    ;
    
#line 466 
    rxf->vlan_pending_bitmask = (unsigned char)((int)rxf->vlan_pending_bitmask & ~ ((int)((unsigned char)(1UL << block_idx))));
    
#line 467 
    bna_bfi_rx_vlan_filter_set(rxf,(unsigned char)((int)((unsigned char)block_idx)));
    
#line 468 
    __retres = 1;
    
#line 468 
    goto return_label;
  }
  else ;
  
#line 471 
  __retres = 0;
  return_label: 
#line 471 
                return __retres;
}


#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_mcast_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup)
{
  int __retres;
  struct bna_mac *mac;
  int ret;
  struct bna_mac *tmp;
  int tmp_0;
  struct bna_mac *tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 481 
  goto ldv_48619;
  ldv_48618: 
#line 482 
  ;
  {
    
#line 482 
    struct list_head const *__mptr = (struct list_head const *)rxf->mcast_pending_del_q.next;
    
#line 482 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 482 
  mac = tmp;
  
#line 484 
  ret = bna_rxf_mcast_del(rxf,mac,cleanup);
  
#line 485 
  list_move_tail(& mac->qe,& ((rxf->rx)->bna)->mcam_mod.del_q);
  
#line 486 
  if (ret != 0) {
    
#line 487 
    __retres = ret;
    
#line 487 
    goto return_label;
  }
  else ;
  ldv_48619: 
#line 488 
  ;
  
#line 481 
  tmp_0 = list_empty((struct list_head const *)(& rxf->mcast_pending_del_q));
  
#line 481 
  if (tmp_0 == 0) 
#line 483 
                  goto ldv_48618; else 
#line 486 
                                       goto ldv_48620;
  ldv_48620: 
#line 487 
  ;
  
#line 491 
  goto ldv_48624;
  ldv_48623: 
#line 492 
  ;
  {
    
#line 492 
    struct list_head const *__mptr_0 = (struct list_head const *)rxf->mcast_active_q.next;
    
#line 492 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 492 
  mac = tmp_1;
  
#line 494 
  list_move_tail(& mac->qe,& rxf->mcast_pending_add_q);
  
#line 495 
  tmp_2 = bna_rxf_mcast_del(rxf,mac,cleanup);
  
#line 495 
  if (tmp_2 != 0) {
    
#line 496 
    __retres = 1;
    
#line 496 
    goto return_label;
  }
  else ;
  ldv_48624: 
#line 497 
  ;
  
#line 491 
  tmp_3 = list_empty((struct list_head const *)(& rxf->mcast_active_q));
  
#line 491 
  if (tmp_3 == 0) 
#line 493 
                  goto ldv_48623; else 
#line 496 
                                       goto ldv_48625;
  ldv_48625: 
#line 497 
  ;
  
#line 499 
  __retres = 0;
  return_label: 
#line 499 
                return __retres;
}


#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_rss_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  
#line 505 
  if (rxf->rss_pending != (unsigned int)0) {
    
#line 506 
    if (((unsigned int)rxf->rss_pending & 1U) != 0U) {
      
#line 507 
      rxf->rss_pending = (enum bna_rss_flags)((unsigned int)rxf->rss_pending & 4294967294U);
      
#line 508 
      bna_bfi_rit_cfg(rxf);
      
#line 509 
      __retres = 1;
      
#line 509 
      goto return_label;
    }
    else ;
    
#line 512 
    if (((unsigned int)rxf->rss_pending & 2U) != 0U) {
      
#line 513 
      rxf->rss_pending = (enum bna_rss_flags)((unsigned int)rxf->rss_pending & 4294967293U);
      
#line 514 
      bna_bfi_rss_cfg(rxf);
      
#line 515 
      __retres = 1;
      
#line 515 
      goto return_label;
    }
    else ;
    
#line 518 
    if (((unsigned int)rxf->rss_pending & 4U) != 0U) {
      
#line 519 
      rxf->rss_pending = (enum bna_rss_flags)((unsigned int)rxf->rss_pending & 4294967291U);
      
#line 520 
      bna_bfi_rss_enable(rxf);
      
#line 521 
      __retres = 1;
      
#line 521 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 525 
  __retres = 0;
  return_label: 
#line 525 
                return __retres;
}


#line 529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 531 
  tmp = bna_rxf_ucast_cfg_apply(rxf);
  
#line 531 
  if (tmp != 0) {
    
#line 532 
    __retres = 1;
    
#line 532 
    goto return_label;
  }
  else ;
  
#line 534 
  tmp_0 = bna_rxf_mcast_cfg_apply(rxf);
  
#line 534 
  if (tmp_0 != 0) {
    
#line 535 
    __retres = 1;
    
#line 535 
    goto return_label;
  }
  else ;
  
#line 537 
  tmp_1 = bna_rxf_promisc_cfg_apply(rxf);
  
#line 537 
  if (tmp_1 != 0) {
    
#line 538 
    __retres = 1;
    
#line 538 
    goto return_label;
  }
  else ;
  
#line 540 
  tmp_2 = bna_rxf_allmulti_cfg_apply(rxf);
  
#line 540 
  if (tmp_2 != 0) {
    
#line 541 
    __retres = 1;
    
#line 541 
    goto return_label;
  }
  else ;
  
#line 543 
  tmp_3 = bna_rxf_vlan_cfg_apply(rxf);
  
#line 543 
  if (tmp_3 != 0) {
    
#line 544 
    __retres = 1;
    
#line 544 
    goto return_label;
  }
  else ;
  
#line 546 
  tmp_4 = bna_rxf_vlan_strip_cfg_apply(rxf);
  
#line 546 
  if (tmp_4 != 0) {
    
#line 547 
    __retres = 1;
    
#line 547 
    goto return_label;
  }
  else ;
  
#line 549 
  tmp_5 = bna_rxf_rss_cfg_apply(rxf);
  
#line 549 
  if (tmp_5 != 0) {
    
#line 550 
    __retres = 1;
    
#line 550 
    goto return_label;
  }
  else ;
  
#line 552 
  __retres = 0;
  return_label: 
#line 552 
                return __retres;
}


#line 556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_cfg_reset(struct bna_rxf *rxf)
{
  
#line 558 
  bna_rxf_ucast_cfg_reset(rxf,(enum bna_cleanup_type)BNA_SOFT_CLEANUP);
  
#line 559 
  bna_rxf_mcast_cfg_reset(rxf,(enum bna_cleanup_type)BNA_SOFT_CLEANUP);
  
#line 560 
  bna_rxf_promisc_cfg_reset(rxf,(enum bna_cleanup_type)BNA_SOFT_CLEANUP);
  
#line 561 
  bna_rxf_allmulti_cfg_reset(rxf,(enum bna_cleanup_type)BNA_SOFT_CLEANUP);
  
#line 562 
  rxf->vlan_pending_bitmask = (unsigned char)255U;
  
#line 562 
  rxf->vlan_strip_pending = (_Bool)1;
  
#line 563 
  if (rxf->rss_status == (unsigned int)BNA_STATUS_T_ENABLED) 
#line 563 
                                                             rxf->rss_pending = (enum bna_rss_flags)7; else ;
  
#line 564 
  return;
}


#line 567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rit_init(struct bna_rxf *rxf, int rit_size)
{
  struct bna_rxp *rxp;
  struct bna_rxp *tmp;
  struct bna_rxp *tmp_0;
  
#line 569 
  struct bna_rx *rx = rxf->rx;
  
#line 571 
  int offset = 0;
  
#line 573 
  rxf->rit_size = rit_size;
  {
    
#line 574 
    struct list_head const *__mptr = (struct list_head const *)rx->rxp_q.next;
    
#line 574 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 574 
  rxp = tmp;
  
#line 574 
  goto ldv_48647;
  ldv_48646: 
#line 575 
  ;
  
#line 575 
  *(rxf->rit + offset) = (unsigned char)(rxp->cq.ccb)->id;
  
#line 576 
  offset += 1;
  {
    
#line 574 
    struct list_head const *__mptr_0 = (struct list_head const *)rxp->qe.next;
    
#line 574 
    tmp_0 = (struct bna_rxp *)__mptr_0;
  }
  
#line 574 
  rxp = tmp_0;
  ldv_48647: 
#line 576 
  ;
  
#line 574 
  if (& rxp->qe != & rx->rxp_q) 
#line 576 
                                goto ldv_48646; else 
#line 579 
                                                     goto ldv_48648;
  ldv_48648: 
#line 580 
  ;
  
#line 581 
  return;
}


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_rxf_cfg_rsp(struct bna_rxf *rxf, struct bfi_msgq_mhdr *msghdr)
{
  
#line 583 
  (*(rxf->fsm))((void *)rxf,7);
  
#line 584 
  return;
}


#line 587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_rxf_ucast_set_rsp(struct bna_rxf *rxf, struct bfi_msgq_mhdr *msghdr)
{
  struct bfi_enet_rsp *tmp;
  {
    
#line 591 
    struct bfi_msgq_mhdr const *__mptr = (struct bfi_msgq_mhdr const *)msghdr;
    
#line 591 
    tmp = (struct bfi_enet_rsp *)__mptr;
  }
  
#line 590 
  struct bfi_enet_rsp *rsp = tmp;
  
#line 593 
  if ((unsigned int)rsp->error != 0U) 
#line 595 
                                      rxf->ucast_active_set = 0; else ;
  
#line 598 
  (*(rxf->fsm))((void *)rxf,7);
  
#line 599 
  return;
}


#line 602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_rxf_mcast_add_rsp(struct bna_rxf *rxf, struct bfi_msgq_mhdr *msghdr)
{
  struct bfi_enet_mcast_add_rsp *tmp;
  int tmp_1;
  
#line 605 
  struct bfi_enet_mcast_add_req *req = & rxf->bfi_enet_cmd.mcast_add_req;
  {
    
#line 608 
    struct bfi_msgq_mhdr const *__mptr = (struct bfi_msgq_mhdr const *)msghdr;
    
#line 608 
    tmp = (struct bfi_enet_mcast_add_rsp *)__mptr;
  }
  
#line 607 
  struct bfi_enet_mcast_add_rsp *rsp = tmp;
  
#line 610 
  if (0 != 0) 
#line 610 
              tmp_1 = (int)((unsigned short)(((int)rsp->handle << 8) | ((int)rsp->handle >> 8)));
  else {
    __u16 tmp_0;
    
#line 611 
    tmp_0 = __fswab16((unsigned short)((int)rsp->handle));
    
#line 610 
    tmp_1 = (int)tmp_0;
  }
  
#line 610 
  ;
  
#line 610 
  ;
  
#line 610 
  bna_rxf_mchandle_attach(rxf,(u8 *)(& req->mac_addr),tmp_1);
  
#line 612 
  (*(rxf->fsm))((void *)rxf,7);
  
#line 613 
  return;
}


#line 616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_init(struct bna_rxf *rxf, struct bna_rx *rx, struct bna_rx_config *q_config, struct bna_res_info *res_info)
{
  
#line 621 
  rxf->rx = rx;
  
#line 623 
  INIT_LIST_HEAD(& rxf->ucast_pending_add_q);
  
#line 624 
  INIT_LIST_HEAD(& rxf->ucast_pending_del_q);
  
#line 625 
  rxf->ucast_pending_set = 0;
  
#line 626 
  rxf->ucast_active_set = 0;
  
#line 627 
  INIT_LIST_HEAD(& rxf->ucast_active_q);
  
#line 628 
  rxf->ucast_pending_mac = (struct bna_mac *)0;
  
#line 630 
  INIT_LIST_HEAD(& rxf->mcast_pending_add_q);
  
#line 631 
  INIT_LIST_HEAD(& rxf->mcast_pending_del_q);
  
#line 632 
  INIT_LIST_HEAD(& rxf->mcast_active_q);
  
#line 633 
  INIT_LIST_HEAD(& rxf->mcast_handle_q);
  
#line 635 
  rxf->rit = (u8 *)((res_info + 14U)->res_u.mem_info.mdl)->kva;
  
#line 637 
  bna_rit_init(rxf,q_config->num_paths);
  
#line 639 
  rxf->rss_status = q_config->rss_status;
  
#line 640 
  if (rxf->rss_status == (unsigned int)BNA_STATUS_T_ENABLED) {
    
#line 641 
    rxf->rss_cfg = q_config->rss_config;
    
#line 642 
    rxf->rss_pending = (enum bna_rss_flags)((unsigned int)rxf->rss_pending | 2U);
    
#line 643 
    rxf->rss_pending = (enum bna_rss_flags)((unsigned int)rxf->rss_pending | 1U);
    
#line 644 
    rxf->rss_pending = (enum bna_rss_flags)((unsigned int)rxf->rss_pending | 4U);
  }
  else ;
  
#line 647 
  rxf->vlan_filter_status = BNA_STATUS_T_DISABLED;
  
#line 648 
  memset((void *)(& rxf->vlan_filter_table),0,512UL);
  
#line 650 
  rxf->vlan_filter_table[0] |= 1U;
  
#line 651 
  rxf->vlan_pending_bitmask = (unsigned char)255U;
  
#line 653 
  rxf->vlan_strip_status = q_config->vlan_strip_status;
  
#line 655 
  rxf->fsm = (void (*)(void *, int ))(& bna_rxf_sm_stopped);
  
#line 655 
  bna_rxf_sm_stopped_entry(rxf);
  
#line 656 
  return;
}


#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_uninit(struct bna_rxf *rxf)
{
  struct bna_mac *mac;
  struct bna_mac *tmp;
  int tmp_0;
  struct bna_mac *tmp_1;
  int tmp_2;
  
#line 663 
  rxf->ucast_pending_set = 0;
  
#line 664 
  rxf->ucast_active_set = 0;
  
#line 666 
  goto ldv_48681;
  ldv_48680: 
#line 667 
  ;
  {
    
#line 667 
    struct list_head const *__mptr = (struct list_head const *)rxf->ucast_pending_add_q.next;
    
#line 667 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 667 
  mac = tmp;
  
#line 669 
  list_move_tail(& mac->qe,& ((rxf->rx)->bna)->ucam_mod.free_q);
  ldv_48681: 
#line 670 
  ;
  
#line 666 
  tmp_0 = list_empty((struct list_head const *)(& rxf->ucast_pending_add_q));
  
#line 666 
  if (tmp_0 == 0) 
#line 668 
                  goto ldv_48680; else 
#line 671 
                                       goto ldv_48682;
  ldv_48682: 
#line 672 
  ;
  
#line 672 
  if (rxf->ucast_pending_mac != (struct bna_mac *)0) {
    
#line 673 
    list_add_tail(& (rxf->ucast_pending_mac)->qe,& ((rxf->rx)->bna)->ucam_mod.free_q);
    
#line 675 
    rxf->ucast_pending_mac = (struct bna_mac *)0;
  }
  else ;
  
#line 678 
  goto ldv_48686;
  ldv_48685: 
#line 679 
  ;
  {
    
#line 679 
    struct list_head const *__mptr_0 = (struct list_head const *)rxf->mcast_pending_add_q.next;
    
#line 679 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 679 
  mac = tmp_1;
  
#line 681 
  list_move_tail(& mac->qe,& ((rxf->rx)->bna)->mcam_mod.free_q);
  ldv_48686: 
#line 682 
  ;
  
#line 678 
  tmp_2 = list_empty((struct list_head const *)(& rxf->mcast_pending_add_q));
  
#line 678 
  if (tmp_2 == 0) 
#line 680 
                  goto ldv_48685; else 
#line 683 
                                       goto ldv_48687;
  ldv_48687: 
#line 684 
  ;
  
#line 684 
  rxf->rxmode_pending = (enum bna_rxmode)0;
  
#line 685 
  rxf->rxmode_pending_bitmask = (enum bna_rxmode)0;
  
#line 686 
  if (((rxf->rx)->bna)->promisc_rid == (rxf->rx)->rid) 
#line 687 
                                                       ((rxf->rx)->bna)->promisc_rid = -1; else ;
  
#line 688 
  if (((rxf->rx)->bna)->default_mode_rid == (rxf->rx)->rid) 
#line 689 
                                                            ((rxf->rx)->bna)->default_mode_rid = -1; else ;
  
#line 691 
  rxf->rss_pending = (enum bna_rss_flags)0;
  
#line 692 
  rxf->vlan_strip_pending = (_Bool)0;
  
#line 694 
  rxf->rx = (struct bna_rx *)0;
  
#line 695 
  return;
}


#line 698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_cb_rxf_started(struct bna_rx *rx)
{
  
#line 700 
  (*(rx->fsm))((void *)rx,6);
  
#line 701 
  return;
}


#line 704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_start(struct bna_rxf *rxf)
{
  
#line 706 
  rxf->start_cbfn = & bna_rx_cb_rxf_started;
  
#line 707 
  rxf->start_cbarg = rxf->rx;
  
#line 708 
  (*(rxf->fsm))((void *)rxf,1);
  
#line 709 
  return;
}


#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_cb_rxf_stopped(struct bna_rx *rx)
{
  
#line 714 
  (*(rx->fsm))((void *)rx,7);
  
#line 715 
  return;
}


#line 718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_stop(struct bna_rxf *rxf)
{
  
#line 720 
  rxf->stop_cbfn = & bna_rx_cb_rxf_stopped;
  
#line 721 
  rxf->stop_cbarg = rxf->rx;
  
#line 722 
  (*(rxf->fsm))((void *)rxf,2);
  
#line 723 
  return;
}


#line 726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxf_fail(struct bna_rxf *rxf)
{
  
#line 728 
  (*(rxf->fsm))((void *)rxf,3);
  
#line 729 
  return;
}


#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
enum bna_cb_status bna_rx_ucast_set(struct bna_rx *rx, u8 const *ucmac)
{
  enum bna_cb_status __retres;
  
#line 734 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 736 
  if (rxf->ucast_pending_mac == (struct bna_mac *)0) {
    
#line 737 
    rxf->ucast_pending_mac = bna_cam_mod_mac_get(& ((rxf->rx)->bna)->ucam_mod.free_q);
    
#line 739 
    if (rxf->ucast_pending_mac == (struct bna_mac *)0) {
      
#line 740 
      __retres = BNA_CB_UCAST_CAM_FULL;
      
#line 740 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 743 
  ether_addr_copy((u8 *)(& (rxf->ucast_pending_mac)->addr),ucmac);
  
#line 744 
  rxf->ucast_pending_set = 1;
  
#line 745 
  rxf->cam_fltr_cbfn = (void (*)(struct bnad *, struct bna_rx *))0;
  
#line 746 
  rxf->cam_fltr_cbarg = (rx->bna)->bnad;
  
#line 748 
  (*(rxf->fsm))((void *)rxf,4);
  
#line 750 
  __retres = BNA_CB_SUCCESS;
  return_label: 
#line 750 
                return __retres;
}


#line 754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
enum bna_cb_status bna_rx_mcast_add(struct bna_rx *rx, u8 const *addr, void (*cbfn)(struct bnad *, struct bna_rx *))
{
  enum bna_cb_status __retres;
  struct bna_mac *mac;
  struct bna_mac *tmp;
  
#line 757 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 761 
  tmp = bna_mac_find(& rxf->mcast_active_q,addr);
  
#line 761 
  if (tmp != (struct bna_mac *)0) 
#line 761 
                                  goto _LOR;
  else {
    struct bna_mac *tmp_0;
    
#line 761 
    tmp_0 = bna_mac_find(& rxf->mcast_pending_add_q,addr);
    
#line 761 
    if (tmp_0 != (struct bna_mac *)0) {
      _LOR: {
              
#line 763 
              if (cbfn != (void (*)(struct bnad *, struct bna_rx *))0) 
                
#line 764 
                (*cbfn)((rx->bna)->bnad,rx); else ;
              
#line 765 
              __retres = BNA_CB_SUCCESS;
              
#line 765 
              goto return_label;
            }
    }
    else ;
  }
  
#line 768 
  mac = bna_cam_mod_mac_get(& ((rxf->rx)->bna)->mcam_mod.free_q);
  
#line 769 
  if (mac == (struct bna_mac *)0) {
    
#line 770 
    __retres = BNA_CB_MCAST_LIST_FULL;
    
#line 770 
    goto return_label;
  }
  else ;
  
#line 771 
  ether_addr_copy((u8 *)(& mac->addr),addr);
  
#line 772 
  list_add_tail(& mac->qe,& rxf->mcast_pending_add_q);
  
#line 774 
  rxf->cam_fltr_cbfn = cbfn;
  
#line 775 
  rxf->cam_fltr_cbarg = (rx->bna)->bnad;
  
#line 777 
  (*(rxf->fsm))((void *)rxf,4);
  
#line 779 
  __retres = BNA_CB_SUCCESS;
  return_label: 
#line 779 
                return __retres;
}


#line 783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
enum bna_cb_status bna_rx_ucast_listset(struct bna_rx *rx, int count, u8 const *uclist)
{
  enum bna_cb_status __retres;
  struct list_head list_head;
  u8 const *mcaddr;
  struct bna_mac *mac;
  struct bna_mac *del_mac;
  int i;
  struct bna_mac *tmp;
  int tmp_0;
  struct bna_mac *tmp_1;
  int tmp_2;
  struct bna_mac *tmp_3;
  int tmp_4;
  struct bna_mac *tmp_5;
  int tmp_6;
  
#line 785 
  struct bna_ucam_mod *ucam_mod = & (rx->bna)->ucam_mod;
  
#line 786 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 793 
  goto ldv_48732;
  ldv_48731: 
#line 794 
  ;
  {
    
#line 794 
    struct list_head const *__mptr = (struct list_head const *)rxf->ucast_pending_add_q.next;
    
#line 794 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 794 
  mac = tmp;
  
#line 796 
  list_move_tail(& mac->qe,& ucam_mod->free_q);
  ldv_48732: 
#line 797 
  ;
  
#line 793 
  tmp_0 = list_empty((struct list_head const *)(& rxf->ucast_pending_add_q));
  
#line 793 
  if (tmp_0 == 0) 
#line 795 
                  goto ldv_48731; else 
#line 798 
                                       goto ldv_48733;
  ldv_48733: 
#line 799 
  ;
  
#line 800 
  goto ldv_48737;
  ldv_48736: 
#line 801 
  ;
  {
    
#line 801 
    struct list_head const *__mptr_0 = (struct list_head const *)rxf->ucast_active_q.next;
    
#line 801 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 801 
  mac = tmp_1;
  
#line 803 
  del_mac = bna_cam_mod_mac_get(& ucam_mod->del_q);
  
#line 804 
  ether_addr_copy((u8 *)(& del_mac->addr),(u8 const *)(& mac->addr));
  
#line 805 
  del_mac->handle = mac->handle;
  
#line 806 
  list_add_tail(& del_mac->qe,& rxf->ucast_pending_del_q);
  
#line 807 
  list_move_tail(& mac->qe,& ucam_mod->free_q);
  ldv_48737: 
#line 808 
  ;
  
#line 800 
  tmp_2 = list_empty((struct list_head const *)(& rxf->ucast_active_q));
  
#line 800 
  if (tmp_2 == 0) 
#line 802 
                  goto ldv_48736; else 
#line 805 
                                       goto ldv_48738;
  ldv_48738: 
#line 806 
  ;
  
#line 811 
  INIT_LIST_HEAD(& list_head);
  
#line 812 
  i = 0;
  
#line 812 
  mcaddr = uclist;
  
#line 812 
  goto ldv_48741;
  ldv_48740: 
#line 813 
  ;
  
#line 813 
  mac = bna_cam_mod_mac_get(& ucam_mod->free_q);
  
#line 814 
  if (mac == (struct bna_mac *)0) 
#line 815 
                                  goto err_return; else ;
  
#line 816 
  ether_addr_copy((u8 *)(& mac->addr),mcaddr);
  
#line 817 
  list_add_tail(& mac->qe,& list_head);
  
#line 818 
  mcaddr += 6U;
  
#line 812 
  i += 1;
  ldv_48741: 
#line 813 
  ;
  
#line 812 
  if (i < count) 
#line 814 
                 goto ldv_48740; else 
#line 817 
                                      goto ldv_48742;
  ldv_48742: 
#line 818 
  ;
  
#line 822 
  goto ldv_48746;
  ldv_48745: 
#line 823 
  ;
  {
    
#line 823 
    struct list_head const *__mptr_1 = (struct list_head const *)list_head.next;
    
#line 823 
    tmp_3 = (struct bna_mac *)__mptr_1;
  }
  
#line 823 
  mac = tmp_3;
  
#line 824 
  list_move_tail(& mac->qe,& rxf->ucast_pending_add_q);
  ldv_48746: 
#line 825 
  ;
  
#line 822 
  tmp_4 = list_empty((struct list_head const *)(& list_head));
  
#line 822 
  if (tmp_4 == 0) 
#line 824 
                  goto ldv_48745; else 
#line 827 
                                       goto ldv_48747;
  ldv_48747: 
#line 828 
  ;
  
#line 827 
  (*(rxf->fsm))((void *)rxf,4);
  
#line 829 
  __retres = BNA_CB_SUCCESS;
  
#line 829 
  goto return_label;
  err_return: 
#line 831 
  ;
  
#line 832 
  goto ldv_48751;
  ldv_48750: 
#line 833 
  ;
  {
    
#line 833 
    struct list_head const *__mptr_2 = (struct list_head const *)list_head.next;
    
#line 833 
    tmp_5 = (struct bna_mac *)__mptr_2;
  }
  
#line 833 
  mac = tmp_5;
  
#line 834 
  list_move_tail(& mac->qe,& ucam_mod->free_q);
  ldv_48751: 
#line 835 
  ;
  
#line 832 
  tmp_6 = list_empty((struct list_head const *)(& list_head));
  
#line 832 
  if (tmp_6 == 0) 
#line 834 
                  goto ldv_48750; else 
#line 837 
                                       goto ldv_48752;
  ldv_48752: 
#line 838 
  ;
  
#line 837 
  __retres = BNA_CB_UCAST_CAM_FULL;
  return_label: 
#line 837 
                return __retres;
}


#line 841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
enum bna_cb_status bna_rx_mcast_listset(struct bna_rx *rx, int count, u8 const *mclist)
{
  enum bna_cb_status __retres;
  struct list_head list_head;
  u8 const *mcaddr;
  struct bna_mac *mac;
  struct bna_mac *del_mac;
  int i;
  struct bna_mac *tmp;
  int tmp_0;
  struct bna_mac *tmp_1;
  int tmp_2;
  struct bna_mac *tmp_3;
  int tmp_4;
  struct bna_mac *tmp_5;
  int tmp_6;
  
#line 843 
  struct bna_mcam_mod *mcam_mod = & (rx->bna)->mcam_mod;
  
#line 844 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 851 
  goto ldv_48768;
  ldv_48767: 
#line 852 
  ;
  {
    
#line 852 
    struct list_head const *__mptr = (struct list_head const *)rxf->mcast_pending_add_q.next;
    
#line 852 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 852 
  mac = tmp;
  
#line 854 
  list_move_tail(& mac->qe,& mcam_mod->free_q);
  ldv_48768: 
#line 855 
  ;
  
#line 851 
  tmp_0 = list_empty((struct list_head const *)(& rxf->mcast_pending_add_q));
  
#line 851 
  if (tmp_0 == 0) 
#line 853 
                  goto ldv_48767; else 
#line 856 
                                       goto ldv_48769;
  ldv_48769: 
#line 857 
  ;
  
#line 858 
  goto ldv_48773;
  ldv_48772: 
#line 859 
  ;
  {
    
#line 859 
    struct list_head const *__mptr_0 = (struct list_head const *)rxf->mcast_active_q.next;
    
#line 859 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 859 
  mac = tmp_1;
  
#line 861 
  del_mac = bna_cam_mod_mac_get(& mcam_mod->del_q);
  
#line 862 
  ether_addr_copy((u8 *)(& del_mac->addr),(u8 const *)(& mac->addr));
  
#line 863 
  del_mac->handle = mac->handle;
  
#line 864 
  list_add_tail(& del_mac->qe,& rxf->mcast_pending_del_q);
  
#line 865 
  mac->handle = (struct bna_mcam_handle *)0;
  
#line 866 
  list_move_tail(& mac->qe,& mcam_mod->free_q);
  ldv_48773: 
#line 867 
  ;
  
#line 858 
  tmp_2 = list_empty((struct list_head const *)(& rxf->mcast_active_q));
  
#line 858 
  if (tmp_2 == 0) 
#line 860 
                  goto ldv_48772; else 
#line 863 
                                       goto ldv_48774;
  ldv_48774: 
#line 864 
  ;
  
#line 870 
  INIT_LIST_HEAD(& list_head);
  
#line 871 
  i = 0;
  
#line 871 
  mcaddr = mclist;
  
#line 871 
  goto ldv_48777;
  ldv_48776: 
#line 872 
  ;
  
#line 872 
  mac = bna_cam_mod_mac_get(& mcam_mod->free_q);
  
#line 873 
  if (mac == (struct bna_mac *)0) 
#line 874 
                                  goto err_return; else ;
  
#line 875 
  ether_addr_copy((u8 *)(& mac->addr),mcaddr);
  
#line 876 
  list_add_tail(& mac->qe,& list_head);
  
#line 878 
  mcaddr += 6U;
  
#line 871 
  i += 1;
  ldv_48777: 
#line 872 
  ;
  
#line 871 
  if (i < count) 
#line 873 
                 goto ldv_48776; else 
#line 876 
                                      goto ldv_48778;
  ldv_48778: 
#line 877 
  ;
  
#line 882 
  goto ldv_48782;
  ldv_48781: 
#line 883 
  ;
  {
    
#line 883 
    struct list_head const *__mptr_1 = (struct list_head const *)list_head.next;
    
#line 883 
    tmp_3 = (struct bna_mac *)__mptr_1;
  }
  
#line 883 
  mac = tmp_3;
  
#line 884 
  list_move_tail(& mac->qe,& rxf->mcast_pending_add_q);
  ldv_48782: 
#line 885 
  ;
  
#line 882 
  tmp_4 = list_empty((struct list_head const *)(& list_head));
  
#line 882 
  if (tmp_4 == 0) 
#line 884 
                  goto ldv_48781; else 
#line 887 
                                       goto ldv_48783;
  ldv_48783: 
#line 888 
  ;
  
#line 887 
  (*(rxf->fsm))((void *)rxf,4);
  
#line 889 
  __retres = BNA_CB_SUCCESS;
  
#line 889 
  goto return_label;
  err_return: 
#line 891 
  ;
  
#line 892 
  goto ldv_48787;
  ldv_48786: 
#line 893 
  ;
  {
    
#line 893 
    struct list_head const *__mptr_2 = (struct list_head const *)list_head.next;
    
#line 893 
    tmp_5 = (struct bna_mac *)__mptr_2;
  }
  
#line 893 
  mac = tmp_5;
  
#line 894 
  list_move_tail(& mac->qe,& mcam_mod->free_q);
  ldv_48787: 
#line 895 
  ;
  
#line 892 
  tmp_6 = list_empty((struct list_head const *)(& list_head));
  
#line 892 
  if (tmp_6 == 0) 
#line 894 
                  goto ldv_48786; else 
#line 897 
                                       goto ldv_48788;
  ldv_48788: 
#line 898 
  ;
  
#line 897 
  __retres = BNA_CB_MCAST_LIST_FULL;
  return_label: 
#line 897 
                return __retres;
}


#line 901  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_mcast_delall(struct bna_rx *rx)
{
  struct bna_mac *mac;
  struct bna_mac *del_mac;
  struct bna_mac *tmp;
  int tmp_0;
  struct bna_mac *tmp_1;
  int tmp_2;
  
#line 903 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 905 
  int need_hw_config = 0;
  
#line 908 
  goto ldv_48799;
  ldv_48798: 
#line 909 
  ;
  {
    
#line 909 
    struct list_head const *__mptr = (struct list_head const *)rxf->mcast_pending_add_q.next;
    
#line 909 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 909 
  mac = tmp;
  
#line 911 
  list_move_tail(& mac->qe,& ((rxf->rx)->bna)->mcam_mod.free_q);
  ldv_48799: 
#line 912 
  ;
  
#line 908 
  tmp_0 = list_empty((struct list_head const *)(& rxf->mcast_pending_add_q));
  
#line 908 
  if (tmp_0 == 0) 
#line 910 
                  goto ldv_48798; else 
#line 913 
                                       goto ldv_48800;
  ldv_48800: 
#line 914 
  ;
  
#line 915 
  goto ldv_48804;
  ldv_48803: 
#line 916 
  ;
  {
    
#line 916 
    struct list_head const *__mptr_0 = (struct list_head const *)rxf->mcast_active_q.next;
    
#line 916 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 916 
  mac = tmp_1;
  
#line 918 
  list_del(& mac->qe);
  
#line 919 
  del_mac = bna_cam_mod_mac_get(& ((rxf->rx)->bna)->mcam_mod.del_q);
  
#line 920 
  memcpy((void *)del_mac,(void const *)mac,32UL);
  
#line 921 
  list_add_tail(& del_mac->qe,& rxf->mcast_pending_del_q);
  
#line 922 
  mac->handle = (struct bna_mcam_handle *)0;
  
#line 923 
  list_add_tail(& mac->qe,& ((rxf->rx)->bna)->mcam_mod.free_q);
  
#line 924 
  need_hw_config = 1;
  ldv_48804: 
#line 925 
  ;
  
#line 915 
  tmp_2 = list_empty((struct list_head const *)(& rxf->mcast_active_q));
  
#line 915 
  if (tmp_2 == 0) 
#line 917 
                  goto ldv_48803; else 
#line 920 
                                       goto ldv_48805;
  ldv_48805: 
#line 921 
  ;
  
#line 927 
  if (need_hw_config != 0) 
#line 928 
                           (*(rxf->fsm))((void *)rxf,4); else ;
  
#line 929 
  return;
}


#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_vlan_add(struct bna_rx *rx, int vlan_id)
{
  
#line 934 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 935 
  int index = vlan_id >> 5;
  
#line 936 
  int bit = (int)(1UL << (vlan_id & 31));
  
#line 937 
  int group_id = vlan_id >> 9;
  
#line 939 
  rxf->vlan_filter_table[index] |= (unsigned int)bit;
  
#line 940 
  if (rxf->vlan_filter_status == (unsigned int)BNA_STATUS_T_ENABLED) {
    
#line 941 
    rxf->vlan_pending_bitmask = (unsigned char)((int)rxf->vlan_pending_bitmask | (int)((unsigned char)(1UL << group_id)));
    
#line 942 
    (*(rxf->fsm))((void *)rxf,4);
  }
  else ;
  
#line 944 
  return;
}


#line 947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_vlan_del(struct bna_rx *rx, int vlan_id)
{
  
#line 949 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 950 
  int index = vlan_id >> 5;
  
#line 951 
  int bit = (int)(1UL << (vlan_id & 31));
  
#line 952 
  int group_id = vlan_id >> 9;
  
#line 954 
  rxf->vlan_filter_table[index] &= (unsigned int)(~ bit);
  
#line 955 
  if (rxf->vlan_filter_status == (unsigned int)BNA_STATUS_T_ENABLED) {
    
#line 956 
    rxf->vlan_pending_bitmask = (unsigned char)((int)rxf->vlan_pending_bitmask | (int)((unsigned char)(1UL << group_id)));
    
#line 957 
    (*(rxf->fsm))((void *)rxf,4);
  }
  else ;
  
#line 959 
  return;
}


#line 962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_ucast_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  int tmp_0;
  int tmp_2;
  
#line 964 
  struct bna_mac *mac = (struct bna_mac *)0;
  
#line 967 
  tmp_0 = list_empty((struct list_head const *)(& rxf->ucast_pending_del_q));
  
#line 967 
  if (tmp_0 == 0) {
    struct bna_mac *tmp;
    {
      
#line 968 
      struct list_head const *__mptr = (struct list_head const *)rxf->ucast_pending_del_q.next;
      
#line 968 
      tmp = (struct bna_mac *)__mptr;
    }
    
#line 968 
    mac = tmp;
    
#line 970 
    bna_bfi_ucast_req(rxf,mac,(enum bfi_enet_h2i_msgs)BFI_ENET_H2I_MAC_UCAST_DEL_REQ);
    
#line 971 
    list_move_tail(& mac->qe,& ((rxf->rx)->bna)->ucam_mod.del_q);
    
#line 972 
    __retres = 1;
    
#line 972 
    goto return_label;
  }
  else ;
  
#line 976 
  if (rxf->ucast_pending_set != 0) {
    
#line 977 
    rxf->ucast_pending_set = 0;
    
#line 978 
    ether_addr_copy((u8 *)(& rxf->ucast_active_mac.addr),(u8 const *)(& (rxf->ucast_pending_mac)->addr));
    
#line 980 
    rxf->ucast_active_set = 1;
    
#line 981 
    bna_bfi_ucast_req(rxf,& rxf->ucast_active_mac,(enum bfi_enet_h2i_msgs)BFI_ENET_H2I_MAC_UCAST_SET_REQ);
    
#line 983 
    __retres = 1;
    
#line 983 
    goto return_label;
  }
  else ;
  
#line 987 
  tmp_2 = list_empty((struct list_head const *)(& rxf->ucast_pending_add_q));
  
#line 987 
  if (tmp_2 == 0) {
    struct bna_mac *tmp_1;
    {
      
#line 988 
      struct list_head const *__mptr_0 = (struct list_head const *)rxf->ucast_pending_add_q.next;
      
#line 988 
      tmp_1 = (struct bna_mac *)__mptr_0;
    }
    
#line 988 
    mac = tmp_1;
    
#line 990 
    list_add_tail(& mac->qe,& rxf->ucast_active_q);
    
#line 991 
    bna_bfi_ucast_req(rxf,mac,(enum bfi_enet_h2i_msgs)BFI_ENET_H2I_MAC_UCAST_ADD_REQ);
    
#line 992 
    __retres = 1;
    
#line 992 
    goto return_label;
  }
  else ;
  
#line 995 
  __retres = 0;
  return_label: 
#line 995 
                return __retres;
}


#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_ucast_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup)
{
  int __retres;
  struct bna_mac *mac;
  struct bna_mac *tmp;
  int tmp_0;
  struct bna_mac *tmp_1;
  int tmp_2;
  
#line 1004 
  goto ldv_48838;
  ldv_48837: 
#line 1005 
  ;
  {
    
#line 1005 
    struct list_head const *__mptr = (struct list_head const *)rxf->ucast_pending_del_q.next;
    
#line 1005 
    tmp = (struct bna_mac *)__mptr;
  }
  
#line 1005 
  mac = tmp;
  
#line 1007 
  if (cleanup == (unsigned int)BNA_SOFT_CLEANUP) 
#line 1008 
                                                 list_move_tail(& mac->qe,& ((rxf->rx)->bna)->ucam_mod.del_q);
  else {
    
#line 1011 
    bna_bfi_ucast_req(rxf,mac,(enum bfi_enet_h2i_msgs)BFI_ENET_H2I_MAC_UCAST_DEL_REQ);
    
#line 1013 
    list_move_tail(& mac->qe,& ((rxf->rx)->bna)->ucam_mod.del_q);
    
#line 1015 
    __retres = 1;
    
#line 1015 
    goto return_label;
  }
  ldv_48838: 
#line 1017 
  ;
  
#line 1004 
  tmp_0 = list_empty((struct list_head const *)(& rxf->ucast_pending_del_q));
  
#line 1004 
  if (tmp_0 == 0) 
#line 1006 
                  goto ldv_48837; else 
#line 1009 
                                       goto ldv_48839;
  ldv_48839: 
#line 1010 
  ;
  
#line 1020 
  goto ldv_48843;
  ldv_48842: 
#line 1021 
  ;
  {
    
#line 1021 
    struct list_head const *__mptr_0 = (struct list_head const *)rxf->ucast_active_q.next;
    
#line 1021 
    tmp_1 = (struct bna_mac *)__mptr_0;
  }
  
#line 1021 
  mac = tmp_1;
  
#line 1023 
  list_move_tail(& mac->qe,& rxf->ucast_pending_add_q);
  
#line 1024 
  if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
    
#line 1025 
    bna_bfi_ucast_req(rxf,mac,(enum bfi_enet_h2i_msgs)BFI_ENET_H2I_MAC_UCAST_DEL_REQ);
    
#line 1027 
    __retres = 1;
    
#line 1027 
    goto return_label;
  }
  else ;
  ldv_48843: 
#line 1029 
  ;
  
#line 1020 
  tmp_2 = list_empty((struct list_head const *)(& rxf->ucast_active_q));
  
#line 1020 
  if (tmp_2 == 0) 
#line 1022 
                  goto ldv_48842; else 
#line 1025 
                                       goto ldv_48844;
  ldv_48844: 
#line 1026 
  ;
  
#line 1031 
  if (rxf->ucast_active_set != 0) {
    
#line 1032 
    rxf->ucast_pending_set = 1;
    
#line 1033 
    rxf->ucast_active_set = 0;
    
#line 1034 
    if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
      
#line 1035 
      bna_bfi_ucast_req(rxf,& rxf->ucast_active_mac,(enum bfi_enet_h2i_msgs)BFI_ENET_H2I_MAC_UCAST_CLR_REQ);
      
#line 1037 
      __retres = 1;
      
#line 1037 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1041 
  __retres = 0;
  return_label: 
#line 1041 
                return __retres;
}


#line 1045  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_promisc_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  
#line 1047 
  struct bna *bna = (rxf->rx)->bna;
  
#line 1050 
  if (((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) != 0U) {
    
#line 1053 
    rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967294U);
    
#line 1053 
    rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967294U);
    
#line 1055 
    rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active | 1U);
    
#line 1056 
    bna_bfi_rx_promisc_req(rxf,(enum bna_status)BNA_STATUS_T_ENABLED);
    
#line 1057 
    __retres = 1;
    
#line 1057 
    goto return_label;
  }
  else 
    
#line 1058 
    if (((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) == 0U) {
      
#line 1061 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967294U);
      
#line 1061 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967294U);
      
#line 1063 
      rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active & 4294967294U);
      
#line 1064 
      bna->promisc_rid = -1;
      
#line 1065 
      bna_bfi_rx_promisc_req(rxf,(enum bna_status)BNA_STATUS_T_DISABLED);
      
#line 1066 
      __retres = 1;
      
#line 1066 
      goto return_label;
    }
    else ;
  
#line 1069 
  __retres = 0;
  return_label: 
#line 1069 
                return __retres;
}


#line 1073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_promisc_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup)
{
  int __retres;
  
#line 1075 
  struct bna *bna = (rxf->rx)->bna;
  
#line 1078 
  if (((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) == 0U) {
    
#line 1080 
    rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967294U);
    
#line 1080 
    rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967294U);
    
#line 1082 
    rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active & 4294967294U);
    
#line 1083 
    bna->promisc_rid = -1;
    
#line 1084 
    if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
      
#line 1085 
      bna_bfi_rx_promisc_req(rxf,(enum bna_status)BNA_STATUS_T_DISABLED);
      
#line 1086 
      __retres = 1;
      
#line 1086 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1091 
  if (((unsigned int)rxf->rxmode_active & 1U) != 0U) {
    
#line 1092 
    rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask | 1U);
    
#line 1092 
    rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending | 1U);
    
#line 1094 
    rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active & 4294967294U);
    
#line 1095 
    if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
      
#line 1096 
      bna_bfi_rx_promisc_req(rxf,(enum bna_status)BNA_STATUS_T_DISABLED);
      
#line 1097 
      __retres = 1;
      
#line 1097 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1101 
  __retres = 0;
  return_label: 
#line 1101 
                return __retres;
}


#line 1105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_allmulti_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  
#line 1108 
  if (((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) != 0U) {
    
#line 1111 
    rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967291U);
    
#line 1111 
    rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967291U);
    
#line 1113 
    rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active | 4U);
    
#line 1114 
    bna_bfi_mcast_filter_req(rxf,(enum bna_status)BNA_STATUS_T_DISABLED);
    
#line 1115 
    __retres = 1;
    
#line 1115 
    goto return_label;
  }
  else 
    
#line 1116 
    if (((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) == 0U) {
      
#line 1119 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967291U);
      
#line 1119 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967291U);
      
#line 1121 
      rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active & 4294967291U);
      
#line 1122 
      bna_bfi_mcast_filter_req(rxf,(enum bna_status)BNA_STATUS_T_ENABLED);
      
#line 1123 
      __retres = 1;
      
#line 1123 
      goto return_label;
    }
    else ;
  
#line 1126 
  __retres = 0;
  return_label: 
#line 1126 
                return __retres;
}


#line 1130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_allmulti_cfg_reset(struct bna_rxf *rxf, enum bna_cleanup_type cleanup)
{
  int __retres;
  
#line 1133 
  if (((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) == 0U) {
    
#line 1135 
    rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967291U);
    
#line 1135 
    rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967291U);
    
#line 1137 
    rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active & 4294967291U);
    
#line 1138 
    if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
      
#line 1139 
      bna_bfi_mcast_filter_req(rxf,(enum bna_status)BNA_STATUS_T_ENABLED);
      
#line 1140 
      __retres = 1;
      
#line 1140 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1145 
  if (((unsigned int)rxf->rxmode_active & 4U) != 0U) {
    
#line 1146 
    rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask | 4U);
    
#line 1146 
    rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending | 4U);
    
#line 1148 
    rxf->rxmode_active = (enum bna_rxmode)((unsigned int)rxf->rxmode_active & 4294967291U);
    
#line 1149 
    if (cleanup == (unsigned int)BNA_HARD_CLEANUP) {
      
#line 1150 
      bna_bfi_mcast_filter_req(rxf,(enum bna_status)BNA_STATUS_T_ENABLED);
      
#line 1151 
      __retres = 1;
      
#line 1151 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1155 
  __retres = 0;
  return_label: 
#line 1155 
                return __retres;
}


#line 1159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_promisc_enable(struct bna_rxf *rxf)
{
  
#line 1161 
  struct bna *bna = (rxf->rx)->bna;
  
#line 1162 
  int ret = 0;
  
#line 1164 
  if ((((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) != 0U) || ((unsigned int)rxf->rxmode_active & 1U) != 0U) ;
  else 
    
#line 1168 
    if (((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) == 0U) {
      
#line 1171 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967294U);
      
#line 1171 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967294U);
    }
    else {
      
#line 1175 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask | 1U);
      
#line 1175 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending | 1U);
      
#line 1177 
      bna->promisc_rid = (rxf->rx)->rid;
      
#line 1178 
      ret = 1;
    }
  
#line 1181 
  return ret;
}


#line 1185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_promisc_disable(struct bna_rxf *rxf)
{
  
#line 1187 
  struct bna *bna = (rxf->rx)->bna;
  
#line 1188 
  int ret = 0;
  
#line 1190 
  if ((((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) == 0U) || ((unsigned int)rxf->rxmode_active & 1U) == 0U) ;
  else 
    
#line 1194 
    if (((unsigned int)rxf->rxmode_pending_bitmask & 1U) != 0U && ((unsigned int)rxf->rxmode_pending & 1U) != 0U) {
      
#line 1197 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967294U);
      
#line 1197 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967294U);
      
#line 1199 
      bna->promisc_rid = -1;
    }
    else 
      
#line 1200 
      if (((unsigned int)rxf->rxmode_active & 1U) != 0U) {
        
#line 1202 
        rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask | 1U);
        
#line 1202 
        rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967294U);
        
#line 1204 
        ret = 1;
      }
      else ;
  
#line 1207 
  return ret;
}


#line 1211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_allmulti_enable(struct bna_rxf *rxf)
{
  
#line 1213 
  int ret = 0;
  
#line 1215 
  if ((((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) != 0U) || ((unsigned int)rxf->rxmode_active & 4U) != 0U) ;
  else 
    
#line 1219 
    if (((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) == 0U) {
      
#line 1222 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967291U);
      
#line 1222 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967291U);
    }
    else {
      
#line 1226 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask | 4U);
      
#line 1226 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending | 4U);
      
#line 1228 
      ret = 1;
    }
  
#line 1231 
  return ret;
}


#line 1235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_allmulti_disable(struct bna_rxf *rxf)
{
  
#line 1237 
  int ret = 0;
  
#line 1239 
  if ((((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) == 0U) || ((unsigned int)rxf->rxmode_active & 4U) == 0U) ;
  else 
    
#line 1243 
    if (((unsigned int)rxf->rxmode_pending_bitmask & 4U) != 0U && ((unsigned int)rxf->rxmode_pending & 4U) != 0U) {
      
#line 1246 
      rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask & 4294967291U);
      
#line 1246 
      rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967291U);
    }
    else 
      
#line 1248 
      if (((unsigned int)rxf->rxmode_active & 4U) != 0U) {
        
#line 1250 
        rxf->rxmode_pending_bitmask = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending_bitmask | 4U);
        
#line 1250 
        rxf->rxmode_pending = (enum bna_rxmode)((unsigned int)rxf->rxmode_pending & 4294967291U);
        
#line 1252 
        ret = 1;
      }
      else ;
  
#line 1255 
  return ret;
}


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rxf_vlan_strip_cfg_apply(struct bna_rxf *rxf)
{
  int __retres;
  
#line 1261 
  if ((int)rxf->vlan_strip_pending != 0) {
    
#line 1262 
    rxf->vlan_strip_pending = (_Bool)0;
    
#line 1263 
    bna_bfi_vlan_strip_enable(rxf);
    
#line 1264 
    __retres = 1;
    
#line 1264 
    goto return_label;
  }
  else ;
  
#line 1267 
  __retres = 0;
  return_label: 
#line 1267 
                return __retres;
}


#line 1309 
static void bna_bfi_rx_enet_start(struct bna_rx *rx);


#line 1310 
static void bna_rx_enet_stop(struct bna_rx *rx);


#line 1311 
static void bna_rx_mod_cb_rx_stopped(void *arg, struct bna_rx *rx);


#line 1313 
static void bna_rx_sm_stopped(struct bna_rx *rx, enum bna_rx_event event);


#line 1313 
static void bna_rx_sm_stopped_entry(struct bna_rx *rx);


#line 1315 
static void bna_rx_sm_start_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1315 
static void bna_rx_sm_start_wait_entry(struct bna_rx *rx);


#line 1317 
static void bna_rx_sm_start_stop_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1317 
static void bna_rx_sm_start_stop_wait_entry(struct bna_rx *rx);


#line 1319 
static void bna_rx_sm_rxf_start_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1319 
static void bna_rx_sm_rxf_start_wait_entry(struct bna_rx *rx);


#line 1321 
static void bna_rx_sm_started(struct bna_rx *rx, enum bna_rx_event event);


#line 1321 
static void bna_rx_sm_started_entry(struct bna_rx *rx);


#line 1323 
static void bna_rx_sm_rxf_stop_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1323 
static void bna_rx_sm_rxf_stop_wait_entry(struct bna_rx *rx);


#line 1325 
static void bna_rx_sm_stop_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1325 
static void bna_rx_sm_stop_wait_entry(struct bna_rx *rx);


#line 1327 
static void bna_rx_sm_cleanup_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1327 
static void bna_rx_sm_cleanup_wait_entry(struct bna_rx *rx);


#line 1329 
static void bna_rx_sm_failed(struct bna_rx *rx, enum bna_rx_event event);


#line 1329 
static void bna_rx_sm_failed_entry(struct bna_rx *rx);


#line 1331 
static void bna_rx_sm_quiesce_wait(struct bna_rx *rx, enum bna_rx_event event);


#line 1331 
static void bna_rx_sm_quiesce_wait_entry(struct bna_rx *rx);


#line 1334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_stopped_entry(struct bna_rx *rx)
{
  
#line 1336 
  if (rx->stop_cbfn != (void (*)(void *, struct bna_rx *))0) {
    void (*cbfn)(void *, struct bna_rx *);
    void *cbarg;
    
#line 1336 
    cbfn = rx->stop_cbfn;
    
#line 1336 
    cbarg = rx->stop_cbarg;
    
#line 1336 
    rx->stop_cbfn = (void (*)(void *, struct bna_rx *))0;
    
#line 1336 
    rx->stop_cbarg = (void *)0;
    
#line 1336 
    (*cbfn)(cbarg,rx);
  }
  else ;
  
#line 1338 
  return;
}


#line 1339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_stopped(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1342 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 1343 
    ;
    
#line 1344 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_start_wait);
    
#line 1344 
    bna_rx_sm_start_wait_entry(rx);
    
#line 1345 
    goto ldv_48951;
    case (unsigned int)2: 
#line 1347 
    ;
    
#line 1348 
    if (rx->stop_cbfn != (void (*)(void *, struct bna_rx *))0) {
      void (*cbfn)(void *, struct bna_rx *);
      void *cbarg;
      
#line 1348 
      cbfn = rx->stop_cbfn;
      
#line 1348 
      cbarg = rx->stop_cbarg;
      
#line 1348 
      rx->stop_cbfn = (void (*)(void *, struct bna_rx *))0;
      
#line 1348 
      rx->stop_cbarg = (void *)0;
      
#line 1348 
      (*cbfn)(cbarg,rx);
    }
    else ;
    
#line 1349 
    goto ldv_48951;
    case (unsigned int)3: 
#line 1351 
    ;
    
#line 1353 
    goto ldv_48951;
    default: 
#line 1355 
    ;
    
#line 1356 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1356,(unsigned int)event);
    
#line 1357 
    goto ldv_48951;
  }
  ldv_48951: 
#line 1359 
  ;
  
#line 1360 
  return;
}


#line 1361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_start_wait_entry(struct bna_rx *rx)
{
  
#line 1363 
  bna_bfi_rx_enet_start(rx);
  
#line 1364 
  return;
}


#line 1367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_stop_wait_entry(struct bna_rx *rx)
{
  
#line 1369 
  return;
}


#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_stop_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1374 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1375 
    ;
    case (unsigned int)5: 
#line 1376 
    ;
    
#line 1377 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_cleanup_wait);
    
#line 1377 
    bna_rx_sm_cleanup_wait_entry(rx);
    
#line 1378 
    (*(rx->rx_cleanup_cbfn))((rx->bna)->bnad,rx);
    
#line 1379 
    goto ldv_48971;
    case (unsigned int)4: 
#line 1381 
    ;
    
#line 1382 
    bna_rx_enet_stop(rx);
    
#line 1383 
    goto ldv_48971;
    default: 
#line 1385 
    ;
    
#line 1386 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1386,(unsigned int)event);
    
#line 1387 
    goto ldv_48971;
  }
  ldv_48971: 
#line 1389 
  ;
  
#line 1390 
  return;
}


#line 1391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_start_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1394 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1395 
    ;
    
#line 1396 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_start_stop_wait);
    
#line 1396 
    bna_rx_sm_start_stop_wait_entry(rx);
    
#line 1397 
    goto ldv_48979;
    case (unsigned int)3: 
#line 1399 
    ;
    
#line 1400 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_stopped);
    
#line 1400 
    bna_rx_sm_stopped_entry(rx);
    
#line 1401 
    goto ldv_48979;
    case (unsigned int)4: 
#line 1403 
    ;
    
#line 1404 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_rxf_start_wait);
    
#line 1404 
    bna_rx_sm_rxf_start_wait_entry(rx);
    
#line 1405 
    goto ldv_48979;
    default: 
#line 1407 
    ;
    
#line 1408 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1408,(unsigned int)event);
    
#line 1409 
    goto ldv_48979;
  }
  ldv_48979: 
#line 1411 
  ;
  
#line 1412 
  return;
}


#line 1413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_rxf_start_wait_entry(struct bna_rx *rx)
{
  
#line 1415 
  (*(rx->rx_post_cbfn))((rx->bna)->bnad,rx);
  
#line 1416 
  bna_rxf_start(& rx->rxf);
  
#line 1417 
  return;
}


#line 1420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_rxf_stop_wait_entry(struct bna_rx *rx)
{
  
#line 1422 
  return;
}


#line 1425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_rxf_stop_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1427 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1428 
    ;
    
#line 1429 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_cleanup_wait);
    
#line 1429 
    bna_rx_sm_cleanup_wait_entry(rx);
    
#line 1430 
    bna_rxf_fail(& rx->rxf);
    
#line 1431 
    if (rx->rx_stall_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) 
      
#line 1431 
      (*(rx->rx_stall_cbfn))((rx->bna)->bnad,rx); else ;
    
#line 1432 
    (*(rx->rx_cleanup_cbfn))((rx->bna)->bnad,rx);
    
#line 1433 
    goto ldv_48994;
    case (unsigned int)6: 
#line 1435 
    ;
    
#line 1436 
    bna_rxf_stop(& rx->rxf);
    
#line 1437 
    goto ldv_48994;
    case (unsigned int)7: 
#line 1439 
    ;
    
#line 1440 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_stop_wait);
    
#line 1440 
    bna_rx_sm_stop_wait_entry(rx);
    
#line 1441 
    if (rx->rx_stall_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) 
      
#line 1441 
      (*(rx->rx_stall_cbfn))((rx->bna)->bnad,rx); else ;
    
#line 1442 
    bna_rx_enet_stop(rx);
    
#line 1443 
    goto ldv_48994;
    default: 
#line 1445 
    ;
    
#line 1446 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1446,(unsigned int)event);
    
#line 1447 
    goto ldv_48994;
  }
  ldv_48994: 
#line 1450 
  ;
  
#line 1451 
  return;
}


#line 1453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_start_stop_wait_entry(struct bna_rx *rx)
{
  
#line 1455 
  return;
}


#line 1458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_start_stop_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1460 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1461 
    ;
    case (unsigned int)5: 
#line 1462 
    ;
    
#line 1463 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_stopped);
    
#line 1463 
    bna_rx_sm_stopped_entry(rx);
    
#line 1464 
    goto ldv_49007;
    case (unsigned int)4: 
#line 1466 
    ;
    
#line 1467 
    bna_rx_enet_stop(rx);
    
#line 1468 
    goto ldv_49007;
    default: 
#line 1470 
    ;
    
#line 1471 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1471,(unsigned int)event);
  }
  ldv_49007: 
#line 1473 
  ;
  
#line 1474 
  return;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_started_entry(struct bna_rx *rx)
{
  struct bna_rxp *rxp;
  struct bna_rxp *tmp;
  struct bna_rxp *tmp_0;
  
#line 1479 
  int is_regular = rx->type == (unsigned int)BNA_RX_T_REGULAR;
  {
    
#line 1482 
    struct list_head const *__mptr = (struct list_head const *)rx->rxp_q.next;
    
#line 1482 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 1482 
  rxp = tmp;
  
#line 1482 
  goto ldv_49022;
  ldv_49021: 
#line 1483 
  ;
  {
    u32 intx_mask;
    
#line 1483 
    struct bna_ib *ib = & rxp->cq.ib;
    
#line 1483 
    if (ib->intr_type == (unsigned int)BNA_INTR_T_INTX) {
      
#line 1483 
      intx_mask = readl((void const volatile *)(rx->bna)->regs.fn_int_mask);
      
#line 1483 
      writel(4294967295U,(void volatile *)(rx->bna)->regs.fn_int_mask);
      
#line 1483 
      intx_mask = (unsigned int)(~ ib->intr_vector) & intx_mask;
      
#line 1483 
      writel(intx_mask,(void volatile *)(rx->bna)->regs.fn_int_mask);
    }
    else ;
    
#line 1483 
    ib->door_bell.doorbell_ack = (unsigned int)((int)ib->coalescing_timeo << 16) | 2147483648U;
    
#line 1483 
    if (is_regular != 0) 
#line 1483 
                         writel(ib->door_bell.doorbell_ack,(void volatile *)ib->door_bell.doorbell_addr); else ;
  }
  {
    
#line 1482 
    struct list_head const *__mptr_0 = (struct list_head const *)rxp->qe.next;
    
#line 1482 
    tmp_0 = (struct bna_rxp *)__mptr_0;
  }
  
#line 1482 
  rxp = tmp_0;
  ldv_49022: 
#line 1484 
  ;
  
#line 1482 
  if (& rxp->qe != & rx->rxp_q) 
#line 1484 
                                goto ldv_49021; else 
#line 1487 
                                                     goto ldv_49023;
  ldv_49023: 
#line 1488 
  ;
  
#line 1485 
  bna_ethport_cb_rx_started(& (rx->bna)->ethport);
  
#line 1486 
  return;
}


#line 1489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_started(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1491 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1492 
    ;
    
#line 1493 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_rxf_stop_wait);
    
#line 1493 
    bna_rx_sm_rxf_stop_wait_entry(rx);
    
#line 1494 
    bna_ethport_cb_rx_stopped(& (rx->bna)->ethport);
    
#line 1495 
    bna_rxf_stop(& rx->rxf);
    
#line 1496 
    goto ldv_49029;
    case (unsigned int)3: 
#line 1498 
    ;
    
#line 1499 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_failed);
    
#line 1499 
    bna_rx_sm_failed_entry(rx);
    
#line 1500 
    bna_ethport_cb_rx_stopped(& (rx->bna)->ethport);
    
#line 1501 
    bna_rxf_fail(& rx->rxf);
    
#line 1502 
    if (rx->rx_stall_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) 
      
#line 1502 
      (*(rx->rx_stall_cbfn))((rx->bna)->bnad,rx); else ;
    
#line 1503 
    (*(rx->rx_cleanup_cbfn))((rx->bna)->bnad,rx);
    
#line 1504 
    goto ldv_49029;
    default: 
#line 1506 
    ;
    
#line 1507 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1507,(unsigned int)event);
    
#line 1508 
    goto ldv_49029;
  }
  ldv_49029: 
#line 1510 
  ;
  
#line 1511 
  return;
}


#line 1512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_rxf_start_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1515 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1516 
    ;
    
#line 1517 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_rxf_stop_wait);
    
#line 1517 
    bna_rx_sm_rxf_stop_wait_entry(rx);
    
#line 1518 
    goto ldv_49037;
    case (unsigned int)3: 
#line 1520 
    ;
    
#line 1521 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_failed);
    
#line 1521 
    bna_rx_sm_failed_entry(rx);
    
#line 1522 
    bna_rxf_fail(& rx->rxf);
    
#line 1523 
    if (rx->rx_stall_cbfn != (void (*)(struct bnad *, struct bna_rx *))0) 
      
#line 1523 
      (*(rx->rx_stall_cbfn))((rx->bna)->bnad,rx); else ;
    
#line 1524 
    (*(rx->rx_cleanup_cbfn))((rx->bna)->bnad,rx);
    
#line 1525 
    goto ldv_49037;
    case (unsigned int)6: 
#line 1527 
    ;
    
#line 1528 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_started);
    
#line 1528 
    bna_rx_sm_started_entry(rx);
    
#line 1529 
    goto ldv_49037;
    default: 
#line 1531 
    ;
    
#line 1532 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1532,(unsigned int)event);
    
#line 1533 
    goto ldv_49037;
  }
  ldv_49037: 
#line 1535 
  ;
  
#line 1536 
  return;
}


#line 1538  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_cleanup_wait_entry(struct bna_rx *rx)
{
  
#line 1540 
  return;
}


#line 1543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_cleanup_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1545 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 1546 
    ;
    case (unsigned int)7: 
#line 1547 
    ;
    
#line 1549 
    goto ldv_49050;
    case (unsigned int)8: 
#line 1551 
    ;
    
#line 1552 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_stopped);
    
#line 1552 
    bna_rx_sm_stopped_entry(rx);
    
#line 1553 
    goto ldv_49050;
    default: 
#line 1555 
    ;
    
#line 1556 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1556,(unsigned int)event);
    
#line 1557 
    goto ldv_49050;
  }
  ldv_49050: 
#line 1559 
  ;
  
#line 1560 
  return;
}


#line 1562  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_failed_entry(struct bna_rx *rx)
{
  
#line 1564 
  return;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_failed(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1569 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 1570 
    ;
    
#line 1571 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_quiesce_wait);
    
#line 1571 
    bna_rx_sm_quiesce_wait_entry(rx);
    
#line 1572 
    goto ldv_49061;
    case (unsigned int)2: 
#line 1574 
    ;
    
#line 1575 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_cleanup_wait);
    
#line 1575 
    bna_rx_sm_cleanup_wait_entry(rx);
    
#line 1576 
    goto ldv_49061;
    case (unsigned int)3: 
#line 1578 
    ;
    case (unsigned int)6: 
#line 1579 
    ;
    case (unsigned int)7: 
#line 1580 
    ;
    
#line 1582 
    goto ldv_49061;
    case (unsigned int)8: 
#line 1584 
    ;
    
#line 1585 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_stopped);
    
#line 1585 
    bna_rx_sm_stopped_entry(rx);
    
#line 1586 
    goto ldv_49061;
    default: 
#line 1588 
    ;
    
#line 1589 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1589,(unsigned int)event);
    
#line 1590 
    goto ldv_49061;
  }
  ldv_49061: 
#line 1591 
  ;
  
#line 1592 
  return;
}


#line 1594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_quiesce_wait_entry(struct bna_rx *rx)
{
  
#line 1596 
  return;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_sm_quiesce_wait(struct bna_rx *rx, enum bna_rx_event event)
{
  
#line 1601 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 1602 
    ;
    
#line 1603 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_cleanup_wait);
    
#line 1603 
    bna_rx_sm_cleanup_wait_entry(rx);
    
#line 1604 
    goto ldv_49076;
    case (unsigned int)3: 
#line 1606 
    ;
    
#line 1607 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_failed);
    
#line 1607 
    bna_rx_sm_failed_entry(rx);
    
#line 1608 
    goto ldv_49076;
    case (unsigned int)8: 
#line 1610 
    ;
    
#line 1611 
    rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_start_wait);
    
#line 1611 
    bna_rx_sm_start_wait_entry(rx);
    
#line 1612 
    goto ldv_49076;
    default: 
#line 1614 
    ;
    
#line 1615 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",1615,(unsigned int)event);
    
#line 1616 
    goto ldv_49076;
  }
  ldv_49076: 
#line 1618 
  ;
  
#line 1619 
  return;
}


#line 1621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rx_enet_start(struct bna_rx *rx)
{
  int i;
  int tmp;
  
#line 1623 
  struct bfi_enet_rx_cfg_req *cfg_req = & rx->bfi_enet_cmd.cfg_req;
  
#line 1624 
  struct bna_rxp *rxp = (struct bna_rxp *)0;
  
#line 1625 
  struct bna_rxq *q0 = (struct bna_rxq *)0;
  
#line 1625 
  struct bna_rxq *q1 = (struct bna_rxq *)0;
  
#line 1628 
  cfg_req->mh.msg_class = (unsigned char)24U;
  
#line 1628 
  cfg_req->mh.msg_id = (unsigned char)1U;
  
#line 1628 
  cfg_req->mh.msg_token = (unsigned short)0U;
  
#line 1628 
  cfg_req->mh.enet_id = (unsigned char)rx->rid;
  
#line 1630 
  cfg_req->mh.num_entries = (unsigned short)5376U;
  
#line 1633 
  tmp = bna_enet_mtu_get(& (rx->bna)->enet);
  
#line 1633 
  cfg_req->rx_cfg.frame_size = (unsigned short)tmp;
  
#line 1634 
  cfg_req->num_queue_sets = (unsigned char)rx->num_paths;
  
#line 1635 
  i = 0;
  
#line 1635 
  goto ldv_49105;
  ldv_49104: 
#line 1636 
  ;
  
#line 1636 
  if (rxp != (struct bna_rxp *)0) {
    struct bna_rxp *tmp_0;
    {
      
#line 1636 
      struct list_head const *__mptr = (struct list_head const *)rxp->qe.next;
      
#line 1636 
      tmp_0 = (struct bna_rxp *)__mptr;
    }
    
#line 1636 
    rxp = tmp_0;
  }
  else {
    struct bna_rxp *tmp_1;
    {
      
#line 1637 
      struct list_head const *__mptr_0 = (struct list_head const *)rx->rxp_q.next;
      
#line 1637 
      tmp_1 = (struct bna_rxp *)__mptr_0;
    }
    
#line 1636 
    rxp = tmp_1;
  }
  
#line 1638 
  switch ((unsigned int)rxp->type) {
    case (unsigned int)1: 
#line 1638 
    ;
    
#line 1638 
    q0 = rxp->rxq.single.only;
    
#line 1638 
    q1 = (struct bna_rxq *)0;
    
#line 1638 
    goto ldv_49093;
    case (unsigned int)2: 
#line 1638 
    ;
    
#line 1638 
    q0 = rxp->rxq.slr.large;
    
#line 1638 
    q1 = rxp->rxq.slr.small;
    
#line 1638 
    goto ldv_49093;
    case (unsigned int)3: 
#line 1638 
    ;
    
#line 1638 
    q0 = rxp->rxq.hds.data;
    
#line 1638 
    q1 = rxp->rxq.hds.hdr;
    
#line 1638 
    goto ldv_49093;
  }
  ldv_49093: 
#line 1638 
  ;
  
#line 1639 
  switch ((unsigned int)rxp->type) {
    case (unsigned int)2: 
#line 1640 
    ;
    case (unsigned int)3: 
#line 1641 
    ;
    {
      
#line 1643 
      struct bna_dma_addr cur_q_addr = *((struct bna_dma_addr *)q1->qpt.kv_qpt_ptr);
      
#line 1643 
      cfg_req->q_cfg[i].qs.q.pg_tbl.a32.addr_lo = q1->qpt.hw_qpt_ptr.lsb;
      
#line 1643 
      cfg_req->q_cfg[i].qs.q.pg_tbl.a32.addr_hi = q1->qpt.hw_qpt_ptr.msb;
      
#line 1643 
      cfg_req->q_cfg[i].qs.q.first_entry.a32.addr_lo = cur_q_addr.lsb;
      
#line 1643 
      cfg_req->q_cfg[i].qs.q.first_entry.a32.addr_hi = cur_q_addr.msb;
      
#line 1643 
      if (0 != 0) 
#line 1643 
                  cfg_req->q_cfg[i].qs.q.pages = (unsigned short)(((int)((unsigned short)q1->qpt.page_count) << 8) | ((int)((unsigned short)q1->qpt.page_count) >> 8)); else 
                                                                    
#line 1643 
                                                                    cfg_req->q_cfg[i].qs.q.pages = __fswab16((unsigned short)((int)((unsigned short)q1->qpt.page_count)));
      
#line 1643 
      if (0 != 0) 
#line 1643 
                  cfg_req->q_cfg[i].qs.q.page_sz = (unsigned short)(((int)((unsigned short)q1->qpt.page_size) << 8) | ((int)((unsigned short)q1->qpt.page_size) >> 8)); else 
                                                                    
#line 1643 
                                                                    cfg_req->q_cfg[i].qs.q.page_sz = __fswab16((unsigned short)((int)((unsigned short)q1->qpt.page_size)));
    }
    
#line 1645 
    if (0 != 0) 
#line 1645 
                cfg_req->q_cfg[i].qs.rx_buffer_size = (unsigned short)(((int)((unsigned short)q1->buffer_size) << 8) | ((int)((unsigned short)q1->buffer_size) >> 8)); else 
                                                                    
#line 1646 
                                                                    cfg_req->q_cfg[i].qs.rx_buffer_size = __fswab16((unsigned short)((int)((unsigned short)q1->buffer_size)));
    case (unsigned int)1: 
#line 1649 
    ;
    {
      
#line 1651 
      struct bna_dma_addr cur_q_addr_0 = *((struct bna_dma_addr *)q0->qpt.kv_qpt_ptr);
      
#line 1651 
      cfg_req->q_cfg[i].ql.q.pg_tbl.a32.addr_lo = q0->qpt.hw_qpt_ptr.lsb;
      
#line 1651 
      cfg_req->q_cfg[i].ql.q.pg_tbl.a32.addr_hi = q0->qpt.hw_qpt_ptr.msb;
      
#line 1651 
      cfg_req->q_cfg[i].ql.q.first_entry.a32.addr_lo = cur_q_addr_0.lsb;
      
#line 1651 
      cfg_req->q_cfg[i].ql.q.first_entry.a32.addr_hi = cur_q_addr_0.msb;
      
#line 1651 
      if (0 != 0) 
#line 1651 
                  cfg_req->q_cfg[i].ql.q.pages = (unsigned short)(((int)((unsigned short)q0->qpt.page_count) << 8) | ((int)((unsigned short)q0->qpt.page_count) >> 8)); else 
                                                                    
#line 1651 
                                                                    cfg_req->q_cfg[i].ql.q.pages = __fswab16((unsigned short)((int)((unsigned short)q0->qpt.page_count)));
      
#line 1651 
      if (0 != 0) 
#line 1651 
                  cfg_req->q_cfg[i].ql.q.page_sz = (unsigned short)(((int)((unsigned short)q0->qpt.page_size) << 8) | ((int)((unsigned short)q0->qpt.page_size) >> 8)); else 
                                                                    
#line 1651 
                                                                    cfg_req->q_cfg[i].ql.q.page_sz = __fswab16((unsigned short)((int)((unsigned short)q0->qpt.page_size)));
    }
    
#line 1653 
    if (q0->multi_buffer != (unsigned int)BNA_STATUS_T_DISABLED) 
#line 1659 
                                                                 cfg_req->rx_cfg.multi_buffer = (unsigned char)1U; else 
                                                                    
#line 1662 
                                                                    q0->buffer_size = bna_enet_mtu_get(& (rx->bna)->enet);
    
#line 1664 
    if (0 != 0) 
#line 1664 
                cfg_req->q_cfg[i].ql.rx_buffer_size = (unsigned short)(((int)((unsigned short)q0->buffer_size) << 8) | ((int)((unsigned short)q0->buffer_size) >> 8)); else 
                                                                    
#line 1665 
                                                                    cfg_req->q_cfg[i].ql.rx_buffer_size = __fswab16((unsigned short)((int)((unsigned short)q0->buffer_size)));
    
#line 1666 
    goto ldv_49101;
    default: 
#line 1668 
    ;
    
#line 1671 
    ldv_inline_asm();
    
#line 1669 
    ;
  }
  ldv_49101: 
#line 1672 
  ;
  {
    
#line 1672 
    struct bna_dma_addr cur_q_addr_1 = *((struct bna_dma_addr *)rxp->cq.qpt.kv_qpt_ptr);
    
#line 1672 
    cfg_req->q_cfg[i].cq.q.pg_tbl.a32.addr_lo = rxp->cq.qpt.hw_qpt_ptr.lsb;
    
#line 1672 
    cfg_req->q_cfg[i].cq.q.pg_tbl.a32.addr_hi = rxp->cq.qpt.hw_qpt_ptr.msb;
    
#line 1672 
    cfg_req->q_cfg[i].cq.q.first_entry.a32.addr_lo = cur_q_addr_1.lsb;
    
#line 1672 
    cfg_req->q_cfg[i].cq.q.first_entry.a32.addr_hi = cur_q_addr_1.msb;
    
#line 1672 
    if (0 != 0) 
#line 1672 
                cfg_req->q_cfg[i].cq.q.pages = (unsigned short)(((int)((unsigned short)rxp->cq.qpt.page_count) << 8) | ((int)((unsigned short)rxp->cq.qpt.page_count) >> 8)); else 
                                                                    
#line 1672 
                                                                    cfg_req->q_cfg[i].cq.q.pages = __fswab16((unsigned short)((int)((unsigned short)rxp->cq.qpt.page_count)));
    
#line 1672 
    if (0 != 0) 
#line 1672 
                cfg_req->q_cfg[i].cq.q.page_sz = (unsigned short)(((int)((unsigned short)rxp->cq.qpt.page_size) << 8) | ((int)((unsigned short)rxp->cq.qpt.page_size) >> 8)); else 
                                                                    
#line 1672 
                                                                    cfg_req->q_cfg[i].cq.q.page_sz = __fswab16((unsigned short)((int)((unsigned short)rxp->cq.qpt.page_size)));
  }
  
#line 1675 
  cfg_req->q_cfg[i].ib.index_addr.a32.addr_lo = rxp->cq.ib.ib_seg_host_addr.lsb;
  
#line 1677 
  cfg_req->q_cfg[i].ib.index_addr.a32.addr_hi = rxp->cq.ib.ib_seg_host_addr.msb;
  
#line 1679 
  if (0 != 0) 
#line 1679 
              cfg_req->q_cfg[i].ib.intr.msix_index = (unsigned short)(((int)((unsigned short)rxp->cq.ib.intr_vector) << 8) | ((int)((unsigned short)rxp->cq.ib.intr_vector) >> 8)); else 
                                                                    
#line 1680 
                                                                    cfg_req->q_cfg[i].ib.intr.msix_index = __fswab16((unsigned short)((int)((unsigned short)rxp->cq.ib.intr_vector)));
  
#line 1635 
  i += 1;
  ldv_49105: 
#line 1636 
  ;
  
#line 1635 
  if (rx->num_paths > i) 
#line 1637 
                         goto ldv_49104; else 
#line 1640 
                                              goto ldv_49106;
  ldv_49106: 
#line 1641 
  ;
  
#line 1683 
  cfg_req->ib_cfg.int_pkt_dma = (unsigned char)0U;
  
#line 1684 
  cfg_req->ib_cfg.int_enabled = (unsigned char)1U;
  
#line 1685 
  cfg_req->ib_cfg.int_pkt_enabled = (unsigned char)0U;
  
#line 1686 
  cfg_req->ib_cfg.continuous_coalescing = (unsigned char)0U;
  
#line 1687 
  cfg_req->ib_cfg.msix = (unsigned char)(rxp->cq.ib.intr_type == (unsigned int)BNA_INTR_T_MSIX);
  
#line 1690 
  if (0 != 0) 
#line 1690 
              cfg_req->ib_cfg.coalescing_timeout = ((unsigned int)rxp->cq.ib.coalescing_timeo << 24) | (((unsigned int)rxp->cq.ib.coalescing_timeo << 8) & 16711680U); else 
                                                                    
#line 1691 
                                                                    cfg_req->ib_cfg.coalescing_timeout = __fswab32((unsigned int)rxp->cq.ib.coalescing_timeo);
  
#line 1692 
  if (0 != 0) 
#line 1692 
              cfg_req->ib_cfg.inter_pkt_timeout = ((((unsigned int)rxp->cq.ib.interpkt_timeo << 24) | (((unsigned int)rxp->cq.ib.interpkt_timeo << 8) & 16711680U)) | (((unsigned int)rxp->cq.ib.interpkt_timeo >> 8) & 65280U)) | ((unsigned int)rxp->cq.ib.interpkt_timeo >> 24); else 
                                                                    
#line 1693 
                                                                    cfg_req->ib_cfg.inter_pkt_timeout = __fswab32((unsigned int)rxp->cq.ib.interpkt_timeo);
  
#line 1694 
  cfg_req->ib_cfg.inter_pkt_count = (unsigned char)rxp->cq.ib.interpkt_count;
  
#line 1696 
  switch ((unsigned int)rxp->type) {
    case (unsigned int)2: 
#line 1697 
    ;
    
#line 1698 
    cfg_req->rx_cfg.rxq_type = (unsigned char)2U;
    
#line 1699 
    goto ldv_49108;
    case (unsigned int)3: 
#line 1701 
    ;
    
#line 1702 
    cfg_req->rx_cfg.rxq_type = (unsigned char)3U;
    
#line 1703 
    cfg_req->rx_cfg.hds.type = (unsigned char)rx->hds_cfg.hdr_type;
    
#line 1704 
    cfg_req->rx_cfg.hds.force_offset = (unsigned char)rx->hds_cfg.forced_offset;
    
#line 1705 
    cfg_req->rx_cfg.hds.max_header_size = (unsigned char)rx->hds_cfg.forced_offset;
    
#line 1706 
    goto ldv_49108;
    case (unsigned int)1: 
#line 1708 
    ;
    
#line 1709 
    cfg_req->rx_cfg.rxq_type = (unsigned char)1U;
    
#line 1710 
    goto ldv_49108;
    default: 
#line 1712 
    ;
    
#line 1715 
    ldv_inline_asm();
    
#line 1713 
    ;
  }
  ldv_49108: 
#line 1715 
  ;
  
#line 1715 
  cfg_req->rx_cfg.strip_vlan = (unsigned char)rx->rxf.vlan_strip_status;
  
#line 1717 
  rx->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 1717 
  rx->msgq_cmd.cbarg = (void *)0;
  
#line 1717 
  rx->msgq_cmd.msg_size = 1324UL;
  
#line 1717 
  rx->msgq_cmd.msg_hdr = & cfg_req->mh;
  
#line 1719 
  bfa_msgq_cmd_post(& (rx->bna)->msgq,& rx->msgq_cmd);
  
#line 1720 
  return;
}


#line 1723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_rx_enet_stop(struct bna_rx *rx)
{
  
#line 1725 
  struct bfi_enet_req *req = & rx->bfi_enet_cmd.req;
  
#line 1727 
  req->mh.msg_class = (unsigned char)24U;
  
#line 1727 
  req->mh.msg_id = (unsigned char)2U;
  
#line 1727 
  req->mh.msg_token = (unsigned short)0U;
  
#line 1727 
  req->mh.enet_id = (unsigned char)rx->rid;
  
#line 1729 
  req->mh.num_entries = (unsigned short)256U;
  
#line 1731 
  rx->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 1731 
  rx->msgq_cmd.cbarg = (void *)0;
  
#line 1731 
  rx->msgq_cmd.msg_size = 8UL;
  
#line 1731 
  rx->msgq_cmd.msg_hdr = & req->mh;
  
#line 1733 
  bfa_msgq_cmd_post(& (rx->bna)->msgq,& rx->msgq_cmd);
  
#line 1734 
  return;
}


#line 1737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_enet_stop(struct bna_rx *rx)
{
  struct bna_rxp *rxp;
  struct bna_rxp *tmp;
  struct bna_rxp *tmp_0;
  {
    
#line 1742 
    struct list_head const *__mptr = (struct list_head const *)rx->rxp_q.next;
    
#line 1742 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 1742 
  rxp = tmp;
  
#line 1742 
  goto ldv_49127;
  ldv_49126: 
#line 1743 
  ;
  {
    u32 intx_mask;
    
#line 1743 
    struct bna_ib *ib = & rxp->cq.ib;
    
#line 1743 
    writel(1073741824U,(void volatile *)ib->door_bell.doorbell_addr);
    
#line 1743 
    if (ib->intr_type == (unsigned int)BNA_INTR_T_INTX) {
      
#line 1743 
      intx_mask = readl((void const volatile *)(rx->bna)->regs.fn_int_mask);
      
#line 1743 
      writel(4294967295U,(void volatile *)(rx->bna)->regs.fn_int_mask);
      
#line 1743 
      intx_mask = (unsigned int)ib->intr_vector | intx_mask;
      
#line 1743 
      writel(intx_mask,(void volatile *)(rx->bna)->regs.fn_int_mask);
    }
    else ;
  }
  {
    
#line 1742 
    struct list_head const *__mptr_0 = (struct list_head const *)rxp->qe.next;
    
#line 1742 
    tmp_0 = (struct bna_rxp *)__mptr_0;
  }
  
#line 1742 
  rxp = tmp_0;
  ldv_49127: 
#line 1744 
  ;
  
#line 1742 
  if (& rxp->qe != & rx->rxp_q) 
#line 1744 
                                goto ldv_49126; else 
#line 1747 
                                                     goto ldv_49128;
  ldv_49128: 
#line 1748 
  ;
  
#line 1745 
  bna_bfi_rx_enet_stop(rx);
  
#line 1746 
  return;
}


#line 1749  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static int bna_rx_res_check(struct bna_rx_mod *rx_mod, struct bna_rx_config *rx_cfg)
{
  int __retres;
  
#line 1751 
  if ((rx_mod->rx_free_count == 0 || rx_mod->rxp_free_count == 0) || rx_mod->rxq_free_count == 0) {
    
#line 1754 
    __retres = 0;
    
#line 1754 
    goto return_label;
  }
  else ;
  
#line 1756 
  if (rx_cfg->rxp_type == (unsigned int)BNA_RXP_SINGLE) {
    
#line 1757 
    if (rx_mod->rxp_free_count < rx_cfg->num_paths || rx_mod->rxq_free_count < rx_cfg->num_paths) {
      
#line 1759 
      __retres = 0;
      
#line 1759 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 1761 
    if (rx_mod->rxp_free_count < rx_cfg->num_paths || rx_mod->rxq_free_count < rx_cfg->num_paths * 2) {
      
#line 1763 
      __retres = 0;
      
#line 1763 
      goto return_label;
    }
    else ;
  
#line 1766 
  __retres = 1;
  return_label: 
#line 1766 
                return __retres;
}


#line 1770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static struct bna_rxq *bna_rxq_get(struct bna_rx_mod *rx_mod)
{
  struct bna_rxq *tmp;
  
#line 1772 
  struct bna_rxq *rxq = (struct bna_rxq *)0;
  {
    
#line 1774 
    struct list_head const *__mptr = (struct list_head const *)rx_mod->rxq_free_q.next;
    
#line 1774 
    tmp = (struct bna_rxq *)__mptr;
  }
  
#line 1774 
  rxq = tmp;
  
#line 1775 
  list_del(& rxq->qe);
  
#line 1776 
  rx_mod->rxq_free_count -= 1;
  
#line 1778 
  return rxq;
}


#line 1782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxq_put(struct bna_rx_mod *rx_mod, struct bna_rxq *rxq)
{
  
#line 1784 
  list_add_tail(& rxq->qe,& rx_mod->rxq_free_q);
  
#line 1785 
  rx_mod->rxq_free_count += 1;
  
#line 1786 
  return;
}


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static struct bna_rxp *bna_rxp_get(struct bna_rx_mod *rx_mod)
{
  struct bna_rxp *tmp;
  
#line 1791 
  struct bna_rxp *rxp = (struct bna_rxp *)0;
  {
    
#line 1793 
    struct list_head const *__mptr = (struct list_head const *)rx_mod->rxp_free_q.next;
    
#line 1793 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 1793 
  rxp = tmp;
  
#line 1794 
  list_del(& rxp->qe);
  
#line 1795 
  rx_mod->rxp_free_count -= 1;
  
#line 1797 
  return rxp;
}


#line 1801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxp_put(struct bna_rx_mod *rx_mod, struct bna_rxp *rxp)
{
  
#line 1803 
  list_add_tail(& rxp->qe,& rx_mod->rxp_free_q);
  
#line 1804 
  rx_mod->rxp_free_count += 1;
  
#line 1805 
  return;
}


#line 1808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static struct bna_rx *bna_rx_get(struct bna_rx_mod *rx_mod, enum bna_rx_type type)
{
  int tmp;
  
#line 1810 
  struct bna_rx *rx = (struct bna_rx *)0;
  
#line 1812 
  tmp = list_empty((struct list_head const *)(& rx_mod->rx_free_q));
  
#line 1812 
  if ((long)(tmp != 0) != 0L) {
    
#line 1814 
    ldv_inline_asm();
    
#line 1812 
    ;
  }
  else ;
  
#line 1813 
  if (type == (unsigned int)BNA_RX_T_REGULAR) {
    struct bna_rx *tmp_0;
    {
      
#line 1814 
      struct list_head const *__mptr = (struct list_head const *)rx_mod->rx_free_q.next;
      
#line 1814 
      tmp_0 = (struct bna_rx *)__mptr;
    }
    
#line 1814 
    rx = tmp_0;
  }
  else {
    struct bna_rx *tmp_1;
    {
      
#line 1816 
      struct list_head const *__mptr_0 = (struct list_head const *)rx_mod->rx_free_q.prev;
      
#line 1816 
      tmp_1 = (struct bna_rx *)__mptr_0;
    }
    
#line 1816 
    rx = tmp_1;
  }
  
#line 1818 
  rx_mod->rx_free_count -= 1;
  
#line 1819 
  list_move_tail(& rx->qe,& rx_mod->rx_active_q);
  
#line 1820 
  rx->type = type;
  
#line 1822 
  return rx;
}


#line 1826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_put(struct bna_rx_mod *rx_mod, struct bna_rx *rx)
{
  struct list_head *qe;
  
#line 1830 
  qe = rx_mod->rx_free_q.prev;
  
#line 1830 
  goto ldv_49169;
  ldv_49168: 
#line 1831 
  ;
  
#line 1831 
  if (((struct bna_rx *)qe)->rid < rx->rid) 
#line 1832 
                                            goto ldv_49167; else ;
  
#line 1830 
  qe = qe->prev;
  ldv_49169: 
#line 1831 
  ;
  
#line 1830 
  if (& rx_mod->rx_free_q != qe) 
#line 1832 
                                 goto ldv_49168; else 
#line 1835 
                                                      goto ldv_49167;
  ldv_49167: 
#line 1836 
  ;
  
#line 1834 
  list_add(& rx->qe,qe);
  
#line 1835 
  rx_mod->rx_free_count += 1;
  
#line 1836 
  return;
}


#line 1839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxp_add_rxqs(struct bna_rxp *rxp, struct bna_rxq *q0, struct bna_rxq *q1)
{
  
#line 1842 
  switch ((unsigned int)rxp->type) {
    case (unsigned int)1: 
#line 1843 
    ;
    
#line 1844 
    rxp->rxq.single.only = q0;
    
#line 1845 
    rxp->rxq.single.reserved = (struct bna_rxq *)0;
    
#line 1846 
    goto ldv_49176;
    case (unsigned int)2: 
#line 1847 
    ;
    
#line 1848 
    rxp->rxq.slr.large = q0;
    
#line 1849 
    rxp->rxq.slr.small = q1;
    
#line 1850 
    goto ldv_49176;
    case (unsigned int)3: 
#line 1851 
    ;
    
#line 1852 
    rxp->rxq.hds.data = q0;
    
#line 1853 
    rxp->rxq.hds.hdr = q1;
    
#line 1854 
    goto ldv_49176;
    default: 
#line 1855 
    ;
    
#line 1856 
    goto ldv_49176;
  }
  ldv_49176: 
#line 1858 
  ;
  
#line 1859 
  return;
}


#line 1861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxq_qpt_setup(struct bna_rxq *rxq, struct bna_rxp *rxp, u32 page_count_0, u32 page_size, struct bna_mem_descr *qpt_mem, struct bna_mem_descr *swqpt_mem, struct bna_mem_descr *page_mem)
{
  u8 *kva;
  u64 dma;
  struct bna_dma_addr bna_dma;
  int i;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 1874 
  rxq->qpt.hw_qpt_ptr.lsb = qpt_mem->dma.lsb;
  
#line 1875 
  rxq->qpt.hw_qpt_ptr.msb = qpt_mem->dma.msb;
  
#line 1876 
  rxq->qpt.kv_qpt_ptr = qpt_mem->kva;
  
#line 1877 
  rxq->qpt.page_count = page_count_0;
  
#line 1878 
  rxq->qpt.page_size = page_size;
  
#line 1880 
  (rxq->rcb)->sw_qpt = (void **)swqpt_mem->kva;
  
#line 1881 
  (rxq->rcb)->sw_q = page_mem->kva;
  
#line 1883 
  kva = (u8 *)page_mem->kva;
  
#line 1884 
  if (0 != 0) 
#line 1884 
              tmp_0 = (((page_mem->dma.msb << 24) | ((page_mem->dma.msb << 8) & 16711680U)) | ((page_mem->dma.msb >> 8) & 65280U)) | (page_mem->dma.msb >> 24); else 
                                                                    
#line 1884 
                                                                    tmp_0 = __fswab32(page_mem->dma.msb);
  
#line 1884 
  if (0 != 0) 
#line 1884 
              tmp_2 = (((page_mem->dma.lsb << 24) | ((page_mem->dma.lsb << 8) & 16711680U)) | ((page_mem->dma.lsb >> 8) & 65280U)) | (page_mem->dma.lsb >> 24); else 
                                                                    
#line 1884 
                                                                    tmp_2 = __fswab32(page_mem->dma.lsb);
  
#line 1884 
  dma = ((unsigned long long)tmp_0 << 32) | (unsigned long long)tmp_2;
  
#line 1886 
  i = 0;
  
#line 1886 
  goto ldv_49195;
  ldv_49194: 
#line 1887 
  ;
  
#line 1887 
  *((rxq->rcb)->sw_qpt + i) = (void *)kva;
  
#line 1888 
  kva += 4096U;
  {
    unsigned long long tmp_4;
    
#line 1890 
    if (0 != 0) 
#line 1890 
                tmp_4 = (((((((dma << 56) | ((dma << 40) & 71776119061217280ULL)) | ((dma << 24) & 280375465082880ULL)) | ((dma << 8) & 1095216660480ULL)) | ((dma >> 8) & 4278190080ULL)) | ((dma >> 24) & 16711680ULL)) | ((dma >> 40) & 65280ULL)) | (dma >> 56); else 
                                                                    
#line 1890 
                                                                    tmp_4 = __fswab64(dma);
    
#line 1890 
    u64 tmp_addr = tmp_4;
    
#line 1890 
    bna_dma.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
    
#line 1890 
    bna_dma.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
  }
  
#line 1891 
  ((struct bna_dma_addr *)rxq->qpt.kv_qpt_ptr + i)->lsb = bna_dma.lsb;
  
#line 1893 
  ((struct bna_dma_addr *)rxq->qpt.kv_qpt_ptr + i)->msb = bna_dma.msb;
  
#line 1895 
  dma += 4096ULL;
  
#line 1886 
  i += 1;
  ldv_49195: 
#line 1887 
  ;
  
#line 1886 
  if (rxq->qpt.page_count > (unsigned int)i) 
#line 1888 
                                             goto ldv_49194; else 
#line 1891 
                                                                  goto ldv_49196;
  ldv_49196: 
#line 1892 
  ;
  
#line 1893 
  return;
}


#line 1900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rxp_cqpt_setup(struct bna_rxp *rxp, u32 page_count_0, u32 page_size, struct bna_mem_descr *qpt_mem, struct bna_mem_descr *swqpt_mem, struct bna_mem_descr *page_mem)
{
  u8 *kva;
  u64 dma;
  struct bna_dma_addr bna_dma;
  int i;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 1912 
  rxp->cq.qpt.hw_qpt_ptr.lsb = qpt_mem->dma.lsb;
  
#line 1913 
  rxp->cq.qpt.hw_qpt_ptr.msb = qpt_mem->dma.msb;
  
#line 1914 
  rxp->cq.qpt.kv_qpt_ptr = qpt_mem->kva;
  
#line 1915 
  rxp->cq.qpt.page_count = page_count_0;
  
#line 1916 
  rxp->cq.qpt.page_size = page_size;
  
#line 1918 
  (rxp->cq.ccb)->sw_qpt = (void **)swqpt_mem->kva;
  
#line 1919 
  (rxp->cq.ccb)->sw_q = page_mem->kva;
  
#line 1921 
  kva = (u8 *)page_mem->kva;
  
#line 1922 
  if (0 != 0) 
#line 1922 
              tmp_0 = (((page_mem->dma.msb << 24) | ((page_mem->dma.msb << 8) & 16711680U)) | ((page_mem->dma.msb >> 8) & 65280U)) | (page_mem->dma.msb >> 24); else 
                                                                    
#line 1922 
                                                                    tmp_0 = __fswab32(page_mem->dma.msb);
  
#line 1922 
  if (0 != 0) 
#line 1922 
              tmp_2 = (((page_mem->dma.lsb << 24) | ((page_mem->dma.lsb << 8) & 16711680U)) | ((page_mem->dma.lsb >> 8) & 65280U)) | (page_mem->dma.lsb >> 24); else 
                                                                    
#line 1922 
                                                                    tmp_2 = __fswab32(page_mem->dma.lsb);
  
#line 1922 
  dma = ((unsigned long long)tmp_0 << 32) | (unsigned long long)tmp_2;
  
#line 1924 
  i = 0;
  
#line 1924 
  goto ldv_49211;
  ldv_49210: 
#line 1925 
  ;
  
#line 1925 
  *((rxp->cq.ccb)->sw_qpt + i) = (void *)kva;
  
#line 1926 
  kva += 4096U;
  {
    unsigned long long tmp_4;
    
#line 1928 
    if (0 != 0) 
#line 1928 
                tmp_4 = (((((((dma << 56) | ((dma << 40) & 71776119061217280ULL)) | ((dma << 24) & 280375465082880ULL)) | ((dma << 8) & 1095216660480ULL)) | ((dma >> 8) & 4278190080ULL)) | ((dma >> 24) & 16711680ULL)) | ((dma >> 40) & 65280ULL)) | (dma >> 56); else 
                                                                    
#line 1928 
                                                                    tmp_4 = __fswab64(dma);
    
#line 1928 
    u64 tmp_addr = tmp_4;
    
#line 1928 
    bna_dma.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
    
#line 1928 
    bna_dma.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
  }
  
#line 1929 
  ((struct bna_dma_addr *)rxp->cq.qpt.kv_qpt_ptr + i)->lsb = bna_dma.lsb;
  
#line 1931 
  ((struct bna_dma_addr *)rxp->cq.qpt.kv_qpt_ptr + i)->msb = bna_dma.msb;
  
#line 1933 
  dma += 4096ULL;
  
#line 1924 
  i += 1;
  ldv_49211: 
#line 1925 
  ;
  
#line 1924 
  if (rxp->cq.qpt.page_count > (unsigned int)i) 
#line 1926 
                                                goto ldv_49210; else 
                                                                  
#line 1929 
                                                                  goto ldv_49212;
  ldv_49212: 
#line 1930 
  ;
  
#line 1931 
  return;
}


#line 1938  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_mod_cb_rx_stopped(void *arg, struct bna_rx *rx)
{
  
#line 1940 
  struct bna_rx_mod *rx_mod = (struct bna_rx_mod *)arg;
  
#line 1942 
  bfa_wc_down(& rx_mod->rx_stop_wc);
  
#line 1943 
  return;
}


#line 1946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_mod_cb_rx_stopped_all(void *arg)
{
  
#line 1948 
  struct bna_rx_mod *rx_mod = (struct bna_rx_mod *)arg;
  
#line 1950 
  if (rx_mod->stop_cbfn != (void (*)(struct bna_enet *))0) 
#line 1951 
                                                           (*(rx_mod->stop_cbfn))(& (rx_mod->bna)->enet); else ;
  
#line 1952 
  rx_mod->stop_cbfn = (void (*)(struct bna_enet *))0;
  
#line 1953 
  return;
}


#line 1956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_start(struct bna_rx *rx)
{
  
#line 1958 
  rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags | 1U);
  
#line 1959 
  if (((unsigned int)rx->rx_flags & 2U) != 0U) 
#line 1960 
                                               (*(rx->fsm))((void *)rx,1); else ;
  
#line 1961 
  return;
}


#line 1964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_stop(struct bna_rx *rx)
{
  
#line 1966 
  rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags & 4294967294U);
  
#line 1967 
  if (rx->fsm == (void (*)(void *, int ))(& bna_rx_sm_stopped)) 
#line 1968 
                                                                bna_rx_mod_cb_rx_stopped((void *)(& (rx->bna)->rx_mod),rx);
  else {
    
#line 1970 
    rx->stop_cbfn = & bna_rx_mod_cb_rx_stopped;
    
#line 1971 
    rx->stop_cbarg = (void *)(& (rx->bna)->rx_mod);
    
#line 1972 
    (*(rx->fsm))((void *)rx,2);
  }
  
#line 1974 
  return;
}


#line 1977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_rx_fail(struct bna_rx *rx)
{
  
#line 1980 
  rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags & 4294967294U);
  
#line 1981 
  (*(rx->fsm))((void *)rx,3);
  
#line 1982 
  return;
}


#line 1985  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_mod_start(struct bna_rx_mod *rx_mod, enum bna_rx_type type)
{
  struct bna_rx *rx;
  struct bna_rx *tmp;
  struct bna_rx *tmp_0;
  
#line 1989 
  rx_mod->flags = (enum bna_rx_mod_flags)((unsigned int)rx_mod->flags | 1U);
  
#line 1990 
  if (type == (unsigned int)BNA_RX_T_LOOPBACK) 
#line 1991 
                                               rx_mod->flags = (enum bna_rx_mod_flags)((unsigned int)rx_mod->flags | 2U); else ;
  {
    
#line 1993 
    struct list_head const *__mptr = (struct list_head const *)rx_mod->rx_active_q.next;
    
#line 1993 
    tmp = (struct bna_rx *)__mptr;
  }
  
#line 1993 
  rx = tmp;
  
#line 1993 
  goto ldv_49241;
  ldv_49240: 
#line 1994 
  ;
  
#line 1994 
  if (rx->type == type) 
#line 1995 
                        bna_rx_start(rx); else ;
  {
    
#line 1993 
    struct list_head const *__mptr_0 = (struct list_head const *)rx->qe.next;
    
#line 1993 
    tmp_0 = (struct bna_rx *)__mptr_0;
  }
  
#line 1993 
  rx = tmp_0;
  ldv_49241: 
#line 1995 
  ;
  
#line 1993 
  if (& rx->qe != & rx_mod->rx_active_q) 
#line 1995 
                                         goto ldv_49240; else 
#line 1998 
                                                              goto ldv_49242;
  ldv_49242: 
#line 1999 
  ;
  
#line 2000 
  return;
}


#line 1999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_mod_stop(struct bna_rx_mod *rx_mod, enum bna_rx_type type)
{
  struct bna_rx *rx;
  struct bna_rx *tmp;
  struct bna_rx *tmp_0;
  
#line 2003 
  rx_mod->flags = (enum bna_rx_mod_flags)((unsigned int)rx_mod->flags & 4294967294U);
  
#line 2004 
  rx_mod->flags = (enum bna_rx_mod_flags)((unsigned int)rx_mod->flags & 4294967293U);
  
#line 2006 
  rx_mod->stop_cbfn = & bna_enet_cb_rx_stopped;
  
#line 2008 
  bfa_wc_init(& rx_mod->rx_stop_wc,& bna_rx_mod_cb_rx_stopped_all,(void *)rx_mod);
  {
    
#line 2010 
    struct list_head const *__mptr = (struct list_head const *)rx_mod->rx_active_q.next;
    
#line 2010 
    tmp = (struct bna_rx *)__mptr;
  }
  
#line 2010 
  rx = tmp;
  
#line 2010 
  goto ldv_49253;
  ldv_49252: 
#line 2011 
  ;
  
#line 2011 
  if (rx->type == type) {
    
#line 2012 
    bfa_wc_up(& rx_mod->rx_stop_wc);
    
#line 2013 
    bna_rx_stop(rx);
  }
  else ;
  {
    
#line 2010 
    struct list_head const *__mptr_0 = (struct list_head const *)rx->qe.next;
    
#line 2010 
    tmp_0 = (struct bna_rx *)__mptr_0;
  }
  
#line 2010 
  rx = tmp_0;
  ldv_49253: 
#line 2012 
  ;
  
#line 2010 
  if (& rx->qe != & rx_mod->rx_active_q) 
#line 2012 
                                         goto ldv_49252; else 
#line 2015 
                                                              goto ldv_49254;
  ldv_49254: 
#line 2016 
  ;
  
#line 2016 
  bfa_wc_wait(& rx_mod->rx_stop_wc);
  
#line 2017 
  return;
}


#line 2020  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_mod_fail(struct bna_rx_mod *rx_mod)
{
  struct bna_rx *rx;
  struct bna_rx *tmp;
  struct bna_rx *tmp_0;
  
#line 2024 
  rx_mod->flags = (enum bna_rx_mod_flags)((unsigned int)rx_mod->flags & 4294967294U);
  
#line 2025 
  rx_mod->flags = (enum bna_rx_mod_flags)((unsigned int)rx_mod->flags & 4294967293U);
  {
    
#line 2027 
    struct list_head const *__mptr = (struct list_head const *)rx_mod->rx_active_q.next;
    
#line 2027 
    tmp = (struct bna_rx *)__mptr;
  }
  
#line 2027 
  rx = tmp;
  
#line 2027 
  goto ldv_49264;
  ldv_49263: 
#line 2028 
  ;
  
#line 2028 
  bna_rx_fail(rx);
  {
    
#line 2027 
    struct list_head const *__mptr_0 = (struct list_head const *)rx->qe.next;
    
#line 2027 
    tmp_0 = (struct bna_rx *)__mptr_0;
  }
  
#line 2027 
  rx = tmp_0;
  ldv_49264: 
#line 2029 
  ;
  
#line 2027 
  if (& rx->qe != & rx_mod->rx_active_q) 
#line 2029 
                                         goto ldv_49263; else 
#line 2032 
                                                              goto ldv_49265;
  ldv_49265: 
#line 2033 
  ;
  
#line 2034 
  return;
}


#line 2031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_mod_init(struct bna_rx_mod *rx_mod, struct bna *bna, struct bna_res_info *res_info)
{
  int index;
  struct bna_rx *rx_ptr;
  struct bna_rxp *rxp_ptr;
  struct bna_rxq *rxq_ptr;
  
#line 2039 
  rx_mod->bna = bna;
  
#line 2040 
  rx_mod->flags = (enum bna_rx_mod_flags)0;
  
#line 2042 
  rx_mod->rx = (struct bna_rx *)((res_info + 2U)->res_u.mem_info.mdl)->kva;
  
#line 2044 
  rx_mod->rxp = (struct bna_rxp *)((res_info + 3U)->res_u.mem_info.mdl)->kva;
  
#line 2046 
  rx_mod->rxq = (struct bna_rxq *)((res_info + 4U)->res_u.mem_info.mdl)->kva;
  
#line 2050 
  INIT_LIST_HEAD(& rx_mod->rx_free_q);
  
#line 2051 
  rx_mod->rx_free_count = 0;
  
#line 2052 
  INIT_LIST_HEAD(& rx_mod->rxq_free_q);
  
#line 2053 
  rx_mod->rxq_free_count = 0;
  
#line 2054 
  INIT_LIST_HEAD(& rx_mod->rxp_free_q);
  
#line 2055 
  rx_mod->rxp_free_count = 0;
  
#line 2056 
  INIT_LIST_HEAD(& rx_mod->rx_active_q);
  
#line 2059 
  index = 0;
  
#line 2059 
  goto ldv_49276;
  ldv_49275: 
#line 2060 
  ;
  
#line 2060 
  rx_ptr = rx_mod->rx + index;
  
#line 2062 
  INIT_LIST_HEAD(& rx_ptr->rxp_q);
  
#line 2063 
  rx_ptr->bna = (struct bna *)0;
  
#line 2064 
  rx_ptr->rid = index;
  
#line 2065 
  rx_ptr->stop_cbfn = (void (*)(void *, struct bna_rx *))0;
  
#line 2066 
  rx_ptr->stop_cbarg = (void *)0;
  
#line 2068 
  list_add_tail(& rx_ptr->qe,& rx_mod->rx_free_q);
  
#line 2069 
  rx_mod->rx_free_count += 1;
  
#line 2059 
  index += 1;
  ldv_49276: 
#line 2060 
  ;
  
#line 2059 
  if (bna->ioceth.attr.num_rxp > index) 
#line 2061 
                                        goto ldv_49275; else 
#line 2064 
                                                             goto ldv_49277;
  ldv_49277: 
#line 2065 
  ;
  
#line 2073 
  index = 0;
  
#line 2073 
  goto ldv_49279;
  ldv_49278: 
#line 2074 
  ;
  
#line 2074 
  rxp_ptr = rx_mod->rxp + index;
  
#line 2075 
  list_add_tail(& rxp_ptr->qe,& rx_mod->rxp_free_q);
  
#line 2076 
  rx_mod->rxp_free_count += 1;
  
#line 2073 
  index += 1;
  ldv_49279: 
#line 2074 
  ;
  
#line 2073 
  if (bna->ioceth.attr.num_rxp > index) 
#line 2075 
                                        goto ldv_49278; else 
#line 2078 
                                                             goto ldv_49280;
  ldv_49280: 
#line 2079 
  ;
  
#line 2080 
  index = 0;
  
#line 2080 
  goto ldv_49282;
  ldv_49281: 
#line 2081 
  ;
  
#line 2081 
  rxq_ptr = rx_mod->rxq + index;
  
#line 2082 
  list_add_tail(& rxq_ptr->qe,& rx_mod->rxq_free_q);
  
#line 2083 
  rx_mod->rxq_free_count += 1;
  
#line 2080 
  index += 1;
  ldv_49282: 
#line 2081 
  ;
  
#line 2080 
  if (bna->ioceth.attr.num_rxp * 2 > index) 
#line 2082 
                                            goto ldv_49281; else 
#line 2085 
                                                                 goto ldv_49283;
  ldv_49283: 
#line 2086 
  ;
  
#line 2087 
  return;
}


#line 2088  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_mod_uninit(struct bna_rx_mod *rx_mod)
{
  
#line 2090 
  rx_mod->bna = (struct bna *)0;
  
#line 2091 
  return;
}


#line 2094  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_rx_enet_start_rsp(struct bna_rx *rx, struct bfi_msgq_mhdr *msghdr)
{
  int i;
  struct bna_rxp *tmp;
  unsigned int tmp_1;
  unsigned int tmp_3;
  u32 tmp_6;
  struct bna_rxp *tmp_8;
  
#line 2096 
  struct bfi_enet_rx_cfg_rsp *cfg_rsp = & rx->bfi_enet_cmd.cfg_rsp;
  
#line 2097 
  struct bna_rxp *rxp = (struct bna_rxp *)0;
  
#line 2098 
  struct bna_rxq *q0 = (struct bna_rxq *)0;
  
#line 2098 
  struct bna_rxq *q1 = (struct bna_rxq *)0;
  
#line 2101 
  bfa_msgq_rsp_copy(& (rx->bna)->msgq,(u8 *)cfg_rsp,268UL);
  
#line 2104 
  rx->hw_id = (int)cfg_rsp->hw_id;
  
#line 2106 
  i = 0;
  {
    
#line 2106 
    struct list_head const *__mptr = (struct list_head const *)rx->rxp_q.next;
    
#line 2106 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 2106 
  rxp = tmp;
  
#line 2106 
  goto ldv_49305;
  ldv_49304: 
#line 2107 
  ;
  
#line 2108 
  switch ((unsigned int)rxp->type) {
    case (unsigned int)1: 
#line 2108 
    ;
    
#line 2108 
    q0 = rxp->rxq.single.only;
    
#line 2108 
    q1 = (struct bna_rxq *)0;
    
#line 2108 
    goto ldv_49301;
    case (unsigned int)2: 
#line 2108 
    ;
    
#line 2108 
    q0 = rxp->rxq.slr.large;
    
#line 2108 
    q1 = rxp->rxq.slr.small;
    
#line 2108 
    goto ldv_49301;
    case (unsigned int)3: 
#line 2108 
    ;
    
#line 2108 
    q0 = rxp->rxq.hds.data;
    
#line 2108 
    q1 = rxp->rxq.hds.hdr;
    
#line 2108 
    goto ldv_49301;
  }
  ldv_49301: 
#line 2108 
  ;
  
#line 2113 
  if (0 != 0) 
#line 2113 
              tmp_1 = (((cfg_rsp->q_handles[i].i_dbell << 24) | ((cfg_rsp->q_handles[i].i_dbell << 8) & 16711680U)) | ((cfg_rsp->q_handles[i].i_dbell >> 8) & 65280U)) | (cfg_rsp->q_handles[i].i_dbell >> 24); else 
                                                                    
#line 2113 
                                                                    tmp_1 = __fswab32(cfg_rsp->q_handles[i].i_dbell);
  
#line 2111 
  ((rxp->cq.ccb)->i_dbell)->doorbell_addr = (rx->bna)->pcidev.pci_bar_kva + tmp_1;
  
#line 2114 
  rxp->hw_id = (int)cfg_rsp->q_handles[i].hw_cqid;
  
#line 2117 
  if (0 != 0) 
#line 2117 
              tmp_3 = (((cfg_rsp->q_handles[i].ql_dbell << 24) | ((cfg_rsp->q_handles[i].ql_dbell << 8) & 16711680U)) | ((cfg_rsp->q_handles[i].ql_dbell >> 8) & 65280U)) | (cfg_rsp->q_handles[i].ql_dbell >> 24); else 
                                                                    
#line 2117 
                                                                    tmp_3 = __fswab32(cfg_rsp->q_handles[i].ql_dbell);
  
#line 2115 
  (q0->rcb)->q_dbell = (rx->bna)->pcidev.pci_bar_kva + tmp_3;
  
#line 2118 
  q0->hw_id = (int)cfg_rsp->q_handles[i].hw_lqid;
  
#line 2119 
  if (q1 != (struct bna_rxq *)0) {
    unsigned int tmp_5;
    
#line 2122 
    if (0 != 0) 
#line 2122 
                tmp_5 = (((cfg_rsp->q_handles[i].qs_dbell << 24) | ((cfg_rsp->q_handles[i].qs_dbell << 8) & 16711680U)) | ((cfg_rsp->q_handles[i].qs_dbell >> 8) & 65280U)) | (cfg_rsp->q_handles[i].qs_dbell >> 24); else 
                                                                    
#line 2122 
                                                                    tmp_5 = __fswab32(cfg_rsp->q_handles[i].qs_dbell);
    
#line 2120 
    (q1->rcb)->q_dbell = (rx->bna)->pcidev.pci_bar_kva + tmp_5;
    
#line 2123 
    q1->hw_id = (int)cfg_rsp->q_handles[i].hw_sqid;
  }
  else ;
  
#line 2127 
  *((rxp->cq.ccb)->hw_producer_index) = 0U;
  
#line 2128 
  (rxp->cq.ccb)->producer_index = 0U;
  
#line 2129 
  tmp_6 = 0U;
  
#line 2129 
  (q0->rcb)->consumer_index = tmp_6;
  
#line 2129 
  (q0->rcb)->producer_index = tmp_6;
  
#line 2130 
  if (q1 != (struct bna_rxq *)0) {
    u32 tmp_7;
    
#line 2131 
    tmp_7 = 0U;
    
#line 2131 
    (q1->rcb)->consumer_index = tmp_7;
    
#line 2131 
    (q1->rcb)->producer_index = tmp_7;
  }
  else ;
  
#line 2107 
  i += 1;
  {
    
#line 2107 
    struct list_head const *__mptr_0 = (struct list_head const *)rxp->qe.next;
    
#line 2107 
    tmp_8 = (struct bna_rxp *)__mptr_0;
  }
  
#line 2107 
  rxp = tmp_8;
  ldv_49305: 
#line 2109 
  ;
  
#line 2106 
  if (rx->num_paths > i) 
#line 2109 
                         goto ldv_49304; else 
#line 2112 
                                              goto ldv_49306;
  ldv_49306: 
#line 2113 
  ;
  
#line 2134 
  (*(rx->fsm))((void *)rx,4);
  
#line 2135 
  return;
}


#line 2138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_rx_enet_stop_rsp(struct bna_rx *rx, struct bfi_msgq_mhdr *msghdr)
{
  
#line 2140 
  (*(rx->fsm))((void *)rx,5);
  
#line 2141 
  return;
}


#line 2144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_res_req(struct bna_rx_config *q_cfg, struct bna_res_info *res_info)
{
  u32 cq_size;
  u32 hq_size;
  u32 dq_size;
  u32 cpage_count;
  u32 hpage_count;
  u32 dpage_count;
  struct bna_mem_info *mem_info;
  u32 cq_depth;
  u32 hq_depth;
  u32 dq_depth;
  int tmp_209;
  int tmp_210;
  int tmp_211;
  int tmp_212;
  
#line 2153 
  dq_depth = q_cfg->q0_depth;
  
#line 2154 
  if (q_cfg->rxp_type != (unsigned int)BNA_RXP_SINGLE) 
#line 2154 
                                                       hq_depth = q_cfg->q1_depth; else 
                                                                    
#line 2154 
                                                                    hq_depth = 0U;
  
#line 2155 
  if (0 != 0) {
    unsigned int tmp_67;
    
#line 2155 
    if (dq_depth + hq_depth != 1U) {
      unsigned int tmp_66;
      
#line 2155 
      if (0 != 0) {
        unsigned int tmp_64;
        
#line 2155 
        if (dq_depth + hq_depth == 1U) {
          int tmp;
          
#line 2155 
          tmp = ____ilog2_NaN();
          
#line 2155 
          tmp_64 = (unsigned int)(1UL << (tmp + 1));
        }
        else {
          unsigned int tmp_63;
          
#line 2155 
          if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_62;
            
#line 2155 
            if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_61;
              
#line 2155 
              if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_60;
                
#line 2155 
                if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_59;
                  
#line 2155 
                  if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_58;
                    
#line 2155 
                    if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_57;
                      
#line 2155 
                      if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_56;
                        
#line 2155 
                        if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_55;
                          
#line 2155 
                          if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_54;
                            
#line 2155 
                            if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_53;
                              
#line 2155 
                              if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_52;
                                
#line 2155 
                                if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_51;
                                  
#line 2155 
                                  if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_50;
                                    
#line 2155 
                                    if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_49;
                                      
#line 2155 
                                      if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_48;
                                        
#line 2155 
                                        if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_47;
                                          
#line 2155 
                                          if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_46;
                                            
#line 2155 
                                            if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_45;
                                              
#line 2155 
                                              if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_44;
                                                
#line 2155 
                                                if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_43;
                                                  
#line 2155 
                                                  if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_42;
                                                    
#line 2155 
                                                    if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_41;
                                                      
#line 2155 
                                                      if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_40;
                                                        
#line 2155 
                                                        if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_39;
                                                          
#line 2155 
                                                          if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_38;
                                                            
#line 2155 
                                                            if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_37;
                                                              
#line 2155 
                                                              if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_36;
                                                                
#line 2155 
                                                                if (((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_35;
                                                                  
#line 2155 
                                                                  if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 2155 
                                                                    if (
                                                                    (dq_depth + hq_depth) + 4294967295U >= (u32)0) {
                                                                    unsigned int tmp_31;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_10;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_9;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_8;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_7;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_6;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_5;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_4;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_3;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_2;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_1;
                                                                    
#line 2155 
                                                                    if (
                                                                    ((unsigned long long)((dq_depth + hq_depth) + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_0;
                                                                    
#line 2155 
                                                                    tmp_0 = ____ilog2_NaN();
                                                                    
#line 2155 
                                                                    tmp_1 = (unsigned int)(1UL << (tmp_0 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_1 = 2U;
                                                                    
#line 2155 
                                                                    tmp_2 = tmp_1;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_2 = 4U;
                                                                    
#line 2155 
                                                                    tmp_3 = tmp_2;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_3 = 8U;
                                                                    
#line 2155 
                                                                    tmp_4 = tmp_3;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_4 = 16U;
                                                                    
#line 2155 
                                                                    tmp_5 = tmp_4;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_5 = 32U;
                                                                    
#line 2155 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_6 = 64U;
                                                                    
#line 2155 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_7 = 128U;
                                                                    
#line 2155 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_8 = 256U;
                                                                    
#line 2155 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_9 = 512U;
                                                                    
#line 2155 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_10 = 1024U;
                                                                    
#line 2155 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_11 = 2048U;
                                                                    
#line 2155 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_12 = 4096U;
                                                                    
#line 2155 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_13 = 8192U;
                                                                    
#line 2155 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_14 = 16384U;
                                                                    
#line 2155 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_15 = 32768U;
                                                                    
#line 2155 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_16 = 65536U;
                                                                    
#line 2155 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_17 = 131072U;
                                                                    
#line 2155 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_18 = 262144U;
                                                                    
#line 2155 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_19 = 524288U;
                                                                    
#line 2155 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_20 = 1048576U;
                                                                    
#line 2155 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_21 = 2097152U;
                                                                    
#line 2155 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_22 = 4194304U;
                                                                    
#line 2155 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_23 = 8388608U;
                                                                    
#line 2155 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_24 = 16777216U;
                                                                    
#line 2155 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_25 = 33554432U;
                                                                    
#line 2155 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_26 = 67108864U;
                                                                    
#line 2155 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_27 = 134217728U;
                                                                    
#line 2155 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_28 = 268435456U;
                                                                    
#line 2155 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_29 = 536870912U;
                                                                    
#line 2155 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_30 = 1073741824U;
                                                                    
#line 2155 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_31 = 2147483648U;
                                                                    
#line 2155 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_32 = 0U;
                                                                    
#line 2155 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_33 = 0U;
                                                                    
#line 2155 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 2155 
                                                                    tmp_34 = 0U;
                                                                    
#line 2155 
                                                                    tmp_35 = tmp_34;
                                                                  }
                                                                  else 
                                                                    
#line 2155 
                                                                    tmp_35 = 0U;
                                                                  
#line 2155 
                                                                  tmp_36 = tmp_35;
                                                                }
                                                                else 
                                                                  
#line 2155 
                                                                  tmp_36 = 0U;
                                                                
#line 2155 
                                                                tmp_37 = tmp_36;
                                                              }
                                                              else 
#line 2155 
                                                                   tmp_37 = 0U;
                                                              
#line 2155 
                                                              tmp_38 = tmp_37;
                                                            }
                                                            else 
#line 2155 
                                                                 tmp_38 = 0U;
                                                            
#line 2155 
                                                            tmp_39 = tmp_38;
                                                          }
                                                          else 
#line 2155 
                                                               tmp_39 = 0U;
                                                          
#line 2155 
                                                          tmp_40 = tmp_39;
                                                        }
                                                        else 
#line 2155 
                                                             tmp_40 = 0U;
                                                        
#line 2155 
                                                        tmp_41 = tmp_40;
                                                      }
                                                      else 
#line 2155 
                                                           tmp_41 = 0U;
                                                      
#line 2155 
                                                      tmp_42 = tmp_41;
                                                    }
                                                    else 
#line 2155 
                                                         tmp_42 = 0U;
                                                    
#line 2155 
                                                    tmp_43 = tmp_42;
                                                  }
                                                  else 
#line 2155 
                                                       tmp_43 = 0U;
                                                  
#line 2155 
                                                  tmp_44 = tmp_43;
                                                }
                                                else 
#line 2155 
                                                     tmp_44 = 0U;
                                                
#line 2155 
                                                tmp_45 = tmp_44;
                                              }
                                              else 
#line 2155 
                                                   tmp_45 = 0U;
                                              
#line 2155 
                                              tmp_46 = tmp_45;
                                            }
                                            else 
#line 2155 
                                                 tmp_46 = 0U;
                                            
#line 2155 
                                            tmp_47 = tmp_46;
                                          }
                                          else 
#line 2155 
                                               tmp_47 = 0U;
                                          
#line 2155 
                                          tmp_48 = tmp_47;
                                        }
                                        else 
#line 2155 
                                             tmp_48 = 0U;
                                        
#line 2155 
                                        tmp_49 = tmp_48;
                                      }
                                      else 
#line 2155 
                                           tmp_49 = 0U;
                                      
#line 2155 
                                      tmp_50 = tmp_49;
                                    }
                                    else 
#line 2155 
                                         tmp_50 = 0U;
                                    
#line 2155 
                                    tmp_51 = tmp_50;
                                  }
                                  else 
#line 2155 
                                       tmp_51 = 0U;
                                  
#line 2155 
                                  tmp_52 = tmp_51;
                                }
                                else 
#line 2155 
                                     tmp_52 = 0U;
                                
#line 2155 
                                tmp_53 = tmp_52;
                              }
                              else 
#line 2155 
                                   tmp_53 = 0U;
                              
#line 2155 
                              tmp_54 = tmp_53;
                            }
                            else 
#line 2155 
                                 tmp_54 = 0U;
                            
#line 2155 
                            tmp_55 = tmp_54;
                          }
                          else 
#line 2155 
                               tmp_55 = 0U;
                          
#line 2155 
                          tmp_56 = tmp_55;
                        }
                        else 
#line 2155 
                             tmp_56 = 0U;
                        
#line 2155 
                        tmp_57 = tmp_56;
                      }
                      else 
#line 2155 
                           tmp_57 = 0U;
                      
#line 2155 
                      tmp_58 = tmp_57;
                    }
                    else 
#line 2155 
                         tmp_58 = 0U;
                    
#line 2155 
                    tmp_59 = tmp_58;
                  }
                  else 
#line 2155 
                       tmp_59 = 0U;
                  
#line 2155 
                  tmp_60 = tmp_59;
                }
                else 
#line 2155 
                     tmp_60 = 0U;
                
#line 2155 
                tmp_61 = tmp_60;
              }
              else 
#line 2155 
                   tmp_61 = 0U;
              
#line 2155 
              tmp_62 = tmp_61;
            }
            else 
#line 2155 
                 tmp_62 = 0U;
            
#line 2155 
            tmp_63 = tmp_62;
          }
          else 
#line 2155 
               tmp_63 = 0U;
          
#line 2155 
          tmp_64 = tmp_63;
        }
        
#line 2155 
        tmp_66 = tmp_64;
      }
      else {
        int tmp_65;
        
#line 2155 
        tmp_65 = __ilog2_u32((dq_depth + hq_depth) + 4294967295U);
        
#line 2155 
        tmp_66 = (unsigned int)(1UL << (tmp_65 + 1));
      }
      
#line 2155 
      tmp_67 = tmp_66;
    }
    else 
#line 2155 
         tmp_67 = 1U;
    
#line 2155 
    cq_depth = tmp_67;
  }
  else {
    unsigned long tmp_68;
    
#line 2155 
    tmp_68 = __roundup_pow_of_two((unsigned long)(dq_depth + hq_depth));
    
#line 2155 
    cq_depth = (unsigned int)tmp_68;
  }
  
#line 2157 
  cq_size = cq_depth * 16U;
  
#line 2158 
  cq_size = (cq_size + 4095U) & 4294963200U;
  
#line 2159 
  cpage_count = (cq_size >> 12) + (unsigned int)((((unsigned long)cq_size & 4095UL) + 4095UL) >> 12);
  
#line 2161 
  if (0 != 0) {
    unsigned int tmp_137;
    
#line 2161 
    if (dq_depth != 1U) {
      unsigned int tmp_136;
      
#line 2161 
      if (0 != 0) {
        unsigned int tmp_134;
        
#line 2161 
        if (dq_depth == 1U) {
          int tmp_69;
          
#line 2161 
          tmp_69 = ____ilog2_NaN();
          
#line 2161 
          tmp_134 = (unsigned int)(1UL << (tmp_69 + 1));
        }
        else {
          unsigned int tmp_133;
          
#line 2161 
          if (((unsigned long long)(dq_depth + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_132;
            
#line 2161 
            if (((unsigned long long)(dq_depth + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_131;
              
#line 2161 
              if (((unsigned long long)(dq_depth + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_130;
                
#line 2161 
                if (((unsigned long long)(dq_depth + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_129;
                  
#line 2161 
                  if (((unsigned long long)(dq_depth + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_128;
                    
#line 2161 
                    if (((unsigned long long)(dq_depth + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_127;
                      
#line 2161 
                      if (((unsigned long long)(dq_depth + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_126;
                        
#line 2161 
                        if (((unsigned long long)(dq_depth + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_125;
                          
#line 2161 
                          if (((unsigned long long)(dq_depth + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_124;
                            
#line 2161 
                            if (((unsigned long long)(dq_depth + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_123;
                              
#line 2161 
                              if (((unsigned long long)(dq_depth + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_122;
                                
#line 2161 
                                if (((unsigned long long)(dq_depth + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_121;
                                  
#line 2161 
                                  if (((unsigned long long)(dq_depth + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_120;
                                    
#line 2161 
                                    if (((unsigned long long)(dq_depth + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_119;
                                      
#line 2161 
                                      if (((unsigned long long)(dq_depth + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_118;
                                        
#line 2161 
                                        if (((unsigned long long)(dq_depth + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_117;
                                          
#line 2161 
                                          if (((unsigned long long)(dq_depth + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_116;
                                            
#line 2161 
                                            if (((unsigned long long)(dq_depth + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_115;
                                              
#line 2161 
                                              if (((unsigned long long)(dq_depth + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_114;
                                                
#line 2161 
                                                if (((unsigned long long)(dq_depth + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_113;
                                                  
#line 2161 
                                                  if (((unsigned long long)(dq_depth + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_112;
                                                    
#line 2161 
                                                    if (((unsigned long long)(dq_depth + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_111;
                                                      
#line 2161 
                                                      if (((unsigned long long)(dq_depth + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_110;
                                                        
#line 2161 
                                                        if (((unsigned long long)(dq_depth + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_109;
                                                          
#line 2161 
                                                          if (((unsigned long long)(dq_depth + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_108;
                                                            
#line 2161 
                                                            if (((unsigned long long)(dq_depth + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_107;
                                                              
#line 2161 
                                                              if (((unsigned long long)(dq_depth + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_106;
                                                                
#line 2161 
                                                                if (((unsigned long long)(dq_depth + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_105;
                                                                  
#line 2161 
                                                                  if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_104;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_103;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_102;
                                                                    
#line 2161 
                                                                    if (
                                                                    dq_depth + 4294967295U >= (u32)0) {
                                                                    unsigned int tmp_101;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_100;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_99;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_98;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_97;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_96;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_95;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_94;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_93;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_92;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_91;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_90;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_89;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_88;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_87;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_86;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_85;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_84;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_83;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_82;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_81;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_80;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_79;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_78;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_77;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_76;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_75;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_74;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_73;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_72;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_71;
                                                                    
#line 2161 
                                                                    if (
                                                                    ((unsigned long long)(dq_depth + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_70;
                                                                    
#line 2161 
                                                                    tmp_70 = ____ilog2_NaN();
                                                                    
#line 2161 
                                                                    tmp_71 = (unsigned int)(1UL << (tmp_70 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_71 = 2U;
                                                                    
#line 2161 
                                                                    tmp_72 = tmp_71;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_72 = 4U;
                                                                    
#line 2161 
                                                                    tmp_73 = tmp_72;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_73 = 8U;
                                                                    
#line 2161 
                                                                    tmp_74 = tmp_73;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_74 = 16U;
                                                                    
#line 2161 
                                                                    tmp_75 = tmp_74;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_75 = 32U;
                                                                    
#line 2161 
                                                                    tmp_76 = tmp_75;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_76 = 64U;
                                                                    
#line 2161 
                                                                    tmp_77 = tmp_76;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_77 = 128U;
                                                                    
#line 2161 
                                                                    tmp_78 = tmp_77;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_78 = 256U;
                                                                    
#line 2161 
                                                                    tmp_79 = tmp_78;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_79 = 512U;
                                                                    
#line 2161 
                                                                    tmp_80 = tmp_79;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_80 = 1024U;
                                                                    
#line 2161 
                                                                    tmp_81 = tmp_80;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_81 = 2048U;
                                                                    
#line 2161 
                                                                    tmp_82 = tmp_81;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_82 = 4096U;
                                                                    
#line 2161 
                                                                    tmp_83 = tmp_82;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_83 = 8192U;
                                                                    
#line 2161 
                                                                    tmp_84 = tmp_83;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_84 = 16384U;
                                                                    
#line 2161 
                                                                    tmp_85 = tmp_84;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_85 = 32768U;
                                                                    
#line 2161 
                                                                    tmp_86 = tmp_85;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_86 = 65536U;
                                                                    
#line 2161 
                                                                    tmp_87 = tmp_86;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_87 = 131072U;
                                                                    
#line 2161 
                                                                    tmp_88 = tmp_87;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_88 = 262144U;
                                                                    
#line 2161 
                                                                    tmp_89 = tmp_88;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_89 = 524288U;
                                                                    
#line 2161 
                                                                    tmp_90 = tmp_89;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_90 = 1048576U;
                                                                    
#line 2161 
                                                                    tmp_91 = tmp_90;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_91 = 2097152U;
                                                                    
#line 2161 
                                                                    tmp_92 = tmp_91;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_92 = 4194304U;
                                                                    
#line 2161 
                                                                    tmp_93 = tmp_92;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_93 = 8388608U;
                                                                    
#line 2161 
                                                                    tmp_94 = tmp_93;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_94 = 16777216U;
                                                                    
#line 2161 
                                                                    tmp_95 = tmp_94;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_95 = 33554432U;
                                                                    
#line 2161 
                                                                    tmp_96 = tmp_95;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_96 = 67108864U;
                                                                    
#line 2161 
                                                                    tmp_97 = tmp_96;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_97 = 134217728U;
                                                                    
#line 2161 
                                                                    tmp_98 = tmp_97;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_98 = 268435456U;
                                                                    
#line 2161 
                                                                    tmp_99 = tmp_98;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_99 = 536870912U;
                                                                    
#line 2161 
                                                                    tmp_100 = tmp_99;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_100 = 1073741824U;
                                                                    
#line 2161 
                                                                    tmp_101 = tmp_100;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_101 = 2147483648U;
                                                                    
#line 2161 
                                                                    tmp_102 = tmp_101;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_102 = 0U;
                                                                    
#line 2161 
                                                                    tmp_103 = tmp_102;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_103 = 0U;
                                                                    
#line 2161 
                                                                    tmp_104 = tmp_103;
                                                                    }
                                                                    else 
                                                                    
#line 2161 
                                                                    tmp_104 = 0U;
                                                                    
#line 2161 
                                                                    tmp_105 = tmp_104;
                                                                  }
                                                                  else 
                                                                    
#line 2161 
                                                                    tmp_105 = 0U;
                                                                  
#line 2161 
                                                                  tmp_106 = tmp_105;
                                                                }
                                                                else 
                                                                  
#line 2161 
                                                                  tmp_106 = 0U;
                                                                
#line 2161 
                                                                tmp_107 = tmp_106;
                                                              }
                                                              else 
#line 2161 
                                                                   tmp_107 = 0U;
                                                              
#line 2161 
                                                              tmp_108 = tmp_107;
                                                            }
                                                            else 
#line 2161 
                                                                 tmp_108 = 0U;
                                                            
#line 2161 
                                                            tmp_109 = tmp_108;
                                                          }
                                                          else 
#line 2161 
                                                               tmp_109 = 0U;
                                                          
#line 2161 
                                                          tmp_110 = tmp_109;
                                                        }
                                                        else 
#line 2161 
                                                             tmp_110 = 0U;
                                                        
#line 2161 
                                                        tmp_111 = tmp_110;
                                                      }
                                                      else 
#line 2161 
                                                           tmp_111 = 0U;
                                                      
#line 2161 
                                                      tmp_112 = tmp_111;
                                                    }
                                                    else 
#line 2161 
                                                         tmp_112 = 0U;
                                                    
#line 2161 
                                                    tmp_113 = tmp_112;
                                                  }
                                                  else 
#line 2161 
                                                       tmp_113 = 0U;
                                                  
#line 2161 
                                                  tmp_114 = tmp_113;
                                                }
                                                else 
#line 2161 
                                                     tmp_114 = 0U;
                                                
#line 2161 
                                                tmp_115 = tmp_114;
                                              }
                                              else 
#line 2161 
                                                   tmp_115 = 0U;
                                              
#line 2161 
                                              tmp_116 = tmp_115;
                                            }
                                            else 
#line 2161 
                                                 tmp_116 = 0U;
                                            
#line 2161 
                                            tmp_117 = tmp_116;
                                          }
                                          else 
#line 2161 
                                               tmp_117 = 0U;
                                          
#line 2161 
                                          tmp_118 = tmp_117;
                                        }
                                        else 
#line 2161 
                                             tmp_118 = 0U;
                                        
#line 2161 
                                        tmp_119 = tmp_118;
                                      }
                                      else 
#line 2161 
                                           tmp_119 = 0U;
                                      
#line 2161 
                                      tmp_120 = tmp_119;
                                    }
                                    else 
#line 2161 
                                         tmp_120 = 0U;
                                    
#line 2161 
                                    tmp_121 = tmp_120;
                                  }
                                  else 
#line 2161 
                                       tmp_121 = 0U;
                                  
#line 2161 
                                  tmp_122 = tmp_121;
                                }
                                else 
#line 2161 
                                     tmp_122 = 0U;
                                
#line 2161 
                                tmp_123 = tmp_122;
                              }
                              else 
#line 2161 
                                   tmp_123 = 0U;
                              
#line 2161 
                              tmp_124 = tmp_123;
                            }
                            else 
#line 2161 
                                 tmp_124 = 0U;
                            
#line 2161 
                            tmp_125 = tmp_124;
                          }
                          else 
#line 2161 
                               tmp_125 = 0U;
                          
#line 2161 
                          tmp_126 = tmp_125;
                        }
                        else 
#line 2161 
                             tmp_126 = 0U;
                        
#line 2161 
                        tmp_127 = tmp_126;
                      }
                      else 
#line 2161 
                           tmp_127 = 0U;
                      
#line 2161 
                      tmp_128 = tmp_127;
                    }
                    else 
#line 2161 
                         tmp_128 = 0U;
                    
#line 2161 
                    tmp_129 = tmp_128;
                  }
                  else 
#line 2161 
                       tmp_129 = 0U;
                  
#line 2161 
                  tmp_130 = tmp_129;
                }
                else 
#line 2161 
                     tmp_130 = 0U;
                
#line 2161 
                tmp_131 = tmp_130;
              }
              else 
#line 2161 
                   tmp_131 = 0U;
              
#line 2161 
              tmp_132 = tmp_131;
            }
            else 
#line 2161 
                 tmp_132 = 0U;
            
#line 2161 
            tmp_133 = tmp_132;
          }
          else 
#line 2161 
               tmp_133 = 0U;
          
#line 2161 
          tmp_134 = tmp_133;
        }
        
#line 2161 
        tmp_136 = tmp_134;
      }
      else {
        int tmp_135;
        
#line 2161 
        tmp_135 = __ilog2_u32(dq_depth + 4294967295U);
        
#line 2161 
        tmp_136 = (unsigned int)(1UL << (tmp_135 + 1));
      }
      
#line 2161 
      tmp_137 = tmp_136;
    }
    else 
#line 2161 
         tmp_137 = 1U;
    
#line 2161 
    dq_depth = tmp_137;
  }
  else {
    unsigned long tmp_138;
    
#line 2161 
    tmp_138 = __roundup_pow_of_two((unsigned long)dq_depth);
    
#line 2161 
    dq_depth = (unsigned int)tmp_138;
  }
  
#line 2162 
  dq_size = dq_depth * 8U;
  
#line 2163 
  dq_size = (dq_size + 4095U) & 4294963200U;
  
#line 2164 
  dpage_count = (dq_size >> 12) + (unsigned int)((((unsigned long)dq_size & 4095UL) + 4095UL) >> 12);
  
#line 2166 
  if (q_cfg->rxp_type != (unsigned int)BNA_RXP_SINGLE) {
    
#line 2167 
    if (0 != 0) {
      unsigned int tmp_207;
      
#line 2167 
      if (hq_depth != 1U) {
        unsigned int tmp_206;
        
#line 2167 
        if (0 != 0) {
          unsigned int tmp_204;
          
#line 2167 
          if (hq_depth == 1U) {
            int tmp_139;
            
#line 2167 
            tmp_139 = ____ilog2_NaN();
            
#line 2167 
            tmp_204 = (unsigned int)(1UL << (tmp_139 + 1));
          }
          else {
            unsigned int tmp_203;
            
#line 2167 
            if (((unsigned long long)(hq_depth + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
              unsigned int tmp_202;
              
#line 2167 
              if (((unsigned long long)(hq_depth + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
                unsigned int tmp_201;
                
#line 2167 
                if (((unsigned long long)(hq_depth + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                  unsigned int tmp_200;
                  
#line 2167 
                  if (((unsigned long long)(hq_depth + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                    unsigned int tmp_199;
                    
#line 2167 
                    if (((unsigned long long)(hq_depth + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                      unsigned int tmp_198;
                      
#line 2167 
                      if (((unsigned long long)(hq_depth + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                        unsigned int tmp_197;
                        
#line 2167 
                        if (((unsigned long long)(hq_depth + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                          unsigned int tmp_196;
                          
#line 2167 
                          if (((unsigned long long)(hq_depth + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                            unsigned int tmp_195;
                            
#line 2167 
                            if (((unsigned long long)(hq_depth + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                              unsigned int tmp_194;
                              
#line 2167 
                              if (((unsigned long long)(hq_depth + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                                unsigned int tmp_193;
                                
#line 2167 
                                if (((unsigned long long)(hq_depth + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                  unsigned int tmp_192;
                                  
#line 2167 
                                  if (((unsigned long long)(hq_depth + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                    unsigned int tmp_191;
                                    
#line 2167 
                                    if (((unsigned long long)(hq_depth + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                      unsigned int tmp_190;
                                      
#line 2167 
                                      if (((unsigned long long)(hq_depth + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                        unsigned int tmp_189;
                                        
#line 2167 
                                        if (((unsigned long long)(hq_depth + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                          unsigned int tmp_188;
                                          
#line 2167 
                                          if (((unsigned long long)(hq_depth + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                            unsigned int tmp_187;
                                            
#line 2167 
                                            if (((unsigned long long)(hq_depth + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                              unsigned int tmp_186;
                                              
#line 2167 
                                              if (((unsigned long long)(hq_depth + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                                unsigned int tmp_185;
                                                
#line 2167 
                                                if (((unsigned long long)(hq_depth + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                  unsigned int tmp_184;
                                                  
#line 2167 
                                                  if (((unsigned long long)(hq_depth + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                    unsigned int tmp_183;
                                                    
#line 2167 
                                                    if (((unsigned long long)(hq_depth + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                      unsigned int tmp_182;
                                                      
#line 2167 
                                                      if (((unsigned long long)(hq_depth + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                        unsigned int tmp_181;
                                                        
#line 2167 
                                                        if (((unsigned long long)(hq_depth + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                          unsigned int tmp_180;
                                                          
#line 2167 
                                                          if (((unsigned long long)(hq_depth + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                            unsigned int tmp_179;
                                                            
#line 2167 
                                                            if (((unsigned long long)(hq_depth + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                              unsigned int tmp_178;
                                                              
#line 2167 
                                                              if (((unsigned long long)(hq_depth + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                                unsigned int tmp_177;
                                                                
#line 2167 
                                                                if (((unsigned long long)(hq_depth + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                  unsigned int tmp_176;
                                                                  
#line 2167 
                                                                  if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                    unsigned int tmp_175;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_174;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_173;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_172;
                                                                    
#line 2167 
                                                                    if (
                                                                    hq_depth + 4294967295U >= (u32)0) {
                                                                    unsigned int tmp_171;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_170;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_169;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_168;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_167;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_166;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_165;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_164;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_163;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_162;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_161;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_160;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_159;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_158;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_157;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_156;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_155;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_154;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_153;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_152;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_151;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_150;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_149;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_148;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_147;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_146;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_145;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_144;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_143;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_142;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_141;
                                                                    
#line 2167 
                                                                    if (
                                                                    ((unsigned long long)(hq_depth + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_140;
                                                                    
#line 2167 
                                                                    tmp_140 = ____ilog2_NaN();
                                                                    
#line 2167 
                                                                    tmp_141 = (unsigned int)(1UL << (tmp_140 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_141 = 2U;
                                                                    
#line 2167 
                                                                    tmp_142 = tmp_141;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_142 = 4U;
                                                                    
#line 2167 
                                                                    tmp_143 = tmp_142;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_143 = 8U;
                                                                    
#line 2167 
                                                                    tmp_144 = tmp_143;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_144 = 16U;
                                                                    
#line 2167 
                                                                    tmp_145 = tmp_144;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_145 = 32U;
                                                                    
#line 2167 
                                                                    tmp_146 = tmp_145;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_146 = 64U;
                                                                    
#line 2167 
                                                                    tmp_147 = tmp_146;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_147 = 128U;
                                                                    
#line 2167 
                                                                    tmp_148 = tmp_147;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_148 = 256U;
                                                                    
#line 2167 
                                                                    tmp_149 = tmp_148;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_149 = 512U;
                                                                    
#line 2167 
                                                                    tmp_150 = tmp_149;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_150 = 1024U;
                                                                    
#line 2167 
                                                                    tmp_151 = tmp_150;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_151 = 2048U;
                                                                    
#line 2167 
                                                                    tmp_152 = tmp_151;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_152 = 4096U;
                                                                    
#line 2167 
                                                                    tmp_153 = tmp_152;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_153 = 8192U;
                                                                    
#line 2167 
                                                                    tmp_154 = tmp_153;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_154 = 16384U;
                                                                    
#line 2167 
                                                                    tmp_155 = tmp_154;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_155 = 32768U;
                                                                    
#line 2167 
                                                                    tmp_156 = tmp_155;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_156 = 65536U;
                                                                    
#line 2167 
                                                                    tmp_157 = tmp_156;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_157 = 131072U;
                                                                    
#line 2167 
                                                                    tmp_158 = tmp_157;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_158 = 262144U;
                                                                    
#line 2167 
                                                                    tmp_159 = tmp_158;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_159 = 524288U;
                                                                    
#line 2167 
                                                                    tmp_160 = tmp_159;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_160 = 1048576U;
                                                                    
#line 2167 
                                                                    tmp_161 = tmp_160;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_161 = 2097152U;
                                                                    
#line 2167 
                                                                    tmp_162 = tmp_161;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_162 = 4194304U;
                                                                    
#line 2167 
                                                                    tmp_163 = tmp_162;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_163 = 8388608U;
                                                                    
#line 2167 
                                                                    tmp_164 = tmp_163;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_164 = 16777216U;
                                                                    
#line 2167 
                                                                    tmp_165 = tmp_164;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_165 = 33554432U;
                                                                    
#line 2167 
                                                                    tmp_166 = tmp_165;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_166 = 67108864U;
                                                                    
#line 2167 
                                                                    tmp_167 = tmp_166;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_167 = 134217728U;
                                                                    
#line 2167 
                                                                    tmp_168 = tmp_167;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_168 = 268435456U;
                                                                    
#line 2167 
                                                                    tmp_169 = tmp_168;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_169 = 536870912U;
                                                                    
#line 2167 
                                                                    tmp_170 = tmp_169;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_170 = 1073741824U;
                                                                    
#line 2167 
                                                                    tmp_171 = tmp_170;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_171 = 2147483648U;
                                                                    
#line 2167 
                                                                    tmp_172 = tmp_171;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_172 = 0U;
                                                                    
#line 2167 
                                                                    tmp_173 = tmp_172;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_173 = 0U;
                                                                    
#line 2167 
                                                                    tmp_174 = tmp_173;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_174 = 0U;
                                                                    
#line 2167 
                                                                    tmp_175 = tmp_174;
                                                                    }
                                                                    else 
                                                                    
#line 2167 
                                                                    tmp_175 = 0U;
                                                                    
#line 2167 
                                                                    tmp_176 = tmp_175;
                                                                  }
                                                                  else 
                                                                    
#line 2167 
                                                                    tmp_176 = 0U;
                                                                  
#line 2167 
                                                                  tmp_177 = tmp_176;
                                                                }
                                                                else 
                                                                  
#line 2167 
                                                                  tmp_177 = 0U;
                                                                
#line 2167 
                                                                tmp_178 = tmp_177;
                                                              }
                                                              else 
#line 2167 
                                                                   tmp_178 = 0U;
                                                              
#line 2167 
                                                              tmp_179 = tmp_178;
                                                            }
                                                            else 
#line 2167 
                                                                 tmp_179 = 0U;
                                                            
#line 2167 
                                                            tmp_180 = tmp_179;
                                                          }
                                                          else 
#line 2167 
                                                               tmp_180 = 0U;
                                                          
#line 2167 
                                                          tmp_181 = tmp_180;
                                                        }
                                                        else 
#line 2167 
                                                             tmp_181 = 0U;
                                                        
#line 2167 
                                                        tmp_182 = tmp_181;
                                                      }
                                                      else 
#line 2167 
                                                           tmp_182 = 0U;
                                                      
#line 2167 
                                                      tmp_183 = tmp_182;
                                                    }
                                                    else 
#line 2167 
                                                         tmp_183 = 0U;
                                                    
#line 2167 
                                                    tmp_184 = tmp_183;
                                                  }
                                                  else 
#line 2167 
                                                       tmp_184 = 0U;
                                                  
#line 2167 
                                                  tmp_185 = tmp_184;
                                                }
                                                else 
#line 2167 
                                                     tmp_185 = 0U;
                                                
#line 2167 
                                                tmp_186 = tmp_185;
                                              }
                                              else 
#line 2167 
                                                   tmp_186 = 0U;
                                              
#line 2167 
                                              tmp_187 = tmp_186;
                                            }
                                            else 
#line 2167 
                                                 tmp_187 = 0U;
                                            
#line 2167 
                                            tmp_188 = tmp_187;
                                          }
                                          else 
#line 2167 
                                               tmp_188 = 0U;
                                          
#line 2167 
                                          tmp_189 = tmp_188;
                                        }
                                        else 
#line 2167 
                                             tmp_189 = 0U;
                                        
#line 2167 
                                        tmp_190 = tmp_189;
                                      }
                                      else 
#line 2167 
                                           tmp_190 = 0U;
                                      
#line 2167 
                                      tmp_191 = tmp_190;
                                    }
                                    else 
#line 2167 
                                         tmp_191 = 0U;
                                    
#line 2167 
                                    tmp_192 = tmp_191;
                                  }
                                  else 
#line 2167 
                                       tmp_192 = 0U;
                                  
#line 2167 
                                  tmp_193 = tmp_192;
                                }
                                else 
#line 2167 
                                     tmp_193 = 0U;
                                
#line 2167 
                                tmp_194 = tmp_193;
                              }
                              else 
#line 2167 
                                   tmp_194 = 0U;
                              
#line 2167 
                              tmp_195 = tmp_194;
                            }
                            else 
#line 2167 
                                 tmp_195 = 0U;
                            
#line 2167 
                            tmp_196 = tmp_195;
                          }
                          else 
#line 2167 
                               tmp_196 = 0U;
                          
#line 2167 
                          tmp_197 = tmp_196;
                        }
                        else 
#line 2167 
                             tmp_197 = 0U;
                        
#line 2167 
                        tmp_198 = tmp_197;
                      }
                      else 
#line 2167 
                           tmp_198 = 0U;
                      
#line 2167 
                      tmp_199 = tmp_198;
                    }
                    else 
#line 2167 
                         tmp_199 = 0U;
                    
#line 2167 
                    tmp_200 = tmp_199;
                  }
                  else 
#line 2167 
                       tmp_200 = 0U;
                  
#line 2167 
                  tmp_201 = tmp_200;
                }
                else 
#line 2167 
                     tmp_201 = 0U;
                
#line 2167 
                tmp_202 = tmp_201;
              }
              else 
#line 2167 
                   tmp_202 = 0U;
              
#line 2167 
              tmp_203 = tmp_202;
            }
            else 
#line 2167 
                 tmp_203 = 0U;
            
#line 2167 
            tmp_204 = tmp_203;
          }
          
#line 2167 
          tmp_206 = tmp_204;
        }
        else {
          int tmp_205;
          
#line 2167 
          tmp_205 = __ilog2_u32(hq_depth + 4294967295U);
          
#line 2167 
          tmp_206 = (unsigned int)(1UL << (tmp_205 + 1));
        }
        
#line 2167 
        tmp_207 = tmp_206;
      }
      else 
#line 2167 
           tmp_207 = 1U;
      
#line 2167 
      hq_depth = tmp_207;
    }
    else {
      unsigned long tmp_208;
      
#line 2167 
      tmp_208 = __roundup_pow_of_two((unsigned long)hq_depth);
      
#line 2167 
      hq_depth = (unsigned int)tmp_208;
    }
    
#line 2168 
    hq_size = hq_depth * 8U;
    
#line 2169 
    hq_size = (hq_size + 4095U) & 4294963200U;
    
#line 2170 
    hpage_count = (hq_size >> 12) + (unsigned int)((((unsigned long)hq_size & 4095UL) + 4095UL) >> 12);
  }
  else 
#line 2172 
       hpage_count = 0U;
  
#line 2174 
  res_info->res_type = BNA_RES_T_MEM;
  
#line 2175 
  mem_info = & res_info->res_u.mem_info;
  
#line 2176 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 2177 
  mem_info->len = 144U;
  
#line 2178 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2180 
  (res_info + 1U)->res_type = BNA_RES_T_MEM;
  
#line 2181 
  mem_info = & (res_info + 1U)->res_u.mem_info;
  
#line 2182 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 2183 
  mem_info->len = 96U;
  
#line 2184 
  if (q_cfg->rxp_type == (unsigned int)BNA_RXP_SINGLE) 
#line 2184 
                                                       tmp_209 = q_cfg->num_paths; else 
                                                                    
#line 2184 
                                                                    tmp_209 = q_cfg->num_paths * 2;
  
#line 2184 
  mem_info->num = (unsigned int)tmp_209;
  
#line 2186 
  (res_info + 4U)->res_type = BNA_RES_T_MEM;
  
#line 2187 
  mem_info = & (res_info + 4U)->res_u.mem_info;
  
#line 2188 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2189 
  mem_info->len = cpage_count * 8U;
  
#line 2190 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2192 
  (res_info + 5U)->res_type = BNA_RES_T_MEM;
  
#line 2193 
  mem_info = & (res_info + 5U)->res_u.mem_info;
  
#line 2194 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 2195 
  mem_info->len = cpage_count * 8U;
  
#line 2196 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2198 
  (res_info + 6U)->res_type = BNA_RES_T_MEM;
  
#line 2199 
  mem_info = & (res_info + 6U)->res_u.mem_info;
  
#line 2200 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2201 
  mem_info->len = cpage_count * 4096U;
  
#line 2202 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2204 
  (res_info + 8U)->res_type = BNA_RES_T_MEM;
  
#line 2205 
  mem_info = & (res_info + 8U)->res_u.mem_info;
  
#line 2206 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2207 
  mem_info->len = dpage_count * 8U;
  
#line 2208 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2210 
  (res_info + 10U)->res_type = BNA_RES_T_MEM;
  
#line 2211 
  mem_info = & (res_info + 10U)->res_u.mem_info;
  
#line 2212 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 2213 
  mem_info->len = dpage_count * 8U;
  
#line 2214 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2216 
  (res_info + 11U)->res_type = BNA_RES_T_MEM;
  
#line 2217 
  mem_info = & (res_info + 11U)->res_u.mem_info;
  
#line 2218 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2219 
  mem_info->len = dpage_count * 4096U;
  
#line 2220 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2222 
  (res_info + 7U)->res_type = BNA_RES_T_MEM;
  
#line 2223 
  mem_info = & (res_info + 7U)->res_u.mem_info;
  
#line 2224 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2225 
  mem_info->len = hpage_count * 8U;
  
#line 2226 
  if (hpage_count != 0U) 
#line 2226 
                         tmp_210 = q_cfg->num_paths; else 
#line 2226 
                                                          tmp_210 = 0;
  
#line 2226 
  mem_info->num = (unsigned int)tmp_210;
  
#line 2228 
  (res_info + 9U)->res_type = BNA_RES_T_MEM;
  
#line 2229 
  mem_info = & (res_info + 9U)->res_u.mem_info;
  
#line 2230 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 2231 
  mem_info->len = hpage_count * 8U;
  
#line 2232 
  if (hpage_count != 0U) 
#line 2232 
                         tmp_211 = q_cfg->num_paths; else 
#line 2232 
                                                          tmp_211 = 0;
  
#line 2232 
  mem_info->num = (unsigned int)tmp_211;
  
#line 2234 
  (res_info + 12U)->res_type = BNA_RES_T_MEM;
  
#line 2235 
  mem_info = & (res_info + 12U)->res_u.mem_info;
  
#line 2236 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2237 
  mem_info->len = hpage_count * 4096U;
  
#line 2238 
  if (hpage_count != 0U) 
#line 2238 
                         tmp_212 = q_cfg->num_paths; else 
#line 2238 
                                                          tmp_212 = 0;
  
#line 2238 
  mem_info->num = (unsigned int)tmp_212;
  
#line 2240 
  (res_info + 13U)->res_type = BNA_RES_T_MEM;
  
#line 2241 
  mem_info = & (res_info + 13U)->res_u.mem_info;
  
#line 2242 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 2243 
  mem_info->len = 4U;
  
#line 2244 
  mem_info->num = (unsigned int)q_cfg->num_paths;
  
#line 2246 
  (res_info + 14U)->res_type = BNA_RES_T_MEM;
  
#line 2247 
  mem_info = & (res_info + 14U)->res_u.mem_info;
  
#line 2248 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 2249 
  mem_info->len = 64U;
  
#line 2250 
  mem_info->num = 1U;
  
#line 2252 
  (res_info + 15U)->res_type = BNA_RES_T_INTR;
  
#line 2253 
  (res_info + 15U)->res_u.intr_info.intr_type = BNA_INTR_T_MSIX;
  
#line 2254 
  (res_info + 15U)->res_u.intr_info.num = q_cfg->num_paths;
  
#line 2255 
  return;
}


#line 2258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
struct bna_rx *bna_rx_create(struct bna *bna, struct bnad *bnad, struct bna_rx_config *rx_cfg, struct bna_rx_event_cbfn const *rx_cbfn, struct bna_res_info *res_info, void *priv)
{
  struct bna_rx *__retres;
  struct bna_rx *rx;
  struct bna_rxp *rxp;
  struct bna_rxq *q0;
  struct bna_rxq *q1;
  struct bna_intr_info *intr_info;
  struct bna_mem_descr *hqunmap_mem;
  struct bna_mem_descr *dqunmap_mem;
  struct bna_mem_descr *ccb_mem;
  struct bna_mem_descr *rcb_mem;
  struct bna_mem_descr *cqpt_mem;
  struct bna_mem_descr *cswqpt_mem;
  struct bna_mem_descr *cpage_mem;
  struct bna_mem_descr *hqpt_mem;
  struct bna_mem_descr *dqpt_mem;
  struct bna_mem_descr *hsqpt_mem;
  struct bna_mem_descr *dsqpt_mem;
  struct bna_mem_descr *hpage_mem;
  struct bna_mem_descr *dpage_mem;
  u32 dpage_count;
  u32 hpage_count;
  u32 hq_idx;
  u32 dq_idx;
  u32 rcb_idx;
  u32 cq_depth;
  u32 i;
  u32 page_count_0;
  int tmp;
  u64 tmp_0;
  u64 tmp_1;
  u32 tmp_5;
  
#line 2264 
  struct bna_rx_mod *rx_mod = & bna->rx_mod;
  
#line 2288 
  tmp = bna_rx_res_check(rx_mod,rx_cfg);
  
#line 2288 
  if (tmp == 0) {
    
#line 2289 
    __retres = (struct bna_rx *)0;
    
#line 2289 
    goto return_label;
  }
  else ;
  
#line 2291 
  intr_info = & (res_info + 15U)->res_u.intr_info;
  
#line 2292 
  ccb_mem = res_info->res_u.mem_info.mdl;
  
#line 2293 
  rcb_mem = (res_info + 1U)->res_u.mem_info.mdl;
  
#line 2294 
  dqunmap_mem = (res_info + 3U)->res_u.mem_info.mdl;
  
#line 2295 
  hqunmap_mem = (res_info + 2U)->res_u.mem_info.mdl;
  
#line 2296 
  cqpt_mem = (res_info + 4U)->res_u.mem_info.mdl;
  
#line 2297 
  cswqpt_mem = (res_info + 5U)->res_u.mem_info.mdl;
  
#line 2298 
  cpage_mem = (res_info + 6U)->res_u.mem_info.mdl;
  
#line 2299 
  hqpt_mem = (res_info + 7U)->res_u.mem_info.mdl;
  
#line 2300 
  dqpt_mem = (res_info + 8U)->res_u.mem_info.mdl;
  
#line 2301 
  hsqpt_mem = (res_info + 9U)->res_u.mem_info.mdl;
  
#line 2302 
  dsqpt_mem = (res_info + 10U)->res_u.mem_info.mdl;
  
#line 2303 
  hpage_mem = (res_info + 12U)->res_u.mem_info.mdl;
  
#line 2304 
  dpage_mem = (res_info + 11U)->res_u.mem_info.mdl;
  
#line 2306 
  page_count_0 = (res_info + 6U)->res_u.mem_info.len / 4096U;
  
#line 2309 
  dpage_count = (res_info + 11U)->res_u.mem_info.len / 4096U;
  
#line 2312 
  hpage_count = (res_info + 12U)->res_u.mem_info.len / 4096U;
  
#line 2315 
  rx = bna_rx_get(rx_mod,rx_cfg->rx_type);
  
#line 2316 
  rx->bna = bna;
  
#line 2317 
  rx->rx_flags = (enum bna_rx_flags)0;
  
#line 2318 
  INIT_LIST_HEAD(& rx->rxp_q);
  
#line 2319 
  rx->stop_cbfn = (void (*)(void *, struct bna_rx *))0;
  
#line 2320 
  rx->stop_cbarg = (void *)0;
  
#line 2321 
  rx->priv = priv;
  
#line 2323 
  rx->rcb_setup_cbfn = rx_cbfn->rcb_setup_cbfn;
  
#line 2324 
  rx->rcb_destroy_cbfn = rx_cbfn->rcb_destroy_cbfn;
  
#line 2325 
  rx->ccb_setup_cbfn = rx_cbfn->ccb_setup_cbfn;
  
#line 2326 
  rx->ccb_destroy_cbfn = rx_cbfn->ccb_destroy_cbfn;
  
#line 2327 
  rx->rx_stall_cbfn = rx_cbfn->rx_stall_cbfn;
  
#line 2329 
  rx->rx_cleanup_cbfn = rx_cbfn->rx_cleanup_cbfn;
  
#line 2330 
  rx->rx_post_cbfn = rx_cbfn->rx_post_cbfn;
  
#line 2332 
  if (((unsigned int)(rx->bna)->rx_mod.flags & 1U) != 0U) {
    
#line 2333 
    switch ((unsigned int)rx->type) {
      case (unsigned int)0: 
#line 2334 
      ;
      
#line 2335 
      if (((unsigned int)(rx->bna)->rx_mod.flags & 2U) == 0U) 
#line 2337 
                                                              rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags | 1U); else ;
      
#line 2338 
      goto ldv_49361;
      case (unsigned int)1: 
#line 2339 
      ;
      
#line 2340 
      if (((unsigned int)(rx->bna)->rx_mod.flags & 2U) != 0U) 
#line 2341 
                                                              rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags | 1U); else ;
      
#line 2342 
      goto ldv_49361;
    }
    ldv_49361: 
#line 2344 
    ;
  }
  else ;
  
#line 2346 
  rx->num_paths = rx_cfg->num_paths;
  
#line 2347 
  i = 0U;
  
#line 2347 
  hq_idx = 0U;
  
#line 2347 
  dq_idx = 0U;
  
#line 2347 
  rcb_idx = 0U;
  
#line 2347 
  goto ldv_49364;
  ldv_49363: 
#line 2348 
  ;
  
#line 2349 
  rxp = bna_rxp_get(rx_mod);
  
#line 2350 
  list_add_tail(& rxp->qe,& rx->rxp_q);
  
#line 2351 
  rxp->type = rx_cfg->rxp_type;
  
#line 2352 
  rxp->rx = rx;
  
#line 2353 
  rxp->cq.rx = rx;
  
#line 2355 
  q0 = bna_rxq_get(rx_mod);
  
#line 2356 
  if (rx_cfg->rxp_type == (unsigned int)BNA_RXP_SINGLE) 
#line 2357 
                                                        q1 = (struct bna_rxq *)0; else 
                                                                    
#line 2359 
                                                                    q1 = bna_rxq_get(rx_mod);
  
#line 2361 
  if (intr_info->num == 1) 
#line 2362 
                           rxp->vector = (intr_info->idl)->vector; else 
                                                                    
#line 2364 
                                                                    rxp->vector = (intr_info->idl + i)->vector;
  
#line 2368 
  rxp->cq.ib.ib_seg_host_addr.lsb = ((res_info + 13U)->res_u.mem_info.mdl + i)->dma.lsb;
  
#line 2370 
  rxp->cq.ib.ib_seg_host_addr.msb = ((res_info + 13U)->res_u.mem_info.mdl + i)->dma.msb;
  
#line 2372 
  rxp->cq.ib.ib_seg_host_addr_kva = ((res_info + 13U)->res_u.mem_info.mdl + i)->kva;
  
#line 2374 
  rxp->cq.ib.intr_type = intr_info->intr_type;
  
#line 2375 
  if (intr_info->intr_type == (unsigned int)BNA_INTR_T_MSIX) 
#line 2376 
                                                             rxp->cq.ib.intr_vector = rxp->vector; else 
                                                                    
#line 2378 
                                                                    rxp->cq.ib.intr_vector = (int)(1UL << rxp->vector);
  
#line 2379 
  rxp->cq.ib.coalescing_timeo = (unsigned char)rx_cfg->coalescing_timeo;
  
#line 2380 
  rxp->cq.ib.interpkt_count = 6;
  
#line 2381 
  rxp->cq.ib.interpkt_timeo = 3;
  
#line 2383 
  bna_rxp_add_rxqs(rxp,q0,q1);
  
#line 2387 
  q0->rx = rx;
  
#line 2388 
  q0->rxp = rxp;
  
#line 2390 
  q0->rcb = (struct bna_rcb *)(rcb_mem + rcb_idx)->kva;
  
#line 2391 
  (q0->rcb)->unmap_q = (dqunmap_mem + dq_idx)->kva;
  
#line 2392 
  rcb_idx += 1U;
  
#line 2392 
  dq_idx += 1U;
  
#line 2393 
  (q0->rcb)->q_depth = rx_cfg->q0_depth;
  
#line 2394 
  q0->q_depth = (int)rx_cfg->q0_depth;
  
#line 2395 
  q0->multi_buffer = rx_cfg->q0_multi_buf;
  
#line 2396 
  q0->buffer_size = (int)rx_cfg->q0_buf_size;
  
#line 2397 
  q0->num_vecs = rx_cfg->q0_num_vecs;
  
#line 2398 
  (q0->rcb)->rxq = q0;
  
#line 2399 
  (q0->rcb)->bnad = bna->bnad;
  
#line 2400 
  (q0->rcb)->id = 0;
  
#line 2401 
  tmp_0 = 0ULL;
  
#line 2401 
  q0->rx_bytes = tmp_0;
  
#line 2401 
  q0->rx_packets = tmp_0;
  
#line 2402 
  tmp_1 = 0ULL;
  
#line 2402 
  q0->rxbuf_alloc_failed = tmp_1;
  
#line 2402 
  q0->rx_packets_with_error = tmp_1;
  
#line 2404 
  bna_rxq_qpt_setup(q0,rxp,dpage_count,4096U,dqpt_mem + i,dsqpt_mem + i,dpage_mem + i);
  
#line 2407 
  if (rx->rcb_setup_cbfn != (void (*)(struct bnad *, struct bna_rcb *))0) 
    
#line 2408 
    (*(rx->rcb_setup_cbfn))(bnad,q0->rcb); else ;
  
#line 2412 
  if (q1 != (struct bna_rxq *)0) {
    unsigned int tmp_2;
    u64 tmp_3;
    u64 tmp_4;
    
#line 2413 
    q1->rx = rx;
    
#line 2414 
    q1->rxp = rxp;
    
#line 2416 
    q1->rcb = (struct bna_rcb *)(rcb_mem + rcb_idx)->kva;
    
#line 2417 
    (q1->rcb)->unmap_q = (hqunmap_mem + hq_idx)->kva;
    
#line 2418 
    rcb_idx += 1U;
    
#line 2418 
    hq_idx += 1U;
    
#line 2419 
    (q1->rcb)->q_depth = rx_cfg->q1_depth;
    
#line 2420 
    q1->q_depth = (int)rx_cfg->q1_depth;
    
#line 2421 
    q1->multi_buffer = BNA_STATUS_T_DISABLED;
    
#line 2422 
    q1->num_vecs = 1U;
    
#line 2423 
    (q1->rcb)->rxq = q1;
    
#line 2424 
    (q1->rcb)->bnad = bna->bnad;
    
#line 2425 
    (q1->rcb)->id = 1;
    
#line 2428 
    if (rx_cfg->rxp_type == (unsigned int)BNA_RXP_HDS) 
#line 2428 
                                                       tmp_2 = (unsigned int)rx_cfg->hds_config.forced_offset; else 
                                                                    
#line 2428 
                                                                    tmp_2 = rx_cfg->q1_buf_size;
    
#line 2426 
    q1->buffer_size = (int)tmp_2;
    
#line 2429 
    tmp_3 = 0ULL;
    
#line 2429 
    q1->rx_bytes = tmp_3;
    
#line 2429 
    q1->rx_packets = tmp_3;
    
#line 2430 
    tmp_4 = 0ULL;
    
#line 2430 
    q1->rxbuf_alloc_failed = tmp_4;
    
#line 2430 
    q1->rx_packets_with_error = tmp_4;
    
#line 2432 
    bna_rxq_qpt_setup(q1,rxp,hpage_count,4096U,hqpt_mem + i,hsqpt_mem + i,hpage_mem + i);
    
#line 2436 
    if (rx->rcb_setup_cbfn != (void (*)(struct bnad *, struct bna_rcb *))0) 
      
#line 2437 
      (*(rx->rcb_setup_cbfn))(bnad,q1->rcb); else ;
  }
  else ;
  
#line 2442 
  rxp->cq.ccb = (struct bna_ccb *)(ccb_mem + i)->kva;
  
#line 2443 
  if (rx_cfg->rxp_type != (unsigned int)BNA_RXP_SINGLE) 
#line 2443 
                                                        tmp_5 = rx_cfg->q1_depth; else 
                                                                    
#line 2443 
                                                                    tmp_5 = 0U;
  
#line 2443 
  cq_depth = rx_cfg->q0_depth + tmp_5;
  
#line 2449 
  if (0 != 0) {
    unsigned int tmp_74;
    
#line 2449 
    if (cq_depth != 1U) {
      unsigned int tmp_73;
      
#line 2449 
      if (0 != 0) {
        unsigned int tmp_71;
        
#line 2449 
        if (cq_depth == 1U) {
          int tmp_6;
          
#line 2449 
          tmp_6 = ____ilog2_NaN();
          
#line 2449 
          tmp_71 = (unsigned int)(1UL << (tmp_6 + 1));
        }
        else {
          unsigned int tmp_70;
          
#line 2449 
          if (((unsigned long long)(cq_depth + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_69;
            
#line 2449 
            if (((unsigned long long)(cq_depth + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_68;
              
#line 2449 
              if (((unsigned long long)(cq_depth + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_67;
                
#line 2449 
                if (((unsigned long long)(cq_depth + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_66;
                  
#line 2449 
                  if (((unsigned long long)(cq_depth + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_65;
                    
#line 2449 
                    if (((unsigned long long)(cq_depth + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_64;
                      
#line 2449 
                      if (((unsigned long long)(cq_depth + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_63;
                        
#line 2449 
                        if (((unsigned long long)(cq_depth + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_62;
                          
#line 2449 
                          if (((unsigned long long)(cq_depth + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_61;
                            
#line 2449 
                            if (((unsigned long long)(cq_depth + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_60;
                              
#line 2449 
                              if (((unsigned long long)(cq_depth + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_59;
                                
#line 2449 
                                if (((unsigned long long)(cq_depth + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_58;
                                  
#line 2449 
                                  if (((unsigned long long)(cq_depth + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_57;
                                    
#line 2449 
                                    if (((unsigned long long)(cq_depth + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_56;
                                      
#line 2449 
                                      if (((unsigned long long)(cq_depth + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_55;
                                        
#line 2449 
                                        if (((unsigned long long)(cq_depth + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_54;
                                          
#line 2449 
                                          if (((unsigned long long)(cq_depth + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_53;
                                            
#line 2449 
                                            if (((unsigned long long)(cq_depth + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_52;
                                              
#line 2449 
                                              if (((unsigned long long)(cq_depth + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_51;
                                                
#line 2449 
                                                if (((unsigned long long)(cq_depth + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_50;
                                                  
#line 2449 
                                                  if (((unsigned long long)(cq_depth + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_49;
                                                    
#line 2449 
                                                    if (((unsigned long long)(cq_depth + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_48;
                                                      
#line 2449 
                                                      if (((unsigned long long)(cq_depth + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_47;
                                                        
#line 2449 
                                                        if (((unsigned long long)(cq_depth + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_46;
                                                          
#line 2449 
                                                          if (((unsigned long long)(cq_depth + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_45;
                                                            
#line 2449 
                                                            if (((unsigned long long)(cq_depth + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_44;
                                                              
#line 2449 
                                                              if (((unsigned long long)(cq_depth + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_43;
                                                                
#line 2449 
                                                                if (((unsigned long long)(cq_depth + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_42;
                                                                  
#line 2449 
                                                                  if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_41;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_40;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_39;
                                                                    
#line 2449 
                                                                    if (
                                                                    cq_depth + 4294967295U >= (u32)0) {
                                                                    unsigned int tmp_38;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_37;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_36;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_10;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_9;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_8;
                                                                    
#line 2449 
                                                                    if (
                                                                    ((unsigned long long)(cq_depth + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_7;
                                                                    
#line 2449 
                                                                    tmp_7 = ____ilog2_NaN();
                                                                    
#line 2449 
                                                                    tmp_8 = (unsigned int)(1UL << (tmp_7 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_8 = 2U;
                                                                    
#line 2449 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_9 = 4U;
                                                                    
#line 2449 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_10 = 8U;
                                                                    
#line 2449 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_11 = 16U;
                                                                    
#line 2449 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_12 = 32U;
                                                                    
#line 2449 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_13 = 64U;
                                                                    
#line 2449 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_14 = 128U;
                                                                    
#line 2449 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_15 = 256U;
                                                                    
#line 2449 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_16 = 512U;
                                                                    
#line 2449 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_17 = 1024U;
                                                                    
#line 2449 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_18 = 2048U;
                                                                    
#line 2449 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_19 = 4096U;
                                                                    
#line 2449 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_20 = 8192U;
                                                                    
#line 2449 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_21 = 16384U;
                                                                    
#line 2449 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_22 = 32768U;
                                                                    
#line 2449 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_23 = 65536U;
                                                                    
#line 2449 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_24 = 131072U;
                                                                    
#line 2449 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_25 = 262144U;
                                                                    
#line 2449 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_26 = 524288U;
                                                                    
#line 2449 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_27 = 1048576U;
                                                                    
#line 2449 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_28 = 2097152U;
                                                                    
#line 2449 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_29 = 4194304U;
                                                                    
#line 2449 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_30 = 8388608U;
                                                                    
#line 2449 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_31 = 16777216U;
                                                                    
#line 2449 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_32 = 33554432U;
                                                                    
#line 2449 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_33 = 67108864U;
                                                                    
#line 2449 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_34 = 134217728U;
                                                                    
#line 2449 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_35 = 268435456U;
                                                                    
#line 2449 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_36 = 536870912U;
                                                                    
#line 2449 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_37 = 1073741824U;
                                                                    
#line 2449 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_38 = 2147483648U;
                                                                    
#line 2449 
                                                                    tmp_39 = tmp_38;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_39 = 0U;
                                                                    
#line 2449 
                                                                    tmp_40 = tmp_39;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_40 = 0U;
                                                                    
#line 2449 
                                                                    tmp_41 = tmp_40;
                                                                    }
                                                                    else 
                                                                    
#line 2449 
                                                                    tmp_41 = 0U;
                                                                    
#line 2449 
                                                                    tmp_42 = tmp_41;
                                                                  }
                                                                  else 
                                                                    
#line 2449 
                                                                    tmp_42 = 0U;
                                                                  
#line 2449 
                                                                  tmp_43 = tmp_42;
                                                                }
                                                                else 
                                                                  
#line 2449 
                                                                  tmp_43 = 0U;
                                                                
#line 2449 
                                                                tmp_44 = tmp_43;
                                                              }
                                                              else 
#line 2449 
                                                                   tmp_44 = 0U;
                                                              
#line 2449 
                                                              tmp_45 = tmp_44;
                                                            }
                                                            else 
#line 2449 
                                                                 tmp_45 = 0U;
                                                            
#line 2449 
                                                            tmp_46 = tmp_45;
                                                          }
                                                          else 
#line 2449 
                                                               tmp_46 = 0U;
                                                          
#line 2449 
                                                          tmp_47 = tmp_46;
                                                        }
                                                        else 
#line 2449 
                                                             tmp_47 = 0U;
                                                        
#line 2449 
                                                        tmp_48 = tmp_47;
                                                      }
                                                      else 
#line 2449 
                                                           tmp_48 = 0U;
                                                      
#line 2449 
                                                      tmp_49 = tmp_48;
                                                    }
                                                    else 
#line 2449 
                                                         tmp_49 = 0U;
                                                    
#line 2449 
                                                    tmp_50 = tmp_49;
                                                  }
                                                  else 
#line 2449 
                                                       tmp_50 = 0U;
                                                  
#line 2449 
                                                  tmp_51 = tmp_50;
                                                }
                                                else 
#line 2449 
                                                     tmp_51 = 0U;
                                                
#line 2449 
                                                tmp_52 = tmp_51;
                                              }
                                              else 
#line 2449 
                                                   tmp_52 = 0U;
                                              
#line 2449 
                                              tmp_53 = tmp_52;
                                            }
                                            else 
#line 2449 
                                                 tmp_53 = 0U;
                                            
#line 2449 
                                            tmp_54 = tmp_53;
                                          }
                                          else 
#line 2449 
                                               tmp_54 = 0U;
                                          
#line 2449 
                                          tmp_55 = tmp_54;
                                        }
                                        else 
#line 2449 
                                             tmp_55 = 0U;
                                        
#line 2449 
                                        tmp_56 = tmp_55;
                                      }
                                      else 
#line 2449 
                                           tmp_56 = 0U;
                                      
#line 2449 
                                      tmp_57 = tmp_56;
                                    }
                                    else 
#line 2449 
                                         tmp_57 = 0U;
                                    
#line 2449 
                                    tmp_58 = tmp_57;
                                  }
                                  else 
#line 2449 
                                       tmp_58 = 0U;
                                  
#line 2449 
                                  tmp_59 = tmp_58;
                                }
                                else 
#line 2449 
                                     tmp_59 = 0U;
                                
#line 2449 
                                tmp_60 = tmp_59;
                              }
                              else 
#line 2449 
                                   tmp_60 = 0U;
                              
#line 2449 
                              tmp_61 = tmp_60;
                            }
                            else 
#line 2449 
                                 tmp_61 = 0U;
                            
#line 2449 
                            tmp_62 = tmp_61;
                          }
                          else 
#line 2449 
                               tmp_62 = 0U;
                          
#line 2449 
                          tmp_63 = tmp_62;
                        }
                        else 
#line 2449 
                             tmp_63 = 0U;
                        
#line 2449 
                        tmp_64 = tmp_63;
                      }
                      else 
#line 2449 
                           tmp_64 = 0U;
                      
#line 2449 
                      tmp_65 = tmp_64;
                    }
                    else 
#line 2449 
                         tmp_65 = 0U;
                    
#line 2449 
                    tmp_66 = tmp_65;
                  }
                  else 
#line 2449 
                       tmp_66 = 0U;
                  
#line 2449 
                  tmp_67 = tmp_66;
                }
                else 
#line 2449 
                     tmp_67 = 0U;
                
#line 2449 
                tmp_68 = tmp_67;
              }
              else 
#line 2449 
                   tmp_68 = 0U;
              
#line 2449 
              tmp_69 = tmp_68;
            }
            else 
#line 2449 
                 tmp_69 = 0U;
            
#line 2449 
            tmp_70 = tmp_69;
          }
          else 
#line 2449 
               tmp_70 = 0U;
          
#line 2449 
          tmp_71 = tmp_70;
        }
        
#line 2449 
        tmp_73 = tmp_71;
      }
      else {
        int tmp_72;
        
#line 2449 
        tmp_72 = __ilog2_u32(cq_depth + 4294967295U);
        
#line 2449 
        tmp_73 = (unsigned int)(1UL << (tmp_72 + 1));
      }
      
#line 2449 
      tmp_74 = tmp_73;
    }
    else 
#line 2449 
         tmp_74 = 1U;
    
#line 2449 
    cq_depth = tmp_74;
  }
  else {
    unsigned long tmp_75;
    
#line 2449 
    tmp_75 = __roundup_pow_of_two((unsigned long)cq_depth);
    
#line 2449 
    cq_depth = (unsigned int)tmp_75;
  }
  
#line 2450 
  (rxp->cq.ccb)->q_depth = cq_depth;
  
#line 2451 
  (rxp->cq.ccb)->cq = & rxp->cq;
  
#line 2452 
  (rxp->cq.ccb)->rcb[0] = q0->rcb;
  
#line 2453 
  (q0->rcb)->ccb = rxp->cq.ccb;
  
#line 2454 
  if (q1 != (struct bna_rxq *)0) {
    
#line 2455 
    (rxp->cq.ccb)->rcb[1] = q1->rcb;
    
#line 2456 
    (q1->rcb)->ccb = rxp->cq.ccb;
  }
  else ;
  
#line 2458 
  (rxp->cq.ccb)->hw_producer_index = (u32 volatile *)rxp->cq.ib.ib_seg_host_addr_kva;
  
#line 2460 
  (rxp->cq.ccb)->i_dbell = & rxp->cq.ib.door_bell;
  
#line 2461 
  (rxp->cq.ccb)->intr_type = rxp->cq.ib.intr_type;
  
#line 2462 
  (rxp->cq.ccb)->intr_vector = rxp->cq.ib.intr_vector;
  
#line 2463 
  (rxp->cq.ccb)->rx_coalescing_timeo = rxp->cq.ib.coalescing_timeo;
  
#line 2465 
  (rxp->cq.ccb)->pkt_rate.small_pkt_cnt = 0U;
  
#line 2466 
  (rxp->cq.ccb)->pkt_rate.large_pkt_cnt = 0U;
  
#line 2467 
  (rxp->cq.ccb)->bnad = bna->bnad;
  
#line 2468 
  (rxp->cq.ccb)->id = (int)i;
  
#line 2470 
  bna_rxp_cqpt_setup(rxp,page_count_0,4096U,cqpt_mem + i,cswqpt_mem + i,cpage_mem + i);
  
#line 2473 
  if (rx->ccb_setup_cbfn != (void (*)(struct bnad *, struct bna_ccb *))0) 
    
#line 2474 
    (*(rx->ccb_setup_cbfn))(bnad,rxp->cq.ccb); else ;
  
#line 2348 
  i += 1U;
  ldv_49364: 
#line 2349 
  ;
  
#line 2348 
  if ((unsigned int)rx->num_paths > i) 
#line 2350 
                                       goto ldv_49363; else 
#line 2353 
                                                            goto ldv_49365;
  ldv_49365: 
#line 2354 
  ;
  
#line 2477 
  rx->hds_cfg = rx_cfg->hds_config;
  
#line 2479 
  bna_rxf_init(& rx->rxf,rx,rx_cfg,res_info);
  
#line 2481 
  rx->fsm = (void (*)(void *, int ))(& bna_rx_sm_stopped);
  
#line 2481 
  bna_rx_sm_stopped_entry(rx);
  
#line 2483 
  rx_mod->rid_mask |= (unsigned int)(1UL << rx->rid);
  
#line 2485 
  __retres = rx;
  return_label: 
#line 2485 
                return __retres;
}


#line 2489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_destroy(struct bna_rx *rx)
{
  struct bna_rxp *rxp;
  struct list_head *qe;
  struct bna_rxp *tmp;
  int tmp_0;
  
#line 2491 
  struct bna_rx_mod *rx_mod = & (rx->bna)->rx_mod;
  
#line 2492 
  struct bna_rxq *q0 = (struct bna_rxq *)0;
  
#line 2493 
  struct bna_rxq *q1 = (struct bna_rxq *)0;
  
#line 2497 
  bna_rxf_uninit(& rx->rxf);
  
#line 2499 
  goto ldv_49381;
  ldv_49380: 
#line 2500 
  ;
  {
    
#line 2500 
    struct list_head const *__mptr = (struct list_head const *)rx->rxp_q.next;
    
#line 2500 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 2500 
  rxp = tmp;
  
#line 2501 
  list_del(& rxp->qe);
  
#line 2502 
  switch ((unsigned int)rxp->type) {
    case (unsigned int)1: 
#line 2502 
    ;
    
#line 2502 
    q0 = rxp->rxq.single.only;
    
#line 2502 
    q1 = (struct bna_rxq *)0;
    
#line 2502 
    goto ldv_49377;
    case (unsigned int)2: 
#line 2502 
    ;
    
#line 2502 
    q0 = rxp->rxq.slr.large;
    
#line 2502 
    q1 = rxp->rxq.slr.small;
    
#line 2502 
    goto ldv_49377;
    case (unsigned int)3: 
#line 2502 
    ;
    
#line 2502 
    q0 = rxp->rxq.hds.data;
    
#line 2502 
    q1 = rxp->rxq.hds.hdr;
    
#line 2502 
    goto ldv_49377;
  }
  ldv_49377: 
#line 2502 
  ;
  
#line 2503 
  if (rx->rcb_destroy_cbfn != (void (*)(struct bnad *, struct bna_rcb *))0) 
    
#line 2504 
    (*(rx->rcb_destroy_cbfn))((rx->bna)->bnad,q0->rcb); else ;
  
#line 2505 
  q0->rcb = (struct bna_rcb *)0;
  
#line 2506 
  q0->rxp = (struct bna_rxp *)0;
  
#line 2507 
  q0->rx = (struct bna_rx *)0;
  
#line 2508 
  bna_rxq_put(rx_mod,q0);
  
#line 2510 
  if (q1 != (struct bna_rxq *)0) {
    
#line 2511 
    if (rx->rcb_destroy_cbfn != (void (*)(struct bnad *, struct bna_rcb *))0) 
      
#line 2512 
      (*(rx->rcb_destroy_cbfn))((rx->bna)->bnad,q1->rcb); else ;
    
#line 2513 
    q1->rcb = (struct bna_rcb *)0;
    
#line 2514 
    q1->rxp = (struct bna_rxp *)0;
    
#line 2515 
    q1->rx = (struct bna_rx *)0;
    
#line 2516 
    bna_rxq_put(rx_mod,q1);
  }
  else ;
  
#line 2518 
  rxp->rxq.slr.large = (struct bna_rxq *)0;
  
#line 2519 
  rxp->rxq.slr.small = (struct bna_rxq *)0;
  
#line 2521 
  if (rx->ccb_destroy_cbfn != (void (*)(struct bnad *, struct bna_ccb *))0) 
    
#line 2522 
    (*(rx->ccb_destroy_cbfn))((rx->bna)->bnad,rxp->cq.ccb); else ;
  
#line 2523 
  rxp->cq.ccb = (struct bna_ccb *)0;
  
#line 2524 
  rxp->rx = (struct bna_rx *)0;
  
#line 2525 
  bna_rxp_put(rx_mod,rxp);
  ldv_49381: 
#line 2526 
  ;
  
#line 2499 
  tmp_0 = list_empty((struct list_head const *)(& rx->rxp_q));
  
#line 2499 
  if (tmp_0 == 0) 
#line 2501 
                  goto ldv_49380; else 
#line 2504 
                                       goto ldv_49382;
  ldv_49382: 
#line 2505 
  ;
  
#line 2528 
  qe = rx_mod->rx_active_q.next;
  
#line 2528 
  goto ldv_49385;
  ldv_49384: 
#line 2529 
  ;
  
#line 2529 
  if (& rx->qe == qe) {
    
#line 2530 
    list_del(& rx->qe);
    
#line 2531 
    goto ldv_49383;
  }
  else ;
  
#line 2528 
  qe = qe->next;
  ldv_49385: 
#line 2529 
  ;
  
#line 2528 
  if (& rx_mod->rx_active_q != qe) 
#line 2530 
                                   goto ldv_49384; else 
#line 2533 
                                                        goto ldv_49383;
  ldv_49383: 
#line 2534 
  ;
  
#line 2534 
  rx_mod->rid_mask &= ~ ((unsigned int)(1UL << rx->rid));
  
#line 2536 
  rx->bna = (struct bna *)0;
  
#line 2537 
  rx->priv = (void *)0;
  
#line 2538 
  bna_rx_put(rx_mod,rx);
  
#line 2539 
  return;
}


#line 2542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_enable(struct bna_rx *rx)
{
  
#line 2544 
  if (rx->fsm != (void (*)(void *, int ))(& bna_rx_sm_stopped)) 
#line 2545 
                                                                goto return_label; else ;
  
#line 2547 
  rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags | 2U);
  
#line 2548 
  if (((unsigned int)rx->rx_flags & 1U) != 0U) 
#line 2549 
                                               (*(rx->fsm))((void *)rx,1); else ;
  return_label: 
#line 2550 
                return;
}


#line 2553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_disable(struct bna_rx *rx, enum bna_cleanup_type type, void (*cbfn)(void *, struct bna_rx *))
{
  
#line 2556 
  if (type == (unsigned int)BNA_SOFT_CLEANUP) 
#line 2558 
                                              (*cbfn)((void *)(rx->bna)->bnad,rx);
  else {
    
#line 2560 
    rx->stop_cbfn = cbfn;
    
#line 2561 
    rx->stop_cbarg = (void *)(rx->bna)->bnad;
    
#line 2563 
    rx->rx_flags = (enum bna_rx_flags)((unsigned int)rx->rx_flags & 4294967293U);
    
#line 2565 
    (*(rx->fsm))((void *)rx,2);
  }
  
#line 2567 
  return;
}


#line 2570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_cleanup_complete(struct bna_rx *rx)
{
  
#line 2572 
  (*(rx->fsm))((void *)rx,8);
  
#line 2573 
  return;
}


#line 2576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_vlan_strip_enable(struct bna_rx *rx)
{
  
#line 2578 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 2580 
  if (rxf->vlan_strip_status == (unsigned int)BNA_STATUS_T_DISABLED) {
    
#line 2581 
    rxf->vlan_strip_status = BNA_STATUS_T_ENABLED;
    
#line 2582 
    rxf->vlan_strip_pending = (_Bool)1;
    
#line 2583 
    (*(rxf->fsm))((void *)rxf,4);
  }
  else ;
  
#line 2585 
  return;
}


#line 2588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_vlan_strip_disable(struct bna_rx *rx)
{
  
#line 2590 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 2592 
  if (rxf->vlan_strip_status != (unsigned int)BNA_STATUS_T_DISABLED) {
    
#line 2593 
    rxf->vlan_strip_status = BNA_STATUS_T_DISABLED;
    
#line 2594 
    rxf->vlan_strip_pending = (_Bool)1;
    
#line 2595 
    (*(rxf->fsm))((void *)rxf,4);
  }
  else ;
  
#line 2597 
  return;
}


#line 2600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
enum bna_cb_status bna_rx_mode_set(struct bna_rx *rx, enum bna_rxmode new_mode, enum bna_rxmode bitmask)
{
  enum bna_cb_status __retres;
  
#line 2603 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 2604 
  int need_hw_config = 0;
  
#line 2608 
  if (((unsigned int)bitmask & 1U) != 0U && ((unsigned int)new_mode & 1U) != 0U) {
    
#line 2610 
    if ((rx->bna)->promisc_rid != -1 && (rx->bna)->promisc_rid != (rxf->rx)->rid) 
      
#line 2612 
      goto err_return; else ;
    
#line 2615 
    if ((rx->bna)->default_mode_rid != -1) 
#line 2616 
                                           goto err_return; else ;
    
#line 2619 
    if (((unsigned int)bitmask & 2U) != 0U && ((unsigned int)new_mode & 2U) != 0U) 
      
#line 2620 
      goto err_return; else ;
  }
  else ;
  
#line 2623 
  if (((unsigned int)bitmask & 2U) != 0U && ((unsigned int)new_mode & 2U) != 0U) {
    
#line 2625 
    if ((rx->bna)->default_mode_rid != -1 && (rx->bna)->default_mode_rid != (rxf->rx)->rid) 
      
#line 2627 
      goto err_return; else ;
    
#line 2631 
    if ((rx->bna)->promisc_rid != -1) 
#line 2632 
                                      goto err_return; else ;
  }
  else ;
  
#line 2637 
  if (((unsigned int)bitmask & 1U) != 0U && ((unsigned int)new_mode & 1U) != 0U) {
    int tmp;
    
#line 2638 
    tmp = bna_rxf_promisc_enable(rxf);
    
#line 2638 
    if (tmp != 0) 
#line 2639 
                  need_hw_config = 1; else ;
  }
  else 
    
#line 2640 
    if (((unsigned int)bitmask & 1U) != 0U && ((unsigned int)new_mode & 1U) == 0U) {
      int tmp_0;
      
#line 2641 
      tmp_0 = bna_rxf_promisc_disable(rxf);
      
#line 2641 
      if (tmp_0 != 0) 
#line 2642 
                      need_hw_config = 1; else ;
    }
    else ;
  
#line 2645 
  if (((unsigned int)bitmask & 4U) != 0U && ((unsigned int)new_mode & 4U) != 0U) {
    int tmp_1;
    
#line 2646 
    tmp_1 = bna_rxf_allmulti_enable(rxf);
    
#line 2646 
    if (tmp_1 != 0) 
#line 2647 
                    need_hw_config = 1; else ;
  }
  else 
    
#line 2648 
    if (((unsigned int)bitmask & 4U) != 0U && ((unsigned int)new_mode & 4U) == 0U) {
      int tmp_2;
      
#line 2649 
      tmp_2 = bna_rxf_allmulti_disable(rxf);
      
#line 2649 
      if (tmp_2 != 0) 
#line 2650 
                      need_hw_config = 1; else ;
    }
    else ;
  
#line 2655 
  if (need_hw_config != 0) {
    
#line 2656 
    rxf->cam_fltr_cbfn = (void (*)(struct bnad *, struct bna_rx *))0;
    
#line 2657 
    rxf->cam_fltr_cbarg = (rx->bna)->bnad;
    
#line 2658 
    (*(rxf->fsm))((void *)rxf,4);
  }
  else ;
  
#line 2661 
  __retres = BNA_CB_SUCCESS;
  
#line 2661 
  goto return_label;
  err_return: 
#line 2663 
  ;
  
#line 2664 
  __retres = BNA_CB_FAIL;
  return_label: 
#line 2664 
                return __retres;
}


#line 2668  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_vlanfilter_enable(struct bna_rx *rx)
{
  
#line 2670 
  struct bna_rxf *rxf = & rx->rxf;
  
#line 2672 
  if (rxf->vlan_filter_status == (unsigned int)BNA_STATUS_T_DISABLED) {
    
#line 2673 
    rxf->vlan_filter_status = BNA_STATUS_T_ENABLED;
    
#line 2674 
    rxf->vlan_pending_bitmask = (unsigned char)255U;
    
#line 2675 
    (*(rxf->fsm))((void *)rxf,4);
  }
  else ;
  
#line 2677 
  return;
}


#line 2680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_coalescing_timeo_set(struct bna_rx *rx, int coalescing_timeo)
{
  struct bna_rxp *rxp;
  struct bna_rxp *tmp;
  struct bna_rxp *tmp_0;
  {
    
#line 2684 
    struct list_head const *__mptr = (struct list_head const *)rx->rxp_q.next;
    
#line 2684 
    tmp = (struct bna_rxp *)__mptr;
  }
  
#line 2684 
  rxp = tmp;
  
#line 2684 
  goto ldv_49429;
  ldv_49428: 
#line 2685 
  ;
  
#line 2685 
  (rxp->cq.ccb)->rx_coalescing_timeo = (unsigned char)coalescing_timeo;
  
#line 2686 
  bna_ib_coalescing_timeo_set(& rxp->cq.ib,(unsigned char)((int)((unsigned char)coalescing_timeo)));
  {
    
#line 2684 
    struct list_head const *__mptr_0 = (struct list_head const *)rxp->qe.next;
    
#line 2684 
    tmp_0 = (struct bna_rxp *)__mptr_0;
  }
  
#line 2684 
  rxp = tmp_0;
  ldv_49429: 
#line 2686 
  ;
  
#line 2684 
  if (& rxp->qe != & rx->rxp_q) 
#line 2686 
                                goto ldv_49428; else 
#line 2689 
                                                     goto ldv_49430;
  ldv_49430: 
#line 2690 
  ;
  
#line 2691 
  return;
}


#line 2691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_dim_reconfig(struct bna *bna, u32 const (*vector)[2U])
{
  int i;
  int j;
  
#line 2695 
  i = 0;
  
#line 2695 
  goto ldv_49441;
  ldv_49440: 
#line 2696 
  ;
  
#line 2696 
  j = 0;
  
#line 2696 
  goto ldv_49438;
  ldv_49437: 
#line 2697 
  ;
  
#line 2697 
  bna->rx_mod.dim_vector[i][j] = (*(vector + i))[j];
  
#line 2696 
  j += 1;
  ldv_49438: 
#line 2697 
  ;
  
#line 2696 
  if (j <= 1) 
#line 2698 
              goto ldv_49437; else 
#line 2701 
                                   goto ldv_49439;
  ldv_49439: 
#line 2702 
  ;
  
#line 2695 
  i += 1;
  ldv_49441: 
#line 2696 
  ;
  
#line 2695 
  if (i <= 7) 
#line 2697 
              goto ldv_49440; else 
#line 2700 
                                   goto ldv_49442;
  ldv_49442: 
#line 2701 
  ;
  
#line 2702 
  return;
}


#line 2701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_rx_dim_update(struct bna_ccb *ccb)
{
  u32 load;
  u32 bias;
  u32 pkt_rt;
  u32 small_rt;
  u32 large_rt;
  u8 coalescing_timeo;
  
#line 2703 
  struct bna *bna = ((ccb->cq)->rx)->bna;
  
#line 2708 
  if (ccb->pkt_rate.small_pkt_cnt == 0U && ccb->pkt_rate.large_pkt_cnt == 0U) 
    
#line 2710 
    goto return_label; else ;
  
#line 2714 
  small_rt = ccb->pkt_rate.small_pkt_cnt;
  
#line 2715 
  large_rt = ccb->pkt_rate.large_pkt_cnt;
  
#line 2717 
  pkt_rt = small_rt + large_rt;
  
#line 2719 
  if (pkt_rt <= 9999U) 
#line 2720 
                       load = 7U;
  else 
    
#line 2721 
    if (pkt_rt <= 19999U) 
#line 2722 
                          load = 6U;
    else 
      
#line 2723 
      if (pkt_rt <= 29999U) 
#line 2724 
                            load = 5U;
      else 
        
#line 2725 
        if (pkt_rt <= 39999U) 
#line 2726 
                              load = 4U;
        else 
          
#line 2727 
          if (pkt_rt <= 49999U) 
#line 2728 
                                load = 3U;
          else 
            
#line 2729 
            if (pkt_rt <= 59999U) 
#line 2730 
                                  load = 2U;
            else 
              
#line 2731 
              if (pkt_rt <= 79999U) 
#line 2732 
                                    load = 1U; else 
#line 2734 
                                                    load = 0U;
  
#line 2736 
  if (large_rt << 1 < small_rt) 
#line 2737 
                                bias = 0U; else 
#line 2739 
                                                bias = 1U;
  
#line 2741 
  ccb->pkt_rate.small_pkt_cnt = 0U;
  
#line 2742 
  ccb->pkt_rate.large_pkt_cnt = 0U;
  
#line 2744 
  coalescing_timeo = (unsigned char)bna->rx_mod.dim_vector[load][bias];
  
#line 2745 
  ccb->rx_coalescing_timeo = coalescing_timeo;
  
#line 2748 
  bna_ib_coalescing_timeo_set(& (ccb->cq)->ib,(unsigned char)((int)coalescing_timeo));
  return_label: 
#line 2749 
                return;
}


#line 2751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
u32 const bna_napi_dim_vector[8U][2U] = {{12U, 12U}, {6U, 10U}, {5U, 10U}, {4U, 8U}, {3U, 6U}, {3U, 6U}, {2U, 4U}, {1U, 2U}};

#line 2777 
static void bna_tx_mod_cb_tx_stopped(void *arg, struct bna_tx *tx);


#line 2778 
static void bna_bfi_tx_enet_start(struct bna_tx *tx);


#line 2779 
static void bna_tx_enet_stop(struct bna_tx *tx);


#line 2791 
static void bna_tx_sm_stopped(struct bna_tx *tx, enum bna_tx_event event);


#line 2791 
static void bna_tx_sm_stopped_entry(struct bna_tx *tx);


#line 2792 
static void bna_tx_sm_start_wait(struct bna_tx *tx, enum bna_tx_event event);


#line 2792 
static void bna_tx_sm_start_wait_entry(struct bna_tx *tx);


#line 2793 
static void bna_tx_sm_started(struct bna_tx *tx, enum bna_tx_event event);


#line 2793 
static void bna_tx_sm_started_entry(struct bna_tx *tx);


#line 2794 
static void bna_tx_sm_stop_wait(struct bna_tx *tx, enum bna_tx_event event);


#line 2794 
static void bna_tx_sm_stop_wait_entry(struct bna_tx *tx);


#line 2795 
static void bna_tx_sm_cleanup_wait(struct bna_tx *tx, enum bna_tx_event event);


#line 2795 
static void bna_tx_sm_cleanup_wait_entry(struct bna_tx *tx);


#line 2797 
static void bna_tx_sm_prio_stop_wait(struct bna_tx *tx, enum bna_tx_event event);


#line 2797 
static void bna_tx_sm_prio_stop_wait_entry(struct bna_tx *tx);


#line 2799 
static void bna_tx_sm_prio_cleanup_wait(struct bna_tx *tx, enum bna_tx_event event);


#line 2799 
static void bna_tx_sm_prio_cleanup_wait_entry(struct bna_tx *tx);


#line 2801 
static void bna_tx_sm_failed(struct bna_tx *tx, enum bna_tx_event event);


#line 2801 
static void bna_tx_sm_failed_entry(struct bna_tx *tx);


#line 2802 
static void bna_tx_sm_quiesce_wait(struct bna_tx *tx, enum bna_tx_event event);


#line 2802 
static void bna_tx_sm_quiesce_wait_entry(struct bna_tx *tx);


#line 2806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_stopped_entry(struct bna_tx *tx)
{
  
#line 2808 
  if (tx->stop_cbfn != (void (*)(void *, struct bna_tx *))0) {
    void (*cbfn)(void *, struct bna_tx *);
    void *cbarg;
    
#line 2808 
    cbfn = tx->stop_cbfn;
    
#line 2808 
    cbarg = tx->stop_cbarg;
    
#line 2808 
    tx->stop_cbfn = (void (*)(void *, struct bna_tx *))0;
    
#line 2808 
    tx->stop_cbarg = (void *)0;
    
#line 2808 
    (*cbfn)(cbarg,tx);
  }
  else ;
  
#line 2810 
  return;
}


#line 2812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_stopped(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 2814 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 2815 
    ;
    
#line 2816 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_start_wait);
    
#line 2816 
    bna_tx_sm_start_wait_entry(tx);
    
#line 2817 
    goto ldv_49526;
    case (unsigned int)2: 
#line 2819 
    ;
    
#line 2820 
    if (tx->stop_cbfn != (void (*)(void *, struct bna_tx *))0) {
      void (*cbfn)(void *, struct bna_tx *);
      void *cbarg;
      
#line 2820 
      cbfn = tx->stop_cbfn;
      
#line 2820 
      cbarg = tx->stop_cbarg;
      
#line 2820 
      tx->stop_cbfn = (void (*)(void *, struct bna_tx *))0;
      
#line 2820 
      tx->stop_cbarg = (void *)0;
      
#line 2820 
      (*cbfn)(cbarg,tx);
    }
    else ;
    
#line 2821 
    goto ldv_49526;
    case (unsigned int)3: 
#line 2823 
    ;
    
#line 2825 
    goto ldv_49526;
    case (unsigned int)8: 
#line 2827 
    ;
    
#line 2829 
    goto ldv_49526;
    default: 
#line 2831 
    ;
    
#line 2832 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",2832,(unsigned int)event);
  }
  ldv_49526: 
#line 2834 
  ;
  
#line 2835 
  return;
}


#line 2837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_start_wait_entry(struct bna_tx *tx)
{
  
#line 2839 
  bna_bfi_tx_enet_start(tx);
  
#line 2840 
  return;
}


#line 2843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_start_wait(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 2845 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 2846 
    ;
    
#line 2847 
    tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags & 4294967287U);
    
#line 2848 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stop_wait);
    
#line 2848 
    bna_tx_sm_stop_wait_entry(tx);
    
#line 2849 
    goto ldv_49543;
    case (unsigned int)3: 
#line 2851 
    ;
    
#line 2852 
    tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags & 4294967287U);
    
#line 2853 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stopped);
    
#line 2853 
    bna_tx_sm_stopped_entry(tx);
    
#line 2854 
    goto ldv_49543;
    case (unsigned int)4: 
#line 2856 
    ;
    
#line 2857 
    if (((unsigned int)tx->flags & 8U) != 0U) {
      
#line 2858 
      tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags & 4294967287U);
      
#line 2859 
      tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_prio_stop_wait);
      
#line 2859 
      bna_tx_sm_prio_stop_wait_entry(tx);
    }
    else {
      
#line 2861 
      tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_started);
      
#line 2861 
      bna_tx_sm_started_entry(tx);
    }
    
#line 2862 
    goto ldv_49543;
    case (unsigned int)8: 
#line 2864 
    ;
    
#line 2865 
    tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags | 8U);
    
#line 2866 
    goto ldv_49543;
    default: 
#line 2868 
    ;
    
#line 2869 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",2869,(unsigned int)event);
  }
  ldv_49543: 
#line 2871 
  ;
  
#line 2872 
  return;
}


#line 2874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_started_entry(struct bna_tx *tx)
{
  struct bna_txq *txq;
  struct bna_txq *tmp;
  struct bna_txq *tmp_0;
  
#line 2877 
  int is_regular = tx->type == (unsigned int)BNA_TX_T_REGULAR;
  {
    
#line 2879 
    struct list_head const *__mptr = (struct list_head const *)tx->txq_q.next;
    
#line 2879 
    tmp = (struct bna_txq *)__mptr;
  }
  
#line 2879 
  txq = tmp;
  
#line 2879 
  goto ldv_49560;
  ldv_49559: 
#line 2880 
  ;
  
#line 2880 
  (txq->tcb)->priority = txq->priority;
  {
    u32 intx_mask;
    
#line 2882 
    struct bna_ib *ib = & txq->ib;
    
#line 2882 
    if (ib->intr_type == (unsigned int)BNA_INTR_T_INTX) {
      
#line 2882 
      intx_mask = readl((void const volatile *)(tx->bna)->regs.fn_int_mask);
      
#line 2882 
      writel(4294967295U,(void volatile *)(tx->bna)->regs.fn_int_mask);
      
#line 2882 
      intx_mask = (unsigned int)(~ ib->intr_vector) & intx_mask;
      
#line 2882 
      writel(intx_mask,(void volatile *)(tx->bna)->regs.fn_int_mask);
    }
    else ;
    
#line 2882 
    ib->door_bell.doorbell_ack = (unsigned int)((int)ib->coalescing_timeo << 16) | 2147483648U;
    
#line 2882 
    if (is_regular != 0) 
#line 2882 
                         writel(ib->door_bell.doorbell_ack,(void volatile *)ib->door_bell.doorbell_addr); else ;
  }
  {
    
#line 2879 
    struct list_head const *__mptr_0 = (struct list_head const *)txq->qe.next;
    
#line 2879 
    tmp_0 = (struct bna_txq *)__mptr_0;
  }
  
#line 2879 
  txq = tmp_0;
  ldv_49560: 
#line 2881 
  ;
  
#line 2879 
  if (& txq->qe != & tx->txq_q) 
#line 2881 
                                goto ldv_49559; else 
#line 2884 
                                                     goto ldv_49561;
  ldv_49561: 
#line 2885 
  ;
  
#line 2884 
  (*(tx->tx_resume_cbfn))((tx->bna)->bnad,tx);
  
#line 2885 
  return;
}


#line 2888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_started(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 2890 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 2891 
    ;
    
#line 2892 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stop_wait);
    
#line 2892 
    bna_tx_sm_stop_wait_entry(tx);
    
#line 2893 
    (*(tx->tx_stall_cbfn))((tx->bna)->bnad,tx);
    
#line 2894 
    bna_tx_enet_stop(tx);
    
#line 2895 
    goto ldv_49567;
    case (unsigned int)3: 
#line 2897 
    ;
    
#line 2898 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_failed);
    
#line 2898 
    bna_tx_sm_failed_entry(tx);
    
#line 2899 
    (*(tx->tx_stall_cbfn))((tx->bna)->bnad,tx);
    
#line 2900 
    (*(tx->tx_cleanup_cbfn))((tx->bna)->bnad,tx);
    
#line 2901 
    goto ldv_49567;
    case (unsigned int)8: 
#line 2903 
    ;
    
#line 2904 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_prio_stop_wait);
    
#line 2904 
    bna_tx_sm_prio_stop_wait_entry(tx);
    
#line 2905 
    goto ldv_49567;
    default: 
#line 2907 
    ;
    
#line 2908 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",2908,(unsigned int)event);
  }
  ldv_49567: 
#line 2910 
  ;
  
#line 2911 
  return;
}


#line 2913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_stop_wait_entry(struct bna_tx *tx)
{
  
#line 2915 
  return;
}


#line 2918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_stop_wait(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 2920 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 2921 
    ;
    case (unsigned int)5: 
#line 2922 
    ;
    
#line 2923 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_cleanup_wait);
    
#line 2923 
    bna_tx_sm_cleanup_wait_entry(tx);
    
#line 2924 
    (*(tx->tx_cleanup_cbfn))((tx->bna)->bnad,tx);
    
#line 2925 
    goto ldv_49580;
    case (unsigned int)4: 
#line 2927 
    ;
    
#line 2932 
    bna_tx_enet_stop(tx);
    
#line 2933 
    goto ldv_49580;
    case (unsigned int)8: 
#line 2935 
    ;
    
#line 2937 
    goto ldv_49580;
    default: 
#line 2939 
    ;
    
#line 2940 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",2940,(unsigned int)event);
  }
  ldv_49580: 
#line 2942 
  ;
  
#line 2943 
  return;
}


#line 2945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_cleanup_wait_entry(struct bna_tx *tx)
{
  
#line 2947 
  return;
}


#line 2950  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_cleanup_wait(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 2952 
  switch ((unsigned int)event) {
    case (unsigned int)3: 
#line 2953 
    ;
    case (unsigned int)8: 
#line 2954 
    ;
    
#line 2956 
    goto ldv_49593;
    case (unsigned int)7: 
#line 2958 
    ;
    
#line 2959 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stopped);
    
#line 2959 
    bna_tx_sm_stopped_entry(tx);
    
#line 2960 
    goto ldv_49593;
    default: 
#line 2962 
    ;
    
#line 2963 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",2963,(unsigned int)event);
  }
  ldv_49593: 
#line 2965 
  ;
  
#line 2966 
  return;
}


#line 2968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_prio_stop_wait_entry(struct bna_tx *tx)
{
  
#line 2970 
  (*(tx->tx_stall_cbfn))((tx->bna)->bnad,tx);
  
#line 2971 
  bna_tx_enet_stop(tx);
  
#line 2972 
  return;
}


#line 2975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_prio_stop_wait(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 2977 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 2978 
    ;
    
#line 2979 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stop_wait);
    
#line 2979 
    bna_tx_sm_stop_wait_entry(tx);
    
#line 2980 
    goto ldv_49604;
    case (unsigned int)3: 
#line 2982 
    ;
    
#line 2983 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_failed);
    
#line 2983 
    bna_tx_sm_failed_entry(tx);
    
#line 2984 
    (*(tx->tx_cleanup_cbfn))((tx->bna)->bnad,tx);
    
#line 2985 
    goto ldv_49604;
    case (unsigned int)5: 
#line 2987 
    ;
    
#line 2988 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_prio_cleanup_wait);
    
#line 2988 
    bna_tx_sm_prio_cleanup_wait_entry(tx);
    
#line 2989 
    goto ldv_49604;
    case (unsigned int)8: 
#line 2991 
    ;
    
#line 2993 
    goto ldv_49604;
    default: 
#line 2995 
    ;
    
#line 2996 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",2996,(unsigned int)event);
  }
  ldv_49604: 
#line 2998 
  ;
  
#line 2999 
  return;
}


#line 3001  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_prio_cleanup_wait_entry(struct bna_tx *tx)
{
  
#line 3003 
  (*(tx->tx_cleanup_cbfn))((tx->bna)->bnad,tx);
  
#line 3004 
  return;
}


#line 3007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_prio_cleanup_wait(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 3009 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 3010 
    ;
    
#line 3011 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_cleanup_wait);
    
#line 3011 
    bna_tx_sm_cleanup_wait_entry(tx);
    
#line 3012 
    goto ldv_49617;
    case (unsigned int)3: 
#line 3014 
    ;
    
#line 3015 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_failed);
    
#line 3015 
    bna_tx_sm_failed_entry(tx);
    
#line 3016 
    goto ldv_49617;
    case (unsigned int)8: 
#line 3018 
    ;
    
#line 3020 
    goto ldv_49617;
    case (unsigned int)7: 
#line 3022 
    ;
    
#line 3023 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_start_wait);
    
#line 3023 
    bna_tx_sm_start_wait_entry(tx);
    
#line 3024 
    goto ldv_49617;
    default: 
#line 3026 
    ;
    
#line 3027 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",3027,(unsigned int)event);
  }
  ldv_49617: 
#line 3029 
  ;
  
#line 3030 
  return;
}


#line 3032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_failed_entry(struct bna_tx *tx)
{
  
#line 3034 
  return;
}


#line 3037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_failed(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 3039 
  switch ((unsigned int)event) {
    case (unsigned int)1: 
#line 3040 
    ;
    
#line 3041 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_quiesce_wait);
    
#line 3041 
    bna_tx_sm_quiesce_wait_entry(tx);
    
#line 3042 
    goto ldv_49630;
    case (unsigned int)2: 
#line 3044 
    ;
    
#line 3045 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_cleanup_wait);
    
#line 3045 
    bna_tx_sm_cleanup_wait_entry(tx);
    
#line 3046 
    goto ldv_49630;
    case (unsigned int)3: 
#line 3048 
    ;
    
#line 3050 
    goto ldv_49630;
    case (unsigned int)7: 
#line 3052 
    ;
    
#line 3053 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stopped);
    
#line 3053 
    bna_tx_sm_stopped_entry(tx);
    
#line 3054 
    goto ldv_49630;
    default: 
#line 3056 
    ;
    
#line 3057 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",3057,(unsigned int)event);
  }
  ldv_49630: 
#line 3059 
  ;
  
#line 3060 
  return;
}


#line 3062  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_quiesce_wait_entry(struct bna_tx *tx)
{
  
#line 3064 
  return;
}


#line 3067  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_sm_quiesce_wait(struct bna_tx *tx, enum bna_tx_event event)
{
  
#line 3069 
  switch ((unsigned int)event) {
    case (unsigned int)2: 
#line 3070 
    ;
    
#line 3071 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_cleanup_wait);
    
#line 3071 
    bna_tx_sm_cleanup_wait_entry(tx);
    
#line 3072 
    goto ldv_49643;
    case (unsigned int)3: 
#line 3074 
    ;
    
#line 3075 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_failed);
    
#line 3075 
    bna_tx_sm_failed_entry(tx);
    
#line 3076 
    goto ldv_49643;
    case (unsigned int)7: 
#line 3078 
    ;
    
#line 3079 
    tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_start_wait);
    
#line 3079 
    bna_tx_sm_start_wait_entry(tx);
    
#line 3080 
    goto ldv_49643;
    case (unsigned int)8: 
#line 3082 
    ;
    
#line 3084 
    goto ldv_49643;
    default: 
#line 3086 
    ;
    
#line 3087 
    printk("\001",(char *)"/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c",3087,(unsigned int)event);
  }
  ldv_49643: 
#line 3089 
  ;
  
#line 3090 
  return;
}


#line 3092  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_tx_enet_start(struct bna_tx *tx)
{
  int i;
  
#line 3094 
  struct bfi_enet_tx_cfg_req *cfg_req = & tx->bfi_enet_cmd.cfg_req;
  
#line 3095 
  struct bna_txq *txq = (struct bna_txq *)0;
  
#line 3098 
  cfg_req->mh.msg_class = (unsigned char)24U;
  
#line 3098 
  cfg_req->mh.msg_id = (unsigned char)17U;
  
#line 3098 
  cfg_req->mh.msg_token = (unsigned short)0U;
  
#line 3098 
  cfg_req->mh.enet_id = (unsigned char)tx->rid;
  
#line 3100 
  cfg_req->mh.num_entries = (unsigned short)1536U;
  
#line 3103 
  cfg_req->num_queues = (unsigned char)tx->num_txq;
  
#line 3104 
  i = 0;
  
#line 3104 
  goto ldv_49660;
  ldv_49659: 
#line 3105 
  ;
  
#line 3105 
  if (txq != (struct bna_txq *)0) {
    struct bna_txq *tmp;
    {
      
#line 3105 
      struct list_head const *__mptr = (struct list_head const *)txq->qe.next;
      
#line 3105 
      tmp = (struct bna_txq *)__mptr;
    }
    
#line 3105 
    txq = tmp;
  }
  else {
    struct bna_txq *tmp_0;
    {
      
#line 3106 
      struct list_head const *__mptr_0 = (struct list_head const *)tx->txq_q.next;
      
#line 3106 
      tmp_0 = (struct bna_txq *)__mptr_0;
    }
    
#line 3105 
    txq = tmp_0;
  }
  {
    
#line 3107 
    struct bna_dma_addr cur_q_addr = *((struct bna_dma_addr *)txq->qpt.kv_qpt_ptr);
    
#line 3107 
    cfg_req->q_cfg[i].q.q.pg_tbl.a32.addr_lo = txq->qpt.hw_qpt_ptr.lsb;
    
#line 3107 
    cfg_req->q_cfg[i].q.q.pg_tbl.a32.addr_hi = txq->qpt.hw_qpt_ptr.msb;
    
#line 3107 
    cfg_req->q_cfg[i].q.q.first_entry.a32.addr_lo = cur_q_addr.lsb;
    
#line 3107 
    cfg_req->q_cfg[i].q.q.first_entry.a32.addr_hi = cur_q_addr.msb;
    
#line 3107 
    if (0 != 0) 
#line 3107 
                cfg_req->q_cfg[i].q.q.pages = (unsigned short)(((int)((unsigned short)txq->qpt.page_count) << 8) | ((int)((unsigned short)txq->qpt.page_count) >> 8)); else 
                                                                    
#line 3107 
                                                                    cfg_req->q_cfg[i].q.q.pages = __fswab16((unsigned short)((int)((unsigned short)txq->qpt.page_count)));
    
#line 3107 
    if (0 != 0) 
#line 3107 
                cfg_req->q_cfg[i].q.q.page_sz = (unsigned short)(((int)((unsigned short)txq->qpt.page_size) << 8) | ((int)((unsigned short)txq->qpt.page_size) >> 8)); else 
                                                                    
#line 3107 
                                                                    cfg_req->q_cfg[i].q.q.page_sz = __fswab16((unsigned short)((int)((unsigned short)txq->qpt.page_size)));
  }
  
#line 3108 
  cfg_req->q_cfg[i].q.priority = txq->priority;
  
#line 3110 
  cfg_req->q_cfg[i].ib.index_addr.a32.addr_lo = txq->ib.ib_seg_host_addr.lsb;
  
#line 3112 
  cfg_req->q_cfg[i].ib.index_addr.a32.addr_hi = txq->ib.ib_seg_host_addr.msb;
  
#line 3114 
  if (0 != 0) 
#line 3114 
              cfg_req->q_cfg[i].ib.intr.msix_index = (unsigned short)(((int)((unsigned short)txq->ib.intr_vector) << 8) | ((int)((unsigned short)txq->ib.intr_vector) >> 8)); else 
                                                                    
#line 3115 
                                                                    cfg_req->q_cfg[i].ib.intr.msix_index = __fswab16((unsigned short)((int)((unsigned short)txq->ib.intr_vector)));
  
#line 3104 
  i += 1;
  ldv_49660: 
#line 3105 
  ;
  
#line 3104 
  if (tx->num_txq > i) 
#line 3106 
                       goto ldv_49659; else 
#line 3109 
                                            goto ldv_49661;
  ldv_49661: 
#line 3110 
  ;
  
#line 3118 
  cfg_req->ib_cfg.int_pkt_dma = (unsigned char)1U;
  
#line 3119 
  cfg_req->ib_cfg.int_enabled = (unsigned char)1U;
  
#line 3120 
  cfg_req->ib_cfg.int_pkt_enabled = (unsigned char)0U;
  
#line 3121 
  cfg_req->ib_cfg.continuous_coalescing = (unsigned char)1U;
  
#line 3122 
  cfg_req->ib_cfg.msix = (unsigned char)(txq->ib.intr_type == (unsigned int)BNA_INTR_T_MSIX);
  
#line 3124 
  if (0 != 0) 
#line 3124 
              cfg_req->ib_cfg.coalescing_timeout = ((unsigned int)txq->ib.coalescing_timeo << 24) | (((unsigned int)txq->ib.coalescing_timeo << 8) & 16711680U); else 
                                                                    
#line 3125 
                                                                    cfg_req->ib_cfg.coalescing_timeout = __fswab32((unsigned int)txq->ib.coalescing_timeo);
  
#line 3126 
  if (0 != 0) 
#line 3126 
              cfg_req->ib_cfg.inter_pkt_timeout = ((((unsigned int)txq->ib.interpkt_timeo << 24) | (((unsigned int)txq->ib.interpkt_timeo << 8) & 16711680U)) | (((unsigned int)txq->ib.interpkt_timeo >> 8) & 65280U)) | ((unsigned int)txq->ib.interpkt_timeo >> 24); else 
                                                                    
#line 3127 
                                                                    cfg_req->ib_cfg.inter_pkt_timeout = __fswab32((unsigned int)txq->ib.interpkt_timeo);
  
#line 3128 
  cfg_req->ib_cfg.inter_pkt_count = (unsigned char)txq->ib.interpkt_count;
  
#line 3130 
  cfg_req->tx_cfg.vlan_mode = (unsigned char)2U;
  
#line 3131 
  if (0 != 0) 
#line 3131 
              cfg_req->tx_cfg.vlan_id = (unsigned short)(((int)tx->txf_vlan_id << 8) | ((int)tx->txf_vlan_id >> 8)); else 
                                                                    
#line 3131 
                                                                    cfg_req->tx_cfg.vlan_id = __fswab16((unsigned short)((int)tx->txf_vlan_id));
  
#line 3132 
  cfg_req->tx_cfg.admit_tagged_frame = (unsigned char)1U;
  
#line 3133 
  cfg_req->tx_cfg.apply_vlan_filter = (unsigned char)0U;
  
#line 3135 
  tx->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 3135 
  tx->msgq_cmd.cbarg = (void *)0;
  
#line 3135 
  tx->msgq_cmd.msg_size = 328UL;
  
#line 3135 
  tx->msgq_cmd.msg_hdr = & cfg_req->mh;
  
#line 3137 
  bfa_msgq_cmd_post(& (tx->bna)->msgq,& tx->msgq_cmd);
  
#line 3138 
  return;
}


#line 3141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_bfi_tx_enet_stop(struct bna_tx *tx)
{
  
#line 3143 
  struct bfi_enet_req *req = & tx->bfi_enet_cmd.req;
  
#line 3145 
  req->mh.msg_class = (unsigned char)24U;
  
#line 3145 
  req->mh.msg_id = (unsigned char)18U;
  
#line 3145 
  req->mh.msg_token = (unsigned short)0U;
  
#line 3145 
  req->mh.enet_id = (unsigned char)tx->rid;
  
#line 3147 
  req->mh.num_entries = (unsigned short)256U;
  
#line 3149 
  tx->msgq_cmd.cbfn = (void (*)(void *, enum bfa_status ))0;
  
#line 3149 
  tx->msgq_cmd.cbarg = (void *)0;
  
#line 3149 
  tx->msgq_cmd.msg_size = 8UL;
  
#line 3149 
  tx->msgq_cmd.msg_hdr = & req->mh;
  
#line 3151 
  bfa_msgq_cmd_post(& (tx->bna)->msgq,& tx->msgq_cmd);
  
#line 3152 
  return;
}


#line 3155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_enet_stop(struct bna_tx *tx)
{
  struct bna_txq *txq;
  struct bna_txq *tmp;
  struct bna_txq *tmp_0;
  {
    
#line 3160 
    struct list_head const *__mptr = (struct list_head const *)tx->txq_q.next;
    
#line 3160 
    tmp = (struct bna_txq *)__mptr;
  }
  
#line 3160 
  txq = tmp;
  
#line 3160 
  goto ldv_49677;
  ldv_49676: 
#line 3161 
  ;
  {
    u32 intx_mask;
    
#line 3161 
    struct bna_ib *ib = & txq->ib;
    
#line 3161 
    writel(1073741824U,(void volatile *)ib->door_bell.doorbell_addr);
    
#line 3161 
    if (ib->intr_type == (unsigned int)BNA_INTR_T_INTX) {
      
#line 3161 
      intx_mask = readl((void const volatile *)(tx->bna)->regs.fn_int_mask);
      
#line 3161 
      writel(4294967295U,(void volatile *)(tx->bna)->regs.fn_int_mask);
      
#line 3161 
      intx_mask = (unsigned int)ib->intr_vector | intx_mask;
      
#line 3161 
      writel(intx_mask,(void volatile *)(tx->bna)->regs.fn_int_mask);
    }
    else ;
  }
  {
    
#line 3160 
    struct list_head const *__mptr_0 = (struct list_head const *)txq->qe.next;
    
#line 3160 
    tmp_0 = (struct bna_txq *)__mptr_0;
  }
  
#line 3160 
  txq = tmp_0;
  ldv_49677: 
#line 3162 
  ;
  
#line 3160 
  if (& txq->qe != & tx->txq_q) 
#line 3162 
                                goto ldv_49676; else 
#line 3165 
                                                     goto ldv_49678;
  ldv_49678: 
#line 3166 
  ;
  
#line 3163 
  bna_bfi_tx_enet_stop(tx);
  
#line 3164 
  return;
}


#line 3167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_txq_qpt_setup(struct bna_txq *txq, int page_count_0, int page_size, struct bna_mem_descr *qpt_mem, struct bna_mem_descr *swqpt_mem, struct bna_mem_descr *page_mem)
{
  u8 *kva;
  u64 dma;
  struct bna_dma_addr bna_dma;
  int i;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 3177 
  txq->qpt.hw_qpt_ptr.lsb = qpt_mem->dma.lsb;
  
#line 3178 
  txq->qpt.hw_qpt_ptr.msb = qpt_mem->dma.msb;
  
#line 3179 
  txq->qpt.kv_qpt_ptr = qpt_mem->kva;
  
#line 3180 
  txq->qpt.page_count = (unsigned int)page_count_0;
  
#line 3181 
  txq->qpt.page_size = (unsigned int)page_size;
  
#line 3183 
  (txq->tcb)->sw_qpt = (void **)swqpt_mem->kva;
  
#line 3184 
  (txq->tcb)->sw_q = page_mem->kva;
  
#line 3186 
  kva = (u8 *)page_mem->kva;
  
#line 3187 
  if (0 != 0) 
#line 3187 
              tmp_0 = (((page_mem->dma.msb << 24) | ((page_mem->dma.msb << 8) & 16711680U)) | ((page_mem->dma.msb >> 8) & 65280U)) | (page_mem->dma.msb >> 24); else 
                                                                    
#line 3187 
                                                                    tmp_0 = __fswab32(page_mem->dma.msb);
  
#line 3187 
  if (0 != 0) 
#line 3187 
              tmp_2 = (((page_mem->dma.lsb << 24) | ((page_mem->dma.lsb << 8) & 16711680U)) | ((page_mem->dma.lsb >> 8) & 65280U)) | (page_mem->dma.lsb >> 24); else 
                                                                    
#line 3187 
                                                                    tmp_2 = __fswab32(page_mem->dma.lsb);
  
#line 3187 
  dma = ((unsigned long long)tmp_0 << 32) | (unsigned long long)tmp_2;
  
#line 3189 
  i = 0;
  
#line 3189 
  goto ldv_49693;
  ldv_49692: 
#line 3190 
  ;
  
#line 3190 
  *((txq->tcb)->sw_qpt + i) = (void *)kva;
  
#line 3191 
  kva += 4096U;
  {
    unsigned long long tmp_4;
    
#line 3193 
    if (0 != 0) 
#line 3193 
                tmp_4 = (((((((dma << 56) | ((dma << 40) & 71776119061217280ULL)) | ((dma << 24) & 280375465082880ULL)) | ((dma << 8) & 1095216660480ULL)) | ((dma >> 8) & 4278190080ULL)) | ((dma >> 24) & 16711680ULL)) | ((dma >> 40) & 65280ULL)) | (dma >> 56); else 
                                                                    
#line 3193 
                                                                    tmp_4 = __fswab64(dma);
    
#line 3193 
    u64 tmp_addr = tmp_4;
    
#line 3193 
    bna_dma.msb = ((struct bna_dma_addr *)(& tmp_addr))->msb;
    
#line 3193 
    bna_dma.lsb = ((struct bna_dma_addr *)(& tmp_addr))->lsb;
  }
  
#line 3194 
  ((struct bna_dma_addr *)txq->qpt.kv_qpt_ptr + i)->lsb = bna_dma.lsb;
  
#line 3196 
  ((struct bna_dma_addr *)txq->qpt.kv_qpt_ptr + i)->msb = bna_dma.msb;
  
#line 3198 
  dma += 4096ULL;
  
#line 3189 
  i += 1;
  ldv_49693: 
#line 3190 
  ;
  
#line 3189 
  if (i < page_count_0) 
#line 3191 
                        goto ldv_49692; else 
#line 3194 
                                             goto ldv_49694;
  ldv_49694: 
#line 3195 
  ;
  
#line 3196 
  return;
}


#line 3203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static struct bna_tx *bna_tx_get(struct bna_tx_mod *tx_mod, enum bna_tx_type type)
{
  struct bna_tx *__retres;
  int tmp;
  
#line 3205 
  struct bna_tx *tx = (struct bna_tx *)0;
  
#line 3207 
  tmp = list_empty((struct list_head const *)(& tx_mod->tx_free_q));
  
#line 3207 
  if (tmp != 0) {
    
#line 3208 
    __retres = (struct bna_tx *)0;
    
#line 3208 
    goto return_label;
  }
  else ;
  
#line 3209 
  if (type == (unsigned int)BNA_TX_T_REGULAR) {
    struct bna_tx *tmp_0;
    {
      
#line 3210 
      struct list_head const *__mptr = (struct list_head const *)tx_mod->tx_free_q.next;
      
#line 3210 
      tmp_0 = (struct bna_tx *)__mptr;
    }
    
#line 3210 
    tx = tmp_0;
  }
  else {
    struct bna_tx *tmp_1;
    {
      
#line 3212 
      struct list_head const *__mptr_0 = (struct list_head const *)tx_mod->tx_free_q.prev;
      
#line 3212 
      tmp_1 = (struct bna_tx *)__mptr_0;
    }
    
#line 3212 
    tx = tmp_1;
  }
  
#line 3213 
  list_del(& tx->qe);
  
#line 3214 
  tx->type = type;
  
#line 3216 
  __retres = tx;
  return_label: 
#line 3216 
                return __retres;
}


#line 3220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_free(struct bna_tx *tx)
{
  struct bna_txq *txq;
  struct list_head *qe;
  struct bna_txq *tmp;
  int tmp_0;
  
#line 3222 
  struct bna_tx_mod *tx_mod = & (tx->bna)->tx_mod;
  
#line 3226 
  goto ldv_49713;
  ldv_49712: 
#line 3227 
  ;
  {
    
#line 3227 
    struct list_head const *__mptr = (struct list_head const *)tx->txq_q.next;
    
#line 3227 
    tmp = (struct bna_txq *)__mptr;
  }
  
#line 3227 
  txq = tmp;
  
#line 3228 
  txq->tcb = (struct bna_tcb *)0;
  
#line 3229 
  txq->tx = (struct bna_tx *)0;
  
#line 3230 
  list_move_tail(& txq->qe,& tx_mod->txq_free_q);
  ldv_49713: 
#line 3231 
  ;
  
#line 3226 
  tmp_0 = list_empty((struct list_head const *)(& tx->txq_q));
  
#line 3226 
  if (tmp_0 == 0) 
#line 3228 
                  goto ldv_49712; else 
#line 3231 
                                       goto ldv_49714;
  ldv_49714: 
#line 3232 
  ;
  
#line 3233 
  qe = tx_mod->tx_active_q.next;
  
#line 3233 
  goto ldv_49717;
  ldv_49716: 
#line 3234 
  ;
  
#line 3234 
  if (& tx->qe == qe) {
    
#line 3235 
    list_del(& tx->qe);
    
#line 3236 
    goto ldv_49715;
  }
  else ;
  
#line 3233 
  qe = qe->next;
  ldv_49717: 
#line 3234 
  ;
  
#line 3233 
  if (& tx_mod->tx_active_q != qe) 
#line 3235 
                                   goto ldv_49716; else 
#line 3238 
                                                        goto ldv_49715;
  ldv_49715: 
#line 3239 
  ;
  
#line 3240 
  tx->bna = (struct bna *)0;
  
#line 3241 
  tx->priv = (void *)0;
  
#line 3243 
  qe = tx_mod->tx_free_q.prev;
  
#line 3243 
  goto ldv_49720;
  ldv_49719: 
#line 3244 
  ;
  
#line 3244 
  if (((struct bna_tx *)qe)->rid < tx->rid) 
#line 3245 
                                            goto ldv_49718; else ;
  
#line 3243 
  qe = qe->prev;
  ldv_49720: 
#line 3244 
  ;
  
#line 3243 
  if (& tx_mod->tx_free_q != qe) 
#line 3245 
                                 goto ldv_49719; else 
#line 3248 
                                                      goto ldv_49718;
  ldv_49718: 
#line 3249 
  ;
  
#line 3247 
  list_add(& tx->qe,qe);
  
#line 3248 
  return;
}


#line 3251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_start(struct bna_tx *tx)
{
  
#line 3253 
  tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags | 1U);
  
#line 3254 
  if (((unsigned int)tx->flags & 2U) != 0U) 
#line 3255 
                                            (*(tx->fsm))((void *)tx,1); else ;
  
#line 3256 
  return;
}


#line 3259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_stop(struct bna_tx *tx)
{
  
#line 3261 
  tx->stop_cbfn = & bna_tx_mod_cb_tx_stopped;
  
#line 3262 
  tx->stop_cbarg = (void *)(& (tx->bna)->tx_mod);
  
#line 3264 
  tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags & 4294967294U);
  
#line 3265 
  (*(tx->fsm))((void *)tx,2);
  
#line 3266 
  return;
}


#line 3269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_fail(struct bna_tx *tx)
{
  
#line 3271 
  tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags & 4294967294U);
  
#line 3272 
  (*(tx->fsm))((void *)tx,3);
  
#line 3273 
  return;
}


#line 3276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_tx_enet_start_rsp(struct bna_tx *tx, struct bfi_msgq_mhdr *msghdr)
{
  int i;
  struct bna_txq *tmp;
  unsigned int tmp_1;
  unsigned int tmp_3;
  u32 tmp_4;
  struct bna_txq *tmp_5;
  
#line 3278 
  struct bfi_enet_tx_cfg_rsp *cfg_rsp = & tx->bfi_enet_cmd.cfg_rsp;
  
#line 3279 
  struct bna_txq *txq = (struct bna_txq *)0;
  
#line 3282 
  bfa_msgq_rsp_copy(& (tx->bna)->msgq,(u8 *)cfg_rsp,108UL);
  
#line 3285 
  tx->hw_id = (int)cfg_rsp->hw_id;
  
#line 3287 
  i = 0;
  {
    
#line 3287 
    struct list_head const *__mptr = (struct list_head const *)tx->txq_q.next;
    
#line 3287 
    tmp = (struct bna_txq *)__mptr;
  }
  
#line 3287 
  txq = tmp;
  
#line 3287 
  goto ldv_49742;
  ldv_49741: 
#line 3288 
  ;
  
#line 3292 
  if (0 != 0) 
#line 3292 
              tmp_1 = (((cfg_rsp->q_handles[i].i_dbell << 24) | ((cfg_rsp->q_handles[i].i_dbell << 8) & 16711680U)) | ((cfg_rsp->q_handles[i].i_dbell >> 8) & 65280U)) | (cfg_rsp->q_handles[i].i_dbell >> 24); else 
                                                                    
#line 3292 
                                                                    tmp_1 = __fswab32(cfg_rsp->q_handles[i].i_dbell);
  
#line 3290 
  ((txq->tcb)->i_dbell)->doorbell_addr = (tx->bna)->pcidev.pci_bar_kva + tmp_1;
  
#line 3295 
  if (0 != 0) 
#line 3295 
              tmp_3 = (((cfg_rsp->q_handles[i].q_dbell << 24) | ((cfg_rsp->q_handles[i].q_dbell << 8) & 16711680U)) | ((cfg_rsp->q_handles[i].q_dbell >> 8) & 65280U)) | (cfg_rsp->q_handles[i].q_dbell >> 24); else 
                                                                    
#line 3295 
                                                                    tmp_3 = __fswab32(cfg_rsp->q_handles[i].q_dbell);
  
#line 3293 
  (txq->tcb)->q_dbell = (tx->bna)->pcidev.pci_bar_kva + tmp_3;
  
#line 3296 
  txq->hw_id = (int)cfg_rsp->q_handles[i].hw_qid;
  
#line 3299 
  *((txq->tcb)->hw_consumer_index) = 0U;
  
#line 3300 
  tmp_4 = 0U;
  
#line 3300 
  (txq->tcb)->consumer_index = tmp_4;
  
#line 3300 
  (txq->tcb)->producer_index = tmp_4;
  
#line 3288 
  i += 1;
  {
    
#line 3288 
    struct list_head const *__mptr_0 = (struct list_head const *)txq->qe.next;
    
#line 3288 
    tmp_5 = (struct bna_txq *)__mptr_0;
  }
  
#line 3288 
  txq = tmp_5;
  ldv_49742: 
#line 3290 
  ;
  
#line 3287 
  if (tx->num_txq > i) 
#line 3290 
                       goto ldv_49741; else 
#line 3293 
                                            goto ldv_49743;
  ldv_49743: 
#line 3294 
  ;
  
#line 3303 
  (*(tx->fsm))((void *)tx,4);
  
#line 3304 
  return;
}


#line 3307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_tx_enet_stop_rsp(struct bna_tx *tx, struct bfi_msgq_mhdr *msghdr)
{
  
#line 3309 
  (*(tx->fsm))((void *)tx,5);
  
#line 3310 
  return;
}


#line 3313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_bfi_bw_update_aen(struct bna_tx_mod *tx_mod)
{
  struct bna_tx *tx;
  struct bna_tx *tmp;
  struct bna_tx *tmp_0;
  {
    
#line 3317 
    struct list_head const *__mptr = (struct list_head const *)tx_mod->tx_active_q.next;
    
#line 3317 
    tmp = (struct bna_tx *)__mptr;
  }
  
#line 3317 
  tx = tmp;
  
#line 3317 
  goto ldv_49757;
  ldv_49756: 
#line 3318 
  ;
  
#line 3318 
  (*(tx->fsm))((void *)tx,8);
  {
    
#line 3317 
    struct list_head const *__mptr_0 = (struct list_head const *)tx->qe.next;
    
#line 3317 
    tmp_0 = (struct bna_tx *)__mptr_0;
  }
  
#line 3317 
  tx = tmp_0;
  ldv_49757: 
#line 3319 
  ;
  
#line 3317 
  if (& tx->qe != & tx_mod->tx_active_q) 
#line 3319 
                                         goto ldv_49756; else 
#line 3322 
                                                              goto ldv_49758;
  ldv_49758: 
#line 3323 
  ;
  
#line 3324 
  return;
}


#line 3322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_res_req(int num_txq, int txq_depth, struct bna_res_info *res_info)
{
  u32 q_size;
  u32 page_count_0;
  struct bna_mem_info *mem_info;
  
#line 3328 
  res_info->res_type = BNA_RES_T_MEM;
  
#line 3329 
  mem_info = & res_info->res_u.mem_info;
  
#line 3330 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 3331 
  mem_info->len = 136U;
  
#line 3332 
  mem_info->num = (unsigned int)num_txq;
  
#line 3334 
  q_size = (unsigned int)(txq_depth * 64);
  
#line 3335 
  q_size = (q_size + 4095U) & 4294963200U;
  
#line 3336 
  page_count_0 = q_size >> 12;
  
#line 3338 
  (res_info + 2U)->res_type = BNA_RES_T_MEM;
  
#line 3339 
  mem_info = & (res_info + 2U)->res_u.mem_info;
  
#line 3340 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 3341 
  mem_info->len = page_count_0 * 8U;
  
#line 3342 
  mem_info->num = (unsigned int)num_txq;
  
#line 3344 
  (res_info + 3U)->res_type = BNA_RES_T_MEM;
  
#line 3345 
  mem_info = & (res_info + 3U)->res_u.mem_info;
  
#line 3346 
  mem_info->mem_type = BNA_MEM_T_KVA;
  
#line 3347 
  mem_info->len = page_count_0 * 8U;
  
#line 3348 
  mem_info->num = (unsigned int)num_txq;
  
#line 3350 
  (res_info + 4U)->res_type = BNA_RES_T_MEM;
  
#line 3351 
  mem_info = & (res_info + 4U)->res_u.mem_info;
  
#line 3352 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 3353 
  mem_info->len = page_count_0 * 4096U;
  
#line 3354 
  mem_info->num = (unsigned int)num_txq;
  
#line 3356 
  (res_info + 5U)->res_type = BNA_RES_T_MEM;
  
#line 3357 
  mem_info = & (res_info + 5U)->res_u.mem_info;
  
#line 3358 
  mem_info->mem_type = BNA_MEM_T_DMA;
  
#line 3359 
  mem_info->len = 4U;
  
#line 3360 
  mem_info->num = (unsigned int)num_txq;
  
#line 3362 
  (res_info + 6U)->res_type = BNA_RES_T_INTR;
  
#line 3363 
  (res_info + 6U)->res_u.intr_info.intr_type = BNA_INTR_T_MSIX;
  
#line 3365 
  (res_info + 6U)->res_u.intr_info.num = num_txq;
  
#line 3366 
  return;
}


#line 3369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
struct bna_tx *bna_tx_create(struct bna *bna, struct bnad *bnad, struct bna_tx_config *tx_cfg, struct bna_tx_event_cbfn const *tx_cbfn, struct bna_res_info *res_info, void *priv)
{
  struct bna_tx *__retres;
  struct bna_intr_info *intr_info;
  struct bna_tx *tx;
  struct bna_txq *txq;
  int page_count_0;
  int i;
  int tmp;
  struct bna_txq *tmp_0;
  struct bna_txq *tmp_1;
  struct bna_txq *tmp_2;
  
#line 3375 
  struct bna_tx_mod *tx_mod = & bna->tx_mod;
  
#line 3381 
  intr_info = & (res_info + 6U)->res_u.intr_info;
  
#line 3382 
  page_count_0 = (int)((res_info + 4U)->res_u.mem_info.len / 4096U);
  
#line 3389 
  if (intr_info->num != 1 && intr_info->num != tx_cfg->num_txq) {
    
#line 3390 
    __retres = (struct bna_tx *)0;
    
#line 3390 
    goto return_label;
  }
  else ;
  
#line 3394 
  tx = bna_tx_get(tx_mod,tx_cfg->tx_type);
  
#line 3395 
  if (tx == (struct bna_tx *)0) {
    
#line 3396 
    __retres = (struct bna_tx *)0;
    
#line 3396 
    goto return_label;
  }
  else ;
  
#line 3397 
  tx->bna = bna;
  
#line 3398 
  tx->priv = priv;
  
#line 3402 
  INIT_LIST_HEAD(& tx->txq_q);
  
#line 3403 
  i = 0;
  
#line 3403 
  goto ldv_49785;
  ldv_49784: 
#line 3404 
  ;
  
#line 3404 
  tmp = list_empty((struct list_head const *)(& tx_mod->txq_free_q));
  
#line 3404 
  if (tmp != 0) 
#line 3405 
                goto err_return; else ;
  {
    
#line 3407 
    struct list_head const *__mptr = (struct list_head const *)tx_mod->txq_free_q.next;
    
#line 3407 
    tmp_0 = (struct bna_txq *)__mptr;
  }
  
#line 3407 
  txq = tmp_0;
  
#line 3408 
  list_move_tail(& txq->qe,& tx->txq_q);
  
#line 3409 
  txq->tx = tx;
  
#line 3403 
  i += 1;
  ldv_49785: 
#line 3404 
  ;
  
#line 3403 
  if (tx_cfg->num_txq > i) 
#line 3405 
                           goto ldv_49784; else 
#line 3408 
                                                goto ldv_49786;
  ldv_49786: 
#line 3409 
  ;
  
#line 3418 
  tx->tcb_setup_cbfn = tx_cbfn->tcb_setup_cbfn;
  
#line 3419 
  tx->tcb_destroy_cbfn = tx_cbfn->tcb_destroy_cbfn;
  
#line 3421 
  tx->tx_stall_cbfn = tx_cbfn->tx_stall_cbfn;
  
#line 3422 
  tx->tx_resume_cbfn = tx_cbfn->tx_resume_cbfn;
  
#line 3423 
  tx->tx_cleanup_cbfn = tx_cbfn->tx_cleanup_cbfn;
  
#line 3425 
  list_add_tail(& tx->qe,& tx_mod->tx_active_q);
  
#line 3427 
  tx->num_txq = tx_cfg->num_txq;
  
#line 3429 
  tx->flags = (enum bna_tx_flags)0;
  
#line 3430 
  if (((unsigned int)(tx->bna)->tx_mod.flags & 1U) != 0U) {
    
#line 3431 
    switch ((unsigned int)tx->type) {
      case (unsigned int)0: 
#line 3432 
      ;
      
#line 3433 
      if (((unsigned int)(tx->bna)->tx_mod.flags & 2U) == 0U) 
#line 3435 
                                                              tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags | 1U); else ;
      
#line 3436 
      goto ldv_49788;
      case (unsigned int)1: 
#line 3437 
      ;
      
#line 3438 
      if (((unsigned int)(tx->bna)->tx_mod.flags & 2U) != 0U) 
#line 3439 
                                                              tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags | 1U); else ;
      
#line 3440 
      goto ldv_49788;
    }
    ldv_49788: 
#line 3442 
    ;
  }
  else ;
  
#line 3446 
  i = 0;
  {
    
#line 3447 
    struct list_head const *__mptr_0 = (struct list_head const *)tx->txq_q.next;
    
#line 3447 
    tmp_1 = (struct bna_txq *)__mptr_0;
  }
  
#line 3447 
  txq = tmp_1;
  
#line 3447 
  goto ldv_49795;
  ldv_49794: 
#line 3448 
  ;
  
#line 3448 
  txq->tcb = (struct bna_tcb *)(res_info->res_u.mem_info.mdl + i)->kva;
  
#line 3450 
  txq->tx_packets = 0ULL;
  
#line 3451 
  txq->tx_bytes = 0ULL;
  
#line 3454 
  txq->ib.ib_seg_host_addr.lsb = ((res_info + 5U)->res_u.mem_info.mdl + i)->dma.lsb;
  
#line 3456 
  txq->ib.ib_seg_host_addr.msb = ((res_info + 5U)->res_u.mem_info.mdl + i)->dma.msb;
  
#line 3458 
  txq->ib.ib_seg_host_addr_kva = ((res_info + 5U)->res_u.mem_info.mdl + i)->kva;
  
#line 3460 
  txq->ib.intr_type = intr_info->intr_type;
  
#line 3461 
  if (intr_info->num == 1) 
#line 3461 
                           txq->ib.intr_vector = (intr_info->idl)->vector; else 
                                                                    
#line 3461 
                                                                    txq->ib.intr_vector = (intr_info->idl + i)->vector;
  
#line 3464 
  if (intr_info->intr_type == (unsigned int)BNA_INTR_T_INTX) 
#line 3465 
                                                             txq->ib.intr_vector = (int)(1UL << txq->ib.intr_vector); else ;
  
#line 3466 
  txq->ib.coalescing_timeo = (unsigned char)tx_cfg->coalescing_timeo;
  
#line 3467 
  txq->ib.interpkt_timeo = 15;
  
#line 3468 
  txq->ib.interpkt_count = 12;
  
#line 3472 
  (txq->tcb)->q_depth = (unsigned int)tx_cfg->txq_depth;
  
#line 3473 
  (txq->tcb)->unmap_q = ((res_info + 1U)->res_u.mem_info.mdl + i)->kva;
  
#line 3475 
  (txq->tcb)->hw_consumer_index = (u32 volatile *)txq->ib.ib_seg_host_addr_kva;
  
#line 3477 
  (txq->tcb)->i_dbell = & txq->ib.door_bell;
  
#line 3478 
  (txq->tcb)->intr_type = txq->ib.intr_type;
  
#line 3479 
  (txq->tcb)->intr_vector = txq->ib.intr_vector;
  
#line 3480 
  (txq->tcb)->txq = txq;
  
#line 3481 
  (txq->tcb)->bnad = bnad;
  
#line 3482 
  (txq->tcb)->id = i;
  
#line 3485 
  bna_txq_qpt_setup(txq,page_count_0,4096,(res_info + 2U)->res_u.mem_info.mdl + i,(res_info + 3U)->res_u.mem_info.mdl + i,(res_info + 4U)->res_u.mem_info.mdl + i);
  
#line 3492 
  if (tx->tcb_setup_cbfn != (void (*)(struct bnad *, struct bna_tcb *))0) 
    
#line 3493 
    (*(tx->tcb_setup_cbfn))(bna->bnad,txq->tcb); else ;
  
#line 3495 
  if (tx_cfg->num_txq == 8) 
#line 3496 
                            txq->priority = (unsigned char)(txq->tcb)->id; else 
                                                                    
#line 3498 
                                                                    txq->priority = (unsigned char)tx_mod->default_prio;
  
#line 3500 
  i += 1;
  {
    
#line 3447 
    struct list_head const *__mptr_1 = (struct list_head const *)txq->qe.next;
    
#line 3447 
    tmp_2 = (struct bna_txq *)__mptr_1;
  }
  
#line 3447 
  txq = tmp_2;
  ldv_49795: 
#line 3449 
  ;
  
#line 3447 
  if (& txq->qe != & tx->txq_q) 
#line 3449 
                                goto ldv_49794; else 
#line 3452 
                                                     goto ldv_49796;
  ldv_49796: 
#line 3453 
  ;
  
#line 3503 
  tx->txf_vlan_id = (unsigned short)0U;
  
#line 3505 
  tx->fsm = (void (*)(void *, int ))(& bna_tx_sm_stopped);
  
#line 3505 
  bna_tx_sm_stopped_entry(tx);
  
#line 3507 
  tx_mod->rid_mask |= (unsigned int)(1UL << tx->rid);
  
#line 3509 
  __retres = tx;
  
#line 3509 
  goto return_label;
  err_return: 
#line 3511 
  ;
  
#line 3512 
  bna_tx_free(tx);
  
#line 3513 
  __retres = (struct bna_tx *)0;
  return_label: 
#line 3513 
                return __retres;
}


#line 3517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_destroy(struct bna_tx *tx)
{
  struct bna_txq *txq;
  struct bna_txq *tmp;
  struct bna_txq *tmp_0;
  {
    
#line 3521 
    struct list_head const *__mptr = (struct list_head const *)tx->txq_q.next;
    
#line 3521 
    tmp = (struct bna_txq *)__mptr;
  }
  
#line 3521 
  txq = tmp;
  
#line 3521 
  goto ldv_49806;
  ldv_49805: 
#line 3522 
  ;
  
#line 3522 
  if (tx->tcb_destroy_cbfn != (void (*)(struct bnad *, struct bna_tcb *))0) 
    
#line 3523 
    (*(tx->tcb_destroy_cbfn))((tx->bna)->bnad,txq->tcb); else ;
  {
    
#line 3521 
    struct list_head const *__mptr_0 = (struct list_head const *)txq->qe.next;
    
#line 3521 
    tmp_0 = (struct bna_txq *)__mptr_0;
  }
  
#line 3521 
  txq = tmp_0;
  ldv_49806: 
#line 3523 
  ;
  
#line 3521 
  if (& txq->qe != & tx->txq_q) 
#line 3523 
                                goto ldv_49805; else 
#line 3526 
                                                     goto ldv_49807;
  ldv_49807: 
#line 3527 
  ;
  
#line 3525 
  (tx->bna)->tx_mod.rid_mask &= ~ ((unsigned int)(1UL << tx->rid));
  
#line 3526 
  bna_tx_free(tx);
  
#line 3527 
  return;
}


#line 3530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_enable(struct bna_tx *tx)
{
  
#line 3532 
  if (tx->fsm != (void (*)(void *, int ))(& bna_tx_sm_stopped)) 
#line 3533 
                                                                goto return_label; else ;
  
#line 3535 
  tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags | 2U);
  
#line 3537 
  if (((unsigned int)tx->flags & 1U) != 0U) 
#line 3538 
                                            (*(tx->fsm))((void *)tx,1); else ;
  return_label: 
#line 3539 
                return;
}


#line 3542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_disable(struct bna_tx *tx, enum bna_cleanup_type type, void (*cbfn)(void *, struct bna_tx *))
{
  
#line 3545 
  if (type == (unsigned int)BNA_SOFT_CLEANUP) {
    
#line 3546 
    (*cbfn)((void *)(tx->bna)->bnad,tx);
    
#line 3547 
    goto return_label;
  }
  else ;
  
#line 3550 
  tx->stop_cbfn = cbfn;
  
#line 3551 
  tx->stop_cbarg = (void *)(tx->bna)->bnad;
  
#line 3553 
  tx->flags = (enum bna_tx_flags)((unsigned int)tx->flags & 4294967293U);
  
#line 3555 
  (*(tx->fsm))((void *)tx,2);
  return_label: 
#line 3556 
                return;
}


#line 3559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_cleanup_complete(struct bna_tx *tx)
{
  
#line 3561 
  (*(tx->fsm))((void *)tx,7);
  
#line 3562 
  return;
}


#line 3565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_mod_cb_tx_stopped(void *arg, struct bna_tx *tx)
{
  
#line 3567 
  struct bna_tx_mod *tx_mod = (struct bna_tx_mod *)arg;
  
#line 3569 
  bfa_wc_down(& tx_mod->tx_stop_wc);
  
#line 3570 
  return;
}


#line 3573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
static void bna_tx_mod_cb_tx_stopped_all(void *arg)
{
  
#line 3575 
  struct bna_tx_mod *tx_mod = (struct bna_tx_mod *)arg;
  
#line 3577 
  if (tx_mod->stop_cbfn != (void (*)(struct bna_enet *))0) 
#line 3578 
                                                           (*(tx_mod->stop_cbfn))(& (tx_mod->bna)->enet); else ;
  
#line 3579 
  tx_mod->stop_cbfn = (void (*)(struct bna_enet *))0;
  
#line 3580 
  return;
}


#line 3583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_mod_init(struct bna_tx_mod *tx_mod, struct bna *bna, struct bna_res_info *res_info)
{
  int i;
  
#line 3588 
  tx_mod->bna = bna;
  
#line 3589 
  tx_mod->flags = (enum bna_tx_mod_flags)0;
  
#line 3591 
  tx_mod->tx = (struct bna_tx *)(res_info->res_u.mem_info.mdl)->kva;
  
#line 3593 
  tx_mod->txq = (struct bna_txq *)((res_info + 1U)->res_u.mem_info.mdl)->kva;
  
#line 3596 
  INIT_LIST_HEAD(& tx_mod->tx_free_q);
  
#line 3597 
  INIT_LIST_HEAD(& tx_mod->tx_active_q);
  
#line 3599 
  INIT_LIST_HEAD(& tx_mod->txq_free_q);
  
#line 3601 
  i = 0;
  
#line 3601 
  goto ldv_49837;
  ldv_49836: 
#line 3602 
  ;
  
#line 3602 
  (tx_mod->tx + i)->rid = i;
  
#line 3603 
  list_add_tail(& (tx_mod->tx + i)->qe,& tx_mod->tx_free_q);
  
#line 3604 
  list_add_tail(& (tx_mod->txq + i)->qe,& tx_mod->txq_free_q);
  
#line 3601 
  i += 1;
  ldv_49837: 
#line 3602 
  ;
  
#line 3601 
  if (bna->ioceth.attr.num_txq > i) 
#line 3603 
                                    goto ldv_49836; else 
#line 3606 
                                                         goto ldv_49838;
  ldv_49838: 
#line 3607 
  ;
  
#line 3607 
  tx_mod->prio_map = (unsigned char)255U;
  
#line 3608 
  tx_mod->default_prio = 0;
  
#line 3609 
  tx_mod->iscsi_over_cee = 0;
  
#line 3610 
  tx_mod->iscsi_prio = -1;
  
#line 3611 
  return;
}


#line 3614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_mod_uninit(struct bna_tx_mod *tx_mod)
{
  
#line 3616 
  tx_mod->bna = (struct bna *)0;
  
#line 3617 
  return;
}


#line 3620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_mod_start(struct bna_tx_mod *tx_mod, enum bna_tx_type type)
{
  struct bna_tx *tx;
  struct bna_tx *tmp;
  struct bna_tx *tmp_0;
  
#line 3624 
  tx_mod->flags = (enum bna_tx_mod_flags)((unsigned int)tx_mod->flags | 1U);
  
#line 3625 
  if (type == (unsigned int)BNA_TX_T_LOOPBACK) 
#line 3626 
                                               tx_mod->flags = (enum bna_tx_mod_flags)((unsigned int)tx_mod->flags | 2U); else ;
  {
    
#line 3628 
    struct list_head const *__mptr = (struct list_head const *)tx_mod->tx_active_q.next;
    
#line 3628 
    tmp = (struct bna_tx *)__mptr;
  }
  
#line 3628 
  tx = tmp;
  
#line 3628 
  goto ldv_49852;
  ldv_49851: 
#line 3629 
  ;
  
#line 3629 
  if (tx->type == type) 
#line 3630 
                        bna_tx_start(tx); else ;
  {
    
#line 3628 
    struct list_head const *__mptr_0 = (struct list_head const *)tx->qe.next;
    
#line 3628 
    tmp_0 = (struct bna_tx *)__mptr_0;
  }
  
#line 3628 
  tx = tmp_0;
  ldv_49852: 
#line 3630 
  ;
  
#line 3628 
  if (& tx->qe != & tx_mod->tx_active_q) 
#line 3630 
                                         goto ldv_49851; else 
#line 3633 
                                                              goto ldv_49853;
  ldv_49853: 
#line 3634 
  ;
  
#line 3635 
  return;
}


#line 3634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_mod_stop(struct bna_tx_mod *tx_mod, enum bna_tx_type type)
{
  struct bna_tx *tx;
  struct bna_tx *tmp;
  struct bna_tx *tmp_0;
  
#line 3638 
  tx_mod->flags = (enum bna_tx_mod_flags)((unsigned int)tx_mod->flags & 4294967294U);
  
#line 3639 
  tx_mod->flags = (enum bna_tx_mod_flags)((unsigned int)tx_mod->flags & 4294967293U);
  
#line 3641 
  tx_mod->stop_cbfn = & bna_enet_cb_tx_stopped;
  
#line 3643 
  bfa_wc_init(& tx_mod->tx_stop_wc,& bna_tx_mod_cb_tx_stopped_all,(void *)tx_mod);
  {
    
#line 3645 
    struct list_head const *__mptr = (struct list_head const *)tx_mod->tx_active_q.next;
    
#line 3645 
    tmp = (struct bna_tx *)__mptr;
  }
  
#line 3645 
  tx = tmp;
  
#line 3645 
  goto ldv_49864;
  ldv_49863: 
#line 3646 
  ;
  
#line 3646 
  if (tx->type == type) {
    
#line 3647 
    bfa_wc_up(& tx_mod->tx_stop_wc);
    
#line 3648 
    bna_tx_stop(tx);
  }
  else ;
  {
    
#line 3645 
    struct list_head const *__mptr_0 = (struct list_head const *)tx->qe.next;
    
#line 3645 
    tmp_0 = (struct bna_tx *)__mptr_0;
  }
  
#line 3645 
  tx = tmp_0;
  ldv_49864: 
#line 3647 
  ;
  
#line 3645 
  if (& tx->qe != & tx_mod->tx_active_q) 
#line 3647 
                                         goto ldv_49863; else 
#line 3650 
                                                              goto ldv_49865;
  ldv_49865: 
#line 3651 
  ;
  
#line 3651 
  bfa_wc_wait(& tx_mod->tx_stop_wc);
  
#line 3652 
  return;
}


#line 3655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_mod_fail(struct bna_tx_mod *tx_mod)
{
  struct bna_tx *tx;
  struct bna_tx *tmp;
  struct bna_tx *tmp_0;
  
#line 3659 
  tx_mod->flags = (enum bna_tx_mod_flags)((unsigned int)tx_mod->flags & 4294967294U);
  
#line 3660 
  tx_mod->flags = (enum bna_tx_mod_flags)((unsigned int)tx_mod->flags & 4294967293U);
  {
    
#line 3662 
    struct list_head const *__mptr = (struct list_head const *)tx_mod->tx_active_q.next;
    
#line 3662 
    tmp = (struct bna_tx *)__mptr;
  }
  
#line 3662 
  tx = tmp;
  
#line 3662 
  goto ldv_49875;
  ldv_49874: 
#line 3663 
  ;
  
#line 3663 
  bna_tx_fail(tx);
  {
    
#line 3662 
    struct list_head const *__mptr_0 = (struct list_head const *)tx->qe.next;
    
#line 3662 
    tmp_0 = (struct bna_tx *)__mptr_0;
  }
  
#line 3662 
  tx = tmp_0;
  ldv_49875: 
#line 3664 
  ;
  
#line 3662 
  if (& tx->qe != & tx_mod->tx_active_q) 
#line 3664 
                                         goto ldv_49874; else 
#line 3667 
                                                              goto ldv_49876;
  ldv_49876: 
#line 3668 
  ;
  
#line 3669 
  return;
}


#line 3667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/brocade/bna/bna_tx_rx.c"
void bna_tx_coalescing_timeo_set(struct bna_tx *tx, int coalescing_timeo)
{
  struct bna_txq *txq;
  struct bna_txq *tmp;
  struct bna_txq *tmp_0;
  {
    
#line 3671 
    struct list_head const *__mptr = (struct list_head const *)tx->txq_q.next;
    
#line 3671 
    tmp = (struct bna_txq *)__mptr;
  }
  
#line 3671 
  txq = tmp;
  
#line 3671 
  goto ldv_49887;
  ldv_49886: 
#line 3672 
  ;
  
#line 3672 
  bna_ib_coalescing_timeo_set(& txq->ib,(unsigned char)((int)((unsigned char)coalescing_timeo)));
  {
    
#line 3671 
    struct list_head const *__mptr_0 = (struct list_head const *)txq->qe.next;
    
#line 3671 
    tmp_0 = (struct bna_txq *)__mptr_0;
  }
  
#line 3671 
  txq = tmp_0;
  ldv_49887: 
#line 3673 
  ;
  
#line 3671 
  if (& txq->qe != & tx->txq_q) 
#line 3673 
                                goto ldv_49886; else 
#line 3676 
                                                     goto ldv_49888;
  ldv_49888: 
#line 3677 
  ;
  
#line 3678 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
__inline static void *ERR_PTR(long error)
{
  void *__retres;
  
#line 25 
  __retres = (void *)error;
  
#line 25 
  return __retres;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 112 
void *ldv_character_driver_scenario_21(void *arg0);


#line 113 
void ldv_dispatch_irq_register_16_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 115 
void *ldv_character_driver_scenario_25(void *arg0);


#line 116 
void *ldv_character_driver_scenario_22(void *arg0);


#line 119 
void *ldv_interrupt_scenario_17(void *arg0);


#line 120 
void *ldv_character_driver_scenario_20(void *arg0);


#line 122 
void ldv_dispatch_instance_deregister_3_1(struct timer_list *arg0);


#line 123 
void *ldv_initialization_1(void *arg0);


#line 124 
void ldv_dispatch_register_12_3(struct pci_driver *arg0);


#line 127 
int main(void);


#line 128 
void ldv_dispatch_deregister_8_1(struct file_operations *arg0);


#line 129 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 131 
void ldv_dispatch_irq_deregister_9_1(int arg0);


#line 134 
void *ldv_timer_scenario_19(void *arg0);


#line 135 
void *ldv_character_driver_scenario_24(void *arg0);


#line 136 
void *ldv_random_allocationless_scenario_23(void *arg0);


#line 141 
void ldv_dispatch_register_15_3(struct file_operations *arg0);


#line 142 
void *ldv_interrupt_scenario_26(void *arg0);


#line 143 
void *ldv_pci_scenario_18(void *arg0);


#line 144 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 145 
void ldv_dispatch_instance_deregister_14_1(struct timer_list *arg0);


#line 146 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_26;

#line 152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_24;

#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_22;

#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_25;

#line 157  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_23;

#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_23 *cf_arg_23;
  int tmp;
  
#line 165 
  tmp = ldv_undef_int();
  
#line 165 
  switch (tmp) {
    case 0: 
#line 166 
    ;
    
#line 167 
    cf_arg_23 = (struct ldv_struct_random_allocationless_scenario_23 *)ldv_xmalloc(16UL);
    
#line 168 
    cf_arg_23->arg0 = arg0;
    
#line 169 
    ret = pthread_create(& ldv_thread_23,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_23,(void *)cf_arg_23);
    
#line 170 
    __VERIFIER_assume(ret == 0);
    
#line 171 
    goto ldv_45546;
    default: 
#line 173 
    ;
    
#line 173 
    __VERIFIER_assume(0);
  }
  ldv_45546: 
#line 174 
  ;
  
#line 175 
  return;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  
#line 185 
  ldv_3_timer_list = arg0;
  
#line 189 
  ldv_dispatch_instance_deregister_3_1(ldv_3_timer_list);
  
#line 190 
  ;
  
#line 190 
  __retres = 0;
  
#line 190 
  return __retres;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 201 
  struct pci_driver *ldv_12_pci_driver = ldv_emg_alias_bnad_pci_driver_2;
  
#line 205 
  tmp_0 = ldv_undef_int();
  
#line 205 
  if (tmp_0 != 0) {
    
#line 207 
    ldv_12_pci_driver = arg0;
    
#line 211 
    ldv_dispatch_register_12_3(ldv_12_pci_driver);
    
#line 215 
    __retres = 0;
    
#line 215 
    goto return_label;
  }
  else {
    int tmp;
    
#line 222 
    tmp = ldv_undef_int_negative();
    
#line 222 
    __retres = tmp;
    
#line 222 
    goto return_label;
  }
  return_label: 
#line 205 
                return __retres;
}


#line 232  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_21(void *arg0)
{
  void *__retres;
  struct file *ldv_21_resource_1;
  int ldv_21_ldv_param_2_3;
  long long ldv_21_ldv_param_1_2;
  char *ldv_21_ldv_param_1_4;
  struct inode *ldv_21_resource_0;
  unsigned long ldv_21_size_cnt;
  long long *ldv_21_ldv_param_3_5;
  char *ldv_21_ldv_param_1_6;
  long long *ldv_21_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 243 
  struct file_operations *ldv_21_container = ldv_emg_alias_bnad_debugfs_op_drvinfo_2;
  
#line 244 
  int ldv_21_ret = ldv_undef_int();
  
#line 247 
  struct ldv_struct_character_driver_scenario_20 *data = (struct ldv_struct_character_driver_scenario_20 *)arg0;
  
#line 251 
  ldv_21_ret = ldv_undef_int();
  
#line 254 
  if (data != (struct ldv_struct_character_driver_scenario_20 *)0) {
    
#line 255 
    ldv_21_container = data->arg0;
    
#line 256 
    ldv_free((void *)data);
  }
  else ;
  
#line 261 
  ldv_21_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 262 
  tmp_1 = ldv_undef_int();
  
#line 262 
  ldv_21_size_cnt = (unsigned long)tmp_1;
  
#line 269 
  goto ldv_main_21;
  
#line 271 
  __retres = (void *)0;
  
#line 271 
  goto return_label;
  ldv_main_21: 
#line 274 
  ;
  
#line 277 
  tmp_3 = ldv_undef_int();
  
#line 277 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 280 
    ldv_21_ret = ldv_emg_wrapper_bnad_debugfs_open_drvinfo_6(ldv_21_resource_0,ldv_21_resource_1);
    
#line 282 
    ldv_21_ret = ldv_filter_err_code(ldv_21_ret);
    
#line 285 
    tmp_2 = ldv_undef_int();
    
#line 285 
    if (tmp_2 != 0) {
      
#line 287 
      __VERIFIER_assume(ldv_21_ret == 0);
      
#line 294 
      goto ldv_call_21;
    }
    else {
      
#line 298 
      __VERIFIER_assume(ldv_21_ret != 0);
      
#line 305 
      goto ldv_main_21;
    }
  }
  else {
    
#line 310 
    ldv_free((void *)ldv_21_resource_0);
    
#line 318 
    __retres = (void *)0;
    
#line 318 
    goto return_label;
  }
  
#line 321 
  __retres = (void *)0;
  
#line 321 
  goto return_label;
  ldv_call_21: 
#line 324 
  ;
  
#line 327 
  tmp_4 = ldv_undef_int();
  
#line 327 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 328 
    ;
    
#line 330 
    ldv_21_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 331 
    ldv_21_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 335 
    if (ldv_21_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 341 
      __VERIFIER_assume(ldv_21_size_cnt <= 2147479552UL);
      
#line 343 
      (*(ldv_21_container->write))(ldv_21_resource_1,(char const *)ldv_21_ldv_param_1_6,ldv_21_size_cnt,ldv_21_ldv_param_3_7);
    }
    else ;
    
#line 348 
    ldv_free((void *)ldv_21_ldv_param_1_6);
    
#line 349 
    ldv_free((void *)ldv_21_ldv_param_3_7);
    
#line 356 
    goto ldv_call_21;
    case 2: 
#line 359 
    ;
    
#line 362 
    ldv_emg_wrapper_bnad_debugfs_buffer_release_5(ldv_21_resource_0,ldv_21_resource_1);
    
#line 369 
    goto ldv_main_21;
    case 3: 
#line 372 
    ;
    
#line 376 
    tmp_9 = ldv_undef_int();
    
#line 376 
    if (tmp_9 != 0) 
#line 379 
                    ldv_emg_wrapper_bnad_debugfs_lseek_3(ldv_21_resource_1,ldv_21_ldv_param_1_2,ldv_21_ldv_param_2_3);
    else {
      
#line 385 
      ldv_21_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 386 
      ldv_21_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 391 
      ldv_emg_wrapper_bnad_debugfs_read_4(ldv_21_resource_1,ldv_21_ldv_param_1_4,ldv_21_size_cnt,ldv_21_ldv_param_3_5);
      
#line 395 
      ldv_free((void *)ldv_21_ldv_param_1_4);
      
#line 396 
      ldv_free((void *)ldv_21_ldv_param_3_5);
    }
    
#line 400 
    goto ldv_45578;
    default: 
#line 402 
    ;
    
#line 402 
    __VERIFIER_assume(0);
  }
  ldv_45578: 
#line 411 
  ;
  
#line 411 
  goto ldv_call_21;
  
#line 413 
  __retres = (void *)0;
  return_label: 
#line 413 
                return __retres;
}


#line 418  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_16_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_17 *cf_arg_17;
  struct ldv_struct_interrupt_scenario_17 *cf_arg_26;
  int tmp;
  
#line 422 
  tmp = ldv_undef_int();
  
#line 422 
  switch (tmp) {
    case 0: 
#line 423 
    ;
    
#line 424 
    cf_arg_17 = (struct ldv_struct_interrupt_scenario_17 *)ldv_xmalloc(32UL);
    
#line 425 
    cf_arg_17->arg0 = arg0;
    
#line 426 
    cf_arg_17->arg1 = arg1;
    
#line 427 
    cf_arg_17->arg2 = arg2;
    
#line 428 
    cf_arg_17->arg3 = arg3;
    
#line 429 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_interrupt_scenario_17,(void *)cf_arg_17);
    
#line 430 
    __VERIFIER_assume(ret == 0);
    
#line 431 
    goto ldv_45594;
    case 1: 
#line 433 
    ;
    
#line 434 
    cf_arg_26 = (struct ldv_struct_interrupt_scenario_17 *)ldv_xmalloc(32UL);
    
#line 435 
    cf_arg_26->arg0 = arg0;
    
#line 436 
    cf_arg_26->arg1 = arg1;
    
#line 437 
    cf_arg_26->arg2 = arg2;
    
#line 438 
    cf_arg_26->arg3 = arg3;
    
#line 439 
    ret = pthread_create(& ldv_thread_26,(pthread_attr_t const *)0,& ldv_interrupt_scenario_26,(void *)cf_arg_26);
    
#line 440 
    __VERIFIER_assume(ret == 0);
    
#line 441 
    goto ldv_45594;
    default: 
#line 443 
    ;
    
#line 443 
    __VERIFIER_assume(0);
  }
  ldv_45594: 
#line 444 
  ;
  
#line 445 
  return;
}


#line 449  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct dentry *ldv_emg_debugfs_create_file(char *arg0, unsigned short arg1, struct dentry *arg2, void *arg3, struct file_operations *arg4)
{
  struct dentry *__retres;
  struct dentry *ldv_15_dentry;
  struct file_operations *ldv_15_file_operations;
  int tmp_1;
  
#line 457 
  tmp_1 = ldv_undef_int();
  
#line 457 
  if (tmp_1 != 0) {
    
#line 459 
    ldv_15_dentry = (struct dentry *)ldv_xmalloc_unknown_size(0UL);
    
#line 460 
    ldv_15_file_operations = arg4;
    
#line 464 
    ldv_dispatch_register_15_3(ldv_15_file_operations);
    
#line 468 
    __retres = ldv_15_dentry;
    
#line 468 
    goto return_label;
  }
  else {
    struct dentry *tmp_0;
    
#line 475 
    tmp_0 = (struct dentry *)ERR_PTR(-19L);
    
#line 475 
    __retres = tmp_0;
    
#line 475 
    goto return_label;
  }
  return_label: 
#line 457 
                return __retres;
}


#line 485  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_15_3(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_25;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_20;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_22;
  int tmp;
  
#line 492 
  tmp = ldv_undef_int();
  
#line 492 
  switch (tmp) {
    case 0: 
#line 493 
    ;
    
#line 494 
    cf_arg_24 = (struct ldv_struct_character_driver_scenario_20 *)ldv_xmalloc(16UL);
    
#line 495 
    cf_arg_24->arg0 = arg0;
    
#line 496 
    ret = pthread_create(& ldv_thread_24,(pthread_attr_t const *)0,& ldv_character_driver_scenario_24,(void *)cf_arg_24);
    
#line 497 
    __VERIFIER_assume(ret == 0);
    
#line 498 
    goto ldv_45616;
    case 1: 
#line 500 
    ;
    
#line 501 
    cf_arg_25 = (struct ldv_struct_character_driver_scenario_20 *)ldv_xmalloc(16UL);
    
#line 502 
    cf_arg_25->arg0 = arg0;
    
#line 503 
    ret = pthread_create(& ldv_thread_25,(pthread_attr_t const *)0,& ldv_character_driver_scenario_25,(void *)cf_arg_25);
    
#line 504 
    __VERIFIER_assume(ret == 0);
    
#line 505 
    goto ldv_45616;
    case 2: 
#line 507 
    ;
    
#line 508 
    cf_arg_20 = (struct ldv_struct_character_driver_scenario_20 *)ldv_xmalloc(16UL);
    
#line 509 
    cf_arg_20->arg0 = arg0;
    
#line 510 
    ret = pthread_create(& ldv_thread_20,(pthread_attr_t const *)0,& ldv_character_driver_scenario_20,(void *)cf_arg_20);
    
#line 511 
    __VERIFIER_assume(ret == 0);
    
#line 512 
    goto ldv_45616;
    case 3: 
#line 514 
    ;
    
#line 515 
    cf_arg_21 = (struct ldv_struct_character_driver_scenario_20 *)ldv_xmalloc(16UL);
    
#line 516 
    cf_arg_21->arg0 = arg0;
    
#line 517 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_character_driver_scenario_21,(void *)cf_arg_21);
    
#line 518 
    __VERIFIER_assume(ret == 0);
    
#line 519 
    goto ldv_45616;
    case 4: 
#line 521 
    ;
    
#line 522 
    cf_arg_22 = (struct ldv_struct_character_driver_scenario_20 *)ldv_xmalloc(16UL);
    
#line 523 
    cf_arg_22->arg0 = arg0;
    
#line 524 
    ret = pthread_create(& ldv_thread_22,(pthread_attr_t const *)0,& ldv_character_driver_scenario_22,(void *)cf_arg_22);
    
#line 525 
    __VERIFIER_assume(ret == 0);
    
#line 526 
    goto ldv_45616;
    default: 
#line 528 
    ;
    
#line 528 
    __VERIFIER_assume(0);
  }
  ldv_45616: 
#line 529 
  ;
  
#line 530 
  return;
}


#line 534  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_22(void *arg0)
{
  void *__retres;
  struct file *ldv_22_resource_1;
  int ldv_22_ldv_param_2_3;
  long long ldv_22_ldv_param_1_2;
  char *ldv_22_ldv_param_1_4;
  struct inode *ldv_22_resource_0;
  unsigned long ldv_22_size_cnt;
  long long *ldv_22_ldv_param_3_5;
  char *ldv_22_ldv_param_1_6;
  long long *ldv_22_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 545 
  struct file_operations *ldv_22_container = ldv_emg_alias_bnad_debugfs_op_fwsave_2;
  
#line 546 
  int ldv_22_ret = ldv_undef_int();
  
#line 549 
  struct ldv_struct_character_driver_scenario_20 *data = (struct ldv_struct_character_driver_scenario_20 *)arg0;
  
#line 553 
  ldv_22_ret = ldv_undef_int();
  
#line 556 
  if (data != (struct ldv_struct_character_driver_scenario_20 *)0) {
    
#line 557 
    ldv_22_container = data->arg0;
    
#line 558 
    ldv_free((void *)data);
  }
  else ;
  
#line 563 
  ldv_22_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 564 
  tmp_1 = ldv_undef_int();
  
#line 564 
  ldv_22_size_cnt = (unsigned long)tmp_1;
  
#line 571 
  goto ldv_main_22;
  
#line 573 
  __retres = (void *)0;
  
#line 573 
  goto return_label;
  ldv_main_22: 
#line 576 
  ;
  
#line 579 
  tmp_3 = ldv_undef_int();
  
#line 579 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 582 
    ldv_22_ret = ldv_emg_wrapper_bnad_debugfs_open_fwsave_3(ldv_22_resource_0,ldv_22_resource_1);
    
#line 584 
    ldv_22_ret = ldv_filter_err_code(ldv_22_ret);
    
#line 587 
    tmp_2 = ldv_undef_int();
    
#line 587 
    if (tmp_2 != 0) {
      
#line 589 
      __VERIFIER_assume(ldv_22_ret == 0);
      
#line 596 
      goto ldv_call_22;
    }
    else {
      
#line 600 
      __VERIFIER_assume(ldv_22_ret != 0);
      
#line 607 
      goto ldv_main_22;
    }
  }
  else {
    
#line 612 
    ldv_free((void *)ldv_22_resource_0);
    
#line 620 
    __retres = (void *)0;
    
#line 620 
    goto return_label;
  }
  
#line 623 
  __retres = (void *)0;
  
#line 623 
  goto return_label;
  ldv_call_22: 
#line 626 
  ;
  
#line 629 
  tmp_4 = ldv_undef_int();
  
#line 629 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 630 
    ;
    
#line 632 
    ldv_22_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 633 
    ldv_22_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 637 
    if (ldv_22_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 643 
      __VERIFIER_assume(ldv_22_size_cnt <= 2147479552UL);
      
#line 645 
      (*(ldv_22_container->write))(ldv_22_resource_1,(char const *)ldv_22_ldv_param_1_6,ldv_22_size_cnt,ldv_22_ldv_param_3_7);
    }
    else ;
    
#line 650 
    ldv_free((void *)ldv_22_ldv_param_3_7);
    
#line 651 
    ldv_free((void *)ldv_22_ldv_param_1_6);
    
#line 658 
    goto ldv_call_22;
    case 2: 
#line 661 
    ;
    
#line 664 
    ldv_emg_wrapper_bnad_debugfs_buffer_release_5(ldv_22_resource_0,ldv_22_resource_1);
    
#line 671 
    goto ldv_main_22;
    case 3: 
#line 674 
    ;
    
#line 678 
    tmp_9 = ldv_undef_int();
    
#line 678 
    if (tmp_9 != 0) 
#line 681 
                    ldv_emg_wrapper_bnad_debugfs_lseek_3(ldv_22_resource_1,ldv_22_ldv_param_1_2,ldv_22_ldv_param_2_3);
    else {
      
#line 687 
      ldv_22_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 688 
      ldv_22_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 693 
      ldv_emg_wrapper_bnad_debugfs_read_4(ldv_22_resource_1,ldv_22_ldv_param_1_4,ldv_22_size_cnt,ldv_22_ldv_param_3_5);
      
#line 697 
      ldv_free((void *)ldv_22_ldv_param_1_4);
      
#line 698 
      ldv_free((void *)ldv_22_ldv_param_3_5);
    }
    
#line 702 
    goto ldv_45642;
    default: 
#line 704 
    ;
    
#line 704 
    __VERIFIER_assume(0);
  }
  ldv_45642: 
#line 713 
  ;
  
#line 713 
  goto ldv_call_22;
  
#line 715 
  __retres = (void *)0;
  return_label: 
#line 715 
                return __retres;
}


#line 720  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  _Bool __retres;
  struct work_struct *ldv_13_work_struct;
  int tmp;
  
#line 727 
  tmp = ldv_undef_int();
  
#line 727 
  if (tmp != 0) {
    
#line 729 
    ldv_13_work_struct = arg1;
    
#line 733 
    if (ldv_13_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 735 
      (*(ldv_13_work_struct->func))(ldv_13_work_struct); else ;
    
#line 740 
    __retres = (_Bool)1;
    
#line 740 
    goto return_label;
  }
  else {
    
#line 747 
    __retres = (_Bool)0;
    
#line 747 
    goto return_label;
  }
  return_label: 
#line 727 
                return __retres;
}


#line 757  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 764 
  tmp_0 = ldv_undef_int();
  
#line 764 
  if (tmp_0 != 0) {
    
#line 766 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 770 
    __retres = ldv_5_netdev;
    
#line 770 
    goto return_label;
  }
  else {
    
#line 777 
    __retres = (struct net_device *)0;
    
#line 777 
    goto return_label;
  }
  return_label: 
#line 764 
                return __retres;
}


#line 787  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_17(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_17_ret_val;
  int ldv_17_line;
  void *ldv_17_data;
  enum irqreturn (*ldv_17_thread)(int , void *);
  int tmp;
  
#line 793 
  enum irqreturn (*ldv_17_callback)(int , void *) = & ldv_emg_wrapper_bnad_msix_tx_2;
  
#line 796 
  struct ldv_struct_interrupt_scenario_17 *data = (struct ldv_struct_interrupt_scenario_17 *)arg0;
  
#line 801 
  if (data != (struct ldv_struct_interrupt_scenario_17 *)0) {
    
#line 802 
    ldv_17_line = data->arg0;
    
#line 803 
    ldv_17_callback = data->arg1;
    
#line 804 
    ldv_17_thread = data->arg2;
    
#line 805 
    ldv_17_data = data->arg3;
    
#line 806 
    ldv_free((void *)data);
  }
  else ;
  
#line 812 
  ldv_switch_to_interrupt_context();
  
#line 814 
  ldv_17_ret_val = ldv_emg_wrapper_bnad_msix_tx_2(ldv_17_line,ldv_17_data);
  
#line 816 
  ldv_switch_to_process_context();
  
#line 819 
  tmp = ldv_undef_int();
  
#line 819 
  if (tmp != 0) {
    
#line 821 
    __VERIFIER_assume(ldv_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 825 
    if (ldv_17_thread != (enum irqreturn (*)(int , void *))0) 
#line 827 
                                                              (*ldv_17_thread)(ldv_17_line,ldv_17_data); else ;
  }
  else 
#line 834 
       __VERIFIER_assume(ldv_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 843 
  __retres = (void *)0;
  
#line 843 
  goto return_label;
  
#line 845 
  __retres = (void *)0;
  return_label: 
#line 845 
                return __retres;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_20(void *arg0)
{
  void *__retres;
  struct file *ldv_20_resource_1;
  int ldv_20_ldv_param_2_3;
  long long ldv_20_ldv_param_1_2;
  char *ldv_20_ldv_param_1_4;
  struct inode *ldv_20_resource_0;
  unsigned long ldv_20_size_cnt;
  long long *ldv_20_ldv_param_3_5;
  char *ldv_20_ldv_param_1_6;
  long long *ldv_20_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 861 
  struct file_operations *ldv_20_container = ldv_emg_alias_bnad_debugfs_op_regrd_2;
  
#line 862 
  int ldv_20_ret = ldv_undef_int();
  
#line 865 
  struct ldv_struct_character_driver_scenario_20 *data = (struct ldv_struct_character_driver_scenario_20 *)arg0;
  
#line 869 
  ldv_20_ret = ldv_undef_int();
  
#line 872 
  if (data != (struct ldv_struct_character_driver_scenario_20 *)0) {
    
#line 873 
    ldv_20_container = data->arg0;
    
#line 874 
    ldv_free((void *)data);
  }
  else ;
  
#line 879 
  ldv_20_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 880 
  tmp_1 = ldv_undef_int();
  
#line 880 
  ldv_20_size_cnt = (unsigned long)tmp_1;
  
#line 887 
  goto ldv_main_20;
  
#line 889 
  __retres = (void *)0;
  
#line 889 
  goto return_label;
  ldv_main_20: 
#line 892 
  ;
  
#line 895 
  tmp_3 = ldv_undef_int();
  
#line 895 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 898 
    ldv_20_ret = ldv_emg_wrapper_bnad_debugfs_open_reg_6(ldv_20_resource_0,ldv_20_resource_1);
    
#line 900 
    ldv_20_ret = ldv_filter_err_code(ldv_20_ret);
    
#line 903 
    tmp_2 = ldv_undef_int();
    
#line 903 
    if (tmp_2 != 0) {
      
#line 905 
      __VERIFIER_assume(ldv_20_ret == 0);
      
#line 912 
      goto ldv_call_20;
    }
    else {
      
#line 916 
      __VERIFIER_assume(ldv_20_ret != 0);
      
#line 923 
      goto ldv_main_20;
    }
  }
  else {
    
#line 928 
    ldv_free((void *)ldv_20_resource_0);
    
#line 936 
    __retres = (void *)0;
    
#line 936 
    goto return_label;
  }
  
#line 939 
  __retres = (void *)0;
  
#line 939 
  goto return_label;
  ldv_call_20: 
#line 942 
  ;
  
#line 945 
  tmp_4 = ldv_undef_int();
  
#line 945 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 946 
    ;
    
#line 948 
    ldv_20_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 949 
    ldv_20_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 958 
    __VERIFIER_assume(ldv_20_size_cnt <= 2147479552UL);
    
#line 960 
    ldv_emg_wrapper_bnad_debugfs_write_regrd_4(ldv_20_resource_1,ldv_20_ldv_param_1_6,ldv_20_size_cnt,ldv_20_ldv_param_3_7);
    
#line 964 
    ldv_free((void *)ldv_20_ldv_param_1_6);
    
#line 965 
    ldv_free((void *)ldv_20_ldv_param_3_7);
    
#line 972 
    goto ldv_call_20;
    case 2: 
#line 975 
    ;
    
#line 978 
    ldv_emg_wrapper_bnad_debugfs_release_5(ldv_20_resource_0,ldv_20_resource_1);
    
#line 985 
    goto ldv_main_20;
    case 3: 
#line 988 
    ;
    
#line 992 
    tmp_9 = ldv_undef_int();
    
#line 992 
    if (tmp_9 != 0) 
#line 995 
                    ldv_emg_wrapper_bnad_debugfs_lseek_3(ldv_20_resource_1,ldv_20_ldv_param_1_2,ldv_20_ldv_param_2_3);
    else {
      
#line 1001 
      ldv_20_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1002 
      ldv_20_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1007 
      ldv_emg_wrapper_bnad_debugfs_read_regrd_3(ldv_20_resource_1,ldv_20_ldv_param_1_4,ldv_20_size_cnt,ldv_20_ldv_param_3_5);
      
#line 1011 
      ldv_free((void *)ldv_20_ldv_param_3_5);
      
#line 1012 
      ldv_free((void *)ldv_20_ldv_param_1_4);
    }
    
#line 1016 
    goto ldv_45688;
    default: 
#line 1018 
    ;
    
#line 1018 
    __VERIFIER_assume(0);
  }
  ldv_45688: 
#line 1027 
  ;
  
#line 1027 
  goto ldv_call_20;
  
#line 1029 
  __retres = (void *)0;
  return_label: 
#line 1029 
                return __retres;
}


#line 1034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp_0;
  
#line 1039 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_bnad_msix_rx_2;
  
#line 1044 
  tmp_0 = ldv_undef_int();
  
#line 1044 
  if (tmp_0 != 0) {
    
#line 1046 
    ldv_16_line = (int)arg0;
    
#line 1047 
    ldv_16_callback = arg1;
    
#line 1048 
    ldv_16_thread = (enum irqreturn (*)(int , void *))0;
    
#line 1049 
    ldv_16_data = arg4;
    
#line 1053 
    ldv_dispatch_irq_register_16_3(ldv_16_line,ldv_16_callback,ldv_16_thread,ldv_16_data);
    
#line 1057 
    __retres = 0;
    
#line 1057 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1064 
    tmp = ldv_undef_int_negative();
    
#line 1064 
    __retres = tmp;
    
#line 1064 
    goto return_label;
  }
  return_label: 
#line 1044 
                return __retres;
}


#line 1074  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_3_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_19 *cf_arg_19;
  int tmp;
  
#line 1077 
  tmp = ldv_undef_int();
  
#line 1077 
  switch (tmp) {
    case 0: 
#line 1078 
    ;
    
#line 1079 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 1080 
    __VERIFIER_assume(ret == 0);
    
#line 1081 
    goto ldv_45713;
    default: 
#line 1083 
    ;
    
#line 1083 
    __VERIFIER_assume(0);
  }
  ldv_45713: 
#line 1084 
  ;
  
#line 1085 
  return;
}


#line 1089  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1096 
  ldv_1_ret = ldv_emg_bnad_module_init();
  
#line 1097 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1100 
  tmp = ldv_undef_int();
  
#line 1100 
  if (tmp != 0) {
    
#line 1102 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1106 
    __retres = (void *)0;
    
#line 1106 
    goto return_label;
  }
  else {
    
#line 1110 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1115 
    ldv_emg_bnad_module_exit();
    
#line 1119 
    __retres = (void *)0;
    
#line 1119 
    goto return_label;
  }
  
#line 1122 
  __retres = (void *)0;
  return_label: 
#line 1122 
                return __retres;
}


#line 1127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_12_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 1130 
  tmp = ldv_undef_int();
  
#line 1130 
  switch (tmp) {
    case 0: 
#line 1131 
    ;
    
#line 1132 
    cf_arg_18 = (struct ldv_struct_pci_scenario_18 *)ldv_xmalloc(16UL);
    
#line 1133 
    cf_arg_18->arg0 = arg0;
    
#line 1134 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_pci_scenario_18,(void *)cf_arg_18);
    
#line 1135 
    __VERIFIER_assume(ret == 0);
    
#line 1136 
    goto ldv_45725;
    default: 
#line 1138 
    ;
    
#line 1138 
    __VERIFIER_assume(0);
  }
  ldv_45725: 
#line 1139 
  ;
  
#line 1140 
  return;
}


#line 1144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_14_timer_list;
  
#line 1150 
  ldv_14_timer_list = arg0;
  
#line 1154 
  ldv_dispatch_instance_deregister_14_1(ldv_14_timer_list);
  
#line 1155 
  ;
  
#line 1155 
  __retres = 0;
  
#line 1155 
  return __retres;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1169 
  ldv_2_netdev = arg0;
  
#line 1170 
  ldv_free((void *)ldv_2_netdev);
  
#line 1174 
  goto return_label;
  return_label: 
#line 1176 
                return;
}


#line 1181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 1184 
  ldv_initialize();
  
#line 1187 
  ldv_initialization_1((void *)0);
  
#line 1189 
  __retres = 0;
  
#line 1189 
  return __retres;
}


#line 1194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct file_operations *arg0)
{
  int ret;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_24;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_25;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_20;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_21;
  struct ldv_struct_character_driver_scenario_20 *cf_arg_22;
  int tmp;
  
#line 1201 
  tmp = ldv_undef_int();
  
#line 1201 
  switch (tmp) {
    case 0: 
#line 1202 
    ;
    
#line 1203 
    ret = pthread_join(ldv_thread_24,(void **)0);
    
#line 1204 
    __VERIFIER_assume(ret == 0);
    
#line 1205 
    goto ldv_45748;
    case 1: 
#line 1207 
    ;
    
#line 1208 
    ret = pthread_join(ldv_thread_25,(void **)0);
    
#line 1209 
    __VERIFIER_assume(ret == 0);
    
#line 1210 
    goto ldv_45748;
    case 2: 
#line 1212 
    ;
    
#line 1213 
    ret = pthread_join(ldv_thread_20,(void **)0);
    
#line 1214 
    __VERIFIER_assume(ret == 0);
    
#line 1215 
    goto ldv_45748;
    case 3: 
#line 1217 
    ;
    
#line 1218 
    ret = pthread_join(ldv_thread_21,(void **)0);
    
#line 1219 
    __VERIFIER_assume(ret == 0);
    
#line 1220 
    goto ldv_45748;
    case 4: 
#line 1222 
    ;
    
#line 1223 
    ret = pthread_join(ldv_thread_22,(void **)0);
    
#line 1224 
    __VERIFIER_assume(ret == 0);
    
#line 1225 
    goto ldv_45748;
    default: 
#line 1227 
    ;
    
#line 1227 
    __VERIFIER_assume(0);
  }
  ldv_45748: 
#line 1228 
  ;
  
#line 1229 
  return;
}


#line 1233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 1236 
  tmp = ldv_undef_int();
  
#line 1236 
  switch (tmp) {
    case 0: 
#line 1237 
    ;
    
#line 1238 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 1239 
    __VERIFIER_assume(ret == 0);
    
#line 1240 
    goto ldv_45760;
    default: 
#line 1242 
    ;
    
#line 1242 
    __VERIFIER_assume(0);
  }
  ldv_45760: 
#line 1243 
  ;
  
#line 1244 
  return;
}


#line 1248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_debugfs_remove(struct dentry *arg0)
{
  struct dentry *ldv_8_dentry;
  struct file_operations *ldv_8_file_operations;
  
#line 1255 
  ldv_8_dentry = arg0;
  
#line 1256 
  ldv_free((void *)ldv_8_dentry);
  
#line 1260 
  ldv_dispatch_deregister_8_1(ldv_8_file_operations);
  
#line 1264 
  goto return_label;
  return_label: 
#line 1266 
                return;
}


#line 1271  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_9_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_9 *cf_arg_17;
  struct ldv_struct_free_irq_9 *cf_arg_26;
  int tmp;
  
#line 1275 
  tmp = ldv_undef_int();
  
#line 1275 
  switch (tmp) {
    case 0: 
#line 1276 
    ;
    
#line 1277 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 1278 
    __VERIFIER_assume(ret == 0);
    
#line 1279 
    goto ldv_45774;
    case 1: 
#line 1281 
    ;
    
#line 1282 
    ret = pthread_join(ldv_thread_26,(void **)0);
    
#line 1283 
    __VERIFIER_assume(ret == 0);
    
#line 1284 
    goto ldv_45774;
    default: 
#line 1286 
    ;
    
#line 1286 
    __VERIFIER_assume(0);
  }
  ldv_45774: 
#line 1287 
  ;
  
#line 1288 
  return;
}


#line 1292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 1296 
  int ldv_11_ret = ldv_undef_int();
  
#line 1299 
  ldv_11_ret = ldv_undef_int();
  
#line 1302 
  tmp_3 = ldv_undef_int();
  
#line 1302 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1304 
    ldv_11_netdev = arg0;
    
#line 1309 
    ldv_11_ret = ldv_emg_wrapper_bnad_open_2(ldv_11_netdev);
    
#line 1312 
    tmp_1 = ldv_undef_int();
    
#line 1312 
    if (tmp_1 != 0) {
      
#line 1314 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1318 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 1322 
      __retres = 0;
      
#line 1322 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1329 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1330 
      ldv_failed_register_netdev();
      
#line 1331 
      tmp_0 = ldv_undef_int_negative();
      
#line 1331 
      __retres = tmp_0;
      
#line 1331 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1339 
    ldv_failed_register_netdev();
    
#line 1340 
    tmp_2 = ldv_undef_int_negative();
    
#line 1340 
    __retres = tmp_2;
    
#line 1340 
    goto return_label;
  }
  return_label: 
#line 1302 
                return __retres;
}


#line 1350  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1353 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_bnad_pci_driver_2;
  
#line 1356 
  ldv_10_pci_driver = arg0;
  
#line 1360 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 1364 
  goto return_label;
  return_label: 
#line 1366 
                return;
}


#line 1371  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_19(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_19_container;
  
#line 1376 
  struct ldv_struct_timer_scenario_19 *data = (struct ldv_struct_timer_scenario_19 *)arg0;
  
#line 1381 
  if (data != (struct ldv_struct_timer_scenario_19 *)0) {
    
#line 1382 
    ldv_19_container = data->arg0;
    
#line 1383 
    ldv_free((void *)data);
  }
  else ;
  
#line 1388 
  if (ldv_19_container->function != (void (*)(unsigned long ))0) {
    
#line 1390 
    ldv_switch_to_interrupt_context();
    
#line 1392 
    (*(ldv_19_container->function))(ldv_19_container->data);
    
#line 1394 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 1403 
  __retres = (void *)0;
  
#line 1403 
  goto return_label;
  
#line 1405 
  __retres = (void *)0;
  return_label: 
#line 1405 
                return __retres;
}


#line 1410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_24(void *arg0)
{
  void *__retres;
  struct file *ldv_24_resource_1;
  int ldv_24_ldv_param_2_3;
  long long ldv_24_ldv_param_1_2;
  char *ldv_24_ldv_param_1_4;
  struct inode *ldv_24_resource_0;
  unsigned long ldv_24_size_cnt;
  long long *ldv_24_ldv_param_3_5;
  char *ldv_24_ldv_param_1_6;
  long long *ldv_24_ldv_param_3_7;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 1421 
  struct file_operations *ldv_24_container = ldv_emg_alias_bnad_debugfs_op_fwtrc_2;
  
#line 1422 
  int ldv_24_ret = ldv_undef_int();
  
#line 1425 
  struct ldv_struct_character_driver_scenario_20 *data = (struct ldv_struct_character_driver_scenario_20 *)arg0;
  
#line 1429 
  ldv_24_ret = ldv_undef_int();
  
#line 1432 
  if (data != (struct ldv_struct_character_driver_scenario_20 *)0) {
    
#line 1433 
    ldv_24_container = data->arg0;
    
#line 1434 
    ldv_free((void *)data);
  }
  else ;
  
#line 1439 
  ldv_24_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 1440 
  tmp_1 = ldv_undef_int();
  
#line 1440 
  ldv_24_size_cnt = (unsigned long)tmp_1;
  
#line 1447 
  goto ldv_main_24;
  
#line 1449 
  __retres = (void *)0;
  
#line 1449 
  goto return_label;
  ldv_main_24: 
#line 1452 
  ;
  
#line 1455 
  tmp_3 = ldv_undef_int();
  
#line 1455 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 1458 
    ldv_24_ret = ldv_emg_wrapper_bnad_debugfs_open_fwtrc_3(ldv_24_resource_0,ldv_24_resource_1);
    
#line 1460 
    ldv_24_ret = ldv_filter_err_code(ldv_24_ret);
    
#line 1463 
    tmp_2 = ldv_undef_int();
    
#line 1463 
    if (tmp_2 != 0) {
      
#line 1465 
      __VERIFIER_assume(ldv_24_ret == 0);
      
#line 1472 
      goto ldv_call_24;
    }
    else {
      
#line 1476 
      __VERIFIER_assume(ldv_24_ret != 0);
      
#line 1483 
      goto ldv_main_24;
    }
  }
  else {
    
#line 1488 
    ldv_free((void *)ldv_24_resource_0);
    
#line 1496 
    __retres = (void *)0;
    
#line 1496 
    goto return_label;
  }
  
#line 1499 
  __retres = (void *)0;
  
#line 1499 
  goto return_label;
  ldv_call_24: 
#line 1502 
  ;
  
#line 1505 
  tmp_4 = ldv_undef_int();
  
#line 1505 
  switch (tmp_4) {
    int tmp_9;
    case 1: 
#line 1506 
    ;
    
#line 1508 
    ldv_24_ldv_param_3_7 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 1509 
    ldv_24_ldv_param_1_6 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 1513 
    if (ldv_24_container->write != (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0) {
      
#line 1519 
      __VERIFIER_assume(ldv_24_size_cnt <= 2147479552UL);
      
#line 1521 
      (*(ldv_24_container->write))(ldv_24_resource_1,(char const *)ldv_24_ldv_param_1_6,ldv_24_size_cnt,ldv_24_ldv_param_3_7);
    }
    else ;
    
#line 1526 
    ldv_free((void *)ldv_24_ldv_param_3_7);
    
#line 1527 
    ldv_free((void *)ldv_24_ldv_param_1_6);
    
#line 1534 
    goto ldv_call_24;
    case 2: 
#line 1537 
    ;
    
#line 1540 
    ldv_emg_wrapper_bnad_debugfs_buffer_release_5(ldv_24_resource_0,ldv_24_resource_1);
    
#line 1547 
    goto ldv_main_24;
    case 3: 
#line 1550 
    ;
    
#line 1554 
    tmp_9 = ldv_undef_int();
    
#line 1554 
    if (tmp_9 != 0) 
#line 1557 
                    ldv_emg_wrapper_bnad_debugfs_lseek_3(ldv_24_resource_1,ldv_24_ldv_param_1_2,ldv_24_ldv_param_2_3);
    else {
      
#line 1563 
      ldv_24_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1564 
      ldv_24_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1569 
      ldv_emg_wrapper_bnad_debugfs_read_4(ldv_24_resource_1,ldv_24_ldv_param_1_4,ldv_24_size_cnt,ldv_24_ldv_param_3_5);
      
#line 1573 
      ldv_free((void *)ldv_24_ldv_param_3_5);
      
#line 1574 
      ldv_free((void *)ldv_24_ldv_param_1_4);
    }
    
#line 1578 
    goto ldv_45811;
    default: 
#line 1580 
    ;
    
#line 1580 
    __VERIFIER_assume(0);
  }
  ldv_45811: 
#line 1589 
  ;
  
#line 1589 
  goto ldv_call_24;
  
#line 1591 
  __retres = (void *)0;
  return_label: 
#line 1591 
                return __retres;
}


#line 1596  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_23(void *arg0)
{
  void *__retres;
  struct ethtool_coalesce *ldv_23_ldv_param_1_28;
  struct ethtool_cmd *ldv_23_ldv_param_1_3;
  struct ethtool_eeprom *ldv_23_ldv_param_1_13;
  unsigned long long *ldv_23_ldv_param_2_10;
  struct ethtool_ringparam *ldv_23_ldv_param_1_15;
  unsigned short ldv_23_ldv_param_2_30;
  int ldv_23_ldv_param_1_25;
  unsigned char *ldv_23_ldv_param_2_27;
  struct ethtool_ringparam *ldv_23_ldv_param_1_8;
  unsigned short ldv_23_ldv_param_1_29;
  struct ethtool_pauseparam *ldv_23_ldv_param_1_2;
  struct ethtool_cmd *ldv_23_ldv_param_1_4;
  struct ethtool_ts_info *ldv_23_ldv_param_1_5;
  unsigned long long ldv_23_ldv_param_1_11;
  struct sk_buff *ldv_23_ldv_param_0_16;
  unsigned int ldv_23_ldv_param_1_26;
  struct ethtool_drvinfo *ldv_23_ldv_param_1_12;
  struct ethtool_coalesce *ldv_23_ldv_param_1_23;
  struct ethtool_eeprom *ldv_23_ldv_param_1_18;
  struct ethtool_wolinfo *ldv_23_ldv_param_1_20;
  unsigned char *ldv_23_ldv_param_2_19;
  unsigned short ldv_23_ldv_param_1_21;
  int ldv_23_ldv_param_1_6;
  struct ethtool_pauseparam *ldv_23_ldv_param_1_31;
  struct ethtool_stats *ldv_23_ldv_param_1_9;
  void *ldv_23_ldv_param_1_17;
  struct ethtool_flash *ldv_23_ldv_param_1_24;
  unsigned char *ldv_23_ldv_param_2_14;
  struct net_device *ldv_23_container;
  unsigned short ldv_23_ldv_param_2_22;
  struct rtnl_link_stats64 *ldv_23_ldv_param_1_7;
  int tmp_21;
  
#line 1631 
  struct ldv_struct_random_allocationless_scenario_23 *data = (struct ldv_struct_random_allocationless_scenario_23 *)arg0;
  
#line 1636 
  if (data != (struct ldv_struct_random_allocationless_scenario_23 *)0) {
    
#line 1637 
    ldv_23_container = data->arg0;
    
#line 1638 
    ldv_free((void *)data);
  }
  else ;
  
#line 1646 
  goto ldv_call_23;
  
#line 1648 
  __retres = (void *)0;
  
#line 1648 
  goto return_label;
  ldv_call_23: 
#line 1651 
  ;
  
#line 1654 
  tmp_21 = ldv_undef_int();
  
#line 1654 
  if (tmp_21 != 0) {
    int tmp_0;
    
#line 1656 
    ldv_23_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 1659 
    tmp_0 = ldv_undef_int();
    
#line 1659 
    switch (tmp_0) {
      case 1: 
#line 1660 
      ;
      
#line 1663 
      ldv_emg_wrapper_bnad_get_pauseparam_2(ldv_23_container,ldv_23_ldv_param_1_2);
      
#line 1666 
      goto ldv_45850;
      case 2: 
#line 1668 
      ;
      
#line 1670 
      ldv_23_ldv_param_1_31 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1675 
      ldv_emg_wrapper_bnad_set_pauseparam_18(ldv_23_container,ldv_23_ldv_param_1_31);
      
#line 1679 
      ldv_free((void *)ldv_23_ldv_param_1_31);
      
#line 1682 
      goto ldv_45850;
      case 3: 
#line 1684 
      ;
      
#line 1687 
      ldv_emg_wrapper_bnad_netpoll_28(ldv_23_container);
      
#line 1690 
      goto ldv_45850;
      case 4: 
#line 1692 
      ;
      
#line 1698 
      ldv_emg_wrapper_bnad_vlan_rx_kill_vid_27(ldv_23_container,(unsigned short)((int)ldv_23_ldv_param_1_29),(unsigned short)((int)ldv_23_ldv_param_2_30));
      
#line 1704 
      goto ldv_45850;
      case 5: 
#line 1706 
      ;
      
#line 1709 
      bnad_set_rx_mode(ldv_23_container);
      
#line 1712 
      goto ldv_45850;
      case 6: 
#line 1714 
      ;
      
#line 1716 
      ldv_23_ldv_param_1_28 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1721 
      ldv_emg_wrapper_bnad_set_coalesce_26(ldv_23_container,ldv_23_ldv_param_1_28);
      
#line 1725 
      ldv_free((void *)ldv_23_ldv_param_1_28);
      
#line 1728 
      goto ldv_45850;
      case 7: 
#line 1730 
      ;
      
#line 1732 
      ldv_23_ldv_param_2_27 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1737 
      ldv_emg_wrapper_bnad_get_strings_5(ldv_23_container,ldv_23_ldv_param_1_26,ldv_23_ldv_param_2_27);
      
#line 1741 
      ldv_free((void *)ldv_23_ldv_param_2_27);
      
#line 1744 
      goto ldv_45850;
      case 8: 
#line 1746 
      ;
      
#line 1752 
      ldv_emg_wrapper_bnad_get_sset_count_24(ldv_23_container,ldv_23_ldv_param_1_25);
      
#line 1758 
      goto ldv_45850;
      case 9: 
#line 1760 
      ;
      
#line 1762 
      ldv_23_ldv_param_1_24 = (struct ethtool_flash *)ldv_xmalloc_unknown_size(0UL);
      
#line 1767 
      ldv_emg_wrapper_bnad_flash_device_22(ldv_23_container,ldv_23_ldv_param_1_24);
      
#line 1771 
      ldv_free((void *)ldv_23_ldv_param_1_24);
      
#line 1774 
      goto ldv_45850;
      case 10: 
#line 1776 
      ;
      
#line 1778 
      ldv_23_ldv_param_1_23 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1783 
      ldv_emg_wrapper_bnad_get_coalesce_21(ldv_23_container,ldv_23_ldv_param_1_23);
      
#line 1787 
      ldv_free((void *)ldv_23_ldv_param_1_23);
      
#line 1790 
      goto ldv_45850;
      case 11: 
#line 1792 
      ;
      
#line 1798 
      ldv_emg_wrapper_bnad_vlan_rx_add_vid_20(ldv_23_container,(unsigned short)((int)ldv_23_ldv_param_1_21),(unsigned short)((int)ldv_23_ldv_param_2_22));
      
#line 1804 
      goto ldv_45850;
      case 12: 
#line 1806 
      ;
      
#line 1808 
      ldv_23_ldv_param_1_20 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1813 
      ldv_emg_wrapper_bnad_get_wol_19(ldv_23_container,ldv_23_ldv_param_1_20);
      
#line 1817 
      ldv_free((void *)ldv_23_ldv_param_1_20);
      
#line 1820 
      goto ldv_45850;
      case 13: 
#line 1822 
      ;
      
#line 1824 
      ldv_23_ldv_param_1_18 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1825 
      ldv_23_ldv_param_2_19 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1830 
      ldv_emg_wrapper_bnad_get_eeprom_3(ldv_23_container,ldv_23_ldv_param_1_18,ldv_23_ldv_param_2_19);
      
#line 1834 
      ldv_free((void *)ldv_23_ldv_param_1_18);
      
#line 1835 
      ldv_free((void *)ldv_23_ldv_param_2_19);
      
#line 1838 
      goto ldv_45850;
      case 14: 
#line 1840 
      ;
      
#line 1842 
      ldv_23_ldv_param_1_17 = ldv_xmalloc_unknown_size(0UL);
      
#line 1847 
      ldv_emg_wrapper_bnad_set_mac_address_16(ldv_23_container,ldv_23_ldv_param_1_17);
      
#line 1851 
      ldv_free(ldv_23_ldv_param_1_17);
      
#line 1854 
      goto ldv_45850;
      case 15: 
#line 1856 
      ;
      
#line 1858 
      ldv_23_ldv_param_0_16 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1863 
      ldv_emg_wrapper_bnad_start_xmit_15(ldv_23_ldv_param_0_16,ldv_23_container);
      
#line 1867 
      ldv_free((void *)ldv_23_ldv_param_0_16);
      
#line 1870 
      goto ldv_45850;
      case 16: 
#line 1872 
      ;
      
#line 1874 
      ldv_23_ldv_param_1_15 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1879 
      ldv_emg_wrapper_bnad_set_ringparam_14(ldv_23_container,ldv_23_ldv_param_1_15);
      
#line 1883 
      ldv_free((void *)ldv_23_ldv_param_1_15);
      
#line 1886 
      goto ldv_45850;
      case 17: 
#line 1888 
      ;
      
#line 1890 
      ldv_23_ldv_param_2_14 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1891 
      ldv_23_ldv_param_1_13 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1896 
      ldv_emg_wrapper_bnad_set_eeprom_13(ldv_23_container,ldv_23_ldv_param_1_13,ldv_23_ldv_param_2_14);
      
#line 1900 
      ldv_free((void *)ldv_23_ldv_param_2_14);
      
#line 1901 
      ldv_free((void *)ldv_23_ldv_param_1_13);
      
#line 1904 
      goto ldv_45850;
      case 18: 
#line 1906 
      ;
      
#line 1909 
      ldv_emg_wrapper_bnad_get_eeprom_len_29(ldv_23_container);
      
#line 1912 
      goto ldv_45850;
      case 19: 
#line 1914 
      ;
      
#line 1916 
      ldv_23_ldv_param_1_12 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1921 
      ldv_emg_wrapper_bnad_get_drvinfo_12(ldv_23_container,ldv_23_ldv_param_1_12);
      
#line 1925 
      ldv_free((void *)ldv_23_ldv_param_1_12);
      
#line 1928 
      goto ldv_45850;
      case 20: 
#line 1930 
      ;
      
#line 1936 
      ldv_emg_wrapper_bnad_set_features_11(ldv_23_container,ldv_23_ldv_param_1_11);
      
#line 1942 
      goto ldv_45850;
      case 21: 
#line 1944 
      ;
      
#line 1947 
      (*ldv_emg_alias_ethtool_op_get_link_10)(ldv_23_container);
      
#line 1950 
      goto ldv_45850;
      case 22: 
#line 1952 
      ;
      
#line 1955 
      (*ldv_emg_alias_eth_validate_addr_23)(ldv_23_container);
      
#line 1958 
      goto ldv_45850;
      case 23: 
#line 1960 
      ;
      
#line 1962 
      ldv_23_ldv_param_1_9 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1963 
      ldv_23_ldv_param_2_10 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1968 
      ldv_emg_wrapper_bnad_get_ethtool_stats_8(ldv_23_container,ldv_23_ldv_param_1_9,ldv_23_ldv_param_2_10);
      
#line 1972 
      ldv_free((void *)ldv_23_ldv_param_1_9);
      
#line 1973 
      ldv_free((void *)ldv_23_ldv_param_2_10);
      
#line 1976 
      goto ldv_45850;
      case 24: 
#line 1978 
      ;
      
#line 1980 
      ldv_23_ldv_param_1_8 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1985 
      ldv_emg_wrapper_bnad_get_ringparam_7(ldv_23_container,ldv_23_ldv_param_1_8);
      
#line 1989 
      ldv_free((void *)ldv_23_ldv_param_1_8);
      
#line 1992 
      goto ldv_45850;
      case 25: 
#line 1994 
      ;
      
#line 1996 
      ldv_23_ldv_param_1_7 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 2001 
      ldv_emg_wrapper_bnad_get_stats64_6(ldv_23_container,ldv_23_ldv_param_1_7);
      
#line 2005 
      ldv_free((void *)ldv_23_ldv_param_1_7);
      
#line 2008 
      goto ldv_45850;
      case 26: 
#line 2010 
      ;
      
#line 2016 
      ldv_emg_wrapper_bnad_change_mtu_9(ldv_23_container,ldv_23_ldv_param_1_6);
      
#line 2022 
      goto ldv_45850;
      case 27: 
#line 2024 
      ;
      
#line 2026 
      ldv_23_ldv_param_1_5 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 2031 
      (*ldv_emg_alias_ethtool_op_get_ts_info_25)(ldv_23_container,ldv_23_ldv_param_1_5);
      
#line 2035 
      ldv_free((void *)ldv_23_ldv_param_1_5);
      
#line 2038 
      goto ldv_45850;
      case 28: 
#line 2040 
      ;
      
#line 2042 
      ldv_23_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 2047 
      ldv_emg_wrapper_bnad_set_settings_4(ldv_23_container,ldv_23_ldv_param_1_4);
      
#line 2051 
      ldv_free((void *)ldv_23_ldv_param_1_4);
      
#line 2054 
      goto ldv_45850;
      case 29: 
#line 2056 
      ;
      
#line 2058 
      ldv_23_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 2063 
      ldv_emg_wrapper_bnad_get_settings_17(ldv_23_container,ldv_23_ldv_param_1_3);
      
#line 2067 
      ldv_free((void *)ldv_23_ldv_param_1_3);
      
#line 2070 
      goto ldv_45850;
      default: 
#line 2072 
      ;
      
#line 2072 
      __VERIFIER_assume(0);
    }
    ldv_45850: 
#line 2075 
    ;
    
#line 2075 
    ldv_free((void *)ldv_23_ldv_param_1_2);
    
#line 2082 
    goto ldv_call_23;
  }
  else {
    
#line 2090 
    __retres = (void *)0;
    
#line 2090 
    goto return_label;
  }
  
#line 2093 
  __retres = (void *)0;
  return_label: 
#line 2093 
                return __retres;
}


#line 2098  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 2104 
  ldv_6_netdev = arg0;
  
#line 2109 
  ldv_emg_wrapper_bnad_stop_2(ldv_6_netdev);
  
#line 2113 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 2117 
  goto return_label;
  return_label: 
#line 2119 
                return;
}


#line 2124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_9_line;
  
#line 2130 
  ldv_9_line = (int)arg0;
  
#line 2134 
  ldv_dispatch_irq_deregister_9_1(ldv_9_line);
  
#line 2138 
  goto return_label;
  return_label: 
#line 2140 
                return;
}


#line 2145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  _Bool __retres;
  struct work_struct *ldv_7_ldv_param_0_2;
  struct delayed_work *ldv_7_delayed_work;
  int tmp_0;
  
#line 2153 
  tmp_0 = ldv_undef_int();
  
#line 2153 
  if (tmp_0 != 0) {
    
#line 2155 
    ldv_7_delayed_work = arg1;
    
#line 2159 
    ldv_7_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 2163 
    if (ldv_7_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 2165 
      (*(ldv_7_delayed_work->work.func))(ldv_7_ldv_param_0_2); else ;
    
#line 2170 
    ldv_free((void *)ldv_7_ldv_param_0_2);
    
#line 2174 
    __retres = (_Bool)1;
    
#line 2174 
    goto return_label;
  }
  else {
    
#line 2181 
    __retres = (_Bool)0;
    
#line 2181 
    goto return_label;
  }
  return_label: 
#line 2153 
                return __retres;
}


#line 2191  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 2198 
  tmp_0 = ldv_undef_int();
  
#line 2198 
  if (tmp_0 != 0) {
    
#line 2200 
    ldv_4_timer_list = arg0;
    
#line 2204 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 2208 
    __retres = 0;
    
#line 2208 
    goto return_label;
  }
  else {
    int tmp;
    
#line 2215 
    tmp = ldv_undef_int_negative();
    
#line 2215 
    __retres = tmp;
    
#line 2215 
    goto return_label;
  }
  return_label: 
#line 2198 
                return __retres;
}


#line 2225  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_character_driver_scenario_25(void *arg0)
{
  void *__retres;
  struct file *ldv_25_resource_1;
  int ldv_25_ldv_param_2_3;
  long long ldv_25_ldv_param_1_2;
  char *ldv_25_ldv_param_1_4;
  unsigned long ldv_25_size_cnt;
  long long *ldv_25_ldv_param_3_5;
  struct inode *ldv_25_resource_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  
#line 2234 
  struct file_operations *ldv_25_container = ldv_emg_alias_bnad_debugfs_op_regwr_2;
  
#line 2235 
  int ldv_25_ret = ldv_undef_int();
  
#line 2238 
  struct ldv_struct_character_driver_scenario_20 *data = (struct ldv_struct_character_driver_scenario_20 *)arg0;
  
#line 2242 
  ldv_25_ret = ldv_undef_int();
  
#line 2245 
  if (data != (struct ldv_struct_character_driver_scenario_20 *)0) {
    
#line 2246 
    ldv_25_container = data->arg0;
    
#line 2247 
    ldv_free((void *)data);
  }
  else ;
  
#line 2252 
  ldv_25_resource_0 = (struct inode *)ldv_xmalloc_unknown_size(0UL);
  
#line 2253 
  tmp_1 = ldv_undef_int();
  
#line 2253 
  ldv_25_size_cnt = (unsigned long)tmp_1;
  
#line 2260 
  goto ldv_main_25;
  
#line 2262 
  __retres = (void *)0;
  
#line 2262 
  goto return_label;
  ldv_main_25: 
#line 2265 
  ;
  
#line 2268 
  tmp_3 = ldv_undef_int();
  
#line 2268 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 2271 
    ldv_25_ret = ldv_emg_wrapper_bnad_debugfs_open_reg_6(ldv_25_resource_0,ldv_25_resource_1);
    
#line 2273 
    ldv_25_ret = ldv_filter_err_code(ldv_25_ret);
    
#line 2276 
    tmp_2 = ldv_undef_int();
    
#line 2276 
    if (tmp_2 != 0) {
      
#line 2278 
      __VERIFIER_assume(ldv_25_ret == 0);
      
#line 2285 
      goto ldv_call_25;
    }
    else {
      
#line 2289 
      __VERIFIER_assume(ldv_25_ret != 0);
      
#line 2296 
      goto ldv_main_25;
    }
  }
  else {
    
#line 2301 
    ldv_free((void *)ldv_25_resource_0);
    
#line 2309 
    __retres = (void *)0;
    
#line 2309 
    goto return_label;
  }
  
#line 2312 
  __retres = (void *)0;
  
#line 2312 
  goto return_label;
  ldv_call_25: 
#line 2315 
  ;
  
#line 2318 
  tmp_4 = ldv_undef_int();
  
#line 2318 
  switch (tmp_4) {
    case 1: 
#line 2319 
    ;
    
#line 2325 
    ldv_emg_wrapper_bnad_debugfs_lseek_3(ldv_25_resource_1,ldv_25_ldv_param_1_2,ldv_25_ldv_param_2_3);
    
#line 2335 
    goto ldv_call_25;
    case 2: 
#line 2338 
    ;
    
#line 2340 
    ldv_25_ldv_param_3_5 = (long long *)ldv_xmalloc_unknown_size(0UL);
    
#line 2341 
    ldv_25_ldv_param_1_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 2350 
    __VERIFIER_assume(ldv_25_size_cnt <= 2147479552UL);
    
#line 2352 
    ldv_emg_wrapper_bnad_debugfs_write_regwr_3(ldv_25_resource_1,ldv_25_ldv_param_1_4,ldv_25_size_cnt,ldv_25_ldv_param_3_5);
    
#line 2356 
    ldv_free((void *)ldv_25_ldv_param_3_5);
    
#line 2357 
    ldv_free((void *)ldv_25_ldv_param_1_4);
    
#line 2364 
    goto ldv_call_25;
    case 3: 
#line 2367 
    ;
    
#line 2370 
    ldv_emg_wrapper_bnad_debugfs_release_5(ldv_25_resource_0,ldv_25_resource_1);
    
#line 2377 
    goto ldv_main_25;
    default: 
#line 2380 
    ;
    
#line 2380 
    __VERIFIER_assume(0);
  }
  
#line 2383 
  __retres = (void *)0;
  return_label: 
#line 2383 
                return __retres;
}


#line 2388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_26(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_26_ret_val;
  int ldv_26_line;
  void *ldv_26_data;
  enum irqreturn (*ldv_26_thread)(int , void *);
  int tmp;
  
#line 2394 
  enum irqreturn (*ldv_26_callback)(int , void *) = & ldv_emg_wrapper_bnad_msix_rx_2;
  
#line 2397 
  struct ldv_struct_interrupt_scenario_17 *data = (struct ldv_struct_interrupt_scenario_17 *)arg0;
  
#line 2402 
  if (data != (struct ldv_struct_interrupt_scenario_17 *)0) {
    
#line 2403 
    ldv_26_line = data->arg0;
    
#line 2404 
    ldv_26_callback = data->arg1;
    
#line 2405 
    ldv_26_thread = data->arg2;
    
#line 2406 
    ldv_26_data = data->arg3;
    
#line 2407 
    ldv_free((void *)data);
  }
  else ;
  
#line 2413 
  ldv_switch_to_interrupt_context();
  
#line 2415 
  ldv_26_ret_val = ldv_emg_wrapper_bnad_msix_rx_2(ldv_26_line,ldv_26_data);
  
#line 2417 
  ldv_switch_to_process_context();
  
#line 2420 
  tmp = ldv_undef_int();
  
#line 2420 
  if (tmp != 0) {
    
#line 2422 
    __VERIFIER_assume(ldv_26_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 2426 
    if (ldv_26_thread != (enum irqreturn (*)(int , void *))0) 
#line 2428 
                                                              (*ldv_26_thread)(ldv_26_line,ldv_26_data); else ;
  }
  else 
#line 2435 
       __VERIFIER_assume(ldv_26_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 2444 
  __retres = (void *)0;
  
#line 2444 
  goto return_label;
  
#line 2446 
  __retres = (void *)0;
  return_label: 
#line 2446 
                return __retres;
}


#line 2451  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_18(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_18_resource_1;
  struct pci_device_id *ldv_18_ldv_param_1_2;
  struct pm_message ldv_18_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 2456 
  struct pci_driver *ldv_18_container = ldv_emg_alias_bnad_pci_driver_2;
  
#line 2457 
  int ldv_18_ret = ldv_undef_int();
  
#line 2460 
  struct ldv_struct_pci_scenario_18 *data = (struct ldv_struct_pci_scenario_18 *)arg0;
  
#line 2464 
  ldv_18_ret = ldv_undef_int();
  
#line 2467 
  if (data != (struct ldv_struct_pci_scenario_18 *)0) {
    
#line 2468 
    ldv_18_container = data->arg0;
    
#line 2469 
    ldv_free((void *)data);
  }
  else ;
  
#line 2480 
  goto ldv_main_18;
  
#line 2482 
  __retres = (void *)0;
  
#line 2482 
  goto return_label;
  ldv_main_18: 
#line 2485 
  ;
  
#line 2488 
  tmp_2 = ldv_undef_int();
  
#line 2488 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 2490 
    ldv_18_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 2495 
    ldv_pre_probe();
    
#line 2497 
    ldv_18_ret = ldv_emg_wrapper_bnad_pci_probe_2(ldv_18_resource_1,ldv_18_ldv_param_1_2);
    
#line 2499 
    ldv_18_ret = ldv_post_probe(ldv_18_ret);
    
#line 2503 
    ldv_free((void *)ldv_18_ldv_param_1_2);
    
#line 2506 
    tmp_1 = ldv_undef_int();
    
#line 2506 
    if (tmp_1 != 0) {
      
#line 2508 
      __VERIFIER_assume(ldv_18_ret == 0);
      
#line 2515 
      goto ldv_call_18;
    }
    else {
      
#line 2519 
      __VERIFIER_assume(ldv_18_ret != 0);
      
#line 2526 
      goto ldv_main_18;
    }
  }
  else {
    
#line 2538 
    __retres = (void *)0;
    
#line 2538 
    goto return_label;
  }
  
#line 2541 
  __retres = (void *)0;
  
#line 2541 
  goto return_label;
  ldv_call_18: 
#line 2544 
  ;
  
#line 2547 
  tmp_3 = ldv_undef_int();
  
#line 2547 
  switch (tmp_3) {
    case 1: 
#line 2548 
    ;
    
#line 2557 
    goto ldv_call_18;
    case 2: 
#line 2560 
    ;
    
#line 2562 
    if (ldv_18_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 2564 
      ldv_18_ret = (*(ldv_18_container->suspend))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 2566 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 2568 
         ldv_18_ret = ldv_undef_int();
    
#line 2573 
    if (ldv_18_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 2575 
      ldv_18_ret = (*(ldv_18_container->suspend_late))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 2577 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 2579 
         ldv_18_ret = ldv_undef_int();
    
#line 2584 
    if (ldv_18_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 2586 
      (*(ldv_18_container->resume_early))(ldv_18_resource_1); else ;
    
#line 2591 
    if (ldv_18_container->resume != (int (*)(struct pci_dev *))0) 
#line 2593 
                                                                  (*(ldv_18_container->resume))(ldv_18_resource_1); else ;
    
#line 2601 
    goto ldv_call_18;
    case 3: 
#line 2604 
    ;
    
#line 2606 
    if (ldv_18_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 2608 
      (*(ldv_18_container->shutdown))(ldv_18_resource_1); else ;
    
#line 2614 
    ldv_emg_wrapper_bnad_pci_remove_3(ldv_18_resource_1);
    
#line 2621 
    goto ldv_main_18;
    default: 
#line 2624 
    ;
    
#line 2624 
    __VERIFIER_assume(0);
  }
  
#line 2627 
  __retres = (void *)0;
  return_label: 
#line 2627 
                return __retres;
}


#line 2632  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_23 *cf_arg_23;
  int tmp;
  
#line 2635 
  tmp = ldv_undef_int();
  
#line 2635 
  switch (tmp) {
    case 0: 
#line 2636 
    ;
    
#line 2637 
    ret = pthread_join(ldv_thread_23,(void **)0);
    
#line 2638 
    __VERIFIER_assume(ret == 0);
    
#line 2639 
    goto ldv_45954;
    default: 
#line 2641 
    ;
    
#line 2641 
    __VERIFIER_assume(0);
  }
  ldv_45954: 
#line 2642 
  ;
  
#line 2643 
  return;
}


#line 2647  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_14_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_19 *cf_arg_19;
  int tmp;
  
#line 2650 
  tmp = ldv_undef_int();
  
#line 2650 
  switch (tmp) {
    case 0: 
#line 2651 
    ;
    
#line 2652 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 2653 
    __VERIFIER_assume(ret == 0);
    
#line 2654 
    goto ldv_45962;
    default: 
#line 2656 
    ;
    
#line 2656 
    __VERIFIER_assume(0);
  }
  ldv_45962: 
#line 2657 
  ;
  
#line 2658 
  return;
}


#line 2662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/brocade/bna/bna.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_19 *cf_arg_19;
  int tmp;
  
#line 2665 
  tmp = ldv_undef_int();
  
#line 2665 
  switch (tmp) {
    case 0: 
#line 2666 
    ;
    
#line 2667 
    cf_arg_19 = (struct ldv_struct_timer_scenario_19 *)ldv_xmalloc(16UL);
    
#line 2668 
    cf_arg_19->arg0 = arg0;
    
#line 2669 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_timer_scenario_19,(void *)cf_arg_19);
    
#line 2670 
    __VERIFIER_assume(ret == 0);
    
#line 2671 
    goto ldv_45970;
    default: 
#line 2673 
    ;
    
#line 2673 
    __VERIFIER_assume(0);
  }
  ldv_45970: 
#line 2674 
  ;
  
#line 2675 
  return;
}


