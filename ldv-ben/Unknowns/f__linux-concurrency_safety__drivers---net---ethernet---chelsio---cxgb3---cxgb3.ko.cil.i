/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __be64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39 
struct rw_semaphore;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct vm_area_struct;

#line 173 
struct inode;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 247 
enum hrtimer_restart;

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_53 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_54 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_52 {
   struct __anonstruct_53 __anonCompField___anonunion_52_23 ;
   struct __anonstruct_54 __anonCompField___anonunion_52_24 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_52 __anonCompField_uprobe_task_25 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_55 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_55 mm_context_t;

#line 27 
struct address_space;

#line 28 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_56 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_58 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_62 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_61 {
   atomic_t _mapcount ;
   struct __anonstruct_62 __anonCompField___anonunion_61_28 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_60 {
   union __anonunion_61 __anonCompField___anonstruct_60_29 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_59 {
   unsigned long counters ;
   struct __anonstruct_60 __anonCompField___anonunion_59_30 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_57 {
   union __anonunion_58 __anonCompField___anonstruct_57_27 ;
   union __anonunion_59 __anonCompField___anonstruct_57_31 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_64 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_65 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_63 {
   struct list_head lru ;
   struct __anonstruct_64 __anonCompField___anonunion_63_33 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_65 __anonCompField___anonunion_63_34 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_66 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_56 __anonCompField_page_26 ;
   struct __anonstruct_57 __anonCompField_page_32 ;
   union __anonunion_63 __anonCompField_page_35 ;
   union __anonunion_66 __anonCompField_page_36 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_67 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_67 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct bio_vec;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_69 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_69 __anonCompField_iov_iter_37 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/fcntl.h"
enum ldv_12242 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_12242 socket_state;

#line 54 
struct poll_table_struct;

#line 55 
struct pipe_inode_info;

#line 56 
struct net;

#line 73 
struct fasync_struct;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct sock;

#line 93 
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_70 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_70 nodemask_t;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct dentry;

#line 34 
struct user_namespace;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_162 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_162 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_163 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_163 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_164 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_164 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_166 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_167 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_169 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_171 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_170 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_171 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_172 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_173 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_165 {
   int _pad[28U] ;
   struct __anonstruct__kill_166 _kill ;
   struct __anonstruct__timer_167 _timer ;
   struct __anonstruct__rt_168 _rt ;
   struct __anonstruct__sigchld_169 _sigchld ;
   struct __anonstruct__sigfault_170 _sigfault ;
   struct __anonstruct__sigpoll_172 _sigpoll ;
   struct __anonstruct__sigsys_173 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_165 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_183 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_182 {
   struct keyring_index_key index_key ;
   struct __anonstruct_183 __anonCompField___anonunion_182_50 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_184 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_186 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_185 {
   union __anonunion_payload_186 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_180 __anonCompField_key_48 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_181 __anonCompField_key_49 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_182 __anonCompField_key_51 ;
   union __anonunion_type_data_184 type_data ;
   union __anonunion_185 __anonCompField_key_52 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_187 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_187 __anonCompField_idr_layer_53 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 176 
struct iattr;

#line 177 
struct super_block;

#line 178 
struct file_system_type;

#line 179 
struct kernfs_open_node;

#line 180 
struct kernfs_iattrs;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_206 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_206 __anonCompField_kernfs_node_57 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct kobject;

#line 478 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_207 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_207 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_22574 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_212 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_213 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_22574 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_212 __anonCompField_nf_bridge_info_61 ;
   union __anonunion_213 __anonCompField_nf_bridge_info_62 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_214 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_214 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_216 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_215 {
   u64 v64 ;
   struct __anonstruct_216 __anonCompField___anonunion_215_63 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_215 __anonCompField_skb_mstamp_64 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_219 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_218 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_219 __anonCompField___anonstruct_218_65 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_217 {
   struct __anonstruct_218 __anonCompField___anonunion_217_66 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_221 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_220 {
   __wsum csum ;
   struct __anonstruct_221 __anonCompField___anonunion_220_68 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_222 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_223 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_224 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_217 __anonCompField_sk_buff_67 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_220 __anonCompField_sk_buff_69 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_222 __anonCompField_sk_buff_70 ;
   __u32 secmark ;
   union __anonunion_223 __anonCompField_sk_buff_71 ;
   union __anonunion_224 __anonCompField_sk_buff_72 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_226 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_226 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_227 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_227 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_228 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_228 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_229 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_229 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_230 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_230 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_231 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_231 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_232 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_232 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_233 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_233 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_234 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_235 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_234 ifr_ifrn ;
   union __anonunion_ifr_ifru_235 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_240 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_239 {
   struct __anonstruct_240 __anonCompField___anonunion_239_73 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_239 __anonCompField_lockref_74 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_242 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_241 {
   struct __anonstruct_242 __anonCompField___anonunion_241_75 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_241 __anonCompField_qstr_76 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_243 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_243 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_247 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_77 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_246 __anonCompField_radix_tree_node_78 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct kstatfs;

#line 63 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_251 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_251 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_252 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_252 __anonCompField_kqid_80 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_255 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_256 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_257 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_255 __anonCompField_inode_81 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_256 __anonCompField_inode_82 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_257 __anonCompField_inode_83 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_258 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_258 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_260 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_259 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_260 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_259 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
typedef irqreturn_t (*irq_handler_t)(int , void *);

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28152 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28152 phy_interface_t;

#line 126 
enum ldv_28205 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_28205 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29917 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29918 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29917 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29918 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_325 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_325 __anonCompField_bpf_prog_98 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_333 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_333 __anonCompField_dst_entry_99 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_334 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_334 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_336 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_335 {
   __addrpair skc_addrpair ;
   struct __anonstruct_336 __anonCompField___anonunion_335_100 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_337 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_339 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_338 {
   __portpair skc_portpair ;
   struct __anonstruct_339 __anonCompField___anonunion_338_103 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_340 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_341 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_335 __anonCompField_sock_common_101 ;
   union __anonunion_337 __anonCompField_sock_common_102 ;
   union __anonunion_338 __anonCompField_sock_common_104 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_340 __anonCompField_sock_common_105 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_341 __anonCompField_sock_common_106 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_342 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_342 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_345 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_345 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_arp.h"
struct arphdr {
   __be16 ar_hrd ;
   __be16 ar_pro ;
   unsigned char ar_hln ;
   unsigned char ar_pln ;
   __be16 ar_op ;
};

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mdio.h"
struct mdio_if_info {
   int prtad ;
   u32 mmds ;
   unsigned int mode_support ;
   struct net_device *dev ;
   int (*mdio_read)(struct net_device *, int , int , u16 ) ;
   int (*mdio_write)(struct net_device *, int , int , u16 , u16 ) ;
};

#line 210 
enum sge_context_type {
    SGE_CNTXT_RDMA = 0,
    SGE_CNTXT_ETH = 2,
    SGE_CNTXT_OFLD = 4,
    SGE_CNTXT_CTRL = 5
};

#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mdio.h"
struct sg_ent {
   __be32 len[2U] ;
   __be64 addr[2U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct cphy;

#line 145 
struct adapter;

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mdio_ops {
   int (*read)(struct net_device *, int , int , u16 ) ;
   int (*write)(struct net_device *, int , int , u16 , u16 ) ;
   unsigned int mode_support ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct adapter_info {
   unsigned char nports0 ;
   unsigned char nports1 ;
   unsigned char phy_base_addr ;
   unsigned int gpio_out ;
   unsigned char gpio_intr[2U] ;
   unsigned long caps ;
   struct mdio_ops const *mdio_ops ;
   char const *desc ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mc5_stats {
   unsigned long parity_err ;
   unsigned long active_rgn_full ;
   unsigned long nfa_srch_err ;
   unsigned long unknown_cmd ;
   unsigned long reqq_parity_err ;
   unsigned long dispq_parity_err ;
   unsigned long del_act_empty ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mc7_stats {
   unsigned long corr_err ;
   unsigned long uncorr_err ;
   unsigned long parity_err ;
   unsigned long addr_err ;
};

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mac_stats {
   u64 tx_octets ;
   u64 tx_octets_bad ;
   u64 tx_frames ;
   u64 tx_mcast_frames ;
   u64 tx_bcast_frames ;
   u64 tx_pause ;
   u64 tx_deferred ;
   u64 tx_late_collisions ;
   u64 tx_total_collisions ;
   u64 tx_excess_collisions ;
   u64 tx_underrun ;
   u64 tx_len_errs ;
   u64 tx_mac_internal_errs ;
   u64 tx_excess_deferral ;
   u64 tx_fcs_errs ;
   u64 tx_frames_64 ;
   u64 tx_frames_65_127 ;
   u64 tx_frames_128_255 ;
   u64 tx_frames_256_511 ;
   u64 tx_frames_512_1023 ;
   u64 tx_frames_1024_1518 ;
   u64 tx_frames_1519_max ;
   u64 rx_octets ;
   u64 rx_octets_bad ;
   u64 rx_frames ;
   u64 rx_mcast_frames ;
   u64 rx_bcast_frames ;
   u64 rx_pause ;
   u64 rx_fcs_errs ;
   u64 rx_align_errs ;
   u64 rx_symbol_errs ;
   u64 rx_data_errs ;
   u64 rx_sequence_errs ;
   u64 rx_runt ;
   u64 rx_jabber ;
   u64 rx_short ;
   u64 rx_too_long ;
   u64 rx_mac_internal_errs ;
   u64 rx_frames_64 ;
   u64 rx_frames_65_127 ;
   u64 rx_frames_128_255 ;
   u64 rx_frames_256_511 ;
   u64 rx_frames_512_1023 ;
   u64 rx_frames_1024_1518 ;
   u64 rx_frames_1519_max ;
   u64 rx_cong_drops ;
   unsigned long tx_fifo_parity_err ;
   unsigned long rx_fifo_parity_err ;
   unsigned long tx_fifo_urun ;
   unsigned long rx_fifo_ovfl ;
   unsigned long serdes_signal_loss ;
   unsigned long xaui_pcs_ctc_err ;
   unsigned long xaui_pcs_align_change ;
   unsigned long num_toggled ;
   unsigned long num_resets ;
   unsigned long link_faults ;
};

#line 301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct tp_params {
   unsigned int nchan ;
   unsigned int pmrx_size ;
   unsigned int pmtx_size ;
   unsigned int cm_size ;
   unsigned int chan_rx_size ;
   unsigned int chan_tx_size ;
   unsigned int rx_pg_size ;
   unsigned int tx_pg_size ;
   unsigned int rx_num_pgs ;
   unsigned int tx_num_pgs ;
   unsigned int ntimer_qs ;
};

#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct qset_params {
   unsigned int polling ;
   unsigned int coalesce_usecs ;
   unsigned int rspq_size ;
   unsigned int fl_size ;
   unsigned int jumbo_size ;
   unsigned int txq_size[3U] ;
   unsigned int cong_thres ;
   unsigned int vector ;
};

#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct sge_params {
   unsigned int max_pkt_size ;
   struct qset_params qset[8U] ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mc5_params {
   unsigned int mode ;
   unsigned int nservers ;
   unsigned int nfilters ;
   unsigned int nroutes ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct vpd_params {
   unsigned int cclk ;
   unsigned int mclk ;
   unsigned int uclk ;
   unsigned int mdc ;
   unsigned int mem_timing ;
   u8 sn[17U] ;
   u8 eth_base[6U] ;
   u8 port_type[2U] ;
   unsigned short xauicfg[2U] ;
};

#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct pci_params {
   unsigned int vpd_cap_addr ;
   unsigned short speed ;
   unsigned char width ;
   unsigned char variant ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct adapter_params {
   struct sge_params sge ;
   struct mc5_params mc5 ;
   struct tp_params tp ;
   struct vpd_params vpd ;
   struct pci_params pci ;
   struct adapter_info const *info ;
   unsigned short mtus[16U] ;
   unsigned short a_wnd[32U] ;
   unsigned short b_wnd[32U] ;
   unsigned int nports ;
   unsigned int chan_map ;
   unsigned int stats_update_period ;
   unsigned int linkpoll_period ;
   unsigned int rev ;
   unsigned int offload ;
};

#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct link_config {
   unsigned int supported ;
   unsigned int advertising ;
   unsigned short requested_speed ;
   unsigned short speed ;
   unsigned char requested_duplex ;
   unsigned char duplex ;
   unsigned char requested_fc ;
   unsigned char fc ;
   unsigned char autoneg ;
   unsigned int link_ok ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mc5 {
   struct adapter *adapter ;
   unsigned int tcam_size ;
   unsigned char part_type ;
   unsigned char parity_enabled ;
   unsigned char mode ;
   struct mc5_stats stats ;
};

#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct mc7 {
   struct adapter *adapter ;
   unsigned int size ;
   unsigned int width ;
   unsigned int offset ;
   char const *name ;
   struct mc7_stats stats ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct cmac {
   struct adapter *adapter ;
   unsigned int offset ;
   unsigned int nucast ;
   unsigned int tx_tcnt ;
   unsigned int tx_xcnt ;
   u64 tx_mcnt ;
   unsigned int rx_xcnt ;
   unsigned int rx_ocnt ;
   u64 rx_mcnt ;
   unsigned int toggle_cnt ;
   unsigned int txen ;
   u64 rx_pause ;
   struct mac_stats stats ;
};

#line 512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct cphy_ops {
   int (*reset)(struct cphy *, int ) ;
   int (*intr_enable)(struct cphy *) ;
   int (*intr_disable)(struct cphy *) ;
   int (*intr_clear)(struct cphy *) ;
   int (*intr_handler)(struct cphy *) ;
   int (*autoneg_enable)(struct cphy *) ;
   int (*autoneg_restart)(struct cphy *) ;
   int (*advertise)(struct cphy *, unsigned int ) ;
   int (*set_loopback)(struct cphy *, int , int , int ) ;
   int (*set_speed_duplex)(struct cphy *, int , int ) ;
   int (*get_link_status)(struct cphy *, int *, int *, int *, int *) ;
   int (*power_down)(struct cphy *, int ) ;
   u32 mmds ;
};

#line 547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct cphy {
   u8 modtype ;
   short priv ;
   unsigned int caps ;
   struct adapter *adapter ;
   char const *desc ;
   unsigned long fifo_errors ;
   struct cphy_ops const *ops ;
   struct mdio_if_info mdio ;
   u16 phy_cache[1628U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_361 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_361 __anonCompField_pci_dev_108 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
enum t3ctype {
    T3A = 0,
    T3B = 1,
    T3C = 2
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
struct t3cdev {
   char name[16U] ;
   enum t3ctype type ;
   struct list_head ofld_dev_list ;
   struct net_device *lldev ;
   struct proc_dir_entry *proc_dir ;
   int (*send)(struct t3cdev *, struct sk_buff *) ;
   int (*recv)(struct t3cdev *, struct sk_buff **, int ) ;
   int (*ctl)(struct t3cdev *, unsigned int , void *) ;
   void (*neigh_update)(struct t3cdev *, struct neighbour *) ;
   void *priv ;
   void *l2opt ;
   void *l3opt ;
   void *l4opt ;
   void *ulp ;
   void *ulp_iscsi ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3cdev.h"
struct sge_qset;

#line 70 
struct port_info;

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3cdev.h"
struct iscsi_config {
   __u8 mac_addr[6U] ;
   __u32 flags ;
   int (*send)(struct port_info *, struct sk_buff **) ;
   int (*recv)(struct port_info *, struct sk_buff *) ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct port_info {
   struct adapter *adapter ;
   struct sge_qset *qs ;
   u8 port_id ;
   u8 nqsets ;
   u8 first_qset ;
   struct cphy phy ;
   struct cmac mac ;
   struct link_config link_config ;
   struct net_device_stats netstats ;
   int activity ;
   __be32 iscsi_ipv4addr ;
   struct iscsi_config iscsic ;
   int link_fault ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct fl_pg_chunk {
   struct page *page ;
   void *va ;
   unsigned int offset ;
   unsigned long *p_cnt ;
   dma_addr_t mapping ;
};

#line 99 
struct rx_desc;

#line 100 
struct rx_sw_desc;

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct sge_fl {
   unsigned int buf_size ;
   unsigned int credits ;
   unsigned int pend_cred ;
   unsigned int size ;
   unsigned int cidx ;
   unsigned int pidx ;
   unsigned int gen ;
   struct fl_pg_chunk pg_chunk ;
   unsigned int use_pages ;
   unsigned int order ;
   unsigned int alloc_size ;
   struct rx_desc *desc ;
   struct rx_sw_desc *sdesc ;
   dma_addr_t phys_addr ;
   unsigned int cntxt_id ;
   unsigned long empty ;
   unsigned long alloc_failed ;
};

#line 122 
struct rsp_desc;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct sge_rspq {
   unsigned int credits ;
   unsigned int size ;
   unsigned int cidx ;
   unsigned int gen ;
   unsigned int polling ;
   unsigned int holdoff_tmr ;
   unsigned int next_holdoff ;
   unsigned int rx_recycle_buf ;
   struct rsp_desc *desc ;
   dma_addr_t phys_addr ;
   unsigned int cntxt_id ;
   spinlock_t lock ;
   struct sk_buff_head rx_queue ;
   struct sk_buff *pg_skb ;
   unsigned long offload_pkts ;
   unsigned long offload_bundles ;
   unsigned long eth_pkts ;
   unsigned long pure_rsps ;
   unsigned long imm_data ;
   unsigned long rx_drops ;
   unsigned long async_notif ;
   unsigned long empty ;
   unsigned long nomem ;
   unsigned long unhandled_irqs ;
   unsigned long starved ;
   unsigned long restarted ;
};

#line 161 
struct tx_desc;

#line 162 
struct tx_sw_desc;

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct sge_txq {
   unsigned long flags ;
   unsigned int in_use ;
   unsigned int size ;
   unsigned int processed ;
   unsigned int cleaned ;
   unsigned int stop_thres ;
   unsigned int cidx ;
   unsigned int pidx ;
   unsigned int gen ;
   unsigned int unacked ;
   struct tx_desc *desc ;
   struct tx_sw_desc *sdesc ;
   spinlock_t lock ;
   unsigned int token ;
   dma_addr_t phys_addr ;
   struct sk_buff_head sendq ;
   struct tasklet_struct qresume_tsk ;
   unsigned int cntxt_id ;
   unsigned long stops ;
   unsigned long restarts ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct sge_qset {
   struct adapter *adap ;
   struct napi_struct napi ;
   struct sge_rspq rspq ;
   struct sge_fl fl[2U] ;
   struct sge_txq txq[3U] ;
   int nomem ;
   void *lro_va ;
   struct net_device *netdev ;
   struct netdev_queue *tx_q ;
   unsigned long txq_stopped ;
   struct timer_list tx_reclaim_timer ;
   struct timer_list rx_reclaim_timer ;
   unsigned long port_stats[5U] ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct sge {
   struct sge_qset qs[8U] ;
   spinlock_t reg_lock ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct __anonstruct_msix_info_362 {
   unsigned short vec ;
   char desc[22U] ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
struct adapter {
   struct t3cdev tdev ;
   struct list_head adapter_list ;
   void *regs ;
   struct pci_dev *pdev ;
   unsigned long registered_device_map ;
   unsigned long open_device_map ;
   unsigned long flags ;
   char const *name ;
   int msg_enable ;
   unsigned int mmio_len ;
   struct adapter_params params ;
   unsigned int slow_intr_mask ;
   unsigned long irq_stats[3U] ;
   int msix_nvectors ;
   struct __anonstruct_msix_info_362 msix_info[9U] ;
   struct sge sge ;
   struct mc7 pmrx ;
   struct mc7 pmtx ;
   struct mc7 cm ;
   struct mc5 mc5 ;
   struct net_device *port[2U] ;
   unsigned int check_task_cnt ;
   struct delayed_work adap_check_task ;
   struct work_struct ext_intr_handler_task ;
   struct work_struct fatal_error_handler_task ;
   struct work_struct link_fault_handler_task ;
   struct work_struct db_full_task ;
   struct work_struct db_empty_task ;
   struct work_struct db_drop_task ;
   struct dentry *debugfs_root ;
   struct mutex mdio_lock ;
   spinlock_t stats_lock ;
   spinlock_t work_lock ;
   struct sk_buff *nofail_skb ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct rss_header {
   __u8 opcode ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) cpu_idx : 6 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) hash_type : 2 ;
   __be16 cq_idx ;
   __be32 rss_hash_val ;
};

#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct work_request_hdr {
   __be32 wr_hi ;
   __be32 wr_lo ;
};

#line 988  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_tx_pkt {
   struct work_request_hdr wr ;
   __be32 cntrl ;
   __be32 len ;
};

#line 1088  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_tx_pkt_lso {
   struct work_request_hdr wr ;
   __be32 cntrl ;
   __be32 len ;
   __be32 rsvd ;
   __be32 lso_info ;
};

#line 1187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_rx_pkt {
   __u8 opcode ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) iff : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipmi_pkt : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fragment : 1 ;
   __be16 csum ;
   __be16 vlan ;
   __be16 len ;
};

#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
struct tx_desc {
   __be64 flit[16U] ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
struct rx_desc {
   __be32 addr_lo ;
   __be32 len_gen ;
   __be32 gen2 ;
   __be32 addr_hi ;
};

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
struct tx_sw_desc {
   struct sk_buff *skb ;
   u8 eop ;
   u8 addr_idx ;
   u8 fragidx ;
   s8 sflit ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
union __anonunion_366 {
   struct sk_buff *skb ;
   struct fl_pg_chunk pg_chunk ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
struct rx_sw_desc {
   union __anonunion_366 __anonCompField_rx_sw_desc_110 ;
   dma_addr_t dma_addr ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
struct rsp_desc {
   struct rss_header rss_hdr ;
   __be32 flags ;
   __be32 len_cq ;
   u8 imm_data[47U] ;
   u8 intr_gen ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
struct deferred_unmap_info {
   struct pci_dev *pdev ;
   dma_addr_t addr[18U] ;
};

#line 652  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
typedef int ldv_func_ret_type;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_736 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_736 __anonCompField_inetpeer_addr_base_109 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_737 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_739 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_738 {
   struct __anonstruct_739 __anonCompField___anonunion_738_111 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_737 __anonCompField_inet_peer_110 ;
   union __anonunion_738 __anonCompField_inet_peer_112 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/route.h"
struct inet_ehash_bucket {
   struct hlist_nulls_head chain ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_bind_hashbucket {
   spinlock_t lock ;
   struct hlist_head chain ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_listen_hashbucket {
   spinlock_t lock ;
   struct hlist_nulls_head head ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_hashinfo {
   struct inet_ehash_bucket *ehash ;
   spinlock_t *ehash_locks ;
   unsigned int ehash_mask ;
   unsigned int ehash_locks_mask ;
   struct inet_bind_hashbucket *bhash ;
   unsigned int bhash_size ;
   struct kmem_cache *bind_bucket_cachep ;
   struct inet_listen_hashbucket listening_hash[32U] ;
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/tcp.h"
struct l2t_entry {
   u16 state ;
   u16 idx ;
   u32 addr ;
   int ifindex ;
   u16 smt_idx ;
   u16 vlan ;
   struct neighbour *neigh ;
   struct l2t_entry *first ;
   struct l2t_entry *next ;
   struct sk_buff_head arpq ;
   spinlock_t lock ;
   atomic_t refcnt ;
   u8 dmac[6U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
struct l2t_data {
   unsigned int nentries ;
   struct l2t_entry *rover ;
   atomic_t nfree ;
   rwlock_t lock ;
   struct l2t_entry l2tab[0U] ;
   struct callback_head callback_head ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
struct l2t_skb_cb {
   void (*arp_failure_handler)(struct t3cdev *, struct sk_buff *) ;
};

#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
union opcode_tid {
   __be32 opcode_tid ;
   __u8 opcode ;
};

#line 1207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_l2t_write_req {
   struct work_request_hdr wr ;
   union opcode_tid ot ;
   __be32 params ;
   __u8 rsvd[2U] ;
   __u8 dst_mac[6U] ;
};

#line 326  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
union __anonunion___u_748 {
   void *__val ;
   char __c[1U] ;
};

#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
union __anonunion___u_750 {
   void *__val ;
   char __c[1U] ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11788 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct netevent_redirect {
   struct dst_entry *old ;
   struct dst_entry *new ;
   struct neighbour *neigh ;
   void const *daddr ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct tp_mib_stats {
   u32 ipInReceive_hi ;
   u32 ipInReceive_lo ;
   u32 ipInHdrErrors_hi ;
   u32 ipInHdrErrors_lo ;
   u32 ipInAddrErrors_hi ;
   u32 ipInAddrErrors_lo ;
   u32 ipInUnknownProtos_hi ;
   u32 ipInUnknownProtos_lo ;
   u32 ipInDiscards_hi ;
   u32 ipInDiscards_lo ;
   u32 ipInDelivers_hi ;
   u32 ipInDelivers_lo ;
   u32 ipOutRequests_hi ;
   u32 ipOutRequests_lo ;
   u32 ipOutDiscards_hi ;
   u32 ipOutDiscards_lo ;
   u32 ipOutNoRoutes_hi ;
   u32 ipOutNoRoutes_lo ;
   u32 ipReasmTimeout ;
   u32 ipReasmReqds ;
   u32 ipReasmOKs ;
   u32 ipReasmFails ;
   u32 reserved[8U] ;
   u32 tcpActiveOpens ;
   u32 tcpPassiveOpens ;
   u32 tcpAttemptFails ;
   u32 tcpEstabResets ;
   u32 tcpOutRsts ;
   u32 tcpCurrEstab ;
   u32 tcpInSegs_hi ;
   u32 tcpInSegs_lo ;
   u32 tcpOutSegs_hi ;
   u32 tcpOutSegs_lo ;
   u32 tcpRetransSeg_hi ;
   u32 tcpRetransSeg_lo ;
   u32 tcpInErrs_hi ;
   u32 tcpInErrs_lo ;
   u32 tcpRtoMin ;
   u32 tcpRtoMax ;
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct cxgb3_client;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ioctl.h"
struct ch_mem_range {
   uint32_t cmd ;
   uint32_t mem_id ;
   uint32_t addr ;
   uint32_t len ;
   uint32_t version ;
   uint8_t buf[0U] ;
};

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ioctl.h"
struct tid_range {
   unsigned int base ;
   unsigned int num ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct mtutab {
   unsigned int size ;
   unsigned short const *mtus ;
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct iff_mac {
   struct net_device *dev ;
   unsigned char const *mac_addr ;
   u16 vlan_tag ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct iscsi_ipv4addr {
   struct net_device *dev ;
   __be32 ipv4addr ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct ddp_params {
   unsigned int llimit ;
   unsigned int ulimit ;
   unsigned int tag_mask ;
   struct pci_dev *pdev ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct adap_ports {
   unsigned int nports ;
   struct net_device *lldevs[2U] ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct ulp_iscsi_info {
   unsigned int offset ;
   unsigned int llimit ;
   unsigned int ulimit ;
   unsigned int tagmask ;
   u8 pgsz_factor[4U] ;
   unsigned int max_rxsz ;
   unsigned int max_txsz ;
   struct pci_dev *pdev ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct rdma_info {
   unsigned int tpt_base ;
   unsigned int tpt_top ;
   unsigned int pbl_base ;
   unsigned int pbl_top ;
   unsigned int rqt_base ;
   unsigned int rqt_top ;
   unsigned int udbell_len ;
   unsigned long udbell_physbase ;
   void *kdb_addr ;
   struct pci_dev *pdev ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct rdma_cq_op {
   unsigned int id ;
   unsigned int op ;
   unsigned int credits ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct rdma_cq_setup {
   unsigned int id ;
   unsigned long long base_addr ;
   unsigned int size ;
   unsigned int credits ;
   unsigned int credit_thres ;
   unsigned int ovfl_mode ;
};

#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct rdma_ctrlqp_setup {
   unsigned long long base_addr ;
   unsigned int size ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct ofld_page_info {
   unsigned int page_size ;
   unsigned int num ;
};

#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ctl_defs.h"
struct ch_embedded_info {
   u32 fw_vers ;
   u32 tp_vers ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
union __anonunion___u_1770 {
   void *__val ;
   char __c[1U] ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct tcp_options {
   __be16 mss ;
   __u8 wsf ;
   __u8  ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ecn : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sack : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tstamp : 1 ;
};

#line 513  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_pass_accept_req {
   union opcode_tid ot ;
   __be16 local_port ;
   __be16 peer_port ;
   __be32 local_ip ;
   __be32 peer_ip ;
   __be32 tos_tid ;
   struct tcp_options tcp_options ;
   __u8 dst_mac[6U] ;
   __be16 vlan_tag ;
   __u8 src_mac[6U] ;
   __u8  ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) addr_idx : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) port_idx : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) exact_match : 1 ;
   __u8 rsvd ;
   __be32 rcv_isn ;
   __be32 rsvd2 ;
};

#line 587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_act_open_rpl {
   union opcode_tid ot ;
   __be16 local_port ;
   __be16 peer_port ;
   __be32 local_ip ;
   __be32 peer_ip ;
   __be32 atid ;
   __u8 rsvd[3U] ;
   __u8 status ;
};

#line 627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_act_establish {
   union opcode_tid ot ;
   __be16 local_port ;
   __be16 peer_port ;
   __be32 local_ip ;
   __be32 peer_ip ;
   __be32 tos_tid ;
   __be16 l2t_idx ;
   __be16 tcp_opt ;
   __be32 snd_isn ;
   __be32 rcv_isn ;
};

#line 662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_set_tcb_field {
   struct work_request_hdr wr ;
   union opcode_tid ot ;
   __u8 reply ;
   __u8 cpu_idx ;
   __be16 word ;
   __be64 mask ;
   __be64 val ;
};

#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_abort_req_rss {
   union opcode_tid ot ;
   __be32 rsvd0 ;
   __u8 rsvd1 ;
   __u8 status ;
   __u8 rsvd2[6U] ;
};

#line 761  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_abort_rpl {
   struct work_request_hdr wr ;
   union opcode_tid ot ;
   __be32 rsvd0 ;
   __u8 rsvd1 ;
   __u8 cmd ;
   __u8 rsvd2[6U] ;
};

#line 1097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_trace_pkt {
   __u8 opcode ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) iff : 4 ;
   __u8  ;
   __u8 rsvd[4U] ;
   __be16 len ;
};

#line 1215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_l2t_write_rpl {
   union opcode_tid ot ;
   __u8 status ;
   __u8 rsvd[3U] ;
};

#line 1295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_smt_write_rpl {
   union opcode_tid ot ;
   __u8 status ;
   __u8 rsvd[3U] ;
};

#line 1379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_rte_write_rpl {
   union opcode_tid ot ;
   __u8 status ;
   __u8 rsvd[3U] ;
};

#line 1418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_tid_release {
   struct work_request_hdr wr ;
   union opcode_tid ot ;
   __be32 rsvd ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
typedef int (*cxgb3_cpl_handler_func)(struct t3cdev *, struct sk_buff *, void *);

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
struct cxgb3_client {
   char *name ;
   void (*add)(struct t3cdev *) ;
   void (*remove)(struct t3cdev *) ;
   cxgb3_cpl_handler_func (**handlers)(struct t3cdev *, struct sk_buff *, void *) ;
   int (*redirect)(void *, struct dst_entry *, struct dst_entry *, struct l2t_entry *) ;
   struct list_head client_list ;
   void (*event_handler)(struct t3cdev *, u32 , u32 ) ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
struct t3c_tid_entry {
   struct cxgb3_client *client ;
   void *ctx ;
};

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
typedef int (*cpl_handler_func)(struct t3cdev *, struct sk_buff *);

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
union listen_entry {
   struct t3c_tid_entry t3c_tid ;
   union listen_entry *next ;
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
union active_open_entry {
   struct t3c_tid_entry t3c_tid ;
   union active_open_entry *next ;
};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
struct tid_info {
   struct t3c_tid_entry *tid_tab ;
   unsigned int ntids ;
   atomic_t tids_in_use ;
   union listen_entry *stid_tab ;
   unsigned int nstids ;
   unsigned int stid_base ;
   union active_open_entry *atid_tab ;
   unsigned int natids ;
   unsigned int atid_base ;
   spinlock_t atid_lock ;
   union active_open_entry *afree ;
   unsigned int atids_in_use ;
   spinlock_t stid_lock ;
   union listen_entry *sfree ;
   unsigned int stids_in_use ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
struct t3c_data {
   struct list_head list_node ;
   struct t3cdev *dev ;
   unsigned int tx_max_chunk ;
   unsigned int max_wrs ;
   unsigned int nmtus ;
   unsigned short const *mtus ;
   struct tid_info tid_maps ;
   struct t3c_tid_entry *tid_release_list ;
   spinlock_t tid_release_lock ;
   struct work_struct tid_release_task ;
   struct sk_buff *nofail_skb ;
   unsigned int release_list_incomplete ;
};

#line 1145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
union __anonunion___u_1773 {
   void *__val ;
   char __c[1U] ;
};

#line 1322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
union __anonunion___u_1775 {
   void *__val ;
   char __c[1U] ;
};

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct addr_val_pair {
   unsigned int reg_addr ;
   unsigned int val ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u16 uint16_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct _ddebug {
   char const *modname ;
   char const *function ;
   char const *filename ;
   char const *format ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))) lineno : 18 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) flags : 8 ;
};

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11818 {
    WORK_STRUCT_PENDING_BIT_0 = 0,
    WORK_STRUCT_DELAYED_BIT_0 = 1,
    WORK_STRUCT_PWQ_BIT_0 = 2,
    WORK_STRUCT_LINKED_BIT_0 = 3,
    WORK_STRUCT_STATIC_BIT_0 = 4,
    WORK_STRUCT_COLOR_SHIFT_0 = 5,
    WORK_STRUCT_COLOR_BITS_0 = 4,
    WORK_STRUCT_PENDING_0 = 1,
    WORK_STRUCT_DELAYED_0 = 2,
    WORK_STRUCT_PWQ_0 = 4,
    WORK_STRUCT_LINKED_0 = 8,
    WORK_STRUCT_STATIC_0 = 16,
    WORK_NR_COLORS_0 = 15,
    WORK_NO_COLOR_0 = 15,
    WORK_CPU_UNBOUND_0 = 8192,
    WORK_STRUCT_FLAG_BITS_0 = 9,
    WORK_OFFQ_FLAG_BASE_0 = 5,
    __WORK_OFFQ_CANCELING_0 = 5,
    WORK_OFFQ_CANCELING_0 = 32,
    WORK_OFFQ_FLAG_BITS_0 = 1,
    WORK_OFFQ_POOL_SHIFT_0 = 6,
    WORK_OFFQ_LEFT_0 = 58,
    WORK_OFFQ_POOL_BITS_0 = 31,
    WORK_OFFQ_POOL_NONE_0 = 2147483647,
    WORK_STRUCT_FLAG_MASK_0 = 511,
    WORK_STRUCT_WQ_DATA_MASK_0 = -512,
    WORK_STRUCT_NO_POOL_0 = 137438953408,
    WORK_BUSY_PENDING_0 = 1,
    WORK_BUSY_RUNNING_0 = 2,
    WORKER_DESC_LEN_0 = 24
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_2270 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_2270 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct trace_params {
   u32 sip ;
   u32 sip_mask ;
   u32 dip ;
   u32 dip_mask ;
   u16 sport ;
   u16 sport_mask ;
   u16 dport ;
   u16 dport_mask ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) vlan : 12 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) vlan_mask : 12 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) intf : 4 ;
   u32 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) intf_mask : 4 ;
   u8 proto ;
   u8 proto_mask ;
};

#line 786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct ch_reg {
   uint32_t cmd ;
   uint32_t addr ;
   uint32_t val ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ioctl.h"
struct ch_qset_params {
   uint32_t cmd ;
   uint32_t qset_idx ;
   int32_t txq_size[3U] ;
   int32_t rspq_size ;
   int32_t fl_size[2U] ;
   int32_t intr_lat ;
   int32_t polling ;
   int32_t lro ;
   int32_t cong_thres ;
   int32_t vector ;
   int32_t qnum ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ioctl.h"
struct ch_mtus {
   uint32_t cmd ;
   uint32_t nmtus ;
   uint16_t mtus[16U] ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ioctl.h"
struct ch_pm {
   uint32_t cmd ;
   uint32_t tx_pg_sz ;
   uint32_t tx_num_pg ;
   uint32_t rx_pg_sz ;
   uint32_t rx_num_pg ;
   uint32_t pm_total ;
};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_ioctl.h"
struct ch_trace {
   uint32_t cmd ;
   uint32_t sip ;
   uint32_t sip_mask ;
   uint32_t dip ;
   uint32_t dip_mask ;
   uint16_t sport ;
   uint16_t sport_mask ;
   uint16_t dport ;
   uint16_t dport_mask ;
   uint32_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) vlan : 12 ;
   uint32_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) vlan_mask : 12 ;
   uint32_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) intf : 4 ;
   uint32_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) intf_mask : 4 ;
   uint8_t proto ;
   uint8_t proto_mask ;
   uint8_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) invert_match : 1 ;
   uint8_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) config_tx : 1 ;
   uint8_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) config_rx : 1 ;
   uint8_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trace_tx : 1 ;
   uint8_t __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trace_rx : 1 ;
};

#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct mngt_pktsched_wr {
   __be32 wr_hi ;
   __be32 wr_lo ;
   __u8 mngt_opcode ;
   __u8 rsvd[7U] ;
   __u8 sched ;
   __u8 idx ;
   __u8 min ;
   __u8 max ;
   __u8 binding ;
   __u8 rsvd1[3U] ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_smt_write_req {
   struct work_request_hdr wr ;
   union opcode_tid ot ;
   __u8 rsvd0 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) mtu_idx : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) iff : 4 ;
   __be16 rsvd2 ;
   __be16 rsvd3 ;
   __u8 src_mac1[6U] ;
   __be16 rsvd4 ;
   __u8 src_mac0[6U] ;
};

#line 1359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_cpl.h"
struct cpl_rte_write_req {
   struct work_request_hdr wr ;
   union opcode_tid ot ;
   __u8  ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) write_tcam : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) write_l2t_lut : 1 ;
   __u8 rsvd[3U] ;
   __be32 lut_params ;
   __be16 rsvd2 ;
   __be16 l2t_idx ;
   __be32 netmask ;
   __be32 faddr ;
};

#line 812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
struct reg_val {
   unsigned short mmd_addr ;
   unsigned short reg_addr ;
   unsigned short clear_bits ;
   unsigned short set_bits ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
struct port_type_info {
   int (*phy_prep)(struct cphy *, struct adapter *, int , struct mdio_ops const *) ;
};

#line 564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
struct t3_vpd {
   u8 id_tag ;
   u8 id_len[2U] ;
   u8 id_data[16U] ;
   u8 vpdr_tag ;
   u8 vpdr_len[2U] ;
   u8 pn_kword[2U] ;
   u8 pn_len ;
   u8 pn_data[16U] ;
   u8 ec_kword[2U] ;
   u8 ec_len ;
   u8 ec_data[16U] ;
   u8 sn_kword[2U] ;
   u8 sn_len ;
   u8 sn_data[16U] ;
   u8 na_kword[2U] ;
   u8 na_len ;
   u8 na_data[12U] ;
   u8 cclk_kword[2U] ;
   u8 cclk_len ;
   u8 cclk_data[6U] ;
   u8 mclk_kword[2U] ;
   u8 mclk_len ;
   u8 mclk_data[6U] ;
   u8 uclk_kword[2U] ;
   u8 uclk_len ;
   u8 uclk_data[6U] ;
   u8 mdc_kword[2U] ;
   u8 mdc_len ;
   u8 mdc_data[6U] ;
   u8 mt_kword[2U] ;
   u8 mt_len ;
   u8 mt_data[2U] ;
   u8 xaui0cfg_kword[2U] ;
   u8 xaui0cfg_len ;
   u8 xaui0cfg_data[6U] ;
   u8 xaui1cfg_kword[2U] ;
   u8 xaui1cfg_len ;
   u8 xaui1cfg_data[6U] ;
   u8 port0_kword[2U] ;
   u8 port0_len ;
   u8 port0_data[2U] ;
   u8 port1_kword[2U] ;
   u8 port1_len ;
   u8 port1_data[2U] ;
   u8 port2_kword[2U] ;
   u8 port2_len ;
   u8 port2_data[2U] ;
   u8 port3_kword[2U] ;
   u8 port3_len ;
   u8 port3_data[2U] ;
   u8 rv_kword[2U] ;
   u8 rv_len ;
   u8 rv_data[1U] ;
   u32 pad ;
};

#line 1375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
struct intr_info {
   unsigned int mask ;
   char const *msg ;
   short stat_idx ;
   unsigned short fatal ;
};

#line 3134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
struct mc7_timing_params {
   unsigned char ActToPreDly ;
   unsigned char ActToRdWrDly ;
   unsigned char PreCyc ;
   unsigned char RefCyc[5U] ;
   unsigned char BkCyc ;
   unsigned char WrToRdDly ;
   unsigned char RdToWrDly ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_16 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_18 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_20 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_19 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_21 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

unsigned long __builtin_bswap64(unsigned long);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/fvtp/.tmp_sge.c"
void ldv_inline_asm(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int ffs(int x)
{
  int __retres;
  int r;
  
#line 399 
  ldv_inline_asm();
  
#line 423 
  __retres = r + 1;
  
#line 423 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u64 __fswab64(__u64 val)
{
  __u64 tmp;
  
#line 71 
  tmp = (__u64)__builtin_bswap64((unsigned long)val);
  
#line 71 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void)
{
  
#line 841 
  unsigned long __edi = __edi;
  
#line 841 
  unsigned long __esi = __esi;
  
#line 841 
  unsigned long __edx = __edx;
  
#line 841 
  unsigned long __ecx = __ecx;
  
#line 841 
  unsigned long __eax = __eax;
  
#line 841 
  if ((long)(pv_irq_ops.irq_disable.func == (void *)0) != 0L) {
    
#line 843 
    ldv_inline_asm();
    
#line 841 
    ;
  }
  else ;
  
#line 844 
  ldv_inline_asm();
  
#line 846 
  return;
}


#line 844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_enable(void)
{
  
#line 846 
  unsigned long __edi = __edi;
  
#line 846 
  unsigned long __esi = __esi;
  
#line 846 
  unsigned long __edx = __edx;
  
#line 846 
  unsigned long __ecx = __ecx;
  
#line 846 
  unsigned long __eax = __eax;
  
#line 846 
  if ((long)(pv_irq_ops.irq_enable.func == (void *)0) != 0L) {
    
#line 848 
    ldv_inline_asm();
    
#line 846 
    ;
  }
  else ;
  
#line 849 
  ldv_inline_asm();
  
#line 851 
  return;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqflags.h"
void trace_hardirqs_on(void);


#line 21 
void trace_hardirqs_off(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 31 
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 39 
int _raw_spin_trylock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_81(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_84(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_86(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_89(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_91(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_100(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_102(spinlock_t *lock);


#line 386 
static void ldv_spin_lock_104(spinlock_t *lock);


#line 390 
static void ldv_spin_lock_106(spinlock_t *lock);


#line 394 
static void ldv_spin_lock_108(spinlock_t *lock);


#line 398 
static void ldv_spin_lock_110(spinlock_t *lock);


#line 402 
static void ldv_spin_lock_112(spinlock_t *lock);


#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static int spin_trylock(spinlock_t *lock)
{
  int tmp;
  
#line 430 
  tmp = _raw_spin_trylock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 430 
  return tmp;
}


#line 343 
static int ldv_spin_trylock_64(spinlock_t *lock);


#line 347 
static int ldv_spin_trylock_117(spinlock_t *lock);


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 350 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 351 
  return;
}


#line 366 
static void ldv_spin_lock_irq_75(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_77(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_irq_79(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_irq_93(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_irq_96(spinlock_t *lock);


#line 386 
static void ldv_spin_lock_irq_125(spinlock_t *lock);


#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 389 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 390 
  return;
}


#line 419 
static void ldv_spin_unlock_65(spinlock_t *lock);


#line 431 
static void ldv_spin_unlock_82(spinlock_t *lock);


#line 435 
static void ldv_spin_unlock_83(spinlock_t *lock);


#line 439 
static void ldv_spin_unlock_85(spinlock_t *lock);


#line 443 
static void ldv_spin_unlock_87(spinlock_t *lock);


#line 447 
static void ldv_spin_unlock_88(spinlock_t *lock);


#line 451 
static void ldv_spin_unlock_90(spinlock_t *lock);


#line 455 
static void ldv_spin_unlock_92(spinlock_t *lock);


#line 459 
static void ldv_spin_unlock_101(spinlock_t *lock);


#line 463 
static void ldv_spin_unlock_103(spinlock_t *lock);


#line 467 
static void ldv_spin_unlock_105(spinlock_t *lock);


#line 471 
static void ldv_spin_unlock_107(spinlock_t *lock);


#line 475 
static void ldv_spin_unlock_109(spinlock_t *lock);


#line 479 
static void ldv_spin_unlock_111(spinlock_t *lock);


#line 483 
static void ldv_spin_unlock_113(spinlock_t *lock);


#line 487 
static void ldv_spin_unlock_118(spinlock_t *lock);


#line 517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 519 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 520 
  return;
}


#line 533 
static void ldv_spin_unlock_irq_76(spinlock_t *lock);


#line 537 
static void ldv_spin_unlock_irq_78(spinlock_t *lock);


#line 541 
static void ldv_spin_unlock_irq_80(spinlock_t *lock);


#line 545 
static void ldv_spin_unlock_irq_94(spinlock_t *lock);


#line 549 
static void ldv_spin_unlock_irq_95(spinlock_t *lock);


#line 553 
static void ldv_spin_unlock_irq_97(spinlock_t *lock);


#line 557 
static void ldv_spin_unlock_irq_121(spinlock_t *lock);


#line 561 
static void ldv_spin_unlock_irq_126(spinlock_t *lock);


#line 565 
static void ldv_spin_unlock_irq_127(spinlock_t *lock);


#line 600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static int spin_trylock_irq(spinlock_t *lock)
{
  int tmp_2;
  {
    int tmp_1;
    int tmp;
    
#line 602 
    arch_local_irq_disable();
    
#line 602 
    trace_hardirqs_off();
    
#line 602 
    tmp = _raw_spin_trylock(& lock->__anonCompField_spinlock_18.rlock);
    
#line 602 
    if (tmp == 0) {
      int tmp_0;
      
#line 602 
      trace_hardirqs_on();
      
#line 602 
      arch_local_irq_enable();
      
#line 602 
      tmp_0 = 0;
      
#line 602 
      tmp_1 = tmp_0;
    }
    else 
#line 602 
         tmp_1 = 1;
    
#line 602 
    tmp_2 = tmp_1;
  }
  
#line 602 
  return tmp_2;
}


#line 613 
static int ldv_spin_trylock_irq_120(spinlock_t *lock);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_119(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_122(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_128(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_129(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_130(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_131(struct timer_list *ldv_func_arg1);


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
static bool ldv_queue_work_114(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_115(struct workqueue_struct *wq, struct work_struct *work);


#line 498 
static bool ldv_queue_work_116(struct workqueue_struct *wq, struct work_struct *work);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 1079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_alert(struct device const *, char const * , ...);


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_36.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 532 
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_32.__anonCompField___anonstruct_57_31.__anonCompField___anonunion_59_30._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_32.__anonCompField___anonstruct_57_31.__anonCompField___anonunion_59_30._count);
  return_label: 
#line 545 
                return;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_32.__anonCompField___anonstruct_57_27.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 772 
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 783 
struct sk_buff *__alloc_skb(unsigned int, gfp_t, int, int);


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *alloc_skb(unsigned int size, gfp_t priority)
{
  struct sk_buff *tmp;
  
#line 790 
  tmp = __alloc_skb(size,priority,0,-1);
  
#line 790 
  return tmp;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head const *list)
{
  int __retres;
  
#line 1013 
  __retres = (struct sk_buff const *)list->next == (struct sk_buff const *)list;
  
#line 1013 
  return __retres;
}


#line 1176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_shared(struct sk_buff const *skb)
{
  int __retres;
  int tmp;
  
#line 1178 
  tmp = atomic_read(& skb->users);
  
#line 1178 
  __retres = tmp != 1;
  
#line 1178 
  return __retres;
}


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head const *list_)
{
  
#line 1261 
  struct sk_buff *skb = list_->next;
  
#line 1263 
  if (skb == (struct sk_buff *)list_) 
#line 1264 
                                      skb = (struct sk_buff *)0; else ;
  
#line 1265 
  return skb;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1333 
  tmp = (struct sk_buff *)list;
  
#line 1333 
  list->next = tmp;
  
#line 1333 
  list->prev = tmp;
  
#line 1334 
  list->qlen = 0U;
  
#line 1335 
  return;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  
#line 1347 
  spinlock_check(& list->lock);
  {
    struct lock_class_key __key;
    
#line 1347 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_18.rlock,"&(&list->lock)->rlock",& __key);
  }
  
#line 1348 
  __skb_queue_head_init(list);
  
#line 1349 
  return;
}


#line 1366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1370 
  newsk->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = next;
  
#line 1371 
  newsk->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = prev;
  
#line 1372 
  tmp = newsk;
  
#line 1372 
  prev->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = tmp;
  
#line 1372 
  next->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = tmp;
  
#line 1373 
  list->qlen += 1U;
  
#line 1374 
  return;
}


#line 1376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_splice(struct sk_buff_head const *list, struct sk_buff *prev, struct sk_buff *next)
{
  
#line 1380 
  struct sk_buff *first = list->next;
  
#line 1381 
  struct sk_buff *last = list->prev;
  
#line 1383 
  first->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = prev;
  
#line 1384 
  prev->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = first;
  
#line 1386 
  last->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = next;
  
#line 1387 
  next->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = last;
  
#line 1388 
  return;
}


#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_splice(struct sk_buff_head const *list, struct sk_buff_head *head)
{
  int tmp;
  
#line 1398 
  tmp = skb_queue_empty(list);
  
#line 1398 
  if (tmp == 0) {
    
#line 1399 
    __skb_queue_splice(list,(struct sk_buff *)head,head->next);
    
#line 1400 
    head->qlen += list->qlen;
  }
  else ;
  
#line 1402 
  return;
}


#line 1411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_splice_init(struct sk_buff_head *list, struct sk_buff_head *head)
{
  int tmp;
  
#line 1414 
  tmp = skb_queue_empty((struct sk_buff_head const *)list);
  
#line 1414 
  if (tmp == 0) {
    
#line 1415 
    __skb_queue_splice((struct sk_buff_head const *)list,(struct sk_buff *)head,head->next);
    
#line 1416 
    head->qlen += list->qlen;
    
#line 1417 
    __skb_queue_head_init(list);
  }
  else ;
  
#line 1419 
  return;
}


#line 1474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  
#line 1478 
  __skb_insert(newsk,next->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev,next,list);
  
#line 1479 
  return;
}


#line 1509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  
#line 1512 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  
#line 1513 
  return;
}


#line 1520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  struct sk_buff *next;
  struct sk_buff *prev;
  struct sk_buff *tmp;
  
#line 1524 
  list->qlen -= 1U;
  
#line 1525 
  next = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  
#line 1526 
  prev = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev;
  
#line 1527 
  tmp = (struct sk_buff *)0;
  
#line 1527 
  skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = tmp;
  
#line 1527 
  skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = tmp;
  
#line 1528 
  next->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.prev = prev;
  
#line 1529 
  prev->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next = next;
  
#line 1530 
  return;
}


#line 1541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  
#line 1543 
  struct sk_buff *skb = skb_peek((struct sk_buff_head const *)list);
  
#line 1544 
  if (skb != (struct sk_buff *)0) 
#line 1545 
                                  __skb_unlink(skb,list); else ;
  
#line 1546 
  return skb;
}


#line 1567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_nonlinear(struct sk_buff const *skb)
{
  bool __retres;
  
#line 1569 
  __retres = (_Bool)(skb->data_len != 0U);
  
#line 1569 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  
#line 1635 
  __skb_fill_page_desc(skb,i,page,off,size);
  
#line 1636 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1636 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 1637 
  return;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_tail_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1652 
  __retres = skb->head + skb->tail;
  
#line 1652 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_put(struct sk_buff *skb, unsigned int len)
{
  bool tmp_1;
  
#line 1691 
  unsigned char *tmp = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1692 
  tmp_1 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 1692 
  if ((long)((int)tmp_1 != 0) != 0L) {
    
#line 1694 
    ldv_inline_asm();
    
#line 1692 
    ;
  }
  else ;
  
#line 1693 
  skb->tail += len;
  
#line 1694 
  skb->len += len;
  
#line 1695 
  return tmp;
}


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 1707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *__skb_pull(struct sk_buff *skb, unsigned int len)
{
  unsigned char *__retres;
  
#line 1709 
  skb->len -= len;
  
#line 1710 
  if ((long)(skb->len < skb->data_len) != 0L) {
    
#line 1712 
    ldv_inline_asm();
    
#line 1710 
    ;
  }
  else ;
  
#line 1711 
  skb->data += len;
  
#line 1711 
  __retres = skb->data;
  
#line 1711 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_transport_header(struct sk_buff *skb)
{
  
#line 1887 
  skb->transport_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1888 
  return;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_network_header(struct sk_buff *skb)
{
  
#line 1904 
  skb->network_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1905 
  return;
}


#line 1923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_mac_header(struct sk_buff *skb)
{
  
#line 1925 
  skb->mac_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1926 
  return;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 2095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_orphan(struct sk_buff *skb)
{
  
#line 2097 
  if (skb->destructor != (void (*)(struct sk_buff *))0) {
    
#line 2098 
    (*(skb->destructor))(skb);
    
#line 2099 
    skb->destructor = (void (*)(struct sk_buff *))0;
    
#line 2100 
    skb->sk = (struct sock *)0;
  }
  else 
    
#line 2102 
    if ((long)(skb->sk != (struct sock *)0) != 0L) {
      
#line 2104 
      ldv_inline_asm();
      
#line 2102 
      ;
    }
    else ;
  
#line 2104 
  return;
}


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_purge(struct sk_buff_head *list)
{
  struct sk_buff *skb;
  
#line 2134 
  goto ldv_27276;
  ldv_27275: 
#line 2135 
  ;
  
#line 2135 
  kfree_skb(skb);
  ldv_27276: 
#line 2136 
  ;
  
#line 2134 
  skb = __skb_dequeue(list);
  
#line 2134 
  if (skb != (struct sk_buff *)0) 
#line 2136 
                                  goto ldv_27275; else 
#line 2139 
                                                       goto ldv_27277;
  ldv_27277: 
#line 2140 
  ;
  
#line 2141 
  return;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_set_page(skb_frag_t *frag, struct page *page)
{
  
#line 2360 
  frag->page.p = page;
  
#line 2361 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2703 
int skb_copy_bits(struct sk_buff const *, int, void *, int);


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static void ldv_tasklet_schedule_98(struct tasklet_struct *t);


#line 544 
static void ldv_tasklet_schedule_99(struct tasklet_struct *t);


#line 587 
void tasklet_kill(struct tasklet_struct *);


#line 593 
static void ldv_tasklet_init_123(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 597 
static void ldv_tasklet_init_124(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_consume_skb_any(struct sk_buff *skb)
{
  
#line 2938 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_CONSUMED);
  
#line 2939 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 2950 
struct sk_buff *napi_get_frags(struct napi_struct *);


#line 2951 
gro_result_t napi_gro_frags(struct napi_struct *);


#line 2955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_free_frags(struct napi_struct *napi)
{
  
#line 2957 
  kfree_skb(napi->skb);
  
#line 2958 
  napi->skb = (struct sk_buff *)0;
  
#line 2959 
  return;
}


#line 3182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool __netif_tx_trylock(struct netdev_queue *txq)
{
  int tmp;
  
#line 3184 
  tmp = ldv_spin_trylock_64(& txq->_xmit_lock);
  
#line 3184 
  bool ok = (_Bool)(tmp != 0);
  
#line 3185 
  if ((long)((int)ok != 0) != 0L) {
    int tmp_4;
    {
      int pscr_ret__;
      {
        
#line 3186 
        void const *__vpp_verify = (void const *)0;
        
#line 3186 
        void const *tmp_2 = __vpp_verify;
      }
      
#line 3186 
      switch (4UL) {
        int tmp_0;
        int tmp_1;
        int tmp_2_0;
        int tmp_3;
        case (unsigned long)1: 
#line 3186 
        ;
        {
          int pfo_ret__;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42955;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42955;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42955;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42955;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42955: 
#line 3186 
          ;
          
#line 3186 
          tmp_0 = pfo_ret__;
        }
        
#line 3186 
        pscr_ret__ = tmp_0;
        
#line 3186 
        goto ldv_42961;
        case (unsigned long)2: 
#line 3186 
        ;
        {
          int pfo_ret___0;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42965;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42965;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42965;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42965;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42965: 
#line 3186 
          ;
          
#line 3186 
          tmp_1 = pfo_ret___0;
        }
        
#line 3186 
        pscr_ret__ = tmp_1;
        
#line 3186 
        goto ldv_42961;
        case (unsigned long)4: 
#line 3186 
        ;
        {
          int pfo_ret___1;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42974;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42974;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42974;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42974;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42974: 
#line 3186 
          ;
          
#line 3186 
          tmp_2_0 = pfo_ret___1;
        }
        
#line 3186 
        pscr_ret__ = tmp_2_0;
        
#line 3186 
        goto ldv_42961;
        case (unsigned long)8: 
#line 3186 
        ;
        {
          int pfo_ret___2;
          
#line 3186 
          switch (4UL) {
            case (unsigned long)1: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42983;
            case (unsigned long)2: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42983;
            case (unsigned long)4: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42983;
            case (unsigned long)8: 
#line 3186 
            ;
            
#line 3187 
            ldv_inline_asm();
            
#line 3186 
            goto ldv_42983;
            default: 
#line 3186 
            ;
            
#line 3186 
            __bad_percpu_size();
          }
          ldv_42983: 
#line 3186 
          ;
          
#line 3186 
          tmp_3 = pfo_ret___2;
        }
        
#line 3186 
        pscr_ret__ = tmp_3;
        
#line 3186 
        goto ldv_42961;
        default: 
#line 3186 
        ;
        
#line 3186 
        __bad_size_call_parameter();
        
#line 3186 
        goto ldv_42961;
      }
      ldv_42961: 
#line 3186 
      ;
      
#line 3186 
      tmp_4 = pscr_ret__;
    }
    
#line 3186 
    txq->xmit_lock_owner = tmp_4;
  }
  else ;
  
#line 3187 
  return ok;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_65(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_arp.h"
__inline static struct arphdr *arp_hdr(struct sk_buff const *skb)
{
  struct arphdr *tmp;
  
#line 31 
  tmp = (struct arphdr *)skb_network_header(skb);
  
#line 31 
  return tmp;
}


#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/arp.h"
void arp_send(int, int, __be32, struct net_device *, __be32, unsigned char const *, unsigned char const *, unsigned char const *);


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_page(struct pci_dev *hwdev, struct page *page, unsigned long offset, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  ;
  
#line 54 
  if (hwdev != (struct pci_dev *)0) 
#line 54 
                                    tmp = & hwdev->dev; else 
#line 54 
                                                             tmp = (struct device *)0;
  
#line 54 
  tmp_0 = dma_map_page(tmp,page,offset,size,(enum dma_data_direction)direction);
  
#line 54 
  return tmp_0;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
__inline static u32 t3_read_reg(struct adapter *adapter, u32 reg_addr)
{
  
#line 273 
  u32 val = readl((void const volatile *)(adapter->regs + reg_addr));
  
#line 276 
  return val;
}


#line 279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
__inline static void t3_write_reg(struct adapter *adapter, u32 reg_addr, u32 val)
{
  
#line 282 
  writel(val,(void volatile *)(adapter->regs + reg_addr));
  
#line 283 
  return;
}


#line 307 
int t3_offload_tx(struct t3cdev *tdev, struct sk_buff *skb);


#line 316 
void t3_sge_start(struct adapter *adap);


#line 317 
void t3_sge_stop(struct adapter *adap);


#line 318 
void t3_start_sge_timers(struct adapter *adap);


#line 319 
void t3_stop_sge_timers(struct adapter *adap);


#line 320 
void t3_free_sge_resources(struct adapter *adap);


#line 321 
void t3_sge_err_intr_handler(struct adapter *adapter);


#line 322 
irq_handler_t t3_intr_handler(struct adapter *adap, int polling);


#line 323 
netdev_tx_t t3_eth_xmit(struct sk_buff *skb, struct net_device *dev);


#line 324 
int t3_mgmt_tx(struct adapter *adap, struct sk_buff *skb);


#line 325 
void t3_update_qset_coalesce(struct sge_qset *qs, struct qset_params const *p);


#line 326 
int t3_sge_alloc_qset(struct adapter *adapter, unsigned int id, int nports, int irq_vec_idx, struct qset_params const *p, int ntxq, struct net_device *dev, struct netdev_queue *netdevq);


#line 330 
struct workqueue_struct *cxgb3_wq;


#line 632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static unsigned int core_ticks_per_usec(struct adapter const *adap)
{
  unsigned int __retres;
  
#line 634 
  __retres = adap->params.vpd.cclk / 1000U;
  
#line 634 
  return __retres;
}


#line 642 
void t3_set_reg_field(struct adapter *adapter, unsigned int addr, u32 mask, u32 val);


#line 672 
int t3_slow_intr_handler(struct adapter *adapter);


#line 696 
void t3_fatal_err(struct adapter *adapter);


#line 734 
void t3_sge_prep(struct adapter *adap, struct sge_params *p);


#line 735 
void t3_sge_init(struct adapter *adap, struct sge_params *p);


#line 736 
int t3_sge_init_ecntxt(struct adapter *adapter, unsigned int id, int gts_enable, enum sge_context_type type, int respq, u64 base_addr, unsigned int size, unsigned int token, int gen, unsigned int cidx);


#line 740 
int t3_sge_init_flcntxt(struct adapter *adapter, unsigned int id, int gts_enable, u64 base_addr, unsigned int size, unsigned int bsize, unsigned int cong_thres, int gen, unsigned int cidx);


#line 744 
int t3_sge_init_rspcntxt(struct adapter *adapter, unsigned int id, int irq_vec_idx, u64 base_addr, unsigned int size, unsigned int fl_thres, int gen, unsigned int cidx);


#line 750 
int t3_sge_enable_ecntxt(struct adapter *adapter, unsigned int id, int enable);


#line 751 
int t3_sge_disable_fl(struct adapter *adapter, unsigned int id);


#line 752 
int t3_sge_disable_rspcntxt(struct adapter *adapter, unsigned int id);


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static u8 flit_desc_map[58U] = {(unsigned char)0U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)1U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)2U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)3U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static struct sge_qset *rspq_to_qset(struct sge_rspq const *q)
{
  struct sge_qset *tmp;
  {
    
#line 174 
    struct sge_rspq const *__mptr = q;
    
#line 174 
    tmp = (struct sge_qset *)__mptr + 18446744073709551328U;
  }
  
#line 174 
  return tmp;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static struct sge_qset *txq_to_qset(struct sge_txq const *q, int qidx)
{
  struct sge_qset *tmp;
  {
    
#line 179 
    struct sge_txq const *__mptr = q;
    
#line 179 
    tmp = (struct sge_qset *)__mptr + - ((unsigned long)((void *)888 + (unsigned int)qidx * 312U));
  }
  
#line 179 
  return tmp;
}


#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void refill_rspq(struct adapter *adapter, struct sge_rspq const *q, unsigned int credits)
{
  
#line 193 
  ldv_inline_asm();
  
#line 195 
  t3_write_reg(adapter,48U,(q->cntxt_id << 29) | credits);
  
#line 197 
  return;
}


#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int need_skb_unmap(void)
{
  int __retres;
  
#line 208 
  __retres = 1;
  
#line 208 
  return __retres;
}


#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void unmap_skb(struct sk_buff *skb, struct sge_txq *q, unsigned int cidx, struct pci_dev *pdev)
{
  struct sg_ent const *sgp;
  int nfrags;
  int frag_idx;
  int curflit;
  unsigned char *tmp_3;
  unsigned int tmp_5;
  unsigned char *tmp_4;
  unsigned long long tmp_7;
  
#line 240 
  struct tx_sw_desc *d = q->sdesc + cidx;
  
#line 241 
  int j = (int)d->addr_idx;
  
#line 243 
  sgp = (struct sg_ent const *)(& (q->desc + cidx)->flit[(int)d->sflit]);
  
#line 244 
  frag_idx = (int)d->fragidx;
  
#line 246 
  if (frag_idx == 0) {
    unsigned int tmp_2;
    
#line 246 
    tmp_2 = skb_headlen((struct sk_buff const *)skb);
    
#line 246 
    if (tmp_2 != 0U) {
      unsigned int tmp;
      unsigned long long tmp_1;
      
#line 248 
      tmp = skb_headlen((struct sk_buff const *)skb);
      
#line 247 
      if (0 != 0) 
#line 247 
                  tmp_1 = (((((((sgp->addr[0] << 56) | ((sgp->addr[0] << 40) & 71776119061217280ULL)) | ((sgp->addr[0] << 24) & 280375465082880ULL)) | ((sgp->addr[0] << 8) & 1095216660480ULL)) | ((sgp->addr[0] >> 8) & 4278190080ULL)) | ((sgp->addr[0] >> 24) & 16711680ULL)) | ((sgp->addr[0] >> 40) & 65280ULL)) | (sgp->addr[0] >> 56); else 
                                                                    
#line 247 
                                                                    tmp_1 = __fswab64(sgp->addr[0]);
      
#line 247 
      ;
      
#line 247 
      pci_unmap_single(pdev,tmp_1,(unsigned long)tmp,1);
      
#line 249 
      j = 1;
    }
    else ;
  }
  else ;
  
#line 252 
  curflit = ((int)d->sflit + 1) + j;
  
#line 253 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 253 
  nfrags = (int)((struct skb_shared_info *)tmp_3)->nr_frags;
  
#line 255 
  goto ldv_52594;
  ldv_52593: 
#line 256 
  ;
  
#line 257 
  tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 257 
  tmp_5 = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_4)->frags[frag_idx]));
  
#line 256 
  if (0 != 0) 
#line 256 
              tmp_7 = (((((((sgp->addr[j] << 56) | ((sgp->addr[j] << 40) & 71776119061217280ULL)) | ((sgp->addr[j] << 24) & 280375465082880ULL)) | ((sgp->addr[j] << 8) & 1095216660480ULL)) | ((sgp->addr[j] >> 8) & 4278190080ULL)) | ((sgp->addr[j] >> 24) & 16711680ULL)) | ((sgp->addr[j] >> 40) & 65280ULL)) | (sgp->addr[j] >> 56); else 
                                                                    
#line 256 
                                                                    tmp_7 = __fswab64(sgp->addr[j]);
  
#line 256 
  ;
  
#line 256 
  pci_unmap_page(pdev,tmp_7,(unsigned long)tmp_5,1);
  
#line 259 
  j ^= 1;
  
#line 260 
  if (j == 0) {
    
#line 261 
    sgp += 1;
    
#line 262 
    curflit += 1;
  }
  else ;
  
#line 264 
  curflit += 1;
  
#line 265 
  frag_idx += 1;
  ldv_52594: 
#line 266 
  ;
  
#line 255 
  if (frag_idx < nfrags && (unsigned int)curflit <= 14U) 
#line 257 
                                                         goto ldv_52593; else 
                                                                    
#line 260 
                                                                    goto ldv_52595;
  ldv_52595: 
#line 261 
  ;
  
#line 268 
  if (frag_idx < nfrags) {
    
#line 269 
    if (cidx + 1U == q->size) 
#line 269 
                              d = q->sdesc; else 
#line 269 
                                                 d += 1U;
    
#line 270 
    d->fragidx = (unsigned char)frag_idx;
    
#line 271 
    d->addr_idx = (unsigned char)j;
    
#line 272 
    d->sflit = (signed char)((unsigned int)(curflit - j) + 241U);
  }
  else ;
  
#line 274 
  return;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void free_tx_desc(struct adapter *adapter, struct sge_txq *q, unsigned int n)
{
  struct tx_sw_desc *d;
  int tmp_0;
  int tmp;
  unsigned int tmp_1;
  
#line 289 
  struct pci_dev *pdev = adapter->pdev;
  
#line 290 
  unsigned int cidx = q->cidx;
  
#line 292 
  tmp = need_skb_unmap();
  
#line 292 
  if (tmp != 0) 
    
#line 292 
    if (q->cntxt_id > 7U) 
#line 292 
                          tmp_0 = 1; else 
#line 292 
                                          tmp_0 = 0;
  else 
#line 292 
       tmp_0 = 0;
  
#line 292 
  int const need_unmap = tmp_0;
  
#line 295 
  d = q->sdesc + cidx;
  
#line 296 
  goto ldv_52606;
  ldv_52605: 
#line 297 
  ;
  
#line 297 
  if (d->skb != (struct sk_buff *)0) {
    
#line 298 
    if (need_unmap != 0) 
#line 299 
                         unmap_skb(d->skb,q,cidx,pdev); else ;
    
#line 300 
    if ((unsigned int)d->eop != 0U) {
      
#line 301 
      dev_consume_skb_any(d->skb);
      
#line 302 
      d->skb = (struct sk_buff *)0;
    }
    else ;
  }
  else ;
  
#line 305 
  d += 1;
  
#line 306 
  cidx += 1U;
  
#line 306 
  ;
  
#line 306 
  if (cidx == q->size) {
    
#line 307 
    cidx = 0U;
    
#line 308 
    d = q->sdesc;
  }
  else ;
  ldv_52606: 
#line 310 
  ;
  
#line 296 
  tmp_1 = n;
  
#line 296 
  n -= 1U;
  
#line 296 
  ;
  
#line 296 
  if (tmp_1 != 0U) 
#line 298 
                   goto ldv_52605; else 
#line 301 
                                        goto ldv_52607;
  ldv_52607: 
#line 302 
  ;
  
#line 311 
  q->cidx = cidx;
  
#line 312 
  return;
}


#line 324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static unsigned int reclaim_completed_tx(struct adapter *adapter, struct sge_txq *q, unsigned int chunk)
{
  unsigned int __retres;
  unsigned int tmp_0;
  
#line 328 
  unsigned int reclaim = q->processed - q->cleaned;
  {
    unsigned int tmp;
    
#line 330 
    unsigned int _min1 = chunk;
    
#line 330 
    unsigned int _min2 = reclaim;
    
#line 330 
    if (_min1 < _min2) 
#line 330 
                       tmp = _min1; else 
#line 330 
                                         tmp = _min2;
    
#line 330 
    tmp_0 = tmp;
  }
  
#line 330 
  reclaim = tmp_0;
  
#line 331 
  if (reclaim != 0U) {
    
#line 332 
    free_tx_desc(adapter,q,reclaim);
    
#line 333 
    q->cleaned += reclaim;
    
#line 334 
    q->in_use -= reclaim;
  }
  else ;
  
#line 336 
  __retres = q->processed - q->cleaned;
  
#line 336 
  return __retres;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int should_restart_tx(struct sge_txq const *q)
{
  int __retres;
  
#line 347 
  unsigned int r = q->processed - q->cleaned;
  
#line 349 
  __retres = q->in_use - r < q->size >> 1;
  
#line 349 
  return __retres;
}


#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void clear_rx_desc(struct pci_dev *pdev, struct sge_fl const *q, struct rx_sw_desc *d)
{
  
#line 355 
  if (q->use_pages != 0U && d->__anonCompField_rx_sw_desc_110.pg_chunk.page != (struct page *)0) {
    
#line 356 
    *(d->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) -= 1UL;
    
#line 357 
    if (*(d->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) == 0UL) 
#line 358 
                                                                    pci_unmap_page(pdev,d->__anonCompField_rx_sw_desc_110.pg_chunk.mapping,(unsigned long)q->alloc_size,2); else ;
    
#line 362 
    put_page(d->__anonCompField_rx_sw_desc_110.pg_chunk.page);
    
#line 363 
    d->__anonCompField_rx_sw_desc_110.pg_chunk.page = (struct page *)0;
  }
  else {
    
#line 365 
    pci_unmap_single(pdev,d->dma_addr,(unsigned long)q->buf_size,2);
    
#line 367 
    kfree_skb(d->__anonCompField_rx_sw_desc_110.skb);
    
#line 368 
    d->__anonCompField_rx_sw_desc_110.skb = (struct sk_buff *)0;
  }
  
#line 370 
  return;
}


#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void free_rx_bufs(struct pci_dev *pdev, struct sge_fl *q)
{
  unsigned int tmp;
  
#line 382 
  unsigned int cidx = q->cidx;
  
#line 384 
  goto ldv_52633;
  ldv_52632: 
#line 385 
  ;
  {
    
#line 385 
    struct rx_sw_desc *d = q->sdesc + cidx;
    
#line 388 
    clear_rx_desc(pdev,(struct sge_fl const *)q,d);
    
#line 389 
    cidx += 1U;
    
#line 389 
    ;
    
#line 389 
    if (cidx == q->size) 
#line 390 
                         cidx = 0U; else ;
  }
  ldv_52633: 
#line 392 
  ;
  
#line 384 
  tmp = q->credits;
  
#line 384 
  q->credits -= 1U;
  
#line 384 
  ;
  
#line 384 
  if (tmp != 0U) 
#line 386 
                 goto ldv_52632; else 
#line 389 
                                      goto ldv_52634;
  ldv_52634: 
#line 390 
  ;
  
#line 393 
  if (q->pg_chunk.page != (struct page *)0) {
    
#line 394 
    __free_pages(q->pg_chunk.page,q->order);
    
#line 395 
    q->pg_chunk.page = (struct page *)0;
  }
  else ;
  
#line 397 
  return;
}


#line 411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int add_one_rx_buf(void *va, unsigned int len, struct rx_desc *d, struct rx_sw_desc *sd, unsigned int gen, struct pci_dev *pdev)
{
  int __retres;
  dma_addr_t mapping;
  int tmp;
  
#line 417 
  mapping = pci_map_single(pdev,va,(unsigned long)len,2);
  
#line 418 
  tmp = pci_dma_mapping_error(pdev,mapping);
  
#line 418 
  if ((long)(tmp != 0) != 0L) {
    
#line 419 
    __retres = -12;
    
#line 419 
    goto return_label;
  }
  else ;
  
#line 421 
  sd->dma_addr = mapping;
  
#line 423 
  if (0 != 0) 
#line 423 
              d->addr_lo = ((((unsigned int)mapping << 24) | (((unsigned int)mapping << 8) & 16711680U)) | (((unsigned int)mapping >> 8) & 65280U)) | ((unsigned int)mapping >> 24); else 
                                                                    
#line 423 
                                                                    d->addr_lo = __fswab32((unsigned int)mapping);
  
#line 424 
  if (0 != 0) 
#line 424 
              d->addr_hi = ((((unsigned int)(mapping >> 32) << 24) | (((unsigned int)(mapping >> 32) << 8) & 16711680U)) | (((unsigned int)(mapping >> 32) >> 8) & 65280U)) | ((unsigned int)(mapping >> 32) >> 24); else 
                                                                    
#line 424 
                                                                    d->addr_hi = __fswab32((unsigned int)(mapping >> 32));
  
#line 425 
  ldv_inline_asm();
  
#line 426 
  if (0 != 0) 
#line 426 
              d->len_gen = (gen << 31) >> 24; else 
#line 426 
                                                   d->len_gen = __fswab32(gen << 31);
  
#line 427 
  if (0 != 0) 
#line 427 
              d->gen2 = (((gen << 24) | ((gen << 8) & 16711680U)) | ((gen >> 8) & 65280U)) | (gen >> 24); else 
                                                                    
#line 427 
                                                                    d->gen2 = __fswab32(gen);
  
#line 428 
  __retres = 0;
  return_label: 
#line 428 
                return __retres;
}


#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int add_one_rx_chunk(dma_addr_t mapping, struct rx_desc *d, unsigned int gen)
{
  int __retres;
  
#line 434 
  if (0 != 0) 
#line 434 
              d->addr_lo = ((((unsigned int)mapping << 24) | (((unsigned int)mapping << 8) & 16711680U)) | (((unsigned int)mapping >> 8) & 65280U)) | ((unsigned int)mapping >> 24); else 
                                                                    
#line 434 
                                                                    d->addr_lo = __fswab32((unsigned int)mapping);
  
#line 435 
  if (0 != 0) 
#line 435 
              d->addr_hi = ((((unsigned int)(mapping >> 32) << 24) | (((unsigned int)(mapping >> 32) << 8) & 16711680U)) | (((unsigned int)(mapping >> 32) >> 8) & 65280U)) | ((unsigned int)(mapping >> 32) >> 24); else 
                                                                    
#line 435 
                                                                    d->addr_hi = __fswab32((unsigned int)(mapping >> 32));
  
#line 436 
  ldv_inline_asm();
  
#line 437 
  if (0 != 0) 
#line 437 
              d->len_gen = (gen << 31) >> 24; else 
#line 437 
                                                   d->len_gen = __fswab32(gen << 31);
  
#line 438 
  if (0 != 0) 
#line 438 
              d->gen2 = (((gen << 24) | ((gen << 8) & 16711680U)) | ((gen >> 8) & 65280U)) | (gen >> 24); else 
                                                                    
#line 438 
                                                                    d->gen2 = __fswab32(gen);
  
#line 439 
  __retres = 0;
  
#line 439 
  return __retres;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int alloc_pg_chunk(struct adapter *adapter, struct sge_fl *q, struct rx_sw_desc *sd, gfp_t gfp, unsigned int order)
{
  int __retres;
  
#line 446 
  if (q->pg_chunk.page == (struct page *)0) {
    dma_addr_t mapping;
    
#line 449 
    q->pg_chunk.page = alloc_pages(gfp,order);
    
#line 450 
    if ((long)(q->pg_chunk.page == (struct page *)0) != 0L) {
      
#line 451 
      __retres = -12;
      
#line 451 
      goto return_label;
    }
    else ;
    
#line 452 
    q->pg_chunk.va = lowmem_page_address((struct page const *)q->pg_chunk.page);
    
#line 453 
    q->pg_chunk.p_cnt = (unsigned long *)(q->pg_chunk.va + ((4096UL << order) + 18446744073709551552U));
    
#line 455 
    q->pg_chunk.offset = 0U;
    
#line 456 
    mapping = pci_map_page(adapter->pdev,q->pg_chunk.page,0UL,(unsigned long)q->alloc_size,2);
    
#line 458 
    q->pg_chunk.mapping = mapping;
  }
  else ;
  
#line 460 
  sd->__anonCompField_rx_sw_desc_110.pg_chunk = q->pg_chunk;
  
#line 462 
  __builtin_prefetch((void const *)sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt);
  
#line 464 
  q->pg_chunk.offset += q->buf_size;
  
#line 465 
  if ((unsigned long)q->pg_chunk.offset == 4096UL << order) 
#line 466 
                                                            q->pg_chunk.page = (struct page *)0;
  else {
    
#line 468 
    q->pg_chunk.va += q->buf_size;
    
#line 469 
    get_page(q->pg_chunk.page);
  }
  
#line 472 
  if (sd->__anonCompField_rx_sw_desc_110.pg_chunk.offset == 0U) 
#line 473 
                                                                *(sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) = 1UL; else 
                                                                    
#line 475 
                                                                    *(sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) += 1UL;
  
#line 477 
  __retres = 0;
  return_label: 
#line 477 
                return __retres;
}


#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void ring_fl_db(struct adapter *adap, struct sge_fl *q)
{
  
#line 482 
  if (q->pend_cred >= q->credits / 4U) {
    
#line 483 
    q->pend_cred = 0U;
    
#line 484 
    ldv_inline_asm();
    
#line 485 
    t3_write_reg(adap,4U,q->cntxt_id);
  }
  else ;
  
#line 487 
  return;
}


#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int refill_fl(struct adapter *adap, struct sge_fl *q, int n, gfp_t gfp)
{
  int __retres;
  int tmp_1;
  
#line 502 
  struct rx_sw_desc *sd = q->sdesc + q->pidx;
  
#line 503 
  struct rx_desc *d = q->desc + q->pidx;
  
#line 504 
  unsigned int count = 0U;
  
#line 506 
  goto ldv_52677;
  ldv_52676: 
#line 507 
  ;
  {
    dma_addr_t mapping;
    int err;
    
#line 510 
    if (q->use_pages != 0U) {
      int tmp;
      
#line 511 
      tmp = alloc_pg_chunk(adap,q,sd,gfp,q->order);
      
#line 511 
      if ((long)(tmp != 0) != 0L) {
        nomem: 
#line 513 
        ;
        
#line 513 
        q->alloc_failed += 1UL;
        
#line 514 
        goto ldv_52673;
      }
      else ;
      
#line 516 
      mapping = sd->__anonCompField_rx_sw_desc_110.pg_chunk.mapping + (unsigned long long)sd->__anonCompField_rx_sw_desc_110.pg_chunk.offset;
      
#line 517 
      sd->dma_addr = mapping;
      
#line 519 
      add_one_rx_chunk(mapping,d,q->gen);
      
#line 520 
      pci_dma_sync_single_for_device(adap->pdev,mapping,(unsigned long)(q->buf_size + 4294967232U),2);
    }
    else {
      void *buf_start;
      
#line 526 
      struct sk_buff *skb = alloc_skb(q->buf_size,gfp);
      
#line 527 
      if (skb == (struct sk_buff *)0) 
#line 528 
                                      goto nomem; else ;
      
#line 530 
      sd->__anonCompField_rx_sw_desc_110.skb = skb;
      
#line 531 
      buf_start = (void *)skb->data;
      
#line 532 
      err = add_one_rx_buf(buf_start,q->buf_size,d,sd,q->gen,adap->pdev);
      
#line 534 
      if ((long)(err != 0) != 0L) {
        
#line 535 
        clear_rx_desc(adap->pdev,(struct sge_fl const *)q,sd);
        
#line 536 
        goto ldv_52673;
      }
      else ;
    }
    
#line 540 
    d += 1;
    
#line 541 
    sd += 1;
    
#line 542 
    q->pidx += 1U;
    
#line 542 
    ;
    
#line 542 
    if (q->pidx == q->size) {
      
#line 543 
      q->pidx = 0U;
      
#line 544 
      q->gen ^= 1U;
      
#line 545 
      sd = q->sdesc;
      
#line 546 
      d = q->desc;
    }
    else ;
    
#line 548 
    count += 1U;
  }
  ldv_52677: 
#line 550 
  ;
  
#line 506 
  tmp_1 = n;
  
#line 506 
  n -= 1;
  
#line 506 
  ;
  
#line 506 
  if (tmp_1 != 0) 
#line 508 
                  goto ldv_52676; else 
#line 511 
                                       goto ldv_52673;
  ldv_52673: 
#line 512 
  ;
  
#line 551 
  q->credits += count;
  
#line 552 
  q->pend_cred += count;
  
#line 553 
  ring_fl_db(adap,q);
  
#line 555 
  __retres = (int)count;
  
#line 555 
  return __retres;
}


#line 558  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void __refill_fl(struct adapter *adap, struct sge_fl *fl)
{
  unsigned int tmp_0;
  {
    unsigned int tmp;
    
#line 560 
    unsigned int _min1 = 16U;
    
#line 560 
    unsigned int _min2 = fl->size - fl->credits;
    
#line 560 
    if (_min1 < _min2) 
#line 560 
                       tmp = _min1; else 
#line 560 
                                         tmp = _min2;
    
#line 560 
    tmp_0 = tmp;
  }
  
#line 560 
  ;
  
#line 560 
  ;
  
#line 560 
  refill_fl(adap,fl,(int)tmp_0,16416U);
  
#line 562 
  return;
}


#line 573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void recycle_rx_buf(struct adapter *adap, struct sge_fl *q, unsigned int idx)
{
  
#line 576 
  struct rx_desc *from = q->desc + idx;
  
#line 577 
  struct rx_desc *to = q->desc + q->pidx;
  
#line 579 
  *(q->sdesc + q->pidx) = *(q->sdesc + idx);
  
#line 580 
  to->addr_lo = from->addr_lo;
  
#line 581 
  to->addr_hi = from->addr_hi;
  
#line 582 
  ldv_inline_asm();
  
#line 583 
  if (0 != 0) 
#line 583 
              to->len_gen = (q->gen << 31) >> 24; else 
#line 583 
                                                       to->len_gen = __fswab32(q->gen << 31);
  
#line 584 
  if (0 != 0) 
#line 584 
              to->gen2 = (((q->gen << 24) | ((q->gen << 8) & 16711680U)) | ((q->gen >> 8) & 65280U)) | (q->gen >> 24); else 
                                                                    
#line 584 
                                                                    to->gen2 = __fswab32(q->gen);
  
#line 586 
  q->pidx += 1U;
  
#line 586 
  ;
  
#line 586 
  if (q->pidx == q->size) {
    
#line 587 
    q->pidx = 0U;
    
#line 588 
    q->gen ^= 1U;
  }
  else ;
  
#line 591 
  q->credits += 1U;
  
#line 592 
  q->pend_cred += 1U;
  
#line 593 
  ring_fl_db(adap,q);
  
#line 594 
  return;
}


#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void *alloc_ring(struct pci_dev *pdev, size_t nelem, size_t elem_size, size_t sw_size, dma_addr_t *phys, void *metadata)
{
  void *__retres;
  
#line 616 
  size_t len = nelem * elem_size;
  
#line 617 
  void *s = (void *)0;
  
#line 618 
  void *p = dma_alloc_attrs(& pdev->dev,len,phys,208U,(struct dma_attrs *)0);
  
#line 620 
  if (p == (void *)0) {
    
#line 621 
    __retres = (void *)0;
    
#line 621 
    goto return_label;
  }
  else ;
  
#line 622 
  if (sw_size != 0UL && metadata != (void *)0) {
    
#line 623 
    s = kcalloc(nelem,sw_size,208U);
    
#line 625 
    if (s == (void *)0) {
      
#line 626 
      dma_free_attrs(& pdev->dev,len,p,*phys,(struct dma_attrs *)0);
      
#line 627 
      __retres = (void *)0;
      
#line 627 
      goto return_label;
    }
    else ;
    
#line 629 
    *((void **)metadata) = s;
  }
  else ;
  
#line 631 
  memset(p,0,len);
  
#line 632 
  __retres = p;
  return_label: 
#line 632 
                return __retres;
}


#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void t3_reset_qset(struct sge_qset *q)
{
  
#line 645 
  if (q->adap != (struct adapter *)0 && ((q->adap)->flags & 32UL) == 0UL) {
    
#line 647 
    memset((void *)q,0,2176UL);
    
#line 648 
    goto return_label;
  }
  else ;
  
#line 651 
  q->adap = (struct adapter *)0;
  
#line 652 
  memset((void *)(& q->rspq),0,328UL);
  
#line 653 
  memset((void *)(& q->fl),0,272UL);
  
#line 654 
  memset((void *)(& q->txq),0,936UL);
  
#line 655 
  q->txq_stopped = 0UL;
  
#line 656 
  q->tx_reclaim_timer.function = (void (*)(unsigned long ))0;
  
#line 657 
  q->rx_reclaim_timer.function = (void (*)(unsigned long ))0;
  
#line 658 
  q->nomem = 0;
  
#line 659 
  napi_free_frags(& q->napi);
  return_label: 
#line 660 
                return;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void t3_free_qset(struct adapter *adapter, struct sge_qset *q)
{
  int i;
  
#line 675 
  struct pci_dev *pdev = adapter->pdev;
  
#line 677 
  i = 0;
  
#line 677 
  goto ldv_52713;
  ldv_52712: 
#line 678 
  ;
  
#line 678 
  if (q->fl[i].desc != (struct rx_desc *)0) {
    
#line 679 
    ldv_spin_lock_irq_75(& adapter->sge.reg_lock);
    
#line 680 
    t3_sge_disable_fl(adapter,q->fl[i].cntxt_id);
    
#line 681 
    ldv_spin_unlock_irq_76(& adapter->sge.reg_lock);
    
#line 682 
    free_rx_bufs(pdev,& q->fl[i]);
    
#line 683 
    kfree((void const *)q->fl[i].sdesc);
    
#line 684 
    dma_free_attrs(& pdev->dev,(unsigned long)q->fl[i].size * 16UL,(void *)q->fl[i].desc,q->fl[i].phys_addr,(struct dma_attrs *)0);
  }
  else ;
  
#line 677 
  i += 1;
  ldv_52713: 
#line 678 
  ;
  
#line 677 
  if (i <= 1) 
#line 679 
              goto ldv_52712; else 
#line 682 
                                   goto ldv_52714;
  ldv_52714: 
#line 683 
  ;
  
#line 690 
  i = 0;
  
#line 690 
  goto ldv_52716;
  ldv_52715: 
#line 691 
  ;
  
#line 691 
  if (q->txq[i].desc != (struct tx_desc *)0) {
    
#line 692 
    ldv_spin_lock_irq_77(& adapter->sge.reg_lock);
    
#line 693 
    t3_sge_enable_ecntxt(adapter,q->txq[i].cntxt_id,0);
    
#line 694 
    ldv_spin_unlock_irq_78(& adapter->sge.reg_lock);
    
#line 695 
    if (q->txq[i].sdesc != (struct tx_sw_desc *)0) {
      
#line 696 
      free_tx_desc(adapter,& q->txq[i],q->txq[i].in_use);
      
#line 698 
      kfree((void const *)q->txq[i].sdesc);
    }
    else ;
    
#line 700 
    dma_free_attrs(& pdev->dev,(unsigned long)q->txq[i].size * 128UL,(void *)q->txq[i].desc,q->txq[i].phys_addr,(struct dma_attrs *)0);
    
#line 704 
    __skb_queue_purge(& q->txq[i].sendq);
  }
  else ;
  
#line 690 
  i += 1;
  ldv_52716: 
#line 691 
  ;
  
#line 690 
  if (i <= 2) 
#line 692 
              goto ldv_52715; else 
#line 695 
                                   goto ldv_52717;
  ldv_52717: 
#line 696 
  ;
  
#line 707 
  if (q->rspq.desc != (struct rsp_desc *)0) {
    
#line 708 
    ldv_spin_lock_irq_79(& adapter->sge.reg_lock);
    
#line 709 
    t3_sge_disable_rspcntxt(adapter,q->rspq.cntxt_id);
    
#line 710 
    ldv_spin_unlock_irq_80(& adapter->sge.reg_lock);
    
#line 711 
    dma_free_attrs(& pdev->dev,(unsigned long)q->rspq.size * 64UL,(void *)q->rspq.desc,q->rspq.phys_addr,(struct dma_attrs *)0);
  }
  else ;
  
#line 716 
  t3_reset_qset(q);
  
#line 717 
  return;
}


#line 726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void init_qset_cntxt(struct sge_qset *qs, unsigned int id)
{
  
#line 728 
  qs->rspq.cntxt_id = id;
  
#line 729 
  qs->fl[0].cntxt_id = id * 2U;
  
#line 730 
  qs->fl[1].cntxt_id = id * 2U + 1U;
  
#line 731 
  qs->txq[0].cntxt_id = id + 8U;
  
#line 732 
  qs->txq[0].token = id + 65544U;
  
#line 733 
  qs->txq[1].cntxt_id = id;
  
#line 734 
  qs->txq[2].cntxt_id = id + 65528U;
  
#line 735 
  qs->txq[2].token = id + 65536U;
  
#line 736 
  return;
}


#line 745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static unsigned int sgl_len(unsigned int n)
{
  unsigned int __retres;
  
#line 748 
  __retres = (n * 3U) / 2U + (n & 1U);
  
#line 748 
  return __retres;
}


#line 758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static unsigned int flits_to_desc(unsigned int n)
{
  unsigned int __retres;
  
#line 760 
  if ((long)(n > 57U) != 0L) {
    
#line 762 
    ldv_inline_asm();
    
#line 760 
    ;
  }
  else ;
  
#line 761 
  __retres = (unsigned int)flit_desc_map[n];
  
#line 761 
  return __retres;
}


#line 779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static struct sk_buff *get_packet(struct adapter *adap, struct sge_fl *fl, unsigned int len, unsigned int drop_thres)
{
  struct sk_buff *__retres;
  
#line 782 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 783 
  struct rx_sw_desc *sd = fl->sdesc + fl->cidx;
  
#line 785 
  __builtin_prefetch((void const *)(sd->__anonCompField_rx_sw_desc_110.skb)->data);
  
#line 786 
  fl->credits -= 1U;
  
#line 788 
  if (len <= 256U) {
    
#line 789 
    skb = alloc_skb(len,32U);
    
#line 790 
    if ((long)(skb != (struct sk_buff *)0) != 0L) {
      
#line 791 
      __skb_put(skb,len);
      
#line 792 
      pci_dma_sync_single_for_cpu(adap->pdev,sd->dma_addr,(unsigned long)len,2);
      
#line 795 
      memcpy((void *)skb->data,(void const *)(sd->__anonCompField_rx_sw_desc_110.skb)->data,(unsigned long)len);
      
#line 796 
      pci_dma_sync_single_for_device(adap->pdev,sd->dma_addr,(unsigned long)len,2);
    }
    else 
      
#line 799 
      if (drop_thres == 0U) 
#line 800 
                            goto use_orig_buf; else ;
    recycle: 
#line 801 
    ;
    
#line 802 
    recycle_rx_buf(adap,fl,fl->cidx);
    
#line 803 
    __retres = skb;
    
#line 803 
    goto return_label;
  }
  else ;
  
#line 806 
  if ((long)(fl->credits < drop_thres) != 0L) {
    int tmp_1;
    unsigned int tmp_0;
    {
      unsigned int tmp;
      
#line 807 
      unsigned int _min1 = 16U;
      
#line 807 
      unsigned int _min2 = (fl->size - fl->credits) + 4294967295U;
      
#line 807 
      if (_min1 < _min2) 
#line 807 
                         tmp = _min1; else 
#line 807 
                                           tmp = _min2;
      
#line 807 
      tmp_0 = tmp;
    }
    
#line 806 
    ;
    
#line 806 
    ;
    
#line 806 
    tmp_1 = refill_fl(adap,fl,(int)tmp_0,16416U);
    
#line 806 
    if (tmp_1 == 0) 
#line 809 
                    goto recycle; else ;
  }
  else ;
  use_orig_buf: 
#line 811 
  ;
  
#line 812 
  pci_unmap_single(adap->pdev,sd->dma_addr,(unsigned long)fl->buf_size,2);
  
#line 814 
  skb = sd->__anonCompField_rx_sw_desc_110.skb;
  
#line 815 
  skb_put(skb,len);
  
#line 816 
  __refill_fl(adap,fl);
  
#line 817 
  __retres = skb;
  return_label: 
#line 817 
                return __retres;
}


#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static struct sk_buff *get_packet_pg(struct adapter *adap, struct sge_fl *fl, struct sge_rspq *q, unsigned int len, unsigned int drop_thres)
{
  struct sk_buff *__retres;
  struct sk_buff *newskb;
  struct sk_buff *skb;
  
#line 843 
  struct rx_sw_desc *sd = fl->sdesc + fl->cidx;
  
#line 845 
  dma_addr_t dma_addr = sd->dma_addr;
  
#line 847 
  skb = q->pg_skb;
  
#line 847 
  newskb = skb;
  
#line 848 
  if (skb == (struct sk_buff *)0 && len <= 256U) {
    
#line 849 
    newskb = alloc_skb(len,32U);
    
#line 850 
    if ((long)(newskb != (struct sk_buff *)0) != 0L) {
      
#line 851 
      __skb_put(newskb,len);
      
#line 852 
      pci_dma_sync_single_for_cpu(adap->pdev,dma_addr,(unsigned long)len,2);
      
#line 854 
      memcpy((void *)newskb->data,(void const *)sd->__anonCompField_rx_sw_desc_110.pg_chunk.va,(unsigned long)len);
      
#line 855 
      pci_dma_sync_single_for_device(adap->pdev,dma_addr,(unsigned long)len,2);
    }
    else 
      
#line 858 
      if (drop_thres == 0U) {
        
#line 859 
        __retres = (struct sk_buff *)0;
        
#line 859 
        goto return_label;
      }
      else ;
    recycle: 
#line 860 
    ;
    
#line 861 
    fl->credits -= 1U;
    
#line 862 
    recycle_rx_buf(adap,fl,fl->cidx);
    
#line 863 
    q->rx_recycle_buf += 1U;
    
#line 864 
    __retres = newskb;
    
#line 864 
    goto return_label;
  }
  else ;
  
#line 867 
  if ((long)(q->rx_recycle_buf != 0U) != 0L || (((long)(skb == (struct sk_buff *)0) != 0L && (long)(fl->credits <= drop_thres) != 0L) != 0) != 0) 
    
#line 868 
    goto recycle; else ;
  
#line 870 
  __builtin_prefetch((void const *)sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt);
  
#line 872 
  if (skb == (struct sk_buff *)0) 
#line 873 
                                  newskb = alloc_skb(128U,32U); else ;
  
#line 875 
  if ((long)(newskb == (struct sk_buff *)0) != 0L) {
    
#line 876 
    if (drop_thres == 0U) {
      
#line 877 
      __retres = (struct sk_buff *)0;
      
#line 877 
      goto return_label;
    }
    else ;
    
#line 878 
    goto recycle;
  }
  else ;
  
#line 881 
  pci_dma_sync_single_for_cpu(adap->pdev,dma_addr,(unsigned long)len,2);
  
#line 883 
  *(sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) -= 1UL;
  
#line 884 
  if (*(sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) == 0UL && sd->__anonCompField_rx_sw_desc_110.pg_chunk.page != fl->pg_chunk.page) 
    
#line 885 
    pci_unmap_page(adap->pdev,sd->__anonCompField_rx_sw_desc_110.pg_chunk.mapping,(unsigned long)fl->alloc_size,2); else ;
  
#line 889 
  if (skb == (struct sk_buff *)0) {
    
#line 890 
    __skb_put(newskb,128U);
    
#line 891 
    memcpy((void *)newskb->data,(void const *)sd->__anonCompField_rx_sw_desc_110.pg_chunk.va,128UL);
    
#line 892 
    skb_fill_page_desc(newskb,0,sd->__anonCompField_rx_sw_desc_110.pg_chunk.page,(int)(sd->__anonCompField_rx_sw_desc_110.pg_chunk.offset + 128U),(int)(len + 4294967168U));
    
#line 895 
    newskb->len = len;
    
#line 896 
    newskb->data_len = len + 4294967168U;
    
#line 897 
    newskb->truesize += newskb->data_len;
  }
  else {
    unsigned char *tmp;
    
#line 899 
    ;
    
#line 899 
    ;
    
#line 899 
    ;
    
#line 899 
    tmp = skb_end_pointer((struct sk_buff const *)newskb);
    
#line 899 
    ;
    
#line 899 
    skb_fill_page_desc(newskb,(int)((struct skb_shared_info *)tmp)->nr_frags,sd->__anonCompField_rx_sw_desc_110.pg_chunk.page,(int)sd->__anonCompField_rx_sw_desc_110.pg_chunk.offset,(int)len);
    
#line 902 
    newskb->len += len;
    
#line 903 
    newskb->data_len += len;
    
#line 904 
    newskb->truesize += len;
  }
  
#line 907 
  fl->credits -= 1U;
  
#line 912 
  __retres = newskb;
  return_label: 
#line 912 
                return __retres;
}


#line 921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static struct sk_buff *get_imm_packet(struct rsp_desc const *resp)
{
  
#line 923 
  struct sk_buff *skb = alloc_skb(48U,32U);
  
#line 925 
  if (skb != (struct sk_buff *)0) {
    
#line 926 
    __skb_put(skb,48U);
    
#line 927 
    skb_copy_to_linear_data(skb,(void const *)(& resp->imm_data),48U);
  }
  else ;
  
#line 929 
  return skb;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static unsigned int calc_tx_descs(struct sk_buff const *skb)
{
  unsigned int __retres;
  unsigned int flits;
  unsigned int tmp_0;
  unsigned char *tmp;
  unsigned char *tmp_1;
  unsigned int tmp_2;
  
#line 943 
  if (skb->len <= 104U) {
    
#line 944 
    __retres = 1U;
    
#line 944 
    goto return_label;
  }
  else ;
  
#line 946 
  tmp = skb_end_pointer(skb);
  
#line 946 
  ;
  
#line 946 
  tmp_0 = sgl_len((unsigned int)((int)((struct skb_shared_info *)tmp)->nr_frags + 1));
  
#line 946 
  flits = tmp_0 + 2U;
  
#line 947 
  tmp_1 = skb_end_pointer(skb);
  
#line 947 
  ;
  
#line 947 
  if ((unsigned int)((struct skb_shared_info *)tmp_1)->gso_size != 0U) 
    
#line 948 
    flits += 1U; else ;
  
#line 949 
  tmp_2 = flits_to_desc(flits);
  
#line 949 
  __retres = tmp_2;
  return_label: 
#line 949 
                return __retres;
}


#line 964  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static unsigned int make_sgl(struct sk_buff const *skb, struct sg_ent *sgp, unsigned char *start, unsigned int len, struct pci_dev *pdev)
{
  unsigned int __retres;
  dma_addr_t mapping;
  unsigned int i;
  unsigned int nfrags;
  unsigned char *tmp_1;
  
#line 969 
  unsigned int j = 0U;
  
#line 971 
  if (len != 0U) {
    
#line 972 
    mapping = pci_map_single(pdev,(void *)start,(unsigned long)len,1);
    
#line 973 
    if (0 != 0) 
#line 973 
                sgp->len[0] = (((len << 24) | ((len << 8) & 16711680U)) | ((len >> 8) & 65280U)) | (len >> 24); else 
                                                                    
#line 973 
                                                                    sgp->len[0] = __fswab32(len);
    
#line 974 
    if (0 != 0) 
#line 974 
                sgp->addr[0] = (((((((mapping << 56) | ((mapping << 40) & 71776119061217280ULL)) | ((mapping << 24) & 280375465082880ULL)) | ((mapping << 8) & 1095216660480ULL)) | ((mapping >> 8) & 4278190080ULL)) | ((mapping >> 24) & 16711680ULL)) | ((mapping >> 40) & 65280ULL)) | (mapping >> 56); else 
                                                                    
#line 974 
                                                                    sgp->addr[0] = __fswab64(mapping);
    
#line 975 
    j = 1U;
  }
  else ;
  
#line 978 
  tmp_1 = skb_end_pointer(skb);
  
#line 978 
  nfrags = (unsigned int)((struct skb_shared_info *)tmp_1)->nr_frags;
  
#line 979 
  i = 0U;
  
#line 979 
  goto ldv_52777;
  ldv_52776: 
#line 980 
  ;
  {
    unsigned char *tmp_2;
    unsigned int tmp_3;
    __u32 tmp_5;
    unsigned int tmp_4;
    
#line 980 
    tmp_2 = skb_end_pointer(skb);
    
#line 980 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_2)->frags[i]);
    
#line 982 
    tmp_3 = skb_frag_size(frag);
    
#line 982 
    ;
    
#line 982 
    ;
    
#line 982 
    mapping = skb_frag_dma_map(& pdev->dev,frag,0UL,(unsigned long)tmp_3,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 984 
    tmp_4 = skb_frag_size(frag);
    
#line 984 
    tmp_5 = __fswab32(tmp_4);
    
#line 984 
    sgp->len[j] = tmp_5;
    
#line 985 
    if (0 != 0) 
#line 985 
                sgp->addr[j] = (((((((mapping << 56) | ((mapping << 40) & 71776119061217280ULL)) | ((mapping << 24) & 280375465082880ULL)) | ((mapping << 8) & 1095216660480ULL)) | ((mapping >> 8) & 4278190080ULL)) | ((mapping >> 24) & 16711680ULL)) | ((mapping >> 40) & 65280ULL)) | (mapping >> 56); else 
                                                                    
#line 985 
                                                                    sgp->addr[j] = __fswab64(mapping);
    
#line 986 
    j ^= 1U;
    
#line 987 
    if (j == 0U) 
#line 988 
                 sgp += 1; else ;
  }
  
#line 979 
  i += 1U;
  ldv_52777: 
#line 980 
  ;
  
#line 979 
  if (i < nfrags) 
#line 981 
                  goto ldv_52776; else 
#line 984 
                                       goto ldv_52778;
  ldv_52778: 
#line 985 
  ;
  
#line 990 
  if (j != 0U) 
#line 991 
               sgp->len[j] = 0U; else ;
  
#line 992 
  __retres = (((unsigned int)(len != 0U) + nfrags) * 3U) / 2U + j;
  
#line 992 
  return __retres;
}


#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void check_ring_tx_db(struct adapter *adap, struct sge_txq *q)
{
  
#line 1009 
  ldv_inline_asm();
  
#line 1018 
  t3_write_reg(adap,4U,q->cntxt_id | 2147483648U);
  
#line 1020 
  return;
}


#line 1023  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void wr_gen2(struct tx_desc *d, unsigned int gen)
{
  
#line 1026 
  if (0 != 0) 
#line 1026 
              d->flit[15U] = ((((unsigned long long)gen << 56) | (((unsigned long long)gen << 40) & 71776119061217280ULL)) | (((unsigned long long)gen << 24) & 280375465082880ULL)) | (((unsigned long long)gen << 8) & 1095216660480ULL); else 
                                                                    
#line 1026 
                                                                    d->flit[15U] = __fswab64((unsigned long long)gen);
  
#line 1027 
  return;
}


#line 1049  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void write_wr_hdr_sgl(unsigned int ndesc, struct sk_buff *skb, struct tx_desc *d, unsigned int pidx, struct sge_txq const *q, struct sg_ent const *sgl, unsigned int flits, unsigned int sgl_flits, unsigned int gen, __be32 wr_hi, __be32 wr_lo)
{
  int tmp;
  
#line 1057 
  struct work_request_hdr *wrp = (struct work_request_hdr *)d;
  
#line 1058 
  struct tx_sw_desc *sd = q->sdesc + pidx;
  
#line 1060 
  sd->skb = skb;
  
#line 1061 
  tmp = need_skb_unmap();
  
#line 1061 
  if (tmp != 0) {
    
#line 1062 
    sd->fragidx = (unsigned char)0U;
    
#line 1063 
    sd->addr_idx = (unsigned char)0U;
    
#line 1064 
    sd->sflit = (signed char)flits;
  }
  else ;
  
#line 1067 
  if ((long)(ndesc == 1U) != 0L) {
    unsigned int tmp_1;
    unsigned int tmp_3;
    
#line 1068 
    sd->eop = (unsigned char)1U;
    
#line 1069 
    if (0 != 0) 
#line 1069 
                tmp_1 = ((((flits << 16) & 16776960U) | (flits & 12032U)) | ((flits << 8) >> 24)) | 53248U; else 
                                                                    
#line 1069 
                                                                    tmp_1 = __fswab32((flits << 8) | 13631488U);
    
#line 1069 
    wrp->wr_hi = tmp_1 | wr_hi;
    
#line 1071 
    ldv_inline_asm();
    
#line 1072 
    if (0 != 0) 
#line 1072 
                tmp_3 = (((((flits + sgl_flits) | (gen << 31)) << 24) | ((((flits + sgl_flits) | (gen << 31)) << 8) & 16711680U)) | ((((flits + sgl_flits) | (gen << 31)) >> 8) & 65280U)) | (((flits + sgl_flits) | (gen << 31)) >> 24); else 
                                                                    
#line 1072 
                                                                    tmp_3 = __fswab32((flits + sgl_flits) | (gen << 31));
    
#line 1072 
    wrp->wr_lo = tmp_3 | wr_lo;
    
#line 1074 
    wr_gen2(d,gen);
  }
  else {
    unsigned int tmp_5;
    unsigned int tmp_10;
    
#line 1076 
    unsigned int ogen = gen;
    
#line 1077 
    u64 const *fp = (u64 const *)sgl;
    
#line 1078 
    struct work_request_hdr *wp = wrp;
    
#line 1080 
    if (0 != 0) 
#line 1080 
                tmp_5 = ((((flits << 16) & 16776960U) | (flits & 28416U)) | ((flits << 8) >> 24)) | 36864U; else 
                                                                    
#line 1080 
                                                                    tmp_5 = __fswab32((flits << 8) | 9437184U);
    
#line 1080 
    wrp->wr_hi = tmp_5 | wr_hi;
    
#line 1083 
    goto ldv_52826;
    ldv_52825: 
#line 1084 
    ;
    {
      __u32 tmp_8;
      unsigned int tmp_7;
      
#line 1084 
      unsigned int avail = 15U - flits;
      
#line 1086 
      if (avail > sgl_flits) 
#line 1087 
                             avail = sgl_flits; else ;
      
#line 1088 
      memcpy((void *)(& d->flit[flits]),(void const *)fp,(unsigned long)avail * 8UL);
      
#line 1089 
      sgl_flits -= avail;
      
#line 1090 
      ndesc -= 1U;
      
#line 1091 
      if (sgl_flits == 0U) 
#line 1092 
                           goto ldv_52806; else ;
      
#line 1094 
      fp += avail;
      
#line 1095 
      d += 1;
      
#line 1096 
      sd->eop = (unsigned char)0U;
      
#line 1097 
      sd += 1;
      
#line 1098 
      pidx += 1U;
      
#line 1098 
      ;
      
#line 1098 
      if (pidx == q->size) {
        
#line 1099 
        pidx = 0U;
        
#line 1100 
        gen ^= 1U;
        
#line 1101 
        d = q->desc;
        
#line 1102 
        sd = q->sdesc;
      }
      else ;
      
#line 1105 
      sd->skb = skb;
      
#line 1106 
      wrp = (struct work_request_hdr *)d;
      
#line 1107 
      wrp->wr_hi = wr_hi | 69632U;
      {
        unsigned int tmp_6;
        
#line 1109 
        unsigned int _min1 = 15U;
        
#line 1109 
        unsigned int _min2 = sgl_flits + 1U;
        
#line 1109 
        if (_min1 < _min2) 
#line 1109 
                           tmp_6 = _min1; else 
#line 1109 
                                               tmp_6 = _min2;
        
#line 1109 
        tmp_7 = tmp_6;
      }
      
#line 1109 
      ;
      
#line 1109 
      tmp_8 = __fswab32(tmp_7 | (gen << 31));
      
#line 1109 
      wrp->wr_lo = tmp_8 | wr_lo;
      
#line 1112 
      wr_gen2(d,gen);
      
#line 1113 
      flits = 1U;
    }
    ldv_52826: 
#line 1115 
    ;
    
#line 1083 
    if (sgl_flits != 0U) 
#line 1085 
                         goto ldv_52825; else 
#line 1088 
                                              goto ldv_52806;
    ldv_52806: 
#line 1089 
    ;
    
#line 1115 
    sd->eop = (unsigned char)1U;
    
#line 1116 
    wrp->wr_hi |= 16384U;
    
#line 1117 
    ldv_inline_asm();
    
#line 1118 
    if (0 != 0) 
#line 1118 
                tmp_10 = ((ogen << 31) >> 24) | 251658240U; else 
#line 1118 
                                                                 tmp_10 = __fswab32((ogen << 31) | 15U);
    
#line 1118 
    wp->wr_lo = tmp_10 | wr_lo;
    
#line 1119 
    wr_gen2((struct tx_desc *)wp,ogen);
    {
      
#line 1120 
      int __ret_warn_on = ndesc != 0U;
      
#line 1120 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 1120 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c",1120); else ;
      
#line 1120 
      long tmp_11 = (long)(__ret_warn_on != 0);
    }
  }
  
#line 1123 
  return;
}


#line 1137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void write_tx_pkt_wr(struct adapter *adap, struct sk_buff *skb, struct port_info const *pi, unsigned int pidx, unsigned int gen, struct sge_txq *q, unsigned int ndesc, unsigned int compl)
{
  unsigned int flits;
  unsigned int sgl_flits;
  unsigned int cntrl;
  unsigned int tso_info;
  struct sg_ent *sgp;
  struct sg_ent sgl[9U];
  unsigned char *tmp_0;
  unsigned int tmp_10;
  unsigned int tmp_12;
  unsigned int tmp_14;
  
#line 1145 
  struct tx_desc *d = q->desc + pidx;
  
#line 1146 
  struct cpl_tx_pkt *cpl = (struct cpl_tx_pkt *)d;
  
#line 1148 
  if (0 != 0) 
#line 1148 
              cpl->len = (((skb->len << 24) | ((skb->len << 8) & 16711680U)) | ((skb->len >> 8) & 65280U)) | (skb->len >> 24); else 
                                                                    
#line 1148 
                                                                    cpl->len = __fswab32(skb->len);
  
#line 1149 
  cntrl = (unsigned int)((int)pi->port_id << 16);
  
#line 1151 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 1152 
                                        cntrl = (((unsigned int)skb->vlan_tci & 4290768895U) | cntrl) | 4194304U; else ;
  
#line 1154 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1154 
  tso_info = (unsigned int)((struct skb_shared_info *)tmp_0)->gso_size;
  
#line 1155 
  if (tso_info != 0U) {
    int eth_type;
    int tmp_2;
    struct iphdr *tmp_3;
    struct tcphdr *tmp_4;
    
#line 1157 
    struct cpl_tx_pkt_lso *hdr = (struct cpl_tx_pkt_lso *)cpl;
    
#line 1159 
    d->flit[2] = 0ULL;
    
#line 1160 
    cntrl |= 369098752U;
    
#line 1161 
    if (0 != 0) 
#line 1161 
                hdr->cntrl = (((cntrl << 24) | ((cntrl << 8) & 16711680U)) | ((cntrl >> 8) & 65280U)) | (cntrl >> 24); else 
                                                                    
#line 1161 
                                                                    hdr->cntrl = __fswab32(cntrl);
    
#line 1162 
    tmp_2 = skb_network_offset((struct sk_buff const *)skb);
    
#line 1162 
    eth_type = tmp_2 != 14;
    
#line 1165 
    tmp_3 = ip_hdr((struct sk_buff const *)skb);
    
#line 1166 
    tmp_4 = tcp_hdr((struct sk_buff const *)skb);
    
#line 1166 
    tso_info = (unsigned int)(((eth_type << 14) | ((int)tmp_3->ihl << 20)) | ((int)tmp_4->doff << 16)) | tso_info;
    
#line 1167 
    if (0 != 0) 
#line 1167 
                hdr->lso_info = (((tso_info << 24) | ((tso_info << 8) & 16711680U)) | ((tso_info >> 8) & 65280U)) | (tso_info >> 24); else 
                                                                    
#line 1167 
                                                                    hdr->lso_info = __fswab32(tso_info);
    
#line 1168 
    flits = 3U;
  }
  else {
    int tmp_6;
    
#line 1170 
    cntrl |= 234881024U;
    
#line 1171 
    cntrl |= 1048576U;
    
#line 1172 
    if ((unsigned int)*((unsigned char *)skb + 145UL) != 6U) 
#line 1172 
                                                             tmp_6 = 2097152; else 
                                                                    
#line 1172 
                                                                    tmp_6 = 0;
    
#line 1172 
    cntrl = (unsigned int)tmp_6 | cntrl;
    
#line 1173 
    if (0 != 0) 
#line 1173 
                cpl->cntrl = (((cntrl << 24) | ((cntrl << 8) & 16711680U)) | ((cntrl >> 8) & 65280U)) | (cntrl >> 24); else 
                                                                    
#line 1173 
                                                                    cpl->cntrl = __fswab32(cntrl);
    
#line 1175 
    if (skb->len <= 104U) {
      
#line 1176 
      (q->sdesc + pidx)->skb = (struct sk_buff *)0;
      
#line 1177 
      if (skb->data_len == 0U) 
#line 1178 
                               skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)(& d->flit[2]),skb->len); else 
                                                                    
#line 1181 
                                                                    skb_copy_bits((struct sk_buff const *)skb,0,(void *)(& d->flit[2]),(int)skb->len);
      
#line 1183 
      flits = (skb->len + 7U) / 8U + 2U;
      
#line 1184 
      if (0 != 0) 
#line 1184 
                  cpl->wr.wr_hi = (((((((skb->len << 16) & 458752U) | compl) << 24) | (((((skb->len << 16) & 458752U) | compl) << 8) & 16711680U)) | (((((skb->len << 16) & 458752U) | compl) >> 8) & 16128U)) | ((((skb->len << 16) & 458752U) | compl) >> 24)) | 49155U; else 
                                                                    
#line 1184 
                                                                    cpl->wr.wr_hi = __fswab32((((skb->len << 16) & 458752U) | compl) | 62914560U);
      
#line 1185 
      ldv_inline_asm();
      
#line 1188 
      if (0 != 0) 
#line 1188 
                  cpl->wr.wr_lo = ((((((gen << 31) | flits) | (q->token << 8)) << 24) | (((((gen << 31) | flits) | (q->token << 8)) << 8) & 16711680U)) | (((((gen << 31) | flits) | (q->token << 8)) >> 8) & 65280U)) | ((((gen << 31) | flits) | (q->token << 8)) >> 24); else 
                                                                    
#line 1188 
                                                                    cpl->wr.wr_lo = __fswab32(((gen << 31) | flits) | (q->token << 8));
      
#line 1190 
      wr_gen2(d,gen);
      
#line 1191 
      dev_consume_skb_any(skb);
      
#line 1192 
      goto return_label;
    }
    else ;
    
#line 1195 
    flits = 2U;
  }
  
#line 1198 
  if (ndesc == 1U) 
#line 1198 
                   sgp = (struct sg_ent *)(& d->flit[flits]); else 
#line 1198 
                                                                   sgp = (struct sg_ent *)(& sgl);
  
#line 1199 
  ;
  
#line 1199 
  tmp_10 = skb_headlen((struct sk_buff const *)skb);
  
#line 1199 
  ;
  
#line 1199 
  ;
  
#line 1199 
  ;
  
#line 1199 
  sgl_flits = make_sgl((struct sk_buff const *)skb,sgp,skb->data,tmp_10,adap->pdev);
  
#line 1202 
  if (0 != 0) 
#line 1202 
              tmp_12 = (((q->token << 16) & 16776960U) | (q->token & 65280U)) | ((q->token << 8) >> 24); else 
                                                                    
#line 1203 
                                                                    tmp_12 = __fswab32(q->token << 8);
  
#line 1201 
  if (0 != 0) 
#line 1201 
              tmp_14 = ((((compl << 24) | ((compl << 8) & 16711680U)) | ((compl >> 8) & 65280U)) | (compl >> 24)) | 3U; else 
                                                                    
#line 1202 
                                                                    tmp_14 = __fswab32(compl | 50331648U);
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  ;
  
#line 1201 
  write_wr_hdr_sgl(ndesc,skb,d,pidx,(struct sge_txq const *)q,(struct sg_ent const *)(& sgl),flits,sgl_flits,gen,tmp_14,tmp_12);
  return_label: 
#line 1204 
                return;
}


#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void t3_stop_tx_queue(struct netdev_queue *txq, struct sge_qset *qs, struct sge_txq *q)
{
  
#line 1209 
  netif_tx_start_queue(txq);
  
#line 1210 
  set_bit(0L,(unsigned long volatile *)(& qs->txq_stopped));
  
#line 1211 
  q->stops += 1UL;
  
#line 1212 
  return;
}


#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
netdev_tx_t t3_eth_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  int qidx;
  unsigned int ndesc;
  unsigned int pidx;
  unsigned int credits;
  unsigned int gen;
  unsigned int compl;
  struct netdev_queue *txq;
  struct sge_qset *qs;
  struct sge_txq *q;
  u16 tmp_0;
  unsigned char *tmp_3;
  int tmp_4;
  
#line 1225 
  struct port_info const *pi = netdev_priv((struct net_device const *)dev);
  
#line 1226 
  struct adapter *adap = pi->adapter;
  
#line 1235 
  if ((long)(skb->len <= 13U) != 0L) {
    
#line 1236 
    dev_kfree_skb_any(skb);
    
#line 1237 
    __retres = NETDEV_TX_OK;
    
#line 1237 
    goto return_label;
  }
  else ;
  
#line 1240 
  tmp_0 = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 1240 
  qidx = (int)tmp_0;
  
#line 1241 
  qs = pi->qs + qidx;
  
#line 1242 
  q = & qs->txq[0];
  
#line 1243 
  txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)qidx);
  
#line 1245 
  reclaim_completed_tx(adap,q,16U);
  
#line 1247 
  credits = q->size - q->in_use;
  
#line 1248 
  ndesc = calc_tx_descs((struct sk_buff const *)skb);
  
#line 1250 
  if ((long)(credits < ndesc) != 0L) {
    
#line 1251 
    t3_stop_tx_queue(txq,qs,q);
    
#line 1252 
    dev_err((struct device const *)(& (adap->pdev)->dev),"%s: Tx ring %u full while queue awake!\n",(char *)(& dev->name),q->cntxt_id & 7U);
    
#line 1255 
    __retres = NETDEV_TX_BUSY;
    
#line 1255 
    goto return_label;
  }
  else ;
  
#line 1258 
  q->in_use += ndesc;
  
#line 1259 
  if ((long)(credits - ndesc < q->stop_thres) != 0L) {
    int tmp_1;
    
#line 1260 
    t3_stop_tx_queue(txq,qs,q);
    
#line 1262 
    tmp_1 = should_restart_tx((struct sge_txq const *)q);
    
#line 1262 
    if (tmp_1 != 0) {
      int tmp_2;
      
#line 1262 
      tmp_2 = test_and_set_bit(0L,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1262 
      if (tmp_2 != 0) {
        
#line 1264 
        q->restarts += 1UL;
        
#line 1265 
        netif_tx_start_queue(txq);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1269 
  gen = q->gen;
  
#line 1270 
  q->unacked += ndesc;
  
#line 1271 
  compl = (q->unacked << 18) & 2097152U;
  
#line 1272 
  q->unacked &= 7U;
  
#line 1273 
  pidx = q->pidx;
  
#line 1274 
  q->pidx += ndesc;
  
#line 1275 
  if (q->pidx >= q->size) {
    
#line 1276 
    q->pidx -= q->size;
    
#line 1277 
    q->gen ^= 1U;
  }
  else ;
  
#line 1281 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
#line 1282 
                                                           qs->port_stats[2] += 1UL; else ;
  
#line 1283 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1283 
  ;
  
#line 1283 
  if ((unsigned int)((struct skb_shared_info *)tmp_3)->gso_size != 0U) 
    
#line 1284 
    qs->port_stats[0] += 1UL; else ;
  
#line 1285 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 1286 
                                        qs->port_stats[4] += 1UL; else ;
  
#line 1312 
  tmp_4 = skb_shared((struct sk_buff const *)skb);
  
#line 1312 
  if ((long)(tmp_4 == 0) != 0L) 
#line 1313 
                                skb_orphan(skb); else ;
  
#line 1315 
  write_tx_pkt_wr(adap,skb,pi,pidx,gen,q,ndesc,compl);
  
#line 1316 
  check_ring_tx_db(adap,q);
  
#line 1317 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1317 
                return __retres;
}


#line 1332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void write_imm(struct tx_desc *d, struct sk_buff *skb, unsigned int len, unsigned int gen)
{
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 1335 
  struct work_request_hdr *from = (struct work_request_hdr *)skb->data;
  
#line 1336 
  struct work_request_hdr *to = (struct work_request_hdr *)d;
  
#line 1338 
  if ((long)(skb->data_len == 0U) != 0L) 
#line 1339 
                                         memcpy((void *)(to + 1U),(void const *)(from + 1U),(unsigned long)len + 18446744073709551608UL); else 
                                                                    
#line 1341 
                                                                    skb_copy_bits((struct sk_buff const *)skb,8,(void *)(to + 1U),(int)(len + 4294967288U));
  
#line 1343 
  if (0 != 0) 
#line 1343 
              tmp_0 = (((len << 16) >> 8) & 1792U) | 49152U; else 
#line 1343 
                                                                  tmp_0 = __fswab32(((len << 16) & 458752U) | 12582912U);
  
#line 1343 
  to->wr_hi = from->wr_hi | tmp_0;
  
#line 1344 
  ldv_inline_asm();
  
#line 1346 
  if (0 != 0) 
#line 1346 
              tmp_2 = (((((gen << 31) | (len + 7U) / 8U) << 24) | ((((gen << 31) | (len + 7U) / 8U) << 8) & 16711680U)) | ((((gen << 31) | (len + 7U) / 8U) >> 8) & 65280U)) | (((gen << 31) | (len + 7U) / 8U) >> 24); else 
                                                                    
#line 1346 
                                                                    tmp_2 = __fswab32((gen << 31) | (len + 7U) / 8U);
  
#line 1346 
  to->wr_lo = from->wr_lo | tmp_2;
  
#line 1348 
  wr_gen2(d,gen);
  
#line 1349 
  kfree_skb(skb);
  
#line 1350 
  return;
}


#line 1370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int check_desc_avail(struct adapter *adap, struct sge_txq *q, struct sk_buff *skb, unsigned int ndesc, unsigned int qid)
{
  int __retres;
  int tmp;
  
#line 1374 
  tmp = skb_queue_empty((struct sk_buff_head const *)(& q->sendq));
  
#line 1374 
  if ((long)(tmp == 0) != 0L) {
    addq_exit: 
#line 1375 
    ;
    
#line 1375 
    __skb_queue_tail(& q->sendq,skb);
    
#line 1376 
    __retres = 1;
    
#line 1376 
    goto return_label;
  }
  else ;
  
#line 1378 
  if ((long)(q->size - q->in_use < ndesc) != 0L) {
    int tmp_1;
    
#line 1379 
    struct sge_qset *qs = txq_to_qset((struct sge_txq const *)q,(int)qid);
    
#line 1381 
    set_bit((long)qid,(unsigned long volatile *)(& qs->txq_stopped));
    
#line 1382 
    ldv_inline_asm();
    
#line 1384 
    tmp_1 = should_restart_tx((struct sge_txq const *)q);
    
#line 1384 
    if (tmp_1 != 0) {
      int tmp_2;
      
#line 1384 
      tmp_2 = test_and_set_bit((long)qid,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1384 
      if (tmp_2 != 0) {
        
#line 1386 
        __retres = 2;
        
#line 1386 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 1388 
    q->stops += 1UL;
    
#line 1389 
    goto addq_exit;
  }
  else ;
  
#line 1391 
  __retres = 0;
  return_label: 
#line 1391 
                return __retres;
}


#line 1402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void reclaim_completed_tx_imm(struct sge_txq *q)
{
  
#line 1404 
  unsigned int reclaim = q->processed - q->cleaned;
  
#line 1406 
  q->in_use -= reclaim;
  
#line 1407 
  q->cleaned += reclaim;
  
#line 1408 
  return;
}


#line 1410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int immediate(struct sk_buff const *skb)
{
  int __retres;
  
#line 1412 
  __retres = skb->len <= 120U;
  
#line 1412 
  return __retres;
}


#line 1425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int ctrl_xmit(struct adapter *adap, struct sge_txq *q, struct sk_buff *skb)
{
  int __retres;
  int ret;
  int tmp_0;
  
#line 1429 
  struct work_request_hdr *wrp = (struct work_request_hdr *)skb->data;
  
#line 1431 
  tmp_0 = immediate((struct sk_buff const *)skb);
  
#line 1431 
  if ((long)(tmp_0 == 0) != 0L) {
    {
      
#line 1432 
      int __ret_warn_on = 1;
      
#line 1432 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 1432 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c",1432); else ;
      
#line 1432 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 1433 
    consume_skb(skb);
    
#line 1434 
    __retres = 0;
    
#line 1434 
    goto return_label;
  }
  else ;
  
#line 1437 
  wrp->wr_hi |= 49152U;
  
#line 1438 
  if (0 != 0) 
#line 1438 
              wrp->wr_lo = (((q->token << 16) & 16776960U) | (q->token & 65280U)) | ((q->token << 8) >> 24); else 
                                                                    
#line 1438 
                                                                    wrp->wr_lo = __fswab32(q->token << 8);
  
#line 1440 
  ldv_spin_lock_81(& q->lock);
  again: 
#line 1441 
  ;
  
#line 1441 
  reclaim_completed_tx_imm(q);
  
#line 1443 
  ret = check_desc_avail(adap,q,skb,1U,2U);
  
#line 1444 
  if ((long)(ret != 0) != 0L) {
    
#line 1445 
    if (ret == 1) {
      
#line 1446 
      ldv_spin_unlock_82(& q->lock);
      
#line 1447 
      __retres = 2;
      
#line 1447 
      goto return_label;
    }
    else ;
    
#line 1449 
    goto again;
  }
  else ;
  
#line 1452 
  write_imm(q->desc + q->pidx,skb,skb->len,q->gen);
  
#line 1454 
  q->in_use += 1U;
  
#line 1455 
  q->pidx += 1U;
  
#line 1455 
  ;
  
#line 1455 
  if (q->pidx >= q->size) {
    
#line 1456 
    q->pidx = 0U;
    
#line 1457 
    q->gen ^= 1U;
  }
  else ;
  
#line 1459 
  ldv_spin_unlock_83(& q->lock);
  
#line 1460 
  ldv_inline_asm();
  
#line 1461 
  t3_write_reg(adap,4U,q->cntxt_id | 2147483648U);
  
#line 1463 
  __retres = 0;
  return_label: 
#line 1463 
                return __retres;
}


#line 1472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void restart_ctrlq(unsigned long data)
{
  struct sk_buff *skb;
  int tmp_1;
  
#line 1475 
  struct sge_qset *qs = (struct sge_qset *)data;
  
#line 1476 
  struct sge_txq *q = & qs->txq[2];
  
#line 1478 
  ldv_spin_lock_84(& q->lock);
  again: 
#line 1479 
  ;
  
#line 1479 
  reclaim_completed_tx_imm(q);
  
#line 1481 
  goto ldv_52911;
  ldv_52910: 
#line 1482 
  ;
  
#line 1484 
  write_imm(q->desc + q->pidx,skb,skb->len,q->gen);
  
#line 1486 
  q->pidx += 1U;
  
#line 1486 
  ;
  
#line 1486 
  if (q->pidx >= q->size) {
    
#line 1487 
    q->pidx = 0U;
    
#line 1488 
    q->gen ^= 1U;
  }
  else ;
  
#line 1490 
  q->in_use += 1U;
  ldv_52911: 
#line 1491 
  ;
  
#line 1481 
  if (q->in_use < q->size) {
    
#line 1482 
    skb = __skb_dequeue(& q->sendq);
    
#line 1481 
    if (skb != (struct sk_buff *)0) 
#line 1484 
                                    goto ldv_52910; else 
#line 1487 
                                                         goto ldv_52912;
  }
  else 
#line 1487 
       goto ldv_52912;
  ldv_52912: 
#line 1488 
  ;
  
#line 1493 
  tmp_1 = skb_queue_empty((struct sk_buff_head const *)(& q->sendq));
  
#line 1493 
  if (tmp_1 == 0) {
    int tmp;
    
#line 1494 
    set_bit(2L,(unsigned long volatile *)(& qs->txq_stopped));
    
#line 1495 
    ldv_inline_asm();
    
#line 1497 
    tmp = should_restart_tx((struct sge_txq const *)q);
    
#line 1497 
    if (tmp != 0) {
      int tmp_0;
      
#line 1497 
      tmp_0 = test_and_set_bit(2L,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1497 
      if (tmp_0 != 0) 
#line 1499 
                      goto again; else ;
    }
    else ;
    
#line 1500 
    q->stops += 1UL;
  }
  else ;
  
#line 1503 
  ldv_spin_unlock_85(& q->lock);
  
#line 1504 
  ldv_inline_asm();
  
#line 1505 
  t3_write_reg(qs->adap,4U,q->cntxt_id | 2147483648U);
  
#line 1507 
  return;
}


#line 1512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
int t3_mgmt_tx(struct adapter *adap, struct sk_buff *skb)
{
  int ret;
  
#line 1515 
  local_bh_disable();
  
#line 1516 
  ret = ctrl_xmit(adap,& adap->sge.qs[0].txq[2],skb);
  
#line 1517 
  local_bh_enable();
  
#line 1519 
  return ret;
}


#line 1530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void deferred_unmap_destructor(struct sk_buff *skb)
{
  int i;
  dma_addr_t const *p;
  struct skb_shared_info const *si;
  struct deferred_unmap_info const *dui;
  unsigned char *tmp_2;
  unsigned char *tmp_3;
  unsigned int tmp_5;
  dma_addr_t const *tmp_6;
  
#line 1537 
  dui = (struct deferred_unmap_info const *)skb->head;
  
#line 1538 
  p = (dma_addr_t const *)(& dui->addr);
  
#line 1540 
  tmp_2 = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1540 
  tmp_3 = skb_transport_header((struct sk_buff const *)skb);
  
#line 1540 
  if ((long)tmp_2 != (long)tmp_3) {
    unsigned char *tmp;
    unsigned char *tmp_0;
    dma_addr_t const *tmp_1;
    
#line 1541 
    tmp = skb_tail_pointer((struct sk_buff const *)skb);
    
#line 1541 
    tmp_0 = skb_transport_header((struct sk_buff const *)skb);
    
#line 1541 
    tmp_1 = p;
    
#line 1541 
    p += 1;
    
#line 1541 
    ;
    
#line 1541 
    ;
    
#line 1541 
    pci_unmap_single(dui->pdev,*tmp_1,(unsigned long)((long)tmp - (long)tmp_0),1);
  }
  else ;
  
#line 1544 
  si = (struct skb_shared_info const *)skb_end_pointer((struct sk_buff const *)skb);
  
#line 1545 
  i = 0;
  
#line 1545 
  goto ldv_52926;
  ldv_52925: 
#line 1546 
  ;
  
#line 1546 
  tmp_5 = skb_frag_size(& si->frags[i]);
  
#line 1546 
  tmp_6 = p;
  
#line 1546 
  p += 1;
  
#line 1546 
  ;
  
#line 1546 
  ;
  
#line 1546 
  pci_unmap_page(dui->pdev,*tmp_6,(unsigned long)tmp_5,1);
  
#line 1545 
  i += 1;
  ldv_52926: 
#line 1546 
  ;
  
#line 1545 
  if ((int)si->nr_frags > i) 
#line 1547 
                             goto ldv_52925; else 
#line 1550 
                                                  goto ldv_52927;
  ldv_52927: 
#line 1551 
  ;
  
#line 1552 
  return;
}


#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void setup_deferred_unmapping(struct sk_buff *skb, struct pci_dev *pdev, struct sg_ent const *sgl, int sgl_flits)
{
  dma_addr_t *p;
  struct deferred_unmap_info *dui;
  dma_addr_t *tmp;
  dma_addr_t *tmp_1;
  
#line 1556 
  dui = (struct deferred_unmap_info *)skb->head;
  
#line 1557 
  dui->pdev = pdev;
  
#line 1558 
  p = (dma_addr_t *)(& dui->addr);
  
#line 1558 
  goto ldv_52937;
  ldv_52936: 
#line 1559 
  ;
  
#line 1559 
  tmp = p;
  
#line 1559 
  p += 1;
  
#line 1559 
  if (0 != 0) 
#line 1559 
              *tmp = (((((((sgl->addr[0] << 56) | ((sgl->addr[0] << 40) & 71776119061217280ULL)) | ((sgl->addr[0] << 24) & 280375465082880ULL)) | ((sgl->addr[0] << 8) & 1095216660480ULL)) | ((sgl->addr[0] >> 8) & 4278190080ULL)) | ((sgl->addr[0] >> 24) & 16711680ULL)) | ((sgl->addr[0] >> 40) & 65280ULL)) | (sgl->addr[0] >> 56); else 
                                                                    
#line 1559 
                                                                    *tmp = __fswab64(sgl->addr[0]);
  
#line 1560 
  tmp_1 = p;
  
#line 1560 
  p += 1;
  
#line 1560 
  if (0 != 0) 
#line 1560 
              *tmp_1 = (((((((sgl->addr[1] << 56) | ((sgl->addr[1] << 40) & 71776119061217280ULL)) | ((sgl->addr[1] << 24) & 280375465082880ULL)) | ((sgl->addr[1] << 8) & 1095216660480ULL)) | ((sgl->addr[1] >> 8) & 4278190080ULL)) | ((sgl->addr[1] >> 24) & 16711680ULL)) | ((sgl->addr[1] >> 40) & 65280ULL)) | (sgl->addr[1] >> 56); else 
                                                                    
#line 1560 
                                                                    *tmp_1 = __fswab64(sgl->addr[1]);
  
#line 1558 
  sgl += 1;
  
#line 1558 
  sgl_flits += -3;
  ldv_52937: 
#line 1559 
  ;
  
#line 1558 
  if (sgl_flits > 2) 
#line 1560 
                     goto ldv_52936; else 
#line 1563 
                                          goto ldv_52938;
  ldv_52938: 
#line 1564 
  ;
  
#line 1562 
  if (sgl_flits != 0) 
    
#line 1563 
    if (0 != 0) 
#line 1563 
                *p = (((((((sgl->addr[0] << 56) | ((sgl->addr[0] << 40) & 71776119061217280ULL)) | ((sgl->addr[0] << 24) & 280375465082880ULL)) | ((sgl->addr[0] << 8) & 1095216660480ULL)) | ((sgl->addr[0] >> 8) & 4278190080ULL)) | ((sgl->addr[0] >> 24) & 16711680ULL)) | ((sgl->addr[0] >> 40) & 65280ULL)) | (sgl->addr[0] >> 56); else 
                                                                    
#line 1563 
                                                                    *p = __fswab64(sgl->addr[0]);
  else ;
  
#line 1564 
  return;
}


#line 1578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void write_ofld_wr(struct adapter *adap, struct sk_buff *skb, struct sge_txq *q, unsigned int pidx, unsigned int gen, unsigned int ndesc)
{
  unsigned int sgl_flits;
  unsigned int flits;
  struct work_request_hdr *from;
  struct sg_ent *sgp;
  struct sg_ent sgl[9U];
  int tmp;
  int tmp_0;
  int tmp_1;
  unsigned char *tmp_2;
  unsigned char *tmp_3;
  unsigned char *tmp_4;
  int tmp_5;
  
#line 1585 
  struct tx_desc *d = q->desc + pidx;
  
#line 1587 
  tmp = immediate((struct sk_buff const *)skb);
  
#line 1587 
  if (tmp != 0) {
    
#line 1588 
    (q->sdesc + pidx)->skb = (struct sk_buff *)0;
    
#line 1589 
    write_imm(d,skb,skb->len,gen);
    
#line 1590 
    goto return_label;
  }
  else ;
  
#line 1595 
  from = (struct work_request_hdr *)skb->data;
  
#line 1597 
  tmp_0 = skb_transport_offset((struct sk_buff const *)skb);
  
#line 1596 
  ;
  
#line 1596 
  ;
  
#line 1596 
  memcpy((void *)(& d->flit[1]),(void const *)(from + 1U),(unsigned long)tmp_0 + 18446744073709551608UL);
  
#line 1599 
  tmp_1 = skb_transport_offset((struct sk_buff const *)skb);
  
#line 1599 
  flits = (unsigned int)(tmp_1 / 8);
  
#line 1600 
  if (ndesc == 1U) 
#line 1600 
                   sgp = (struct sg_ent *)(& d->flit[flits]); else 
#line 1600 
                                                                   sgp = (struct sg_ent *)(& sgl);
  
#line 1601 
  ;
  
#line 1601 
  tmp_2 = skb_tail_pointer((struct sk_buff const *)skb);
  
#line 1602 
  tmp_3 = skb_transport_header((struct sk_buff const *)skb);
  
#line 1601 
  tmp_4 = skb_transport_header((struct sk_buff const *)skb);
  
#line 1601 
  ;
  
#line 1601 
  ;
  
#line 1601 
  sgl_flits = make_sgl((struct sk_buff const *)skb,sgp,tmp_4,(unsigned int)((long)tmp_2 - (long)tmp_3),adap->pdev);
  
#line 1605 
  tmp_5 = need_skb_unmap();
  
#line 1605 
  if (tmp_5 != 0) {
    
#line 1606 
    setup_deferred_unmapping(skb,adap->pdev,(struct sg_ent const *)sgp,(int)sgl_flits);
    
#line 1607 
    skb->destructor = & deferred_unmap_destructor;
  }
  else ;
  
#line 1610 
  write_wr_hdr_sgl(ndesc,skb,d,pidx,(struct sge_txq const *)q,(struct sg_ent const *)(& sgl),flits,sgl_flits,gen,from->wr_hi,from->wr_lo);
  return_label: 
#line 1612 
                return;
}


#line 1621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static unsigned int calc_tx_descs_ofld(struct sk_buff const *skb)
{
  unsigned int __retres;
  unsigned int flits;
  unsigned int cnt;
  int tmp;
  unsigned char *tmp_0;
  unsigned char *tmp_1;
  unsigned char *tmp_2;
  unsigned int tmp_4;
  unsigned int tmp_3;
  
#line 1625 
  if (skb->len <= 120U) {
    
#line 1626 
    __retres = 1U;
    
#line 1626 
    goto return_label;
  }
  else ;
  
#line 1628 
  tmp = skb_transport_offset(skb);
  
#line 1628 
  flits = (unsigned int)(tmp / 8);
  
#line 1629 
  tmp_0 = skb_end_pointer(skb);
  
#line 1629 
  cnt = (unsigned int)((struct skb_shared_info *)tmp_0)->nr_frags;
  
#line 1630 
  tmp_1 = skb_tail_pointer(skb);
  
#line 1630 
  tmp_2 = skb_transport_header(skb);
  
#line 1630 
  if (tmp_1 != tmp_2) 
#line 1631 
                      cnt += 1U; else ;
  
#line 1632 
  tmp_3 = sgl_len(cnt);
  
#line 1632 
  ;
  
#line 1632 
  tmp_4 = flits_to_desc(tmp_3 + flits);
  
#line 1632 
  __retres = tmp_4;
  return_label: 
#line 1632 
                return __retres;
}


#line 1643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int ofld_xmit(struct adapter *adap, struct sge_txq *q, struct sk_buff *skb)
{
  int __retres;
  int ret;
  unsigned int pidx;
  unsigned int gen;
  
#line 1647 
  unsigned int ndesc = calc_tx_descs_ofld((struct sk_buff const *)skb);
  
#line 1649 
  ldv_spin_lock_86(& q->lock);
  again: 
#line 1650 
  ;
  
#line 1650 
  reclaim_completed_tx(adap,q,16U);
  
#line 1652 
  ret = check_desc_avail(adap,q,skb,ndesc,1U);
  
#line 1653 
  if ((long)(ret != 0) != 0L) {
    
#line 1654 
    if (ret == 1) {
      
#line 1655 
      skb->priority = ndesc;
      
#line 1656 
      ldv_spin_unlock_87(& q->lock);
      
#line 1657 
      __retres = 2;
      
#line 1657 
      goto return_label;
    }
    else ;
    
#line 1659 
    goto again;
  }
  else ;
  
#line 1662 
  gen = q->gen;
  
#line 1663 
  q->in_use += ndesc;
  
#line 1664 
  pidx = q->pidx;
  
#line 1665 
  q->pidx += ndesc;
  
#line 1666 
  if (q->pidx >= q->size) {
    
#line 1667 
    q->pidx -= q->size;
    
#line 1668 
    q->gen ^= 1U;
  }
  else ;
  
#line 1670 
  ldv_spin_unlock_88(& q->lock);
  
#line 1672 
  write_ofld_wr(adap,skb,q,pidx,gen,ndesc);
  
#line 1673 
  check_ring_tx_db(adap,q);
  
#line 1674 
  __retres = 0;
  return_label: 
#line 1674 
                return __retres;
}


#line 1683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void restart_offloadq(unsigned long data)
{
  struct sk_buff *skb;
  
#line 1686 
  struct sge_qset *qs = (struct sge_qset *)data;
  
#line 1687 
  struct sge_txq *q = & qs->txq[1];
  
#line 1688 
  struct port_info const *pi = netdev_priv((struct net_device const *)qs->netdev);
  
#line 1689 
  struct adapter *adap = pi->adapter;
  
#line 1691 
  ldv_spin_lock_89(& q->lock);
  again: 
#line 1692 
  ;
  
#line 1692 
  reclaim_completed_tx(adap,q,16U);
  
#line 1694 
  goto ldv_52982;
  ldv_52981: 
#line 1695 
  ;
  {
    unsigned int gen;
    unsigned int pidx;
    
#line 1696 
    unsigned int ndesc = skb->priority;
    
#line 1698 
    if ((long)(q->size - q->in_use < ndesc) != 0L) {
      int tmp_0;
      
#line 1699 
      set_bit(1L,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1700 
      ldv_inline_asm();
      
#line 1702 
      tmp_0 = should_restart_tx((struct sge_txq const *)q);
      
#line 1702 
      if (tmp_0 != 0) {
        int tmp_1;
        
#line 1702 
        tmp_1 = test_and_set_bit(1L,(unsigned long volatile *)(& qs->txq_stopped));
        
#line 1702 
        if (tmp_1 != 0) 
#line 1704 
                        goto again; else ;
      }
      else ;
      
#line 1705 
      q->stops += 1UL;
      
#line 1706 
      goto ldv_52980;
    }
    else ;
    
#line 1709 
    gen = q->gen;
    
#line 1710 
    q->in_use += ndesc;
    
#line 1711 
    pidx = q->pidx;
    
#line 1712 
    q->pidx += ndesc;
    
#line 1713 
    if (q->pidx >= q->size) {
      
#line 1714 
      q->pidx -= q->size;
      
#line 1715 
      q->gen ^= 1U;
    }
    else ;
    
#line 1717 
    __skb_unlink(skb,& q->sendq);
    
#line 1718 
    ldv_spin_unlock_90(& q->lock);
    
#line 1720 
    write_ofld_wr(adap,skb,q,pidx,gen,ndesc);
    
#line 1721 
    ldv_spin_lock_91(& q->lock);
  }
  ldv_52982: 
#line 1723 
  ;
  
#line 1694 
  skb = skb_peek((struct sk_buff_head const *)(& q->sendq));
  
#line 1694 
  if (skb != (struct sk_buff *)0) 
#line 1696 
                                  goto ldv_52981; else 
#line 1699 
                                                       goto ldv_52980;
  ldv_52980: 
#line 1700 
  ;
  
#line 1723 
  ldv_spin_unlock_92(& q->lock);
  
#line 1724 
  ldv_inline_asm();
  
#line 1730 
  t3_write_reg(adap,4U,q->cntxt_id | 2147483648U);
  
#line 1732 
  return;
}


#line 1741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int queue_set(struct sk_buff const *skb)
{
  int __retres;
  
#line 1743 
  __retres = (int)(skb->priority >> 1);
  
#line 1743 
  return __retres;
}


#line 1753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int is_ctrl_pkt(struct sk_buff const *skb)
{
  int __retres;
  
#line 1755 
  __retres = (int)skb->priority & 1;
  
#line 1755 
  return __retres;
}


#line 1767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
int t3_offload_tx(struct t3cdev *tdev, struct sk_buff *skb)
{
  int __retres;
  struct adapter *tmp;
  int tmp_0;
  int tmp_2;
  int tmp_3;
  {
    
#line 1769 
    struct t3cdev const *__mptr = (struct t3cdev const *)tdev;
    
#line 1769 
    tmp = (struct adapter *)__mptr;
  }
  
#line 1769 
  struct adapter *adap = tmp;
  
#line 1770 
  tmp_0 = queue_set((struct sk_buff const *)skb);
  
#line 1770 
  struct sge_qset *qs = & adap->sge.qs[tmp_0];
  
#line 1772 
  tmp_2 = is_ctrl_pkt((struct sk_buff const *)skb);
  
#line 1772 
  if ((long)(tmp_2 != 0) != 0L) {
    int tmp_1;
    
#line 1773 
    tmp_1 = ctrl_xmit(adap,& qs->txq[2],skb);
    
#line 1773 
    __retres = tmp_1;
    
#line 1773 
    goto return_label;
  }
  else ;
  
#line 1775 
  tmp_3 = ofld_xmit(adap,& qs->txq[1],skb);
  
#line 1775 
  __retres = tmp_3;
  return_label: 
#line 1775 
                return __retres;
}


#line 1787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void offload_enqueue(struct sge_rspq *q, struct sk_buff *skb)
{
  
#line 1789 
  int was_empty = skb_queue_empty((struct sk_buff_head const *)(& q->rx_queue));
  
#line 1791 
  __skb_queue_tail(& q->rx_queue,skb);
  
#line 1793 
  if (was_empty != 0) {
    
#line 1794 
    struct sge_qset *qs = rspq_to_qset((struct sge_rspq const *)q);
    
#line 1796 
    napi_schedule(& qs->napi);
  }
  else ;
  
#line 1798 
  return;
}


#line 1809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void deliver_partial_bundle(struct t3cdev *tdev, struct sge_rspq *q, struct sk_buff **skbs, int n)
{
  
#line 1813 
  if (n != 0) {
    
#line 1814 
    q->offload_bundles += 1UL;
    
#line 1815 
    (*(tdev->recv))(tdev,skbs,n);
  }
  else ;
  
#line 1817 
  return;
}


#line 1830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int ofld_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  struct sge_qset *tmp;
  {
    
#line 1832 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1832 
    tmp = (struct sge_qset *)__mptr + 18446744073709551608U;
  }
  
#line 1832 
  struct sge_qset *qs = tmp;
  
#line 1833 
  struct sge_rspq *q = & qs->rspq;
  
#line 1834 
  struct adapter *adapter = qs->adap;
  
#line 1835 
  int work_done = 0;
  
#line 1837 
  goto ldv_53028;
  ldv_53027: 
#line 1838 
  ;
  {
    struct sk_buff *skb;
    struct sk_buff *tmp_0;
    struct sk_buff *skbs[8U];
    struct sk_buff_head queue;
    int ngathered;
    int tmp_1;
    int tmp_2;
    
#line 1842 
    ldv_spin_lock_irq_93(& q->lock);
    
#line 1843 
    __skb_queue_head_init(& queue);
    
#line 1844 
    skb_queue_splice_init(& q->rx_queue,& queue);
    
#line 1845 
    tmp_1 = skb_queue_empty((struct sk_buff_head const *)(& queue));
    
#line 1845 
    if (tmp_1 != 0) {
      
#line 1846 
      napi_complete(napi);
      
#line 1847 
      ldv_spin_unlock_irq_94(& q->lock);
      
#line 1848 
      __retres = work_done;
      
#line 1848 
      goto return_label;
    }
    else ;
    
#line 1850 
    ldv_spin_unlock_irq_95(& q->lock);
    
#line 1852 
    ngathered = 0;
    
#line 1853 
    skb = queue.next;
    
#line 1853 
    tmp_0 = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
    
#line 1853 
    goto ldv_53026;
    ldv_53025: 
#line 1854 
    ;
    
#line 1854 
    if (work_done >= budget) 
#line 1855 
                             goto ldv_53024; else ;
    
#line 1856 
    work_done += 1;
    
#line 1858 
    __skb_unlink(skb,& queue);
    
#line 1859 
    __builtin_prefetch((void const *)skb->data);
    
#line 1860 
    skbs[ngathered] = skb;
    
#line 1861 
    ngathered += 1;
    
#line 1861 
    if (ngathered == 8) {
      
#line 1862 
      q->offload_bundles += 1UL;
      
#line 1863 
      (*(adapter->tdev.recv))(& adapter->tdev,(struct sk_buff **)(& skbs),ngathered);
      
#line 1865 
      ngathered = 0;
    }
    else ;
    
#line 1853 
    skb = tmp_0;
    
#line 1853 
    tmp_0 = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
    ldv_53026: 
#line 1854 
    ;
    
#line 1853 
    if ((struct sk_buff *)(& queue) != skb) 
#line 1855 
                                            goto ldv_53025; else 
#line 1858 
                                                                 goto ldv_53024;
    ldv_53024: 
#line 1859 
    ;
    
#line 1868 
    tmp_2 = skb_queue_empty((struct sk_buff_head const *)(& queue));
    
#line 1868 
    if (tmp_2 == 0) {
      
#line 1870 
      ldv_spin_lock_irq_96(& q->lock);
      
#line 1871 
      skb_queue_splice((struct sk_buff_head const *)(& queue),& q->rx_queue);
      
#line 1872 
      ldv_spin_unlock_irq_97(& q->lock);
    }
    else ;
    
#line 1874 
    deliver_partial_bundle(& adapter->tdev,q,(struct sk_buff **)(& skbs),ngathered);
  }
  ldv_53028: 
#line 1876 
  ;
  
#line 1837 
  if (work_done < budget) 
#line 1839 
                          goto ldv_53027; else 
#line 1842 
                                               goto ldv_53029;
  ldv_53029: 
#line 1843 
  ;
  
#line 1877 
  __retres = work_done;
  return_label: 
#line 1877 
                return __retres;
}


#line 1891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int rx_offload(struct t3cdev *tdev, struct sge_rspq *rq, struct sk_buff *skb, struct sk_buff **rx_gather, unsigned int gather_idx)
{
  int __retres;
  
#line 1895 
  skb_reset_mac_header(skb);
  
#line 1896 
  skb_reset_network_header(skb);
  
#line 1897 
  skb_reset_transport_header(skb);
  
#line 1899 
  if (rq->polling != 0U) {
    unsigned int tmp;
    
#line 1900 
    tmp = gather_idx;
    
#line 1900 
    gather_idx += 1U;
    
#line 1900 
    *(rx_gather + tmp) = skb;
    
#line 1901 
    if (gather_idx == 8U) {
      
#line 1902 
      (*(tdev->recv))(tdev,rx_gather,8);
      
#line 1903 
      gather_idx = 0U;
      
#line 1904 
      rq->offload_bundles += 1UL;
    }
    else ;
  }
  else 
#line 1907 
       offload_enqueue(rq,skb);
  
#line 1909 
  __retres = (int)gather_idx;
  
#line 1909 
  return __retres;
}


#line 1919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void restart_tx(struct sge_qset *qs)
{
  int tmp_0;
  int tmp_3;
  int tmp_6;
  
#line 1921 
  tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& qs->txq_stopped));
  
#line 1921 
  if (tmp_0 != 0) {
    int tmp_1;
    
#line 1921 
    tmp_1 = should_restart_tx((struct sge_txq const *)(& qs->txq[0]));
    
#line 1921 
    if (tmp_1 != 0) {
      int tmp_2;
      
#line 1922 
      tmp_2 = test_and_set_bit(0L,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1922 
      if (tmp_2 != 0) {
        bool tmp;
        
#line 1924 
        qs->txq[0].restarts += 1UL;
        
#line 1925 
        tmp = netif_running((struct net_device const *)qs->netdev);
        
#line 1925 
        if ((int)tmp != 0) 
#line 1926 
                           netif_tx_wake_queue(qs->tx_q); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1929 
  tmp_3 = constant_test_bit(1L,(unsigned long const volatile *)(& qs->txq_stopped));
  
#line 1929 
  if (tmp_3 != 0) {
    int tmp_4;
    
#line 1929 
    tmp_4 = should_restart_tx((struct sge_txq const *)(& qs->txq[1]));
    
#line 1929 
    if (tmp_4 != 0) {
      int tmp_5;
      
#line 1930 
      tmp_5 = test_and_set_bit(1L,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1930 
      if (tmp_5 != 0) {
        
#line 1932 
        qs->txq[1].restarts += 1UL;
        
#line 1933 
        ldv_tasklet_schedule_98(& qs->txq[1].qresume_tsk);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1935 
  tmp_6 = constant_test_bit(2L,(unsigned long const volatile *)(& qs->txq_stopped));
  
#line 1935 
  if (tmp_6 != 0) {
    int tmp_7;
    
#line 1935 
    tmp_7 = should_restart_tx((struct sge_txq const *)(& qs->txq[2]));
    
#line 1935 
    if (tmp_7 != 0) {
      int tmp_8;
      
#line 1936 
      tmp_8 = test_and_set_bit(2L,(unsigned long volatile *)(& qs->txq_stopped));
      
#line 1936 
      if (tmp_8 != 0) {
        
#line 1938 
        qs->txq[2].restarts += 1UL;
        
#line 1939 
        ldv_tasklet_schedule_99(& qs->txq[2].qresume_tsk);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1941 
  return;
}


#line 1951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void cxgb3_arp_process(struct port_info *pi, struct sk_buff *skb)
{
  struct arphdr *arp;
  unsigned char *arp_ptr;
  unsigned char *sha;
  __be32 sip;
  __be32 tip;
  
#line 1953 
  struct net_device *dev = skb->dev;
  
#line 1959 
  if (dev == (struct net_device *)0) 
#line 1960 
                                     goto return_label; else ;
  
#line 1962 
  skb_reset_network_header(skb);
  
#line 1963 
  arp = arp_hdr((struct sk_buff const *)skb);
  
#line 1965 
  if ((unsigned int)arp->ar_op != 256U) 
#line 1966 
                                        goto return_label; else ;
  
#line 1968 
  arp_ptr = (unsigned char *)(arp + 1U);
  
#line 1969 
  sha = arp_ptr;
  
#line 1970 
  arp_ptr += (int)dev->addr_len;
  
#line 1971 
  memcpy((void *)(& sip),(void const *)arp_ptr,4UL);
  
#line 1972 
  arp_ptr += 4U;
  
#line 1973 
  arp_ptr += (int)dev->addr_len;
  
#line 1974 
  memcpy((void *)(& tip),(void const *)arp_ptr,4UL);
  
#line 1976 
  if (pi->iscsi_ipv4addr != tip) 
#line 1977 
                                 goto return_label; else ;
  
#line 1979 
  arp_send(2,2054,sip,dev,tip,(unsigned char const *)sha,(unsigned char const *)(& pi->iscsic.mac_addr),(unsigned char const *)sha);
  return_label: 
#line 1981 
                return;
}


#line 1984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int is_arp(struct sk_buff *skb)
{
  int __retres;
  
#line 1986 
  __retres = (unsigned int)skb->protocol == 1544U;
  
#line 1986 
  return __retres;
}


#line 1989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void cxgb3_process_iscsi_prov_pack(struct port_info *pi, struct sk_buff *skb)
{
  int tmp;
  
#line 1992 
  tmp = is_arp(skb);
  
#line 1992 
  if (tmp != 0) {
    
#line 1993 
    cxgb3_arp_process(pi,skb);
    
#line 1994 
    goto return_label;
  }
  else ;
  
#line 1997 
  if (pi->iscsic.recv != (int (*)(struct port_info *, struct sk_buff *))0) 
    
#line 1998 
    (*(pi->iscsic.recv))(pi,skb); else ;
  return_label: 
#line 1999 
                return;
}


#line 2013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void rx_eth(struct adapter *adap, struct sge_rspq *rq, struct sk_buff *skb, int pad, int lro)
{
  struct port_info *pi;
  
#line 2016 
  struct cpl_rx_pkt *p = (struct cpl_rx_pkt *)(skb->data + pad);
  
#line 2017 
  struct sge_qset *qs = rspq_to_qset((struct sge_rspq const *)rq);
  
#line 2020 
  skb_pull(skb,(unsigned int)pad + 8U);
  
#line 2021 
  skb->protocol = eth_type_trans(skb,adap->port[(int)p->iff]);
  
#line 2022 
  pi = (struct port_info *)netdev_priv((struct net_device const *)skb->dev);
  
#line 2023 
  if (((((skb->dev)->features & 17179869184ULL) != 0ULL && (unsigned int)*((unsigned char *)p + 1UL) != 0U) && (unsigned int)p->csum == 65535U) && (unsigned int)*((unsigned char *)p + 1UL) == 0U) {
    
#line 2025 
    qs->port_stats[1] += 1UL;
    
#line 2026 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
  }
  else 
#line 2028 
       skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 2029 
  skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)(((long)qs - (long)(& adap->sge.qs[(int)pi->first_qset])) / 2176L))));
  
#line 2031 
  if ((unsigned int)*((unsigned char *)p + 1UL) != 0U) {
    int tmp_2;
    
#line 2032 
    qs->port_stats[3] += 1UL;
    
#line 2033 
    if (0 != 0) 
#line 2033 
                tmp_2 = (int)((unsigned short)(((int)p->vlan << 8) | ((int)p->vlan >> 8)));
    else {
      __u16 tmp_1;
      
#line 2033 
      tmp_1 = __fswab16((unsigned short)((int)p->vlan));
      
#line 2033 
      tmp_2 = (int)tmp_1;
    }
    
#line 2033 
    ;
    
#line 2033 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_2);
  }
  else ;
  
#line 2035 
  if (rq->polling != 0U) 
    
#line 2036 
    if (lro != 0) 
#line 2037 
                  napi_gro_receive(& qs->napi,skb);
    else {
      
#line 2039 
      if ((long)(pi->iscsic.flags != 0U) != 0L) 
#line 2040 
                                                cxgb3_process_iscsi_prov_pack(pi,skb); else ;
      
#line 2041 
      netif_receive_skb(skb);
    }
  else 
#line 2044 
       netif_rx(skb);
  
#line 2045 
  return;
}


#line 2047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int is_eth_tcp(u32 rss)
{
  int tmp_0;
  
#line 2049 
  if (0 != 0) 
#line 2049 
              tmp_0 = ((((((rss << 24) | ((rss << 8) & 16711680U)) | ((rss >> 8) & 65280U)) | (rss >> 24)) >> 22) & 3U) == 2U;
  else {
    __u32 tmp;
    
#line 2049 
    tmp = __fswab32(rss);
    
#line 2049 
    tmp_0 = ((tmp >> 22) & 3U) == 2U;
  }
  
#line 2049 
  return tmp_0;
}


#line 2063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void lro_add_page(struct adapter *adap, struct sge_qset *qs, struct sge_fl *fl, int len, int complete_0)
{
  struct cpl_rx_pkt *cpl;
  struct skb_frag_struct *rx_frag;
  int nr_frags;
  unsigned char *tmp_0;
  unsigned char *tmp_1;
  unsigned char *tmp_3;
  
#line 2066 
  struct rx_sw_desc *sd = fl->sdesc + fl->cidx;
  
#line 2067 
  struct port_info *pi = netdev_priv((struct net_device const *)qs->netdev);
  
#line 2068 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 2072 
  int offset = 0;
  
#line 2074 
  if (qs->nomem == 0) {
    
#line 2075 
    skb = napi_get_frags(& qs->napi);
    
#line 2076 
    qs->nomem = skb == (struct sk_buff *)0;
  }
  else ;
  
#line 2079 
  fl->credits -= 1U;
  
#line 2081 
  pci_dma_sync_single_for_cpu(adap->pdev,sd->dma_addr,(unsigned long)(fl->buf_size + 4294967232U),2);
  
#line 2086 
  *(sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) -= 1UL;
  
#line 2087 
  if (*(sd->__anonCompField_rx_sw_desc_110.pg_chunk.p_cnt) == 0UL && sd->__anonCompField_rx_sw_desc_110.pg_chunk.page != fl->pg_chunk.page) 
    
#line 2088 
    pci_unmap_page(adap->pdev,sd->__anonCompField_rx_sw_desc_110.pg_chunk.mapping,(unsigned long)fl->alloc_size,2); else ;
  
#line 2093 
  if (skb == (struct sk_buff *)0) {
    
#line 2094 
    put_page(sd->__anonCompField_rx_sw_desc_110.pg_chunk.page);
    
#line 2095 
    if (complete_0 != 0) 
#line 2096 
                         qs->nomem = 0; else ;
    
#line 2097 
    goto return_label;
  }
  else ;
  
#line 2100 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2100 
  rx_frag = (struct skb_frag_struct *)(& ((struct skb_shared_info *)tmp_0)->frags);
  
#line 2101 
  tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2101 
  nr_frags = (int)((struct skb_shared_info *)tmp_1)->nr_frags;
  
#line 2103 
  if (nr_frags == 0) {
    void *tmp_2;
    
#line 2104 
    offset = 10;
    
#line 2105 
    tmp_2 = sd->__anonCompField_rx_sw_desc_110.pg_chunk.va + 2U;
    
#line 2105 
    qs->lro_va = tmp_2;
    
#line 2105 
    cpl = (struct cpl_rx_pkt *)tmp_2;
    
#line 2107 
    if ((((qs->netdev)->features & 17179869184ULL) != 0ULL && (unsigned int)*((unsigned char *)cpl + 1UL) != 0U) && (unsigned int)cpl->csum == 65535U) {
      
#line 2109 
      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
      
#line 2110 
      qs->port_stats[1] += 1UL;
    }
    else 
#line 2112 
         skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
  }
  else 
#line 2114 
       cpl = (struct cpl_rx_pkt *)qs->lro_va;
  
#line 2116 
  len -= offset;
  
#line 2118 
  rx_frag += nr_frags;
  
#line 2119 
  __skb_frag_set_page(rx_frag,sd->__anonCompField_rx_sw_desc_110.pg_chunk.page);
  
#line 2120 
  rx_frag->page_offset = sd->__anonCompField_rx_sw_desc_110.pg_chunk.offset + (unsigned int)offset;
  
#line 2121 
  skb_frag_size_set(rx_frag,(unsigned int)len);
  
#line 2123 
  skb->len += (unsigned int)len;
  
#line 2124 
  skb->data_len += (unsigned int)len;
  
#line 2125 
  skb->truesize += (unsigned int)len;
  
#line 2126 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2126 
  ((struct skb_shared_info *)tmp_3)->nr_frags = (unsigned char)((int)((struct skb_shared_info *)tmp_3)->nr_frags + 1);
  
#line 2128 
  if (complete_0 == 0) 
#line 2129 
                       goto return_label; else ;
  
#line 2131 
  skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)(((long)qs - (long)(& adap->sge.qs[(int)pi->first_qset])) / 2176L))));
  
#line 2133 
  if ((unsigned int)*((unsigned char *)cpl + 1UL) != 0U) {
    int tmp_5;
    
#line 2134 
    qs->port_stats[3] += 1UL;
    
#line 2135 
    if (0 != 0) 
#line 2135 
                tmp_5 = (int)((unsigned short)(((int)cpl->vlan << 8) | ((int)cpl->vlan >> 8)));
    else {
      __u16 tmp_4;
      
#line 2135 
      tmp_4 = __fswab16((unsigned short)((int)cpl->vlan));
      
#line 2135 
      tmp_5 = (int)tmp_4;
    }
    
#line 2135 
    ;
    
#line 2135 
    __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)tmp_5);
  }
  else ;
  
#line 2137 
  napi_gro_frags(& qs->napi);
  return_label: 
#line 2138 
                return;
}


#line 2149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void handle_rsp_cntrl_info(struct sge_qset *qs, u32 flags)
{
  unsigned int credits;
  
#line 2158 
  credits = (flags >> 16) & 127U;
  
#line 2159 
  if (credits != 0U) 
#line 2160 
                     qs->txq[0].processed += credits; else ;
  
#line 2162 
  credits = (flags >> 8) & 127U;
  
#line 2163 
  if (credits != 0U) 
#line 2164 
                     qs->txq[2].processed += credits; else ;
  
#line 2170 
  credits = flags & 127U;
  
#line 2171 
  if (credits != 0U) 
#line 2172 
                     qs->txq[1].processed += credits; else ;
  
#line 2173 
  return;
}


#line 2185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void check_ring_db(struct adapter *adap, struct sge_qset *qs, unsigned int sleeping)
{
  
#line 2188 
  if ((sleeping & 8388608U) != 0U) {
    
#line 2189 
    struct sge_txq *txq = & qs->txq[0];
    
#line 2191 
    if (txq->cleaned + txq->in_use != txq->processed) {
      int tmp;
      
#line 2191 
      tmp = test_and_set_bit(2L,(unsigned long volatile *)(& txq->flags));
      
#line 2191 
      if (tmp == 0) {
        
#line 2193 
        set_bit(1L,(unsigned long volatile *)(& txq->flags));
        
#line 2194 
        t3_write_reg(adap,4U,txq->cntxt_id | 2147483648U);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2199 
  if ((sleeping & 128U) != 0U) {
    
#line 2200 
    struct sge_txq *txq_0 = & qs->txq[1];
    
#line 2202 
    if (txq_0->cleaned + txq_0->in_use != txq_0->processed) {
      int tmp_0;
      
#line 2202 
      tmp_0 = test_and_set_bit(2L,(unsigned long volatile *)(& txq_0->flags));
      
#line 2202 
      if (tmp_0 == 0) {
        
#line 2204 
        set_bit(1L,(unsigned long volatile *)(& txq_0->flags));
        
#line 2205 
        t3_write_reg(adap,4U,txq_0->cntxt_id | 2147483648U);
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2208 
  return;
}


#line 2219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int is_new_response(struct rsp_desc const *r, struct sge_rspq const *q)
{
  int __retres;
  
#line 2222 
  __retres = ((unsigned int)r->intr_gen & 1U) == q->gen;
  
#line 2222 
  return __retres;
}


#line 2225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static void clear_rspq_bufstate(struct sge_rspq * const q)
{
  
#line 2227 
  q->pg_skb = (struct sk_buff *)0;
  
#line 2228 
  q->rx_recycle_buf = 0U;
  
#line 2229 
  return;
}


#line 2255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int process_responses(struct adapter *adap, struct sge_qset *qs, int budget)
{
  struct sk_buff *offload_skbs[8U];
  
#line 2258 
  struct sge_rspq *q = & qs->rspq;
  
#line 2259 
  struct rsp_desc *r = q->desc + q->cidx;
  
#line 2260 
  int budget_left = budget;
  
#line 2261 
  unsigned int sleeping = 0U;
  
#line 2263 
  int ngathered = 0;
  
#line 2265 
  q->next_holdoff = q->holdoff_tmr;
  
#line 2267 
  goto ldv_53129;
  ldv_53128: 
#line 2268 
  ;
  {
    int packet_complete;
    int eth;
    u32 len;
    u32 flags;
    __be32 rss_hi;
    __be32 rss_lo;
    
#line 2268 
    int ethpad = 2;
    
#line 2269 
    int lro = ((qs->netdev)->features & 16384ULL) != 0ULL;
    
#line 2270 
    struct sk_buff *skb = (struct sk_buff *)0;
    
#line 2273 
    ldv_inline_asm();
    
#line 2275 
    eth = (unsigned int)r->rss_hdr.opcode == 43U;
    
#line 2276 
    rss_hi = *((__be32 const *)r);
    
#line 2277 
    rss_lo = r->rss_hdr.rss_hash_val;
    
#line 2278 
    if (0 != 0) 
#line 2278 
                flags = (((r->flags << 24) | ((r->flags << 8) & 16711680U)) | ((r->flags >> 8) & 65280U)) | (r->flags >> 24); else 
                                                                    
#line 2278 
                                                                    flags = __fswab32(r->flags);
    
#line 2280 
    if ((long)((flags & 67108864U) != 0U) != 0L) {
      unsigned char *tmp_0;
      
#line 2281 
      skb = alloc_skb(32U,32U);
      
#line 2282 
      if (skb == (struct sk_buff *)0) 
#line 2283 
                                      goto no_mem; else ;
      
#line 2285 
      ;
      
#line 2285 
      tmp_0 = __skb_put(skb,32U);
      
#line 2285 
      memcpy((void *)tmp_0,(void const *)r,32UL);
      
#line 2286 
      *(skb->data) = (unsigned char)128U;
      
#line 2287 
      rss_hi = 128U;
      
#line 2288 
      q->async_notif += 1UL;
    }
    else 
      
#line 2289 
      if ((flags & 536870912U) != 0U) {
        
#line 2290 
        skb = get_imm_packet((struct rsp_desc const *)r);
        
#line 2291 
        if ((long)(skb == (struct sk_buff *)0) != 0L) {
          no_mem: 
#line 2292 
          ;
          
#line 2293 
          q->next_holdoff = 2500U;
          
#line 2294 
          q->nomem += 1UL;
          
#line 2296 
          budget_left -= 1;
          
#line 2297 
          goto ldv_53124;
        }
        else ;
        
#line 2299 
        q->imm_data += 1UL;
        
#line 2300 
        ethpad = 0;
      }
      else {
        
#line 2301 
        if (0 != 0) 
#line 2301 
                    len = (((r->len_cq << 24) | ((r->len_cq << 8) & 16711680U)) | ((r->len_cq >> 8) & 65280U)) | (r->len_cq >> 24); else 
                                                                    
#line 2301 
                                                                    len = __fswab32(r->len_cq);
        
#line 2301 
        if (len != 0U) {
          struct sge_fl *fl;
          int tmp_2;
          
#line 2304 
          if (eth != 0) {
            int tmp_1;
            
#line 2304 
            tmp_1 = is_eth_tcp(rss_hi);
            
#line 2304 
            if (tmp_1 != 0) 
#line 2304 
                            tmp_2 = 1; else 
#line 2304 
                                            tmp_2 = 0;
          }
          else 
#line 2304 
               tmp_2 = 0;
          
#line 2304 
          lro = tmp_2 & lro;
          
#line 2306 
          if (len < (u32)0) 
#line 2306 
                            fl = & qs->fl[1]; else 
#line 2306 
                                                   fl = & qs->fl[0];
          
#line 2307 
          if (fl->use_pages != 0U) {
            int tmp_3;
            
#line 2308 
            void *addr = (fl->sdesc + fl->cidx)->__anonCompField_rx_sw_desc_110.pg_chunk.va;
            
#line 2310 
            __builtin_prefetch((void const *)addr);
            
#line 2312 
            __builtin_prefetch((void const *)(addr + 64U));
            
#line 2314 
            __refill_fl(adap,fl);
            
#line 2315 
            if (lro > 0) {
              
#line 2316 
              lro_add_page(adap,qs,fl,(int)len & 2147483647,(int)flags & 16777216);
              
#line 2319 
              goto next_fl;
            }
            else ;
            
#line 2325 
            if (eth != 0) 
#line 2325 
                          tmp_3 = 16; else 
#line 2325 
                                           tmp_3 = 0;
            
#line 2322 
            ;
            
#line 2322 
            ;
            
#line 2322 
            ;
            
#line 2322 
            ;
            
#line 2322 
            skb = get_packet_pg(adap,fl,q,len & 2147483647U,(unsigned int)tmp_3);
            
#line 2326 
            q->pg_skb = skb;
          }
          else {
            int tmp_4;
            
#line 2329 
            if (eth != 0) 
#line 2329 
                          tmp_4 = 16; else 
#line 2329 
                                           tmp_4 = 0;
            
#line 2328 
            ;
            
#line 2328 
            ;
            
#line 2328 
            ;
            
#line 2328 
            skb = get_packet(adap,fl,len & 2147483647U,(unsigned int)tmp_4);
          }
          
#line 2330 
          if ((long)(skb == (struct sk_buff *)0) != 0L) {
            
#line 2331 
            if (eth == 0) 
#line 2332 
                          goto no_mem; else ;
            
#line 2333 
            q->rx_drops += 1UL;
          }
          else 
            
#line 2334 
            if ((long)((unsigned int)r->rss_hdr.opcode == 163U) != 0L) 
              
#line 2335 
              __skb_pull(skb,2U); else ;
          next_fl: 
#line 2336 
          ;
          
#line 2337 
          fl->cidx += 1U;
          
#line 2337 
          ;
          
#line 2337 
          if (fl->cidx == fl->size) 
#line 2338 
                                    fl->cidx = 0U; else ;
        }
        else 
#line 2340 
             q->pure_rsps += 1UL;
      }
    
#line 2342 
    if ((flags & 16744447U) != 0U) {
      
#line 2343 
      sleeping = (flags & 8388736U) | sleeping;
      
#line 2344 
      handle_rsp_cntrl_info(qs,flags);
    }
    else ;
    
#line 2347 
    r += 1;
    
#line 2348 
    q->cidx += 1U;
    
#line 2348 
    ;
    
#line 2348 
    if ((long)(q->cidx == q->size) != 0L) {
      
#line 2349 
      q->cidx = 0U;
      
#line 2350 
      q->gen ^= 1U;
      
#line 2351 
      r = q->desc;
    }
    else ;
    
#line 2353 
    __builtin_prefetch((void const *)r);
    
#line 2355 
    q->credits += 1U;
    
#line 2355 
    ;
    
#line 2355 
    if (q->credits >= q->size / 4U) {
      
#line 2356 
      refill_rspq(adap,(struct sge_rspq const *)q,q->credits);
      
#line 2357 
      q->credits = 0U;
    }
    else ;
    
#line 2360 
    packet_complete = (int)flags & 620756992;
    
#line 2364 
    if (skb != (struct sk_buff *)0 && packet_complete != 0) {
      
#line 2365 
      if (eth != 0) 
#line 2366 
                    rx_eth(adap,q,skb,ethpad,lro);
      else {
        
#line 2368 
        q->offload_pkts += 1UL;
        
#line 2370 
        skb->__anonCompField_sk_buff_69.csum = rss_hi;
        
#line 2371 
        skb->priority = rss_lo;
        
#line 2372 
        ngathered = rx_offload(& adap->tdev,q,skb,(struct sk_buff **)(& offload_skbs),(unsigned int)ngathered);
      }
      
#line 2377 
      if ((flags & 16777216U) != 0U) 
#line 2378 
                                     clear_rspq_bufstate(q); else ;
    }
    else ;
    
#line 2380 
    budget_left -= 1;
  }
  ldv_53129: 
#line 2382 
  ;
  
#line 2267 
  if ((long)(budget_left != 0) != 0L) {
    int tmp_6;
    
#line 2267 
    tmp_6 = is_new_response((struct rsp_desc const *)r,(struct sge_rspq const *)q);
    
#line 2267 
    if ((long)(tmp_6 != 0) != 0L) 
#line 2269 
                                  goto ldv_53128; else 
#line 2272 
                                                       goto ldv_53124;
  }
  else 
#line 2272 
       goto ldv_53124;
  ldv_53124: 
#line 2273 
  ;
  
#line 2383 
  deliver_partial_bundle(& adap->tdev,q,(struct sk_buff **)(& offload_skbs),ngathered);
  
#line 2385 
  if (sleeping != 0U) 
#line 2386 
                      check_ring_db(adap,qs,sleeping); else ;
  
#line 2387 
  ldv_inline_asm();
  
#line 2389 
  if ((long)(qs->txq_stopped != 0UL) != 0L) 
#line 2390 
                                            restart_tx(qs); else ;
  
#line 2392 
  budget -= budget_left;
  
#line 2393 
  return budget;
}


#line 2396  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int is_pure_response(struct rsp_desc const *r)
{
  int __retres;
  
#line 2398 
  __be32 n = r->flags & 36U;
  
#line 2400 
  __retres = (r->len_cq | n) == 0U;
  
#line 2400 
  return __retres;
}


#line 2410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int napi_rx_handler(struct napi_struct *napi, int budget)
{
  struct sge_qset *tmp;
  {
    
#line 2412 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2412 
    tmp = (struct sge_qset *)__mptr + 18446744073709551608U;
  }
  
#line 2412 
  struct sge_qset *qs = tmp;
  
#line 2413 
  struct adapter *adap = qs->adap;
  
#line 2414 
  int work_done = process_responses(adap,qs,budget);
  
#line 2416 
  if ((long)(work_done < budget) != 0L) {
    
#line 2417 
    napi_complete(napi);
    
#line 2433 
    t3_write_reg(adap,8U,((qs->rspq.cntxt_id << 29) | (qs->rspq.next_holdoff << 16)) | qs->rspq.cidx);
  }
  else ;
  
#line 2437 
  return work_done;
}


#line 2443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int napi_is_scheduled(struct napi_struct *napi)
{
  int tmp;
  
#line 2445 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& napi->state));
  
#line 2445 
  return tmp;
}


#line 2462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int process_pure_responses(struct adapter *adap, struct sge_qset *qs, struct rsp_desc *r)
{
  int tmp_2;
  int tmp_3;
  
#line 2465 
  struct sge_rspq *q = & qs->rspq;
  
#line 2466 
  unsigned int sleeping = 0U;
  ldv_53155: 
#line 2467 
  ;
  {
    unsigned int tmp_0;
    int tmp_1;
    
#line 2469 
    if (0 != 0) 
#line 2469 
                tmp_0 = (((r->flags << 24) | ((r->flags << 8) & 16711680U)) | ((r->flags >> 8) & 65280U)) | (r->flags >> 24); else 
                                                                    
#line 2469 
                                                                    tmp_0 = __fswab32(r->flags);
    
#line 2469 
    u32 flags = tmp_0;
    
#line 2471 
    r += 1;
    
#line 2472 
    q->cidx += 1U;
    
#line 2472 
    ;
    
#line 2472 
    if ((long)(q->cidx == q->size) != 0L) {
      
#line 2473 
      q->cidx = 0U;
      
#line 2474 
      q->gen ^= 1U;
      
#line 2475 
      r = q->desc;
    }
    else ;
    
#line 2477 
    __builtin_prefetch((void const *)r);
    
#line 2479 
    if ((flags & 16744447U) != 0U) {
      
#line 2480 
      sleeping = (flags & 8388736U) | sleeping;
      
#line 2481 
      handle_rsp_cntrl_info(qs,flags);
    }
    else ;
    
#line 2484 
    q->pure_rsps += 1UL;
    
#line 2485 
    q->credits += 1U;
    
#line 2485 
    ;
    
#line 2485 
    if (q->credits >= q->size / 4U) {
      
#line 2486 
      refill_rspq(adap,(struct sge_rspq const *)q,q->credits);
      
#line 2487 
      q->credits = 0U;
    }
    else ;
    
#line 2489 
    tmp_1 = is_new_response((struct rsp_desc const *)r,(struct sge_rspq const *)q);
    
#line 2489 
    if (tmp_1 == 0) 
#line 2490 
                    goto ldv_53154; else ;
    
#line 2491 
    ldv_inline_asm();
  }
  
#line 2492 
  tmp_2 = is_pure_response((struct rsp_desc const *)r);
  
#line 2492 
  if (tmp_2 != 0) 
#line 2494 
                  goto ldv_53155; else 
#line 2497 
                                       goto ldv_53154;
  ldv_53154: 
#line 2498 
  ;
  
#line 2494 
  if (sleeping != 0U) 
#line 2495 
                      check_ring_db(adap,qs,sleeping); else ;
  
#line 2496 
  ldv_inline_asm();
  
#line 2498 
  if ((long)(qs->txq_stopped != 0UL) != 0L) 
#line 2499 
                                            restart_tx(qs); else ;
  
#line 2501 
  tmp_3 = is_new_response((struct rsp_desc const *)r,(struct sge_rspq const *)q);
  
#line 2501 
  return tmp_3;
}


#line 2519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int handle_responses(struct adapter *adap, struct sge_rspq *q)
{
  int __retres;
  int tmp_0;
  int tmp_1;
  
#line 2521 
  struct sge_qset *qs = rspq_to_qset((struct sge_rspq const *)q);
  
#line 2522 
  struct rsp_desc *r = q->desc + q->cidx;
  
#line 2524 
  tmp_0 = is_new_response((struct rsp_desc const *)r,(struct sge_rspq const *)q);
  
#line 2524 
  if (tmp_0 == 0) {
    
#line 2525 
    __retres = -1;
    
#line 2525 
    goto return_label;
  }
  else ;
  
#line 2526 
  ldv_inline_asm();
  
#line 2527 
  tmp_1 = is_pure_response((struct rsp_desc const *)r);
  
#line 2527 
  if (tmp_1 != 0) {
    int tmp_2;
    
#line 2527 
    tmp_2 = process_pure_responses(adap,qs,r);
    
#line 2527 
    if (tmp_2 == 0) {
      
#line 2528 
      t3_write_reg(adap,8U,((q->cntxt_id << 29) | (q->holdoff_tmr << 16)) | q->cidx);
      
#line 2530 
      __retres = 0;
      
#line 2530 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2532 
  napi_schedule(& qs->napi);
  
#line 2533 
  __retres = 1;
  return_label: 
#line 2533 
                return __retres;
}


#line 2540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3_sge_intr_msix(int irq, void *cookie)
{
  irqreturn_t __retres;
  int tmp;
  
#line 2542 
  struct sge_qset *qs = (struct sge_qset *)cookie;
  
#line 2543 
  struct adapter *adap = qs->adap;
  
#line 2544 
  struct sge_rspq *q = & qs->rspq;
  
#line 2546 
  ldv_spin_lock_100(& q->lock);
  
#line 2547 
  tmp = process_responses(adap,qs,-1);
  
#line 2547 
  if (tmp == 0) 
#line 2548 
                q->unhandled_irqs += 1UL; else ;
  
#line 2549 
  t3_write_reg(adap,8U,((q->cntxt_id << 29) | (q->next_holdoff << 16)) | q->cidx);
  
#line 2551 
  ldv_spin_unlock_101(& q->lock);
  
#line 2552 
  __retres = IRQ_HANDLED;
  
#line 2552 
  return __retres;
}


#line 2559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3_sge_intr_msix_napi(int irq, void *cookie)
{
  irqreturn_t __retres;
  int tmp;
  
#line 2561 
  struct sge_qset *qs = (struct sge_qset *)cookie;
  
#line 2562 
  struct sge_rspq *q = & qs->rspq;
  
#line 2564 
  ldv_spin_lock_102(& q->lock);
  
#line 2566 
  tmp = handle_responses(qs->adap,q);
  
#line 2566 
  if (tmp < 0) 
#line 2567 
               q->unhandled_irqs += 1UL; else ;
  
#line 2568 
  ldv_spin_unlock_103(& q->lock);
  
#line 2569 
  __retres = IRQ_HANDLED;
  
#line 2569 
  return __retres;
}


#line 2578  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3_intr_msi(int irq, void *cookie)
{
  irqreturn_t __retres;
  int tmp;
  
#line 2580 
  int new_packets = 0;
  
#line 2581 
  struct adapter *adap = (struct adapter *)cookie;
  
#line 2582 
  struct sge_rspq *q = & adap->sge.qs[0].rspq;
  
#line 2584 
  ldv_spin_lock_104(& q->lock);
  
#line 2586 
  tmp = process_responses(adap,& adap->sge.qs[0],-1);
  
#line 2586 
  if (tmp != 0) {
    
#line 2587 
    t3_write_reg(adap,8U,((q->cntxt_id << 29) | (q->next_holdoff << 16)) | q->cidx);
    
#line 2589 
    new_packets = 1;
  }
  else ;
  
#line 2592 
  if (adap->params.nports == 2U) {
    int tmp_0;
    
#line 2592 
    tmp_0 = process_responses(adap,& adap->sge.qs[1],-1);
    
#line 2592 
    if (tmp_0 != 0) {
      
#line 2594 
      struct sge_rspq *q1 = & adap->sge.qs[1].rspq;
      
#line 2596 
      t3_write_reg(adap,8U,((q1->cntxt_id << 29) | (q1->next_holdoff << 16)) | q1->cidx);
      
#line 2599 
      new_packets = 1;
    }
    else ;
  }
  else ;
  
#line 2602 
  if (new_packets == 0) {
    int tmp_1;
    
#line 2602 
    tmp_1 = t3_slow_intr_handler(adap);
    
#line 2602 
    if (tmp_1 == 0) 
#line 2603 
                    q->unhandled_irqs += 1UL; else ;
  }
  else ;
  
#line 2605 
  ldv_spin_unlock_105(& q->lock);
  
#line 2606 
  __retres = IRQ_HANDLED;
  
#line 2606 
  return __retres;
}


#line 2609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static int rspq_check_napi(struct sge_qset *qs)
{
  int __retres;
  int tmp;
  
#line 2611 
  struct sge_rspq *q = & qs->rspq;
  
#line 2613 
  tmp = napi_is_scheduled(& qs->napi);
  
#line 2613 
  if (tmp == 0) {
    int tmp_0;
    
#line 2613 
    tmp_0 = is_new_response((struct rsp_desc const *)(q->desc + q->cidx),(struct sge_rspq const *)q);
    
#line 2613 
    if (tmp_0 != 0) {
      
#line 2615 
      napi_schedule(& qs->napi);
      
#line 2616 
      __retres = 1;
      
#line 2616 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2618 
  __retres = 0;
  return_label: 
#line 2618 
                return __retres;
}


#line 2628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3_intr_msi_napi(int irq, void *cookie)
{
  irqreturn_t __retres;
  int new_packets;
  
#line 2631 
  struct adapter *adap = (struct adapter *)cookie;
  
#line 2632 
  struct sge_rspq *q = & adap->sge.qs[0].rspq;
  
#line 2634 
  ldv_spin_lock_106(& q->lock);
  
#line 2636 
  new_packets = rspq_check_napi(& adap->sge.qs[0]);
  
#line 2637 
  if (adap->params.nports == 2U) {
    int tmp;
    
#line 2638 
    tmp = rspq_check_napi(& adap->sge.qs[1]);
    
#line 2638 
    new_packets = tmp + new_packets;
  }
  else ;
  
#line 2639 
  if (new_packets == 0) {
    int tmp_0;
    
#line 2639 
    tmp_0 = t3_slow_intr_handler(adap);
    
#line 2639 
    if (tmp_0 == 0) 
#line 2640 
                    q->unhandled_irqs += 1UL; else ;
  }
  else ;
  
#line 2642 
  ldv_spin_unlock_107(& q->lock);
  
#line 2643 
  __retres = IRQ_HANDLED;
  
#line 2643 
  return __retres;
}


#line 2649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
__inline static int process_responses_gts(struct adapter *adap, struct sge_rspq *rq)
{
  int work;
  struct sge_qset *tmp;
  
#line 2654 
  tmp = rspq_to_qset((struct sge_rspq const *)rq);
  
#line 2654 
  ;
  
#line 2654 
  work = process_responses(adap,tmp,-1);
  
#line 2655 
  t3_write_reg(adap,8U,((rq->cntxt_id << 29) | (rq->next_holdoff << 16)) | rq->cidx);
  
#line 2657 
  return work;
}


#line 2666  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3_intr(int irq, void *cookie)
{
  irqreturn_t __retres;
  int work_done;
  int w0;
  int w1;
  int tmp_0;
  
#line 2669 
  struct adapter *adap = (struct adapter *)cookie;
  
#line 2670 
  struct sge_rspq *q0 = & adap->sge.qs[0].rspq;
  
#line 2671 
  struct sge_rspq *q1 = & adap->sge.qs[1].rspq;
  
#line 2673 
  ldv_spin_lock_108(& q0->lock);
  
#line 2675 
  w0 = is_new_response((struct rsp_desc const *)(q0->desc + q0->cidx),(struct sge_rspq const *)q0);
  
#line 2676 
  if (adap->params.nports == 2U) {
    int tmp;
    
#line 2676 
    tmp = is_new_response((struct rsp_desc const *)(q1->desc + q1->cidx),(struct sge_rspq const *)q1);
    
#line 2676 
    if (tmp != 0) 
#line 2676 
                  tmp_0 = 1; else 
#line 2676 
                                  tmp_0 = 0;
  }
  else 
#line 2676 
       tmp_0 = 0;
  
#line 2676 
  w1 = tmp_0;
  
#line 2679 
  if ((long)((w0 | w1) != 0) != 0L) {
    
#line 2680 
    t3_write_reg(adap,1784U,0U);
    
#line 2681 
    t3_read_reg(adap,1784U);
    
#line 2683 
    if ((long)(w0 != 0) != 0L) 
#line 2684 
                               process_responses_gts(adap,q0); else ;
    
#line 2686 
    if (w1 != 0) 
#line 2687 
                 process_responses_gts(adap,q1); else ;
    
#line 2689 
    work_done = w0 | w1;
  }
  else 
#line 2691 
       work_done = t3_slow_intr_handler(adap);
  
#line 2693 
  ldv_spin_unlock_109(& q0->lock);
  
#line 2694 
  __retres = (enum irqreturn)(work_done != 0);
  
#line 2694 
  return __retres;
}


#line 2704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3b_intr(int irq, void *cookie)
{
  irqreturn_t __retres;
  u32 map;
  
#line 2707 
  struct adapter *adap = (struct adapter *)cookie;
  
#line 2708 
  struct sge_rspq *q0 = & adap->sge.qs[0].rspq;
  
#line 2710 
  t3_write_reg(adap,1784U,0U);
  
#line 2711 
  map = t3_read_reg(adap,52U);
  
#line 2713 
  if ((long)(map == 0U) != 0L) {
    
#line 2714 
    __retres = IRQ_NONE;
    
#line 2714 
    goto return_label;
  }
  else ;
  
#line 2716 
  ldv_spin_lock_110(& q0->lock);
  
#line 2718 
  if ((long)(map < (u32)0) != 0L) 
#line 2719 
                                  t3_slow_intr_handler(adap); else ;
  
#line 2721 
  if ((long)((map & 1U) != 0U) != 0L) 
#line 2722 
                                      process_responses_gts(adap,q0); else ;
  
#line 2724 
  if ((map & 2U) != 0U) 
#line 2725 
                        process_responses_gts(adap,& adap->sge.qs[1].rspq); else ;
  
#line 2727 
  ldv_spin_unlock_111(& q0->lock);
  
#line 2728 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2728 
                return __retres;
}


#line 2738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static irqreturn_t t3b_intr_napi(int irq, void *cookie)
{
  irqreturn_t __retres;
  u32 map;
  
#line 2741 
  struct adapter *adap = (struct adapter *)cookie;
  
#line 2742 
  struct sge_qset *qs0 = & adap->sge.qs[0];
  
#line 2743 
  struct sge_rspq *q0 = & qs0->rspq;
  
#line 2745 
  t3_write_reg(adap,1784U,0U);
  
#line 2746 
  map = t3_read_reg(adap,52U);
  
#line 2748 
  if ((long)(map == 0U) != 0L) {
    
#line 2749 
    __retres = IRQ_NONE;
    
#line 2749 
    goto return_label;
  }
  else ;
  
#line 2751 
  ldv_spin_lock_112(& q0->lock);
  
#line 2753 
  if ((long)(map < (u32)0) != 0L) 
#line 2754 
                                  t3_slow_intr_handler(adap); else ;
  
#line 2756 
  if ((long)((map & 1U) != 0U) != 0L) 
#line 2757 
                                      napi_schedule(& qs0->napi); else ;
  
#line 2759 
  if ((map & 2U) != 0U) 
#line 2760 
                        napi_schedule(& adap->sge.qs[1].napi); else ;
  
#line 2762 
  ldv_spin_unlock_113(& q0->lock);
  
#line 2763 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2763 
                return __retres;
}


#line 2775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
irq_handler_t t3_intr_handler(struct adapter *adap, int polling)
{
  irq_handler_t __retres;
  
#line 2777 
  if ((adap->flags & 4UL) != 0UL) {
    irqreturn_t (*tmp)(int irq, void *cookie);
    
#line 2778 
    if (polling != 0) 
#line 2778 
                      tmp = & t3_sge_intr_msix_napi; else 
#line 2778 
                                                          tmp = & t3_sge_intr_msix;
    
#line 2778 
    __retres = tmp;
    
#line 2778 
    goto return_label;
  }
  else ;
  
#line 2779 
  if ((adap->flags & 2UL) != 0UL) {
    irqreturn_t (*tmp_0)(int irq, void *cookie);
    
#line 2780 
    if (polling != 0) 
#line 2780 
                      tmp_0 = & t3_intr_msi_napi; else 
#line 2780 
                                                       tmp_0 = & t3_intr_msi;
    
#line 2780 
    __retres = tmp_0;
    
#line 2780 
    goto return_label;
  }
  else ;
  
#line 2781 
  if (adap->params.rev != 0U) {
    irqreturn_t (*tmp_1)(int irq, void *cookie);
    
#line 2782 
    if (polling != 0) 
#line 2782 
                      tmp_1 = & t3b_intr_napi; else 
#line 2782 
                                                    tmp_1 = & t3b_intr;
    
#line 2782 
    __retres = tmp_1;
    
#line 2782 
    goto return_label;
  }
  else ;
  
#line 2783 
  __retres = & t3_intr;
  return_label: 
#line 2783 
                return __retres;
}


#line 2801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_sge_err_intr_handler(struct adapter *adapter)
{
  unsigned int v;
  u32 tmp;
  
#line 2803 
  tmp = t3_read_reg(adapter,92U);
  
#line 2803 
  unsigned int status = tmp & 4294967293U;
  
#line 2806 
  if ((status & 4294901760U) != 0U) 
#line 2807 
                                    dev_alert((struct device const *)(& (adapter->pdev)->dev),"SGE parity error (0x%x)\n",status & 4294901760U); else ;
  
#line 2809 
  if ((status & 49152U) != 0U) 
#line 2810 
                               dev_alert((struct device const *)(& (adapter->pdev)->dev),"SGE framing error (0x%x)\n",status & 49152U); else ;
  
#line 2813 
  if ((status & 4U) != 0U) 
#line 2814 
                           dev_alert((struct device const *)(& (adapter->pdev)->dev),"SGE response queue credit overflow\n"); else ;
  
#line 2816 
  if ((status & 8U) != 0U) {
    
#line 2817 
    v = t3_read_reg(adapter,76U);
    
#line 2819 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"packet delivered to disabled response queue ",(v >> 8) & 255U);
  }
  else ;
  
#line 2824 
  if ((status & 3072U) != 0U) 
#line 2825 
                              ldv_queue_work_114(cxgb3_wq,& adapter->db_drop_task); else ;
  
#line 2827 
  if ((status & 160U) != 0U) 
#line 2828 
                             ldv_queue_work_115(cxgb3_wq,& adapter->db_full_task); else ;
  
#line 2830 
  if ((status & 80U) != 0U) 
#line 2831 
                            ldv_queue_work_116(cxgb3_wq,& adapter->db_empty_task); else ;
  
#line 2833 
  t3_write_reg(adapter,92U,status);
  
#line 2834 
  if ((status & 4294950924U) != 0U) 
#line 2835 
                                    t3_fatal_err(adapter); else ;
  
#line 2836 
  return;
}


#line 2856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void sge_timer_tx(unsigned long data)
{
  unsigned long next_period;
  bool tmp_0;
  int tmp_1;
  unsigned int tmp_3;
  
#line 2858 
  struct sge_qset *qs = (struct sge_qset *)data;
  
#line 2859 
  struct port_info *pi = netdev_priv((struct net_device const *)qs->netdev);
  
#line 2860 
  struct adapter *adap = pi->adapter;
  
#line 2861 
  unsigned int tbd[3U] = {0U, 0U};
  
#line 2864 
  tmp_0 = __netif_tx_trylock(qs->tx_q);
  
#line 2864 
  if ((int)tmp_0 != 0) {
    
#line 2865 
    tbd[0] = reclaim_completed_tx(adap,& qs->txq[0],64U);
    
#line 2867 
    __netif_tx_unlock(qs->tx_q);
  }
  else ;
  
#line 2870 
  tmp_1 = ldv_spin_trylock_117(& qs->txq[1].lock);
  
#line 2870 
  if (tmp_1 != 0) {
    
#line 2871 
    tbd[1] = reclaim_completed_tx(adap,& qs->txq[1],64U);
    
#line 2873 
    ldv_spin_unlock_118(& qs->txq[1].lock);
  }
  else ;
  {
    unsigned int tmp_2;
    
#line 2877 
    unsigned int _max1 = tbd[0];
    
#line 2877 
    unsigned int _max2 = tbd[1];
    
#line 2877 
    if (_max1 > _max2) 
#line 2877 
                       tmp_2 = _max1; else 
#line 2877 
                                           tmp_2 = _max2;
    
#line 2877 
    tmp_3 = tmp_2;
  }
  
#line 2876 
  next_period = (unsigned long)(62 >> tmp_3 / 64U);
  
#line 2879 
  ldv_mod_timer_119(& qs->tx_reclaim_timer,jiffies + next_period);
  
#line 2880 
  return;
}


#line 2896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
static void sge_timer_rx(unsigned long data)
{
  spinlock_t *lock;
  u32 status;
  int tmp_0;
  int tmp_1;
  
#line 2899 
  struct sge_qset *qs = (struct sge_qset *)data;
  
#line 2900 
  struct port_info *pi = netdev_priv((struct net_device const *)qs->netdev);
  
#line 2901 
  struct adapter *adap = pi->adapter;
  
#line 2904 
  if (adap->params.rev != 0U) 
#line 2904 
                              lock = & qs->rspq.lock; else 
#line 2904 
                                                           lock = & adap->sge.qs[0].rspq.lock;
  
#line 2907 
  tmp_0 = ldv_spin_trylock_irq_120(lock);
  
#line 2907 
  if (tmp_0 == 0) 
#line 2908 
                  goto out; else ;
  
#line 2910 
  tmp_1 = napi_is_scheduled(& qs->napi);
  
#line 2910 
  if (tmp_1 != 0) 
#line 2911 
                  goto unlock; else ;
  
#line 2913 
  if (adap->params.rev <= 3U) {
    
#line 2914 
    status = t3_read_reg(adap,76U);
    
#line 2916 
    if (((unsigned int)(1 << qs->rspq.cntxt_id) & status) != 0U) {
      
#line 2917 
      qs->rspq.starved += 1UL;
      
#line 2918 
      if (qs->rspq.credits != 0U) {
        
#line 2919 
        qs->rspq.credits -= 1U;
        
#line 2920 
        refill_rspq(adap,(struct sge_rspq const *)(& qs->rspq),1U);
        
#line 2921 
        qs->rspq.restarted += 1UL;
        
#line 2922 
        t3_write_reg(adap,76U,(unsigned int)(1 << qs->rspq.cntxt_id));
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2928 
  if (qs->fl[0].credits < qs->fl[0].size) 
#line 2929 
                                          __refill_fl(adap,& qs->fl[0]); else ;
  
#line 2930 
  if (qs->fl[1].credits < qs->fl[1].size) 
#line 2931 
                                          __refill_fl(adap,& qs->fl[1]); else ;
  unlock: 
#line 2933 
  ;
  
#line 2934 
  ldv_spin_unlock_irq_121(lock);
  out: 
#line 2935 
  ;
  
#line 2936 
  ldv_mod_timer_122(& qs->rx_reclaim_timer,jiffies + 62UL);
  
#line 2937 
  return;
}


#line 2947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_update_qset_coalesce(struct sge_qset *qs, struct qset_params const *p)
{
  unsigned int tmp_0;
  {
    unsigned int tmp;
    
#line 2949 
    unsigned int _max1 = p->coalesce_usecs * 10U;
    
#line 2949 
    unsigned int _max2 = 1U;
    
#line 2949 
    if (_max1 > _max2) 
#line 2949 
                       tmp = _max1; else 
#line 2949 
                                         tmp = _max2;
    
#line 2949 
    tmp_0 = tmp;
  }
  
#line 2949 
  qs->rspq.holdoff_tmr = tmp_0;
  
#line 2950 
  qs->rspq.polling = p->polling;
  
#line 2951 
  if (p->polling != 0U) 
#line 2951 
                        qs->napi.poll = & napi_rx_handler; else 
#line 2951 
                                                                qs->napi.poll = & ofld_poll;
  
#line 2952 
  return;
}


#line 2970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
int t3_sge_alloc_qset(struct adapter *adapter, unsigned int id, int nports, int irq_vec_idx, struct qset_params const *p, int ntxq, struct net_device *dev, struct netdev_queue *netdevq)
{
  int __retres;
  int i;
  int avail;
  unsigned int tmp_4;
  unsigned int tmp_6;
  unsigned int tmp_5;
  
#line 2975 
  int ret = -12;
  
#line 2976 
  struct sge_qset *q = & adapter->sge.qs[id];
  
#line 2978 
  init_qset_cntxt(q,id);
  {
    struct lock_class_key __key;
    
#line 2979 
    init_timer_key(& q->tx_reclaim_timer,0U,"((&q->tx_reclaim_timer))",& __key);
  }
  
#line 2979 
  q->tx_reclaim_timer.function = & sge_timer_tx;
  
#line 2979 
  q->tx_reclaim_timer.data = (unsigned long)q;
  {
    struct lock_class_key __key_0;
    
#line 2980 
    init_timer_key(& q->rx_reclaim_timer,0U,"((&q->rx_reclaim_timer))",& __key_0);
  }
  
#line 2980 
  q->rx_reclaim_timer.function = & sge_timer_rx;
  
#line 2980 
  q->rx_reclaim_timer.data = (unsigned long)q;
  
#line 2982 
  q->fl[0].desc = (struct rx_desc *)alloc_ring(adapter->pdev,(unsigned long)p->fl_size,16UL,48UL,& q->fl[0].phys_addr,(void *)(& q->fl[0].sdesc));
  
#line 2986 
  if (q->fl[0].desc == (struct rx_desc *)0) 
#line 2987 
                                            goto err; else ;
  
#line 2989 
  q->fl[1].desc = (struct rx_desc *)alloc_ring(adapter->pdev,(unsigned long)p->jumbo_size,16UL,48UL,& q->fl[1].phys_addr,(void *)(& q->fl[1].sdesc));
  
#line 2993 
  if (q->fl[1].desc == (struct rx_desc *)0) 
#line 2994 
                                            goto err; else ;
  
#line 2996 
  q->rspq.desc = (struct rsp_desc *)alloc_ring(adapter->pdev,(unsigned long)p->rspq_size,64UL,0UL,& q->rspq.phys_addr,(void *)0);
  
#line 2999 
  if (q->rspq.desc == (struct rsp_desc *)0) 
#line 3000 
                                            goto err; else ;
  
#line 3002 
  i = 0;
  
#line 3002 
  goto ldv_53281;
  ldv_53280: 
#line 3003 
  ;
  {
    unsigned long tmp_2;
    
#line 3007 
    if (i == 2) 
#line 3007 
                tmp_2 = 0UL; else 
#line 3007 
                                  tmp_2 = 16UL;
    
#line 3007 
    size_t sz = tmp_2;
    
#line 3009 
    q->txq[i].desc = (struct tx_desc *)alloc_ring(adapter->pdev,(unsigned long)p->txq_size[i],128UL,sz,& q->txq[i].phys_addr,(void *)(& q->txq[i].sdesc));
    
#line 3013 
    if (q->txq[i].desc == (struct tx_desc *)0) 
#line 3014 
                                               goto err; else ;
    
#line 3016 
    q->txq[i].gen = 1U;
    
#line 3017 
    q->txq[i].size = p->txq_size[i];
    
#line 3018 
    spinlock_check(& q->txq[i].lock);
    {
      struct lock_class_key __key_1;
      
#line 3018 
      __raw_spin_lock_init(& q->txq[i].lock.__anonCompField_spinlock_18.rlock,"&(&q->txq[i].lock)->rlock",& __key_1);
    }
    
#line 3019 
    skb_queue_head_init(& q->txq[i].sendq);
  }
  
#line 3002 
  i += 1;
  ldv_53281: 
#line 3003 
  ;
  
#line 3002 
  if (i < ntxq) 
#line 3004 
                goto ldv_53280; else 
#line 3007 
                                     goto ldv_53282;
  ldv_53282: 
#line 3008 
  ;
  
#line 3022 
  ldv_tasklet_init_123(& q->txq[1].qresume_tsk,& restart_offloadq,(unsigned long)q);
  
#line 3024 
  ldv_tasklet_init_124(& q->txq[2].qresume_tsk,& restart_ctrlq,(unsigned long)q);
  
#line 3027 
  tmp_4 = 1U;
  
#line 3027 
  q->fl[1].gen = tmp_4;
  
#line 3027 
  q->fl[0].gen = tmp_4;
  
#line 3028 
  q->fl[0].size = p->fl_size;
  
#line 3029 
  q->fl[1].size = p->jumbo_size;
  
#line 3031 
  q->rspq.gen = 1U;
  
#line 3032 
  q->rspq.size = p->rspq_size;
  
#line 3033 
  spinlock_check(& q->rspq.lock);
  {
    struct lock_class_key __key_2;
    
#line 3033 
    __raw_spin_lock_init(& q->rspq.lock.__anonCompField_spinlock_18.rlock,"&(&q->rspq.lock)->rlock",& __key_2);
  }
  
#line 3034 
  skb_queue_head_init(& q->rspq.rx_queue);
  
#line 3037 
  tmp_5 = sgl_len(18U);
  
#line 3036 
  tmp_6 = flits_to_desc(tmp_5 + 3U);
  
#line 3036 
  q->txq[0].stop_thres = tmp_6 * (unsigned int)nports;
  
#line 3040 
  q->fl[0].buf_size = 2048U;
  
#line 3045 
  q->fl[1].buf_size = 8192U;
  
#line 3052 
  q->fl[0].use_pages = 1U;
  
#line 3053 
  q->fl[1].use_pages = 1U;
  
#line 3054 
  q->fl[0].order = 0U;
  
#line 3055 
  q->fl[1].order = 1U;
  
#line 3056 
  q->fl[0].alloc_size = 4096U;
  
#line 3057 
  q->fl[1].alloc_size = 8192U;
  
#line 3059 
  ldv_spin_lock_irq_125(& adapter->sge.reg_lock);
  
#line 3062 
  ret = t3_sge_init_rspcntxt(adapter,q->rspq.cntxt_id,irq_vec_idx,q->rspq.phys_addr,q->rspq.size,q->fl[0].buf_size + 4294967232U,1,0U);
  
#line 3065 
  if (ret != 0) 
#line 3066 
                goto err_unlock; else ;
  
#line 3068 
  i = 0;
  
#line 3068 
  goto ldv_53286;
  ldv_53285: 
#line 3069 
  ;
  
#line 3069 
  ret = t3_sge_init_flcntxt(adapter,q->fl[i].cntxt_id,0,q->fl[i].phys_addr,q->fl[i].size,q->fl[i].buf_size + 4294967232U,p->cong_thres,1,0U);
  
#line 3073 
  if (ret != 0) 
#line 3074 
                goto err_unlock; else ;
  
#line 3068 
  i += 1;
  ldv_53286: 
#line 3069 
  ;
  
#line 3068 
  if (i <= 1) 
#line 3070 
              goto ldv_53285; else 
#line 3073 
                                   goto ldv_53287;
  ldv_53287: 
#line 3074 
  ;
  
#line 3077 
  ret = t3_sge_init_ecntxt(adapter,q->txq[0].cntxt_id,0,(enum sge_context_type)SGE_CNTXT_ETH,(int)id,q->txq[0].phys_addr,q->txq[0].size,q->txq[0].token,1,0U);
  
#line 3081 
  if (ret != 0) 
#line 3082 
                goto err_unlock; else ;
  
#line 3084 
  if (ntxq > 1) {
    
#line 3085 
    ret = t3_sge_init_ecntxt(adapter,q->txq[1].cntxt_id,0,(enum sge_context_type)SGE_CNTXT_OFLD,(int)id,q->txq[1].phys_addr,q->txq[1].size,0U,1,0U);
    
#line 3089 
    if (ret != 0) 
#line 3090 
                  goto err_unlock; else ;
  }
  else ;
  
#line 3093 
  if (ntxq > 2) {
    
#line 3094 
    ret = t3_sge_init_ecntxt(adapter,q->txq[2].cntxt_id,0,(enum sge_context_type)SGE_CNTXT_CTRL,(int)id,q->txq[2].phys_addr,q->txq[2].size,q->txq[2].token,1,0U);
    
#line 3099 
    if (ret != 0) 
#line 3100 
                  goto err_unlock; else ;
  }
  else ;
  
#line 3103 
  ldv_spin_unlock_irq_126(& adapter->sge.reg_lock);
  
#line 3105 
  q->adap = adapter;
  
#line 3106 
  q->netdev = dev;
  
#line 3107 
  q->tx_q = netdevq;
  
#line 3108 
  t3_update_qset_coalesce(q,p);
  
#line 3110 
  avail = refill_fl(adapter,& q->fl[0],(int)q->fl[0].size,16592U);
  
#line 3112 
  if (avail == 0) {
    
#line 3113 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"free list queue 0 initialization failed\n");
    
#line 3114 
    goto err;
  }
  else ;
  
#line 3116 
  if (q->fl[0].size > (unsigned int)avail) 
#line 3117 
                                           dev_warn((struct device const *)(& (adapter->pdev)->dev),"free list queue 0 enabled with %d credits\n",avail); else ;
  
#line 3120 
  avail = refill_fl(adapter,& q->fl[1],(int)q->fl[1].size,16592U);
  
#line 3122 
  if (q->fl[1].size > (unsigned int)avail) 
#line 3123 
                                           dev_warn((struct device const *)(& (adapter->pdev)->dev),"free list queue 1 enabled with %d credits\n",avail); else ;
  
#line 3125 
  refill_rspq(adapter,(struct sge_rspq const *)(& q->rspq),q->rspq.size + 4294967295U);
  
#line 3127 
  t3_write_reg(adapter,8U,(q->rspq.cntxt_id << 29) | (q->rspq.holdoff_tmr << 16));
  
#line 3130 
  __retres = 0;
  
#line 3130 
  goto return_label;
  err_unlock: 
#line 3132 
  ;
  
#line 3133 
  ldv_spin_unlock_irq_127(& adapter->sge.reg_lock);
  err: 
#line 3134 
  ;
  
#line 3135 
  t3_free_qset(adapter,q);
  
#line 3136 
  __retres = ret;
  return_label: 
#line 3136 
                return __retres;
}


#line 3145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_start_sge_timers(struct adapter *adap)
{
  int i;
  
#line 3149 
  i = 0;
  
#line 3149 
  goto ldv_53294;
  ldv_53293: 
#line 3150 
  ;
  {
    
#line 3150 
    struct sge_qset *q = & adap->sge.qs[i];
    
#line 3152 
    if (q->tx_reclaim_timer.function != (void (*)(unsigned long ))0) 
      
#line 3153 
      ldv_mod_timer_128(& q->tx_reclaim_timer,jiffies + 62UL); else ;
    
#line 3155 
    if (q->rx_reclaim_timer.function != (void (*)(unsigned long ))0) 
      
#line 3156 
      ldv_mod_timer_129(& q->rx_reclaim_timer,jiffies + 62UL); else ;
  }
  
#line 3149 
  i += 1;
  ldv_53294: 
#line 3150 
  ;
  
#line 3149 
  if (i <= 7) 
#line 3151 
              goto ldv_53293; else 
#line 3154 
                                   goto ldv_53295;
  ldv_53295: 
#line 3155 
  ;
  
#line 3156 
  return;
}


#line 3166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_stop_sge_timers(struct adapter *adap)
{
  int i;
  
#line 3170 
  i = 0;
  
#line 3170 
  goto ldv_53302;
  ldv_53301: 
#line 3171 
  ;
  {
    
#line 3171 
    struct sge_qset *q = & adap->sge.qs[i];
    
#line 3173 
    if (q->tx_reclaim_timer.function != (void (*)(unsigned long ))0) 
      
#line 3174 
      ldv_del_timer_sync_130(& q->tx_reclaim_timer); else ;
    
#line 3175 
    if (q->rx_reclaim_timer.function != (void (*)(unsigned long ))0) 
      
#line 3176 
      ldv_del_timer_sync_131(& q->rx_reclaim_timer); else ;
  }
  
#line 3170 
  i += 1;
  ldv_53302: 
#line 3171 
  ;
  
#line 3170 
  if (i <= 7) 
#line 3172 
              goto ldv_53301; else 
#line 3175 
                                   goto ldv_53303;
  ldv_53303: 
#line 3176 
  ;
  
#line 3177 
  return;
}


#line 3186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_free_sge_resources(struct adapter *adap)
{
  int i;
  
#line 3190 
  i = 0;
  
#line 3190 
  goto ldv_53309;
  ldv_53308: 
#line 3191 
  ;
  
#line 3191 
  t3_free_qset(adap,& adap->sge.qs[i]);
  
#line 3190 
  i += 1;
  ldv_53309: 
#line 3191 
  ;
  
#line 3190 
  if (i <= 7) 
#line 3192 
              goto ldv_53308; else 
#line 3195 
                                   goto ldv_53310;
  ldv_53310: 
#line 3196 
  ;
  
#line 3197 
  return;
}


#line 3201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_sge_start(struct adapter *adap)
{
  
#line 3203 
  t3_set_reg_field(adap,0U,1U,1U);
  
#line 3204 
  return;
}


#line 3219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_sge_stop(struct adapter *adap)
{
  int tmp;
  
#line 3221 
  t3_set_reg_field(adap,0U,1U,0U);
  
#line 3222 
  tmp = preempt_count();
  
#line 3222 
  if (((unsigned long)tmp & 2096896UL) == 0UL) {
    int i;
    
#line 3225 
    i = 0;
    
#line 3225 
    goto ldv_53320;
    ldv_53319: 
#line 3226 
    ;
    {
      
#line 3226 
      struct sge_qset *qs = & adap->sge.qs[i];
      
#line 3228 
      tasklet_kill(& qs->txq[1].qresume_tsk);
      
#line 3229 
      tasklet_kill(& qs->txq[2].qresume_tsk);
    }
    
#line 3225 
    i += 1;
    ldv_53320: 
#line 3226 
    ;
    
#line 3225 
    if (i <= 7) 
#line 3227 
                goto ldv_53319; else 
#line 3230 
                                     goto ldv_53321;
    ldv_53321: 
#line 3231 
    ;
  }
  else ;
  
#line 3233 
  return;
}


#line 3244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_sge_init(struct adapter *adap, struct sge_params *p)
{
  unsigned int ctrl;
  int tmp_0;
  int tmp;
  unsigned int tmp_1;
  unsigned int tmp_2;
  int tmp_3;
  
#line 3246 
  if ((adap->pdev)->resource[2].start != 0ULL || (adap->pdev)->resource[2].end != (adap->pdev)->resource[2].start) 
    
#line 3246 
    tmp = (int)((((adap->pdev)->resource[2].end - (adap->pdev)->resource[2].start) + 1ULL) >> 12); else 
                                                                    
#line 3246 
                                                                    tmp = 0;
  
#line 3246 
  tmp_0 = ffs(tmp);
  
#line 3246 
  unsigned int ups = (unsigned int)tmp_0;
  
#line 3248 
  if (ups != 0U) 
#line 3248 
                 ctrl = ((ups + 4294967295U) << 14) | 961546886U; else 
                                                                    
#line 3248 
                                                                    ctrl = 961546886U;
  
#line 3255 
  if (adap->params.rev != 0U) {
    
#line 3256 
    if ((adap->flags & 6UL) == 0UL) 
#line 3257 
                                    ctrl |= 8388640U; else ;
  }
  else ;
  
#line 3259 
  t3_write_reg(adap,0U,ctrl);
  
#line 3260 
  t3_write_reg(adap,84U,33554944U);
  
#line 3262 
  tmp_1 = core_ticks_per_usec((struct adapter const *)adap);
  
#line 3262 
  ;
  
#line 3262 
  t3_write_reg(adap,104U,tmp_1 / 10U);
  
#line 3263 
  tmp_2 = core_ticks_per_usec((struct adapter const *)adap);
  
#line 3263 
  ;
  
#line 3263 
  t3_write_reg(adap,100U,(tmp_2 * 200U << 8) | 32U);
  
#line 3266 
  if (adap->params.rev <= 3U) 
#line 3266 
                              tmp_3 = 1000; else 
#line 3266 
                                                 tmp_3 = 500;
  
#line 3265 
  ;
  
#line 3265 
  t3_write_reg(adap,56U,(unsigned int)tmp_3);
  
#line 3267 
  t3_write_reg(adap,60U,256U);
  
#line 3268 
  t3_write_reg(adap,64U,1000U);
  
#line 3269 
  t3_write_reg(adap,68U,256U);
  
#line 3270 
  t3_write_reg(adap,112U,268369920U);
  
#line 3271 
  t3_write_reg(adap,116U,64512U);
  
#line 3272 
  return;
}


#line 3283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/sge.c"
void t3_sge_prep(struct adapter *adap, struct sge_params *p)
{
  int i;
  
#line 3287 
  p->max_pkt_size = 16048U;
  
#line 3290 
  i = 0;
  
#line 3290 
  goto ldv_53335;
  ldv_53334: 
#line 3291 
  ;
  {
    
#line 3291 
    struct qset_params *q = (struct qset_params *)(& p->qset) + i;
    
#line 3293 
    q->polling = (unsigned int)(adap->params.rev != 0U);
    
#line 3294 
    q->coalesce_usecs = 5U;
    
#line 3295 
    q->rspq_size = 1024U;
    
#line 3296 
    q->fl_size = 1024U;
    
#line 3297 
    q->jumbo_size = 512U;
    
#line 3298 
    q->txq_size[0] = 1024U;
    
#line 3299 
    q->txq_size[1] = 1024U;
    
#line 3300 
    q->txq_size[2] = 256U;
    
#line 3301 
    q->cong_thres = 0U;
  }
  
#line 3290 
  i += 1;
  ldv_53335: 
#line 3291 
  ;
  
#line 3290 
  if (i <= 7) 
#line 3292 
              goto ldv_53334; else 
#line 3295 
                                   goto ldv_53336;
  ldv_53336: 
#line 3296 
  ;
  
#line 3304 
  spinlock_check(& adap->sge.reg_lock);
  {
    struct lock_class_key __key;
    
#line 3304 
    __raw_spin_lock_init(& adap->sge.reg_lock.__anonCompField_spinlock_18.rlock,"&(&adap->sge.reg_lock)->rlock",& __key);
  }
  
#line 3306 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
void (*ldv_emg_alias_None_2)(unsigned long ) = & restart_offloadq;

#line 59 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 60 
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2);


#line 63 
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0);


#line 65 
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1);


#line 73 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 133 
  ldv_atomic_inc(v);
  
#line 134 
  return;
}


#line 439  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 442 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 442 
  return tmp;
}


#line 650  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_spin_trylock_64(spinlock_t *lock)
{
  int __retres;
  
#line 654 
  ldv_func_ret_type ldv_func_res = spin_trylock(lock);
  
#line 656 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 658 
  if (is_spin_held_by_another_thread != 0) {
    
#line 661 
    __retres = 0;
    
#line 661 
    goto return_label;
  }
  else {
    
#line 664 
    ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
    
#line 666 
    __retres = 1;
    
#line 666 
    goto return_label;
  }
  
#line 669 
  __retres = ldv_func_res;
  return_label: 
#line 669 
                return __retres;
}


#line 673  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_65(spinlock_t *lock)
{
  
#line 677 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 679 
  spin_unlock(lock);
  
#line 680 
  return;
}


#line 773  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_irq_75(spinlock_t *lock)
{
  
#line 777 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 779 
  spin_lock_irq(lock);
  
#line 780 
  return;
}


#line 783  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_76(spinlock_t *lock)
{
  
#line 787 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 789 
  spin_unlock_irq(lock);
  
#line 790 
  return;
}


#line 793  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_irq_77(spinlock_t *lock)
{
  
#line 797 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 799 
  spin_lock_irq(lock);
  
#line 800 
  return;
}


#line 803  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_78(spinlock_t *lock)
{
  
#line 807 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 809 
  spin_unlock_irq(lock);
  
#line 810 
  return;
}


#line 813  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_irq_79(spinlock_t *lock)
{
  
#line 817 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 819 
  spin_lock_irq(lock);
  
#line 820 
  return;
}


#line 823  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_80(spinlock_t *lock)
{
  
#line 827 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 829 
  spin_unlock_irq(lock);
  
#line 830 
  return;
}


#line 833  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_81(spinlock_t *lock)
{
  
#line 837 
  ldv_spin_model_lock((char *)"lock_of_sge_txq");
  
#line 839 
  spin_lock(lock);
  
#line 840 
  return;
}


#line 843  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_82(spinlock_t *lock)
{
  
#line 847 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 849 
  spin_unlock(lock);
  
#line 850 
  return;
}


#line 853  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_83(spinlock_t *lock)
{
  
#line 857 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 859 
  spin_unlock(lock);
  
#line 860 
  return;
}


#line 863  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_84(spinlock_t *lock)
{
  
#line 867 
  ldv_spin_model_lock((char *)"lock_of_sge_txq");
  
#line 869 
  spin_lock(lock);
  
#line 870 
  return;
}


#line 873  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_85(spinlock_t *lock)
{
  
#line 877 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 879 
  spin_unlock(lock);
  
#line 880 
  return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_86(spinlock_t *lock)
{
  
#line 887 
  ldv_spin_model_lock((char *)"lock_of_sge_txq");
  
#line 889 
  spin_lock(lock);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_87(spinlock_t *lock)
{
  
#line 897 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 899 
  spin_unlock(lock);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_88(spinlock_t *lock)
{
  
#line 907 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 909 
  spin_unlock(lock);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_89(spinlock_t *lock)
{
  
#line 917 
  ldv_spin_model_lock((char *)"lock_of_sge_txq");
  
#line 919 
  spin_lock(lock);
  
#line 920 
  return;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_90(spinlock_t *lock)
{
  
#line 927 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 929 
  spin_unlock(lock);
  
#line 930 
  return;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_91(spinlock_t *lock)
{
  
#line 937 
  ldv_spin_model_lock((char *)"lock_of_sge_txq");
  
#line 939 
  spin_lock(lock);
  
#line 940 
  return;
}


#line 943  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_92(spinlock_t *lock)
{
  
#line 947 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 949 
  spin_unlock(lock);
  
#line 950 
  return;
}


#line 953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_irq_93(spinlock_t *lock)
{
  
#line 957 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 959 
  spin_lock_irq(lock);
  
#line 960 
  return;
}


#line 963  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_94(spinlock_t *lock)
{
  
#line 967 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 969 
  spin_unlock_irq(lock);
  
#line 970 
  return;
}


#line 973  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_95(spinlock_t *lock)
{
  
#line 977 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 979 
  spin_unlock_irq(lock);
  
#line 980 
  return;
}


#line 983  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_irq_96(spinlock_t *lock)
{
  
#line 987 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 989 
  spin_lock_irq(lock);
  
#line 990 
  return;
}


#line 993  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_97(spinlock_t *lock)
{
  
#line 997 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 999 
  spin_unlock_irq(lock);
  
#line 1000 
  return;
}


#line 1003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_tasklet_schedule_98(struct tasklet_struct *t)
{
  
#line 1007 
  ldv_emg_tasklet_schedule(t);
  
#line 1008 
  return;
}


#line 1011  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_tasklet_schedule_99(struct tasklet_struct *t)
{
  
#line 1015 
  ldv_emg_tasklet_schedule(t);
  
#line 1016 
  return;
}


#line 1019  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_100(spinlock_t *lock)
{
  
#line 1023 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1025 
  spin_lock(lock);
  
#line 1026 
  return;
}


#line 1029  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_101(spinlock_t *lock)
{
  
#line 1033 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1035 
  spin_unlock(lock);
  
#line 1036 
  return;
}


#line 1039  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_102(spinlock_t *lock)
{
  
#line 1043 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1045 
  spin_lock(lock);
  
#line 1046 
  return;
}


#line 1049  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_103(spinlock_t *lock)
{
  
#line 1053 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1055 
  spin_unlock(lock);
  
#line 1056 
  return;
}


#line 1059  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_104(spinlock_t *lock)
{
  
#line 1063 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1065 
  spin_lock(lock);
  
#line 1066 
  return;
}


#line 1069  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_105(spinlock_t *lock)
{
  
#line 1073 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1075 
  spin_unlock(lock);
  
#line 1076 
  return;
}


#line 1079  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_106(spinlock_t *lock)
{
  
#line 1083 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1085 
  spin_lock(lock);
  
#line 1086 
  return;
}


#line 1089  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_107(spinlock_t *lock)
{
  
#line 1093 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1095 
  spin_unlock(lock);
  
#line 1096 
  return;
}


#line 1099  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_108(spinlock_t *lock)
{
  
#line 1103 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1105 
  spin_lock(lock);
  
#line 1106 
  return;
}


#line 1109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_109(spinlock_t *lock)
{
  
#line 1113 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1115 
  spin_unlock(lock);
  
#line 1116 
  return;
}


#line 1119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_110(spinlock_t *lock)
{
  
#line 1123 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1125 
  spin_lock(lock);
  
#line 1126 
  return;
}


#line 1129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_111(spinlock_t *lock)
{
  
#line 1133 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1135 
  spin_unlock(lock);
  
#line 1136 
  return;
}


#line 1139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_112(spinlock_t *lock)
{
  
#line 1143 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 1145 
  spin_lock(lock);
  
#line 1146 
  return;
}


#line 1149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_113(spinlock_t *lock)
{
  
#line 1153 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1155 
  spin_unlock(lock);
  
#line 1156 
  return;
}


#line 1159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static bool ldv_queue_work_114(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1163 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1163 
  __retres = tmp != 0;
  
#line 1163 
  return __retres;
}


#line 1167  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static bool ldv_queue_work_115(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1171 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1171 
  __retres = tmp != 0;
  
#line 1171 
  return __retres;
}


#line 1175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static bool ldv_queue_work_116(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1179 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1179 
  __retres = tmp != 0;
  
#line 1179 
  return __retres;
}


#line 1183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_spin_trylock_117(spinlock_t *lock)
{
  int __retres;
  
#line 1187 
  ldv_func_ret_type ldv_func_res = spin_trylock(lock);
  
#line 1189 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 1191 
  if (is_spin_held_by_another_thread != 0) {
    
#line 1194 
    __retres = 0;
    
#line 1194 
    goto return_label;
  }
  else {
    
#line 1197 
    ldv_spin_model_lock((char *)"lock_of_sge_txq");
    
#line 1199 
    __retres = 1;
    
#line 1199 
    goto return_label;
  }
  
#line 1202 
  __retres = ldv_func_res;
  return_label: 
#line 1202 
                return __retres;
}


#line 1206  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_118(spinlock_t *lock)
{
  
#line 1210 
  ldv_spin_model_unlock((char *)"lock_of_sge_txq");
  
#line 1212 
  spin_unlock(lock);
  
#line 1213 
  return;
}


#line 1216  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_119(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1220 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1220 
  return tmp;
}


#line 1224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_spin_trylock_irq_120(spinlock_t *lock)
{
  int __retres;
  
#line 1228 
  ldv_func_ret_type ldv_func_res = spin_trylock_irq(lock);
  
#line 1230 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 1232 
  if (is_spin_held_by_another_thread != 0) {
    
#line 1235 
    __retres = 0;
    
#line 1235 
    goto return_label;
  }
  else {
    
#line 1238 
    ldv_spin_model_lock((char *)"lock");
    
#line 1240 
    __retres = 1;
    
#line 1240 
    goto return_label;
  }
  
#line 1243 
  __retres = ldv_func_res;
  return_label: 
#line 1243 
                return __retres;
}


#line 1247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_121(spinlock_t *lock)
{
  
#line 1251 
  ldv_spin_model_unlock((char *)"lock");
  
#line 1253 
  spin_unlock_irq(lock);
  
#line 1254 
  return;
}


#line 1257  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_122(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1261 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1261 
  return tmp;
}


#line 1265  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_tasklet_init_123(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1269 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1270 
  return;
}


#line 1273  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_tasklet_init_124(struct tasklet_struct *ldv_func_arg1, void (*ldv_func_arg2)(unsigned long ), unsigned long ldv_func_arg3)
{
  
#line 1277 
  ldv_emg_tasklet_init(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1278 
  return;
}


#line 1281  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_lock_irq_125(spinlock_t *lock)
{
  
#line 1285 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 1287 
  spin_lock_irq(lock);
  
#line 1288 
  return;
}


#line 1291  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_126(spinlock_t *lock)
{
  
#line 1295 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 1297 
  spin_unlock_irq(lock);
  
#line 1298 
  return;
}


#line 1301  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static void ldv_spin_unlock_irq_127(spinlock_t *lock)
{
  
#line 1305 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 1307 
  spin_unlock_irq(lock);
  
#line 1308 
  return;
}


#line 1311  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_128(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1315 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1315 
  return tmp;
}


#line 1319  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_mod_timer_129(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1323 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1323 
  return tmp;
}


#line 1327  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_del_timer_sync_130(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1331 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1331 
  return tmp;
}


#line 1335  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_sge.c.aux"
static int ldv_del_timer_sync_131(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1339 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1339 
  return tmp;
}

void *__builtin_memcpy(void *, void const *, unsigned long);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 8  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
void ldv_atomic_dec(atomic_t *v);


#line 9 
int ldv_atomic_dec_and_test(atomic_t *v);


#line 11 
int ldv_atomic_add_return(int i, atomic_t *v);


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static __u32 rol32(__u32 word, unsigned int shift)
{
  __u32 __retres;
  
#line 110 
  __retres = (word << shift) | (word >> ((unsigned long)8 * sizeof(word) - (unsigned long)shift));
  
#line 110 
  return __retres;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
int memcmp(void const *, void const *, size_t);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static bool IS_ERR(void const *ptr);


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 98 
static void atomic_inc_0(atomic_t *v);


#line 114 
static void atomic_dec(atomic_t *v);


#line 120 
static int atomic_dec_and_test(atomic_t *v);


#line 159 
static int atomic_add_return(int i, atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock.h"
void __rwlock_init(rwlock_t *, char const *, struct lock_class_key *);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_api_smp.h"
void _raw_read_lock_bh(rwlock_t *);


#line 21 
void _raw_write_lock_bh(rwlock_t *);


#line 30 
void _raw_read_unlock(rwlock_t *);


#line 32 
void _raw_read_unlock_bh(rwlock_t *);


#line 33 
void _raw_write_unlock_bh(rwlock_t *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_89_0(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_91_0(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_93(spinlock_t *lock);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 369 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 370 
  return;
}


#line 395 
static void ldv_spin_lock_bh_75(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_80(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_82(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_84(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_87(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_90_0(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_92_0(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 444 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 452 
static void ldv_spin_unlock_bh_79(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_81(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_83(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_85(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_88(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_94(spinlock_t *lock);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 463 
int rcu_read_lock_held(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void __kfree_skb(struct sk_buff *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
u16 vlan_dev_vlan_id(struct net_device const *);


#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
__inline static u32 __jhash_nwords(u32 a, u32 b, u32 c, u32 initval)
{
  __u32 tmp;
  __u32 tmp_0;
  __u32 tmp_1;
  __u32 tmp_2;
  __u32 tmp_3;
  __u32 tmp_4;
  __u32 tmp_5;
  
#line 151 
  a += initval;
  
#line 152 
  b += initval;
  
#line 153 
  c += initval;
  
#line 155 
  c ^= b;
  
#line 155 
  tmp = rol32(b,14U);
  
#line 155 
  c -= tmp;
  
#line 155 
  a ^= c;
  
#line 155 
  tmp_0 = rol32(c,11U);
  
#line 155 
  a -= tmp_0;
  
#line 155 
  b ^= a;
  
#line 155 
  tmp_1 = rol32(a,25U);
  
#line 155 
  b -= tmp_1;
  
#line 155 
  c ^= b;
  
#line 155 
  tmp_2 = rol32(b,16U);
  
#line 155 
  c -= tmp_2;
  
#line 155 
  a ^= c;
  
#line 155 
  tmp_3 = rol32(c,4U);
  
#line 155 
  a -= tmp_3;
  
#line 155 
  b ^= a;
  
#line 155 
  tmp_4 = rol32(a,14U);
  
#line 155 
  b -= tmp_4;
  
#line 155 
  c ^= b;
  
#line 155 
  tmp_5 = rol32(b,24U);
  
#line 155 
  c -= tmp_5;
  
#line 157 
  return c;
}


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
__inline static u32 jhash_2words(u32 a, u32 b, u32 initval)
{
  u32 tmp;
  
#line 167 
  tmp = __jhash_nwords(a,b,0U,initval + 3735928567U);
  
#line 167 
  return tmp;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
void neigh_destroy(struct neighbour *);


#line 315 
int __neigh_event_send(struct neighbour *, struct sk_buff *);


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static void neigh_release(struct neighbour *neigh)
{
  int tmp;
  
#line 410 
  tmp = atomic_dec_and_test(& neigh->refcnt);
  
#line 410 
  if (tmp != 0) 
#line 411 
                neigh_destroy(neigh); else ;
  
#line 412 
  return;
}


#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
__inline static int neigh_event_send(struct neighbour *neigh, struct sk_buff *skb)
{
  int __retres;
  
#line 425 
  unsigned long now = jiffies;
  
#line 427 
  if (neigh->used != now) 
#line 428 
                          neigh->used = now; else ;
  
#line 429 
  if (((int)neigh->nud_state & 218) == 0) {
    int tmp;
    
#line 430 
    tmp = __neigh_event_send(neigh,skb);
    
#line 430 
    __retres = tmp;
    
#line 430 
    goto return_label;
  }
  else ;
  
#line 431 
  __retres = 0;
  return_label: 
#line 431 
                return __retres;
}


#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst.h"
__inline static struct neighbour *dst_neigh_lookup(struct dst_entry const *dst, void const *daddr)
{
  struct neighbour *tmp;
  struct neighbour *tmp_1;
  bool tmp_0;
  
#line 408 
  tmp = (*((dst->ops)->neigh_lookup))(dst,(struct sk_buff *)0,daddr);
  
#line 408 
  struct neighbour *n = tmp;
  
#line 409 
  tmp_0 = IS_ERR((void const *)n);
  
#line 409 
  if ((int)tmp_0 == 0) 
#line 409 
                       tmp_1 = n; else 
#line 409 
                                       tmp_1 = (struct neighbour *)0;
  
#line 409 
  return tmp_1;
}


#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
void t3_l2e_free(struct l2t_data *d, struct l2t_entry *e);


#line 111 
void t3_l2t_update(struct t3cdev *dev, struct neighbour *neigh);


#line 112 
struct l2t_entry *t3_l2t_get(struct t3cdev *cdev, struct dst_entry *dst, struct net_device *dev, void const *daddr);


#line 114 
int t3_l2t_send_slow(struct t3cdev *dev, struct sk_buff *skb, struct l2t_entry *e);


#line 116 
void t3_l2t_send_event(struct t3cdev *dev, struct l2t_entry *e);


#line 117 
struct l2t_data *t3_init_l2t(unsigned int l2t_capacity);


#line 118 
void t3_free_l2t(struct l2t_data *d);


#line 120 
int cxgb3_ofld_send(struct t3cdev *dev, struct sk_buff *skb);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
__inline static void l2t_hold(struct l2t_data *d, struct l2t_entry *e)
{
  
#line 145 
  if (d != (struct l2t_data *)0) {
    int tmp;
    
#line 145 
    tmp = atomic_add_return(1,& e->refcnt);
    
#line 145 
    if (tmp == 1) 
#line 146 
                  atomic_dec(& d->nfree); else ;
  }
  else ;
  
#line 147 
  return;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_defs.h"
void *cxgb_alloc_mem(unsigned long size);


#line 45 
void cxgb_free_mem(void *addr);


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
__inline static unsigned int vlan_prio(struct l2t_entry const *e)
{
  unsigned int __retres;
  
#line 65 
  __retres = (unsigned int)((int)e->vlan >> 13);
  
#line 65 
  return __retres;
}


#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
__inline static unsigned int arp_hash(u32 key, int ifindex, struct l2t_data const *d)
{
  unsigned int __retres;
  u32 tmp;
  
#line 71 
  tmp = jhash_2words(key,(unsigned int)ifindex,0U);
  
#line 71 
  ;
  
#line 71 
  __retres = tmp & (d->nentries + 4294967295U);
  
#line 71 
  return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
__inline static void neigh_replace(struct l2t_entry *e, struct neighbour *n)
{
  
#line 76 
  atomic_inc_0(& n->refcnt);
  
#line 77 
  if (e->neigh != (struct neighbour *)0) 
#line 78 
                                         neigh_release(e->neigh); else ;
  
#line 79 
  e->neigh = n;
  
#line 80 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static int setup_l2e_send_pending(struct t3cdev *dev, struct sk_buff *skb, struct l2t_entry *e)
{
  int __retres;
  struct cpl_l2t_write_req *req;
  struct sk_buff *tmp;
  __u32 tmp_3;
  unsigned int tmp_2;
  
#line 93 
  if (skb == (struct sk_buff *)0) {
    
#line 94 
    skb = alloc_skb(24U,32U);
    
#line 95 
    if (skb == (struct sk_buff *)0) {
      
#line 96 
      __retres = -12;
      
#line 96 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 99 
  req = (struct cpl_l2t_write_req *)__skb_put(skb,24U);
  
#line 100 
  req->wr.wr_hi = 1U;
  
#line 101 
  if (0 != 0) 
#line 101 
              req->ot.opcode_tid = (((unsigned int)e->idx << 24) | (((unsigned int)e->idx << 8) & 16711680U)) | 18U; else 
                                                                    
#line 101 
                                                                    req->ot.opcode_tid = __fswab32((unsigned int)((int)e->idx | 301989888));
  
#line 102 
  tmp_2 = vlan_prio((struct l2t_entry const *)e);
  
#line 102 
  ;
  
#line 102 
  tmp_3 = __fswab32((unsigned int)(((int)e->idx | ((int)e->smt_idx << 23)) | (((int)e->vlan << 11) & 8386560)) | (tmp_2 << 27));
  
#line 102 
  req->params = tmp_3;
  
#line 105 
  memcpy((void *)(& e->dmac),(void const *)(& (e->neigh)->ha),6UL);
  
#line 106 
  memcpy((void *)(& req->dst_mac),(void const *)(& e->dmac),6UL);
  
#line 107 
  skb->priority = 1U;
  
#line 108 
  cxgb3_ofld_send(dev,skb);
  
#line 110 
  skb = e->arpq.next;
  
#line 110 
  tmp = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  
#line 110 
  goto ldv_56586;
  ldv_56585: 
#line 111 
  ;
  
#line 111 
  __skb_unlink(skb,& e->arpq);
  
#line 112 
  cxgb3_ofld_send(dev,skb);
  
#line 110 
  skb = tmp;
  
#line 110 
  tmp = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  ldv_56586: 
#line 111 
  ;
  
#line 110 
  if ((struct sk_buff *)(& e->arpq) != skb) 
#line 112 
                                            goto ldv_56585; else 
#line 115 
                                                                 goto ldv_56587;
  ldv_56587: 
#line 116 
  ;
  
#line 114 
  e->state = (unsigned short)0U;
  
#line 116 
  __retres = 0;
  return_label: 
#line 116 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
__inline static void arpq_enqueue(struct l2t_entry *e, struct sk_buff *skb)
{
  
#line 125 
  __skb_queue_tail(& e->arpq,skb);
  
#line 126 
  return;
}


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
int t3_l2t_send_slow(struct t3cdev *dev, struct sk_buff *skb, struct l2t_entry *e)
{
  int __retres;
  again: 
#line 131 
  ;
  
#line 132 
  switch ((int)e->state) {
    int tmp;
    int tmp_1;
    case 1: 
#line 133 
    ;
    
#line 134 
    neigh_event_send(e->neigh,(struct sk_buff *)0);
    
#line 135 
    ldv_spin_lock_bh_75(& e->lock);
    
#line 136 
    if ((unsigned int)e->state == 1U) 
#line 137 
                                      e->state = (unsigned short)0U; else ;
    
#line 138 
    ldv_spin_unlock_bh_76(& e->lock);
    case 0: 
#line 139 
    ;
    
#line 140 
    tmp = cxgb3_ofld_send(dev,skb);
    
#line 140 
    __retres = tmp;
    
#line 140 
    goto return_label;
    case 2: 
#line 141 
    ;
    
#line 142 
    ldv_spin_lock_bh_77(& e->lock);
    
#line 143 
    if ((unsigned int)e->state != 2U) {
      
#line 145 
      ldv_spin_unlock_bh_78(& e->lock);
      
#line 146 
      goto again;
    }
    else ;
    
#line 148 
    arpq_enqueue(e,skb);
    
#line 149 
    ldv_spin_unlock_bh_79(& e->lock);
    
#line 159 
    tmp_1 = neigh_event_send(e->neigh,(struct sk_buff *)0);
    
#line 159 
    if (tmp_1 == 0) {
      int tmp_0;
      
#line 160 
      skb = alloc_skb(24U,32U);
      
#line 162 
      if (skb == (struct sk_buff *)0) 
#line 163 
                                      goto ldv_56601; else ;
      
#line 165 
      ldv_spin_lock_bh_80(& e->lock);
      
#line 166 
      tmp_0 = skb_queue_empty((struct sk_buff_head const *)(& e->arpq));
      
#line 166 
      if (tmp_0 == 0) 
#line 167 
                      setup_l2e_send_pending(dev,skb,e); else 
#line 169 
                                                              __kfree_skb(skb);
      
#line 170 
      ldv_spin_unlock_bh_81(& e->lock);
    }
    else ;
  }
  ldv_56601: 
#line 173 
  ;
  
#line 173 
  __retres = 0;
  return_label: 
#line 173 
                return __retres;
}


#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static char const __kstrtab_t3_l2t_send_slow[17U] = {(char)'t', (char)'3', (char)'_', (char)'l', (char)'2', (char)'t', (char)'_', (char)'s', (char)'e', (char)'n', (char)'d', (char)'_', (char)'s', (char)'l', (char)'o', (char)'w', (char)'\000'};

#line 176 
struct kernel_symbol const __ksymtab_t3_l2t_send_slow;


#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
struct kernel_symbol const __ksymtab_t3_l2t_send_slow = {.value = (unsigned long)(& t3_l2t_send_slow), .name = (char const *)(& __kstrtab_t3_l2t_send_slow)};

#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
void t3_l2t_send_event(struct t3cdev *dev, struct l2t_entry *e)
{
  again: 
#line 180 
  ;
  
#line 181 
  switch ((int)e->state) {
    case 1: 
#line 182 
    ;
    
#line 183 
    neigh_event_send(e->neigh,(struct sk_buff *)0);
    
#line 184 
    ldv_spin_lock_bh_82(& e->lock);
    
#line 185 
    if ((unsigned int)e->state == 1U) 
#line 186 
                                      e->state = (unsigned short)0U; else ;
    
#line 188 
    ldv_spin_unlock_bh_83(& e->lock);
    
#line 189 
    goto return_label;
    case 0: 
#line 190 
    ;
    
#line 191 
    goto return_label;
    case 2: 
#line 192 
    ;
    
#line 193 
    ldv_spin_lock_bh_84(& e->lock);
    
#line 194 
    if ((unsigned int)e->state != 2U) {
      
#line 196 
      ldv_spin_unlock_bh_85(& e->lock);
      
#line 197 
      goto again;
    }
    else ;
    
#line 199 
    ldv_spin_unlock_bh_86(& e->lock);
    
#line 209 
    neigh_event_send(e->neigh,(struct sk_buff *)0);
  }
  return_label: 
#line 211 
                return;
}


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static char const __kstrtab_t3_l2t_send_event[18U] = {(char)'t', (char)'3', (char)'_', (char)'l', (char)'2', (char)'t', (char)'_', (char)'s', (char)'e', (char)'n', (char)'d', (char)'_', (char)'e', (char)'v', (char)'e', (char)'n', (char)'t', (char)'\000'};

#line 213 
struct kernel_symbol const __ksymtab_t3_l2t_send_event;


#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
struct kernel_symbol const __ksymtab_t3_l2t_send_event = {.value = (unsigned long)(& t3_l2t_send_event), .name = (char const *)(& __kstrtab_t3_l2t_send_event)};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static struct l2t_entry *alloc_l2e(struct l2t_data *d)
{
  struct l2t_entry *__retres;
  struct l2t_entry *end;
  struct l2t_entry *e;
  struct l2t_entry **p;
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 222 
  tmp = atomic_read((atomic_t const *)(& d->nfree));
  
#line 222 
  if (tmp == 0) {
    
#line 223 
    __retres = (struct l2t_entry *)0;
    
#line 223 
    goto return_label;
  }
  else ;
  
#line 226 
  e = d->rover;
  
#line 226 
  end = & d->l2tab[d->nentries];
  
#line 226 
  goto ldv_56635;
  ldv_56634: 
#line 227 
  ;
  
#line 227 
  tmp_0 = atomic_read((atomic_t const *)(& e->refcnt));
  
#line 227 
  if (tmp_0 == 0) 
#line 228 
                  goto found; else ;
  
#line 226 
  e += 1;
  ldv_56635: 
#line 227 
  ;
  
#line 226 
  if (e != end) 
#line 228 
                goto ldv_56634; else 
#line 231 
                                     goto ldv_56636;
  ldv_56636: 
#line 232 
  ;
  
#line 230 
  e = & d->l2tab[1];
  
#line 230 
  goto ldv_56638;
  ldv_56637: 
#line 231 
  ;
  
#line 230 
  e += 1;
  ldv_56638: 
#line 231 
  ;
  
#line 230 
  tmp_1 = atomic_read((atomic_t const *)(& e->refcnt));
  
#line 230 
  if (tmp_1 != 0) 
#line 232 
                  goto ldv_56637; else 
#line 235 
                                       goto ldv_56639;
  ldv_56639: 
#line 236 
  ;
  found: 
#line 231 
  ;
  
#line 232 
  d->rover = e + 1U;
  
#line 233 
  atomic_dec(& d->nfree);
  
#line 239 
  if ((unsigned int)e->state != 3U) {
    unsigned int tmp_2;
    
#line 240 
    tmp_2 = arp_hash(e->addr,e->ifindex,(struct l2t_data const *)d);
    
#line 240 
    int hash = (int)tmp_2;
    
#line 242 
    p = & d->l2tab[hash].first;
    
#line 242 
    goto ldv_56643;
    ldv_56642: 
#line 243 
    ;
    
#line 243 
    if (*p == e) {
      
#line 244 
      *p = e->next;
      
#line 245 
      goto ldv_56641;
    }
    else ;
    
#line 242 
    p = & (*p)->next;
    ldv_56643: 
#line 243 
    ;
    
#line 242 
    if (*p != (struct l2t_entry *)0) 
#line 244 
                                     goto ldv_56642; else 
#line 247 
                                                          goto ldv_56641;
    ldv_56641: 
#line 248 
    ;
    
#line 247 
    e->state = (unsigned short)3U;
  }
  else ;
  
#line 249 
  __retres = e;
  return_label: 
#line 249 
                return __retres;
}


#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
void t3_l2e_free(struct l2t_data *d, struct l2t_entry *e)
{
  int tmp;
  
#line 265 
  ldv_spin_lock_bh_87(& e->lock);
  
#line 266 
  tmp = atomic_read((atomic_t const *)(& e->refcnt));
  
#line 266 
  if (tmp == 0) {
    
#line 267 
    if (e->neigh != (struct neighbour *)0) {
      
#line 268 
      neigh_release(e->neigh);
      
#line 269 
      e->neigh = (struct neighbour *)0;
    }
    else ;
  }
  else ;
  
#line 272 
  ldv_spin_unlock_bh_88(& e->lock);
  
#line 273 
  atomic_inc_0(& d->nfree);
  
#line 274 
  return;
}


#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static char const __kstrtab_t3_l2e_free[12U] = {(char)'t', (char)'3', (char)'_', (char)'l', (char)'2', (char)'e', (char)'_', (char)'f', (char)'r', (char)'e', (char)'e', (char)'\000'};

#line 276 
struct kernel_symbol const __ksymtab_t3_l2e_free;


#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
struct kernel_symbol const __ksymtab_t3_l2e_free = {.value = (unsigned long)(& t3_l2e_free), .name = (char const *)(& __kstrtab_t3_l2e_free)};

#line 282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
__inline static void reuse_entry(struct l2t_entry *e, struct neighbour *neigh)
{
  unsigned int nud_state;
  int tmp;
  
#line 286 
  ldv_spin_lock_89_0(& e->lock);
  
#line 288 
  if (e->neigh != neigh) 
#line 289 
                         neigh_replace(e,neigh); else ;
  
#line 290 
  nud_state = (unsigned int)neigh->nud_state;
  
#line 291 
  tmp = memcmp((void const *)(& e->dmac),(void const *)(& neigh->ha),6UL);
  
#line 291 
  if (tmp != 0) 
#line 291 
                goto _LOR;
  else 
    
#line 291 
    if ((nud_state & 222U) == 0U) _LOR: 
#line 293 
                                        e->state = (unsigned short)2U;
    else 
      
#line 294 
      if ((nud_state & 194U) != 0U) 
#line 295 
                                    e->state = (unsigned short)0U; else 
                                                                    
#line 297 
                                                                    e->state = (unsigned short)1U;
  
#line 298 
  ldv_spin_unlock_90_0(& e->lock);
  
#line 299 
  return;
}


#line 301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
struct l2t_entry *t3_l2t_get(struct t3cdev *cdev, struct dst_entry *dst, struct net_device *dev, void const *daddr)
{
  struct neighbour *neigh;
  struct port_info *p;
  struct l2t_data *d;
  int hash;
  u32 addr;
  int ifidx;
  int smt_idx;
  void *tmp_4;
  unsigned int tmp_5;
  
#line 304 
  struct l2t_entry *e = (struct l2t_entry *)0;
  
#line 313 
  rcu_read_lock();
  
#line 314 
  neigh = dst_neigh_lookup((struct dst_entry const *)dst,daddr);
  
#line 315 
  if (neigh == (struct neighbour *)0) 
#line 316 
                                      goto done_rcu; else ;
  
#line 318 
  addr = *((u32 *)(& neigh->primary_key));
  
#line 319 
  ifidx = (neigh->dev)->ifindex;
  
#line 321 
  if (dev == (struct net_device *)0) 
#line 322 
                                     dev = neigh->dev; else ;
  
#line 323 
  p = (struct port_info *)netdev_priv((struct net_device const *)dev);
  
#line 324 
  smt_idx = (int)p->port_id;
  {
    void *tmp_1;
    {
      void *tmp_0;
      {
        union __anonunion___u_748 __u;
        
#line 326 
        __read_once_size((void const volatile *)(& cdev->l2opt),(void *)(& __u.__c),8);
        
#line 326 
        tmp_0 = __u.__val;
      }
      
#line 326 
      void *_________p1 = tmp_0;
      
#line 326 
      tmp_1 = _________p1;
    }
    
#line 326 
    void *________p1 = tmp_1;
    {
      bool __warned;
      int tmp_2;
      
#line 326 
      tmp_2 = debug_lockdep_rcu_enabled();
      
#line 326 
      if (tmp_2 != 0) {
        
#line 326 
        if (! __warned) {
          int tmp_3;
          
#line 326 
          tmp_3 = rcu_read_lock_held();
          
#line 326 
          if (tmp_3 == 0) {
            
#line 326 
            __warned = (_Bool)1;
            
#line 326 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c",326,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 326 
    tmp_4 = ________p1;
  }
  
#line 326 
  d = (struct l2t_data *)tmp_4;
  
#line 327 
  if (d == (struct l2t_data *)0) 
#line 328 
                                 goto done_rcu; else ;
  
#line 330 
  tmp_5 = arp_hash(addr,ifidx,(struct l2t_data const *)d);
  
#line 330 
  hash = (int)tmp_5;
  
#line 332 
  _raw_write_lock_bh(& d->lock);
  
#line 333 
  e = d->l2tab[hash].first;
  
#line 333 
  goto ldv_56688;
  ldv_56687: 
#line 334 
  ;
  
#line 334 
  if ((e->addr == addr && e->ifindex == ifidx) && (int)e->smt_idx == smt_idx) {
    int tmp_6;
    
#line 336 
    l2t_hold(d,e);
    
#line 337 
    tmp_6 = atomic_read((atomic_t const *)(& e->refcnt));
    
#line 337 
    if (tmp_6 == 1) 
#line 338 
                    reuse_entry(e,neigh); else ;
    
#line 339 
    goto done_unlock;
  }
  else ;
  
#line 333 
  e = e->next;
  ldv_56688: 
#line 334 
  ;
  
#line 333 
  if (e != (struct l2t_entry *)0) 
#line 335 
                                  goto ldv_56687; else 
#line 338 
                                                       goto ldv_56689;
  ldv_56689: 
#line 339 
  ;
  
#line 343 
  e = alloc_l2e(d);
  
#line 344 
  if (e != (struct l2t_entry *)0) {
    
#line 345 
    ldv_spin_lock_91_0(& e->lock);
    
#line 346 
    e->next = d->l2tab[hash].first;
    
#line 347 
    d->l2tab[hash].first = e;
    
#line 348 
    e->state = (unsigned short)2U;
    
#line 349 
    e->addr = addr;
    
#line 350 
    e->ifindex = ifidx;
    
#line 351 
    e->smt_idx = (unsigned short)smt_idx;
    
#line 352 
    atomic_set(& e->refcnt,1);
    
#line 353 
    neigh_replace(e,neigh);
    
#line 354 
    if (((neigh->dev)->priv_flags & 1U) != 0U) 
#line 355 
                                               e->vlan = vlan_dev_vlan_id((struct net_device const *)neigh->dev); else 
                                                                    
#line 357 
                                                                    e->vlan = (unsigned short)4095U;
    
#line 358 
    ldv_spin_unlock_92_0(& e->lock);
  }
  else ;
  done_unlock: 
#line 360 
  ;
  
#line 361 
  _raw_write_unlock_bh(& d->lock);
  done_rcu: 
#line 362 
  ;
  
#line 363 
  if (neigh != (struct neighbour *)0) 
#line 364 
                                      neigh_release(neigh); else ;
  
#line 365 
  rcu_read_unlock();
  
#line 366 
  return e;
}


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static char const __kstrtab_t3_l2t_get[11U] = {(char)'t', (char)'3', (char)'_', (char)'l', (char)'2', (char)'t', (char)'_', (char)'g', (char)'e', (char)'t', (char)'\000'};

#line 369 
struct kernel_symbol const __ksymtab_t3_l2t_get;


#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
struct kernel_symbol const __ksymtab_t3_l2t_get = {.value = (unsigned long)(& t3_l2t_get), .name = (char const *)(& __kstrtab_t3_l2t_get)};

#line 379  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
static void handle_failed_resolution(struct t3cdev *dev, struct sk_buff_head *arpq)
{
  struct sk_buff *skb;
  struct sk_buff *tmp;
  
#line 383 
  skb = arpq->next;
  
#line 383 
  tmp = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  
#line 383 
  goto ldv_56708;
  ldv_56707: 
#line 384 
  ;
  {
    
#line 384 
    struct l2t_skb_cb *cb = (struct l2t_skb_cb *)(& skb->cb);
    
#line 386 
    __skb_unlink(skb,arpq);
    
#line 387 
    if (cb->arp_failure_handler != (void (*)(struct t3cdev *, struct sk_buff *))0) 
      
#line 388 
      (*(cb->arp_failure_handler))(dev,skb); else 
#line 390 
                                                  cxgb3_ofld_send(dev,skb);
  }
  
#line 383 
  skb = tmp;
  
#line 383 
  tmp = skb->__anonCompField_sk_buff_67.__anonCompField___anonunion_217_66.next;
  ldv_56708: 
#line 384 
  ;
  
#line 383 
  if (skb != (struct sk_buff *)arpq) 
#line 385 
                                     goto ldv_56707; else 
#line 388 
                                                          goto ldv_56709;
  ldv_56709: 
#line 389 
  ;
  
#line 390 
  return;
}


#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
void t3_l2t_update(struct t3cdev *dev, struct neighbour *neigh)
{
  struct sk_buff_head arpq;
  struct l2t_entry *e;
  void *tmp_3;
  unsigned int tmp_4;
  int tmp_7;
  int tmp_8;
  {
    void *tmp_0;
    {
      void *tmp;
      {
        union __anonunion___u_750 __u;
        
#line 402 
        __read_once_size((void const volatile *)(& dev->l2opt),(void *)(& __u.__c),8);
        
#line 402 
        tmp = __u.__val;
      }
      
#line 402 
      void *_________p1 = tmp;
      
#line 402 
      tmp_0 = _________p1;
    }
    
#line 402 
    void *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 402 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 402 
      if (tmp_1 != 0) {
        
#line 402 
        if (! __warned) {
          int tmp_2;
          
#line 402 
          tmp_2 = rcu_read_lock_held();
          
#line 402 
          if (tmp_2 == 0) {
            
#line 402 
            __warned = (_Bool)1;
            
#line 402 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c",402,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 402 
    tmp_3 = ________p1;
  }
  
#line 402 
  struct l2t_data *d = (struct l2t_data *)tmp_3;
  
#line 403 
  u32 addr = *((u32 *)(& neigh->primary_key));
  
#line 404 
  int ifidx = (neigh->dev)->ifindex;
  
#line 405 
  tmp_4 = arp_hash(addr,ifidx,(struct l2t_data const *)d);
  
#line 405 
  int hash = (int)tmp_4;
  
#line 407 
  _raw_read_lock_bh(& d->lock);
  
#line 408 
  e = d->l2tab[hash].first;
  
#line 408 
  goto ldv_56732;
  ldv_56731: 
#line 409 
  ;
  
#line 409 
  if (e->addr == addr && e->ifindex == ifidx) {
    
#line 410 
    ldv_spin_lock_93(& e->lock);
    
#line 411 
    goto found;
  }
  else ;
  
#line 408 
  e = e->next;
  ldv_56732: 
#line 409 
  ;
  
#line 408 
  if (e != (struct l2t_entry *)0) 
#line 410 
                                  goto ldv_56731; else 
#line 413 
                                                       goto ldv_56733;
  ldv_56733: 
#line 414 
  ;
  
#line 413 
  _raw_read_unlock_bh(& d->lock);
  
#line 414 
  goto return_label;
  found: 
#line 416 
  ;
  
#line 417 
  __skb_queue_head_init(& arpq);
  
#line 419 
  _raw_read_unlock(& d->lock);
  
#line 420 
  tmp_7 = atomic_read((atomic_t const *)(& e->refcnt));
  
#line 420 
  if (tmp_7 != 0) {
    
#line 421 
    if (e->neigh != neigh) 
#line 422 
                           neigh_replace(e,neigh); else ;
    
#line 424 
    if ((unsigned int)e->state == 2U) {
      
#line 425 
      if (((int)neigh->nud_state & 32) != 0) 
#line 426 
                                             skb_queue_splice_init(& e->arpq,& arpq);
      else 
        
#line 427 
        if (((int)neigh->nud_state & 198) != 0) 
#line 428 
                                                setup_l2e_send_pending(dev,(struct sk_buff *)0,e); else ;
    }
    else {
      int tmp_6;
      bool tmp_5;
      
#line 430 
      e->state = (unsigned short)(((int)neigh->nud_state & 194) == 0);
      
#line 432 
      tmp_5 = ether_addr_equal((u8 const *)(& e->dmac),(u8 const *)(& neigh->ha));
      
#line 432 
      if (tmp_5) 
#line 432 
                 tmp_6 = 0; else 
#line 432 
                                 tmp_6 = 1;
      
#line 432 
      if (tmp_6) 
#line 433 
                 setup_l2e_send_pending(dev,(struct sk_buff *)0,e); else ;
    }
  }
  else ;
  
#line 436 
  ldv_spin_unlock_bh_94(& e->lock);
  
#line 438 
  tmp_8 = skb_queue_empty((struct sk_buff_head const *)(& arpq));
  
#line 438 
  if (tmp_8 == 0) 
#line 439 
                  handle_failed_resolution(dev,& arpq); else ;
  return_label: 
#line 440 
                return;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
struct l2t_data *t3_init_l2t(unsigned int l2t_capacity)
{
  struct l2t_data *__retres;
  struct l2t_data *d;
  int i;
  
#line 445 
  int size = (int)(l2t_capacity * 224U + 112U);
  
#line 447 
  d = (struct l2t_data *)cxgb_alloc_mem((unsigned long)size);
  
#line 448 
  if (d == (struct l2t_data *)0) {
    
#line 449 
    __retres = (struct l2t_data *)0;
    
#line 449 
    goto return_label;
  }
  else ;
  
#line 451 
  d->nentries = l2t_capacity;
  
#line 452 
  d->rover = & d->l2tab[1];
  
#line 453 
  atomic_set(& d->nfree,(int)(l2t_capacity + 4294967295U));
  {
    struct lock_class_key __key;
    
#line 454 
    __rwlock_init(& d->lock,"&d->lock",& __key);
  }
  
#line 456 
  i = 0;
  
#line 456 
  goto ldv_56743;
  ldv_56742: 
#line 457 
  ;
  
#line 457 
  d->l2tab[i].idx = (unsigned short)i;
  
#line 458 
  d->l2tab[i].state = (unsigned short)3U;
  
#line 459 
  __skb_queue_head_init(& d->l2tab[i].arpq);
  
#line 460 
  spinlock_check(& d->l2tab[i].lock);
  {
    struct lock_class_key __key_0;
    
#line 460 
    __raw_spin_lock_init(& d->l2tab[i].lock.__anonCompField_spinlock_18.rlock,"&(&d->l2tab[i].lock)->rlock",& __key_0);
  }
  
#line 461 
  atomic_set(& d->l2tab[i].refcnt,0);
  
#line 456 
  i += 1;
  ldv_56743: 
#line 457 
  ;
  
#line 456 
  if ((unsigned int)i < l2t_capacity) 
#line 458 
                                      goto ldv_56742; else 
#line 461 
                                                           goto ldv_56744;
  ldv_56744: 
#line 462 
  ;
  
#line 463 
  __retres = d;
  return_label: 
#line 463 
                return __retres;
}


#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.c"
void t3_free_l2t(struct l2t_data *d)
{
  
#line 468 
  cxgb_free_mem((void *)d);
  
#line 469 
  return;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 92 
  ret = ldv_is_err(ptr);
  
#line 93 
  __retres = (_Bool)(ret != 0L);
  
#line 93 
  return __retres;
}


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void atomic_inc_0(atomic_t *v)
{
  
#line 130 
  ldv_atomic_inc(v);
  
#line 131 
  return;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void atomic_dec(atomic_t *v)
{
  
#line 137 
  ldv_atomic_dec(v);
  
#line 138 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static int atomic_dec_and_test(atomic_t *v)
{
  int tmp;
  
#line 144 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 144 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static int atomic_add_return(int i, atomic_t *v)
{
  int tmp;
  
#line 165 
  tmp = ldv_atomic_add_return(i,v);
  
#line 165 
  return tmp;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_bh_75(spinlock_t *lock)
{
  
#line 774 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 776 
  spin_lock_bh(lock);
  
#line 777 
  return;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 784 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 786 
  spin_unlock_bh(lock);
  
#line 787 
  return;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 794 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 796 
  spin_lock_bh(lock);
  
#line 797 
  return;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 804 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 806 
  spin_unlock_bh(lock);
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_79(spinlock_t *lock)
{
  
#line 814 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 816 
  spin_unlock_bh(lock);
  
#line 817 
  return;
}


#line 820  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_bh_80(spinlock_t *lock)
{
  
#line 824 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 826 
  spin_lock_bh(lock);
  
#line 827 
  return;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_81(spinlock_t *lock)
{
  
#line 834 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 836 
  spin_unlock_bh(lock);
  
#line 837 
  return;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_bh_82(spinlock_t *lock)
{
  
#line 844 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 846 
  spin_lock_bh(lock);
  
#line 847 
  return;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_83(spinlock_t *lock)
{
  
#line 854 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 856 
  spin_unlock_bh(lock);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_bh_84(spinlock_t *lock)
{
  
#line 864 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 866 
  spin_lock_bh(lock);
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_85(spinlock_t *lock)
{
  
#line 874 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 876 
  spin_unlock_bh(lock);
  
#line 877 
  return;
}


#line 880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 884 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 886 
  spin_unlock_bh(lock);
  
#line 887 
  return;
}


#line 890  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_bh_87(spinlock_t *lock)
{
  
#line 894 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 896 
  spin_lock_bh(lock);
  
#line 897 
  return;
}


#line 900  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_88(spinlock_t *lock)
{
  
#line 904 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 906 
  spin_unlock_bh(lock);
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_89_0(spinlock_t *lock)
{
  
#line 914 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 916 
  spin_lock_0(lock);
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_90_0(spinlock_t *lock)
{
  
#line 924 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 926 
  spin_unlock_0(lock);
  
#line 927 
  return;
}


#line 930  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_91_0(spinlock_t *lock)
{
  
#line 934 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 936 
  spin_lock_0(lock);
  
#line 937 
  return;
}


#line 940  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_92_0(spinlock_t *lock)
{
  
#line 944 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 946 
  spin_unlock_0(lock);
  
#line 947 
  return;
}


#line 950  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_lock_93(spinlock_t *lock)
{
  
#line 954 
  ldv_spin_model_lock((char *)"lock_of_l2t_entry");
  
#line 956 
  spin_lock_0(lock);
  
#line 957 
  return;
}


#line 960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_l2t.c.aux"
static void ldv_spin_unlock_bh_94(spinlock_t *lock)
{
  
#line 964 
  ldv_spin_model_unlock((char *)"lock_of_l2t_entry");
  
#line 966 
  spin_unlock_bh(lock);
  
#line 967 
  return;
}


#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
int t3_wait_op_done_val(struct adapter *adapter, int reg, u32 mask, int polarity, int attempts, int delay, u32 *valp);


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static int t3_wait_op_done(struct adapter *adapter, int reg, u32 mask, int polarity, int attempts, int delay)
{
  int tmp;
  
#line 651 
  tmp = t3_wait_op_done_val(adapter,reg,mask,polarity,attempts,delay,(u32 *)0U);
  
#line 651 
  return tmp;
}


#line 719 
void t3_mc5_prep(struct adapter *adapter, struct mc5 *mc5, int mode);


#line 720 
int t3_mc5_init(struct mc5 *mc5, unsigned int nservers, unsigned int nfilters, unsigned int nroutes);


#line 722 
void t3_mc5_intr_handler(struct mc5 *mc5);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
static int mc5_cmd_write(struct adapter *adapter, u32 cmd)
{
  int tmp;
  
#line 95 
  t3_write_reg(adapter,1912U,cmd);
  
#line 96 
  tmp = t3_wait_op_done(adapter,1968,1U,1,5,1);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
__inline static void dbgi_wr_data3(struct adapter *adapter, u32 v1, u32 v2, u32 v3)
{
  
#line 103 
  t3_write_reg(adapter,1928U,v1);
  
#line 104 
  t3_write_reg(adapter,1932U,v2);
  
#line 105 
  t3_write_reg(adapter,1936U,v3);
  
#line 106 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
static int mc5_write(struct adapter *adapter, u32 addr_lo, u32 cmd)
{
  int __retres;
  int tmp;
  
#line 115 
  t3_write_reg(adapter,1916U,addr_lo);
  
#line 116 
  tmp = mc5_cmd_write(adapter,cmd);
  
#line 116 
  if (tmp == 0) {
    
#line 117 
    __retres = 0;
    
#line 117 
    goto return_label;
  }
  else ;
  
#line 118 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"MC5 timeout writing to TCAM address 0x%x\n",addr_lo);
  
#line 120 
  __retres = -1;
  return_label: 
#line 120 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
static int init_mask_data_array(struct mc5 *mc5, u32 mask_array_base, u32 data_array_base, u32 write_cmd, int addr_shift)
{
  int __retres;
  unsigned int i;
  int tmp_0;
  int tmp_2;
  
#line 128 
  struct adapter *adap = mc5->adapter;
  
#line 134 
  unsigned int size72 = mc5->tcam_size;
  
#line 135 
  unsigned int server_base = t3_read_reg(adap,1812U);
  
#line 137 
  if ((unsigned int)mc5->mode == 1U) {
    
#line 138 
    size72 *= 2U;
    
#line 139 
    server_base *= 2U;
  }
  else ;
  
#line 143 
  dbgi_wr_data3(adap,0U,0U,0U);
  
#line 144 
  i = 0U;
  
#line 144 
  goto ldv_47504;
  ldv_47503: 
#line 145 
  ;
  
#line 145 
  tmp_0 = mc5_write(adap,(i << addr_shift) + data_array_base,write_cmd);
  
#line 145 
  if (tmp_0 != 0) {
    
#line 147 
    __retres = -1;
    
#line 147 
    goto return_label;
  }
  else ;
  
#line 144 
  i += 1U;
  ldv_47504: 
#line 145 
  ;
  
#line 144 
  if (i < size72) 
#line 146 
                  goto ldv_47503; else 
#line 149 
                                       goto ldv_47505;
  ldv_47505: 
#line 150 
  ;
  
#line 150 
  dbgi_wr_data3(adap,4294967295U,4294967295U,255U);
  
#line 151 
  i = 0U;
  
#line 151 
  goto ldv_47507;
  ldv_47506: 
#line 152 
  ;
  
#line 152 
  if (i == server_base) {
    unsigned int tmp_1;
    
#line 153 
    if ((unsigned int)mc5->mode == 1U) 
#line 153 
                                       tmp_1 = 4294967289U; else 
#line 153 
                                                                 tmp_1 = 4294967293U;
    
#line 153 
    ;
    
#line 153 
    t3_write_reg(adap,1928U,tmp_1);
  }
  else ;
  
#line 156 
  tmp_2 = mc5_write(adap,(i << addr_shift) + mask_array_base,write_cmd);
  
#line 156 
  if (tmp_2 != 0) {
    
#line 158 
    __retres = -1;
    
#line 158 
    goto return_label;
  }
  else ;
  
#line 151 
  i += 1U;
  ldv_47507: 
#line 152 
  ;
  
#line 151 
  if (i < size72) 
#line 153 
                  goto ldv_47506; else 
#line 156 
                                       goto ldv_47508;
  ldv_47508: 
#line 157 
  ;
  
#line 160 
  __retres = 0;
  return_label: 
#line 160 
                return __retres;
}


#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
static int init_idt52100(struct mc5 *mc5)
{
  int __retres;
  int i;
  int tmp;
  int tmp_0;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  
#line 166 
  struct adapter *adap = mc5->adapter;
  
#line 168 
  t3_write_reg(adap,1824U,1381653U);
  
#line 170 
  t3_write_reg(adap,1836U,2U);
  
#line 176 
  t3_write_reg(adap,1996U,1U);
  
#line 177 
  t3_write_reg(adap,2000U,1U);
  
#line 178 
  t3_write_reg(adap,2004U,2U);
  
#line 179 
  t3_write_reg(adap,2008U,3U);
  
#line 180 
  t3_write_reg(adap,2012U,24578U);
  
#line 181 
  t3_write_reg(adap,2016U,3U);
  
#line 182 
  t3_write_reg(adap,2020U,2U);
  
#line 183 
  t3_write_reg(adap,2024U,3U);
  
#line 184 
  t3_write_reg(adap,2028U,2U);
  
#line 185 
  t3_write_reg(adap,2032U,28674U);
  
#line 186 
  t3_write_reg(adap,2036U,1U);
  
#line 187 
  t3_write_reg(adap,2040U,0U);
  
#line 190 
  t3_write_reg(adap,1908U,5U);
  
#line 193 
  dbgi_wr_data3(adap,4294901760U,0U,0U);
  
#line 194 
  tmp = mc5_write(adap,1572870U,1U);
  
#line 194 
  if (tmp != 0) 
#line 195 
                goto err; else ;
  
#line 198 
  dbgi_wr_data3(adap,4294967295U,4294967295U,0U);
  
#line 199 
  tmp_0 = mc5_write(adap,1572866U,1U);
  
#line 199 
  if (tmp_0 != 0) 
#line 201 
                  goto err;
  else {
    int tmp_1;
    
#line 199 
    tmp_1 = mc5_write(adap,1572868U,1U);
    
#line 199 
    if (tmp_1 != 0) 
#line 201 
                    goto err; else ;
  }
  
#line 204 
  i = 0;
  
#line 204 
  goto ldv_47516;
  ldv_47515: 
#line 205 
  ;
  
#line 205 
  if ((unsigned int)i + 4294967284U <= 2U) 
#line 206 
                                           dbgi_wr_data3(adap,4294967289U,4294967295U,255U);
  else 
    
#line 207 
    if (i == 15) 
#line 208 
                 dbgi_wr_data3(adap,4294967289U,4294934535U,255U); else 
                                                                    
#line 210 
                                                                    dbgi_wr_data3(adap,4294967295U,4294967295U,255U);
  
#line 212 
  tmp_2 = mc5_write(adap,(unsigned int)(i + 1572896),1U);
  
#line 212 
  if (tmp_2 != 0) 
#line 213 
                  goto err; else ;
  
#line 204 
  i += 1;
  ldv_47516: 
#line 205 
  ;
  
#line 204 
  if (i <= 31) 
#line 206 
               goto ldv_47515; else 
#line 209 
                                    goto ldv_47517;
  ldv_47517: 
#line 210 
  ;
  
#line 217 
  dbgi_wr_data3(adap,1U,0U,0U);
  
#line 218 
  tmp_3 = mc5_write(adap,1572864U,1U);
  
#line 218 
  if (tmp_3 != 0) 
#line 219 
                  goto err; else ;
  
#line 221 
  tmp_4 = init_mask_data_array(mc5,524288U,0U,1U,0);
  
#line 221 
  __retres = tmp_4;
  
#line 221 
  goto return_label;
  err: 
#line 223 
  ;
  
#line 224 
  __retres = -5;
  return_label: 
#line 224 
                return __retres;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
static int init_idt43102(struct mc5 *mc5)
{
  int __retres;
  int i;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  
#line 230 
  struct adapter *adap = mc5->adapter;
  
#line 233 
  if (adap->params.rev == 0U) 
#line 233 
                              tmp = 851985; else 
#line 233 
                                                 tmp = 851986;
  
#line 232 
  ;
  
#line 232 
  t3_write_reg(adap,1824U,(unsigned int)tmp);
  
#line 240 
  t3_write_reg(adap,1996U,4U);
  
#line 241 
  t3_write_reg(adap,2000U,4U);
  
#line 242 
  t3_write_reg(adap,2004U,14339U);
  
#line 244 
  t3_write_reg(adap,2012U,3U);
  
#line 245 
  t3_write_reg(adap,2020U,14339U);
  
#line 246 
  t3_write_reg(adap,2028U,14339U);
  
#line 247 
  t3_write_reg(adap,2032U,2051U);
  
#line 248 
  t3_write_reg(adap,2036U,4U);
  
#line 249 
  t3_write_reg(adap,2040U,5U);
  
#line 251 
  t3_write_reg(adap,1836U,3U);
  
#line 254 
  t3_write_reg(adap,1908U,5U);
  
#line 257 
  dbgi_wr_data3(adap,4294967295U,4294967295U,255U);
  
#line 258 
  i = 0;
  
#line 258 
  goto ldv_47525;
  ldv_47524: 
#line 259 
  ;
  
#line 259 
  tmp_0 = mc5_write(adap,(unsigned int)(i + 16),4U);
  
#line 259 
  if (tmp_0 != 0) 
#line 260 
                  goto err; else ;
  
#line 258 
  i += 1;
  ldv_47525: 
#line 259 
  ;
  
#line 258 
  if (i <= 6) 
#line 260 
              goto ldv_47524; else 
#line 263 
                                   goto ldv_47526;
  ldv_47526: 
#line 264 
  ;
  
#line 262 
  i = 0;
  
#line 262 
  goto ldv_47528;
  ldv_47527: 
#line 263 
  ;
  
#line 263 
  tmp_1 = mc5_write(adap,(unsigned int)(i + 48),4U);
  
#line 263 
  if (tmp_1 != 0) 
#line 264 
                  goto err; else ;
  
#line 262 
  i += 1;
  ldv_47528: 
#line 263 
  ;
  
#line 262 
  if (i <= 3) 
#line 264 
              goto ldv_47527; else 
#line 267 
                                   goto ldv_47529;
  ldv_47529: 
#line 268 
  ;
  
#line 266 
  dbgi_wr_data3(adap,4294967289U,4294967295U,255U);
  
#line 267 
  tmp_2 = mc5_write(adap,32U,4U);
  
#line 267 
  if (tmp_2 != 0) 
#line 270 
                  goto err;
  else {
    int tmp_3;
    
#line 267 
    tmp_3 = mc5_write(adap,33U,4U);
    
#line 267 
    if (tmp_3 != 0) 
#line 270 
                    goto err;
    else {
      int tmp_4;
      
#line 268 
      tmp_4 = mc5_write(adap,36U,4U);
      
#line 268 
      if (tmp_4 != 0) 
#line 270 
                      goto err; else ;
    }
  }
  
#line 272 
  dbgi_wr_data3(adap,4294967289U,4294934535U,255U);
  
#line 273 
  tmp_5 = mc5_write(adap,37U,4U);
  
#line 273 
  if (tmp_5 != 0) 
#line 274 
                  goto err; else ;
  
#line 277 
  dbgi_wr_data3(adap,4026531840U,0U,0U);
  
#line 278 
  tmp_6 = mc5_write(adap,3U,4U);
  
#line 278 
  if (tmp_6 != 0) 
#line 279 
                  goto err; else ;
  
#line 281 
  tmp_7 = init_mask_data_array(mc5,33554432U,16777216U,4U,1);
  
#line 281 
  __retres = tmp_7;
  
#line 281 
  goto return_label;
  err: 
#line 283 
  ;
  
#line 284 
  __retres = -5;
  return_label: 
#line 284 
                return __retres;
}


#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
__inline static void mc5_dbgi_mode_enable(struct mc5 const *mc5)
{
  unsigned int tmp;
  
#line 290 
  if ((unsigned int)mc5->mode == 2U) 
#line 290 
                                     tmp = 17U; else 
#line 290 
                                                     tmp = 16U;
  
#line 290 
  ;
  
#line 290 
  t3_write_reg(mc5->adapter,1796U,tmp);
  
#line 292 
  return;
}


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
static void mc5_dbgi_mode_disable(struct mc5 const *mc5)
{
  int tmp;
  
#line 298 
  if ((unsigned int)mc5->mode == 2U) 
#line 298 
                                     tmp = 131072; else 
#line 298 
                                                        tmp = 0;
  
#line 297 
  ;
  
#line 297 
  ;
  
#line 297 
  t3_write_reg(mc5->adapter,1796U,(unsigned int)((((unsigned int)mc5->mode == 2U) | tmp) | ((int)mc5->parity_enabled << 6)) | 32U);
  
#line 301 
  return;
}


#line 307  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
int t3_mc5_init(struct mc5 *mc5, unsigned int nservers, unsigned int nfilters, unsigned int nroutes)
{
  int __retres;
  u32 cfg;
  int err;
  u32 tmp;
  unsigned int tmp_0;
  int tmp_1;
  
#line 312 
  unsigned int tcam_size = mc5->tcam_size;
  
#line 313 
  struct adapter *adap = mc5->adapter;
  
#line 315 
  if (tcam_size == 0U) {
    
#line 316 
    __retres = 0;
    
#line 316 
    goto return_label;
  }
  else ;
  
#line 318 
  if (nroutes > 2048U || (nroutes + nservers) + nfilters > tcam_size) {
    
#line 319 
    __retres = -22;
    
#line 319 
    goto return_label;
  }
  else ;
  
#line 322 
  tmp = t3_read_reg(adap,1796U);
  
#line 322 
  cfg = tmp & 4294967294U;
  
#line 323 
  if ((unsigned int)mc5->mode == 2U) 
#line 323 
                                     tmp_0 = 3U; else 
#line 323 
                                                      tmp_0 = 2U;
  
#line 323 
  cfg = tmp_0 | cfg;
  
#line 324 
  t3_write_reg(adap,1796U,cfg);
  
#line 325 
  tmp_1 = t3_wait_op_done(adap,1796,4U,1,500,0);
  
#line 325 
  if (tmp_1 != 0) {
    
#line 326 
    dev_err((struct device const *)(& (adap->pdev)->dev),"TCAM reset timed out\n");
    
#line 327 
    __retres = -1;
    
#line 327 
    goto return_label;
  }
  else ;
  
#line 330 
  t3_write_reg(adap,1804U,tcam_size - nroutes);
  
#line 331 
  t3_write_reg(adap,1808U,(tcam_size - nroutes) - nfilters);
  
#line 333 
  t3_write_reg(adap,1812U,((tcam_size - nroutes) - nfilters) - nservers);
  
#line 336 
  mc5->parity_enabled = (unsigned char)1U;
  
#line 339 
  t3_write_reg(adap,1920U,0U);
  
#line 340 
  t3_write_reg(adap,1924U,0U);
  
#line 342 
  mc5_dbgi_mode_enable((struct mc5 const *)mc5);
  
#line 344 
  switch ((int)mc5->part_type) {
    case 4: 
#line 345 
    ;
    
#line 346 
    err = init_idt52100(mc5);
    
#line 347 
    goto ldv_47547;
    case 5: 
#line 348 
    ;
    
#line 349 
    err = init_idt43102(mc5);
    
#line 350 
    goto ldv_47547;
    default: 
#line 351 
    ;
    
#line 352 
    dev_err((struct device const *)(& (adap->pdev)->dev),"Unsupported TCAM type %d\n",(int)mc5->part_type);
    
#line 353 
    err = -22;
    
#line 354 
    goto ldv_47547;
  }
  ldv_47547: 
#line 357 
  ;
  
#line 357 
  mc5_dbgi_mode_disable((struct mc5 const *)mc5);
  
#line 358 
  __retres = err;
  return_label: 
#line 358 
                return __retres;
}


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
void t3_mc5_intr_handler(struct mc5 *mc5)
{
  
#line 369 
  struct adapter *adap = mc5->adapter;
  
#line 370 
  u32 cause = t3_read_reg(adap,1860U);
  
#line 372 
  if ((cause & 64U) != 0U && (unsigned int)mc5->parity_enabled != 0U) {
    
#line 373 
    dev_alert((struct device const *)(& (adap->pdev)->dev),"MC5 parity error\n");
    
#line 374 
    mc5->stats.parity_err += 1UL;
  }
  else ;
  
#line 377 
  if ((cause & 65536U) != 0U) {
    
#line 378 
    dev_alert((struct device const *)(& (adap->pdev)->dev),"MC5 request queue parity error\n");
    
#line 379 
    mc5->stats.reqq_parity_err += 1UL;
  }
  else ;
  
#line 382 
  if ((cause & 131072U) != 0U) {
    
#line 383 
    dev_alert((struct device const *)(& (adap->pdev)->dev),"MC5 dispatch queue parity error\n");
    
#line 384 
    mc5->stats.dispq_parity_err += 1UL;
  }
  else ;
  
#line 387 
  if ((cause & 128U) != 0U) 
#line 388 
                            mc5->stats.active_rgn_full += 1UL; else ;
  
#line 389 
  if ((cause & 256U) != 0U) 
#line 390 
                            mc5->stats.nfa_srch_err += 1UL; else ;
  
#line 391 
  if ((cause & 32768U) != 0U) 
#line 392 
                              mc5->stats.unknown_cmd += 1UL; else ;
  
#line 393 
  if ((cause & 262144U) != 0U) 
#line 394 
                               mc5->stats.del_act_empty += 1UL; else ;
  
#line 395 
  if ((cause & 196672U) != 0U) 
#line 396 
                               t3_fatal_err(adap); else ;
  
#line 398 
  t3_write_reg(adap,1860U,cause);
  
#line 399 
  return;
}


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/mc5.c"
void t3_mc5_prep(struct adapter *adapter, struct mc5 *mc5, int mode)
{
  
#line 405 
  unsigned int tcam_part_size[4U] = {65536U, 131072U, 262144U, 32768U};
  
#line 411 
  u32 cfg = t3_read_reg(adapter,1796U);
  
#line 413 
  mc5->adapter = adapter;
  
#line 414 
  mc5->mode = (unsigned char)mode;
  
#line 415 
  mc5->part_type = (unsigned char)((unsigned int)((unsigned char)(cfg >> 26)) & 3U);
  
#line 416 
  if ((cfg & 1073741824U) != 0U) 
#line 417 
                                 mc5->part_type = (unsigned char)((unsigned int)mc5->part_type | 4U); else ;
  
#line 419 
  mc5->tcam_size = tcam_part_size[(cfg >> 28) & 3U];
  
#line 420 
  if (mode == 1) 
#line 421 
                 mc5->tcam_size /= 2U; else ;
  
#line 422 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static int t3_mdio_read(struct cphy *phy, int mmd, int reg, unsigned int *valp)
{
  int tmp;
  int tmp_0;
  int tmp_1;
  
#line 564 
  tmp = (*(phy->mdio.mdio_read))(phy->mdio.dev,phy->mdio.prtad,mmd,(unsigned short)((int)((unsigned short)reg)));
  
#line 564 
  int rc = tmp;
  
#line 565 
  if (-1 > rc) 
#line 565 
               tmp_0 = -1; else 
#line 565 
                                tmp_0 = rc;
  
#line 565 
  *valp = (unsigned int)tmp_0;
  
#line 566 
  if (0 < rc) 
#line 566 
              tmp_1 = 0; else 
#line 566 
                              tmp_1 = rc;
  
#line 566 
  return tmp_1;
}


#line 569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static int t3_mdio_write(struct cphy *phy, int mmd, int reg, unsigned int val)
{
  int tmp;
  
#line 572 
  tmp = (*(phy->mdio.mdio_write))(phy->mdio.dev,phy->mdio.prtad,mmd,(unsigned short)((int)((unsigned short)reg)),(unsigned short)((int)((unsigned short)val)));
  
#line 572 
  return tmp;
}


#line 577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static void cphy_init(struct cphy *phy, struct adapter *adapter, int phy_addr, struct cphy_ops *phy_ops, struct mdio_ops const *mdio_ops, unsigned int caps, char const *desc)
{
  
#line 582 
  phy->caps = caps;
  
#line 583 
  phy->adapter = adapter;
  
#line 584 
  phy->desc = desc;
  
#line 585 
  phy->ops = (struct cphy_ops const *)phy_ops;
  
#line 586 
  if (mdio_ops != (struct mdio_ops const *)0) {
    
#line 587 
    phy->mdio.prtad = phy_addr;
    
#line 588 
    phy->mdio.mmds = phy_ops->mmds;
    
#line 589 
    phy->mdio.mode_support = mdio_ops->mode_support;
    
#line 590 
    phy->mdio.mdio_read = mdio_ops->read;
    
#line 591 
    phy->mdio.mdio_write = mdio_ops->write;
  }
  else ;
  
#line 593 
  return;
}


#line 654 
int t3_mdio_change_bits(struct cphy *phy, int mmd, int reg, unsigned int clear, unsigned int set);


#line 656 
int t3_phy_reset(struct cphy *phy, int mmd, int wait);


#line 657 
int t3_phy_advertise(struct cphy *phy, unsigned int advert);


#line 658 
int t3_phy_advertise_fiber(struct cphy *phy, unsigned int advert);


#line 659 
int t3_set_phy_speed_duplex(struct cphy *phy, int speed, int duplex);


#line 757 
int t3_vsc8211_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_reset(struct cphy *cphy, int wait)
{
  int tmp;
  
#line 94 
  tmp = t3_phy_reset(cphy,-1,0);
  
#line 94 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_intr_enable(struct cphy *cphy)
{
  int tmp;
  
#line 99 
  tmp = t3_mdio_write(cphy,-1,25,64608U);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_intr_disable(struct cphy *cphy)
{
  int tmp;
  
#line 105 
  tmp = t3_mdio_write(cphy,-1,25,0U);
  
#line 105 
  return tmp;
}


#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_intr_clear(struct cphy *cphy)
{
  u32 val;
  int tmp;
  
#line 113 
  tmp = t3_mdio_read(cphy,-1,26,& val);
  
#line 113 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_autoneg_enable(struct cphy *cphy)
{
  int tmp;
  
#line 118 
  tmp = t3_mdio_change_bits(cphy,-1,0,3072U,4608U);
  
#line 118 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_autoneg_restart(struct cphy *cphy)
{
  int tmp;
  
#line 125 
  tmp = t3_mdio_change_bits(cphy,-1,0,3072U,512U);
  
#line 125 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_get_link_status(struct cphy *cphy, int *link_ok, int *speed, int *duplex, int *fc)
{
  int __retres;
  unsigned int bmcr;
  unsigned int status;
  unsigned int lpa;
  unsigned int adv;
  int err;
  
#line 134 
  int sp = -1;
  
#line 134 
  int dplx = -1;
  
#line 134 
  int pause = 0;
  
#line 136 
  err = t3_mdio_read(cphy,-1,0,& bmcr);
  
#line 137 
  if (err == 0) 
#line 138 
                err = t3_mdio_read(cphy,-1,1,& status); else ;
  
#line 139 
  if (err != 0) {
    
#line 140 
    __retres = err;
    
#line 140 
    goto return_label;
  }
  else ;
  
#line 142 
  if (link_ok != (int *)0) {
    
#line 147 
    if ((status & 4U) == 0U) 
#line 148 
                             err = t3_mdio_read(cphy,-1,1,& status); else ;
    
#line 150 
    if (err != 0) {
      
#line 151 
      __retres = err;
      
#line 151 
      goto return_label;
    }
    else ;
    
#line 152 
    *link_ok = (status & 4U) != 0U;
  }
  else ;
  
#line 154 
  if ((bmcr & 4096U) == 0U) {
    
#line 155 
    dplx = (int)(bmcr >> 8) & 1;
    
#line 156 
    if ((bmcr & 64U) != 0U) 
#line 157 
                            sp = 1000;
    else 
      
#line 158 
      if ((bmcr & 8192U) != 0U) 
#line 159 
                                sp = 100; else 
#line 161 
                                               sp = 10;
  }
  else 
    
#line 162 
    if ((status & 32U) != 0U) {
      
#line 163 
      err = t3_mdio_read(cphy,-1,28,& status);
      
#line 165 
      if (err != 0) {
        
#line 166 
        __retres = err;
        
#line 166 
        goto return_label;
      }
      else ;
      
#line 168 
      dplx = (int)(status >> 5) & 1;
      
#line 169 
      sp = (int)(status >> 3) & 3;
      
#line 170 
      if (sp == 0) 
#line 171 
                   sp = 10;
      else 
        
#line 172 
        if (sp == 1) 
#line 173 
                     sp = 100; else 
#line 175 
                                    sp = 1000;
      
#line 177 
      if (fc != (int *)0 && dplx == 1) {
        
#line 178 
        err = t3_mdio_read(cphy,-1,5,& lpa);
        
#line 180 
        if (err == 0) 
#line 181 
                      err = t3_mdio_read(cphy,-1,4,& adv); else ;
        
#line 183 
        if (err != 0) {
          
#line 184 
          __retres = err;
          
#line 184 
          goto return_label;
        }
        else ;
        
#line 186 
        if (((lpa & adv) & 1024U) != 0U) 
#line 187 
                                         pause = 3;
        else 
          
#line 188 
          if (((lpa & 1024U) != 0U && (lpa & 2048U) != 0U) && (adv & 2048U) != 0U) 
            
#line 191 
            pause = 2;
          else 
            
#line 192 
            if ((lpa & 2048U) != 0U && (adv & 1024U) != 0U) 
#line 194 
                                                            pause = 1; else ;
      }
      else ;
    }
    else ;
  
#line 197 
  if (speed != (int *)0) 
#line 198 
                         *speed = sp; else ;
  
#line 199 
  if (duplex != (int *)0) 
#line 200 
                          *duplex = dplx; else ;
  
#line 201 
  if (fc != (int *)0) 
#line 202 
                      *fc = pause; else ;
  
#line 203 
  __retres = 0;
  return_label: 
#line 203 
                return __retres;
}


#line 206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_get_link_status_fiber(struct cphy *cphy, int *link_ok, int *speed, int *duplex, int *fc)
{
  int __retres;
  unsigned int bmcr;
  unsigned int status;
  unsigned int lpa;
  unsigned int adv;
  int err;
  
#line 210 
  int sp = -1;
  
#line 210 
  int dplx = -1;
  
#line 210 
  int pause = 0;
  
#line 212 
  err = t3_mdio_read(cphy,-1,0,& bmcr);
  
#line 213 
  if (err == 0) 
#line 214 
                err = t3_mdio_read(cphy,-1,1,& status); else ;
  
#line 215 
  if (err != 0) {
    
#line 216 
    __retres = err;
    
#line 216 
    goto return_label;
  }
  else ;
  
#line 218 
  if (link_ok != (int *)0) {
    
#line 223 
    if ((status & 4U) == 0U) 
#line 224 
                             err = t3_mdio_read(cphy,-1,1,& status); else ;
    
#line 226 
    if (err != 0) {
      
#line 227 
      __retres = err;
      
#line 227 
      goto return_label;
    }
    else ;
    
#line 228 
    *link_ok = (status & 4U) != 0U;
  }
  else ;
  
#line 230 
  if ((bmcr & 4096U) == 0U) {
    
#line 231 
    dplx = (int)(bmcr >> 8) & 1;
    
#line 232 
    if ((bmcr & 64U) != 0U) 
#line 233 
                            sp = 1000;
    else 
      
#line 234 
      if ((bmcr & 8192U) != 0U) 
#line 235 
                                sp = 100; else 
#line 237 
                                               sp = 10;
  }
  else 
    
#line 238 
    if ((status & 32U) != 0U) {
      
#line 239 
      err = t3_mdio_read(cphy,-1,5,& lpa);
      
#line 240 
      if (err == 0) 
#line 241 
                    err = t3_mdio_read(cphy,-1,4,& adv); else ;
      
#line 243 
      if (err != 0) {
        
#line 244 
        __retres = err;
        
#line 244 
        goto return_label;
      }
      else ;
      
#line 246 
      if (((adv & lpa) & 32U) != 0U) {
        
#line 247 
        dplx = 1;
        
#line 248 
        sp = 1000;
      }
      else 
        
#line 249 
        if (((adv & lpa) & 64U) != 0U) {
          
#line 250 
          dplx = 0;
          
#line 251 
          sp = 1000;
        }
        else ;
      
#line 254 
      if (fc != (int *)0 && dplx == 1) {
        
#line 255 
        if (((lpa & adv) & 128U) != 0U) 
#line 256 
                                        pause = 3;
        else 
          
#line 257 
          if ((lpa & 128U) != 0U && ((adv & lpa) & 256U) != 0U) 
#line 259 
                                                                pause = 2;
          else 
            
#line 260 
            if ((lpa & 256U) != 0U && (adv & 128U) != 0U) 
#line 262 
                                                          pause = 1; else ;
      }
      else ;
    }
    else ;
  
#line 265 
  if (speed != (int *)0) 
#line 266 
                         *speed = sp; else ;
  
#line 267 
  if (duplex != (int *)0) 
#line 268 
                          *duplex = dplx; else ;
  
#line 269 
  if (fc != (int *)0) 
#line 270 
                      *fc = pause; else ;
  
#line 271 
  __retres = 0;
  return_label: 
#line 271 
                return __retres;
}


#line 316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_power_down(struct cphy *cphy, int enable)
{
  int tmp_0;
  int tmp;
  
#line 319 
  if (enable != 0) 
#line 319 
                   tmp = 2048; else 
#line 319 
                                    tmp = 0;
  
#line 318 
  ;
  
#line 318 
  tmp_0 = t3_mdio_change_bits(cphy,0,0,2048U,(unsigned int)tmp);
  
#line 318 
  return tmp_0;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static int vsc8211_intr_handler(struct cphy *cphy)
{
  int __retres;
  unsigned int cause;
  int err;
  
#line 325 
  int cphy_cause = 0;
  
#line 327 
  err = t3_mdio_read(cphy,-1,26,& cause);
  
#line 328 
  if (err != 0) {
    
#line 329 
    __retres = err;
    
#line 329 
    goto return_label;
  }
  else ;
  
#line 331 
  cause &= 64608U;
  
#line 332 
  if ((cause & 31744U) != 0U) 
#line 333 
                              cphy_cause |= 1; else ;
  
#line 334 
  if ((cause & 96U) != 0U) 
#line 335 
                           cphy_cause |= 2; else ;
  
#line 336 
  __retres = cphy_cause;
  return_label: 
#line 336 
                return __retres;
}


#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static struct cphy_ops vsc8211_ops = {.reset = & vsc8211_reset, .intr_enable = & vsc8211_intr_enable, .intr_disable = & vsc8211_intr_disable, .intr_clear = & vsc8211_intr_clear, .intr_handler = & vsc8211_intr_handler, .autoneg_enable = & vsc8211_autoneg_enable, .autoneg_restart = & vsc8211_autoneg_restart, .advertise = & t3_phy_advertise, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = & t3_set_phy_speed_duplex, .get_link_status = & vsc8211_get_link_status, .power_down = & vsc8211_power_down, .mmds = 0U};

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
static struct cphy_ops vsc8211_fiber_ops = {.reset = & vsc8211_reset, .intr_enable = & vsc8211_intr_enable, .intr_disable = & vsc8211_intr_disable, .intr_clear = & vsc8211_intr_clear, .intr_handler = & vsc8211_intr_handler, .autoneg_enable = & vsc8211_autoneg_enable, .autoneg_restart = & vsc8211_autoneg_restart, .advertise = & t3_phy_advertise_fiber, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = & t3_set_phy_speed_duplex, .get_link_status = & vsc8211_get_link_status_fiber, .power_down = & vsc8211_power_down, .mmds = 0U};

#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/vsc8211.c"
int t3_vsc8211_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  int err;
  unsigned int val;
  
#line 373 
  cphy_init(phy,adapter,phy_addr,& vsc8211_ops,mdio_ops,16777962U,"10/100/1000BASE-T");
  
#line 377 
  msleep(20U);
  
#line 379 
  err = t3_mdio_read(phy,-1,23,& val);
  
#line 380 
  if (err != 0) {
    
#line 381 
    __retres = err;
    
#line 381 
    goto return_label;
  }
  else ;
  
#line 382 
  if ((val & 61440U) != 0U) {
    int tmp;
    
#line 384 
    tmp = t3_mdio_write(phy,-1,27,256U);
    
#line 384 
    __retres = tmp;
    
#line 384 
    goto return_label;
  }
  else ;
  
#line 388 
  phy->caps = 16778848U;
  
#line 390 
  phy->desc = "1000BASE-X";
  
#line 391 
  phy->ops = (struct cphy_ops const *)(& vsc8211_fiber_ops);
  
#line 393 
  err = t3_mdio_write(phy,-1,31,1U);
  
#line 394 
  if (err != 0) {
    
#line 395 
    __retres = err;
    
#line 395 
    goto return_label;
  }
  else ;
  
#line 397 
  err = t3_mdio_write(phy,-1,19,1U);
  
#line 398 
  if (err != 0) {
    
#line 399 
    __retres = err;
    
#line 399 
    goto return_label;
  }
  else ;
  
#line 401 
  err = t3_mdio_write(phy,-1,31,0U);
  
#line 402 
  if (err != 0) {
    
#line 403 
    __retres = err;
    
#line 403 
    goto return_label;
  }
  else ;
  
#line 405 
  err = t3_mdio_write(phy,-1,23,val | 16U);
  
#line 407 
  if (err != 0) {
    
#line 408 
    __retres = err;
    
#line 408 
    goto return_label;
  }
  else ;
  
#line 410 
  err = vsc8211_reset(phy,0);
  
#line 411 
  if (err != 0) {
    
#line 412 
    __retres = err;
    
#line 412 
    goto return_label;
  }
  else ;
  
#line 414 
  __const_udelay(21475UL);
  
#line 415 
  __retres = 0;
  return_label: 
#line 415 
                return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 113 
void list_del(struct list_head *);


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __cmpxchg_wrong_size(void);


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
static void atomic_inc_1(atomic_t *v);


#line 114 
static void atomic_dec_0(atomic_t *v);


#line 120 
static int atomic_dec_and_test_0(atomic_t *v);


#line 159 
static int atomic_add_return_0(int i, atomic_t *v);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_1(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_93_0(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_95(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 391 
static void ldv_spin_lock_bh_97(spinlock_t *lock);


#line 395 
static void ldv_spin_lock_bh_99(spinlock_t *lock);


#line 399 
static void ldv_spin_lock_bh_101(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_103(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_106(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_109(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_111(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq_0(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_87(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_89(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_irq_91(spinlock_t *lock);


#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_1(spinlock_t *lock)
{
  
#line 377 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 378 
  return;
}


#line 419 
static void ldv_spin_unlock_94(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_96(spinlock_t *lock);


#line 424  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 426 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 427 
  return;
}


#line 456 
static void ldv_spin_unlock_bh_98(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_100(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_102(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_108(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_110(spinlock_t *lock);


#line 480 
static void ldv_spin_unlock_bh_112(spinlock_t *lock);


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq_0(spinlock_t *lock)
{
  
#line 483 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 484 
  return;
}


#line 497 
static void ldv_spin_unlock_irq_88(spinlock_t *lock);


#line 501 
static void ldv_spin_unlock_irq_90(spinlock_t *lock);


#line 505 
static void ldv_spin_unlock_irq_92(spinlock_t *lock);


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 508 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 509 
  return;
}


#line 538 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_75(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_77(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1);


#line 53 
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1);


#line 57 
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1);


#line 61 
static void ldv_mutex_lock_115(struct mutex *ldv_func_arg1);


#line 67 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 69 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 71 
void __ldv_spin_lock(spinlock_t *);


#line 98 
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1);


#line 209 
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1);


#line 213 
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1);


#line 217 
static void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
void call_rcu_sched(struct callback_head *, void (*)(struct callback_head *));


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 560 
static bool ldv_schedule_work_107(struct work_struct *work);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc(size_t size, gfp_t flags);


#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
void kvfree(void const *);


#line 1085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_get(struct sk_buff *skb)
{
  
#line 1087 
  atomic_inc_1(& skb->users);
  
#line 1088 
  return skb;
}


#line 1104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cloned(struct sk_buff const *skb)
{
  int tmp_1;
  
#line 1106 
  if ((unsigned int)*((unsigned char *)skb + 142UL) != 0U) {
    int tmp_0;
    unsigned char *tmp;
    
#line 1107 
    tmp = skb_end_pointer(skb);
    
#line 1106 
    tmp_0 = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
    
#line 1106 
    if ((tmp_0 & 65535) != 1) 
#line 1106 
                              tmp_1 = 1; else 
#line 1106 
                                              tmp_1 = 0;
  }
  else 
#line 1106 
       tmp_1 = 0;
  
#line 1106 
  return tmp_1;
}


#line 1655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_tail_pointer(struct sk_buff *skb)
{
  
#line 1657 
  skb->tail = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1658 
  return;
}


#line 1660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_tail_pointer(struct sk_buff *skb, int const offset)
{
  
#line 1662 
  skb_reset_tail_pointer(skb);
  
#line 1663 
  skb->tail += (unsigned int)offset;
  
#line 1664 
  return;
}


#line 2047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_trim(struct sk_buff *skb, unsigned int len)
{
  bool tmp_0;
  
#line 2049 
  tmp_0 = skb_is_nonlinear((struct sk_buff const *)skb);
  
#line 2049 
  if ((long)((int)tmp_0 != 0) != 0L) {
    {
      
#line 2050 
      int __ret_warn_on = 1;
      
#line 2050 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 2050 
                                            warn_slowpath_null("include/linux/skbuff.h",2050); else ;
      
#line 2050 
      long tmp = (long)(__ret_warn_on != 0);
    }
    
#line 2051 
    goto return_label;
  }
  else ;
  
#line 2053 
  skb->len = len;
  
#line 2054 
  skb_set_tail_pointer(skb,(int)len);
  return_label: 
#line 2055 
                return;
}


#line 3533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device *netdev_master_upper_dev_get_rcu(struct net_device *);


#line 3774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_is_bond_slave(struct net_device *dev)
{
  bool __retres;
  
#line 3776 
  __retres = (_Bool)(((dev->flags & 2048U) != 0U && (dev->priv_flags & 32U) != 0U) != 0);
  
#line 3776 
  return __retres;
}


#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct net_device *__vlan_find_dev_deep_rcu(struct net_device *, __be16, u16);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netevent.h"
int register_netevent_notifier(struct notifier_block *);


#line 30 
int unregister_netevent_notifier(struct notifier_block *);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 451  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static unsigned int t3_mc5_size(struct mc5 const *p)
{
  unsigned int __retres;
  
#line 453 
  __retres = p->tcam_size;
  
#line 453 
  return __retres;
}


#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
__inline static int offload_running(struct adapter *adapter)
{
  int tmp;
  
#line 304 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
  
#line 304 
  return tmp;
}


#line 682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
int t3_get_tp_version(struct adapter *adapter, u32 *vers);


#line 688 
int t3_get_fw_version(struct adapter *adapter, u32 *vers);


#line 702 
int t3_mc7_bd_read(struct mc7 *mc7, unsigned int start, unsigned int n, u64 *buf);


#line 725 
void t3_tp_get_mib_stats(struct adapter *adap, struct tp_mib_stats *tps);


#line 747 
int t3_sge_init_cqcntxt(struct adapter *adapter, unsigned int id, u64 base_addr, unsigned int size, int rspq, int ovfl_mode, unsigned int credits, unsigned int credit_thres);


#line 753 
int t3_sge_disable_cqcntxt(struct adapter *adapter, unsigned int id);


#line 754 
int t3_sge_cqcntxt_op(struct adapter *adapter, unsigned int id, unsigned int op, unsigned int credits);


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
__inline static void l2t_release(struct t3cdev *t, struct l2t_entry *e)
{
  struct l2t_data *d;
  void *tmp_3;
  int tmp_4;
  
#line 134 
  rcu_read_lock();
  {
    void *tmp_0;
    {
      void *tmp;
      {
        union __anonunion___u_1770 __u;
        
#line 135 
        __read_once_size((void const volatile *)(& t->l2opt),(void *)(& __u.__c),8);
        
#line 135 
        tmp = __u.__val;
      }
      
#line 135 
      void *_________p1 = tmp;
      
#line 135 
      tmp_0 = _________p1;
    }
    
#line 135 
    void *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 135 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 135 
      if (tmp_1 != 0) {
        
#line 135 
        if (! __warned) {
          int tmp_2;
          
#line 135 
          tmp_2 = rcu_read_lock_held();
          
#line 135 
          if (tmp_2 == 0) {
            
#line 135 
            __warned = (_Bool)1;
            
#line 135 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h",135,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 135 
    tmp_3 = ________p1;
  }
  
#line 135 
  d = (struct l2t_data *)tmp_3;
  
#line 137 
  tmp_4 = atomic_dec_and_test_0(& e->refcnt);
  
#line 137 
  if (tmp_4 != 0) {
    
#line 137 
    if (d != (struct l2t_data *)0) 
#line 138 
                                   t3_l2e_free(d,e); else ;
  }
  else ;
  
#line 140 
  rcu_read_unlock();
  
#line 141 
  return;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/l2t.h"
__inline static void l2t_hold_0(struct l2t_data *d, struct l2t_entry *e)
{
  
#line 145 
  if (d != (struct l2t_data *)0) {
    int tmp;
    
#line 145 
    tmp = atomic_add_return_0(1,& e->refcnt);
    
#line 145 
    if (tmp == 1) 
#line 146 
                  atomic_dec_0(& d->nfree); else ;
  }
  else ;
  
#line 147 
  return;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
void cxgb3_offload_init(void);


#line 47 
void cxgb3_adapter_ofld(struct adapter *adapter);


#line 48 
void cxgb3_adapter_unofld(struct adapter *adapter);


#line 49 
int cxgb3_offload_activate(struct adapter *adapter);


#line 50 
void cxgb3_offload_deactivate(struct adapter *adapter);


#line 52 
void cxgb3_set_dummy_ops(struct t3cdev *dev);


#line 54 
struct t3cdev *dev2t3cdev(struct net_device *dev);


#line 63 
void cxgb3_register_client(struct cxgb3_client *client);


#line 64 
void cxgb3_unregister_client(struct cxgb3_client *client);


#line 65 
void cxgb3_add_clients(struct t3cdev *tdev);


#line 66 
void cxgb3_remove_clients(struct t3cdev *tdev);


#line 67 
void cxgb3_event_notify(struct t3cdev *tdev, u32 event, u32 port);


#line 96 
int cxgb3_alloc_atid(struct t3cdev *tdev, struct cxgb3_client *client, void *ctx);


#line 98 
int cxgb3_alloc_stid(struct t3cdev *tdev, struct cxgb3_client *client, void *ctx);


#line 100 
void *cxgb3_free_atid(struct t3cdev *tdev, int atid);


#line 101 
void cxgb3_free_stid(struct t3cdev *tdev, int stid);


#line 102 
void cxgb3_insert_tid(struct t3cdev *tdev, struct cxgb3_client *client, void *ctx, unsigned int tid);


#line 104 
void cxgb3_queue_tid_release(struct t3cdev *tdev, unsigned int tid);


#line 105 
void cxgb3_remove_tid(struct t3cdev *tdev, void *ctx, unsigned int tid);


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.h"
__inline static void *cplhdr(struct sk_buff *skb)
{
  void *__retres;
  
#line 137 
  __retres = (void *)skb->data;
  
#line 137 
  return __retres;
}


#line 140 
void t3_register_cpl_handler(unsigned int opcode, int (*h)(struct t3cdev *, struct sk_buff *));


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_defs.h"
__inline static union active_open_entry *atid2entry(struct tid_info const *t, unsigned int atid)
{
  union active_open_entry *__retres;
  
#line 53 
  __retres = t->atid_tab + (atid - t->atid_base);
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_defs.h"
__inline static union listen_entry *stid2entry(struct tid_info const *t, unsigned int stid)
{
  union listen_entry *__retres;
  
#line 59 
  __retres = t->stid_tab + (stid - t->stid_base);
  
#line 59 
  return __retres;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_defs.h"
__inline static struct t3c_tid_entry *lookup_tid(struct tid_info const *t, unsigned int tid)
{
  struct t3c_tid_entry *tmp;
  struct t3c_tid_entry *tmp_0;
  
#line 68 
  if (t->ntids > tid) 
#line 68 
                      tmp = t->tid_tab + tid; else 
#line 68 
                                                   tmp = (struct t3c_tid_entry *)0;
  
#line 68 
  struct t3c_tid_entry *t3c_tid = tmp;
  
#line 71 
  if (t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->client != (struct cxgb3_client *)0) 
    
#line 71 
    tmp_0 = t3c_tid; else 
#line 71 
                          tmp_0 = (struct t3c_tid_entry *)0;
  
#line 71 
  return tmp_0;
}


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_defs.h"
__inline static struct t3c_tid_entry *lookup_stid(struct tid_info const *t, unsigned int tid)
{
  struct t3c_tid_entry *__retres;
  union listen_entry *e;
  
#line 82 
  if (t->stid_base > tid || t->stid_base + t->nstids <= tid) {
    
#line 83 
    __retres = (struct t3c_tid_entry *)0;
    
#line 83 
    goto return_label;
  }
  else ;
  
#line 85 
  e = stid2entry(t,tid);
  
#line 86 
  if ((void *)e->next >= (void *)t->tid_tab && (void *)e->next < (void *)(t->atid_tab + t->natids)) {
    
#line 88 
    __retres = (struct t3c_tid_entry *)0;
    
#line 88 
    goto return_label;
  }
  else ;
  
#line 90 
  __retres = & e->t3c_tid;
  return_label: 
#line 90 
                return __retres;
}


#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_defs.h"
__inline static struct t3c_tid_entry *lookup_atid(struct tid_info const *t, unsigned int tid)
{
  struct t3c_tid_entry *__retres;
  union active_open_entry *e;
  
#line 101 
  if (t->atid_base > tid || t->atid_base + t->natids <= tid) {
    
#line 102 
    __retres = (struct t3c_tid_entry *)0;
    
#line 102 
    goto return_label;
  }
  else ;
  
#line 104 
  e = atid2entry(t,tid);
  
#line 105 
  if ((void *)e->next >= (void *)t->tid_tab && (void *)e->next < (void *)(t->atid_tab + t->natids)) {
    
#line 107 
    __retres = (struct t3c_tid_entry *)0;
    
#line 107 
    goto return_label;
  }
  else ;
  
#line 109 
  __retres = & e->t3c_tid;
  return_label: 
#line 109 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct list_head client_list = {.next = & client_list, .prev = & client_list};

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct list_head ofld_dev_list = {.next = & ofld_dev_list, .prev = & ofld_dev_list};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct mutex cxgb3_db_lock = {.count = {.counter = 1}, .wait_lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "cxgb3_db_lock.wait_lock", .cpu = 0, .ip = 0UL}}}}, .wait_list = {.next = & cxgb3_db_lock.wait_list, .prev = & cxgb3_db_lock.wait_list}, .owner = (struct task_struct *)0, .magic = (void *)(& cxgb3_db_lock), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "cxgb3_db_lock", .cpu = 0, .ip = 0UL}};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static rwlock_t adapter_list_lock = {.raw_lock = {.cnts = {.counter = 0}, .lock = {.val = {.counter = 0}}}, .magic = 3736018669U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "adapter_list_lock", .cpu = 0, .ip = 0UL}};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct list_head adapter_list = {.next = & adapter_list, .prev = & adapter_list};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static unsigned int const ATID_BASE = 65536U;

#line 66 
static void cxgb_neigh_update(struct neighbour *neigh);


#line 67 
static void cxgb_redirect(struct dst_entry *old, struct dst_entry *new, struct neighbour *neigh, void const *daddr);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static int offload_activated(struct t3cdev *tdev)
{
  struct adapter *tmp;
  int tmp_0;
  {
    
#line 72 
    struct t3cdev const *__mptr = (struct t3cdev const *)tdev;
    
#line 72 
    tmp = (struct adapter *)__mptr;
  }
  
#line 72 
  struct adapter const *adapter = (struct adapter const *)tmp;
  
#line 74 
  tmp_0 = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
  
#line 74 
  return tmp_0;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_register_client(struct cxgb3_client *client)
{
  struct t3cdev *tdev;
  
#line 88 
  ldv_mutex_lock_75(& cxgb3_db_lock);
  
#line 89 
  list_add_tail(& client->client_list,& client_list);
  
#line 91 
  if (client->add != (void (*)(struct t3cdev *))0) {
    struct t3cdev *tmp;
    int tmp_0;
    struct t3cdev *tmp_1;
    {
      
#line 92 
      struct list_head const *__mptr = (struct list_head const *)ofld_dev_list.next;
      
#line 92 
      tmp = (struct t3cdev *)__mptr + 18446744073709551592U;
    }
    
#line 92 
    tdev = tmp;
    
#line 92 
    goto ldv_57165;
    ldv_57164: 
#line 93 
    ;
    
#line 93 
    tmp_0 = offload_activated(tdev);
    
#line 93 
    if (tmp_0 != 0) 
#line 94 
                    (*(client->add))(tdev); else ;
    {
      
#line 92 
      struct list_head const *__mptr_0 = (struct list_head const *)tdev->ofld_dev_list.next;
      
#line 92 
      tmp_1 = (struct t3cdev *)__mptr_0 + 18446744073709551592U;
    }
    
#line 92 
    tdev = tmp_1;
    ldv_57165: 
#line 94 
    ;
    
#line 92 
    if (& tdev->ofld_dev_list != & ofld_dev_list) 
#line 94 
                                                  goto ldv_57164; else 
                                                                    
#line 97 
                                                                    goto ldv_57166;
    ldv_57166: 
#line 98 
    ;
  }
  else ;
  
#line 97 
  ldv_mutex_unlock_76(& cxgb3_db_lock);
  
#line 98 
  return;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_register_client[22U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'c', (char)'l', (char)'i', (char)'e', (char)'n', (char)'t', (char)'\000'};

#line 100 
struct kernel_symbol const __ksymtab_cxgb3_register_client;


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_register_client = {.value = (unsigned long)(& cxgb3_register_client), .name = (char const *)(& __kstrtab_cxgb3_register_client)};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_unregister_client(struct cxgb3_client *client)
{
  struct t3cdev *tdev;
  
#line 113 
  ldv_mutex_lock_77(& cxgb3_db_lock);
  
#line 114 
  list_del(& client->client_list);
  
#line 116 
  if (client->remove != (void (*)(struct t3cdev *))0) {
    struct t3cdev *tmp;
    int tmp_0;
    struct t3cdev *tmp_1;
    {
      
#line 117 
      struct list_head const *__mptr = (struct list_head const *)ofld_dev_list.next;
      
#line 117 
      tmp = (struct t3cdev *)__mptr + 18446744073709551592U;
    }
    
#line 117 
    tdev = tmp;
    
#line 117 
    goto ldv_57183;
    ldv_57182: 
#line 118 
    ;
    
#line 118 
    tmp_0 = offload_activated(tdev);
    
#line 118 
    if (tmp_0 != 0) 
#line 119 
                    (*(client->remove))(tdev); else ;
    {
      
#line 117 
      struct list_head const *__mptr_0 = (struct list_head const *)tdev->ofld_dev_list.next;
      
#line 117 
      tmp_1 = (struct t3cdev *)__mptr_0 + 18446744073709551592U;
    }
    
#line 117 
    tdev = tmp_1;
    ldv_57183: 
#line 119 
    ;
    
#line 117 
    if (& tdev->ofld_dev_list != & ofld_dev_list) 
#line 119 
                                                  goto ldv_57182; else 
                                                                    
#line 122 
                                                                    goto ldv_57184;
    ldv_57184: 
#line 123 
    ;
  }
  else ;
  
#line 122 
  ldv_mutex_unlock_78(& cxgb3_db_lock);
  
#line 123 
  return;
}


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_unregister_client[24U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'u', (char)'n', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'c', (char)'l', (char)'i', (char)'e', (char)'n', (char)'t', (char)'\000'};

#line 125 
struct kernel_symbol const __ksymtab_cxgb3_unregister_client;


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_unregister_client = {.value = (unsigned long)(& cxgb3_unregister_client), .name = (char const *)(& __kstrtab_cxgb3_unregister_client)};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_add_clients(struct t3cdev *tdev)
{
  struct cxgb3_client *client;
  struct cxgb3_client *tmp;
  struct cxgb3_client *tmp_0;
  
#line 137 
  ldv_mutex_lock_79(& cxgb3_db_lock);
  {
    
#line 138 
    struct list_head const *__mptr = (struct list_head const *)client_list.next;
    
#line 138 
    tmp = (struct cxgb3_client *)__mptr + 18446744073709551576U;
  }
  
#line 138 
  client = tmp;
  
#line 138 
  goto ldv_57201;
  ldv_57200: 
#line 139 
  ;
  
#line 139 
  if (client->add != (void (*)(struct t3cdev *))0) 
#line 140 
                                                   (*(client->add))(tdev); else ;
  {
    
#line 138 
    struct list_head const *__mptr_0 = (struct list_head const *)client->client_list.next;
    
#line 138 
    tmp_0 = (struct cxgb3_client *)__mptr_0 + 18446744073709551576U;
  }
  
#line 138 
  client = tmp_0;
  ldv_57201: 
#line 140 
  ;
  
#line 138 
  if (& client->client_list != & client_list) 
#line 140 
                                              goto ldv_57200; else 
#line 143 
                                                                   goto ldv_57202;
  ldv_57202: 
#line 144 
  ;
  
#line 142 
  ldv_mutex_unlock_80(& cxgb3_db_lock);
  
#line 143 
  return;
}


#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_remove_clients(struct t3cdev *tdev)
{
  struct cxgb3_client *client;
  struct cxgb3_client *tmp;
  struct cxgb3_client *tmp_0;
  
#line 156 
  ldv_mutex_lock_81(& cxgb3_db_lock);
  {
    
#line 157 
    struct list_head const *__mptr = (struct list_head const *)client_list.next;
    
#line 157 
    tmp = (struct cxgb3_client *)__mptr + 18446744073709551576U;
  }
  
#line 157 
  client = tmp;
  
#line 157 
  goto ldv_57212;
  ldv_57211: 
#line 158 
  ;
  
#line 158 
  if (client->remove != (void (*)(struct t3cdev *))0) 
#line 159 
                                                      (*(client->remove))(tdev); else ;
  {
    
#line 157 
    struct list_head const *__mptr_0 = (struct list_head const *)client->client_list.next;
    
#line 157 
    tmp_0 = (struct cxgb3_client *)__mptr_0 + 18446744073709551576U;
  }
  
#line 157 
  client = tmp_0;
  ldv_57212: 
#line 159 
  ;
  
#line 157 
  if (& client->client_list != & client_list) 
#line 159 
                                              goto ldv_57211; else 
#line 162 
                                                                   goto ldv_57213;
  ldv_57213: 
#line 163 
  ;
  
#line 161 
  ldv_mutex_unlock_82(& cxgb3_db_lock);
  
#line 162 
  return;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_event_notify(struct t3cdev *tdev, u32 event, u32 port)
{
  struct cxgb3_client *client;
  struct cxgb3_client *tmp;
  struct cxgb3_client *tmp_0;
  
#line 168 
  ldv_mutex_lock_83(& cxgb3_db_lock);
  {
    
#line 169 
    struct list_head const *__mptr = (struct list_head const *)client_list.next;
    
#line 169 
    tmp = (struct cxgb3_client *)__mptr + 18446744073709551576U;
  }
  
#line 169 
  client = tmp;
  
#line 169 
  goto ldv_57225;
  ldv_57224: 
#line 170 
  ;
  
#line 170 
  if (client->event_handler != (void (*)(struct t3cdev *, u32 , u32 ))0) 
    
#line 171 
    (*(client->event_handler))(tdev,event,port); else ;
  {
    
#line 169 
    struct list_head const *__mptr_0 = (struct list_head const *)client->client_list.next;
    
#line 169 
    tmp_0 = (struct cxgb3_client *)__mptr_0 + 18446744073709551576U;
  }
  
#line 169 
  client = tmp_0;
  ldv_57225: 
#line 171 
  ;
  
#line 169 
  if (& client->client_list != & client_list) 
#line 171 
                                              goto ldv_57224; else 
#line 174 
                                                                   goto ldv_57226;
  ldv_57226: 
#line 175 
  ;
  
#line 173 
  ldv_mutex_unlock_84(& cxgb3_db_lock);
  
#line 174 
  return;
}


#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct net_device *get_iff_from_mac(struct adapter *adapter, unsigned char const *mac, unsigned int vlan)
{
  struct net_device *__retres;
  int i;
  
#line 182 
  i = 0;
  
#line 182 
  goto ldv_57239;
  ldv_57238: 
#line 183 
  ;
  {
    bool tmp_0;
    
#line 183 
    struct net_device *dev = adapter->port[i];
    
#line 185 
    tmp_0 = ether_addr_equal((u8 const *)dev->dev_addr,mac);
    
#line 185 
    if ((int)tmp_0 != 0) {
      
#line 186 
      rcu_read_lock();
      
#line 187 
      if (vlan != 0U && vlan != 4095U) 
#line 188 
                                       dev = __vlan_find_dev_deep_rcu(dev,(unsigned short)129,(unsigned short)((int)((unsigned short)vlan)));
      else {
        bool tmp;
        
#line 189 
        tmp = netif_is_bond_slave(dev);
        
#line 189 
        if ((int)tmp != 0) {
          struct net_device *upper_dev;
          
#line 192 
          goto ldv_57236;
          ldv_57235: 
#line 193 
          ;
          
#line 194 
          dev = upper_dev;
          ldv_57236: 
#line 195 
          ;
          
#line 192 
          upper_dev = netdev_master_upper_dev_get_rcu(dev);
          
#line 192 
          if (upper_dev != (struct net_device *)0) 
#line 194 
                                                   goto ldv_57235; else 
                                                                    
#line 197 
                                                                    goto ldv_57237;
          ldv_57237: 
#line 198 
          ;
        }
        else ;
      }
      
#line 196 
      rcu_read_unlock();
      
#line 197 
      __retres = dev;
      
#line 197 
      goto return_label;
    }
    else ;
  }
  
#line 182 
  i += 1;
  ldv_57239: 
#line 183 
  ;
  
#line 182 
  if (adapter->params.nports > (unsigned int)i) 
#line 184 
                                                goto ldv_57238; else 
                                                                  
#line 187 
                                                                  goto ldv_57240;
  ldv_57240: 
#line 188 
  ;
  
#line 200 
  __retres = (struct net_device *)0;
  return_label: 
#line 200 
                return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int cxgb_ulp_iscsi_ctl(struct adapter *adapter, unsigned int req, void *data)
{
  int i;
  
#line 207 
  int ret = 0;
  
#line 208 
  unsigned int val = 0U;
  
#line 209 
  struct ulp_iscsi_info *uiip = (struct ulp_iscsi_info *)data;
  
#line 211 
  switch (req) {
    unsigned int tmp_1;
    unsigned int tmp;
    unsigned int tmp_4;
    unsigned int tmp_6;
    unsigned int tmp_9;
    unsigned int tmp_11;
    case (unsigned int)11: 
#line 212 
    ;
    
#line 213 
    uiip->pdev = adapter->pdev;
    
#line 214 
    uiip->llimit = t3_read_reg(adapter,1292U);
    
#line 215 
    uiip->ulimit = t3_read_reg(adapter,1296U);
    
#line 216 
    uiip->tagmask = t3_read_reg(adapter,1300U);
    
#line 218 
    val = t3_read_reg(adapter,1304U);
    
#line 219 
    i = 0;
    
#line 219 
    goto ldv_57252;
    ldv_57251: 
#line 220 
    ;
    
#line 220 
    uiip->pgsz_factor[i] = (unsigned char)val;
    
#line 219 
    i += 1;
    
#line 219 
    val >>= 8;
    ldv_57252: 
#line 220 
    ;
    
#line 219 
    if (i <= 3) 
#line 221 
                goto ldv_57251; else 
#line 224 
                                     goto ldv_57253;
    ldv_57253: 
#line 225 
    ;
    
#line 222 
    val = t3_read_reg(adapter,892U);
    {
      unsigned int tmp_0;
      
#line 224 
      unsigned int _min1 = val & 65535U;
      
#line 224 
      unsigned int _min2 = val >> 16;
      
#line 224 
      if (_min1 < _min2) 
#line 224 
                         tmp_0 = _min1; else 
#line 224 
                                             tmp_0 = _min2;
      
#line 224 
      tmp_1 = tmp_0;
    }
    
#line 223 
    tmp = tmp_1;
    
#line 223 
    uiip->max_rxsz = tmp;
    
#line 223 
    uiip->max_txsz = tmp;
    {
      u32 tmp_2;
      unsigned int tmp_3;
      
#line 230 
      unsigned int _min1_0 = adapter->params.tp.tx_pg_size;
      
#line 230 
      tmp_2 = t3_read_reg(adapter,1504U);
      
#line 230 
      u32 _min2_0 = tmp_2 >> 17;
      
#line 230 
      if (_min1_0 < _min2_0) 
#line 230 
                             tmp_3 = _min1_0; else 
#line 230 
                                                   tmp_3 = _min2_0;
      
#line 230 
      tmp_4 = tmp_3;
    }
    
#line 230 
    val = tmp_4;
    {
      unsigned int tmp_5;
      
#line 232 
      unsigned int _min1_1 = val;
      
#line 232 
      unsigned int _min2_1 = uiip->max_txsz;
      
#line 232 
      if (_min1_1 < _min2_1) 
#line 232 
                             tmp_5 = _min1_1; else 
#line 232 
                                                   tmp_5 = _min2_1;
      
#line 232 
      tmp_6 = tmp_5;
    }
    
#line 232 
    uiip->max_txsz = tmp_6;
    
#line 235 
    val = t3_read_reg(adapter,872U);
    
#line 236 
    if (val >> 16 != 16224U) {
      
#line 237 
      val &= 65535U;
      
#line 238 
      val |= 1063256064U;
      
#line 239 
      printk("\001",adapter->name,val);
      
#line 241 
      t3_write_reg(adapter,872U,val);
    }
    else ;
    {
      u32 tmp_7;
      unsigned int tmp_8;
      
#line 248 
      unsigned int _min1_2 = adapter->params.tp.rx_pg_size;
      
#line 248 
      tmp_7 = t3_read_reg(adapter,872U);
      
#line 248 
      u32 _min2_2 = (tmp_7 >> 16) & 65535U;
      
#line 248 
      if (_min1_2 < _min2_2) 
#line 248 
                             tmp_8 = _min1_2; else 
#line 248 
                                                   tmp_8 = _min2_2;
      
#line 248 
      tmp_9 = tmp_8;
    }
    
#line 248 
    val = tmp_9;
    {
      unsigned int tmp_10;
      
#line 251 
      unsigned int _min1_3 = val;
      
#line 251 
      unsigned int _min2_3 = uiip->max_rxsz;
      
#line 251 
      if (_min1_3 < _min2_3) 
#line 251 
                             tmp_10 = _min1_3; else 
#line 251 
                                                    tmp_10 = _min2_3;
      
#line 251 
      tmp_11 = tmp_10;
    }
    
#line 251 
    uiip->max_rxsz = tmp_11;
    
#line 252 
    goto ldv_57269;
    case (unsigned int)12: 
#line 253 
    ;
    
#line 254 
    t3_write_reg(adapter,1300U,uiip->tagmask);
    
#line 256 
    i = 0;
    
#line 256 
    goto ldv_57272;
    ldv_57271: 
#line 257 
    ;
    
#line 257 
    val = (unsigned int)(((int)uiip->pgsz_factor[i] & 15) << i * 8) | val;
    
#line 256 
    i += 1;
    ldv_57272: 
#line 257 
    ;
    
#line 256 
    if (i <= 3) 
#line 258 
                goto ldv_57271; else 
#line 261 
                                     goto ldv_57273;
    ldv_57273: 
#line 262 
    ;
    
#line 258 
    if (val != 0U) {
      u32 tmp_12;
      
#line 258 
      tmp_12 = t3_read_reg(adapter,1304U);
      
#line 258 
      ;
      
#line 258 
      if (tmp_12 != val) {
        
#line 259 
        printk("\001",adapter->name,val,(int)uiip->pgsz_factor[0],(int)uiip->pgsz_factor[1],(int)uiip->pgsz_factor[2],(int)uiip->pgsz_factor[3]);
        
#line 263 
        t3_write_reg(adapter,1304U,val);
      }
      else ;
    }
    else ;
    
#line 265 
    goto ldv_57269;
    default: 
#line 266 
    ;
    
#line 267 
    ret = -95;
  }
  ldv_57269: 
#line 269 
  ;
  
#line 269 
  return ret;
}


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int cxgb_rdma_ctl(struct adapter *adapter, unsigned int req, void *data)
{
  int __retres;
  
#line 277 
  int ret = 0;
  
#line 279 
  switch (req) {
    case (unsigned int)13: 
#line 280 
    ;
    {
      
#line 281 
      struct rdma_info *rdma = (struct rdma_info *)data;
      
#line 282 
      struct pci_dev *pdev = adapter->pdev;
      
#line 284 
      rdma->udbell_physbase = (unsigned long)pdev->resource[2].start;
      
#line 285 
      if (pdev->resource[2].start != 0ULL || pdev->resource[2].end != pdev->resource[2].start) 
        
#line 285 
        rdma->udbell_len = ((unsigned int)pdev->resource[2].end - (unsigned int)pdev->resource[2].start) + 1U; else 
                                                                    
#line 285 
                                                                    rdma->udbell_len = 0U;
      
#line 286 
      rdma->tpt_base = t3_read_reg(adapter,1420U);
      
#line 288 
      rdma->tpt_top = t3_read_reg(adapter,1424U);
      
#line 289 
      rdma->pbl_base = t3_read_reg(adapter,1428U);
      
#line 291 
      rdma->pbl_top = t3_read_reg(adapter,1432U);
      
#line 292 
      rdma->rqt_base = t3_read_reg(adapter,1332U);
      
#line 293 
      rdma->rqt_top = t3_read_reg(adapter,1336U);
      
#line 294 
      rdma->kdb_addr = adapter->regs + 4U;
      
#line 295 
      rdma->pdev = pdev;
      
#line 296 
      goto ldv_57284;
    }
    case (unsigned int)14: 
#line 298 
    ;
    {
      unsigned long flags;
      
#line 300 
      struct rdma_cq_op *rdma_0 = (struct rdma_cq_op *)data;
      
#line 303 
      ldv___ldv_spin_lock_85(& adapter->sge.reg_lock);
      
#line 304 
      ret = t3_sge_cqcntxt_op(adapter,rdma_0->id,rdma_0->op,rdma_0->credits);
      
#line 306 
      ldv_spin_unlock_irqrestore_86(& adapter->sge.reg_lock,flags);
      
#line 307 
      goto ldv_57284;
    }
    case (unsigned int)18: 
#line 309 
    ;
    {
      struct mc7 *mem;
      
#line 310 
      struct ch_mem_range *t = (struct ch_mem_range *)data;
      
#line 313 
      if ((t->addr & 7U) != 0U || (t->len & 7U) != 0U) {
        
#line 314 
        __retres = -22;
        
#line 314 
        goto return_label;
      }
      else ;
      
#line 315 
      if (t->mem_id == 0U) 
#line 316 
                           mem = & adapter->cm;
      else 
        
#line 317 
        if (t->mem_id == 1U) 
#line 318 
                             mem = & adapter->pmrx;
        else 
          
#line 319 
          if (t->mem_id == 2U) 
#line 320 
                               mem = & adapter->pmtx;
          else {
            
#line 322 
            __retres = -22;
            
#line 322 
            goto return_label;
          }
      
#line 324 
      ret = t3_mc7_bd_read(mem,t->addr / 8U,t->len / 8U,(u64 *)(& t->buf));
      
#line 327 
      if (ret != 0) {
        
#line 328 
        __retres = ret;
        
#line 328 
        goto return_label;
      }
      else ;
      
#line 329 
      goto ldv_57284;
    }
    case (unsigned int)15: 
#line 331 
    ;
    {
      
#line 332 
      struct rdma_cq_setup *rdma_1 = (struct rdma_cq_setup *)data;
      
#line 334 
      ldv_spin_lock_irq_87(& adapter->sge.reg_lock);
      
#line 335 
      ret = t3_sge_init_cqcntxt(adapter,rdma_1->id,rdma_1->base_addr,rdma_1->size,0,(int)rdma_1->ovfl_mode,rdma_1->credits,rdma_1->credit_thres);
      
#line 341 
      ldv_spin_unlock_irq_88(& adapter->sge.reg_lock);
      
#line 342 
      goto ldv_57284;
    }
    case (unsigned int)16: 
#line 344 
    ;
    
#line 345 
    ldv_spin_lock_irq_89(& adapter->sge.reg_lock);
    
#line 346 
    ret = t3_sge_disable_cqcntxt(adapter,*((unsigned int *)data));
    
#line 347 
    ldv_spin_unlock_irq_90(& adapter->sge.reg_lock);
    
#line 348 
    goto ldv_57284;
    case (unsigned int)17: 
#line 349 
    ;
    {
      
#line 350 
      struct rdma_ctrlqp_setup *rdma_2 = (struct rdma_ctrlqp_setup *)data;
      
#line 352 
      ldv_spin_lock_irq_91(& adapter->sge.reg_lock);
      
#line 353 
      ret = t3_sge_init_ecntxt(adapter,65527U,0,(enum sge_context_type)SGE_CNTXT_RDMA,0,rdma_2->base_addr,rdma_2->size,65552U,1,0U);
      
#line 358 
      ldv_spin_unlock_irq_92(& adapter->sge.reg_lock);
      
#line 359 
      goto ldv_57284;
    }
    case (unsigned int)19: 
#line 361 
    ;
    
#line 362 
    ldv_spin_lock_93_0(& adapter->stats_lock);
    
#line 363 
    t3_tp_get_mib_stats(adapter,(struct tp_mib_stats *)data);
    
#line 364 
    ldv_spin_unlock_94(& adapter->stats_lock);
    
#line 365 
    goto ldv_57284;
    default: 
#line 367 
    ;
    
#line 368 
    ret = -95;
  }
  ldv_57284: 
#line 370 
  ;
  
#line 370 
  __retres = ret;
  return_label: 
#line 370 
                return __retres;
}


#line 373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int cxgb_offload_ctl(struct t3cdev *tdev, unsigned int req, void *data)
{
  int __retres;
  struct adapter *tmp;
  struct tid_range *tid;
  struct mtutab *mtup;
  struct iff_mac *iffmacp;
  struct ddp_params *ddpp;
  struct adap_ports *ports;
  struct ofld_page_info *rx_page_info;
  int i;
  {
    
#line 375 
    struct t3cdev const *__mptr = (struct t3cdev const *)tdev;
    
#line 375 
    tmp = (struct adapter *)__mptr;
  }
  
#line 375 
  struct adapter *adapter = tmp;
  
#line 382 
  struct tp_params *tp = & adapter->params.tp;
  
#line 385 
  switch (req) {
    unsigned int tmp_0;
    unsigned int tmp_1;
    int tmp_2;
    int tmp_3;
    int tmp_4;
    int tmp_5;
    case (unsigned int)0: 
#line 386 
    ;
    
#line 387 
    *((unsigned int *)data) = 16U;
    
#line 388 
    goto ldv_57315;
    case (unsigned int)7: 
#line 389 
    ;
    
#line 390 
    *((unsigned int *)data) = 15U;
    
#line 391 
    goto ldv_57315;
    case (unsigned int)1: 
#line 392 
    ;
    
#line 393 
    *((unsigned int *)data) = 1048576U;
    
#line 394 
    goto ldv_57315;
    case (unsigned int)2: 
#line 395 
    ;
    
#line 396 
    tid = (struct tid_range *)data;
    
#line 397 
    tmp_0 = t3_mc5_size((struct mc5 const *)(& adapter->mc5));
    
#line 397 
    tid->num = ((tmp_0 - adapter->params.mc5.nroutes) - adapter->params.mc5.nfilters) - adapter->params.mc5.nservers;
    
#line 400 
    tid->base = 0U;
    
#line 401 
    goto ldv_57315;
    case (unsigned int)3: 
#line 402 
    ;
    
#line 403 
    tid = (struct tid_range *)data;
    
#line 404 
    tid->num = adapter->params.mc5.nservers;
    
#line 405 
    tmp_1 = t3_mc5_size((struct mc5 const *)(& adapter->mc5));
    
#line 405 
    tid->base = ((tmp_1 - tid->num) - adapter->params.mc5.nfilters) - adapter->params.mc5.nroutes;
    
#line 407 
    goto ldv_57315;
    case (unsigned int)5: 
#line 408 
    ;
    
#line 409 
    *((unsigned int *)data) = 2048U;
    
#line 410 
    goto ldv_57315;
    case (unsigned int)6: 
#line 411 
    ;
    
#line 412 
    mtup = (struct mtutab *)data;
    
#line 413 
    mtup->size = 16U;
    
#line 414 
    mtup->mtus = (unsigned short const *)(& adapter->params.mtus);
    
#line 415 
    goto ldv_57315;
    case (unsigned int)8: 
#line 416 
    ;
    
#line 417 
    iffmacp = (struct iff_mac *)data;
    
#line 418 
    iffmacp->dev = get_iff_from_mac(adapter,iffmacp->mac_addr,(unsigned int)iffmacp->vlan_tag & 4095U);
    
#line 421 
    goto ldv_57315;
    case (unsigned int)9: 
#line 422 
    ;
    
#line 423 
    ddpp = (struct ddp_params *)data;
    
#line 424 
    ddpp->llimit = t3_read_reg(adapter,1308U);
    
#line 425 
    ddpp->ulimit = t3_read_reg(adapter,1312U);
    
#line 426 
    ddpp->tag_mask = t3_read_reg(adapter,1316U);
    
#line 427 
    goto ldv_57315;
    case (unsigned int)10: 
#line 428 
    ;
    
#line 429 
    ports = (struct adap_ports *)data;
    
#line 430 
    ports->nports = adapter->params.nports;
    
#line 431 
    i = 0;
    
#line 431 
    goto ldv_57326;
    ldv_57325: 
#line 432 
    ;
    
#line 432 
    ports->lldevs[i] = adapter->port[i];
    
#line 431 
    i += 1;
    ldv_57326: 
#line 432 
    ;
    
#line 431 
    if (adapter->params.nports > (unsigned int)i) 
#line 433 
                                                  goto ldv_57325; else 
                                                                    
#line 436 
                                                                    goto ldv_57327;
    ldv_57327: 
#line 437 
    ;
    
#line 433 
    goto ldv_57315;
    case (unsigned int)11: 
#line 434 
    ;
    case (unsigned int)12: 
#line 435 
    ;
    
#line 436 
    tmp_2 = offload_running(adapter);
    
#line 436 
    if (tmp_2 == 0) {
      
#line 437 
      __retres = -11;
      
#line 437 
      goto return_label;
    }
    else ;
    
#line 438 
    tmp_3 = cxgb_ulp_iscsi_ctl(adapter,req,data);
    
#line 438 
    __retres = tmp_3;
    
#line 438 
    goto return_label;
    case (unsigned int)13: 
#line 439 
    ;
    case (unsigned int)14: 
#line 440 
    ;
    case (unsigned int)15: 
#line 441 
    ;
    case (unsigned int)16: 
#line 442 
    ;
    case (unsigned int)17: 
#line 443 
    ;
    case (unsigned int)18: 
#line 444 
    ;
    case (unsigned int)19: 
#line 445 
    ;
    
#line 446 
    tmp_4 = offload_running(adapter);
    
#line 446 
    if (tmp_4 == 0) {
      
#line 447 
      __retres = -11;
      
#line 447 
      goto return_label;
    }
    else ;
    
#line 448 
    tmp_5 = cxgb_rdma_ctl(adapter,req,data);
    
#line 448 
    __retres = tmp_5;
    
#line 448 
    goto return_label;
    case (unsigned int)50: 
#line 449 
    ;
    
#line 450 
    rx_page_info = (struct ofld_page_info *)data;
    
#line 451 
    rx_page_info->page_size = tp->rx_pg_size;
    
#line 452 
    rx_page_info->num = tp->rx_num_pgs;
    
#line 453 
    goto ldv_57315;
    case (unsigned int)51: 
#line 454 
    ;
    {
      
#line 455 
      struct iscsi_ipv4addr *p = (struct iscsi_ipv4addr *)data;
      
#line 456 
      struct port_info *pi = netdev_priv((struct net_device const *)p->dev);
      
#line 457 
      p->ipv4addr = pi->iscsi_ipv4addr;
      
#line 458 
      goto ldv_57315;
    }
    case (unsigned int)70: 
#line 460 
    ;
    {
      
#line 461 
      struct ch_embedded_info *e = (struct ch_embedded_info *)data;
      
#line 463 
      ldv_spin_lock_95(& adapter->stats_lock);
      
#line 464 
      t3_get_fw_version(adapter,& e->fw_vers);
      
#line 465 
      t3_get_tp_version(adapter,& e->tp_vers);
      
#line 466 
      ldv_spin_unlock_96(& adapter->stats_lock);
      
#line 467 
      goto ldv_57315;
    }
    default: 
#line 469 
    ;
    
#line 470 
    __retres = -95;
    
#line 470 
    goto return_label;
  }
  ldv_57315: 
#line 472 
  ;
  
#line 472 
  __retres = 0;
  return_label: 
#line 472 
                return __retres;
}


#line 480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int rx_offload_blackhole(struct t3cdev *dev, struct sk_buff **skbs, int n)
{
  int __retres;
  int tmp;
  
#line 483 
  goto ldv_57350;
  ldv_57349: 
#line 484 
  ;
  
#line 484 
  dev_kfree_skb_any(*(skbs + n));
  ldv_57350: 
#line 485 
  ;
  
#line 483 
  tmp = n;
  
#line 483 
  n -= 1;
  
#line 483 
  ;
  
#line 483 
  if (tmp != 0) 
#line 485 
                goto ldv_57349; else 
#line 488 
                                     goto ldv_57351;
  ldv_57351: 
#line 489 
  ;
  
#line 485 
  __retres = 0;
  
#line 485 
  return __retres;
}


#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void dummy_neigh_update(struct t3cdev *dev, struct neighbour *neigh)
{
  
#line 490 
  return;
}


#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_set_dummy_ops(struct t3cdev *dev)
{
  
#line 494 
  dev->recv = & rx_offload_blackhole;
  
#line 495 
  dev->neigh_update = & dummy_neigh_update;
  
#line 496 
  return;
}


#line 501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void *cxgb3_free_atid(struct t3cdev *tdev, int atid)
{
  
#line 503 
  struct tid_info *t = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 504 
  union active_open_entry *p = atid2entry((struct tid_info const *)t,(unsigned int)atid);
  
#line 505 
  void *ctx = p->t3c_tid.ctx;
  
#line 507 
  ldv_spin_lock_bh_97(& t->atid_lock);
  
#line 508 
  p->next = t->afree;
  
#line 509 
  t->afree = p;
  
#line 510 
  t->atids_in_use -= 1U;
  
#line 511 
  ldv_spin_unlock_bh_98(& t->atid_lock);
  
#line 513 
  return ctx;
}


#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_free_atid[16U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'f', (char)'r', (char)'e', (char)'e', (char)'_', (char)'a', (char)'t', (char)'i', (char)'d', (char)'\000'};

#line 516 
struct kernel_symbol const __ksymtab_cxgb3_free_atid;


#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_free_atid = {.value = (unsigned long)(& cxgb3_free_atid), .name = (char const *)(& __kstrtab_cxgb3_free_atid)};

#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_free_stid(struct t3cdev *tdev, int stid)
{
  
#line 523 
  struct tid_info *t = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 524 
  union listen_entry *p = stid2entry((struct tid_info const *)t,(unsigned int)stid);
  
#line 526 
  ldv_spin_lock_bh_99(& t->stid_lock);
  
#line 527 
  p->next = t->sfree;
  
#line 528 
  t->sfree = p;
  
#line 529 
  t->stids_in_use -= 1U;
  
#line 530 
  ldv_spin_unlock_bh_100(& t->stid_lock);
  
#line 531 
  return;
}


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_free_stid[16U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'f', (char)'r', (char)'e', (char)'e', (char)'_', (char)'s', (char)'t', (char)'i', (char)'d', (char)'\000'};

#line 533 
struct kernel_symbol const __ksymtab_cxgb3_free_stid;


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_free_stid = {.value = (unsigned long)(& cxgb3_free_stid), .name = (char const *)(& __kstrtab_cxgb3_free_stid)};

#line 535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_insert_tid(struct t3cdev *tdev, struct cxgb3_client *client, void *ctx, unsigned int tid)
{
  
#line 538 
  struct tid_info *t = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 540 
  (t->tid_tab + tid)->client = client;
  
#line 541 
  (t->tid_tab + tid)->ctx = ctx;
  
#line 542 
  atomic_inc_1(& t->tids_in_use);
  
#line 543 
  return;
}


#line 545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_insert_tid[17U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'i', (char)'n', (char)'s', (char)'e', (char)'r', (char)'t', (char)'_', (char)'t', (char)'i', (char)'d', (char)'\000'};

#line 545 
struct kernel_symbol const __ksymtab_cxgb3_insert_tid;


#line 545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_insert_tid = {.value = (unsigned long)(& cxgb3_insert_tid), .name = (char const *)(& __kstrtab_cxgb3_insert_tid)};

#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static void mk_tid_release(struct sk_buff *skb, unsigned int tid)
{
  struct cpl_tid_release *req;
  
#line 554 
  skb->priority = 1U;
  
#line 555 
  req = (struct cpl_tid_release *)__skb_put(skb,16U);
  
#line 556 
  req->wr.wr_hi = 1U;
  
#line 557 
  if (0 != 0) 
#line 557 
              req->ot.opcode_tid = ((((tid << 24) | ((tid << 8) & 16711680U)) | ((tid >> 8) & 65280U)) | (tid >> 24)) | 26U; else 
                                                                    
#line 557 
                                                                    req->ot.opcode_tid = __fswab32(tid | 436207616U);
  
#line 558 
  return;
}


#line 560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void t3_process_tid_release_list(struct work_struct *work)
{
  struct t3c_data *tmp;
  struct sk_buff *skb;
  {
    
#line 562 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 562 
    tmp = (struct t3c_data *)__mptr + 18446744073709551152U;
  }
  
#line 562 
  struct t3c_data *td = tmp;
  
#line 565 
  struct t3cdev *tdev = td->dev;
  
#line 568 
  ldv_spin_lock_bh_101(& td->tid_release_lock);
  
#line 569 
  goto ldv_57421;
  ldv_57420: 
#line 570 
  ;
  {
    
#line 570 
    struct t3c_tid_entry *p = td->tid_release_list;
    
#line 572 
    td->tid_release_list = (struct t3c_tid_entry *)p->ctx;
    
#line 573 
    ldv_spin_unlock_bh_102(& td->tid_release_lock);
    
#line 575 
    skb = alloc_skb(16U,208U);
    
#line 577 
    if (skb == (struct sk_buff *)0) 
#line 578 
                                    skb = td->nofail_skb; else ;
    
#line 579 
    if (skb == (struct sk_buff *)0) {
      
#line 580 
      ldv_spin_lock_bh_103(& td->tid_release_lock);
      
#line 581 
      p->ctx = (void *)td->tid_release_list;
      
#line 582 
      td->tid_release_list = p;
      
#line 583 
      goto ldv_57419;
    }
    else ;
    
#line 585 
    mk_tid_release(skb,(unsigned int)(((long)p - (long)td->tid_maps.tid_tab) / 16L));
    
#line 586 
    cxgb3_ofld_send(tdev,skb);
    
#line 587 
    p->ctx = (void *)0;
    
#line 588 
    if (td->nofail_skb == skb) 
#line 589 
                               td->nofail_skb = alloc_skb(16U,208U); else ;
    
#line 592 
    ldv_spin_lock_bh_104(& td->tid_release_lock);
  }
  ldv_57421: 
#line 594 
  ;
  
#line 569 
  if (td->tid_release_list != (struct t3c_tid_entry *)0) 
#line 571 
                                                         goto ldv_57420; else 
                                                                    
#line 574 
                                                                    goto ldv_57419;
  ldv_57419: 
#line 575 
  ;
  
#line 594 
  td->release_list_incomplete = (unsigned int)(td->tid_release_list != (struct t3c_tid_entry *)0);
  
#line 595 
  ldv_spin_unlock_bh_105(& td->tid_release_lock);
  
#line 597 
  if (td->nofail_skb == (struct sk_buff *)0) 
#line 598 
                                             td->nofail_skb = alloc_skb(16U,208U); else ;
  
#line 600 
  return;
}


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_queue_tid_release(struct t3cdev *tdev, unsigned int tid)
{
  
#line 606 
  struct t3c_data *td = *((struct t3c_data **)(& tdev->l4opt));
  
#line 607 
  struct t3c_tid_entry *p = td->tid_maps.tid_tab + tid;
  
#line 609 
  ldv_spin_lock_bh_106(& td->tid_release_lock);
  
#line 610 
  p->ctx = (void *)td->tid_release_list;
  
#line 611 
  p->client = (struct cxgb3_client *)0;
  
#line 612 
  td->tid_release_list = p;
  
#line 613 
  if (p->ctx == (void *)0 || td->release_list_incomplete != 0U) 
#line 614 
                                                                ldv_schedule_work_107(& td->tid_release_task); else ;
  
#line 615 
  ldv_spin_unlock_bh_108(& td->tid_release_lock);
  
#line 616 
  return;
}


#line 618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_queue_tid_release[24U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'_', (char)'t', (char)'i', (char)'d', (char)'_', (char)'r', (char)'e', (char)'l', (char)'e', (char)'a', (char)'s', (char)'e', (char)'\000'};

#line 618 
struct kernel_symbol const __ksymtab_cxgb3_queue_tid_release;


#line 618  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_queue_tid_release = {.value = (unsigned long)(& cxgb3_queue_tid_release), .name = (char const *)(& __kstrtab_cxgb3_queue_tid_release)};

#line 627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_remove_tid(struct t3cdev *tdev, void *ctx, unsigned int tid)
{
  
#line 629 
  struct tid_info *t = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 631 
  if ((long)(t->ntids <= tid) != 0L) {
    
#line 633 
    ldv_inline_asm();
    
#line 631 
    ;
  }
  else ;
  
#line 632 
  if (tdev->type == (unsigned int)T3A) {
    void *__ret;
    
#line 633 
    void *__old = ctx;
    
#line 633 
    void *__new = (void *)0;
    
#line 633 
    switch (8UL) {
      case (unsigned long)1: 
#line 633 
      ;
      {
        
#line 633 
        u8 volatile *__ptr = (u8 volatile *)(& (t->tid_tab + tid)->ctx);
        
#line 634 
        ldv_inline_asm();
        
#line 633 
        goto ldv_57447;
      }
      case (unsigned long)2: 
#line 633 
      ;
      {
        
#line 633 
        u16 volatile *__ptr_0 = (u16 volatile *)(& (t->tid_tab + tid)->ctx);
        
#line 634 
        ldv_inline_asm();
        
#line 633 
        goto ldv_57447;
      }
      case (unsigned long)4: 
#line 633 
      ;
      {
        
#line 633 
        u32 volatile *__ptr_1 = (u32 volatile *)(& (t->tid_tab + tid)->ctx);
        
#line 634 
        ldv_inline_asm();
        
#line 633 
        goto ldv_57447;
      }
      case (unsigned long)8: 
#line 633 
      ;
      {
        
#line 633 
        u64 volatile *__ptr_2 = (u64 volatile *)(& (t->tid_tab + tid)->ctx);
        
#line 634 
        ldv_inline_asm();
        
#line 633 
        goto ldv_57447;
      }
      default: 
#line 633 
      ;
      
#line 633 
      __cmpxchg_wrong_size();
    }
    ldv_57447: 
#line 633 
    ;
    
#line 633 
    void *tmp = __ret;
  }
  else {
    struct sk_buff *skb;
    
#line 637 
    skb = alloc_skb(16U,32U);
    
#line 638 
    if ((long)(skb != (struct sk_buff *)0) != 0L) {
      
#line 639 
      mk_tid_release(skb,tid);
      
#line 640 
      cxgb3_ofld_send(tdev,skb);
      
#line 641 
      (t->tid_tab + tid)->ctx = (void *)0;
    }
    else 
#line 643 
         cxgb3_queue_tid_release(tdev,tid);
  }
  
#line 645 
  atomic_dec_0(& t->tids_in_use);
  
#line 646 
  return;
}


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_remove_tid[17U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'r', (char)'e', (char)'m', (char)'o', (char)'v', (char)'e', (char)'_', (char)'t', (char)'i', (char)'d', (char)'\000'};

#line 648 
struct kernel_symbol const __ksymtab_cxgb3_remove_tid;


#line 648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_remove_tid = {.value = (unsigned long)(& cxgb3_remove_tid), .name = (char const *)(& __kstrtab_cxgb3_remove_tid)};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
int cxgb3_alloc_atid(struct t3cdev *tdev, struct cxgb3_client *client, void *ctx)
{
  
#line 653 
  int atid = -1;
  
#line 654 
  struct tid_info *t = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 656 
  ldv_spin_lock_bh_109(& t->atid_lock);
  
#line 657 
  if (t->afree != (union active_open_entry *)0) {
    int tmp;
    
#line 658 
    tmp = atomic_read((atomic_t const *)(& t->tids_in_use));
    
#line 657 
    ;
    
#line 657 
    if ((t->atids_in_use + (unsigned int)tmp) + 16U <= t->ntids) {
      
#line 660 
      union active_open_entry *p = t->afree;
      
#line 662 
      atid = (int)(((long)p - (long)t->atid_tab) / 16L + (long)t->atid_base);
      
#line 663 
      t->afree = p->next;
      
#line 664 
      p->t3c_tid.ctx = ctx;
      
#line 665 
      p->t3c_tid.client = client;
      
#line 666 
      t->atids_in_use += 1U;
    }
    else ;
  }
  else ;
  
#line 668 
  ldv_spin_unlock_bh_110(& t->atid_lock);
  
#line 669 
  return atid;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_alloc_atid[17U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)'_', (char)'a', (char)'t', (char)'i', (char)'d', (char)'\000'};

#line 672 
struct kernel_symbol const __ksymtab_cxgb3_alloc_atid;


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_alloc_atid = {.value = (unsigned long)(& cxgb3_alloc_atid), .name = (char const *)(& __kstrtab_cxgb3_alloc_atid)};

#line 674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
int cxgb3_alloc_stid(struct t3cdev *tdev, struct cxgb3_client *client, void *ctx)
{
  
#line 677 
  int stid = -1;
  
#line 678 
  struct tid_info *t = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 680 
  ldv_spin_lock_bh_111(& t->stid_lock);
  
#line 681 
  if (t->sfree != (union listen_entry *)0) {
    
#line 682 
    union listen_entry *p = t->sfree;
    
#line 684 
    stid = (int)(((long)p - (long)t->stid_tab) / 16L + (long)t->stid_base);
    
#line 685 
    t->sfree = p->next;
    
#line 686 
    p->t3c_tid.ctx = ctx;
    
#line 687 
    p->t3c_tid.client = client;
    
#line 688 
    t->stids_in_use += 1U;
  }
  else ;
  
#line 690 
  ldv_spin_unlock_bh_112(& t->stid_lock);
  
#line 691 
  return stid;
}


#line 694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_alloc_stid[17U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)'_', (char)'s', (char)'t', (char)'i', (char)'d', (char)'\000'};

#line 694 
struct kernel_symbol const __ksymtab_cxgb3_alloc_stid;


#line 694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_alloc_stid = {.value = (unsigned long)(& cxgb3_alloc_stid), .name = (char const *)(& __kstrtab_cxgb3_alloc_stid)};

#line 697  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct t3cdev *dev2t3cdev(struct net_device *dev)
{
  struct t3cdev *__retres;
  
#line 699 
  struct port_info const *pi = netdev_priv((struct net_device const *)dev);
  
#line 701 
  __retres = (struct t3cdev *)pi->adapter;
  
#line 701 
  return __retres;
}


#line 704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_dev2t3cdev[11U] = {(char)'d', (char)'e', (char)'v', (char)'2', (char)'t', (char)'3', (char)'c', (char)'d', (char)'e', (char)'v', (char)'\000'};

#line 704 
struct kernel_symbol const __ksymtab_dev2t3cdev;


#line 704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_dev2t3cdev = {.value = (unsigned long)(& dev2t3cdev), .name = (char const *)(& __kstrtab_dev2t3cdev)};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_smt_write_rpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  
#line 708 
  struct cpl_smt_write_rpl *rpl = cplhdr(skb);
  
#line 710 
  if ((unsigned int)rpl->status != 0U) {
    unsigned int tmp_1;
    
#line 711 
    if (0 != 0) 
#line 711 
                tmp_1 = ((((rpl->ot.opcode_tid << 24) | ((rpl->ot.opcode_tid << 8) & 16711680U)) | ((rpl->ot.opcode_tid >> 8) & 65280U)) | (rpl->ot.opcode_tid >> 24)) & 16777215U;
    else {
      __u32 tmp_0;
      
#line 711 
      tmp_0 = __fswab32(rpl->ot.opcode_tid);
      
#line 711 
      tmp_1 = tmp_0 & 16777215U;
    }
    
#line 711 
    ;
    
#line 711 
    printk("\001",(int)rpl->status,tmp_1);
  }
  else ;
  
#line 714 
  __retres = 1;
  
#line 714 
  return __retres;
}


#line 717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_l2t_write_rpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  
#line 719 
  struct cpl_l2t_write_rpl *rpl = cplhdr(skb);
  
#line 721 
  if ((unsigned int)rpl->status != 0U) {
    unsigned int tmp_1;
    
#line 722 
    if (0 != 0) 
#line 722 
                tmp_1 = ((((rpl->ot.opcode_tid << 24) | ((rpl->ot.opcode_tid << 8) & 16711680U)) | ((rpl->ot.opcode_tid >> 8) & 65280U)) | (rpl->ot.opcode_tid >> 24)) & 16777215U;
    else {
      __u32 tmp_0;
      
#line 722 
      tmp_0 = __fswab32(rpl->ot.opcode_tid);
      
#line 722 
      tmp_1 = tmp_0 & 16777215U;
    }
    
#line 722 
    ;
    
#line 722 
    printk("\001",(int)rpl->status,tmp_1);
  }
  else ;
  
#line 725 
  __retres = 1;
  
#line 725 
  return __retres;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_rte_write_rpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  
#line 730 
  struct cpl_rte_write_rpl *rpl = cplhdr(skb);
  
#line 732 
  if ((unsigned int)rpl->status != 0U) {
    unsigned int tmp_1;
    
#line 733 
    if (0 != 0) 
#line 733 
                tmp_1 = ((((rpl->ot.opcode_tid << 24) | ((rpl->ot.opcode_tid << 8) & 16711680U)) | ((rpl->ot.opcode_tid >> 8) & 65280U)) | (rpl->ot.opcode_tid >> 24)) & 16777215U;
    else {
      __u32 tmp_0;
      
#line 733 
      tmp_0 = __fswab32(rpl->ot.opcode_tid);
      
#line 733 
      tmp_1 = tmp_0 & 16777215U;
    }
    
#line 733 
    ;
    
#line 733 
    printk("\001",(int)rpl->status,tmp_1);
  }
  else ;
  
#line 736 
  __retres = 1;
  
#line 736 
  return __retres;
}


#line 739  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_act_open_rpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  unsigned int tmp_1;
  struct t3c_tid_entry *t3c_tid;
  
#line 741 
  struct cpl_act_open_rpl *rpl = cplhdr(skb);
  
#line 742 
  if (0 != 0) 
#line 742 
              tmp_1 = ((((rpl->atid << 24) | ((rpl->atid << 8) & 16711680U)) | ((rpl->atid >> 8) & 65280U)) | (rpl->atid >> 24)) & 16777215U;
  else {
    __u32 tmp_0;
    
#line 742 
    tmp_0 = __fswab32(rpl->atid);
    
#line 742 
    tmp_1 = tmp_0 & 16777215U;
  }
  
#line 742 
  unsigned int atid = tmp_1;
  
#line 745 
  t3c_tid = lookup_atid((struct tid_info const *)(& (*((struct t3c_data **)(& dev->l4opt)))->tid_maps),atid);
  
#line 746 
  if ((((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && t3c_tid->client != (struct cxgb3_client *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + 64U) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_2;
    
#line 749 
    tmp_2 = (*(*((t3c_tid->client)->handlers + 64U)))(dev,skb,t3c_tid->ctx);
    
#line 749 
    __retres = (int)tmp_2;
    
#line 749 
    goto return_label;
  }
  else {
    
#line 753 
    printk("\001",(char *)(& dev->name),64);
    
#line 755 
    __retres = 3;
    
#line 755 
    goto return_label;
  }
  return_label: 
#line 746 
                return __retres;
}


#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_stid_rpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  unsigned int tmp_1;
  struct t3c_tid_entry *t3c_tid;
  
#line 761 
  union opcode_tid *p = cplhdr(skb);
  
#line 762 
  if (0 != 0) 
#line 762 
              tmp_1 = ((((p->opcode_tid << 24) | ((p->opcode_tid << 8) & 16711680U)) | ((p->opcode_tid >> 8) & 65280U)) | (p->opcode_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_0;
    
#line 762 
    tmp_0 = __fswab32(p->opcode_tid);
    
#line 762 
    tmp_1 = tmp_0 & 16777215U;
  }
  
#line 762 
  unsigned int stid = tmp_1;
  
#line 765 
  t3c_tid = lookup_stid((struct tid_info const *)(& (*((struct t3c_data **)(& dev->l4opt)))->tid_maps),stid);
  
#line 766 
  if (((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + (int)p->opcode) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_2;
    
#line 768 
    tmp_2 = (*(*((t3c_tid->client)->handlers + (int)p->opcode)))(dev,skb,t3c_tid->ctx);
    
#line 768 
    __retres = (int)tmp_2;
    
#line 768 
    goto return_label;
  }
  else {
    
#line 771 
    printk("\001",(char *)(& dev->name),(int)p->opcode);
    
#line 773 
    __retres = 3;
    
#line 773 
    goto return_label;
  }
  return_label: 
#line 766 
                return __retres;
}


#line 777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_hwtid_rpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  unsigned int tmp_1;
  struct t3c_tid_entry *t3c_tid;
  
#line 779 
  union opcode_tid *p = cplhdr(skb);
  
#line 780 
  if (0 != 0) 
#line 780 
              tmp_1 = ((((p->opcode_tid << 24) | ((p->opcode_tid << 8) & 16711680U)) | ((p->opcode_tid >> 8) & 65280U)) | (p->opcode_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_0;
    
#line 780 
    tmp_0 = __fswab32(p->opcode_tid);
    
#line 780 
    tmp_1 = tmp_0 & 16777215U;
  }
  
#line 780 
  unsigned int hwtid = tmp_1;
  
#line 783 
  t3c_tid = lookup_tid((struct tid_info const *)(& (*((struct t3c_data **)(& dev->l4opt)))->tid_maps),hwtid);
  
#line 784 
  if (((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + (int)p->opcode) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_2;
    
#line 786 
    tmp_2 = (*(*((t3c_tid->client)->handlers + (int)p->opcode)))(dev,skb,t3c_tid->ctx);
    
#line 786 
    __retres = (int)tmp_2;
    
#line 786 
    goto return_label;
  }
  else {
    
#line 789 
    printk("\001",(char *)(& dev->name),(int)p->opcode);
    
#line 791 
    __retres = 3;
    
#line 791 
    goto return_label;
  }
  return_label: 
#line 784 
                return __retres;
}


#line 795  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_cr(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  unsigned int tmp_1;
  struct t3c_tid_entry *t3c_tid;
  unsigned int tmp_3;
  
#line 797 
  struct cpl_pass_accept_req *req = cplhdr(skb);
  
#line 798 
  if (0 != 0) 
#line 798 
              tmp_1 = ((((req->tos_tid << 24) | ((req->tos_tid << 8) & 16711680U)) | ((req->tos_tid >> 8) & 65280U)) | (req->tos_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_0;
    
#line 798 
    tmp_0 = __fswab32(req->tos_tid);
    
#line 798 
    tmp_1 = tmp_0 & 16777215U;
  }
  
#line 798 
  unsigned int stid = tmp_1;
  
#line 799 
  struct tid_info *t = & (*((struct t3c_data **)(& dev->l4opt)))->tid_maps;
  
#line 801 
  if (0 != 0) 
#line 801 
              tmp_3 = ((((req->ot.opcode_tid << 24) | ((req->ot.opcode_tid << 8) & 16711680U)) | ((req->ot.opcode_tid >> 8) & 65280U)) | (req->ot.opcode_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_2;
    
#line 801 
    tmp_2 = __fswab32(req->ot.opcode_tid);
    
#line 801 
    tmp_3 = tmp_2 & 16777215U;
  }
  
#line 801 
  unsigned int tid = tmp_3;
  
#line 803 
  if ((long)(t->ntids <= tid) != 0L) {
    struct adapter *tmp_4;
    
#line 804 
    printk("%s: passive open TID %u too large\n",(char *)(& dev->name),tid);
    {
      
#line 806 
      struct t3cdev const *__mptr = (struct t3cdev const *)dev;
      
#line 806 
      tmp_4 = (struct adapter *)__mptr;
    }
    
#line 806 
    t3_fatal_err(tmp_4);
    
#line 807 
    __retres = 1;
    
#line 807 
    goto return_label;
  }
  else ;
  
#line 810 
  t3c_tid = lookup_stid((struct tid_info const *)t,stid);
  
#line 811 
  if (((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + 112U) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_5;
    
#line 813 
    tmp_5 = (*(*((t3c_tid->client)->handlers + 112U)))(dev,skb,t3c_tid->ctx);
    
#line 813 
    __retres = (int)tmp_5;
    
#line 813 
    goto return_label;
  }
  else {
    
#line 816 
    printk("\001",(char *)(& dev->name),112);
    
#line 818 
    __retres = 3;
    
#line 818 
    goto return_label;
  }
  return_label: 
#line 811 
                return __retres;
}


#line 829  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct sk_buff *cxgb3_get_cpl_reply_skb(struct sk_buff *skb, size_t len, gfp_t gfp)
{
  int tmp;
  
#line 832 
  tmp = skb_cloned((struct sk_buff const *)skb);
  
#line 832 
  if ((long)(tmp == 0) != 0L) {
    
#line 833 
    if ((long)((unsigned long)skb->len < len) != 0L) {
      
#line 835 
      ldv_inline_asm();
      
#line 833 
      ;
    }
    else ;
    
#line 834 
    __skb_trim(skb,(unsigned int)len);
    
#line 835 
    skb_get(skb);
  }
  else {
    
#line 837 
    skb = alloc_skb((unsigned int)len,gfp);
    
#line 838 
    if (skb != (struct sk_buff *)0) 
#line 839 
                                    __skb_put(skb,(unsigned int)len); else ;
  }
  
#line 841 
  return skb;
}


#line 844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_abort_req_rss(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  unsigned int tmp_1;
  struct t3c_tid_entry *t3c_tid;
  
#line 846 
  union opcode_tid *p = cplhdr(skb);
  
#line 847 
  if (0 != 0) 
#line 847 
              tmp_1 = ((((p->opcode_tid << 24) | ((p->opcode_tid << 8) & 16711680U)) | ((p->opcode_tid >> 8) & 65280U)) | (p->opcode_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_0;
    
#line 847 
    tmp_0 = __fswab32(p->opcode_tid);
    
#line 847 
    tmp_1 = tmp_0 & 16777215U;
  }
  
#line 847 
  unsigned int hwtid = tmp_1;
  
#line 850 
  t3c_tid = lookup_tid((struct tid_info const *)(& (*((struct t3c_data **)(& dev->l4opt)))->tid_maps),hwtid);
  
#line 851 
  if (((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + (int)p->opcode) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_2;
    
#line 853 
    tmp_2 = (*(*((t3c_tid->client)->handlers + (int)p->opcode)))(dev,skb,t3c_tid->ctx);
    
#line 853 
    __retres = (int)tmp_2;
    
#line 853 
    goto return_label;
  }
  else {
    struct cpl_abort_rpl *rpl;
    struct sk_buff *reply_skb;
    unsigned int tmp_5;
    
#line 856 
    struct cpl_abort_req_rss *req = cplhdr(skb);
    
#line 859 
    if (0 != 0) 
#line 859 
                tmp_5 = ((((req->ot.opcode_tid << 24) | ((req->ot.opcode_tid << 8) & 16711680U)) | ((req->ot.opcode_tid >> 8) & 65280U)) | (req->ot.opcode_tid >> 24)) & 16777215U;
    else {
      __u32 tmp_4;
      
#line 859 
      tmp_4 = __fswab32(req->ot.opcode_tid);
      
#line 859 
      tmp_5 = tmp_4 & 16777215U;
    }
    
#line 859 
    unsigned int tid = tmp_5;
    
#line 860 
    u8 cmd = req->status;
    
#line 862 
    if ((unsigned int)req->status + 221U <= 1U) 
#line 864 
                                                goto out; else ;
    
#line 866 
    reply_skb = cxgb3_get_cpl_reply_skb(skb,24UL,32U);
    
#line 871 
    if (reply_skb == (struct sk_buff *)0) {
      
#line 872 
      printk("do_abort_req_rss: couldn\'t get skb!\n");
      
#line 873 
      goto out;
    }
    else ;
    
#line 875 
    reply_skb->priority = 0U;
    
#line 876 
    __skb_put(reply_skb,24U);
    
#line 877 
    rpl = (struct cpl_abort_rpl *)cplhdr(reply_skb);
    
#line 878 
    rpl->wr.wr_hi = 15U;
    
#line 880 
    if (0 != 0) 
#line 880 
                rpl->wr.wr_lo = (((tid << 16) & 16776960U) | (tid & 65280U)) | ((tid << 8) >> 24); else 
                                                                    
#line 880 
                                                                    rpl->wr.wr_lo = __fswab32(tid << 8);
    
#line 881 
    if (0 != 0) 
#line 881 
                rpl->ot.opcode_tid = ((((tid << 24) | ((tid << 8) & 16711680U)) | ((tid >> 8) & 65280U)) | (tid >> 24)) | 11U; else 
                                                                    
#line 881 
                                                                    rpl->ot.opcode_tid = __fswab32(tid | 184549376U);
    
#line 882 
    rpl->cmd = cmd;
    
#line 883 
    cxgb3_ofld_send(dev,reply_skb);
    out: 
#line 884 
    ;
    
#line 885 
    __retres = 1;
    
#line 885 
    goto return_label;
  }
  return_label: 
#line 851 
                return __retres;
}


#line 889  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_act_establish(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  unsigned int tmp_1;
  struct t3c_tid_entry *t3c_tid;
  unsigned int tmp_3;
  
#line 891 
  struct cpl_act_establish *req = cplhdr(skb);
  
#line 892 
  if (0 != 0) 
#line 892 
              tmp_1 = ((((req->tos_tid << 24) | ((req->tos_tid << 8) & 16711680U)) | ((req->tos_tid >> 8) & 65280U)) | (req->tos_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_0;
    
#line 892 
    tmp_0 = __fswab32(req->tos_tid);
    
#line 892 
    tmp_1 = tmp_0 & 16777215U;
  }
  
#line 892 
  unsigned int atid = tmp_1;
  
#line 893 
  struct tid_info *t = & (*((struct t3c_data **)(& dev->l4opt)))->tid_maps;
  
#line 895 
  if (0 != 0) 
#line 895 
              tmp_3 = ((((req->ot.opcode_tid << 24) | ((req->ot.opcode_tid << 8) & 16711680U)) | ((req->ot.opcode_tid >> 8) & 65280U)) | (req->ot.opcode_tid >> 24)) & 16777215U;
  else {
    __u32 tmp_2;
    
#line 895 
    tmp_2 = __fswab32(req->ot.opcode_tid);
    
#line 895 
    tmp_3 = tmp_2 & 16777215U;
  }
  
#line 895 
  unsigned int tid = tmp_3;
  
#line 897 
  if ((long)(t->ntids <= tid) != 0L) {
    struct adapter *tmp_4;
    
#line 898 
    printk("%s: active establish TID %u too large\n",(char *)(& dev->name),tid);
    {
      
#line 900 
      struct t3cdev const *__mptr = (struct t3cdev const *)dev;
      
#line 900 
      tmp_4 = (struct adapter *)__mptr;
    }
    
#line 900 
    t3_fatal_err(tmp_4);
    
#line 901 
    __retres = 1;
    
#line 901 
    goto return_label;
  }
  else ;
  
#line 904 
  t3c_tid = lookup_atid((struct tid_info const *)t,atid);
  
#line 905 
  if (((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + 80U) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_5;
    
#line 907 
    tmp_5 = (*(*((t3c_tid->client)->handlers + 80U)))(dev,skb,t3c_tid->ctx);
    
#line 907 
    __retres = (int)tmp_5;
    
#line 907 
    goto return_label;
  }
  else {
    
#line 910 
    printk("\001",(char *)(& dev->name),80);
    
#line 912 
    __retres = 3;
    
#line 912 
    goto return_label;
  }
  return_label: 
#line 905 
                return __retres;
}


#line 916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_trace(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  
#line 918 
  struct cpl_trace_pkt *p = cplhdr(skb);
  
#line 920 
  skb->protocol = (unsigned short)65535U;
  
#line 921 
  skb->dev = dev->lldev;
  
#line 922 
  skb_pull(skb,8U);
  
#line 923 
  skb_reset_mac_header(skb);
  
#line 924 
  netif_receive_skb(skb);
  
#line 925 
  __retres = 0;
  
#line 925 
  return __retres;
}


#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static u32 get_hwtid(struct sk_buff *skb)
{
  unsigned int tmp_0;
  
#line 936 
  if (0 != 0) 
#line 936 
              tmp_0 = (((((skb->priority << 24) | ((skb->priority << 8) & 16711680U)) | ((skb->priority >> 8) & 65280U)) | (skb->priority >> 24)) >> 8) & 1048575U;
  else {
    __u32 tmp;
    
#line 936 
    tmp = __fswab32(skb->priority);
    
#line 936 
    tmp_0 = (tmp >> 8) & 1048575U;
  }
  
#line 936 
  return tmp_0;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static u32 get_opcode(struct sk_buff *skb)
{
  unsigned int tmp_0;
  
#line 941 
  if (0 != 0) 
#line 941 
              tmp_0 = ((((skb->__anonCompField_sk_buff_69.csum << 24) | ((skb->__anonCompField_sk_buff_69.csum << 8) & 16711680U)) | ((skb->__anonCompField_sk_buff_69.csum >> 8) & 65280U)) | (skb->__anonCompField_sk_buff_69.csum >> 24)) >> 24;
  else {
    __u32 tmp;
    
#line 941 
    tmp = __fswab32(skb->__anonCompField_sk_buff_69.csum);
    
#line 941 
    tmp_0 = tmp >> 24;
  }
  
#line 941 
  return tmp_0;
}


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_term(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  struct t3c_tid_entry *t3c_tid;
  
#line 946 
  unsigned int hwtid = get_hwtid(skb);
  
#line 947 
  unsigned int opcode = get_opcode(skb);
  
#line 950 
  t3c_tid = lookup_tid((struct tid_info const *)(& (*((struct t3c_data **)(& dev->l4opt)))->tid_maps),hwtid);
  
#line 951 
  if (((t3c_tid != (struct t3c_tid_entry *)0 && t3c_tid->ctx != (void *)0) && (t3c_tid->client)->handlers != (cxgb3_cpl_handler_func (**)(struct t3cdev *, struct sk_buff *, void *))0) && *((t3c_tid->client)->handlers + opcode) != (cxgb3_cpl_handler_func (*)(struct t3cdev *, struct sk_buff *, void *))0) {
    cxgb3_cpl_handler_func tmp_1;
    
#line 953 
    tmp_1 = (*(*((t3c_tid->client)->handlers + opcode)))(dev,skb,t3c_tid->ctx);
    
#line 953 
    __retres = (int)tmp_1;
    
#line 953 
    goto return_label;
  }
  else {
    
#line 956 
    printk("\001",(char *)(& dev->name),opcode);
    
#line 958 
    __retres = 3;
    
#line 958 
    goto return_label;
  }
  return_label: 
#line 951 
                return __retres;
}


#line 962  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int nb_callback(struct notifier_block *self, unsigned long event, void *ctx)
{
  int __retres;
  
#line 965 
  switch (event) {
    case (unsigned long)1: 
#line 966 
    ;
    
#line 967 
    cxgb_neigh_update((struct neighbour *)ctx);
    
#line 968 
    goto ldv_57611;
    case (unsigned long)2: 
#line 970 
    ;
    {
      
#line 971 
      struct netevent_redirect *nr = (struct netevent_redirect *)ctx;
      
#line 972 
      cxgb_redirect(nr->old,nr->new,nr->neigh,nr->daddr);
      
#line 974 
      cxgb_neigh_update(nr->neigh);
      
#line 975 
      goto ldv_57611;
    }
    default: 
#line 977 
    ;
    
#line 978 
    goto ldv_57611;
  }
  ldv_57611: 
#line 980 
  ;
  
#line 980 
  __retres = 0;
  
#line 980 
  return __retres;
}


#line 983  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static struct notifier_block nb = {.notifier_call = & nb_callback, .next = (struct notifier_block *)0, .priority = 0};

#line 990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int do_bad_cpl(struct t3cdev *dev, struct sk_buff *skb)
{
  int __retres;
  
#line 992 
  printk("\001",(char *)(& dev->name),(int)*(skb->data));
  
#line 993 
  __retres = 3;
  
#line 993 
  return __retres;
}


#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static cpl_handler_func cpl_handlers[166U];

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void t3_register_cpl_handler(unsigned int opcode, int (*h)(struct t3cdev *, struct sk_buff *))
{
  
#line 1007 
  if (opcode <= 165U) 
    
#line 1008 
    if (h != (int (*)(struct t3cdev *, struct sk_buff *))0) 
#line 1008 
                                                            cpl_handlers[opcode] = h; else 
                                                                    
#line 1008 
                                                                    cpl_handlers[opcode] = & do_bad_cpl;
  else 
#line 1010 
       printk("\001",opcode);
  
#line 1011 
  return;
}


#line 1014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_t3_register_cpl_handler[24U] = {(char)'t', (char)'3', (char)'_', (char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'c', (char)'p', (char)'l', (char)'_', (char)'h', (char)'a', (char)'n', (char)'d', (char)'l', (char)'e', (char)'r', (char)'\000'};

#line 1014 
struct kernel_symbol const __ksymtab_t3_register_cpl_handler;


#line 1014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_t3_register_cpl_handler = {.value = (unsigned long)(& t3_register_cpl_handler), .name = (char const *)(& __kstrtab_t3_register_cpl_handler)};

#line 1019  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int process_rx(struct t3cdev *dev, struct sk_buff **skbs, int n)
{
  int __retres;
  int tmp_5;
  
#line 1021 
  goto ldv_57643;
  ldv_57642: 
#line 1022 
  ;
  {
    struct sk_buff **tmp;
    int tmp_1;
    
#line 1022 
    tmp = skbs;
    
#line 1022 
    skbs += 1;
    
#line 1022 
    struct sk_buff *skb = *tmp;
    
#line 1023 
    unsigned int opcode = get_opcode(skb);
    
#line 1024 
    tmp_1 = (*(cpl_handlers[opcode]))(dev,skb);
    
#line 1024 
    int ret = tmp_1;
    
#line 1027 
    if ((ret & 4) != 0) {
      unsigned int tmp_4;
      
#line 1028 
      union opcode_tid *p = cplhdr(skb);
      
#line 1030 
      if (0 != 0) 
#line 1030 
                  tmp_4 = ((((p->opcode_tid << 24) | ((p->opcode_tid << 8) & 16711680U)) | ((p->opcode_tid >> 8) & 65280U)) | (p->opcode_tid >> 24)) & 16777215U;
      else {
        __u32 tmp_3;
        
#line 1030 
        tmp_3 = __fswab32(p->opcode_tid);
        
#line 1030 
        tmp_4 = tmp_3 & 16777215U;
      }
      
#line 1030 
      ;
      
#line 1030 
      ;
      
#line 1030 
      printk("\001",(char *)(& dev->name),opcode,tmp_4);
    }
    else ;
    
#line 1034 
    if ((ret & 1) != 0) 
#line 1035 
                        kfree_skb(skb); else ;
  }
  ldv_57643: 
#line 1037 
  ;
  
#line 1021 
  tmp_5 = n;
  
#line 1021 
  n -= 1;
  
#line 1021 
  ;
  
#line 1021 
  if (tmp_5 != 0) 
#line 1023 
                  goto ldv_57642; else 
#line 1026 
                                       goto ldv_57644;
  ldv_57644: 
#line 1027 
  ;
  
#line 1037 
  __retres = 0;
  
#line 1037 
  return __retres;
}


#line 1043  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
int cxgb3_ofld_send(struct t3cdev *dev, struct sk_buff *skb)
{
  int r;
  
#line 1047 
  local_bh_disable();
  
#line 1048 
  r = (*(dev->send))(dev,skb);
  
#line 1049 
  local_bh_enable();
  
#line 1050 
  return r;
}


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static char const __kstrtab_cxgb3_ofld_send[16U] = {(char)'c', (char)'x', (char)'g', (char)'b', (char)'3', (char)'_', (char)'o', (char)'f', (char)'l', (char)'d', (char)'_', (char)'s', (char)'e', (char)'n', (char)'d', (char)'\000'};

#line 1053 
struct kernel_symbol const __ksymtab_cxgb3_ofld_send;


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
struct kernel_symbol const __ksymtab_cxgb3_ofld_send = {.value = (unsigned long)(& cxgb3_ofld_send), .name = (char const *)(& __kstrtab_cxgb3_ofld_send)};

#line 1055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int is_offloading(struct net_device *dev)
{
  int __retres;
  struct adapter *adapter;
  int i;
  struct adapter *tmp;
  struct adapter *tmp_0;
  
#line 1060 
  _raw_read_lock_bh(& adapter_list_lock);
  {
    
#line 1061 
    struct list_head const *__mptr = (struct list_head const *)adapter_list.next;
    
#line 1061 
    tmp = (struct adapter *)__mptr + 18446744073709551480U;
  }
  
#line 1061 
  adapter = tmp;
  
#line 1061 
  goto ldv_57671;
  ldv_57670: 
#line 1062 
  ;
  
#line 1062 
  i = 0;
  
#line 1062 
  goto ldv_57668;
  ldv_57667: 
#line 1063 
  ;
  
#line 1063 
  if (adapter->port[i] == dev) {
    
#line 1064 
    _raw_read_unlock_bh(& adapter_list_lock);
    
#line 1065 
    __retres = 1;
    
#line 1065 
    goto return_label;
  }
  else ;
  
#line 1062 
  i += 1;
  ldv_57668: 
#line 1063 
  ;
  
#line 1062 
  if (adapter->params.nports > (unsigned int)i) 
#line 1064 
                                                goto ldv_57667; else 
                                                                  
#line 1067 
                                                                  goto ldv_57669;
  ldv_57669: 
#line 1068 
  ;
  {
    
#line 1061 
    struct list_head const *__mptr_0 = (struct list_head const *)adapter->adapter_list.next;
    
#line 1061 
    tmp_0 = (struct adapter *)__mptr_0 + 18446744073709551480U;
  }
  
#line 1061 
  adapter = tmp_0;
  ldv_57671: 
#line 1063 
  ;
  
#line 1061 
  if (& adapter->adapter_list != & adapter_list) 
#line 1063 
                                                 goto ldv_57670; else 
                                                                   
#line 1066 
                                                                   goto ldv_57672;
  ldv_57672: 
#line 1067 
  ;
  
#line 1069 
  _raw_read_unlock_bh(& adapter_list_lock);
  
#line 1070 
  __retres = 0;
  return_label: 
#line 1070 
                return __retres;
}


#line 1073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void cxgb_neigh_update(struct neighbour *neigh)
{
  struct net_device *dev;
  
#line 1077 
  if (neigh == (struct neighbour *)0) 
#line 1078 
                                      goto return_label; else ;
  
#line 1079 
  dev = neigh->dev;
  
#line 1080 
  if (dev != (struct net_device *)0) {
    int tmp_0;
    
#line 1080 
    tmp_0 = is_offloading(dev);
    
#line 1080 
    if (tmp_0 != 0) {
      
#line 1081 
      struct t3cdev *tdev = dev2t3cdev(dev);
      
#line 1083 
      if ((long)(tdev == (struct t3cdev *)0) != 0L) {
        
#line 1085 
        ldv_inline_asm();
        
#line 1083 
        ;
      }
      else ;
      
#line 1084 
      t3_l2t_update(tdev,neigh);
    }
    else ;
  }
  else ;
  return_label: 
#line 1086 
                return;
}


#line 1088  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void set_l2t_ix(struct t3cdev *tdev, u32 tid, struct l2t_entry *e)
{
  struct sk_buff *skb;
  struct cpl_set_tcb_field *req;
  
#line 1093 
  skb = alloc_skb(32U,32U);
  
#line 1094 
  if (skb == (struct sk_buff *)0) {
    
#line 1095 
    printk("\001","set_l2t_ix");
    
#line 1096 
    goto return_label;
  }
  else ;
  
#line 1098 
  skb->priority = 1U;
  
#line 1099 
  req = (struct cpl_set_tcb_field *)skb_put(skb,32U);
  
#line 1100 
  req->wr.wr_hi = 1U;
  
#line 1101 
  if (0 != 0) 
#line 1101 
              req->ot.opcode_tid = ((((tid << 24) | ((tid << 8) & 16711680U)) | ((tid >> 8) & 65280U)) | (tid >> 24)) | 5U; else 
                                                                    
#line 1101 
                                                                    req->ot.opcode_tid = __fswab32(tid | 83886080U);
  
#line 1102 
  req->reply = (unsigned char)0U;
  
#line 1103 
  req->cpu_idx = (unsigned char)0U;
  
#line 1104 
  req->word = (unsigned short)0U;
  
#line 1105 
  req->mask = 9295151454450876416ULL;
  
#line 1106 
  if (0 != 0) 
#line 1106 
              req->val = ((((((((unsigned long long)((int)e->idx << 7) << 56) | (((unsigned long long)((int)e->idx << 7) << 40) & 71776119061217280ULL)) | (((unsigned long long)((int)e->idx << 7) << 24) & 280375465082880ULL)) | (((unsigned long long)((int)e->idx << 7) << 8) & 1095216660480ULL)) | (((unsigned long long)((int)e->idx << 7) >> 8) & 4278190080ULL)) | (((unsigned long long)((int)e->idx << 7) >> 24) & 16711680ULL)) | (((unsigned long long)((int)e->idx << 7) >> 40) & 65280ULL)) | ((unsigned long long)((int)e->idx << 7) >> 56); else 
                                                                    
#line 1106 
                                                                    req->val = __fswab64((unsigned long long)((int)e->idx << 7));
  
#line 1107 
  (*(tdev->send))(tdev,skb);
  return_label: 
#line 1108 
                return;
}


#line 1110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void cxgb_redirect(struct dst_entry *old, struct dst_entry *new, struct neighbour *neigh, void const *daddr)
{
  struct net_device *dev;
  struct tid_info *ti;
  struct t3cdev *tdev;
  u32 tid;
  int update_tcb;
  struct l2t_entry *e;
  struct t3c_tid_entry *te;
  int tmp;
  
#line 1122 
  dev = neigh->dev;
  
#line 1124 
  tmp = is_offloading(dev);
  
#line 1124 
  if (tmp == 0) 
#line 1125 
                goto return_label; else ;
  
#line 1126 
  tdev = dev2t3cdev(dev);
  
#line 1127 
  if ((long)(tdev == (struct t3cdev *)0) != 0L) {
    
#line 1129 
    ldv_inline_asm();
    
#line 1127 
    ;
  }
  else ;
  
#line 1130 
  e = t3_l2t_get(tdev,new,dev,daddr);
  
#line 1131 
  if (e == (struct l2t_entry *)0) {
    
#line 1132 
    printk("\001","cxgb_redirect");
    
#line 1133 
    goto return_label;
  }
  else ;
  
#line 1137 
  ti = & (*((struct t3c_data **)(& tdev->l4opt)))->tid_maps;
  
#line 1138 
  tid = 0U;
  
#line 1138 
  goto ldv_57711;
  ldv_57710: 
#line 1139 
  ;
  
#line 1139 
  te = lookup_tid((struct tid_info const *)ti,tid);
  
#line 1140 
  if ((long)(te == (struct t3c_tid_entry *)0) != 0L) {
    
#line 1142 
    ldv_inline_asm();
    
#line 1140 
    ;
  }
  else ;
  
#line 1141 
  if (((te != (struct t3c_tid_entry *)0 && te->ctx != (void *)0) && te->client != (struct cxgb3_client *)0) && (te->client)->redirect != (int (*)(void *, struct dst_entry *, struct dst_entry *, struct l2t_entry *))0) {
    
#line 1142 
    update_tcb = (*((te->client)->redirect))(te->ctx,old,new,e);
    
#line 1143 
    if (update_tcb != 0) {
      void *tmp_4;
      
#line 1144 
      rcu_read_lock();
      
#line 1145 
      ;
      {
        void *tmp_1;
        {
          void *tmp_0;
          {
            union __anonunion___u_1773 __u;
            
#line 1145 
            __read_once_size((void const volatile *)(& tdev->l2opt),(void *)(& __u.__c),8);
            
#line 1145 
            tmp_0 = __u.__val;
          }
          
#line 1145 
          void *_________p1 = tmp_0;
          
#line 1145 
          tmp_1 = _________p1;
        }
        
#line 1145 
        void *________p1 = tmp_1;
        {
          bool __warned;
          int tmp_2;
          
#line 1145 
          tmp_2 = debug_lockdep_rcu_enabled();
          
#line 1145 
          if (tmp_2 != 0) {
            
#line 1145 
            if (! __warned) {
              int tmp_3;
              
#line 1145 
              tmp_3 = rcu_read_lock_held();
              
#line 1145 
              if (tmp_3 == 0) {
                
#line 1145 
                __warned = (_Bool)1;
                
#line 1145 
                lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c",1145,"suspicious rcu_dereference_check() usage");
              }
              else ;
            }
            else ;
          }
          else ;
        }
        
#line 1145 
        tmp_4 = ________p1;
      }
      
#line 1145 
      l2t_hold_0((struct l2t_data *)tmp_4,e);
      
#line 1146 
      rcu_read_unlock();
      
#line 1147 
      set_l2t_ix(tdev,tid,e);
    }
    else ;
  }
  else ;
  
#line 1138 
  tid += 1U;
  ldv_57711: 
#line 1139 
  ;
  
#line 1138 
  if (ti->ntids > tid) 
#line 1140 
                       goto ldv_57710; else 
#line 1143 
                                            goto ldv_57712;
  ldv_57712: 
#line 1144 
  ;
  
#line 1151 
  l2t_release(tdev,e);
  return_label: 
#line 1152 
                return;
}


#line 1158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void *cxgb_alloc_mem(unsigned long size)
{
  
#line 1160 
  void *p = kzalloc(size,720U);
  
#line 1162 
  if (p == (void *)0) 
#line 1163 
                      p = vzalloc(size); else ;
  
#line 1164 
  return p;
}


#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb_free_mem(void *addr)
{
  
#line 1172 
  kvfree((void const *)addr);
  
#line 1173 
  return;
}


#line 1178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static int init_tid_tabs(struct tid_info *t, unsigned int ntids, unsigned int natids, unsigned int nstids, unsigned int atid_base, unsigned int stid_base)
{
  int __retres;
  unsigned int tmp_0;
  
#line 1182 
  unsigned long size = (((unsigned long)ntids + (unsigned long)natids) + (unsigned long)nstids) * 16UL;
  
#line 1185 
  t->tid_tab = (struct t3c_tid_entry *)cxgb_alloc_mem(size);
  
#line 1186 
  if (t->tid_tab == (struct t3c_tid_entry *)0) {
    
#line 1187 
    __retres = -12;
    
#line 1187 
    goto return_label;
  }
  else ;
  
#line 1189 
  t->stid_tab = (union listen_entry *)(t->tid_tab + ntids);
  
#line 1190 
  t->atid_tab = (union active_open_entry *)(t->stid_tab + nstids);
  
#line 1191 
  t->ntids = ntids;
  
#line 1192 
  t->nstids = nstids;
  
#line 1193 
  t->stid_base = stid_base;
  
#line 1194 
  t->sfree = (union listen_entry *)0;
  
#line 1195 
  t->natids = natids;
  
#line 1196 
  t->atid_base = atid_base;
  
#line 1197 
  t->afree = (union active_open_entry *)0;
  
#line 1198 
  tmp_0 = 0U;
  
#line 1198 
  t->atids_in_use = tmp_0;
  
#line 1198 
  t->stids_in_use = tmp_0;
  
#line 1199 
  atomic_set(& t->tids_in_use,0);
  
#line 1200 
  spinlock_check(& t->stid_lock);
  {
    struct lock_class_key __key;
    
#line 1200 
    __raw_spin_lock_init(& t->stid_lock.__anonCompField_spinlock_18.rlock,"&(&t->stid_lock)->rlock",& __key);
  }
  
#line 1201 
  spinlock_check(& t->atid_lock);
  {
    struct lock_class_key __key_0;
    
#line 1201 
    __raw_spin_lock_init(& t->atid_lock.__anonCompField_spinlock_18.rlock,"&(&t->atid_lock)->rlock",& __key_0);
  }
  
#line 1206 
  if (nstids != 0U) {
    
#line 1207 
    goto ldv_57732;
    ldv_57731: 
#line 1208 
    ;
    
#line 1208 
    (t->stid_tab + (nstids + 4294967295U))->next = t->stid_tab + nstids;
    ldv_57732: 
#line 1209 
    ;
    
#line 1207 
    nstids -= 1U;
    
#line 1207 
    if (nstids != 0U) 
#line 1209 
                      goto ldv_57731; else 
#line 1212 
                                           goto ldv_57733;
    ldv_57733: 
#line 1213 
    ;
    
#line 1209 
    t->sfree = t->stid_tab;
  }
  else ;
  
#line 1211 
  if (natids != 0U) {
    
#line 1212 
    goto ldv_57735;
    ldv_57734: 
#line 1213 
    ;
    
#line 1213 
    (t->atid_tab + (natids + 4294967295U))->next = t->atid_tab + natids;
    ldv_57735: 
#line 1214 
    ;
    
#line 1212 
    natids -= 1U;
    
#line 1212 
    if (natids != 0U) 
#line 1214 
                      goto ldv_57734; else 
#line 1217 
                                           goto ldv_57736;
    ldv_57736: 
#line 1218 
    ;
    
#line 1214 
    t->afree = t->atid_tab;
  }
  else ;
  
#line 1216 
  __retres = 0;
  return_label: 
#line 1216 
                return __retres;
}


#line 1219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void free_tid_maps(struct tid_info *t)
{
  
#line 1221 
  cxgb_free_mem((void *)t->tid_tab);
  
#line 1222 
  return;
}


#line 1224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static void add_adapter(struct adapter *adap)
{
  
#line 1226 
  _raw_write_lock_bh(& adapter_list_lock);
  
#line 1227 
  list_add_tail(& adap->adapter_list,& adapter_list);
  
#line 1228 
  _raw_write_unlock_bh(& adapter_list_lock);
  
#line 1229 
  return;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static void remove_adapter(struct adapter *adap)
{
  
#line 1233 
  _raw_write_lock_bh(& adapter_list_lock);
  
#line 1234 
  list_del(& adap->adapter_list);
  
#line 1235 
  _raw_write_unlock_bh(& adapter_list_lock);
  
#line 1236 
  return;
}


#line 1238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
int cxgb3_offload_activate(struct adapter *adapter)
{
  int __retres;
  int natids;
  int err;
  struct t3c_data *t;
  struct tid_range stid_range;
  struct tid_range tid_range;
  struct mtutab mtutab;
  unsigned int l2t_capacity;
  struct l2t_data *l2td;
  int tmp_0;
  unsigned int const tmp_7;
  int tmp_8;
  
#line 1240 
  struct t3cdev *dev = & adapter->tdev;
  
#line 1248 
  t = (struct t3c_data *)kzalloc(576UL,208U);
  
#line 1249 
  if (t == (struct t3c_data *)0) {
    
#line 1250 
    __retres = -12;
    
#line 1250 
    goto return_label;
  }
  else ;
  
#line 1252 
  err = -95;
  
#line 1253 
  tmp_0 = (*(dev->ctl))(dev,1U,(void *)(& t->tx_max_chunk));
  
#line 1253 
  if (tmp_0 < 0) 
#line 1259 
                 goto out_free;
  else {
    int tmp_1;
    
#line 1253 
    tmp_1 = (*(dev->ctl))(dev,0U,(void *)(& t->max_wrs));
    
#line 1253 
    if (tmp_1 < 0) 
#line 1259 
                   goto out_free;
    else {
      int tmp_2;
      
#line 1254 
      tmp_2 = (*(dev->ctl))(dev,5U,(void *)(& l2t_capacity));
      
#line 1254 
      if (tmp_2 < 0) 
#line 1259 
                     goto out_free;
      else {
        int tmp_3;
        
#line 1255 
        tmp_3 = (*(dev->ctl))(dev,6U,(void *)(& mtutab));
        
#line 1255 
        if (tmp_3 < 0) 
#line 1259 
                       goto out_free;
        else {
          int tmp_4;
          
#line 1256 
          tmp_4 = (*(dev->ctl))(dev,2U,(void *)(& tid_range));
          
#line 1256 
          if (tmp_4 < 0) 
#line 1259 
                         goto out_free;
          else {
            int tmp_5;
            
#line 1257 
            tmp_5 = (*(dev->ctl))(dev,3U,(void *)(& stid_range));
            
#line 1257 
            if (tmp_5 < 0) 
#line 1259 
                           goto out_free; else ;
          }
        }
      }
    }
  }
  
#line 1261 
  err = -12;
  
#line 1262 
  l2td = t3_init_l2t(l2t_capacity);
  
#line 1263 
  if (l2td == (struct l2t_data *)0) 
#line 1264 
                                    goto out_free; else ;
  {
    unsigned int tmp_6;
    
#line 1266 
    unsigned int _min1 = tid_range.num / 2U;
    
#line 1266 
    unsigned int const _min2 = 65536U;
    
#line 1266 
    if (_min1 <= 65535U) 
#line 1266 
                         tmp_6 = _min1; else 
#line 1266 
                                             tmp_6 = _min2;
    
#line 1266 
    tmp_7 = tmp_6;
  }
  
#line 1266 
  natids = (int)tmp_7;
  
#line 1267 
  err = init_tid_tabs(& t->tid_maps,tid_range.num,(unsigned int)natids,stid_range.num,ATID_BASE,stid_range.base);
  
#line 1269 
  if (err != 0) 
#line 1270 
                goto out_free_l2t; else ;
  
#line 1272 
  t->mtus = mtutab.mtus;
  
#line 1273 
  t->nmtus = mtutab.size;
  {
    struct lock_class_key __key;
    
#line 1275 
    __init_work(& t->tid_release_task,0);
    
#line 1275 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 1275 
    t->tid_release_task.data = __constr_expr_37;
    
#line 1275 
    lockdep_init_map(& t->tid_release_task.lockdep_map,"(&t->tid_release_task)",& __key,0);
    
#line 1275 
    INIT_LIST_HEAD(& t->tid_release_task.entry);
    
#line 1275 
    t->tid_release_task.func = & t3_process_tid_release_list;
  }
  
#line 1276 
  spinlock_check(& t->tid_release_lock);
  {
    struct lock_class_key __key_0;
    
#line 1276 
    __raw_spin_lock_init(& t->tid_release_lock.__anonCompField_spinlock_18.rlock,"&(&t->tid_release_lock)->rlock",& __key_0);
  }
  
#line 1277 
  INIT_LIST_HEAD(& t->list_node);
  
#line 1278 
  t->dev = dev;
  
#line 1280 
  dev->l2opt = (void *)l2td;
  
#line 1281 
  *((struct t3c_data **)(& dev->l4opt)) = t;
  
#line 1282 
  dev->recv = & process_rx;
  
#line 1283 
  dev->neigh_update = & t3_l2t_update;
  
#line 1286 
  tmp_8 = list_empty((struct list_head const *)(& adapter_list));
  
#line 1286 
  if (tmp_8 != 0) 
#line 1287 
                  register_netevent_notifier(& nb); else ;
  
#line 1289 
  t->nofail_skb = alloc_skb(16U,208U);
  
#line 1290 
  t->release_list_incomplete = 0U;
  
#line 1292 
  add_adapter(adapter);
  
#line 1293 
  __retres = 0;
  
#line 1293 
  goto return_label;
  out_free_l2t: 
#line 1295 
  ;
  
#line 1296 
  t3_free_l2t(l2td);
  out_free: 
#line 1297 
  ;
  
#line 1298 
  kfree((void const *)t);
  
#line 1299 
  __retres = err;
  return_label: 
#line 1299 
                return __retres;
}


#line 1302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
static void clean_l2_data(struct callback_head *head)
{
  struct l2t_data *tmp;
  {
    
#line 1304 
    struct callback_head const *__mptr = (struct callback_head const *)head;
    
#line 1304 
    tmp = (struct l2t_data *)__mptr + 18446744073709551520U;
  }
  
#line 1304 
  struct l2t_data *d = tmp;
  
#line 1305 
  t3_free_l2t(d);
  
#line 1306 
  return;
}


#line 1309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_offload_deactivate(struct adapter *adapter)
{
  struct l2t_data *d;
  int tmp;
  void *tmp_4;
  
#line 1311 
  struct t3cdev *tdev = & adapter->tdev;
  
#line 1312 
  struct t3c_data *t = *((struct t3c_data **)(& tdev->l4opt));
  
#line 1315 
  remove_adapter(adapter);
  
#line 1316 
  tmp = list_empty((struct list_head const *)(& adapter_list));
  
#line 1316 
  if (tmp != 0) 
#line 1317 
                unregister_netevent_notifier(& nb); else ;
  
#line 1319 
  free_tid_maps(& t->tid_maps);
  
#line 1320 
  *((struct t3c_data **)(& tdev->l4opt)) = (struct t3c_data *)0;
  
#line 1321 
  rcu_read_lock();
  {
    void *tmp_1;
    {
      void *tmp_0;
      {
        union __anonunion___u_1775 __u;
        
#line 1322 
        __read_once_size((void const volatile *)(& tdev->l2opt),(void *)(& __u.__c),8);
        
#line 1322 
        tmp_0 = __u.__val;
      }
      
#line 1322 
      void *_________p1 = tmp_0;
      
#line 1322 
      tmp_1 = _________p1;
    }
    
#line 1322 
    void *________p1 = tmp_1;
    {
      bool __warned;
      int tmp_2;
      
#line 1322 
      tmp_2 = debug_lockdep_rcu_enabled();
      
#line 1322 
      if (tmp_2 != 0) {
        
#line 1322 
        if (! __warned) {
          int tmp_3;
          
#line 1322 
          tmp_3 = rcu_read_lock_held();
          
#line 1322 
          if (tmp_3 == 0) {
            
#line 1322 
            __warned = (_Bool)1;
            
#line 1322 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c",1322,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 1322 
    tmp_4 = ________p1;
  }
  
#line 1322 
  d = (struct l2t_data *)tmp_4;
  
#line 1323 
  rcu_read_unlock();
  
#line 1324 
  tdev->l2opt = (void *)0;
  
#line 1325 
  call_rcu_sched(& d->callback_head,& clean_l2_data);
  
#line 1326 
  if (t->nofail_skb != (struct sk_buff *)0) 
#line 1327 
                                            kfree_skb(t->nofail_skb); else ;
  
#line 1328 
  kfree((void const *)t);
  
#line 1329 
  return;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static void register_tdev(struct t3cdev *tdev)
{
  int unit;
  int tmp;
  
#line 1335 
  ldv_mutex_lock_113(& cxgb3_db_lock);
  
#line 1336 
  tmp = unit;
  
#line 1336 
  unit += 1;
  
#line 1336 
  ;
  
#line 1336 
  ;
  
#line 1336 
  snprintf((char *)(& tdev->name),16UL,"ofld_dev%d",tmp);
  
#line 1337 
  list_add_tail(& tdev->ofld_dev_list,& ofld_dev_list);
  
#line 1338 
  ldv_mutex_unlock_114(& cxgb3_db_lock);
  
#line 1339 
  return;
}


#line 1341  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static void unregister_tdev(struct t3cdev *tdev)
{
  
#line 1343 
  ldv_mutex_lock_115(& cxgb3_db_lock);
  
#line 1344 
  list_del(& tdev->ofld_dev_list);
  
#line 1345 
  ldv_mutex_unlock_116(& cxgb3_db_lock);
  
#line 1346 
  return;
}


#line 1348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
__inline static int adap2type(struct adapter *adapter)
{
  
#line 1350 
  int type = 0;
  
#line 1352 
  switch (adapter->params.rev) {
    case (unsigned int)0: 
#line 1353 
    ;
    
#line 1354 
    type = 0;
    
#line 1355 
    goto ldv_57800;
    case (unsigned int)2: 
#line 1356 
    ;
    case (unsigned int)3: 
#line 1357 
    ;
    
#line 1358 
    type = 1;
    
#line 1359 
    goto ldv_57800;
    case (unsigned int)4: 
#line 1360 
    ;
    
#line 1361 
    type = 2;
    
#line 1362 
    goto ldv_57800;
  }
  ldv_57800: 
#line 1364 
  ;
  
#line 1364 
  return type;
}


#line 1367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_adapter_ofld(struct adapter *adapter)
{
  int tmp;
  
#line 1369 
  struct t3cdev *tdev = & adapter->tdev;
  
#line 1371 
  INIT_LIST_HEAD(& tdev->ofld_dev_list);
  
#line 1373 
  cxgb3_set_dummy_ops(tdev);
  
#line 1374 
  tdev->send = & t3_offload_tx;
  
#line 1375 
  tdev->ctl = & cxgb_offload_ctl;
  
#line 1376 
  tmp = adap2type(adapter);
  
#line 1376 
  tdev->type = (enum t3ctype)tmp;
  
#line 1378 
  register_tdev(tdev);
  
#line 1379 
  return;
}


#line 1381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_adapter_unofld(struct adapter *adapter)
{
  
#line 1383 
  struct t3cdev *tdev = & adapter->tdev;
  
#line 1385 
  tdev->recv = (int (*)(struct t3cdev *, struct sk_buff **, int ))0;
  
#line 1386 
  tdev->neigh_update = (void (*)(struct t3cdev *, struct neighbour *))0;
  
#line 1388 
  unregister_tdev(tdev);
  
#line 1389 
  return;
}


#line 1391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.c"
void cxgb3_offload_init(void)
{
  int i;
  
#line 1395 
  i = 0;
  
#line 1395 
  goto ldv_57817;
  ldv_57816: 
#line 1396 
  ;
  
#line 1396 
  cpl_handlers[i] = & do_bad_cpl;
  
#line 1395 
  i += 1;
  ldv_57817: 
#line 1396 
  ;
  
#line 1395 
  if (i <= 165) 
#line 1397 
                goto ldv_57816; else 
#line 1400 
                                     goto ldv_57818;
  ldv_57818: 
#line 1401 
  ;
  
#line 1398 
  t3_register_cpl_handler(46U,& do_smt_write_rpl);
  
#line 1399 
  t3_register_cpl_handler(35U,& do_l2t_write_rpl);
  
#line 1400 
  t3_register_cpl_handler(40U,& do_rte_write_rpl);
  
#line 1401 
  t3_register_cpl_handler(65U,& do_stid_rpl);
  
#line 1402 
  t3_register_cpl_handler(32U,& do_stid_rpl);
  
#line 1403 
  t3_register_cpl_handler(112U,& do_cr);
  
#line 1404 
  t3_register_cpl_handler(81U,& do_hwtid_rpl);
  
#line 1405 
  t3_register_cpl_handler(49U,& do_hwtid_rpl);
  
#line 1406 
  t3_register_cpl_handler(11U,& do_hwtid_rpl);
  
#line 1407 
  t3_register_cpl_handler(44U,& do_hwtid_rpl);
  
#line 1408 
  t3_register_cpl_handler(57U,& do_hwtid_rpl);
  
#line 1409 
  t3_register_cpl_handler(47U,& do_hwtid_rpl);
  
#line 1410 
  t3_register_cpl_handler(160U,& do_hwtid_rpl);
  
#line 1411 
  t3_register_cpl_handler(64U,& do_act_open_rpl);
  
#line 1412 
  t3_register_cpl_handler(38U,& do_hwtid_rpl);
  
#line 1413 
  t3_register_cpl_handler(50U,& do_hwtid_rpl);
  
#line 1414 
  t3_register_cpl_handler(48U,& do_abort_req_rss);
  
#line 1415 
  t3_register_cpl_handler(80U,& do_act_establish);
  
#line 1416 
  t3_register_cpl_handler(45U,& do_hwtid_rpl);
  
#line 1417 
  t3_register_cpl_handler(34U,& do_hwtid_rpl);
  
#line 1418 
  t3_register_cpl_handler(162U,& do_term);
  
#line 1419 
  t3_register_cpl_handler(165U,& do_hwtid_rpl);
  
#line 1420 
  t3_register_cpl_handler(163U,& do_trace);
  
#line 1421 
  t3_register_cpl_handler(66U,& do_hwtid_rpl);
  
#line 1422 
  t3_register_cpl_handler(41U,& do_hwtid_rpl);
  
#line 1423 
  t3_register_cpl_handler(51U,& do_hwtid_rpl);
  
#line 1424 
  return;
}


#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void atomic_inc_1(atomic_t *v)
{
  
#line 130 
  ldv_atomic_inc(v);
  
#line 131 
  return;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void atomic_dec_0(atomic_t *v)
{
  
#line 137 
  ldv_atomic_dec(v);
  
#line 138 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static int atomic_dec_and_test_0(atomic_t *v)
{
  int tmp;
  
#line 144 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 144 
  return tmp;
}


#line 162  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static int atomic_add_return_0(int i, atomic_t *v)
{
  int tmp;
  
#line 165 
  tmp = ldv_atomic_add_return(i,v);
  
#line 165 
  return tmp;
}


#line 443  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 446 
  tmp = ldv_kzalloc(size,flags);
  
#line 446 
  return tmp;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_75(struct mutex *ldv_func_arg1)
{
  
#line 774 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 775 
  return;
}


#line 778  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_76(struct mutex *ldv_func_arg1)
{
  
#line 782 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 783 
  return;
}


#line 786  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_77(struct mutex *ldv_func_arg1)
{
  
#line 790 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 791 
  return;
}


#line 794  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1)
{
  
#line 798 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 799 
  return;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1)
{
  
#line 806 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1)
{
  
#line 814 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 815 
  return;
}


#line 818  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1)
{
  
#line 822 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 823 
  return;
}


#line 826  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1)
{
  
#line 830 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 831 
  return;
}


#line 834  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1)
{
  
#line 838 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 839 
  return;
}


#line 842  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1)
{
  
#line 846 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 847 
  return;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1)
{
  
#line 854 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 856 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 864 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 866 
  spin_unlock_irqrestore(lock,flags);
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_irq_87(spinlock_t *lock)
{
  
#line 874 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 876 
  spin_lock_irq_0(lock);
  
#line 877 
  return;
}


#line 880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_irq_88(spinlock_t *lock)
{
  
#line 884 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 886 
  spin_unlock_irq_0(lock);
  
#line 887 
  return;
}


#line 890  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_irq_89(spinlock_t *lock)
{
  
#line 894 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 896 
  spin_lock_irq_0(lock);
  
#line 897 
  return;
}


#line 900  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_irq_90(spinlock_t *lock)
{
  
#line 904 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 906 
  spin_unlock_irq_0(lock);
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_irq_91(spinlock_t *lock)
{
  
#line 914 
  ldv_spin_model_lock((char *)"reg_lock_of_sge");
  
#line 916 
  spin_lock_irq_0(lock);
  
#line 917 
  return;
}


#line 920  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_irq_92(spinlock_t *lock)
{
  
#line 924 
  ldv_spin_model_unlock((char *)"reg_lock_of_sge");
  
#line 926 
  spin_unlock_irq_0(lock);
  
#line 927 
  return;
}


#line 930  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_93_0(spinlock_t *lock)
{
  
#line 934 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 936 
  spin_lock_1(lock);
  
#line 937 
  return;
}


#line 940  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_94(spinlock_t *lock)
{
  
#line 944 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 946 
  spin_unlock_1(lock);
  
#line 947 
  return;
}


#line 950  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_95(spinlock_t *lock)
{
  
#line 954 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 956 
  spin_lock_1(lock);
  
#line 957 
  return;
}


#line 960  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_96(spinlock_t *lock)
{
  
#line 964 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 966 
  spin_unlock_1(lock);
  
#line 967 
  return;
}


#line 970  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_97(spinlock_t *lock)
{
  
#line 974 
  ldv_spin_model_lock((char *)"atid_lock_of_tid_info");
  
#line 976 
  spin_lock_bh_0(lock);
  
#line 977 
  return;
}


#line 980  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_98(spinlock_t *lock)
{
  
#line 984 
  ldv_spin_model_unlock((char *)"atid_lock_of_tid_info");
  
#line 986 
  spin_unlock_bh_0(lock);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_99(spinlock_t *lock)
{
  
#line 994 
  ldv_spin_model_lock((char *)"stid_lock_of_tid_info");
  
#line 996 
  spin_lock_bh_0(lock);
  
#line 997 
  return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_100(spinlock_t *lock)
{
  
#line 1004 
  ldv_spin_model_unlock((char *)"stid_lock_of_tid_info");
  
#line 1006 
  spin_unlock_bh_0(lock);
  
#line 1007 
  return;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_101(spinlock_t *lock)
{
  
#line 1014 
  ldv_spin_model_lock((char *)"tid_release_lock_of_t3c_data");
  
#line 1016 
  spin_lock_bh_0(lock);
  
#line 1017 
  return;
}


#line 1020  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_102(spinlock_t *lock)
{
  
#line 1024 
  ldv_spin_model_unlock((char *)"tid_release_lock_of_t3c_data");
  
#line 1026 
  spin_unlock_bh_0(lock);
  
#line 1027 
  return;
}


#line 1030  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_103(spinlock_t *lock)
{
  
#line 1034 
  ldv_spin_model_lock((char *)"tid_release_lock_of_t3c_data");
  
#line 1036 
  spin_lock_bh_0(lock);
  
#line 1037 
  return;
}


#line 1040  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1044 
  ldv_spin_model_lock((char *)"tid_release_lock_of_t3c_data");
  
#line 1046 
  spin_lock_bh_0(lock);
  
#line 1047 
  return;
}


#line 1050  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1054 
  ldv_spin_model_unlock((char *)"tid_release_lock_of_t3c_data");
  
#line 1056 
  spin_unlock_bh_0(lock);
  
#line 1057 
  return;
}


#line 1060  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_106(spinlock_t *lock)
{
  
#line 1064 
  ldv_spin_model_lock((char *)"tid_release_lock_of_t3c_data");
  
#line 1066 
  spin_lock_bh_0(lock);
  
#line 1067 
  return;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static bool ldv_schedule_work_107(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1074 
  tmp = ldv_emg_schedule_work(work);
  
#line 1074 
  __retres = tmp != 0;
  
#line 1074 
  return __retres;
}


#line 1078  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_108(spinlock_t *lock)
{
  
#line 1082 
  ldv_spin_model_unlock((char *)"tid_release_lock_of_t3c_data");
  
#line 1084 
  spin_unlock_bh_0(lock);
  
#line 1085 
  return;
}


#line 1088  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_109(spinlock_t *lock)
{
  
#line 1092 
  ldv_spin_model_lock((char *)"atid_lock_of_tid_info");
  
#line 1094 
  spin_lock_bh_0(lock);
  
#line 1095 
  return;
}


#line 1098  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_110(spinlock_t *lock)
{
  
#line 1102 
  ldv_spin_model_unlock((char *)"atid_lock_of_tid_info");
  
#line 1104 
  spin_unlock_bh_0(lock);
  
#line 1105 
  return;
}


#line 1108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_lock_bh_111(spinlock_t *lock)
{
  
#line 1112 
  ldv_spin_model_lock((char *)"stid_lock_of_tid_info");
  
#line 1114 
  spin_lock_bh_0(lock);
  
#line 1115 
  return;
}


#line 1118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_spin_unlock_bh_112(spinlock_t *lock)
{
  
#line 1122 
  ldv_spin_model_unlock((char *)"stid_lock_of_tid_info");
  
#line 1124 
  spin_unlock_bh_0(lock);
  
#line 1125 
  return;
}


#line 1128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_113(struct mutex *ldv_func_arg1)
{
  
#line 1132 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 1133 
  return;
}


#line 1136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_114(struct mutex *ldv_func_arg1)
{
  
#line 1140 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 1141 
  return;
}


#line 1144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_lock_115(struct mutex *ldv_func_arg1)
{
  
#line 1148 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 1149 
  return;
}


#line 1152  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_offload.c.aux"
static void ldv_mutex_unlock_116(struct mutex *ldv_func_arg1)
{
  
#line 1156 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cxgb3_db_lock");
  
#line 1157 
  return;
}


#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static int uses_xaui(struct adapter const *adap)
{
  int __retres;
  
#line 619 
  __retres = (int)(adap->params.info)->caps & 256;
  
#line 619 
  return __retres;
}


#line 622  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static int is_10G(struct adapter const *adap)
{
  int __retres;
  
#line 624 
  __retres = (int)(adap->params.info)->caps & 4096;
  
#line 624 
  return __retres;
}


#line 644 
void t3_write_regs(struct adapter *adapter, struct addr_val_pair const *p, int n, unsigned int offset);


#line 705 
int t3_mac_reset(struct cmac *mac);


#line 706 
void t3b_pcs_reset(struct cmac *mac);


#line 707 
void t3_mac_disable_exact_filters(struct cmac *mac);


#line 708 
void t3_mac_enable_exact_filters(struct cmac *mac);


#line 709 
int t3_mac_enable(struct cmac *mac, int which);


#line 710 
int t3_mac_disable(struct cmac *mac, int which);


#line 711 
int t3_mac_set_mtu(struct cmac *mac, unsigned int mtu);


#line 712 
int t3_mac_set_rx_mode(struct cmac *mac, struct net_device *dev);


#line 713 
int t3_mac_set_address(struct cmac *mac, unsigned int idx, u8 *addr);


#line 714 
int t3_mac_set_num_ucast(struct cmac *mac, int n);


#line 715 
struct mac_stats const *t3_mac_update_stats(struct cmac *mac);


#line 716 
int t3_mac_set_speed_duplex_fc(struct cmac *mac, int speed, int duplex, int fc);


#line 717 
int t3b2_mac_watchdog_task(struct cmac *mac);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
__inline static int macidx(struct cmac const *mac)
{
  int __retres;
  
#line 43 
  __retres = (int)(mac->offset / 512U);
  
#line 43 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
static void xaui_serdes_reset(struct cmac *mac)
{
  int i;
  int tmp;
  
#line 48 
  unsigned int const clear[6U] = {196608U, 16384U, 3145728U, 786432U, 32768U, 12582912U};
  
#line 54 
  struct adapter *adap = mac->adapter;
  
#line 55 
  u32 ctrl = mac->offset + 2272U;
  
#line 57 
  tmp = macidx((struct cmac const *)mac);
  
#line 57 
  ;
  
#line 57 
  ;
  
#line 57 
  ;
  
#line 57 
  t3_write_reg(adap,ctrl,(unsigned int)adap->params.vpd.xauicfg[tmp] | 16760832U);
  
#line 61 
  t3_read_reg(adap,ctrl);
  
#line 62 
  __const_udelay(64425UL);
  
#line 64 
  i = 0;
  
#line 64 
  goto ldv_47485;
  ldv_47484: 
#line 65 
  ;
  
#line 65 
  t3_set_reg_field(adap,ctrl,clear[i],0U);
  
#line 66 
  __const_udelay(64425UL);
  
#line 64 
  i += 1;
  ldv_47485: 
#line 65 
  ;
  
#line 64 
  if ((unsigned int)i <= 5U) 
#line 66 
                             goto ldv_47484; else 
#line 69 
                                                  goto ldv_47486;
  ldv_47486: 
#line 70 
  ;
  
#line 71 
  return;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
void t3b_pcs_reset(struct cmac *mac)
{
  
#line 72 
  t3_set_reg_field(mac->adapter,mac->offset + 2220U,2U,0U);
  
#line 74 
  __const_udelay(85900UL);
  
#line 75 
  t3_set_reg_field(mac->adapter,mac->offset + 2220U,0U,2U);
  
#line 76 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_reset(struct cmac *mac)
{
  int __retres;
  u32 val;
  unsigned int tmp_0;
  int tmp;
  int tmp_3;
  int tmp_5;
  
#line 81 
  struct addr_val_pair const mac_reset_avp[14U] = {{.reg_addr = 2048U, .val = 0U}, {.reg_addr = 2060U, .val = 0U}, {.reg_addr = 2064U, .val = 964U}, {.reg_addr = 2068U, .val = 0U}, {.reg_addr = 2072U, .val = 0U}, {.reg_addr = 2076U, .val = 0U}, {.reg_addr = 2084U, .val = 0U}, {.reg_addr = 2092U, .val = 0U}, {.reg_addr = 2100U, .val = 0U}, {.reg_addr = 2108U, .val = 0U}, {.reg_addr = 2116U, .val = 0U}, {.reg_addr = 2124U, .val = 0U}, {.reg_addr = 2132U, .val = 0U}, {.reg_addr = 2176U, .val = 4U}};
  
#line 99 
  struct adapter *adap = mac->adapter;
  
#line 100 
  unsigned int oft = mac->offset;
  
#line 102 
  t3_write_reg(adap,oft + 2220U,1U);
  
#line 103 
  t3_read_reg(adap,oft + 2220U);
  
#line 105 
  t3_write_regs(adap,(struct addr_val_pair const *)(& mac_reset_avp),14,oft);
  
#line 106 
  tmp = uses_xaui((struct adapter const *)adap);
  
#line 106 
  if (tmp != 0) 
#line 106 
                tmp_0 = 0U; else 
#line 106 
                                 tmp_0 = 2U;
  
#line 106 
  ;
  
#line 106 
  ;
  
#line 106 
  t3_set_reg_field(adap,oft + 2180U,3U,tmp_0);
  
#line 109 
  t3_set_reg_field(adap,oft + 2184U,0U,4194304U);
  
#line 111 
  tmp_3 = uses_xaui((struct adapter const *)adap);
  
#line 111 
  if (tmp_3 != 0) 
    
#line 112 
    if (adap->params.rev == 0U) {
      int tmp_2;
      
#line 113 
      t3_set_reg_field(adap,oft + 2192U,0U,24U);
      
#line 115 
      tmp_2 = t3_wait_op_done(adap,(int)(oft + 2448U),2147483648U,1,5,2);
      
#line 115 
      if (tmp_2 != 0) {
        int tmp_1;
        
#line 117 
        tmp_1 = macidx((struct cmac const *)mac);
        
#line 117 
        ;
        
#line 117 
        dev_err((struct device const *)(& (adap->pdev)->dev),"MAC %d XAUI SERDES CMU lock failed\n",tmp_1);
        
#line 120 
        __retres = -1;
        
#line 120 
        goto return_label;
      }
      else ;
      
#line 122 
      t3_set_reg_field(adap,oft + 2192U,0U,16777216U);
    }
    else 
#line 125 
         xaui_serdes_reset(mac);
  else ;
  
#line 128 
  t3_set_reg_field(adap,oft + 2216U,2147352576U,1342193664U);
  
#line 131 
  val = 17U;
  
#line 133 
  tmp_5 = is_10G((struct adapter const *)adap);
  
#line 133 
  if (tmp_5 != 0) 
#line 134 
                  val |= 2U;
  else {
    int tmp_4;
    
#line 135 
    tmp_4 = uses_xaui((struct adapter const *)adap);
    
#line 135 
    if (tmp_4 != 0) 
#line 136 
                    val |= 10U; else 
#line 138 
                                     val |= 12U;
  }
  
#line 139 
  t3_write_reg(adap,oft + 2220U,val);
  
#line 140 
  t3_read_reg(adap,oft + 2220U);
  
#line 141 
  if ((val & 2U) != 0U && adap->params.rev != 0U) {
    
#line 142 
    msleep(1U);
    
#line 143 
    t3b_pcs_reset(mac);
  }
  else ;
  
#line 146 
  memset((void *)(& mac->stats),0,448UL);
  
#line 147 
  __retres = 0;
  return_label: 
#line 147 
                return __retres;
}


#line 150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
static int t3b2_mac_reset(struct cmac *mac)
{
  int __retres;
  unsigned int store;
  u32 val;
  int tmp_0;
  int tmp_2;
  int tmp_4;
  
#line 152 
  struct adapter *adap = mac->adapter;
  
#line 153 
  unsigned int oft = mac->offset;
  
#line 154 
  int idx = macidx((struct cmac const *)mac);
  
#line 157 
  tmp_0 = macidx((struct cmac const *)mac);
  
#line 157 
  if (tmp_0 == 0) 
#line 158 
                  t3_set_reg_field(adap,1536U,1U,0U); else 
#line 160 
                                                           t3_set_reg_field(adap,1536U,2U,0U);
  
#line 163 
  t3_set_reg_field(adap,1536U,2048U,0U);
  
#line 165 
  t3_set_reg_field(adap,oft + 2052U,1U,0U);
  
#line 167 
  t3_write_reg(adap,oft + 2220U,1U);
  
#line 168 
  t3_read_reg(adap,oft + 2220U);
  
#line 171 
  t3_write_reg(adap,1088U,(unsigned int)(idx + 299));
  
#line 172 
  store = t3_read_reg(adap,(unsigned int)(idx + 299));
  
#line 174 
  msleep(10U);
  
#line 177 
  t3_write_reg(adap,1088U,(unsigned int)(idx + 299));
  
#line 178 
  t3_write_reg(adap,1092U,3221225489U);
  
#line 182 
  tmp_2 = t3_wait_op_done(adap,(int)(oft + 2468U),2147483648U,1,1000,2);
  
#line 182 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 184 
    tmp_1 = macidx((struct cmac const *)mac);
    
#line 184 
    ;
    
#line 184 
    dev_err((struct device const *)(& (adap->pdev)->dev),"MAC %d Rx fifo drain failed\n",tmp_1);
    
#line 186 
    __retres = -1;
    
#line 186 
    goto return_label;
  }
  else ;
  
#line 189 
  t3_write_reg(adap,oft + 2220U,0U);
  
#line 190 
  t3_read_reg(adap,oft + 2220U);
  
#line 192 
  val = 1U;
  
#line 193 
  tmp_4 = is_10G((struct adapter const *)adap);
  
#line 193 
  if (tmp_4 != 0) 
#line 194 
                  val |= 2U;
  else {
    int tmp_3;
    
#line 195 
    tmp_3 = uses_xaui((struct adapter const *)adap);
    
#line 195 
    if (tmp_3 != 0) 
#line 196 
                    val |= 10U; else 
#line 198 
                                     val |= 12U;
  }
  
#line 199 
  t3_write_reg(adap,oft + 2220U,val);
  
#line 200 
  t3_read_reg(adap,oft + 2220U);
  
#line 201 
  if ((val & 2U) != 0U && adap->params.rev != 0U) {
    
#line 202 
    msleep(1U);
    
#line 203 
    t3b_pcs_reset(mac);
  }
  else ;
  
#line 205 
  t3_write_reg(adap,oft + 2064U,964U);
  
#line 210 
  t3_write_reg(adap,1088U,(unsigned int)(idx + 299));
  
#line 211 
  t3_write_reg(adap,1092U,store);
  
#line 213 
  if (idx == 0) 
#line 214 
                t3_set_reg_field(adap,1536U,0U,1U); else 
#line 216 
                                                         t3_set_reg_field(adap,1536U,0U,2U);
  
#line 219 
  t3_set_reg_field(adap,1536U,2048U,1U);
  
#line 222 
  t3_set_reg_field(adap,1536U,2048U,1U);
  
#line 224 
  __retres = 0;
  return_label: 
#line 224 
                return __retres;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
static void set_addr_filter(struct cmac *mac, int idx, u8 const *addr)
{
  u32 addr_lo;
  u32 addr_hi;
  
#line 233 
  unsigned int oft = mac->offset + (unsigned int)(idx * 8);
  
#line 235 
  addr_lo = (unsigned int)(((((int)*(addr + 3U) << 24) | ((int)*(addr + 2U) << 16)) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 236 
  addr_hi = (unsigned int)(((int)*(addr + 5U) << 8) | (int)*(addr + 4U));
  
#line 238 
  t3_write_reg(mac->adapter,oft + 2076U,addr_lo);
  
#line 239 
  t3_write_reg(mac->adapter,oft + 2080U,addr_hi);
  
#line 240 
  return;
}


#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_set_address(struct cmac *mac, unsigned int idx, u8 *addr)
{
  int __retres;
  
#line 245 
  if (mac->nucast <= idx) {
    
#line 246 
    __retres = -22;
    
#line 246 
    goto return_label;
  }
  else ;
  
#line 247 
  set_addr_filter(mac,(int)idx,(u8 const *)addr);
  
#line 248 
  __retres = 0;
  return_label: 
#line 248 
                return __retres;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_set_num_ucast(struct cmac *mac, int n)
{
  int __retres;
  
#line 258 
  if (n > 8) {
    
#line 259 
    __retres = -22;
    
#line 259 
    goto return_label;
  }
  else ;
  
#line 260 
  mac->nucast = (unsigned int)n;
  
#line 261 
  __retres = 0;
  return_label: 
#line 261 
                return __retres;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
void t3_mac_disable_exact_filters(struct cmac *mac)
{
  unsigned int i;
  
#line 266 
  unsigned int reg = mac->offset + 2076U;
  
#line 268 
  i = 0U;
  
#line 268 
  goto ldv_47532;
  ldv_47531: 
#line 269 
  ;
  {
    
#line 269 
    u32 v = t3_read_reg(mac->adapter,reg);
    
#line 270 
    t3_write_reg(mac->adapter,reg,v);
  }
  
#line 268 
  i += 1U;
  
#line 268 
  reg += 8U;
  ldv_47532: 
#line 269 
  ;
  
#line 268 
  if (i <= 7U) 
#line 270 
               goto ldv_47531; else 
#line 273 
                                    goto ldv_47533;
  ldv_47533: 
#line 274 
  ;
  
#line 272 
  t3_read_reg(mac->adapter,2076U);
  
#line 273 
  return;
}


#line 275  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
void t3_mac_enable_exact_filters(struct cmac *mac)
{
  unsigned int i;
  
#line 277 
  unsigned int reg = mac->offset + 2080U;
  
#line 279 
  i = 0U;
  
#line 279 
  goto ldv_47541;
  ldv_47540: 
#line 280 
  ;
  {
    
#line 280 
    u32 v = t3_read_reg(mac->adapter,reg);
    
#line 281 
    t3_write_reg(mac->adapter,reg,v);
  }
  
#line 279 
  i += 1U;
  
#line 279 
  reg += 8U;
  ldv_47541: 
#line 280 
  ;
  
#line 279 
  if (i <= 7U) 
#line 281 
               goto ldv_47540; else 
#line 284 
                                    goto ldv_47542;
  ldv_47542: 
#line 285 
  ;
  
#line 283 
  t3_read_reg(mac->adapter,2076U);
  
#line 284 
  return;
}


#line 287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
static int hash_hw_addr(u8 const *addr)
{
  int octet;
  int bit;
  int c;
  
#line 289 
  int hash = 0;
  
#line 289 
  int i = 0;
  
#line 291 
  octet = 0;
  
#line 291 
  goto ldv_47555;
  ldv_47554: 
#line 292 
  ;
  
#line 292 
  c = (int)*(addr + octet);
  
#line 292 
  bit = 0;
  
#line 292 
  goto ldv_47552;
  ldv_47551: 
#line 293 
  ;
  
#line 293 
  hash = ((c & 1) << i) ^ hash;
  
#line 294 
  i += 1;
  
#line 294 
  if (i == 6) 
#line 295 
              i = 0; else ;
  
#line 292 
  c >>= 1;
  
#line 292 
  bit += 1;
  ldv_47552: 
#line 293 
  ;
  
#line 292 
  if (bit <= 7) 
#line 294 
                goto ldv_47551; else 
#line 297 
                                     goto ldv_47553;
  ldv_47553: 
#line 298 
  ;
  
#line 291 
  octet += 1;
  ldv_47555: 
#line 292 
  ;
  
#line 291 
  if (octet <= 5) 
#line 293 
                  goto ldv_47554; else 
#line 296 
                                       goto ldv_47556;
  ldv_47556: 
#line 297 
  ;
  
#line 297 
  return hash;
}


#line 300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_set_rx_mode(struct cmac *mac, struct net_device *dev)
{
  int __retres;
  u32 val;
  u32 hash_lo;
  u32 hash_hi;
  u32 tmp;
  
#line 303 
  struct adapter *adap = mac->adapter;
  
#line 304 
  unsigned int oft = mac->offset;
  
#line 306 
  tmp = t3_read_reg(adap,oft + 2064U);
  
#line 306 
  val = tmp & 4294967294U;
  
#line 307 
  if ((dev->flags & 256U) != 0U) 
#line 308 
                                 val |= 1U; else ;
  
#line 309 
  t3_write_reg(adap,oft + 2064U,val);
  
#line 311 
  if ((dev->flags & 512U) != 0U) {
    
#line 312 
    hash_hi = 4294967295U;
    
#line 312 
    hash_lo = hash_hi;
  }
  else {
    struct netdev_hw_addr *ha;
    struct netdev_hw_addr *tmp_0;
    struct netdev_hw_addr *tmp_3;
    
#line 315 
    int exact_addr_idx = (int)mac->nucast;
    
#line 317 
    hash_hi = 0U;
    
#line 317 
    hash_lo = hash_hi;
    {
      
#line 318 
      struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
      
#line 318 
      tmp_0 = (struct netdev_hw_addr *)__mptr;
    }
    
#line 318 
    ha = tmp_0;
    
#line 318 
    goto ldv_47574;
    ldv_47573: 
#line 319 
    ;
    
#line 319 
    if (exact_addr_idx <= 7) {
      int tmp_1;
      
#line 320 
      ;
      
#line 320 
      tmp_1 = exact_addr_idx;
      
#line 320 
      exact_addr_idx += 1;
      
#line 320 
      ;
      
#line 320 
      ;
      
#line 320 
      set_addr_filter(mac,tmp_1,(u8 const *)(& ha->addr));
    }
    else {
      
#line 323 
      int hash = hash_hw_addr((u8 const *)(& ha->addr));
      
#line 325 
      if (hash <= 31) 
#line 326 
                      hash_lo = (unsigned int)(1 << hash) | hash_lo; else 
                                                                    
#line 328 
                                                                    hash_hi = (unsigned int)(1 << (hash + -32)) | hash_hi;
    }
    {
      
#line 318 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 318 
      tmp_3 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 318 
    ha = tmp_3;
    ldv_47574: 
#line 320 
    ;
    
#line 318 
    if (& ha->list != & dev->mc.list) 
#line 320 
                                      goto ldv_47573; else 
#line 323 
                                                           goto ldv_47575;
    ldv_47575: 
#line 324 
    ;
  }
  
#line 332 
  t3_write_reg(adap,oft + 2068U,hash_lo);
  
#line 333 
  t3_write_reg(adap,oft + 2072U,hash_hi);
  
#line 334 
  __retres = 0;
  
#line 334 
  return __retres;
}


#line 337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
static int rx_fifo_hwm(int mtu)
{
  int hwm;
  int tmp_0;
  int tmp_2;
  {
    int tmp;
    
#line 341 
    int _max1 = mtu * -3 + 32768;
    
#line 341 
    int _max2 = 12451;
    
#line 341 
    if (_max1 > _max2) 
#line 341 
                       tmp = _max1; else 
#line 341 
                                         tmp = _max2;
    
#line 341 
    tmp_0 = tmp;
  }
  
#line 341 
  hwm = tmp_0;
  {
    int tmp_1;
    
#line 342 
    int _min1 = hwm;
    
#line 342 
    int _min2 = 24576;
    
#line 342 
    if (_min1 < _min2) 
#line 342 
                       tmp_1 = _min1; else 
#line 342 
                                           tmp_1 = _min2;
    
#line 342 
    tmp_2 = tmp_1;
  }
  
#line 342 
  return tmp_2;
}


#line 345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_set_mtu(struct cmac *mac, unsigned int mtu)
{
  int __retres;
  int hwm;
  int lwm;
  int divisor;
  int ipg;
  unsigned int thres;
  unsigned int v;
  unsigned int reg;
  int tmp_3;
  int tmp_4;
  unsigned int tmp_6;
  
#line 350 
  struct adapter *adap = mac->adapter;
  
#line 356 
  mtu += 14U;
  
#line 357 
  if (mtu > 1536U) 
#line 358 
                   mtu += 4U; else ;
  
#line 360 
  if (mtu > 10236U) {
    
#line 361 
    __retres = -22;
    
#line 361 
    goto return_label;
  }
  else ;
  
#line 362 
  t3_write_reg(adap,mac->offset + 2216U,mtu);
  
#line 364 
  if (adap->params.rev > 2U) {
    u32 tmp_1;
    
#line 364 
    tmp_1 = t3_read_reg(adap,mac->offset + 2060U);
    
#line 364 
    if ((tmp_1 & 1U) != 0U) {
      int tmp;
      int tmp_0;
      
#line 366 
      t3_mac_disable_exact_filters(mac);
      
#line 367 
      v = t3_read_reg(adap,mac->offset + 2064U);
      
#line 368 
      t3_set_reg_field(adap,mac->offset + 2064U,5U,2U);
      
#line 372 
      if (adap->params.rev == 3U) 
#line 372 
                                  tmp = 2468; else 
#line 372 
                                                   tmp = 2180;
      
#line 371 
      reg = (unsigned int)tmp;
      
#line 375 
      tmp_0 = t3_wait_op_done(adap,(int)(mac->offset + reg),2147483648U,1,20,5);
      
#line 375 
      if (tmp_0 != 0) {
        
#line 377 
        t3_write_reg(adap,mac->offset + 2064U,v);
        
#line 378 
        t3_mac_enable_exact_filters(mac);
        
#line 379 
        __retres = -5;
        
#line 379 
        goto return_label;
      }
      else ;
      
#line 381 
      t3_set_reg_field(adap,mac->offset + 2216U,16383U,mtu);
      
#line 384 
      t3_write_reg(adap,mac->offset + 2064U,v);
      
#line 385 
      t3_mac_enable_exact_filters(mac);
    }
    else 
#line 387 
         t3_set_reg_field(adap,mac->offset + 2216U,16383U,mtu);
  }
  else 
#line 387 
       t3_set_reg_field(adap,mac->offset + 2216U,16383U,mtu);
  
#line 395 
  hwm = rx_fifo_hwm((int)mtu);
  {
    int tmp_2;
    
#line 396 
    int _min1 = (int)mtu * 3;
    
#line 396 
    int _min2 = 8192;
    
#line 396 
    if (_min1 < _min2) 
#line 396 
                       tmp_2 = _min1; else 
#line 396 
                                           tmp_2 = _min2;
    
#line 396 
    tmp_3 = tmp_2;
  }
  
#line 396 
  lwm = tmp_3;
  
#line 397 
  v = t3_read_reg(adap,mac->offset + 2180U);
  
#line 398 
  v &= 4294836255U;
  
#line 399 
  v = (unsigned int)(lwm / 8 << 5) | v;
  
#line 400 
  if (((v >> 17) & 4095U) != 0U) 
#line 401 
                                 v = (v & 3758227455U) | (unsigned int)(hwm / 8 << 17); else ;
  
#line 404 
  t3_write_reg(adap,mac->offset + 2180U,v);
  
#line 407 
  thres = (adap->params.vpd.cclk * 1000U) / 15625U;
  
#line 408 
  thres = (thres * mtu) / 1000U;
  
#line 409 
  tmp_4 = is_10G((struct adapter const *)adap);
  
#line 409 
  if (tmp_4 != 0) 
#line 410 
                  thres /= 10U; else ;
  
#line 411 
  if (mtu > thres) 
#line 411 
                   thres = ((mtu - thres) + 7U) / 8U; else 
#line 411 
                                                           thres = 0U;
  {
    unsigned int tmp_5;
    
#line 412 
    unsigned int _max1 = thres;
    
#line 412 
    unsigned int _max2 = 8U;
    
#line 412 
    if (_max1 > _max2) 
#line 412 
                       tmp_5 = _max1; else 
#line 412 
                                           tmp_5 = _max2;
    
#line 412 
    tmp_6 = tmp_5;
  }
  
#line 412 
  thres = tmp_6;
  
#line 413 
  ipg = adap->params.rev != 4U;
  
#line 414 
  t3_set_reg_field(adap,mac->offset + 2184U,2097136U,(thres << 4) | (unsigned int)(ipg << 13));
  
#line 418 
  if (adap->params.rev != 0U) {
    
#line 419 
    if (adap->params.rev == 4U) 
#line 419 
                                divisor = 64; else 
#line 419 
                                                   divisor = 8;
    
#line 420 
    t3_write_reg(adap,mac->offset + 2192U,(unsigned int)(((hwm - lwm) * 4) / divisor));
  }
  else ;
  
#line 423 
  t3_write_reg(adap,mac->offset + 2056U,2048U);
  
#line 425 
  __retres = 0;
  return_label: 
#line 425 
                return __retres;
}


#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_set_speed_duplex_fc(struct cmac *mac, int speed, int duplex, int fc)
{
  int __retres;
  u32 val;
  
#line 431 
  struct adapter *adap = mac->adapter;
  
#line 432 
  unsigned int oft = mac->offset;
  
#line 434 
  if (duplex >= 0 && duplex != 1) {
    
#line 435 
    __retres = -22;
    
#line 435 
    goto return_label;
  }
  else ;
  
#line 436 
  if (speed >= 0) {
    
#line 437 
    if (speed == 10) 
#line 438 
                     val = 0U;
    else 
      
#line 439 
      if (speed == 100) 
#line 440 
                        val = 2U;
      else 
        
#line 441 
        if (speed == 1000) 
#line 442 
                           val = 4U;
        else 
          
#line 443 
          if (speed == 10000) 
#line 444 
                              val = 6U;
          else {
            
#line 446 
            __retres = -22;
            
#line 446 
            goto return_label;
          }
    
#line 448 
    t3_set_reg_field(adap,oft + 2232U,6U,val);
  }
  else ;
  
#line 452 
  val = t3_read_reg(adap,oft + 2180U);
  
#line 453 
  val &= 3758227455U;
  
#line 454 
  if ((fc & 2) != 0) {
    u32 tmp;
    int tmp_0;
    
#line 455 
    tmp = t3_read_reg(adap,oft + 2216U);
    
#line 455 
    u32 rx_max_pkt_size = tmp & 16383U;
    
#line 458 
    tmp_0 = rx_fifo_hwm((int)rx_max_pkt_size);
    
#line 458 
    val = (unsigned int)(tmp_0 / 8 << 17) | val;
  }
  else ;
  
#line 460 
  t3_write_reg(adap,oft + 2180U,val);
  
#line 462 
  t3_set_reg_field(adap,oft + 2052U,1U,(unsigned int)fc & 1U);
  
#line 464 
  __retres = 0;
  return_label: 
#line 464 
                return __retres;
}


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_enable(struct cmac *mac, int which)
{
  int __retres;
  
#line 469 
  int idx = macidx((struct cmac const *)mac);
  
#line 470 
  struct adapter *adap = mac->adapter;
  
#line 471 
  unsigned int oft = mac->offset;
  
#line 472 
  struct mac_stats *s = & mac->stats;
  
#line 474 
  if ((which & 2) != 0) {
    unsigned int tmp_0;
    int tmp_1;
    u32 tmp_2;
    u32 tmp_3;
    u32 tmp_4;
    
#line 475 
    t3_write_reg(adap,1088U,(unsigned int)(idx + 299));
    
#line 476 
    if (adap->params.rev == 4U) 
#line 476 
                                tmp_0 = 3305111297U; else 
#line 476 
                                                          tmp_0 = 3236815873U;
    
#line 476 
    ;
    
#line 476 
    t3_write_reg(adap,1092U,tmp_0);
    
#line 479 
    t3_write_reg(adap,1088U,303U);
    
#line 481 
    if (adap->params.rev != 4U) 
#line 481 
                                tmp_1 = 1 << idx; else 
#line 481 
                                                       tmp_1 = 0;
    
#line 480 
    ;
    
#line 480 
    ;
    
#line 480 
    t3_set_reg_field(adap,1092U,(unsigned int)(1 << idx),(unsigned int)tmp_1);
    
#line 483 
    t3_write_reg(adap,oft + 2048U,1U);
    
#line 485 
    t3_write_reg(adap,1088U,(unsigned int)(idx + 301));
    
#line 486 
    mac->tx_mcnt = s->tx_frames;
    
#line 487 
    tmp_2 = t3_read_reg(adap,1092U);
    
#line 487 
    mac->tx_tcnt = tmp_2 & 65535U;
    
#line 489 
    tmp_3 = t3_read_reg(adap,oft + 2472U);
    
#line 489 
    mac->tx_xcnt = (tmp_3 >> 16) & 65535U;
    
#line 492 
    mac->rx_mcnt = s->rx_frames;
    
#line 493 
    mac->rx_pause = s->rx_pause;
    
#line 494 
    tmp_4 = t3_read_reg(adap,oft + 2476U);
    
#line 494 
    mac->rx_xcnt = (tmp_4 >> 16) & 65535U;
    
#line 497 
    mac->rx_ocnt = (unsigned int)s->rx_fifo_ovfl;
    
#line 498 
    mac->txen = 1U;
    
#line 499 
    mac->toggle_cnt = 0U;
  }
  else ;
  
#line 501 
  if ((which & 1) != 0) 
#line 502 
                        t3_write_reg(adap,oft + 2060U,1U); else ;
  
#line 503 
  __retres = 0;
  
#line 503 
  return __retres;
}


#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3_mac_disable(struct cmac *mac, int which)
{
  int __retres;
  
#line 508 
  struct adapter *adap = mac->adapter;
  
#line 510 
  if ((which & 2) != 0) {
    
#line 511 
    t3_write_reg(adap,mac->offset + 2048U,0U);
    
#line 512 
    mac->txen = 0U;
  }
  else ;
  
#line 514 
  if ((which & 1) != 0) {
    int tmp_0;
    
#line 515 
    int val = 1;
    
#line 517 
    t3_set_reg_field(mac->adapter,mac->offset + 2220U,2U,0U);
    
#line 519 
    msleep(100U);
    
#line 520 
    t3_write_reg(adap,mac->offset + 2060U,0U);
    
#line 521 
    tmp_0 = is_10G((struct adapter const *)adap);
    
#line 521 
    if (tmp_0 != 0) 
#line 522 
                    val = (int)((unsigned int)val | 2U);
    else {
      int tmp;
      
#line 523 
      tmp = uses_xaui((struct adapter const *)adap);
      
#line 523 
      if (tmp != 0) 
#line 524 
                    val = (int)((unsigned int)val | 10U); else 
#line 526 
                                                               val = (int)((unsigned int)val | 12U);
    }
    
#line 527 
    t3_write_reg(mac->adapter,mac->offset + 2220U,(unsigned int)val);
  }
  else ;
  
#line 529 
  __retres = 0;
  
#line 529 
  return __retres;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
int t3b2_mac_watchdog_task(struct cmac *mac)
{
  unsigned int tx_tcnt;
  unsigned int tx_xcnt;
  int status;
  
#line 534 
  struct adapter *adap = mac->adapter;
  
#line 535 
  struct mac_stats *s = & mac->stats;
  
#line 537 
  u64 tx_mcnt = s->tx_frames;
  
#line 540 
  status = 0;
  
#line 541 
  tx_xcnt = 1U;
  
#line 542 
  tx_tcnt = mac->tx_tcnt;
  
#line 543 
  if (mac->tx_mcnt == tx_mcnt && mac->rx_pause == s->rx_pause) {
    u32 tmp;
    
#line 544 
    tmp = t3_read_reg(adap,mac->offset + 2472U);
    
#line 544 
    tx_xcnt = (tmp >> 16) & 65535U;
    
#line 547 
    if (tx_xcnt == 0U) {
      int tmp_0;
      u32 tmp_1;
      
#line 549 
      tmp_0 = macidx((struct cmac const *)mac);
      
#line 548 
      ;
      
#line 548 
      t3_write_reg(adap,1088U,(unsigned int)(tmp_0 + 301));
      
#line 550 
      tmp_1 = t3_read_reg(adap,1092U);
      
#line 550 
      tx_tcnt = tmp_1 & 65535U;
    }
    else 
#line 553 
         goto out;
  }
  else {
    
#line 556 
    mac->toggle_cnt = 0U;
    
#line 557 
    goto out;
  }
  
#line 560 
  if (mac->tx_tcnt != tx_tcnt && mac->tx_xcnt == 0U) 
    
#line 561 
    if (mac->toggle_cnt > 4U) {
      
#line 562 
      status = 2;
      
#line 563 
      goto out;
    }
    else {
      
#line 565 
      status = 1;
      
#line 566 
      goto out;
    }
  else {
    
#line 569 
    mac->toggle_cnt = 0U;
    
#line 570 
    goto out;
  }
  out: 
#line 573 
  ;
  
#line 574 
  mac->tx_tcnt = tx_tcnt;
  
#line 575 
  mac->tx_xcnt = tx_xcnt;
  
#line 576 
  mac->tx_mcnt = s->tx_frames;
  
#line 577 
  mac->rx_pause = s->rx_pause;
  
#line 578 
  if (status == 1) {
    
#line 579 
    t3_write_reg(adap,mac->offset + 2048U,0U);
    
#line 580 
    t3_read_reg(adap,mac->offset + 2048U);
    
#line 581 
    t3_write_reg(adap,mac->offset + 2048U,mac->txen);
    
#line 582 
    t3_read_reg(adap,mac->offset + 2048U);
    
#line 583 
    mac->toggle_cnt += 1U;
  }
  else 
    
#line 584 
    if (status == 2) {
      
#line 585 
      t3b2_mac_reset(mac);
      
#line 586 
      mac->toggle_cnt = 0U;
    }
    else ;
  
#line 588 
  return status;
}


#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/xgmac.c"
struct mac_stats const *t3_mac_update_stats(struct cmac *mac)
{
  struct mac_stats const *__retres;
  u32 v;
  u32 lo;
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  u32 tmp_7;
  u32 tmp_8;
  u32 tmp_9;
  u32 tmp_10;
  u32 tmp_11;
  u32 tmp_12;
  u32 tmp_13;
  u32 tmp_14;
  u32 tmp_15;
  u32 tmp_16;
  u32 tmp_17;
  u32 tmp_18;
  u32 tmp_19;
  u32 tmp_20;
  u32 tmp_21;
  u32 tmp_22;
  u32 tmp_23;
  u32 tmp_24;
  u32 tmp_25;
  u32 tmp_26;
  u32 tmp_27;
  u32 tmp_28;
  u32 tmp_29;
  u32 tmp_30;
  u32 tmp_31;
  u32 tmp_32;
  int tmp_33;
  
#line 609 
  tmp = t3_read_reg(mac->adapter,mac->offset + 2364U);
  
#line 609 
  tmp_0 = t3_read_reg(mac->adapter,mac->offset + 2368U);
  
#line 609 
  mac->stats.rx_octets += (unsigned long long)tmp + ((unsigned long long)tmp_0 << 32);
  
#line 610 
  tmp_1 = t3_read_reg(mac->adapter,mac->offset + 2372U);
  
#line 610 
  tmp_2 = t3_read_reg(mac->adapter,mac->offset + 2376U);
  
#line 610 
  mac->stats.rx_frames += (unsigned long long)tmp_1 + ((unsigned long long)tmp_2 << 32);
  
#line 611 
  tmp_3 = t3_read_reg(mac->adapter,mac->offset + 2384U);
  
#line 611 
  mac->stats.rx_mcast_frames += (unsigned long long)tmp_3;
  
#line 612 
  tmp_4 = t3_read_reg(mac->adapter,mac->offset + 2380U);
  
#line 612 
  mac->stats.rx_bcast_frames += (unsigned long long)tmp_4;
  
#line 613 
  tmp_5 = t3_read_reg(mac->adapter,mac->offset + 2432U);
  
#line 613 
  mac->stats.rx_fcs_errs += (unsigned long long)tmp_5;
  
#line 614 
  tmp_6 = t3_read_reg(mac->adapter,mac->offset + 2388U);
  
#line 614 
  mac->stats.rx_pause += (unsigned long long)tmp_6;
  
#line 615 
  tmp_7 = t3_read_reg(mac->adapter,mac->offset + 2428U);
  
#line 615 
  mac->stats.rx_jabber += (unsigned long long)tmp_7;
  
#line 616 
  tmp_8 = t3_read_reg(mac->adapter,mac->offset + 2420U);
  
#line 616 
  mac->stats.rx_short += (unsigned long long)tmp_8;
  
#line 617 
  tmp_9 = t3_read_reg(mac->adapter,mac->offset + 2440U);
  
#line 617 
  mac->stats.rx_symbol_errs += (unsigned long long)tmp_9;
  
#line 619 
  tmp_10 = t3_read_reg(mac->adapter,mac->offset + 2424U);
  
#line 619 
  mac->stats.rx_too_long += (unsigned long long)tmp_10;
  
#line 621 
  v = t3_read_reg(mac->adapter,mac->offset + 2468U);
  
#line 622 
  if ((mac->adapter)->params.rev == 3U) 
#line 623 
                                        v &= 2147483647U; else ;
  
#line 624 
  mac->stats.rx_too_long += (unsigned long long)v;
  
#line 626 
  tmp_11 = t3_read_reg(mac->adapter,mac->offset + 2392U);
  
#line 626 
  mac->stats.rx_frames_64 += (unsigned long long)tmp_11;
  
#line 627 
  tmp_12 = t3_read_reg(mac->adapter,mac->offset + 2396U);
  
#line 627 
  mac->stats.rx_frames_65_127 += (unsigned long long)tmp_12;
  
#line 628 
  tmp_13 = t3_read_reg(mac->adapter,mac->offset + 2400U);
  
#line 628 
  mac->stats.rx_frames_128_255 += (unsigned long long)tmp_13;
  
#line 629 
  tmp_14 = t3_read_reg(mac->adapter,mac->offset + 2404U);
  
#line 629 
  mac->stats.rx_frames_256_511 += (unsigned long long)tmp_14;
  
#line 630 
  tmp_15 = t3_read_reg(mac->adapter,mac->offset + 2408U);
  
#line 630 
  mac->stats.rx_frames_512_1023 += (unsigned long long)tmp_15;
  
#line 631 
  tmp_16 = t3_read_reg(mac->adapter,mac->offset + 2412U);
  
#line 631 
  mac->stats.rx_frames_1024_1518 += (unsigned long long)tmp_16;
  
#line 632 
  tmp_17 = t3_read_reg(mac->adapter,mac->offset + 2416U);
  
#line 632 
  mac->stats.rx_frames_1519_max += (unsigned long long)tmp_17;
  
#line 634 
  tmp_18 = t3_read_reg(mac->adapter,mac->offset + 2304U);
  
#line 634 
  tmp_19 = t3_read_reg(mac->adapter,mac->offset + 2308U);
  
#line 634 
  mac->stats.tx_octets += (unsigned long long)tmp_18 + ((unsigned long long)tmp_19 << 32);
  
#line 635 
  tmp_20 = t3_read_reg(mac->adapter,mac->offset + 2312U);
  
#line 635 
  tmp_21 = t3_read_reg(mac->adapter,mac->offset + 2316U);
  
#line 635 
  mac->stats.tx_frames += (unsigned long long)tmp_20 + ((unsigned long long)tmp_21 << 32);
  
#line 636 
  tmp_22 = t3_read_reg(mac->adapter,mac->offset + 2324U);
  
#line 636 
  mac->stats.tx_mcast_frames += (unsigned long long)tmp_22;
  
#line 637 
  tmp_23 = t3_read_reg(mac->adapter,mac->offset + 2320U);
  
#line 637 
  mac->stats.tx_bcast_frames += (unsigned long long)tmp_23;
  
#line 638 
  tmp_24 = t3_read_reg(mac->adapter,mac->offset + 2328U);
  
#line 638 
  mac->stats.tx_pause += (unsigned long long)tmp_24;
  
#line 640 
  tmp_25 = t3_read_reg(mac->adapter,mac->offset + 2360U);
  
#line 640 
  mac->stats.tx_underrun += (unsigned long long)tmp_25;
  
#line 642 
  tmp_26 = t3_read_reg(mac->adapter,mac->offset + 2332U);
  
#line 642 
  mac->stats.tx_frames_64 += (unsigned long long)tmp_26;
  
#line 643 
  tmp_27 = t3_read_reg(mac->adapter,mac->offset + 2336U);
  
#line 643 
  mac->stats.tx_frames_65_127 += (unsigned long long)tmp_27;
  
#line 644 
  tmp_28 = t3_read_reg(mac->adapter,mac->offset + 2340U);
  
#line 644 
  mac->stats.tx_frames_128_255 += (unsigned long long)tmp_28;
  
#line 645 
  tmp_29 = t3_read_reg(mac->adapter,mac->offset + 2344U);
  
#line 645 
  mac->stats.tx_frames_256_511 += (unsigned long long)tmp_29;
  
#line 646 
  tmp_30 = t3_read_reg(mac->adapter,mac->offset + 2348U);
  
#line 646 
  mac->stats.tx_frames_512_1023 += (unsigned long long)tmp_30;
  
#line 647 
  tmp_31 = t3_read_reg(mac->adapter,mac->offset + 2352U);
  
#line 647 
  mac->stats.tx_frames_1024_1518 += (unsigned long long)tmp_31;
  
#line 648 
  tmp_32 = t3_read_reg(mac->adapter,mac->offset + 2356U);
  
#line 648 
  mac->stats.tx_frames_1519_max += (unsigned long long)tmp_32;
  
#line 651 
  if (mac->offset != 0U) 
#line 651 
                         tmp_33 = 51; else 
#line 651 
                                           tmp_33 = 50;
  
#line 651 
  ;
  
#line 651 
  t3_write_reg(mac->adapter,1104U,(unsigned int)tmp_33);
  
#line 652 
  v = t3_read_reg(mac->adapter,1108U);
  
#line 653 
  lo = (unsigned int)mac->stats.rx_cong_drops;
  
#line 654 
  mac->stats.rx_cong_drops += (unsigned long long)(v - lo);
  
#line 656 
  __retres = (struct mac_stats const *)(& mac->stats);
  
#line 656 
  return __retres;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(long nr, unsigned long volatile *addr)
{
  
#line 96 
  ldv_inline_asm();
  
#line 97 
  return;
}


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static bool is_power_of_2(unsigned long n)
{
  bool __retres;
  
#line 54 
  __retres = (_Bool)((n != 0UL && ((n + 18446744073709551615UL) & n) == 0UL) != 0);
  
#line 54 
  return __retres;
}


#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
void __dynamic_dev_dbg(struct _ddebug *, struct device const *, char const * , ...);


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 393 
unsigned long simple_strtoul(char const *, char **, unsigned int);


#line 402 
int sprintf(char *, char const * , ...);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void)
{
  struct task_struct *tmp;
  {
    struct task_struct *pfo_ret__;
    
#line 14 
    switch (8UL) {
      case (unsigned long)1: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)2: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)4: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)8: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      default: 
#line 14 
      ;
      
#line 14 
      __bad_percpu_size();
    }
    ldv_3477: 
#line 14 
    ;
    
#line 14 
    tmp = pfo_ret__;
  }
  
#line 14 
  return tmp;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
void *memdup_user(void const *, size_t);


#line 26 
size_t strlcpy(char *, char const *, size_t);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR_0(void const *ptr);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __xchg_wrong_size(void);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_2(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_90(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_92(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_94(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_96(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_104_0(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_107(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_109(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq_1(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_79_0(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_irq_84(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_irq_88(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_irq_98(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_irq_100(spinlock_t *lock);


#line 386 
static void ldv_spin_lock_irq_102(spinlock_t *lock);


#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_2(spinlock_t *lock)
{
  
#line 389 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 390 
  return;
}


#line 431 
static void ldv_spin_unlock_91(spinlock_t *lock);


#line 435 
static void ldv_spin_unlock_93(spinlock_t *lock);


#line 439 
static void ldv_spin_unlock_95(spinlock_t *lock);


#line 443 
static void ldv_spin_unlock_97(spinlock_t *lock);


#line 447 
static void ldv_spin_unlock_106(spinlock_t *lock);


#line 451 
static void ldv_spin_unlock_108(spinlock_t *lock);


#line 455 
static void ldv_spin_unlock_111_0(spinlock_t *lock);


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq_1(spinlock_t *lock)
{
  
#line 483 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 484 
  return;
}


#line 497 
static void ldv_spin_unlock_irq_80_0(spinlock_t *lock);


#line 501 
static void ldv_spin_unlock_irq_85(spinlock_t *lock);


#line 505 
static void ldv_spin_unlock_irq_89(spinlock_t *lock);


#line 509 
static void ldv_spin_unlock_irq_99(spinlock_t *lock);


#line 513 
static void ldv_spin_unlock_irq_101(spinlock_t *lock);


#line 517 
static void ldv_spin_unlock_irq_103(spinlock_t *lock);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_ptr_err(void const *ptr);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
unsigned int jiffies_to_usecs(unsigned long const);


#line 365 
unsigned long __usecs_to_jiffies(unsigned int const);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 369 
  __retres = (unsigned long)(((long)u + 3999L) / 4000L);
  
#line 369 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long usecs_to_jiffies(unsigned int const u)
{
  unsigned long __retres;
  
#line 410 
  if (0 != 0) {
    unsigned int tmp;
    unsigned long tmp_0;
    
#line 411 
    tmp = jiffies_to_usecs(4611686018427387902UL);
    
#line 411 
    ;
    
#line 411 
    if (tmp < u) {
      
#line 412 
      __retres = 4611686018427387902UL;
      
#line 412 
      goto return_label;
    }
    else ;
    
#line 413 
    tmp_0 = _usecs_to_jiffies(u);
    
#line 413 
    __retres = tmp_0;
    
#line 413 
    goto return_label;
  }
  else {
    unsigned long tmp_1;
    
#line 415 
    tmp_1 = __usecs_to_jiffies(u);
    
#line 415 
    __retres = tmp_1;
    
#line 415 
    goto return_label;
  }
  return_label: 
#line 410 
                return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 361 
struct workqueue_struct *__alloc_workqueue_key(char const *, unsigned int, int, struct lock_class_key *, char const * , ...);


#line 421 
void destroy_workqueue(struct workqueue_struct *);


#line 436 
void flush_workqueue(struct workqueue_struct *);


#line 446 
static bool ldv_flush_work_87(struct work_struct *ldv_func_arg1);


#line 452 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 490 
static bool ldv_queue_work_105(struct workqueue_struct *wq, struct work_struct *work);


#line 494 
static bool ldv_queue_work_110(struct workqueue_struct *wq, struct work_struct *work);


#line 505 
static bool ldv_queue_delayed_work_86(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void *ioremap_nocache(resource_size_t, unsigned long);


#line 195 
void iounmap(void volatile *);


#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
int sysfs_create_group(struct kobject *, struct attribute_group const *);


#line 255 
void sysfs_remove_group(struct kobject *, struct attribute_group const *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
bool capable(int);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc(size_t size, gfp_t flags);


#line 581 
static void *kzalloc_0(size_t size, gfp_t flags);


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_117(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_118(struct pci_driver *ldv_func_arg1);


#line 1212 
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 652 
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 664 
void copy_to_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_74(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_81(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_83(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 161 
static void ldv_free_irq_75(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 165 
static void ldv_free_irq_76(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_77(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 173 
static void ldv_free_irq_78(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 177 
static void ldv_free_irq_82(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_114(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_116(struct net_device *ldv_func_arg1);


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_44988;
  ldv_44987: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_44988: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_44987; else 
#line 2540 
                                                   goto ldv_44989;
  ldv_44989: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2892 
int netif_get_num_default_rss_queues(void);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3355 
static int ldv_register_netdev_113(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_115(struct net_device *ldv_func_arg1);


#line 3683 
void netdev_update_features(struct net_device *);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_112(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 29 
int rtnl_trylock(void);


#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/mdio.h"
__inline static __u16 mdio_phy_id_c45(int prtad, int devad)
{
  __u16 __retres;
  
#line 294 
  __retres = (unsigned short)(((prtad << 5) | -32768) | devad);
  
#line 294 
  return __retres;
}


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mdio.h"
__inline static bool mdio_phy_id_is_c45(int phy_id)
{
  bool __retres;
  
#line 17 
  __retres = (_Bool)(((phy_id & 32768) != 0 && (phy_id & -33792) == 0) != 0);
  
#line 17 
  return __retres;
}


#line 90 
int mdio_mii_ioctl(struct mdio_if_info const *, struct mii_ioctl_data *, int);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static unsigned int t3_mc7_size(struct mc7 const *p)
{
  unsigned int __retres;
  
#line 467 
  __retres = p->size;
  
#line 467 
  return __retres;
}


#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
__inline static struct port_info *adap2pinfo(struct adapter *adap, int idx)
{
  struct port_info *tmp;
  
#line 287 
  tmp = (struct port_info *)netdev_priv((struct net_device const *)adap->port[idx]);
  
#line 287 
  return tmp;
}


#line 309 
void t3_os_ext_intr_handler(struct adapter *adapter);


#line 310 
void t3_os_link_changed(struct adapter *adapter, int port_id, int link_stat, int speed, int duplex, int pause);


#line 312 
void t3_os_phymod_changed(struct adapter *adap, int port_id);


#line 313 
void t3_os_link_fault(struct adapter *adap, int port_id, int state);


#line 314 
void t3_os_link_fault_handler(struct adapter *adapter, int port_id);


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
struct workqueue_struct *cxgb3_wq;

#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
int t3_get_edc_fw(struct cphy *phy, int edc_idx, int size);


#line 627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static int is_offload(struct adapter const *adap)
{
  int __retres;
  
#line 629 
  __retres = (int)adap->params.offload;
  
#line 629 
  return __retres;
}


#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
__inline static unsigned int is_pcie(struct adapter const *adap)
{
  unsigned int __retres;
  
#line 639 
  __retres = (unsigned int)((unsigned int)adap->params.pci.variant == 4U);
  
#line 639 
  return __retres;
}


#line 665 
void t3_intr_enable(struct adapter *adapter);


#line 666 
void t3_intr_disable(struct adapter *adapter);


#line 667 
void t3_intr_clear(struct adapter *adapter);


#line 668 
void t3_xgm_intr_enable(struct adapter *adapter, int idx);


#line 669 
void t3_xgm_intr_disable(struct adapter *adapter, int idx);


#line 670 
void t3_port_intr_enable(struct adapter *adapter, int idx);


#line 671 
void t3_port_intr_disable(struct adapter *adapter, int idx);


#line 673 
int t3_phy_intr_handler(struct adapter *adapter);


#line 675 
void t3_link_changed(struct adapter *adapter, int port_id);


#line 676 
void t3_link_fault(struct adapter *adapter, int port_id);


#line 677 
int t3_link_start(struct cphy *phy, struct cmac *mac, struct link_config *lc);


#line 678 
struct adapter_info const *t3_get_adapter_info(unsigned int id);


#line 679 
int t3_seeprom_read(struct adapter *adapter, u32 addr, __le32 *data);


#line 680 
int t3_seeprom_write(struct adapter *adapter, u32 addr, __le32 data);


#line 681 
int t3_seeprom_wp(struct adapter *adapter, int enable);


#line 683 
int t3_check_tpsram_version(struct adapter *adapter);


#line 684 
int t3_check_tpsram(struct adapter *adapter, u8 const *tp_sram, unsigned int size);


#line 686 
int t3_set_proto_sram(struct adapter *adap, u8 const *data);


#line 687 
int t3_load_fw(struct adapter *adapter, u8 const *fw_data, unsigned int size);


#line 689 
int t3_check_fw_version(struct adapter *adapter);


#line 690 
int t3_init_hw(struct adapter *adapter, u32 fw_params);


#line 691 
int t3_reset_adapter(struct adapter *adapter);


#line 692 
int t3_prep_adapter(struct adapter *adapter, struct adapter_info const *ai, int reset);


#line 694 
int t3_replay_prep_adapter(struct adapter *adapter);


#line 695 
void t3_led_ready(struct adapter *adapter);


#line 697 
void t3_set_vlan_accel(struct adapter *adapter, unsigned int ports, int on);


#line 698 
void t3_config_rss(struct adapter *adapter, unsigned int rss_config, u8 const *cpus, u16 const *rspq);


#line 700 
int t3_cim_ctl_blk_read(struct adapter *adap, unsigned int addr, unsigned int n, unsigned int *valp);


#line 724 
void t3_tp_set_offload_mode(struct adapter *adap, int enable);


#line 726 
void t3_load_mtus(struct adapter *adap, unsigned short *mtus, unsigned short *alpha, unsigned short *beta, unsigned short mtu_cap);


#line 729 
void t3_config_trace_filter(struct adapter *adapter, struct trace_params const *tp, int filter_index, int invert, int enable);


#line 732 
int t3_config_sched(struct adapter *adap, unsigned int kbps, int sched);


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct pci_device_id const cxgb3_pci_tbl[14U] = {{.vendor = 5157U, .device = 32U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5157U, .device = 33U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 5157U, .device = 34U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 5157U, .device = 35U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 5157U, .device = 36U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 5157U, .device = 37U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 5157U, .device = 38U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 5157U, .device = 48U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 5157U, .device = 49U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 5157U, .device = 50U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 5157U, .device = 53U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 6UL}, {.vendor = 5157U, .device = 54U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 5157U, .device = 55U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 7UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
struct pci_device_id const __mod_pci__cxgb3_pci_tbl_device_table[14U];

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int dflt_msg_enable = 255;

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int msi = 2;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int ofld_disable = 0;

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void link_report(struct net_device *dev)
{
  int tmp_2;
  bool tmp_1;
  
#line 158 
  tmp_1 = netif_carrier_ok((struct net_device const *)dev);
  
#line 158 
  if (tmp_1) 
#line 158 
             tmp_2 = 0; else 
#line 158 
                             tmp_2 = 1;
  
#line 158 
  if (tmp_2) 
#line 159 
             netdev_info((struct net_device const *)dev,"link down\n");
  else {
    char *tmp_0;
    
#line 161 
    char const *s = "10Mbps";
    
#line 162 
    struct port_info const *p = netdev_priv((struct net_device const *)dev);
    
#line 164 
    switch ((int)p->link_config.speed) {
      case 10000: 
#line 165 
      ;
      
#line 166 
      s = "10Gbps";
      
#line 167 
      goto ldv_50156;
      case 1000: 
#line 168 
      ;
      
#line 169 
      s = "1000Mbps";
      
#line 170 
      goto ldv_50156;
      case 100: 
#line 171 
      ;
      
#line 172 
      s = "100Mbps";
      
#line 173 
      goto ldv_50156;
    }
    ldv_50156: 
#line 176 
    ;
    
#line 176 
    if ((unsigned int)p->link_config.duplex == 1U) 
#line 176 
                                                   tmp_0 = (char *)"full"; else 
                                                                    
#line 176 
                                                                    tmp_0 = (char *)"half";
    
#line 176 
    ;
    
#line 176 
    ;
    
#line 176 
    netdev_info((struct net_device const *)dev,"link up, %s, %s-duplex\n",s,tmp_0);
  }
  
#line 180 
  return;
}


#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void enable_tx_fifo_drain(struct adapter *adapter, struct port_info *pi)
{
  
#line 185 
  t3_set_reg_field(adapter,pi->mac.offset + 2184U,0U,2097152U);
  
#line 187 
  t3_write_reg(adapter,pi->mac.offset + 2060U,0U);
  
#line 188 
  t3_write_reg(adapter,pi->mac.offset + 2048U,1U);
  
#line 189 
  t3_write_reg(adapter,pi->mac.offset + 2060U,1U);
  
#line 190 
  return;
}


#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void disable_tx_fifo_drain(struct adapter *adapter, struct port_info *pi)
{
  
#line 195 
  t3_set_reg_field(adapter,pi->mac.offset + 2184U,2097152U,0U);
  
#line 196 
  return;
}


#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
void t3_os_link_fault(struct adapter *adap, int port_id, int state)
{
  bool tmp_0;
  
#line 201 
  struct net_device *dev = adap->port[port_id];
  
#line 202 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 204 
  tmp_0 = netif_carrier_ok((struct net_device const *)dev);
  
#line 204 
  ;
  
#line 204 
  if ((int)tmp_0 == state) 
#line 205 
                           goto return_label; else ;
  
#line 207 
  if (state != 0) {
    
#line 208 
    struct cmac *mac = & pi->mac;
    
#line 210 
    netif_carrier_on(dev);
    
#line 212 
    disable_tx_fifo_drain(adap,pi);
    
#line 215 
    t3_xgm_intr_disable(adap,(int)pi->port_id);
    
#line 216 
    t3_read_reg(adap,pi->mac.offset + 2156U);
    
#line 218 
    t3_write_reg(adap,pi->mac.offset + 2264U,1U);
    
#line 222 
    t3_set_reg_field(adap,pi->mac.offset + 2260U,1U,1U);
    
#line 226 
    t3_xgm_intr_enable(adap,(int)pi->port_id);
    
#line 228 
    t3_mac_enable(mac,2);
  }
  else {
    
#line 230 
    netif_carrier_off(dev);
    
#line 233 
    enable_tx_fifo_drain(adap,pi);
  }
  
#line 235 
  link_report(dev);
  return_label: 
#line 236 
                return;
}


#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
void t3_os_link_changed(struct adapter *adapter, int port_id, int link_stat, int speed, int duplex, int pause)
{
  int tmp_1;
  bool tmp_0;
  bool tmp_3;
  
#line 254 
  struct net_device *dev = adapter->port[port_id];
  
#line 255 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 256 
  struct cmac *mac = & pi->mac;
  
#line 259 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 259 
  if (tmp_0) 
#line 259 
             tmp_1 = 0; else 
#line 259 
                             tmp_1 = 1;
  
#line 259 
  if (tmp_1) 
#line 260 
             goto return_label; else ;
  
#line 262 
  tmp_3 = netif_carrier_ok((struct net_device const *)dev);
  
#line 262 
  ;
  
#line 262 
  if ((int)tmp_3 != link_stat) {
    
#line 263 
    if (link_stat != 0) {
      
#line 264 
      disable_tx_fifo_drain(adapter,pi);
      
#line 266 
      t3_mac_enable(mac,1);
      
#line 269 
      t3_xgm_intr_disable(adapter,(int)pi->port_id);
      
#line 270 
      t3_read_reg(adapter,pi->mac.offset + 2156U);
      
#line 272 
      t3_write_reg(adapter,pi->mac.offset + 2264U,1U);
      
#line 276 
      t3_set_reg_field(adapter,pi->mac.offset + 2260U,1U,1U);
      
#line 279 
      t3_xgm_intr_enable(adapter,(int)pi->port_id);
      
#line 281 
      netif_carrier_on(dev);
    }
    else {
      int tmp_2;
      
#line 283 
      netif_carrier_off(dev);
      
#line 285 
      t3_xgm_intr_disable(adapter,(int)pi->port_id);
      
#line 286 
      t3_read_reg(adapter,pi->mac.offset + 2156U);
      
#line 287 
      t3_set_reg_field(adapter,pi->mac.offset + 2260U,1U,0U);
      
#line 291 
      tmp_2 = is_10G((struct adapter const *)adapter);
      
#line 291 
      if (tmp_2 != 0) 
#line 292 
                      (*((pi->phy.ops)->power_down))(& pi->phy,1); else ;
      
#line 294 
      t3_read_reg(adapter,pi->mac.offset + 2156U);
      
#line 295 
      t3_mac_disable(mac,1);
      
#line 296 
      t3_link_start(& pi->phy,mac,& pi->link_config);
      
#line 299 
      enable_tx_fifo_drain(adapter,pi);
    }
    
#line 302 
    link_report(dev);
  }
  else ;
  return_label: 
#line 304 
                return;
}


#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
void t3_os_phymod_changed(struct adapter *adap, int port_id)
{
  
#line 317 
  char const *mod_str[7U] = {(char const *)0, "SR", "LR", "LRM", "TWINAX", "TWINAX", "unknown"};
  
#line 321 
  struct net_device const *dev = (struct net_device const *)adap->port[port_id];
  
#line 322 
  struct port_info const *pi = netdev_priv(dev);
  
#line 324 
  if ((unsigned int)pi->phy.modtype == 0U) 
#line 325 
                                           netdev_info(dev,"PHY module unplugged\n"); else 
                                                                    
#line 327 
                                                                    netdev_info(dev,"%s PHY module inserted\n",mod_str[(int)pi->phy.modtype]);
  
#line 329 
  return;
}


#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void cxgb_set_rxmode(struct net_device *dev)
{
  
#line 333 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 335 
  t3_mac_set_rx_mode(& pi->mac,dev);
  
#line 336 
  return;
}


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void link_start(struct net_device *dev)
{
  
#line 346 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 347 
  struct cmac *mac = & pi->mac;
  
#line 349 
  t3_mac_reset(mac);
  
#line 350 
  t3_mac_set_num_ucast(mac,2);
  
#line 351 
  t3_mac_set_mtu(mac,dev->mtu);
  
#line 352 
  t3_mac_set_address(mac,0U,dev->dev_addr);
  
#line 353 
  t3_mac_set_address(mac,1U,(u8 *)(& pi->iscsic.mac_addr));
  
#line 354 
  t3_mac_set_rx_mode(mac,dev);
  
#line 355 
  t3_link_start(& pi->phy,mac,& pi->link_config);
  
#line 356 
  t3_mac_enable(mac,3);
  
#line 357 
  return;
}


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
__inline static void cxgb_disable_msi(struct adapter *adapter)
{
  
#line 361 
  if ((adapter->flags & 4UL) != 0UL) {
    
#line 362 
    pci_disable_msix(adapter->pdev);
    
#line 363 
    adapter->flags &= 18446744073709551611UL;
  }
  else 
    
#line 364 
    if ((adapter->flags & 2UL) != 0UL) {
      
#line 365 
      pci_disable_msi(adapter->pdev);
      
#line 366 
      adapter->flags &= 18446744073709551613UL;
    }
    else ;
  
#line 368 
  return;
}


#line 373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static irqreturn_t t3_async_intr_handler(int irq, void *cookie)
{
  irqreturn_t __retres;
  
#line 375 
  t3_slow_intr_handler((struct adapter *)cookie);
  
#line 376 
  __retres = IRQ_HANDLED;
  
#line 376 
  return __retres;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void name_msix_vecs(struct adapter *adap)
{
  int i;
  int j;
  
#line 384 
  int msi_idx = 1;
  
#line 384 
  int n = 21;
  
#line 386 
  snprintf((char *)(& adap->msix_info[0].desc),(unsigned long)n,"%s",adap->name);
  
#line 387 
  adap->msix_info[0].desc[n] = (char)0;
  
#line 389 
  j = 0;
  
#line 389 
  goto ldv_50222;
  ldv_50221: 
#line 390 
  ;
  {
    
#line 390 
    struct net_device *d = adap->port[j];
    
#line 391 
    struct port_info const *pi = netdev_priv((struct net_device const *)d);
    
#line 393 
    i = 0;
    
#line 393 
    goto ldv_50219;
    ldv_50218: 
#line 394 
    ;
    
#line 394 
    snprintf((char *)(& adap->msix_info[msi_idx].desc),(unsigned long)n,"%s-%d",(char *)(& d->name),(int)pi->first_qset + i);
    
#line 396 
    adap->msix_info[msi_idx].desc[n] = (char)0;
    
#line 393 
    i += 1;
    
#line 393 
    msi_idx += 1;
    ldv_50219: 
#line 394 
    ;
    
#line 393 
    if ((int)pi->nqsets > i) 
#line 395 
                             goto ldv_50218; else 
#line 398 
                                                  goto ldv_50220;
    ldv_50220: 
#line 399 
    ;
  }
  
#line 389 
  j += 1;
  ldv_50222: 
#line 390 
  ;
  
#line 389 
  if (adap->params.nports > (unsigned int)j) 
#line 391 
                                             goto ldv_50221; else 
#line 394 
                                                                  goto ldv_50223;
  ldv_50223: 
#line 395 
  ;
  
#line 396 
  return;
}


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int request_msix_data_irqs(struct adapter *adap)
{
  int __retres;
  int i;
  int j;
  int err;
  
#line 403 
  int qidx = 0;
  
#line 405 
  i = 0;
  
#line 405 
  goto ldv_50239;
  ldv_50238: 
#line 406 
  ;
  {
    struct port_info *tmp;
    irq_handler_t tmp_0;
    
#line 406 
    tmp = adap2pinfo(adap,i);
    
#line 406 
    int nqsets = (int)tmp->nqsets;
    
#line 408 
    j = 0;
    
#line 408 
    goto ldv_50236;
    ldv_50235: 
#line 409 
    ;
    
#line 409 
    ;
    
#line 409 
    ;
    
#line 409 
    tmp_0 = t3_intr_handler(adap,(int)adap->sge.qs[qidx].rspq.polling);
    
#line 409 
    ;
    
#line 409 
    err = ldv_request_irq_74((unsigned int)adap->msix_info[qidx + 1].vec,tmp_0,0UL,(char const *)(& adap->msix_info[qidx + 1].desc),(void *)(& adap->sge.qs[qidx]));
    
#line 415 
    if (err != 0) {
      
#line 416 
      goto ldv_50233;
      ldv_50232: 
#line 417 
      ;
      
#line 417 
      ldv_free_irq_75((unsigned int)adap->msix_info[qidx + 1].vec,(void *)(& adap->sge.qs[qidx]));
      ldv_50233: 
#line 419 
      ;
      
#line 416 
      qidx -= 1;
      
#line 416 
      if (qidx >= 0) 
#line 418 
                     goto ldv_50232; else 
#line 421 
                                          goto ldv_50234;
      ldv_50234: 
#line 422 
      ;
      
#line 419 
      __retres = err;
      
#line 419 
      goto return_label;
    }
    else ;
    
#line 421 
    qidx += 1;
    
#line 408 
    j += 1;
    ldv_50236: 
#line 409 
    ;
    
#line 408 
    if (j < nqsets) 
#line 410 
                    goto ldv_50235; else 
#line 413 
                                         goto ldv_50237;
    ldv_50237: 
#line 414 
    ;
  }
  
#line 405 
  i += 1;
  ldv_50239: 
#line 406 
  ;
  
#line 405 
  if (adap->params.nports > (unsigned int)i) 
#line 407 
                                             goto ldv_50238; else 
#line 410 
                                                                  goto ldv_50240;
  ldv_50240: 
#line 411 
  ;
  
#line 424 
  __retres = 0;
  return_label: 
#line 424 
                return __retres;
}


#line 427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void free_irq_resources(struct adapter *adapter)
{
  
#line 429 
  if ((adapter->flags & 4UL) != 0UL) {
    int i;
    struct port_info *tmp;
    
#line 430 
    int n = 0;
    
#line 432 
    ldv_free_irq_76((unsigned int)adapter->msix_info[0].vec,(void *)adapter);
    
#line 433 
    i = 0;
    
#line 433 
    goto ldv_50247;
    ldv_50246: 
#line 434 
    ;
    
#line 434 
    tmp = adap2pinfo(adapter,i);
    
#line 434 
    n = (int)tmp->nqsets + n;
    
#line 433 
    i += 1;
    ldv_50247: 
#line 434 
    ;
    
#line 433 
    if (adapter->params.nports > (unsigned int)i) 
#line 435 
                                                  goto ldv_50246; else 
                                                                    
#line 438 
                                                                    goto ldv_50248;
    ldv_50248: 
#line 439 
    ;
    
#line 436 
    i = 0;
    
#line 436 
    goto ldv_50250;
    ldv_50249: 
#line 437 
    ;
    
#line 437 
    ldv_free_irq_77((unsigned int)adapter->msix_info[i + 1].vec,(void *)(& adapter->sge.qs[i]));
    
#line 436 
    i += 1;
    ldv_50250: 
#line 437 
    ;
    
#line 436 
    if (i < n) 
#line 438 
               goto ldv_50249; else 
#line 441 
                                    goto ldv_50251;
    ldv_50251: 
#line 442 
    ;
  }
  else 
#line 440 
       ldv_free_irq_78((adapter->pdev)->irq,(void *)adapter);
  
#line 441 
  return;
}


#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int await_mgmt_replies(struct adapter *adap, unsigned long init_cnt, unsigned long n)
{
  int __retres;
  
#line 446 
  int attempts = 10;
  
#line 448 
  goto ldv_50259;
  ldv_50258: 
#line 449 
  ;
  
#line 449 
  attempts -= 1;
  
#line 449 
  if (attempts == 0) {
    
#line 450 
    __retres = -110;
    
#line 450 
    goto return_label;
  }
  else ;
  
#line 451 
  msleep(10U);
  ldv_50259: 
#line 452 
  ;
  
#line 448 
  if (adap->sge.qs[0].rspq.offload_pkts < init_cnt + n) 
#line 450 
                                                        goto ldv_50258; else 
                                                                    
#line 453 
                                                                    goto ldv_50260;
  ldv_50260: 
#line 454 
  ;
  
#line 453 
  __retres = 0;
  return_label: 
#line 453 
                return __retres;
}


#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int init_tp_parity(struct adapter *adap)
{
  int __retres;
  int i;
  struct sk_buff *skb;
  struct cpl_set_tcb_field *greq;
  
#line 461 
  unsigned long cnt = adap->sge.qs[0].rspq.offload_pkts;
  
#line 463 
  t3_tp_set_offload_mode(adap,1);
  
#line 465 
  i = 0;
  
#line 465 
  goto ldv_50271;
  ldv_50270: 
#line 466 
  ;
  {
    struct cpl_smt_write_req *req;
    
#line 468 
    skb = alloc_skb(32U,208U);
    
#line 469 
    if (skb == (struct sk_buff *)0) 
#line 470 
                                    skb = adap->nofail_skb; else ;
    
#line 471 
    if (skb == (struct sk_buff *)0) 
#line 472 
                                    goto alloc_skb_fail; else ;
    
#line 474 
    req = (struct cpl_smt_write_req *)__skb_put(skb,32U);
    
#line 475 
    memset((void *)req,0,32UL);
    
#line 476 
    req->wr.wr_hi = 1U;
    
#line 477 
    if (0 != 0) 
#line 477 
                req->ot.opcode_tid = (((((unsigned int)i << 24) | (((unsigned int)i << 8) & 16711680U)) | (((unsigned int)i >> 8) & 65280U)) | ((unsigned int)i >> 24)) | 20U; else 
                                                                    
#line 477 
                                                                    req->ot.opcode_tid = __fswab32((unsigned int)(i | 335544320));
    
#line 478 
    req->mtu_idx = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U;
    
#line 479 
    req->iff = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))i;
    
#line 480 
    t3_mgmt_tx(adap,skb);
    
#line 481 
    if (adap->nofail_skb == skb) {
      
#line 482 
      await_mgmt_replies(adap,cnt,(unsigned long)(i + 1));
      
#line 483 
      adap->nofail_skb = alloc_skb(32U,208U);
      
#line 484 
      if (adap->nofail_skb == (struct sk_buff *)0) 
#line 485 
                                                   goto alloc_skb_fail; else ;
    }
    else ;
  }
  
#line 465 
  i += 1;
  ldv_50271: 
#line 466 
  ;
  
#line 465 
  if (i <= 15) 
#line 467 
               goto ldv_50270; else 
#line 470 
                                    goto ldv_50272;
  ldv_50272: 
#line 471 
  ;
  
#line 489 
  i = 0;
  
#line 489 
  goto ldv_50275;
  ldv_50274: 
#line 490 
  ;
  {
    struct cpl_l2t_write_req *req_0;
    
#line 492 
    skb = alloc_skb(24U,208U);
    
#line 493 
    if (skb == (struct sk_buff *)0) 
#line 494 
                                    skb = adap->nofail_skb; else ;
    
#line 495 
    if (skb == (struct sk_buff *)0) 
#line 496 
                                    goto alloc_skb_fail; else ;
    
#line 498 
    req_0 = (struct cpl_l2t_write_req *)__skb_put(skb,24U);
    
#line 499 
    memset((void *)req_0,0,24UL);
    
#line 500 
    req_0->wr.wr_hi = 1U;
    
#line 501 
    if (0 != 0) 
#line 501 
                req_0->ot.opcode_tid = (((((unsigned int)i << 24) | (((unsigned int)i << 8) & 16711680U)) | (((unsigned int)i >> 8) & 65280U)) | ((unsigned int)i >> 24)) | 18U; else 
                                                                    
#line 501 
                                                                    req_0->ot.opcode_tid = __fswab32((unsigned int)(i | 301989888));
    
#line 502 
    if (0 != 0) 
#line 502 
                req_0->params = ((((unsigned int)i << 24) | (((unsigned int)i << 8) & 16711680U)) | (((unsigned int)i >> 8) & 65280U)) | ((unsigned int)i >> 24); else 
                                                                    
#line 502 
                                                                    req_0->params = __fswab32((unsigned int)i);
    
#line 503 
    t3_mgmt_tx(adap,skb);
    
#line 504 
    if (adap->nofail_skb == skb) {
      
#line 505 
      await_mgmt_replies(adap,cnt,(unsigned long)(i + 17));
      
#line 506 
      adap->nofail_skb = alloc_skb(32U,208U);
      
#line 507 
      if (adap->nofail_skb == (struct sk_buff *)0) 
#line 508 
                                                   goto alloc_skb_fail; else ;
    }
    else ;
  }
  
#line 489 
  i += 1;
  ldv_50275: 
#line 490 
  ;
  
#line 489 
  if (i <= 2047) 
#line 491 
                 goto ldv_50274; else 
#line 494 
                                      goto ldv_50276;
  ldv_50276: 
#line 495 
  ;
  
#line 512 
  i = 0;
  
#line 512 
  goto ldv_50279;
  ldv_50278: 
#line 513 
  ;
  {
    struct cpl_rte_write_req *req_1;
    
#line 515 
    skb = alloc_skb(32U,208U);
    
#line 516 
    if (skb == (struct sk_buff *)0) 
#line 517 
                                    skb = adap->nofail_skb; else ;
    
#line 518 
    if (skb == (struct sk_buff *)0) 
#line 519 
                                    goto alloc_skb_fail; else ;
    
#line 521 
    req_1 = (struct cpl_rte_write_req *)__skb_put(skb,32U);
    
#line 522 
    memset((void *)req_1,0,32UL);
    
#line 523 
    req_1->wr.wr_hi = 1U;
    
#line 524 
    if (0 != 0) 
#line 524 
                req_1->ot.opcode_tid = (((((unsigned int)i << 24) | (((unsigned int)i << 8) & 16711680U)) | (((unsigned int)i >> 8) & 65280U)) | ((unsigned int)i >> 24)) | 16U; else 
                                                                    
#line 524 
                                                                    req_1->ot.opcode_tid = __fswab32((unsigned int)(i | 268435456));
    
#line 525 
    if (0 != 0) 
#line 525 
                req_1->l2t_idx = (unsigned short)(((unsigned int)((unsigned short)((unsigned int)i >> 8)) & 65280U) | (unsigned int)((unsigned short)((unsigned int)i >> 24)));
    else {
      __u32 tmp_6;
      
#line 525 
      tmp_6 = __fswab32((unsigned int)i);
      
#line 525 
      req_1->l2t_idx = (unsigned short)tmp_6;
    }
    
#line 526 
    t3_mgmt_tx(adap,skb);
    
#line 527 
    if (adap->nofail_skb == skb) {
      
#line 528 
      await_mgmt_replies(adap,cnt,(unsigned long)(i + 2065));
      
#line 529 
      adap->nofail_skb = alloc_skb(32U,208U);
      
#line 530 
      if (adap->nofail_skb == (struct sk_buff *)0) 
#line 531 
                                                   goto alloc_skb_fail; else ;
    }
    else ;
  }
  
#line 512 
  i += 1;
  ldv_50279: 
#line 513 
  ;
  
#line 512 
  if (i <= 2047) 
#line 514 
                 goto ldv_50278; else 
#line 517 
                                      goto ldv_50280;
  ldv_50280: 
#line 518 
  ;
  
#line 535 
  skb = alloc_skb(32U,208U);
  
#line 536 
  if (skb == (struct sk_buff *)0) 
#line 537 
                                  skb = adap->nofail_skb; else ;
  
#line 538 
  if (skb == (struct sk_buff *)0) 
#line 539 
                                  goto alloc_skb_fail; else ;
  
#line 541 
  greq = (struct cpl_set_tcb_field *)__skb_put(skb,32U);
  
#line 542 
  memset((void *)greq,0,32UL);
  
#line 543 
  greq->wr.wr_hi = 1U;
  
#line 544 
  greq->ot.opcode_tid = 5U;
  
#line 545 
  greq->mask = 72057594037927936ULL;
  
#line 546 
  t3_mgmt_tx(adap,skb);
  
#line 548 
  i = await_mgmt_replies(adap,cnt,4113UL);
  
#line 549 
  if (adap->nofail_skb == skb) {
    
#line 550 
    i = await_mgmt_replies(adap,cnt,4113UL);
    
#line 551 
    adap->nofail_skb = alloc_skb(32U,208U);
  }
  else ;
  
#line 554 
  t3_tp_set_offload_mode(adap,0);
  
#line 555 
  __retres = i;
  
#line 555 
  goto return_label;
  alloc_skb_fail: 
#line 557 
  ;
  
#line 558 
  t3_tp_set_offload_mode(adap,0);
  
#line 559 
  __retres = -12;
  return_label: 
#line 559 
                return __retres;
}


#line 573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void setup_rss(struct adapter *adap)
{
  int i;
  struct port_info *tmp;
  int tmp_1;
  u8 cpus[9U];
  u16 rspq_map[64U];
  
#line 576 
  tmp = adap2pinfo(adap,0);
  
#line 576 
  unsigned int nq0 = (unsigned int)tmp->nqsets;
  
#line 577 
  if (adap->port[1] != (struct net_device *)0) {
    struct port_info *tmp_0;
    
#line 577 
    tmp_0 = adap2pinfo(adap,1);
    
#line 577 
    tmp_1 = (int)tmp_0->nqsets;
  }
  else 
#line 577 
       tmp_1 = 1;
  
#line 577 
  unsigned int nq1 = (unsigned int)tmp_1;
  
#line 581 
  i = 0;
  
#line 581 
  goto ldv_50290;
  ldv_50289: 
#line 582 
  ;
  
#line 582 
  cpus[i] = (unsigned char)i;
  
#line 581 
  i += 1;
  ldv_50290: 
#line 582 
  ;
  
#line 581 
  if (i <= 7) 
#line 583 
              goto ldv_50289; else 
#line 586 
                                   goto ldv_50291;
  ldv_50291: 
#line 587 
  ;
  
#line 583 
  cpus[8] = (unsigned char)255U;
  
#line 585 
  i = 0;
  
#line 585 
  goto ldv_50293;
  ldv_50292: 
#line 586 
  ;
  
#line 586 
  rspq_map[i] = (unsigned short)((unsigned int)i % nq0);
  
#line 587 
  rspq_map[i + 32] = (unsigned short)((int)((unsigned short)((unsigned int)i % nq1)) + (int)((unsigned short)nq0));
  
#line 585 
  i += 1;
  ldv_50293: 
#line 586 
  ;
  
#line 585 
  if (i <= 31) 
#line 587 
               goto ldv_50292; else 
#line 590 
                                    goto ldv_50294;
  ldv_50294: 
#line 591 
  ;
  
#line 590 
  t3_config_rss(adap,922746988U,(u8 const *)(& cpus),(u16 const *)(& rspq_map));
  
#line 593 
  return;
}


#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void ring_dbs(struct adapter *adap)
{
  int i;
  int j;
  
#line 599 
  i = 0;
  
#line 599 
  goto ldv_50305;
  ldv_50304: 
#line 600 
  ;
  {
    
#line 600 
    struct sge_qset *qs = & adap->sge.qs[i];
    
#line 602 
    if (qs->adap != (struct adapter *)0) {
      
#line 603 
      j = 0;
      
#line 603 
      goto ldv_50302;
      ldv_50301: 
#line 604 
      ;
      
#line 604 
      t3_write_reg(adap,4U,qs->txq[j].cntxt_id | 2147483648U);
      
#line 603 
      j += 1;
      ldv_50302: 
#line 604 
      ;
      
#line 603 
      if (j <= 2) 
#line 605 
                  goto ldv_50301; else 
#line 608 
                                       goto ldv_50303;
      ldv_50303: 
#line 609 
      ;
    }
    else ;
  }
  
#line 599 
  i += 1;
  ldv_50305: 
#line 600 
  ;
  
#line 599 
  if (i <= 7) 
#line 601 
              goto ldv_50304; else 
#line 604 
                                   goto ldv_50306;
  ldv_50306: 
#line 605 
  ;
  
#line 606 
  return;
}


#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void init_napi(struct adapter *adap)
{
  int i;
  
#line 612 
  i = 0;
  
#line 612 
  goto ldv_50313;
  ldv_50312: 
#line 613 
  ;
  {
    
#line 613 
    struct sge_qset *qs = & adap->sge.qs[i];
    
#line 615 
    if (qs->adap != (struct adapter *)0) 
#line 616 
                                         netif_napi_add(qs->netdev,& qs->napi,qs->napi.poll,64); else ;
  }
  
#line 612 
  i += 1;
  ldv_50313: 
#line 613 
  ;
  
#line 612 
  if (i <= 7) 
#line 614 
              goto ldv_50312; else 
#line 617 
                                   goto ldv_50314;
  ldv_50314: 
#line 618 
  ;
  
#line 625 
  adap->flags |= 32UL;
  
#line 626 
  return;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void quiesce_rx(struct adapter *adap)
{
  int i;
  
#line 637 
  i = 0;
  
#line 637 
  goto ldv_50320;
  ldv_50319: 
#line 638 
  ;
  
#line 638 
  if (adap->sge.qs[i].adap != (struct adapter *)0) 
#line 639 
                                                   napi_disable(& adap->sge.qs[i].napi); else ;
  
#line 637 
  i += 1;
  ldv_50320: 
#line 638 
  ;
  
#line 637 
  if (i <= 7) 
#line 639 
              goto ldv_50319; else 
#line 642 
                                   goto ldv_50321;
  ldv_50321: 
#line 643 
  ;
  
#line 644 
  return;
}


#line 642  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void enable_all_napi(struct adapter *adap)
{
  int i;
  
#line 645 
  i = 0;
  
#line 645 
  goto ldv_50327;
  ldv_50326: 
#line 646 
  ;
  
#line 646 
  if (adap->sge.qs[i].adap != (struct adapter *)0) 
#line 647 
                                                   napi_enable(& adap->sge.qs[i].napi); else ;
  
#line 645 
  i += 1;
  ldv_50327: 
#line 646 
  ;
  
#line 645 
  if (i <= 7) 
#line 647 
              goto ldv_50326; else 
#line 650 
                                   goto ldv_50328;
  ldv_50328: 
#line 651 
  ;
  
#line 652 
  return;
}


#line 658  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int setup_sge_qsets(struct adapter *adap)
{
  int __retres;
  int i;
  int j;
  int err;
  
#line 660 
  int irq_idx = 0;
  
#line 660 
  int qset_idx = 0;
  
#line 661 
  unsigned int ntxq = 3U;
  
#line 663 
  if (adap->params.rev != 0U && (adap->flags & 2UL) == 0UL) 
#line 664 
                                                            irq_idx = -1; else ;
  
#line 666 
  i = 0;
  
#line 666 
  goto ldv_50344;
  ldv_50343: 
#line 667 
  ;
  {
    struct netdev_queue *tmp_0;
    int tmp_1;
    
#line 667 
    struct net_device *dev = adap->port[i];
    
#line 668 
    struct port_info *pi = netdev_priv((struct net_device const *)dev);
    
#line 670 
    pi->qs = & adap->sge.qs[(int)pi->first_qset];
    
#line 671 
    j = 0;
    
#line 671 
    goto ldv_50341;
    ldv_50340: 
#line 672 
    ;
    
#line 675 
    tmp_0 = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)j);
    
#line 672 
    ;
    
#line 672 
    ;
    
#line 672 
    ;
    
#line 672 
    if ((adap->flags & 4UL) != 0UL) 
#line 672 
                                    tmp_1 = qset_idx + 1; else 
#line 672 
                                                               tmp_1 = irq_idx;
    
#line 672 
    ;
    
#line 672 
    ;
    
#line 672 
    err = t3_sge_alloc_qset(adap,(unsigned int)qset_idx,1,tmp_1,(struct qset_params const *)(& adap->params.sge.qset[qset_idx]),(int)ntxq,dev,tmp_0);
    
#line 677 
    if (err != 0) {
      
#line 678 
      t3_free_sge_resources(adap);
      
#line 679 
      __retres = err;
      
#line 679 
      goto return_label;
    }
    else ;
    
#line 671 
    j += 1;
    
#line 671 
    qset_idx += 1;
    ldv_50341: 
#line 672 
    ;
    
#line 671 
    if ((int)pi->nqsets > j) 
#line 673 
                             goto ldv_50340; else 
#line 676 
                                                  goto ldv_50342;
    ldv_50342: 
#line 677 
    ;
  }
  
#line 666 
  i += 1;
  ldv_50344: 
#line 667 
  ;
  
#line 666 
  if (adap->params.nports > (unsigned int)i) 
#line 668 
                                             goto ldv_50343; else 
#line 671 
                                                                  goto ldv_50345;
  ldv_50345: 
#line 672 
  ;
  
#line 684 
  __retres = 0;
  return_label: 
#line 684 
                return __retres;
}


#line 687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t attr_show(struct device *d, char *buf, ssize_t (*format)(struct net_device *, char *))
{
  ssize_t len;
  struct net_device *tmp;
  
#line 693 
  rtnl_lock();
  
#line 694 
  ;
  {
    
#line 694 
    struct device const *__mptr = (struct device const *)d;
    
#line 694 
    tmp = (struct net_device *)__mptr + 18446744073709550240U;
  }
  
#line 694 
  len = (*format)(tmp,buf);
  
#line 695 
  rtnl_unlock();
  
#line 696 
  return len;
}


#line 699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t attr_store(struct device *d, char const *buf, size_t len, ssize_t (*set)(struct net_device *, unsigned int ), unsigned int min_val, unsigned int max_val)
{
  ssize_t __retres;
  char *endp;
  ssize_t ret;
  unsigned int val;
  int tmp_0;
  bool tmp;
  unsigned long tmp_1;
  struct net_device *tmp_2;
  
#line 708 
  tmp = capable(12);
  
#line 708 
  if (tmp) 
#line 708 
           tmp_0 = 0; else 
#line 708 
                           tmp_0 = 1;
  
#line 708 
  if (tmp_0) {
    
#line 709 
    __retres = -1L;
    
#line 709 
    goto return_label;
  }
  else ;
  
#line 711 
  tmp_1 = simple_strtoul(buf,& endp,0U);
  
#line 711 
  val = (unsigned int)tmp_1;
  
#line 712 
  if ((char const *)endp == buf || (val < min_val || val > max_val)) {
    
#line 713 
    __retres = -22L;
    
#line 713 
    goto return_label;
  }
  else ;
  
#line 715 
  rtnl_lock();
  
#line 716 
  ;
  {
    
#line 716 
    struct device const *__mptr = (struct device const *)d;
    
#line 716 
    tmp_2 = (struct net_device *)__mptr + 18446744073709550240U;
  }
  
#line 716 
  ret = (*set)(tmp_2,val);
  
#line 717 
  if (ret == 0L) 
#line 718 
                 ret = (long)len; else ;
  
#line 719 
  rtnl_unlock();
  
#line 720 
  __retres = ret;
  return_label: 
#line 720 
                return __retres;
}


#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t set_nfilters(struct net_device *dev, unsigned int val)
{
  ssize_t __retres;
  int tmp_1;
  int tmp_0;
  unsigned int tmp_2;
  
#line 738 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 739 
  struct adapter *adap = pi->adapter;
  
#line 740 
  tmp_0 = is_offload((struct adapter const *)adap);
  
#line 740 
  if (tmp_0 != 0) 
#line 740 
                  tmp_1 = 16; else 
#line 740 
                                   tmp_1 = 0;
  
#line 740 
  int min_tids = tmp_1;
  
#line 742 
  if ((adap->flags & 1UL) != 0UL) {
    
#line 743 
    __retres = -16L;
    
#line 743 
    goto return_label;
  }
  else ;
  
#line 744 
  if (val != 0U && adap->params.rev == 0U) {
    
#line 745 
    __retres = -22L;
    
#line 745 
    goto return_label;
  }
  else ;
  
#line 746 
  tmp_2 = t3_mc5_size((struct mc5 const *)(& adap->mc5));
  
#line 746 
  ;
  
#line 746 
  if ((tmp_2 - adap->params.mc5.nservers) - (unsigned int)min_tids < val) {
    
#line 748 
    __retres = -22L;
    
#line 748 
    goto return_label;
  }
  else ;
  
#line 749 
  adap->params.mc5.nfilters = val;
  
#line 750 
  __retres = 0L;
  return_label: 
#line 750 
                return __retres;
}


#line 753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_nfilters(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 756 
  tmp = attr_store(d,buf,len,& set_nfilters,0U,4294967295U);
  
#line 756 
  return tmp;
}


#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t set_nservers(struct net_device *dev, unsigned int val)
{
  ssize_t __retres;
  unsigned int tmp_0;
  
#line 761 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 762 
  struct adapter *adap = pi->adapter;
  
#line 764 
  if ((adap->flags & 1UL) != 0UL) {
    
#line 765 
    __retres = -16L;
    
#line 765 
    goto return_label;
  }
  else ;
  
#line 766 
  tmp_0 = t3_mc5_size((struct mc5 const *)(& adap->mc5));
  
#line 766 
  ;
  
#line 766 
  if ((tmp_0 - adap->params.mc5.nfilters) + 4294967280U < val) {
    
#line 768 
    __retres = -22L;
    
#line 768 
    goto return_label;
  }
  else ;
  
#line 769 
  adap->params.mc5.nservers = val;
  
#line 770 
  __retres = 0L;
  return_label: 
#line 770 
                return __retres;
}


#line 773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_nservers(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 776 
  tmp = attr_store(d,buf,len,& set_nservers,0U,4294967295U);
  
#line 776 
  return tmp;
}


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t format_cam_size(struct net_device *dev, char *buf)
{
  ssize_t __retres;
  int tmp_1;
  unsigned int tmp_0;
  
#line 787 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 787 
  struct adapter *adap = pi->adapter;
  
#line 787 
  tmp_0 = t3_mc5_size((struct mc5 const *)(& adap->mc5));
  
#line 787 
  ;
  
#line 787 
  tmp_1 = sprintf(buf,"%u\n",tmp_0);
  
#line 787 
  __retres = (long)tmp_1;
  
#line 787 
  return __retres;
}


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_cam_size(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 787 
  tmp = attr_show(d,buf,& format_cam_size);
  
#line 787 
  return tmp;
}


#line 787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_cam_size = {.attr = {.name = "cam_size", .mode = (unsigned short)292U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_cam_size, .store = (ssize_t (*)(struct device *, struct device_attribute *, char const *, size_t ))0};

#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t format_nfilters(struct net_device *dev, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 788 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 788 
  struct adapter *adap = pi->adapter;
  
#line 788 
  tmp_0 = sprintf(buf,"%u\n",adap->params.mc5.nfilters);
  
#line 788 
  __retres = (long)tmp_0;
  
#line 788 
  return __retres;
}


#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_nfilters(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 788 
  tmp = attr_show(d,buf,& format_nfilters);
  
#line 788 
  return tmp;
}


#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_nfilters = {.attr = {.name = "nfilters", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_nfilters, .store = & store_nfilters};

#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t format_nservers(struct net_device *dev, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 789 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 789 
  struct adapter *adap = pi->adapter;
  
#line 789 
  tmp_0 = sprintf(buf,"%u\n",adap->params.mc5.nservers);
  
#line 789 
  __retres = (long)tmp_0;
  
#line 789 
  return __retres;
}


#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_nservers(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 789 
  tmp = attr_show(d,buf,& format_nservers);
  
#line 789 
  return tmp;
}


#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_nservers = {.attr = {.name = "nservers", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_nservers, .store = & store_nservers};

#line 791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct attribute *cxgb3_attrs[4U] = {& dev_attr_cam_size.attr, & dev_attr_nfilters.attr, & dev_attr_nservers.attr, (struct attribute *)0};

#line 798  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct attribute_group cxgb3_attr_group = {.name = (char const *)0, .is_visible = (umode_t (*)(struct kobject *, struct attribute *, int ))0, .attrs = (struct attribute **)(& cxgb3_attrs), .bin_attrs = (struct bin_attribute **)0};

#line 800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t tm_attr_show(struct device *d, char *buf, int sched)
{
  struct port_info *tmp_0;
  struct net_device *tmp;
  unsigned int v;
  unsigned int addr;
  unsigned int bpt;
  unsigned int cpt;
  ssize_t len;
  {
    
#line 803 
    struct device const *__mptr = (struct device const *)d;
    
#line 803 
    tmp = (struct net_device *)__mptr + 18446744073709550240U;
  }
  
#line 803 
  tmp_0 = (struct port_info *)netdev_priv((struct net_device const *)tmp);
  
#line 803 
  struct port_info *pi = tmp_0;
  
#line 804 
  struct adapter *adap = pi->adapter;
  
#line 808 
  addr = (unsigned int)(sched / -2 + 8);
  
#line 809 
  rtnl_lock();
  
#line 810 
  t3_write_reg(adap,1048U,addr);
  
#line 811 
  v = t3_read_reg(adap,1052U);
  
#line 812 
  if ((sched & 1) != 0) 
#line 813 
                        v >>= 16; else ;
  
#line 814 
  bpt = (v >> 8) & 255U;
  
#line 815 
  cpt = v & 255U;
  
#line 816 
  if (cpt == 0U) {
    int tmp_1;
    
#line 817 
    tmp_1 = sprintf(buf,"disabled\n");
    
#line 817 
    len = (long)tmp_1;
  }
  else {
    int tmp_2;
    
#line 819 
    v = (adap->params.vpd.cclk * 1000U) / cpt;
    
#line 820 
    tmp_2 = sprintf(buf,"%u Kbps\n",(v * bpt) / 125U);
    
#line 820 
    len = (long)tmp_2;
  }
  
#line 822 
  rtnl_unlock();
  
#line 823 
  return len;
}


#line 826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t tm_attr_store(struct device *d, char const *buf, size_t len, int sched)
{
  ssize_t __retres;
  struct port_info *tmp_0;
  struct net_device *tmp;
  unsigned int val;
  char *endp;
  ssize_t ret;
  int tmp_2;
  bool tmp_1;
  unsigned long tmp_3;
  int tmp_4;
  {
    
#line 829 
    struct device const *__mptr = (struct device const *)d;
    
#line 829 
    tmp = (struct net_device *)__mptr + 18446744073709550240U;
  }
  
#line 829 
  tmp_0 = (struct port_info *)netdev_priv((struct net_device const *)tmp);
  
#line 829 
  struct port_info *pi = tmp_0;
  
#line 830 
  struct adapter *adap = pi->adapter;
  
#line 835 
  tmp_1 = capable(12);
  
#line 835 
  if (tmp_1) 
#line 835 
             tmp_2 = 0; else 
#line 835 
                             tmp_2 = 1;
  
#line 835 
  if (tmp_2) {
    
#line 836 
    __retres = -1L;
    
#line 836 
    goto return_label;
  }
  else ;
  
#line 838 
  tmp_3 = simple_strtoul(buf,& endp,0U);
  
#line 838 
  val = (unsigned int)tmp_3;
  
#line 839 
  if ((char const *)endp == buf || val > 10000000U) {
    
#line 840 
    __retres = -22L;
    
#line 840 
    goto return_label;
  }
  else ;
  
#line 842 
  rtnl_lock();
  
#line 843 
  tmp_4 = t3_config_sched(adap,val,sched);
  
#line 843 
  ret = (long)tmp_4;
  
#line 844 
  if (ret == 0L) 
#line 845 
                 ret = (long)len; else ;
  
#line 846 
  rtnl_unlock();
  
#line 847 
  __retres = ret;
  return_label: 
#line 847 
                return __retres;
}


#line 863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched0(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 863 
  tmp = tm_attr_show(d,buf,0);
  
#line 863 
  return tmp;
}


#line 863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched0(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 863 
  tmp = tm_attr_store(d,buf,len,0);
  
#line 863 
  return tmp;
}


#line 863  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched0 = {.attr = {.name = "sched0", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched0, .store = & store_sched0};

#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched1(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 864 
  tmp = tm_attr_show(d,buf,1);
  
#line 864 
  return tmp;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched1(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 864 
  tmp = tm_attr_store(d,buf,len,1);
  
#line 864 
  return tmp;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched1 = {.attr = {.name = "sched1", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched1, .store = & store_sched1};

#line 865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched2(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 865 
  tmp = tm_attr_show(d,buf,2);
  
#line 865 
  return tmp;
}


#line 865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched2(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 865 
  tmp = tm_attr_store(d,buf,len,2);
  
#line 865 
  return tmp;
}


#line 865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched2 = {.attr = {.name = "sched2", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched2, .store = & store_sched2};

#line 866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched3(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 866 
  tmp = tm_attr_show(d,buf,3);
  
#line 866 
  return tmp;
}


#line 866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched3(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 866 
  tmp = tm_attr_store(d,buf,len,3);
  
#line 866 
  return tmp;
}


#line 866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched3 = {.attr = {.name = "sched3", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched3, .store = & store_sched3};

#line 867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched4(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 867 
  tmp = tm_attr_show(d,buf,4);
  
#line 867 
  return tmp;
}


#line 867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched4(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 867 
  tmp = tm_attr_store(d,buf,len,4);
  
#line 867 
  return tmp;
}


#line 867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched4 = {.attr = {.name = "sched4", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched4, .store = & store_sched4};

#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched5(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 868 
  tmp = tm_attr_show(d,buf,5);
  
#line 868 
  return tmp;
}


#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched5(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 868 
  tmp = tm_attr_store(d,buf,len,5);
  
#line 868 
  return tmp;
}


#line 868  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched5 = {.attr = {.name = "sched5", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched5, .store = & store_sched5};

#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched6(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 869 
  tmp = tm_attr_show(d,buf,6);
  
#line 869 
  return tmp;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched6(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 869 
  tmp = tm_attr_store(d,buf,len,6);
  
#line 869 
  return tmp;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched6 = {.attr = {.name = "sched6", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched6, .store = & store_sched6};

#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t show_sched7(struct device *d, struct device_attribute *attr, char *buf)
{
  ssize_t tmp;
  
#line 870 
  tmp = tm_attr_show(d,buf,7);
  
#line 870 
  return tmp;
}


#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static ssize_t store_sched7(struct device *d, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t tmp;
  
#line 870 
  tmp = tm_attr_store(d,buf,len,7);
  
#line 870 
  return tmp;
}


#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct device_attribute dev_attr_sched7 = {.attr = {.name = "sched7", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & show_sched7, .store = & store_sched7};

#line 872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct attribute *offload_attrs[9U] = {& dev_attr_sched0.attr, & dev_attr_sched1.attr, & dev_attr_sched2.attr, & dev_attr_sched3.attr, & dev_attr_sched4.attr, & dev_attr_sched5.attr, & dev_attr_sched6.attr, & dev_attr_sched7.attr, (struct attribute *)0};

#line 884  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct attribute_group offload_attr_group = {.name = (char const *)0, .is_visible = (umode_t (*)(struct kobject *, struct attribute *, int ))0, .attrs = (struct attribute **)(& offload_attrs), .bin_attrs = (struct bin_attribute **)0};

#line 890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
__inline static int offload_tx(struct t3cdev *tdev, struct sk_buff *skb)
{
  int ret;
  
#line 894 
  local_bh_disable();
  
#line 895 
  ret = t3_offload_tx(tdev,skb);
  
#line 896 
  local_bh_enable();
  
#line 897 
  return ret;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int write_smt_entry(struct adapter *adapter, int idx)
{
  int __retres;
  struct cpl_smt_write_req *req;
  
#line 903 
  struct port_info *pi = netdev_priv((struct net_device const *)adapter->port[idx]);
  
#line 904 
  struct sk_buff *skb = alloc_skb(32U,208U);
  
#line 906 
  if (skb == (struct sk_buff *)0) {
    
#line 907 
    __retres = -12;
    
#line 907 
    goto return_label;
  }
  else ;
  
#line 909 
  req = (struct cpl_smt_write_req *)__skb_put(skb,32U);
  
#line 910 
  req->wr.wr_hi = 1U;
  
#line 911 
  if (0 != 0) 
#line 911 
              req->ot.opcode_tid = (((((unsigned int)idx << 24) | (((unsigned int)idx << 8) & 16711680U)) | (((unsigned int)idx >> 8) & 65280U)) | ((unsigned int)idx >> 24)) | 20U; else 
                                                                    
#line 911 
                                                                    req->ot.opcode_tid = __fswab32((unsigned int)(idx | 335544320));
  
#line 912 
  req->mtu_idx = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))15U;
  
#line 913 
  req->iff = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))idx;
  
#line 914 
  memcpy((void *)(& req->src_mac0),(void const *)(adapter->port[idx])->dev_addr,6UL);
  
#line 915 
  memcpy((void *)(& req->src_mac1),(void const *)(& pi->iscsic.mac_addr),6UL);
  
#line 916 
  skb->priority = 1U;
  
#line 917 
  offload_tx(& adapter->tdev,skb);
  
#line 918 
  __retres = 0;
  return_label: 
#line 918 
                return __retres;
}


#line 921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int init_smt(struct adapter *adapter)
{
  int __retres;
  int i;
  
#line 925 
  i = 0;
  
#line 925 
  goto ldv_50774;
  ldv_50773: 
#line 926 
  ;
  
#line 926 
  write_smt_entry(adapter,i);
  
#line 925 
  i += 1;
  ldv_50774: 
#line 926 
  ;
  
#line 925 
  if (adapter->params.nports > (unsigned int)i) 
#line 927 
                                                goto ldv_50773; else 
                                                                  
#line 930 
                                                                  goto ldv_50775;
  ldv_50775: 
#line 931 
  ;
  
#line 927 
  __retres = 0;
  
#line 927 
  return __retres;
}


#line 930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void init_port_mtus(struct adapter *adapter)
{
  
#line 932 
  unsigned int mtus = (adapter->port[0])->mtu;
  
#line 934 
  if (adapter->port[1] != (struct net_device *)0) 
#line 935 
                                                  mtus = ((adapter->port[1])->mtu << 16) | mtus; else ;
  
#line 936 
  t3_write_reg(adapter,976U,mtus);
  
#line 937 
  return;
}


#line 939  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int send_pktsched_cmd(struct adapter *adap, int sched, int qidx, int lo, int hi, int port)
{
  int __retres;
  struct sk_buff *skb;
  struct mngt_pktsched_wr *req;
  int ret;
  
#line 946 
  skb = alloc_skb(24U,208U);
  
#line 947 
  if (skb == (struct sk_buff *)0) 
#line 948 
                                  skb = adap->nofail_skb; else ;
  
#line 949 
  if (skb == (struct sk_buff *)0) {
    
#line 950 
    __retres = -12;
    
#line 950 
    goto return_label;
  }
  else ;
  
#line 952 
  req = (struct mngt_pktsched_wr *)skb_put(skb,24U);
  
#line 953 
  req->wr_hi = 29U;
  
#line 954 
  req->mngt_opcode = (unsigned char)0U;
  
#line 955 
  req->sched = (unsigned char)sched;
  
#line 956 
  req->idx = (unsigned char)qidx;
  
#line 957 
  req->min = (unsigned char)lo;
  
#line 958 
  req->max = (unsigned char)hi;
  
#line 959 
  req->binding = (unsigned char)port;
  
#line 960 
  ret = t3_mgmt_tx(adap,skb);
  
#line 961 
  if (adap->nofail_skb == skb) {
    
#line 962 
    adap->nofail_skb = alloc_skb(32U,208U);
    
#line 964 
    if (adap->nofail_skb == (struct sk_buff *)0) 
#line 965 
                                                 ret = -12; else ;
  }
  else ;
  
#line 968 
  __retres = ret;
  return_label: 
#line 968 
                return __retres;
}


#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int bind_qsets(struct adapter *adap)
{
  int i;
  int j;
  
#line 973 
  int err = 0;
  
#line 975 
  i = 0;
  
#line 975 
  goto ldv_50803;
  ldv_50802: 
#line 976 
  ;
  {
    
#line 976 
    struct port_info const *pi = adap2pinfo(adap,i);
    
#line 978 
    j = 0;
    
#line 978 
    goto ldv_50800;
    ldv_50799: 
#line 979 
    ;
    {
      
#line 979 
      int ret = send_pktsched_cmd(adap,1,(int)pi->first_qset + j,-1,-1,i);
      
#line 982 
      if (ret != 0) 
#line 983 
                    err = ret; else ;
    }
    
#line 978 
    j += 1;
    ldv_50800: 
#line 979 
    ;
    
#line 978 
    if ((int)pi->nqsets > j) 
#line 980 
                             goto ldv_50799; else 
#line 983 
                                                  goto ldv_50801;
    ldv_50801: 
#line 984 
    ;
  }
  
#line 975 
  i += 1;
  ldv_50803: 
#line 976 
  ;
  
#line 975 
  if (adap->params.nports > (unsigned int)i) 
#line 977 
                                             goto ldv_50802; else 
#line 980 
                                                                  goto ldv_50804;
  ldv_50804: 
#line 981 
  ;
  
#line 987 
  return err;
}


#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
__inline static char const *get_edc_fw_name(int edc_idx)
{
  
#line 1008 
  char const *fw_name = (char const *)0;
  
#line 1010 
  switch (edc_idx) {
    case 0: 
#line 1011 
    ;
    
#line 1012 
    fw_name = "cxgb3/ael2005_opt_edc.bin";
    
#line 1013 
    goto ldv_50816;
    case 1: 
#line 1014 
    ;
    
#line 1015 
    fw_name = "cxgb3/ael2005_twx_edc.bin";
    
#line 1016 
    goto ldv_50816;
    case 2: 
#line 1017 
    ;
    
#line 1018 
    fw_name = "cxgb3/ael2020_twx_edc.bin";
    
#line 1019 
    goto ldv_50816;
  }
  ldv_50816: 
#line 1021 
  ;
  
#line 1021 
  return fw_name;
}


#line 1024  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
int t3_get_edc_fw(struct cphy *phy, int edc_idx, int size)
{
  int __retres;
  struct firmware const *fw;
  char const *fw_name;
  u32 csum;
  __be32 const *p;
  int i;
  unsigned int tmp_0;
  u16 *tmp_1;
  u16 *tmp_3;
  
#line 1026 
  struct adapter *adapter = phy->adapter;
  
#line 1031 
  u16 *cache = (u16 *)(& phy->phy_cache);
  
#line 1032 
  int ret = -22;
  
#line 1034 
  fw_name = get_edc_fw_name(edc_idx);
  
#line 1035 
  if (fw_name != (char const *)0) 
#line 1036 
                                  ret = request_firmware(& fw,fw_name,& (adapter->pdev)->dev); else ;
  
#line 1037 
  if (ret < 0) {
    
#line 1038 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"could not upgrade firmware: unable to load %s\n",fw_name);
    
#line 1041 
    __retres = ret;
    
#line 1041 
    goto return_label;
  }
  else ;
  
#line 1045 
  if (fw->size > (unsigned long)(size + 4)) {
    
#line 1046 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"firmware image too large %u, expected %d\n",(unsigned int)fw->size,size + 4);
    
#line 1048 
    ret = -22;
  }
  else ;
  
#line 1052 
  p = (__be32 const *)fw->data;
  
#line 1053 
  csum = 0U;
  
#line 1053 
  i = 0;
  
#line 1053 
  goto ldv_50833;
  ldv_50832: 
#line 1054 
  ;
  
#line 1054 
  if (0 != 0) 
#line 1054 
              tmp_0 = (((*(p + i) << 24) | ((*(p + i) << 8) & 16711680U)) | ((*(p + i) >> 8) & 65280U)) | (*(p + i) >> 24); else 
                                                                    
#line 1054 
                                                                    tmp_0 = __fswab32(*(p + i));
  
#line 1054 
  csum = tmp_0 + csum;
  
#line 1053 
  i += 1;
  ldv_50833: 
#line 1054 
  ;
  
#line 1053 
  if ((unsigned long)i < fw->size / 4UL) 
#line 1055 
                                         goto ldv_50832; else 
#line 1058 
                                                              goto ldv_50834;
  ldv_50834: 
#line 1059 
  ;
  
#line 1056 
  if (csum != 4294967295U) {
    
#line 1057 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"corrupted firmware image, checksum %u\n",csum);
    
#line 1059 
    ret = -22;
  }
  else ;
  
#line 1062 
  i = 0;
  
#line 1062 
  goto ldv_50836;
  ldv_50835: 
#line 1063 
  ;
  
#line 1063 
  tmp_1 = cache;
  
#line 1063 
  cache += 1;
  
#line 1063 
  if (0 != 0) 
#line 1063 
              *tmp_1 = (unsigned short)(((((*(p + i) << 24) | ((*(p + i) << 8) & 16711680U)) | ((*(p + i) >> 8) & 65280U)) | (*(p + i) >> 24)) >> 16);
  else {
    __u32 tmp_2;
    
#line 1063 
    tmp_2 = __fswab32(*(p + i));
    
#line 1063 
    *tmp_1 = (unsigned short)(tmp_2 >> 16);
  }
  
#line 1064 
  tmp_3 = cache;
  
#line 1064 
  cache += 1;
  
#line 1064 
  if (0 != 0) 
#line 1064 
              *tmp_3 = (unsigned short)(((unsigned int)((unsigned short)(*(p + i) >> 8)) & 65280U) | (unsigned int)((unsigned short)(*(p + i) >> 24)));
  else {
    __u32 tmp_4;
    
#line 1064 
    tmp_4 = __fswab32(*(p + i));
    
#line 1064 
    *tmp_3 = (unsigned short)tmp_4;
  }
  
#line 1062 
  i += 1;
  ldv_50836: 
#line 1063 
  ;
  
#line 1062 
  if (size / 4 > i) 
#line 1064 
                    goto ldv_50835; else 
#line 1067 
                                         goto ldv_50837;
  ldv_50837: 
#line 1068 
  ;
  
#line 1067 
  release_firmware(fw);
  
#line 1069 
  __retres = ret;
  return_label: 
#line 1069 
                return __retres;
}


#line 1072  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int upgrade_fw(struct adapter *adap)
{
  int __retres;
  int ret;
  struct firmware const *fw;
  
#line 1076 
  struct device *dev = & (adap->pdev)->dev;
  
#line 1078 
  ret = request_firmware(& fw,"cxgb3/t3fw-",dev);
  
#line 1079 
  if (ret < 0) {
    
#line 1080 
    dev_err((struct device const *)dev,"could not upgrade firmware: unable to load %s\n",(char *)"cxgb3/t3fw-");
    
#line 1082 
    __retres = ret;
    
#line 1082 
    goto return_label;
  }
  else ;
  
#line 1084 
  ret = t3_load_fw(adap,fw->data,(unsigned int)fw->size);
  
#line 1085 
  release_firmware(fw);
  
#line 1087 
  if (ret == 0) 
#line 1088 
                _dev_info((struct device const *)dev,"successful upgrade to firmware %d.%d.%d\n",7,12,0); else 
                                                                    
#line 1091 
                                                                    dev_err((struct device const *)dev,"failed to upgrade to firmware %d.%d.%d\n",7,12,0);
  
#line 1094 
  __retres = ret;
  return_label: 
#line 1094 
                return __retres;
}


#line 1097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
__inline static char t3rev2char(struct adapter *adapter)
{
  
#line 1099 
  char rev = (char)0;
  
#line 1101 
  switch (adapter->params.rev) {
    case (unsigned int)2: 
#line 1102 
    ;
    case (unsigned int)3: 
#line 1103 
    ;
    
#line 1104 
    rev = (char)98;
    
#line 1105 
    goto ldv_50850;
    case (unsigned int)4: 
#line 1106 
    ;
    
#line 1107 
    rev = (char)99;
    
#line 1108 
    goto ldv_50850;
  }
  ldv_50850: 
#line 1110 
  ;
  
#line 1110 
  return rev;
}


#line 1113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int update_tpsram(struct adapter *adap)
{
  int __retres;
  struct firmware const *tpsram;
  char buf[64U];
  int ret;
  char rev;
  
#line 1117 
  struct device *dev = & (adap->pdev)->dev;
  
#line 1121 
  rev = t3rev2char(adap);
  
#line 1122 
  if ((int)rev == 0) {
    
#line 1123 
    __retres = 0;
    
#line 1123 
    goto return_label;
  }
  else ;
  
#line 1125 
  snprintf((char *)(& buf),64UL,"cxgb3/t3%c_psram-",(int)rev);
  
#line 1127 
  ret = request_firmware(& tpsram,(char const *)(& buf),dev);
  
#line 1128 
  if (ret < 0) {
    
#line 1129 
    dev_err((struct device const *)dev,"could not load TP SRAM: unable to load %s\n",(char *)(& buf));
    
#line 1131 
    __retres = ret;
    
#line 1131 
    goto return_label;
  }
  else ;
  
#line 1134 
  ret = t3_check_tpsram(adap,tpsram->data,(unsigned int)tpsram->size);
  
#line 1135 
  if (ret != 0) 
#line 1136 
                goto release_tpsram; else ;
  
#line 1138 
  ret = t3_set_proto_sram(adap,tpsram->data);
  
#line 1139 
  if (ret == 0) 
#line 1140 
                _dev_info((struct device const *)dev,"successful update of protocol engine ",1,1,0); else 
                                                                    
#line 1145 
                                                                    dev_err((struct device const *)dev,"failed to update of protocol engine %d.%d.%d\n",1,1,0);
  
#line 1147 
  if (ret != 0) 
#line 1148 
                dev_err((struct device const *)dev,"loading protocol SRAM failed\n"); else ;
  release_tpsram: 
#line 1150 
  ;
  
#line 1151 
  release_firmware(tpsram);
  
#line 1153 
  __retres = ret;
  return_label: 
#line 1153 
                return __retres;
}


#line 1165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void t3_synchronize_rx(struct adapter *adap, struct port_info const *p)
{
  int i;
  
#line 1169 
  i = (int)p->first_qset;
  
#line 1169 
  goto ldv_50868;
  ldv_50867: 
#line 1170 
  ;
  {
    
#line 1170 
    struct sge_rspq *q = & adap->sge.qs[i].rspq;
    
#line 1172 
    ldv_spin_lock_irq_79_0(& q->lock);
    
#line 1173 
    ldv_spin_unlock_irq_80_0(& q->lock);
  }
  
#line 1169 
  i += 1;
  ldv_50868: 
#line 1170 
  ;
  
#line 1169 
  if ((int)p->first_qset + (int)p->nqsets > i) 
#line 1171 
                                               goto ldv_50867; else 
#line 1174 
                                                                    goto ldv_50869;
  ldv_50869: 
#line 1175 
  ;
  
#line 1176 
  return;
}


#line 1177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void cxgb_vlan_mode(struct net_device *dev, netdev_features_t features)
{
  
#line 1179 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1180 
  struct adapter *adapter = pi->adapter;
  
#line 1182 
  if (adapter->params.rev != 0U) 
#line 1183 
                                 t3_set_vlan_accel(adapter,(unsigned int)(1 << (int)pi->port_id),(int)features & 256);
  else {
    unsigned int i;
    
#line 1187 
    unsigned int have_vlans = (unsigned int)features & 256U;
    
#line 1189 
    i = 0U;
    
#line 1189 
    goto ldv_50879;
    ldv_50878: 
#line 1190 
    ;
    
#line 1190 
    have_vlans = ((unsigned int)(adapter->port[i])->features & 256U) | have_vlans;
    
#line 1189 
    i += 1U;
    ldv_50879: 
#line 1190 
    ;
    
#line 1189 
    if (adapter->params.nports > i) 
#line 1191 
                                    goto ldv_50878; else 
#line 1194 
                                                         goto ldv_50880;
    ldv_50880: 
#line 1195 
    ;
    
#line 1194 
    t3_set_vlan_accel(adapter,1U,(int)have_vlans);
  }
  
#line 1196 
  t3_synchronize_rx(adapter,(struct port_info const *)pi);
  
#line 1197 
  return;
}


#line 1209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_up(struct adapter *adap)
{
  int __retres;
  int i;
  int err;
  
#line 1213 
  if ((adap->flags & 1UL) == 0UL) {
    
#line 1214 
    err = t3_check_fw_version(adap);
    
#line 1215 
    if (err == -22) {
      char *tmp;
      
#line 1216 
      err = upgrade_fw(adap);
      
#line 1217 
      if (err != 0) 
#line 1217 
                    tmp = (char *)"failed"; else 
#line 1217 
                                                 tmp = (char *)"succeeded";
      
#line 1217 
      ;
      
#line 1217 
      dev_warn((struct device const *)(& (adap->pdev)->dev),"FW upgrade to %d.%d.%d %s\n",7,12,0,tmp);
    }
    else ;
    
#line 1222 
    err = t3_check_tpsram_version(adap);
    
#line 1223 
    if (err == -22) {
      char *tmp_0;
      
#line 1224 
      err = update_tpsram(adap);
      
#line 1225 
      if (err != 0) 
#line 1225 
                    tmp_0 = (char *)"failed"; else 
#line 1225 
                                                   tmp_0 = (char *)"succeeded";
      
#line 1225 
      ;
      
#line 1225 
      dev_warn((struct device const *)(& (adap->pdev)->dev),"TP upgrade to %d.%d.%d %s\n",1,1,0,tmp_0);
    }
    else ;
    
#line 1235 
    t3_intr_clear(adap);
    
#line 1237 
    err = t3_init_hw(adap,0U);
    
#line 1238 
    if (err != 0) 
#line 1239 
                  goto out; else ;
    
#line 1241 
    t3_set_reg_field(adap,884U,0U,8U);
    
#line 1242 
    t3_write_reg(adap,1320U,0U);
    
#line 1244 
    err = setup_sge_qsets(adap);
    
#line 1245 
    if (err != 0) 
#line 1246 
                  goto out; else ;
    
#line 1248 
    i = 0;
    
#line 1248 
    goto ldv_50888;
    ldv_50887: 
#line 1249 
    ;
    
#line 1249 
    cxgb_vlan_mode(adap->port[i],(adap->port[i])->features);
    
#line 1248 
    i += 1;
    ldv_50888: 
#line 1249 
    ;
    
#line 1248 
    if (adap->params.nports > (unsigned int)i) 
#line 1250 
                                               goto ldv_50887; else 
#line 1253 
                                                                    goto ldv_50889;
    ldv_50889: 
#line 1254 
    ;
    
#line 1251 
    setup_rss(adap);
    
#line 1252 
    if ((adap->flags & 32UL) == 0UL) 
#line 1253 
                                     init_napi(adap); else ;
    
#line 1255 
    t3_start_sge_timers(adap);
    
#line 1256 
    adap->flags |= 1UL;
  }
  else ;
  
#line 1259 
  t3_intr_clear(adap);
  
#line 1261 
  if ((adap->flags & 4UL) != 0UL) {
    
#line 1262 
    name_msix_vecs(adap);
    
#line 1263 
    err = ldv_request_irq_81((unsigned int)adap->msix_info[0].vec,& t3_async_intr_handler,0UL,(char const *)(& adap->msix_info[0].desc),(void *)adap);
    
#line 1266 
    if (err != 0) 
#line 1267 
                  goto irq_err; else ;
    
#line 1269 
    err = request_msix_data_irqs(adap);
    
#line 1270 
    if (err != 0) {
      
#line 1271 
      ldv_free_irq_82((unsigned int)adap->msix_info[0].vec,(void *)adap);
      
#line 1272 
      goto irq_err;
    }
    else ;
  }
  else {
    int tmp_1;
    irq_handler_t tmp_2;
    
#line 1274 
    ;
    
#line 1274 
    ;
    
#line 1279 
    if ((adap->flags & 2UL) != 0UL) 
#line 1279 
                                    tmp_1 = 0; else 
#line 1279 
                                                    tmp_1 = 128;
    
#line 1274 
    tmp_2 = t3_intr_handler(adap,(int)adap->sge.qs[0].rspq.polling);
    
#line 1274 
    ;
    
#line 1274 
    err = ldv_request_irq_83((adap->pdev)->irq,tmp_2,(unsigned long)tmp_1,adap->name,(void *)adap);
    
#line 1274 
    if (err != 0) 
#line 1281 
                  goto irq_err; else ;
  }
  
#line 1283 
  enable_all_napi(adap);
  
#line 1284 
  t3_sge_start(adap);
  
#line 1285 
  t3_intr_enable(adap);
  
#line 1287 
  if (adap->params.rev > 3U && (adap->flags & 16UL) == 0UL) {
    int tmp_3;
    
#line 1287 
    tmp_3 = is_offload((struct adapter const *)adap);
    
#line 1287 
    if (tmp_3 != 0) {
      int tmp_4;
      
#line 1288 
      tmp_4 = init_tp_parity(adap);
      
#line 1288 
      if (tmp_4 == 0) 
#line 1289 
                      adap->flags |= 16UL; else ;
    }
    else ;
  }
  else ;
  
#line 1291 
  if ((adap->flags & 16UL) != 0UL) {
    
#line 1292 
    t3_write_reg(adap,1140U,83886080U);
    
#line 1294 
    t3_write_reg(adap,1136U,2143289343U);
  }
  else ;
  
#line 1297 
  if ((adap->flags & 8UL) == 0UL) {
    
#line 1298 
    int ret = bind_qsets(adap);
    
#line 1300 
    if (ret < 0) {
      
#line 1301 
      dev_err((struct device const *)(& (adap->pdev)->dev),"failed to bind qsets, err %d\n",ret);
      
#line 1302 
      t3_intr_disable(adap);
      
#line 1303 
      free_irq_resources(adap);
      
#line 1304 
      err = ret;
      
#line 1305 
      goto out;
    }
    else ;
    
#line 1307 
    adap->flags |= 8UL;
  }
  else ;
  out: 
#line 1310 
  ;
  
#line 1311 
  __retres = err;
  
#line 1311 
  goto return_label;
  irq_err: 
#line 1312 
  ;
  
#line 1313 
  dev_err((struct device const *)(& (adap->pdev)->dev),"request_irq failed, err %d\n",err);
  
#line 1314 
  goto out;
  return_label: 
#line 1314 
                return __retres;
}


#line 1320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void cxgb_down(struct adapter *adapter, int on_wq)
{
  
#line 1322 
  t3_sge_stop(adapter);
  
#line 1323 
  ldv_spin_lock_irq_84(& adapter->work_lock);
  
#line 1324 
  t3_intr_disable(adapter);
  
#line 1325 
  ldv_spin_unlock_irq_85(& adapter->work_lock);
  
#line 1327 
  free_irq_resources(adapter);
  
#line 1328 
  quiesce_rx(adapter);
  
#line 1329 
  t3_sge_stop(adapter);
  
#line 1330 
  if (on_wq == 0) 
#line 1331 
                  flush_workqueue(cxgb3_wq); else ;
  
#line 1332 
  return;
}


#line 1334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void schedule_chk_task(struct adapter *adap)
{
  unsigned int timeo;
  
#line 1338 
  if (adap->params.linkpoll_period != 0U) 
#line 1338 
                                          timeo = (adap->params.linkpoll_period * 250U) / 10U; else 
                                                                    
#line 1338 
                                                                    timeo = adap->params.stats_update_period * 250U;
  
#line 1341 
  if (timeo != 0U) 
#line 1342 
                   ldv_queue_delayed_work_86(cxgb3_wq,& adap->adap_check_task,(unsigned long)timeo); else ;
  
#line 1343 
  return;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int offload_open(struct net_device *dev)
{
  int __retres;
  int err;
  int tmp_1;
  unsigned int tmp_2;
  int tmp_3;
  
#line 1347 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1348 
  struct adapter *adapter = pi->adapter;
  
#line 1349 
  struct t3cdev *tdev = dev2t3cdev(dev);
  
#line 1350 
  int adap_up = (int)adapter->open_device_map & 3;
  
#line 1353 
  tmp_1 = test_and_set_bit(15L,(unsigned long volatile *)(& adapter->open_device_map));
  
#line 1353 
  if (tmp_1 != 0) {
    
#line 1354 
    __retres = 0;
    
#line 1354 
    goto return_label;
  }
  else ;
  
#line 1356 
  if (adap_up == 0) {
    
#line 1356 
    err = cxgb_up(adapter);
    
#line 1356 
    if (err < 0) 
#line 1357 
                 goto out; else ;
  }
  else ;
  
#line 1359 
  t3_tp_set_offload_mode(adapter,1);
  
#line 1360 
  tdev->lldev = adapter->port[0];
  
#line 1361 
  err = cxgb3_offload_activate(adapter);
  
#line 1362 
  if (err != 0) 
#line 1363 
                goto out; else ;
  
#line 1365 
  init_port_mtus(adapter);
  
#line 1367 
  if (adapter->params.rev == 0U) 
#line 1367 
                                 tmp_2 = (unsigned int)((unsigned short)(adapter->port[0])->mtu); else 
                                                                    
#line 1367 
                                                                    tmp_2 = 65535U;
  
#line 1366 
  ;
  
#line 1366 
  ;
  
#line 1366 
  ;
  
#line 1366 
  ;
  
#line 1366 
  t3_load_mtus(adapter,(unsigned short *)(& adapter->params.mtus),(unsigned short *)(& adapter->params.a_wnd),(unsigned short *)(& adapter->params.b_wnd),(unsigned short)((int)tmp_2));
  
#line 1370 
  init_smt(adapter);
  
#line 1372 
  tmp_3 = sysfs_create_group(& (tdev->lldev)->dev.kobj,(struct attribute_group const *)(& offload_attr_group));
  
#line 1372 
  if (tmp_3 != 0) {
    
#line 1373 
    struct _ddebug descriptor = {.modname = "cxgb3", .function = "offload_open", .filename = "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c", .format = "cannot create sysfs group\n", .lineno = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(18))))1373U, .flags = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))))0U};
    
#line 1373 
    if ((long)(((int)descriptor.flags & 1) != 0) != 0L) 
#line 1373 
                                                        __dynamic_dev_dbg(& descriptor,(struct device const *)(& dev->dev),"cannot create sysfs group\n"); else ;
  }
  else ;
  
#line 1376 
  cxgb3_add_clients(tdev);
  out: 
#line 1378 
  ;
  
#line 1380 
  if (err != 0) {
    
#line 1381 
    t3_tp_set_offload_mode(adapter,0);
    
#line 1382 
    set_bit(15L,(unsigned long volatile *)(& adapter->open_device_map));
    
#line 1383 
    cxgb3_set_dummy_ops(tdev);
  }
  else ;
  
#line 1385 
  __retres = err;
  return_label: 
#line 1385 
                return __retres;
}


#line 1388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int offload_close(struct t3cdev *tdev)
{
  int __retres;
  struct adapter *tmp;
  int tmp_0;
  {
    
#line 1390 
    struct t3cdev const *__mptr = (struct t3cdev const *)tdev;
    
#line 1390 
    tmp = (struct adapter *)__mptr;
  }
  
#line 1390 
  struct adapter *adapter = tmp;
  
#line 1391 
  struct t3c_data *td = *((struct t3c_data **)(& tdev->l4opt));
  
#line 1393 
  tmp_0 = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
  
#line 1393 
  if (tmp_0 == 0) {
    
#line 1394 
    __retres = 0;
    
#line 1394 
    goto return_label;
  }
  else ;
  
#line 1397 
  cxgb3_remove_clients(tdev);
  
#line 1399 
  sysfs_remove_group(& (tdev->lldev)->dev.kobj,(struct attribute_group const *)(& offload_attr_group));
  
#line 1402 
  ldv_flush_work_87(& td->tid_release_task);
  
#line 1404 
  tdev->lldev = (struct net_device *)0;
  
#line 1405 
  cxgb3_set_dummy_ops(tdev);
  
#line 1406 
  t3_tp_set_offload_mode(adapter,0);
  
#line 1407 
  set_bit(15L,(unsigned long volatile *)(& adapter->open_device_map));
  
#line 1409 
  if (adapter->open_device_map == 0UL) 
#line 1410 
                                       cxgb_down(adapter,0); else ;
  
#line 1412 
  cxgb3_offload_deactivate(adapter);
  
#line 1413 
  __retres = 0;
  return_label: 
#line 1413 
                return __retres;
}


#line 1416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_open(struct net_device *dev)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 1418 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1419 
  struct adapter *adapter = pi->adapter;
  
#line 1420 
  int other_ports = (int)adapter->open_device_map & 3;
  
#line 1423 
  if (adapter->open_device_map == 0UL) {
    
#line 1423 
    err = cxgb_up(adapter);
    
#line 1423 
    if (err < 0) {
      
#line 1424 
      __retres = err;
      
#line 1424 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1426 
  set_bit((long)pi->port_id,(unsigned long volatile *)(& adapter->open_device_map));
  
#line 1427 
  tmp_0 = is_offload((struct adapter const *)adapter);
  
#line 1427 
  if (tmp_0 != 0) {
    
#line 1427 
    if (ofld_disable == 0) {
      
#line 1428 
      err = offload_open(dev);
      
#line 1429 
      if (err != 0) 
#line 1430 
                    printk("\001"); else ;
    }
    else ;
  }
  else ;
  
#line 1433 
  netif_set_real_num_tx_queues(dev,(unsigned int)pi->nqsets);
  
#line 1434 
  err = netif_set_real_num_rx_queues(dev,(unsigned int)pi->nqsets);
  
#line 1435 
  if (err != 0) {
    
#line 1436 
    __retres = err;
    
#line 1436 
    goto return_label;
  }
  else ;
  
#line 1437 
  link_start(dev);
  
#line 1438 
  t3_port_intr_enable(adapter,(int)pi->port_id);
  
#line 1439 
  netif_tx_start_all_queues(dev);
  
#line 1440 
  if (other_ports == 0) 
#line 1441 
                        schedule_chk_task(adapter); else ;
  
#line 1443 
  cxgb3_event_notify(& adapter->tdev,3U,(unsigned int)pi->port_id);
  
#line 1444 
  __retres = 0;
  return_label: 
#line 1444 
                return __retres;
}


#line 1447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int __cxgb_close(struct net_device *dev, int on_wq)
{
  int __retres;
  
#line 1449 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1450 
  struct adapter *adapter = pi->adapter;
  
#line 1453 
  if (adapter->open_device_map == 0UL) {
    
#line 1454 
    __retres = 0;
    
#line 1454 
    goto return_label;
  }
  else ;
  
#line 1457 
  t3_xgm_intr_disable(adapter,(int)pi->port_id);
  
#line 1458 
  t3_read_reg(adapter,pi->mac.offset + 2156U);
  
#line 1460 
  t3_port_intr_disable(adapter,(int)pi->port_id);
  
#line 1461 
  netif_tx_stop_all_queues(dev);
  
#line 1462 
  (*((pi->phy.ops)->power_down))(& pi->phy,1);
  
#line 1463 
  netif_carrier_off(dev);
  
#line 1464 
  t3_mac_disable(& pi->mac,3);
  
#line 1466 
  ldv_spin_lock_irq_88(& adapter->work_lock);
  
#line 1467 
  set_bit((long)pi->port_id,(unsigned long volatile *)(& adapter->open_device_map));
  
#line 1468 
  ldv_spin_unlock_irq_89(& adapter->work_lock);
  
#line 1470 
  if ((adapter->open_device_map & 3UL) == 0UL) 
#line 1471 
                                               cancel_delayed_work_sync(& adapter->adap_check_task); else ;
  
#line 1473 
  if (adapter->open_device_map == 0UL) 
#line 1474 
                                       cxgb_down(adapter,on_wq); else ;
  
#line 1476 
  cxgb3_event_notify(& adapter->tdev,2U,(unsigned int)pi->port_id);
  
#line 1477 
  __retres = 0;
  return_label: 
#line 1477 
                return __retres;
}


#line 1480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_close(struct net_device *dev)
{
  int tmp;
  
#line 1482 
  tmp = __cxgb_close(dev,0);
  
#line 1482 
  return tmp;
}


#line 1485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct net_device_stats *cxgb_get_stats(struct net_device *dev)
{
  struct mac_stats const *pstats;
  
#line 1487 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1488 
  struct adapter *adapter = pi->adapter;
  
#line 1489 
  struct net_device_stats *ns = & pi->netstats;
  
#line 1492 
  ldv_spin_lock_90(& adapter->stats_lock);
  
#line 1493 
  pstats = t3_mac_update_stats(& pi->mac);
  
#line 1494 
  ldv_spin_unlock_91(& adapter->stats_lock);
  
#line 1496 
  ns->tx_bytes = (unsigned long)pstats->tx_octets;
  
#line 1497 
  ns->tx_packets = (unsigned long)pstats->tx_frames;
  
#line 1498 
  ns->rx_bytes = (unsigned long)pstats->rx_octets;
  
#line 1499 
  ns->rx_packets = (unsigned long)pstats->rx_frames;
  
#line 1500 
  ns->multicast = (unsigned long)pstats->rx_mcast_frames;
  
#line 1502 
  ns->tx_errors = (unsigned long)pstats->tx_underrun;
  
#line 1503 
  ns->rx_errors = (unsigned long)(((((pstats->rx_symbol_errs + pstats->rx_fcs_errs) + pstats->rx_too_long) + pstats->rx_jabber) + pstats->rx_short) + (unsigned long long)pstats->rx_fifo_ovfl);
  
#line 1508 
  ns->rx_length_errors = (unsigned long)(pstats->rx_jabber + pstats->rx_too_long);
  
#line 1509 
  ns->rx_over_errors = 0UL;
  
#line 1510 
  ns->rx_crc_errors = (unsigned long)pstats->rx_fcs_errs;
  
#line 1511 
  ns->rx_frame_errors = (unsigned long)pstats->rx_symbol_errs;
  
#line 1512 
  ns->rx_fifo_errors = pstats->rx_fifo_ovfl;
  
#line 1513 
  ns->rx_missed_errors = (unsigned long)pstats->rx_cong_drops;
  
#line 1516 
  ns->tx_aborted_errors = 0UL;
  
#line 1517 
  ns->tx_carrier_errors = 0UL;
  
#line 1518 
  ns->tx_fifo_errors = (unsigned long)pstats->tx_underrun;
  
#line 1519 
  ns->tx_heartbeat_errors = 0UL;
  
#line 1520 
  ns->tx_window_errors = 0UL;
  
#line 1521 
  return ns;
}


#line 1524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static u32 get_msglevel(struct net_device *dev)
{
  u32 __retres;
  
#line 1526 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1527 
  struct adapter *adapter = pi->adapter;
  
#line 1529 
  __retres = (unsigned int)adapter->msg_enable;
  
#line 1529 
  return __retres;
}


#line 1532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void set_msglevel(struct net_device *dev, u32 val)
{
  
#line 1534 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1535 
  struct adapter *adapter = pi->adapter;
  
#line 1537 
  adapter->msg_enable = (int)val;
  
#line 1538 
  return;
}


#line 1540  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static char const stats_strings[45U][32U] = {{(char)'T', (char)'x', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'O', (char)'K', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'O', (char)'K', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'M', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'O', (char)'K', (char)'\000'}, {(char)'T', (char)'x', (char)'B', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'O', (char)'K', (char)'\000'}, {(char)'T', (char)'x', (char)'P', (char)'a', (char)'u', (char)'s', (char)'e', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'U', (char)'n', (char)'d', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'E', (char)'x', (char)'t', (char)'U', (char)'n', (char)'d', (char)'e', (char)'r', (char)'r', (char)'u', (char)'n', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'6', (char)'4', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'6', (char)'5', (char)'T', (char)'o', (char)'1', (char)'2', (char)'7', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'1', (char)'2', (char)'8', (char)'T', (char)'o', (char)'2', (char)'5', (char)'5', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'2', (char)'5', (char)'6', (char)'T', (char)'o', (char)'5', (char)'1', (char)'1', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'5', (char)'1', (char)'2', (char)'T', (char)'o', (char)'1', (char)'0', (char)'2', (char)'3', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'1', (char)'0', (char)'2', (char)'4', (char)'T', (char)'o', (char)'1', (char)'5', (char)'1', (char)'8', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'1', (char)'5', (char)'1', (char)'9', (char)'T', (char)'o', (char)'M', (char)'a', (char)'x', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'O', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'O', (char)'K', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'O', (char)'K', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'M', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'O', (char)'K', (char)'\000'}, {(char)'R', (char)'x', (char)'B', (char)'r', (char)'o', (char)'a', (char)'d', (char)'c', (char)'a', (char)'s', (char)'t', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'O', (char)'K', (char)'\000'}, {(char)'R', (char)'x', (char)'P', (char)'a', (char)'u', (char)'s', (char)'e', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'C', (char)'S', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'S', (char)'y', (char)'m', (char)'b', (char)'o', (char)'l', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'S', (char)'h', (char)'o', (char)'r', (char)'t', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'J', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'L', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'I', (char)'F', (char)'O', (char)'o', (char)'v', (char)'e', (char)'r', (char)'f', (char)'l', (char)'o', (char)'w', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'6', (char)'4', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'6', (char)'5', (char)'T', (char)'o', (char)'1', (char)'2', (char)'7', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'1', (char)'2', (char)'8', (char)'T', (char)'o', (char)'2', (char)'5', (char)'5', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'2', (char)'5', (char)'6', (char)'T', (char)'o', (char)'5', (char)'1', (char)'1', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'5', (char)'1', (char)'2', (char)'T', (char)'o', (char)'1', (char)'0', (char)'2', (char)'3', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'1', (char)'0', (char)'2', (char)'4', (char)'T', (char)'o', (char)'1', (char)'5', (char)'1', (char)'8', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'F', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'1', (char)'5', (char)'1', (char)'9', (char)'T', (char)'o', (char)'M', (char)'a', (char)'x', (char)' ', (char)' ', (char)'\000'}, {(char)'P', (char)'h', (char)'y', (char)'F', (char)'I', (char)'F', (char)'O', (char)'E', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'S', (char)'O', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'V', (char)'L', (char)'A', (char)'N', (char)'e', (char)'x', (char)'t', (char)'r', (char)'a', (char)'c', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'V', (char)'L', (char)'A', (char)'N', (char)'i', (char)'n', (char)'s', (char)'e', (char)'r', (char)'t', (char)'i', (char)'o', (char)'n', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'T', (char)'x', (char)'C', (char)'s', (char)'u', (char)'m', (char)'O', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'C', (char)'s', (char)'u', (char)'m', (char)'G', (char)'o', (char)'o', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'L', (char)'r', (char)'o', (char)'A', (char)'g', (char)'g', (char)'r', (char)'e', (char)'g', (char)'a', (char)'t', (char)'e', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'L', (char)'r', (char)'o', (char)'F', (char)'l', (char)'u', (char)'s', (char)'h', (char)'e', (char)'d', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'L', (char)'r', (char)'o', (char)'N', (char)'o', (char)'D', (char)'e', (char)'s', (char)'c', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'R', (char)'x', (char)'D', (char)'r', (char)'o', (char)'p', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'C', (char)'h', (char)'e', (char)'c', (char)'k', (char)'T', (char)'X', (char)'E', (char)'n', (char)'T', (char)'o', (char)'g', (char)'g', (char)'l', (char)'e', (char)'d', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'C', (char)'h', (char)'e', (char)'c', (char)'k', (char)'R', (char)'e', (char)'s', (char)'e', (char)'t', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}, {(char)'L', (char)'i', (char)'n', (char)'k', (char)'F', (char)'a', (char)'u', (char)'l', (char)'t', (char)'s', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'\000'}};

#line 1594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 1596 
  switch (sset) {
    case 1: 
#line 1597 
    ;
    
#line 1598 
    __retres = 45;
    
#line 1598 
    goto return_label;
    default: 
#line 1599 
    ;
    
#line 1600 
    __retres = -95;
    
#line 1600 
    goto return_label;
  }
  return_label: 
#line 1596 
                return __retres;
}


#line 1606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 1608 
  __retres = 3072;
  
#line 1608 
  return __retres;
}


#line 1611  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int get_eeprom_len(struct net_device *dev)
{
  int __retres;
  
#line 1613 
  __retres = 8192;
  
#line 1613 
  return __retres;
}


#line 1616  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 1618 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1619 
  struct adapter *adapter = pi->adapter;
  
#line 1620 
  u32 fw_vers = 0U;
  
#line 1621 
  u32 tp_vers = 0U;
  
#line 1623 
  ldv_spin_lock_92(& adapter->stats_lock);
  
#line 1624 
  t3_get_fw_version(adapter,& fw_vers);
  
#line 1625 
  t3_get_tp_version(adapter,& tp_vers);
  
#line 1626 
  ldv_spin_unlock_93(& adapter->stats_lock);
  
#line 1628 
  strlcpy((char *)(& info->driver),"cxgb3",32UL);
  
#line 1629 
  strlcpy((char *)(& info->version),"1.1.5-ko",32UL);
  
#line 1630 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 1630 
  ;
  
#line 1630 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 1632 
  if (fw_vers != 0U) {
    char *tmp_1;
    
#line 1633 
    ;
    
#line 1633 
    ;
    
#line 1633 
    ;
    
#line 1633 
    ;
    
#line 1633 
    ;
    
#line 1633 
    ;
    
#line 1634 
    if (fw_vers >> 28 != 0U) 
#line 1634 
                             tmp_1 = (char *)"T"; else 
#line 1634 
                                                       tmp_1 = (char *)"N";
    
#line 1633 
    ;
    
#line 1633 
    snprintf((char *)(& info->fw_version),32UL,"%s %u.%u.%u TP %u.%u.%u",tmp_1,(fw_vers >> 16) & 4095U,(fw_vers >> 8) & 255U,fw_vers & 255U,(tp_vers >> 16) & 255U,(tp_vers >> 8) & 255U,tp_vers & 255U);
  }
  else ;
  
#line 1642 
  return;
}


#line 1644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  
#line 1646 
  if (stringset == 1U) 
#line 1647 
                       memcpy((void *)data,(void const *)(& stats_strings),1440UL); else ;
  
#line 1648 
  return;
}


#line 1650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static unsigned long collect_sge_port_stats(struct adapter *adapter, struct port_info *p, int idx)
{
  int i;
  
#line 1654 
  unsigned long tot = 0UL;
  
#line 1656 
  i = (int)p->first_qset;
  
#line 1656 
  goto ldv_50989;
  ldv_50988: 
#line 1657 
  ;
  
#line 1657 
  tot = adapter->sge.qs[i].port_stats[idx] + tot;
  
#line 1656 
  i += 1;
  ldv_50989: 
#line 1657 
  ;
  
#line 1656 
  if ((int)p->first_qset + (int)p->nqsets > i) 
#line 1658 
                                               goto ldv_50988; else 
#line 1661 
                                                                    goto ldv_50990;
  ldv_50990: 
#line 1662 
  ;
  
#line 1658 
  return tot;
}


#line 1661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  struct mac_stats const *s;
  u64 *tmp_0;
  u64 *tmp_1;
  u64 *tmp_2;
  u64 *tmp_3;
  u64 *tmp_4;
  u64 *tmp_5;
  u64 *tmp_6;
  u64 *tmp_7;
  u64 *tmp_8;
  u64 *tmp_9;
  u64 *tmp_10;
  u64 *tmp_11;
  u64 *tmp_12;
  u64 *tmp_13;
  u64 *tmp_14;
  u64 *tmp_15;
  u64 *tmp_16;
  u64 *tmp_17;
  u64 *tmp_18;
  u64 *tmp_19;
  u64 *tmp_20;
  u64 *tmp_21;
  u64 *tmp_22;
  u64 *tmp_23;
  u64 *tmp_24;
  u64 *tmp_25;
  u64 *tmp_26;
  u64 *tmp_27;
  u64 *tmp_28;
  u64 *tmp_29;
  u64 *tmp_30;
  u64 *tmp_31;
  u64 *tmp_32;
  u64 *tmp_33;
  u64 *tmp_35;
  u64 *tmp_37;
  u64 *tmp_39;
  u64 *tmp_41;
  u64 *tmp_43;
  u64 *tmp_44;
  u64 *tmp_45;
  u64 *tmp_46;
  u64 *tmp_47;
  u64 *tmp_48;
  u64 *tmp_49;
  
#line 1664 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1665 
  struct adapter *adapter = pi->adapter;
  
#line 1668 
  ldv_spin_lock_94(& adapter->stats_lock);
  
#line 1669 
  s = t3_mac_update_stats(& pi->mac);
  
#line 1670 
  ldv_spin_unlock_95(& adapter->stats_lock);
  
#line 1672 
  tmp_0 = data;
  
#line 1672 
  data += 1;
  
#line 1672 
  *tmp_0 = s->tx_octets;
  
#line 1673 
  tmp_1 = data;
  
#line 1673 
  data += 1;
  
#line 1673 
  *tmp_1 = s->tx_frames;
  
#line 1674 
  tmp_2 = data;
  
#line 1674 
  data += 1;
  
#line 1674 
  *tmp_2 = s->tx_mcast_frames;
  
#line 1675 
  tmp_3 = data;
  
#line 1675 
  data += 1;
  
#line 1675 
  *tmp_3 = s->tx_bcast_frames;
  
#line 1676 
  tmp_4 = data;
  
#line 1676 
  data += 1;
  
#line 1676 
  *tmp_4 = s->tx_pause;
  
#line 1677 
  tmp_5 = data;
  
#line 1677 
  data += 1;
  
#line 1677 
  *tmp_5 = s->tx_underrun;
  
#line 1678 
  tmp_6 = data;
  
#line 1678 
  data += 1;
  
#line 1678 
  *tmp_6 = (unsigned long long)s->tx_fifo_urun;
  
#line 1680 
  tmp_7 = data;
  
#line 1680 
  data += 1;
  
#line 1680 
  *tmp_7 = s->tx_frames_64;
  
#line 1681 
  tmp_8 = data;
  
#line 1681 
  data += 1;
  
#line 1681 
  *tmp_8 = s->tx_frames_65_127;
  
#line 1682 
  tmp_9 = data;
  
#line 1682 
  data += 1;
  
#line 1682 
  *tmp_9 = s->tx_frames_128_255;
  
#line 1683 
  tmp_10 = data;
  
#line 1683 
  data += 1;
  
#line 1683 
  *tmp_10 = s->tx_frames_256_511;
  
#line 1684 
  tmp_11 = data;
  
#line 1684 
  data += 1;
  
#line 1684 
  *tmp_11 = s->tx_frames_512_1023;
  
#line 1685 
  tmp_12 = data;
  
#line 1685 
  data += 1;
  
#line 1685 
  *tmp_12 = s->tx_frames_1024_1518;
  
#line 1686 
  tmp_13 = data;
  
#line 1686 
  data += 1;
  
#line 1686 
  *tmp_13 = s->tx_frames_1519_max;
  
#line 1688 
  tmp_14 = data;
  
#line 1688 
  data += 1;
  
#line 1688 
  *tmp_14 = s->rx_octets;
  
#line 1689 
  tmp_15 = data;
  
#line 1689 
  data += 1;
  
#line 1689 
  *tmp_15 = s->rx_frames;
  
#line 1690 
  tmp_16 = data;
  
#line 1690 
  data += 1;
  
#line 1690 
  *tmp_16 = s->rx_mcast_frames;
  
#line 1691 
  tmp_17 = data;
  
#line 1691 
  data += 1;
  
#line 1691 
  *tmp_17 = s->rx_bcast_frames;
  
#line 1692 
  tmp_18 = data;
  
#line 1692 
  data += 1;
  
#line 1692 
  *tmp_18 = s->rx_pause;
  
#line 1693 
  tmp_19 = data;
  
#line 1693 
  data += 1;
  
#line 1693 
  *tmp_19 = s->rx_fcs_errs;
  
#line 1694 
  tmp_20 = data;
  
#line 1694 
  data += 1;
  
#line 1694 
  *tmp_20 = s->rx_symbol_errs;
  
#line 1695 
  tmp_21 = data;
  
#line 1695 
  data += 1;
  
#line 1695 
  *tmp_21 = s->rx_short;
  
#line 1696 
  tmp_22 = data;
  
#line 1696 
  data += 1;
  
#line 1696 
  *tmp_22 = s->rx_jabber;
  
#line 1697 
  tmp_23 = data;
  
#line 1697 
  data += 1;
  
#line 1697 
  *tmp_23 = s->rx_too_long;
  
#line 1698 
  tmp_24 = data;
  
#line 1698 
  data += 1;
  
#line 1698 
  *tmp_24 = (unsigned long long)s->rx_fifo_ovfl;
  
#line 1700 
  tmp_25 = data;
  
#line 1700 
  data += 1;
  
#line 1700 
  *tmp_25 = s->rx_frames_64;
  
#line 1701 
  tmp_26 = data;
  
#line 1701 
  data += 1;
  
#line 1701 
  *tmp_26 = s->rx_frames_65_127;
  
#line 1702 
  tmp_27 = data;
  
#line 1702 
  data += 1;
  
#line 1702 
  *tmp_27 = s->rx_frames_128_255;
  
#line 1703 
  tmp_28 = data;
  
#line 1703 
  data += 1;
  
#line 1703 
  *tmp_28 = s->rx_frames_256_511;
  
#line 1704 
  tmp_29 = data;
  
#line 1704 
  data += 1;
  
#line 1704 
  *tmp_29 = s->rx_frames_512_1023;
  
#line 1705 
  tmp_30 = data;
  
#line 1705 
  data += 1;
  
#line 1705 
  *tmp_30 = s->rx_frames_1024_1518;
  
#line 1706 
  tmp_31 = data;
  
#line 1706 
  data += 1;
  
#line 1706 
  *tmp_31 = s->rx_frames_1519_max;
  
#line 1708 
  tmp_32 = data;
  
#line 1708 
  data += 1;
  
#line 1708 
  *tmp_32 = (unsigned long long)pi->phy.fifo_errors;
  
#line 1710 
  tmp_33 = data;
  
#line 1710 
  data += 1;
  
#line 1710 
  *tmp_33 = (u64)collect_sge_port_stats(adapter,pi,0);
  
#line 1711 
  tmp_35 = data;
  
#line 1711 
  data += 1;
  
#line 1711 
  *tmp_35 = (u64)collect_sge_port_stats(adapter,pi,3);
  
#line 1712 
  tmp_37 = data;
  
#line 1712 
  data += 1;
  
#line 1712 
  *tmp_37 = (u64)collect_sge_port_stats(adapter,pi,4);
  
#line 1713 
  tmp_39 = data;
  
#line 1713 
  data += 1;
  
#line 1713 
  *tmp_39 = (u64)collect_sge_port_stats(adapter,pi,2);
  
#line 1714 
  tmp_41 = data;
  
#line 1714 
  data += 1;
  
#line 1714 
  *tmp_41 = (u64)collect_sge_port_stats(adapter,pi,1);
  
#line 1715 
  tmp_43 = data;
  
#line 1715 
  data += 1;
  
#line 1715 
  *tmp_43 = 0ULL;
  
#line 1716 
  tmp_44 = data;
  
#line 1716 
  data += 1;
  
#line 1716 
  *tmp_44 = 0ULL;
  
#line 1717 
  tmp_45 = data;
  
#line 1717 
  data += 1;
  
#line 1717 
  *tmp_45 = 0ULL;
  
#line 1718 
  tmp_46 = data;
  
#line 1718 
  data += 1;
  
#line 1718 
  *tmp_46 = s->rx_cong_drops;
  
#line 1720 
  tmp_47 = data;
  
#line 1720 
  data += 1;
  
#line 1720 
  *tmp_47 = (unsigned long long)s->num_toggled;
  
#line 1721 
  tmp_48 = data;
  
#line 1721 
  data += 1;
  
#line 1721 
  *tmp_48 = (unsigned long long)s->num_resets;
  
#line 1723 
  tmp_49 = data;
  
#line 1723 
  data += 1;
  
#line 1723 
  *tmp_49 = (unsigned long long)s->link_faults;
  
#line 1724 
  return;
}


#line 1726  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
__inline static void reg_block_dump(struct adapter *ap, void *buf, unsigned int start, unsigned int end)
{
  u32 *tmp;
  
#line 1729 
  u32 *p = (u32 *)(buf + start);
  
#line 1731 
  goto ldv_51007;
  ldv_51006: 
#line 1732 
  ;
  
#line 1732 
  tmp = p;
  
#line 1732 
  p += 1;
  
#line 1732 
  *tmp = t3_read_reg(ap,start);
  
#line 1731 
  start += 4U;
  ldv_51007: 
#line 1732 
  ;
  
#line 1731 
  if (start <= end) 
#line 1733 
                    goto ldv_51006; else 
#line 1736 
                                         goto ldv_51008;
  ldv_51008: 
#line 1737 
  ;
  
#line 1738 
  return;
}


#line 1735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_regs(struct net_device *dev, struct ethtool_regs *regs, void *buf)
{
  unsigned int tmp_0;
  
#line 1738 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1739 
  struct adapter *ap = pi->adapter;
  
#line 1747 
  tmp_0 = is_pcie((struct adapter const *)ap);
  
#line 1747 
  regs->version = ((ap->params.rev << 10) | (tmp_0 << 31)) | 3U;
  
#line 1754 
  memset(buf,0,3072UL);
  
#line 1755 
  reg_block_dump(ap,buf,0U,48U);
  
#line 1756 
  reg_block_dump(ap,buf,56U,1344U);
  
#line 1757 
  reg_block_dump(ap,buf,1408U,1568U);
  
#line 1758 
  reg_block_dump(ap,buf,1600U,1628U);
  
#line 1759 
  reg_block_dump(ap,buf,1632U,2300U);
  
#line 1760 
  reg_block_dump(ap,buf,2444U,2812U);
  
#line 1762 
  reg_block_dump(ap,buf,2956U,2988U);
  
#line 1763 
  return;
}


#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int restart_autoneg(struct net_device *dev)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 1768 
  struct port_info *p = netdev_priv((struct net_device const *)dev);
  
#line 1770 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 1770 
  if (tmp_0) 
#line 1770 
             tmp_1 = 0; else 
#line 1770 
                             tmp_1 = 1;
  
#line 1770 
  if (tmp_1) {
    
#line 1771 
    __retres = -11;
    
#line 1771 
    goto return_label;
  }
  else ;
  
#line 1772 
  if ((unsigned int)p->link_config.autoneg != 1U) {
    
#line 1773 
    __retres = -22;
    
#line 1773 
    goto return_label;
  }
  else ;
  
#line 1774 
  (*((p->phy.ops)->autoneg_restart))(& p->phy);
  
#line 1775 
  __retres = 0;
  return_label: 
#line 1775 
                return __retres;
}


#line 1778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int set_phys_id(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  
#line 1781 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1782 
  struct adapter *adapter = pi->adapter;
  
#line 1784 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 1785 
    ;
    
#line 1786 
    __retres = 1;
    
#line 1786 
    goto return_label;
    case (unsigned int)3: 
#line 1788 
    ;
    
#line 1789 
    t3_set_reg_field(adapter,208U,1U,0U);
    
#line 1790 
    goto ldv_51028;
    case (unsigned int)2: 
#line 1792 
    ;
    case (unsigned int)0: 
#line 1793 
    ;
    
#line 1794 
    t3_set_reg_field(adapter,208U,1U,1U);
  }
  ldv_51028: 
#line 1798 
  ;
  
#line 1798 
  __retres = 0;
  return_label: 
#line 1798 
                return __retres;
}


#line 1801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  bool tmp_0;
  
#line 1803 
  struct port_info *p = netdev_priv((struct net_device const *)dev);
  
#line 1805 
  cmd->supported = p->link_config.supported;
  
#line 1806 
  cmd->advertising = p->link_config.advertising;
  
#line 1808 
  tmp_0 = netif_carrier_ok((struct net_device const *)dev);
  
#line 1808 
  if ((int)tmp_0 != 0) {
    
#line 1809 
    ethtool_cmd_speed_set(cmd,(unsigned int)p->link_config.speed);
    
#line 1810 
    cmd->duplex = p->link_config.duplex;
  }
  else {
    
#line 1812 
    ethtool_cmd_speed_set(cmd,4294967295U);
    
#line 1813 
    cmd->duplex = (unsigned char)255U;
  }
  
#line 1816 
  if ((cmd->supported & 128U) != 0U) 
#line 1816 
                                     cmd->port = (unsigned char)0U; else 
                                                                    
#line 1816 
                                                                    cmd->port = (unsigned char)3U;
  
#line 1817 
  cmd->phy_address = (unsigned char)p->phy.mdio.prtad;
  
#line 1818 
  cmd->transceiver = (unsigned char)1U;
  
#line 1819 
  cmd->autoneg = p->link_config.autoneg;
  
#line 1820 
  cmd->maxtxpkt = 0U;
  
#line 1821 
  cmd->maxrxpkt = 0U;
  
#line 1822 
  __retres = 0;
  
#line 1822 
  return __retres;
}


#line 1825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int speed_duplex_to_caps(int speed, int duplex)
{
  
#line 1827 
  int cap = 0;
  
#line 1829 
  switch (speed) {
    case 10: 
#line 1830 
    ;
    
#line 1831 
    if (duplex == 1) 
#line 1832 
                     cap = 2; else 
#line 1834 
                                   cap = 1;
    
#line 1835 
    goto ldv_51042;
    case 100: 
#line 1836 
    ;
    
#line 1837 
    if (duplex == 1) 
#line 1838 
                     cap = 8; else 
#line 1840 
                                   cap = 4;
    
#line 1841 
    goto ldv_51042;
    case 1000: 
#line 1842 
    ;
    
#line 1843 
    if (duplex == 1) 
#line 1844 
                     cap = 32; else 
#line 1846 
                                    cap = 16;
    
#line 1847 
    goto ldv_51042;
    case 10000: 
#line 1848 
    ;
    
#line 1849 
    if (duplex == 1) 
#line 1850 
                     cap = 4096; else ;
  }
  ldv_51042: 
#line 1852 
  ;
  
#line 1852 
  return cap;
}


#line 1860  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  bool tmp_4;
  
#line 1862 
  struct port_info *p = netdev_priv((struct net_device const *)dev);
  
#line 1863 
  struct link_config *lc = & p->link_config;
  
#line 1865 
  if ((lc->supported & 64U) == 0U) {
    
#line 1870 
    if ((unsigned int)cmd->autoneg == 0U) {
      
#line 1871 
      u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
      
#line 1872 
      int cap = speed_duplex_to_caps((int)speed,(int)cmd->duplex);
      
#line 1873 
      if ((lc->supported & (unsigned int)cap) != 0U) {
        
#line 1874 
        __retres = 0;
        
#line 1874 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 1876 
    __retres = -22;
    
#line 1876 
    goto return_label;
  }
  else ;
  
#line 1879 
  if ((unsigned int)cmd->autoneg == 0U) {
    
#line 1880 
    u32 speed_0 = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
    
#line 1881 
    int cap_0 = speed_duplex_to_caps((int)speed_0,(int)cmd->duplex);
    
#line 1883 
    if ((lc->supported & (unsigned int)cap_0) == 0U || speed_0 == 1000U) {
      
#line 1884 
      __retres = -22;
      
#line 1884 
      goto return_label;
    }
    else ;
    
#line 1885 
    lc->requested_speed = (unsigned short)speed_0;
    
#line 1886 
    lc->requested_duplex = cmd->duplex;
    
#line 1887 
    lc->advertising = 0U;
  }
  else {
    
#line 1889 
    cmd->advertising &= 4159U;
    
#line 1890 
    cmd->advertising &= lc->supported;
    
#line 1891 
    if (cmd->advertising == 0U) {
      
#line 1892 
      __retres = -22;
      
#line 1892 
      goto return_label;
    }
    else ;
    
#line 1893 
    lc->requested_speed = (unsigned short)65535U;
    
#line 1894 
    lc->requested_duplex = (unsigned char)255U;
    
#line 1895 
    lc->advertising = cmd->advertising | 64U;
  }
  
#line 1897 
  lc->autoneg = cmd->autoneg;
  
#line 1898 
  tmp_4 = netif_running((struct net_device const *)dev);
  
#line 1898 
  if ((int)tmp_4 != 0) 
#line 1899 
                       t3_link_start(& p->phy,& p->mac,lc); else ;
  
#line 1900 
  __retres = 0;
  return_label: 
#line 1900 
                return __retres;
}


#line 1903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)
{
  
#line 1906 
  struct port_info *p = netdev_priv((struct net_device const *)dev);
  
#line 1908 
  epause->autoneg = (unsigned int)(((int)p->link_config.requested_fc & 4) != 0);
  
#line 1909 
  epause->rx_pause = (unsigned int)(((int)p->link_config.fc & 1) != 0);
  
#line 1910 
  epause->tx_pause = (unsigned int)(((int)p->link_config.fc & 2) != 0);
  
#line 1911 
  return;
}


#line 1913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)
{
  int __retres;
  
#line 1916 
  struct port_info *p = netdev_priv((struct net_device const *)dev);
  
#line 1917 
  struct link_config *lc = & p->link_config;
  
#line 1919 
  if (epause->autoneg == 0U) 
#line 1920 
                             lc->requested_fc = (unsigned char)0U;
  else 
    
#line 1921 
    if ((lc->supported & 64U) != 0U) 
#line 1922 
                                     lc->requested_fc = (unsigned char)4U;
    else {
      
#line 1924 
      __retres = -22;
      
#line 1924 
      goto return_label;
    }
  
#line 1926 
  if (epause->rx_pause != 0U) 
#line 1927 
                              lc->requested_fc = (unsigned char)((unsigned int)lc->requested_fc | 1U); else ;
  
#line 1928 
  if (epause->tx_pause != 0U) 
#line 1929 
                              lc->requested_fc = (unsigned char)((unsigned int)lc->requested_fc | 2U); else ;
  
#line 1930 
  if ((unsigned int)lc->autoneg == 1U) {
    bool tmp_0;
    
#line 1931 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 1931 
    if ((int)tmp_0 != 0) 
#line 1932 
                         t3_link_start(& p->phy,& p->mac,lc); else ;
  }
  else {
    bool tmp_1;
    
#line 1934 
    lc->fc = (unsigned char)((unsigned int)lc->requested_fc & 3U);
    
#line 1935 
    tmp_1 = netif_running((struct net_device const *)dev);
    
#line 1935 
    if ((int)tmp_1 != 0) 
#line 1936 
                         t3_mac_set_speed_duplex_fc(& p->mac,-1,-1,(int)lc->fc); else ;
  }
  
#line 1938 
  __retres = 0;
  return_label: 
#line 1938 
                return __retres;
}


#line 1941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_sge_param(struct net_device *dev, struct ethtool_ringparam *e)
{
  
#line 1943 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1944 
  struct adapter *adapter = pi->adapter;
  
#line 1945 
  struct qset_params const *q = (struct qset_params const *)(& adapter->params.sge.qset[(int)pi->first_qset]);
  
#line 1947 
  e->rx_max_pending = 16384U;
  
#line 1948 
  e->rx_jumbo_max_pending = 16384U;
  
#line 1949 
  e->tx_max_pending = 16384U;
  
#line 1951 
  e->rx_pending = q->fl_size;
  
#line 1952 
  e->rx_mini_pending = q->rspq_size;
  
#line 1953 
  e->rx_jumbo_pending = q->jumbo_size;
  
#line 1954 
  e->tx_pending = q->txq_size[0];
  
#line 1955 
  return;
}


#line 1957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int set_sge_param(struct net_device *dev, struct ethtool_ringparam *e)
{
  int __retres;
  struct qset_params *q;
  int i;
  
#line 1959 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1960 
  struct adapter *adapter = pi->adapter;
  
#line 1964 
  if (((((((e->rx_pending > 16384U || e->rx_jumbo_pending > 16384U) || e->tx_pending > 16384U) || e->rx_mini_pending > 16384U) || e->rx_mini_pending <= 31U) || e->rx_pending <= 31U) || e->rx_jumbo_pending <= 31U) || e->tx_pending < adapter->params.nports * 4U) {
    
#line 1972 
    __retres = -22;
    
#line 1972 
    goto return_label;
  }
  else ;
  
#line 1974 
  if ((adapter->flags & 1UL) != 0UL) {
    
#line 1975 
    __retres = -16;
    
#line 1975 
    goto return_label;
  }
  else ;
  
#line 1977 
  q = & adapter->params.sge.qset[(int)pi->first_qset];
  
#line 1978 
  i = 0;
  
#line 1978 
  goto ldv_51083;
  ldv_51082: 
#line 1979 
  ;
  
#line 1979 
  q->rspq_size = e->rx_mini_pending;
  
#line 1980 
  q->fl_size = e->rx_pending;
  
#line 1981 
  q->jumbo_size = e->rx_jumbo_pending;
  
#line 1982 
  q->txq_size[0] = e->tx_pending;
  
#line 1983 
  q->txq_size[1] = e->tx_pending;
  
#line 1984 
  q->txq_size[2] = e->tx_pending;
  
#line 1978 
  i += 1;
  
#line 1978 
  q += 1;
  ldv_51083: 
#line 1979 
  ;
  
#line 1978 
  if ((int)pi->nqsets > i) 
#line 1980 
                           goto ldv_51082; else 
#line 1983 
                                                goto ldv_51084;
  ldv_51084: 
#line 1984 
  ;
  
#line 1986 
  __retres = 0;
  return_label: 
#line 1986 
                return __retres;
}


#line 1989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int set_coalesce(struct net_device *dev, struct ethtool_coalesce *c)
{
  int __retres;
  struct qset_params *qsp;
  struct sge_qset *qs;
  int i;
  
#line 1991 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 1992 
  struct adapter *adapter = pi->adapter;
  
#line 1997 
  if (c->rx_coalesce_usecs * 10U > 8191U) {
    
#line 1998 
    __retres = -22;
    
#line 1998 
    goto return_label;
  }
  else ;
  
#line 2000 
  i = 0;
  
#line 2000 
  goto ldv_51095;
  ldv_51094: 
#line 2001 
  ;
  
#line 2001 
  qsp = & adapter->params.sge.qset[i];
  
#line 2002 
  qs = & adapter->sge.qs[i];
  
#line 2003 
  qsp->coalesce_usecs = c->rx_coalesce_usecs;
  
#line 2004 
  t3_update_qset_coalesce(qs,(struct qset_params const *)qsp);
  
#line 2000 
  i += 1;
  ldv_51095: 
#line 2001 
  ;
  
#line 2000 
  if ((int)pi->nqsets > i) 
#line 2002 
                           goto ldv_51094; else 
#line 2005 
                                                goto ldv_51096;
  ldv_51096: 
#line 2006 
  ;
  
#line 2007 
  __retres = 0;
  return_label: 
#line 2007 
                return __retres;
}


#line 2010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int get_coalesce(struct net_device *dev, struct ethtool_coalesce *c)
{
  int __retres;
  
#line 2012 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2013 
  struct adapter *adapter = pi->adapter;
  
#line 2014 
  struct qset_params *q = (struct qset_params *)(& adapter->params.sge.qset);
  
#line 2016 
  c->rx_coalesce_usecs = q->coalesce_usecs;
  
#line 2017 
  __retres = 0;
  
#line 2017 
  return __retres;
}


#line 2020  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int get_eeprom(struct net_device *dev, struct ethtool_eeprom *e, u8 *data)
{
  int __retres;
  int i;
  
#line 2023 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2024 
  struct adapter *adapter = pi->adapter;
  
#line 2025 
  int err = 0;
  
#line 2027 
  u8 *buf = kmalloc(8192UL,208U);
  
#line 2028 
  if (buf == (u8 *)0U) {
    
#line 2029 
    __retres = -12;
    
#line 2029 
    goto return_label;
  }
  else ;
  
#line 2031 
  e->magic = 954396940U;
  
#line 2032 
  i = (int)e->offset & -4;
  
#line 2032 
  goto ldv_51115;
  ldv_51114: 
#line 2033 
  ;
  
#line 2033 
  err = t3_seeprom_read(adapter,(unsigned int)i,(__le32 *)(buf + i));
  
#line 2032 
  i += 4;
  ldv_51115: 
#line 2033 
  ;
  
#line 2032 
  if (err == 0 && e->offset + e->len > (unsigned int)i) 
#line 2034 
                                                        goto ldv_51114; else 
                                                                    
#line 2037 
                                                                    goto ldv_51116;
  ldv_51116: 
#line 2038 
  ;
  
#line 2035 
  if (err == 0) 
#line 2036 
                memcpy((void *)data,(void const *)(buf + e->offset),(unsigned long)e->len); else ;
  
#line 2037 
  kfree((void const *)buf);
  
#line 2038 
  __retres = err;
  return_label: 
#line 2038 
                return __retres;
}


#line 2041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data)
{
  int __retres;
  u32 aligned_offset;
  u32 aligned_len;
  __le32 *p;
  u8 *buf;
  int err;
  
#line 2044 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2045 
  struct adapter *adapter = pi->adapter;
  
#line 2051 
  if (eeprom->magic != 954396940U) {
    
#line 2052 
    __retres = -22;
    
#line 2052 
    goto return_label;
  }
  else ;
  
#line 2054 
  aligned_offset = eeprom->offset & 4294967292U;
  
#line 2055 
  aligned_len = ((eeprom->len + (eeprom->offset & 3U)) + 3U) & 4294967292U;
  
#line 2057 
  if (eeprom->offset != aligned_offset || eeprom->len != aligned_len) {
    
#line 2058 
    buf = (u8 *)kmalloc((unsigned long)aligned_len,208U);
    
#line 2059 
    if (buf == (u8 *)0U) {
      
#line 2060 
      __retres = -12;
      
#line 2060 
      goto return_label;
    }
    else ;
    
#line 2061 
    err = t3_seeprom_read(adapter,aligned_offset,(__le32 *)buf);
    
#line 2062 
    if (err == 0 && aligned_len > 4U) 
#line 2063 
                                      err = t3_seeprom_read(adapter,(aligned_offset + aligned_len) + 4294967292U,(__le32 *)(buf + (aligned_len + 4294967292U))); else ;
    
#line 2066 
    if (err != 0) 
#line 2067 
                  goto out; else ;
    
#line 2068 
    memcpy((void *)(buf + (eeprom->offset & 3U)),(void const *)data,(unsigned long)eeprom->len);
  }
  else 
#line 2070 
       buf = data;
  
#line 2072 
  err = t3_seeprom_wp(adapter,0);
  
#line 2073 
  if (err != 0) 
#line 2074 
                goto out; else ;
  
#line 2076 
  p = (__le32 *)buf;
  
#line 2076 
  goto ldv_51131;
  ldv_51130: 
#line 2077 
  ;
  
#line 2077 
  err = t3_seeprom_write(adapter,aligned_offset,*p);
  
#line 2078 
  aligned_offset += 4U;
  
#line 2076 
  aligned_len += 4294967292U;
  
#line 2076 
  p += 1;
  ldv_51131: 
#line 2077 
  ;
  
#line 2076 
  if (err == 0 && aligned_len != 0U) 
#line 2078 
                                     goto ldv_51130; else 
#line 2081 
                                                          goto ldv_51132;
  ldv_51132: 
#line 2082 
  ;
  
#line 2081 
  if (err == 0) 
#line 2082 
                err = t3_seeprom_wp(adapter,1); else ;
  out: 
#line 2083 
  ;
  
#line 2084 
  if (buf != data) 
#line 2085 
                   kfree((void const *)buf); else ;
  
#line 2086 
  __retres = err;
  return_label: 
#line 2086 
                return __retres;
}


#line 2089  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  
#line 2091 
  wol->supported = 0U;
  
#line 2092 
  wol->wolopts = 0U;
  
#line 2093 
  memset((void *)(& wol->sopass),0,6UL);
  
#line 2094 
  return;
}


#line 2096  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct ethtool_ops const cxgb_ethtool_ops = {.get_settings = & get_settings, .set_settings = & set_settings, .get_drvinfo = & get_drvinfo, .get_regs_len = & get_regs_len, .get_regs = & get_regs, .get_wol = & get_wol, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = & get_msglevel, .set_msglevel = & set_msglevel, .nway_reset = & restart_autoneg, .get_link = & ethtool_op_get_link, .get_eeprom_len = & get_eeprom_len, .get_eeprom = & get_eeprom, .set_eeprom = & set_eeprom, .get_coalesce = & get_coalesce, .set_coalesce = & set_coalesce, .get_ringparam = & get_sge_param, .set_ringparam = & set_sge_param, .get_pauseparam = & get_pauseparam, .set_pauseparam = & set_pauseparam, .self_test = (void (*)(struct net_device *, struct ethtool_test *, u64 *))0, .get_strings = & get_strings, .set_phys_id = & set_phys_id, .get_ethtool_stats = & get_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int in_range(int val, int lo, int hi)
{
  int __retres;
  
#line 2124 
  __retres = (val < 0 || (val <= hi && val >= lo)) != 0;
  
#line 2124 
  return __retres;
}


#line 2127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_extension_ioctl(struct net_device *dev, void *useraddr)
{
  int __retres;
  u32 cmd;
  int ret;
  unsigned long tmp_0;
  
#line 2129 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2130 
  struct adapter *adapter = pi->adapter;
  
#line 2134 
  tmp_0 = copy_from_user((void *)(& cmd),(void const *)useraddr,4UL);
  
#line 2134 
  if (tmp_0 != 0UL) {
    
#line 2135 
    __retres = -14;
    
#line 2135 
    goto return_label;
  }
  else ;
  
#line 2137 
  switch (cmd) {
    case (u32)1045: 
#line 2138 
    ;
    {
      int i;
      struct qset_params *q;
      struct ch_qset_params t;
      int tmp_2;
      bool tmp_1;
      unsigned long tmp_3;
      int tmp_4;
      int tmp_12;
      
#line 2142 
      int q1 = (int)pi->first_qset;
      
#line 2143 
      int nqsets = (int)pi->nqsets;
      
#line 2145 
      tmp_1 = capable(12);
      
#line 2145 
      if (tmp_1) 
#line 2145 
                 tmp_2 = 0; else 
#line 2145 
                                 tmp_2 = 1;
      
#line 2145 
      if (tmp_2) {
        
#line 2146 
        __retres = -1;
        
#line 2146 
        goto return_label;
      }
      else ;
      
#line 2147 
      tmp_3 = copy_from_user((void *)(& t),(void const *)useraddr,56UL);
      
#line 2147 
      if (tmp_3 != 0UL) {
        
#line 2148 
        __retres = -14;
        
#line 2148 
        goto return_label;
      }
      else ;
      
#line 2149 
      if (t.qset_idx > 7U) {
        
#line 2150 
        __retres = -22;
        
#line 2150 
        goto return_label;
      }
      else ;
      
#line 2151 
      tmp_4 = in_range(t.intr_lat,0,8191);
      
#line 2151 
      if (tmp_4 == 0) {
        
#line 2165 
        __retres = -22;
        
#line 2165 
        goto return_label;
      }
      else {
        int tmp_5;
        
#line 2151 
        tmp_5 = in_range(t.cong_thres,0,255);
        
#line 2151 
        if (tmp_5 == 0) {
          
#line 2165 
          __retres = -22;
          
#line 2165 
          goto return_label;
        }
        else {
          int tmp_6;
          
#line 2152 
          tmp_6 = in_range(t.txq_size[0],4,16384);
          
#line 2152 
          if (tmp_6 == 0) {
            
#line 2165 
            __retres = -22;
            
#line 2165 
            goto return_label;
          }
          else {
            int tmp_7;
            
#line 2154 
            tmp_7 = in_range(t.txq_size[1],4,16384);
            
#line 2154 
            if (tmp_7 == 0) {
              
#line 2165 
              __retres = -22;
              
#line 2165 
              goto return_label;
            }
            else {
              int tmp_8;
              
#line 2156 
              tmp_8 = in_range(t.txq_size[2],4,1024);
              
#line 2156 
              if (tmp_8 == 0) {
                
#line 2165 
                __retres = -22;
                
#line 2165 
                goto return_label;
              }
              else {
                int tmp_9;
                
#line 2158 
                tmp_9 = in_range(t.fl_size[0],32,16384);
                
#line 2158 
                if (tmp_9 == 0) {
                  
#line 2165 
                  __retres = -22;
                  
#line 2165 
                  goto return_label;
                }
                else {
                  int tmp_10;
                  
#line 2160 
                  tmp_10 = in_range(t.fl_size[1],32,16384);
                  
#line 2160 
                  if (tmp_10 == 0) {
                    
#line 2165 
                    __retres = -22;
                    
#line 2165 
                    goto return_label;
                  }
                  else {
                    int tmp_11;
                    
#line 2162 
                    tmp_11 = in_range(t.rspq_size,32,16384);
                    
#line 2162 
                    if (tmp_11 == 0) {
                      
#line 2165 
                      __retres = -22;
                      
#line 2165 
                      goto return_label;
                    }
                    else ;
                  }
                }
              }
            }
          }
        }
      }
      
#line 2167 
      if ((adapter->flags & 1UL) != 0UL && (((((((t.rspq_size >= 0 || t.fl_size[0] >= 0) || t.fl_size[1] >= 0) || t.txq_size[0] >= 0) || t.txq_size[1] >= 0) || t.txq_size[2] >= 0) || t.polling >= 0) || t.cong_thres >= 0)) {
        
#line 2172 
        __retres = -16;
        
#line 2172 
        goto return_label;
      }
      else ;
      
#line 2175 
      tmp_12 = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
      
#line 2175 
      if (tmp_12 != 0) {
        
#line 2176 
        q1 = 0;
        
#line 2177 
        i = 0;
        
#line 2177 
        goto ldv_51158;
        ldv_51157: 
#line 2178 
        ;
        
#line 2178 
        pi = adap2pinfo(adapter,i);
        
#line 2179 
        nqsets = ((int)pi->first_qset + (int)pi->nqsets) + nqsets;
        
#line 2177 
        i += 1;
        ldv_51158: 
#line 2178 
        ;
        
#line 2177 
        if (adapter->params.nports > (unsigned int)i) 
#line 2179 
                                                      goto ldv_51157; else 
                                                                    
#line 2182 
                                                                    goto ldv_51159;
        ldv_51159: 
#line 2183 
        ;
      }
      else ;
      
#line 2183 
      if (t.qset_idx < (unsigned int)q1) {
        
#line 2184 
        __retres = -22;
        
#line 2184 
        goto return_label;
      }
      else ;
      
#line 2185 
      if (t.qset_idx > (unsigned int)((q1 + nqsets) + -1)) {
        
#line 2186 
        __retres = -22;
        
#line 2186 
        goto return_label;
      }
      else ;
      
#line 2188 
      q = & adapter->params.sge.qset[t.qset_idx];
      
#line 2190 
      if (t.rspq_size >= 0) 
#line 2191 
                            q->rspq_size = (unsigned int)t.rspq_size; else ;
      
#line 2192 
      if (t.fl_size[0] >= 0) 
#line 2193 
                             q->fl_size = (unsigned int)t.fl_size[0]; else ;
      
#line 2194 
      if (t.fl_size[1] >= 0) 
#line 2195 
                             q->jumbo_size = (unsigned int)t.fl_size[1]; else ;
      
#line 2196 
      if (t.txq_size[0] >= 0) 
#line 2197 
                              q->txq_size[0] = (unsigned int)t.txq_size[0]; else ;
      
#line 2198 
      if (t.txq_size[1] >= 0) 
#line 2199 
                              q->txq_size[1] = (unsigned int)t.txq_size[1]; else ;
      
#line 2200 
      if (t.txq_size[2] >= 0) 
#line 2201 
                              q->txq_size[2] = (unsigned int)t.txq_size[2]; else ;
      
#line 2202 
      if (t.cong_thres >= 0) 
#line 2203 
                             q->cong_thres = (unsigned int)t.cong_thres; else ;
      
#line 2204 
      if (t.intr_lat >= 0) {
        
#line 2205 
        struct sge_qset *qs = & adapter->sge.qs[t.qset_idx];
        
#line 2208 
        q->coalesce_usecs = (unsigned int)t.intr_lat;
        
#line 2209 
        t3_update_qset_coalesce(qs,(struct qset_params const *)q);
      }
      else ;
      
#line 2211 
      if (t.polling >= 0) 
        
#line 2212 
        if ((adapter->flags & 4UL) != 0UL) 
#line 2213 
                                           q->polling = (unsigned int)t.polling;
        else {
          
#line 2216 
          if (adapter->params.rev == 0U && (adapter->flags & 2UL) == 0UL) 
            
#line 2218 
            t.polling = 0; else ;
          
#line 2220 
          i = 0;
          
#line 2220 
          goto ldv_51162;
          ldv_51161: 
#line 2221 
          ;
          
#line 2221 
          q = & adapter->params.sge.qset[i];
          
#line 2223 
          q->polling = (unsigned int)t.polling;
          
#line 2220 
          i += 1;
          ldv_51162: 
#line 2221 
          ;
          
#line 2220 
          if (i <= 7) 
#line 2222 
                      goto ldv_51161; else 
#line 2225 
                                           goto ldv_51163;
          ldv_51163: 
#line 2226 
          ;
        }
      else ;
      
#line 2228 
      if (t.lro >= 0) {
        
#line 2229 
        if (t.lro != 0) 
#line 2230 
                        dev->wanted_features |= 16384ULL; else 
#line 2232 
                                                               dev->wanted_features &= 18446744073709535231ULL;
        
#line 2233 
        netdev_update_features(dev);
      }
      else ;
      
#line 2236 
      goto ldv_51164;
    }
    case (u32)1046: 
#line 2238 
    ;
    {
      struct qset_params *q_0;
      struct ch_qset_params t_0;
      int i_0;
      unsigned long tmp_13;
      int tmp_14;
      unsigned long tmp_15;
      
#line 2241 
      int q1_0 = (int)pi->first_qset;
      
#line 2242 
      int nqsets_0 = (int)pi->nqsets;
      
#line 2245 
      tmp_13 = copy_from_user((void *)(& t_0),(void const *)useraddr,56UL);
      
#line 2245 
      if (tmp_13 != 0UL) {
        
#line 2246 
        __retres = -14;
        
#line 2246 
        goto return_label;
      }
      else ;
      
#line 2249 
      tmp_14 = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
      
#line 2249 
      if (tmp_14 != 0) {
        
#line 2250 
        q1_0 = 0;
        
#line 2251 
        i_0 = 0;
        
#line 2251 
        goto ldv_51172;
        ldv_51171: 
#line 2252 
        ;
        
#line 2252 
        pi = adap2pinfo(adapter,i_0);
        
#line 2253 
        nqsets_0 = (int)pi->first_qset + (int)pi->nqsets;
        
#line 2251 
        i_0 += 1;
        ldv_51172: 
#line 2252 
        ;
        
#line 2251 
        if (adapter->params.nports > (unsigned int)i_0) 
#line 2253 
                                                        goto ldv_51171; else 
                                                                    
#line 2256 
                                                                    goto ldv_51173;
        ldv_51173: 
#line 2257 
        ;
      }
      else ;
      
#line 2257 
      if (t_0.qset_idx >= (unsigned int)nqsets_0) {
        
#line 2258 
        __retres = -22;
        
#line 2258 
        goto return_label;
      }
      else ;
      
#line 2260 
      q_0 = & adapter->params.sge.qset[t_0.qset_idx + (unsigned int)q1_0];
      
#line 2261 
      t_0.rspq_size = (int)q_0->rspq_size;
      
#line 2262 
      t_0.txq_size[0] = (int)q_0->txq_size[0];
      
#line 2263 
      t_0.txq_size[1] = (int)q_0->txq_size[1];
      
#line 2264 
      t_0.txq_size[2] = (int)q_0->txq_size[2];
      
#line 2265 
      t_0.fl_size[0] = (int)q_0->fl_size;
      
#line 2266 
      t_0.fl_size[1] = (int)q_0->jumbo_size;
      
#line 2267 
      t_0.polling = (int)q_0->polling;
      
#line 2268 
      t_0.lro = (dev->features & 16384ULL) != 0ULL;
      
#line 2269 
      t_0.intr_lat = (int)q_0->coalesce_usecs;
      
#line 2270 
      t_0.cong_thres = (int)q_0->cong_thres;
      
#line 2271 
      t_0.qnum = q1_0;
      
#line 2273 
      if ((adapter->flags & 4UL) != 0UL) 
#line 2274 
                                         t_0.vector = (int)adapter->msix_info[(t_0.qset_idx + (unsigned int)q1_0) + 1U].vec; else 
                                                                    
#line 2276 
                                                                    t_0.vector = (int)(adapter->pdev)->irq;
      
#line 2278 
      tmp_15 = copy_to_user(useraddr,(void const *)(& t_0),56UL);
      
#line 2278 
      if (tmp_15 != 0UL) {
        
#line 2279 
        __retres = -14;
        
#line 2279 
        goto return_label;
      }
      else ;
      
#line 2280 
      goto ldv_51164;
    }
    case (u32)1047: 
#line 2282 
    ;
    {
      struct ch_reg edata;
      unsigned int i_1;
      int tmp_17;
      bool tmp_16;
      unsigned long tmp_18;
      
#line 2284 
      unsigned int first_qset = 0U;
      
#line 2284 
      unsigned int other_qsets = 0U;
      
#line 2286 
      tmp_16 = capable(12);
      
#line 2286 
      if (tmp_16) 
#line 2286 
                  tmp_17 = 0; else 
#line 2286 
                                   tmp_17 = 1;
      
#line 2286 
      if (tmp_17) {
        
#line 2287 
        __retres = -1;
        
#line 2287 
        goto return_label;
      }
      else ;
      
#line 2288 
      if ((adapter->flags & 1UL) != 0UL) {
        
#line 2289 
        __retres = -16;
        
#line 2289 
        goto return_label;
      }
      else ;
      
#line 2290 
      tmp_18 = copy_from_user((void *)(& edata),(void const *)useraddr,12UL);
      
#line 2290 
      if (tmp_18 != 0UL) {
        
#line 2291 
        __retres = -14;
        
#line 2291 
        goto return_label;
      }
      else ;
      
#line 2292 
      if (edata.val == 0U || (edata.val > 1U && (adapter->flags & 4UL) == 0UL)) {
        
#line 2294 
        __retres = -22;
        
#line 2294 
        goto return_label;
      }
      else ;
      
#line 2296 
      i_1 = 0U;
      
#line 2296 
      goto ldv_51180;
      ldv_51179: 
#line 2297 
      ;
      
#line 2297 
      if (adapter->port[i_1] != (struct net_device *)0 && adapter->port[i_1] != dev) {
        struct port_info *tmp_19;
        
#line 2298 
        tmp_19 = adap2pinfo(adapter,(int)i_1);
        
#line 2298 
        other_qsets = (unsigned int)tmp_19->nqsets + other_qsets;
      }
      else ;
      
#line 2296 
      i_1 += 1U;
      ldv_51180: 
#line 2297 
      ;
      
#line 2296 
      if (adapter->params.nports > i_1) 
#line 2298 
                                        goto ldv_51179; else 
#line 2301 
                                                             goto ldv_51181;
      ldv_51181: 
#line 2302 
      ;
      
#line 2300 
      if (edata.val + other_qsets > 8U) {
        
#line 2301 
        __retres = -22;
        
#line 2301 
        goto return_label;
      }
      else ;
      
#line 2303 
      pi->nqsets = (unsigned char)edata.val;
      
#line 2305 
      i_1 = 0U;
      
#line 2305 
      goto ldv_51183;
      ldv_51182: 
#line 2306 
      ;
      
#line 2306 
      if (adapter->port[i_1] != (struct net_device *)0) {
        
#line 2307 
        pi = adap2pinfo(adapter,(int)i_1);
        
#line 2308 
        pi->first_qset = (unsigned char)first_qset;
        
#line 2309 
        first_qset = (unsigned int)pi->nqsets + first_qset;
      }
      else ;
      
#line 2305 
      i_1 += 1U;
      ldv_51183: 
#line 2306 
      ;
      
#line 2305 
      if (adapter->params.nports > i_1) 
#line 2307 
                                        goto ldv_51182; else 
#line 2310 
                                                             goto ldv_51184;
      ldv_51184: 
#line 2311 
      ;
      
#line 2311 
      goto ldv_51164;
    }
    case (u32)1048: 
#line 2313 
    ;
    {
      struct ch_reg edata_0;
      unsigned long tmp_20;
      
#line 2316 
      memset((void *)(& edata_0),0,12UL);
      
#line 2318 
      edata_0.cmd = 1048U;
      
#line 2319 
      edata_0.val = (unsigned int)pi->nqsets;
      
#line 2320 
      tmp_20 = copy_to_user(useraddr,(void const *)(& edata_0),12UL);
      
#line 2320 
      if (tmp_20 != 0UL) {
        
#line 2321 
        __retres = -14;
        
#line 2321 
        goto return_label;
      }
      else ;
      
#line 2322 
      goto ldv_51164;
    }
    case (u32)1041: 
#line 2324 
    ;
    {
      u8 *fw_data;
      struct ch_mem_range t_1;
      int tmp_22;
      bool tmp_21;
      unsigned long tmp_23;
      bool tmp_26;
      
#line 2328 
      tmp_21 = capable(17);
      
#line 2328 
      if (tmp_21) 
#line 2328 
                  tmp_22 = 0; else 
#line 2328 
                                   tmp_22 = 1;
      
#line 2328 
      if (tmp_22) {
        
#line 2329 
        __retres = -1;
        
#line 2329 
        goto return_label;
      }
      else ;
      
#line 2330 
      tmp_23 = copy_from_user((void *)(& t_1),(void const *)useraddr,20UL);
      
#line 2330 
      if (tmp_23 != 0UL) {
        
#line 2331 
        __retres = -14;
        
#line 2331 
        goto return_label;
      }
      else ;
      
#line 2333 
      fw_data = (u8 *)memdup_user((void const *)(useraddr + 20U),(unsigned long)t_1.len);
      
#line 2334 
      tmp_26 = IS_ERR_0((void const *)fw_data);
      
#line 2334 
      if ((int)tmp_26 != 0) {
        long tmp_25;
        
#line 2335 
        tmp_25 = PTR_ERR((void const *)fw_data);
        
#line 2335 
        __retres = (int)tmp_25;
        
#line 2335 
        goto return_label;
      }
      else ;
      
#line 2337 
      ret = t3_load_fw(adapter,(u8 const *)fw_data,t_1.len);
      
#line 2338 
      kfree((void const *)fw_data);
      
#line 2339 
      if (ret != 0) {
        
#line 2340 
        __retres = ret;
        
#line 2340 
        goto return_label;
      }
      else ;
      
#line 2341 
      goto ldv_51164;
    }
    case (u32)1030: 
#line 2343 
    ;
    {
      struct ch_mtus m;
      int i_2;
      int tmp_27;
      int tmp_29;
      bool tmp_28;
      int tmp_30;
      unsigned long tmp_31;
      
#line 2347 
      tmp_27 = is_offload((struct adapter const *)adapter);
      
#line 2347 
      if (tmp_27 == 0) {
        
#line 2348 
        __retres = -95;
        
#line 2348 
        goto return_label;
      }
      else ;
      
#line 2349 
      tmp_28 = capable(12);
      
#line 2349 
      if (tmp_28) 
#line 2349 
                  tmp_29 = 0; else 
#line 2349 
                                   tmp_29 = 1;
      
#line 2349 
      if (tmp_29) {
        
#line 2350 
        __retres = -1;
        
#line 2350 
        goto return_label;
      }
      else ;
      
#line 2351 
      tmp_30 = offload_running(adapter);
      
#line 2351 
      if (tmp_30 != 0) {
        
#line 2352 
        __retres = -16;
        
#line 2352 
        goto return_label;
      }
      else ;
      
#line 2353 
      tmp_31 = copy_from_user((void *)(& m),(void const *)useraddr,40UL);
      
#line 2353 
      if (tmp_31 != 0UL) {
        
#line 2354 
        __retres = -14;
        
#line 2354 
        goto return_label;
      }
      else ;
      
#line 2355 
      if (m.nmtus != 16U) {
        
#line 2356 
        __retres = -22;
        
#line 2356 
        goto return_label;
      }
      else ;
      
#line 2357 
      if ((unsigned int)m.mtus[0] <= 80U) {
        
#line 2358 
        __retres = -22;
        
#line 2358 
        goto return_label;
      }
      else ;
      
#line 2361 
      i_2 = 1;
      
#line 2361 
      goto ldv_51194;
      ldv_51193: 
#line 2362 
      ;
      
#line 2362 
      if ((int)m.mtus[i_2] < (int)m.mtus[i_2 + -1]) {
        
#line 2363 
        __retres = -22;
        
#line 2363 
        goto return_label;
      }
      else ;
      
#line 2361 
      i_2 += 1;
      ldv_51194: 
#line 2362 
      ;
      
#line 2361 
      if (i_2 <= 15) 
#line 2363 
                     goto ldv_51193; else 
#line 2366 
                                          goto ldv_51195;
      ldv_51195: 
#line 2367 
      ;
      
#line 2365 
      memcpy((void *)(& adapter->params.mtus),(void const *)(& m.mtus),32UL);
      
#line 2367 
      goto ldv_51164;
    }
    case (u32)1033: 
#line 2369 
    ;
    {
      int tmp_32;
      unsigned long tmp_33;
      
#line 2370 
      struct tp_params *p = & adapter->params.tp;
      
#line 2371 
      struct ch_pm m_0 = {.cmd = 1033U, .tx_pg_sz = 0U, .tx_num_pg = 0U, .rx_pg_sz = 0U, .rx_num_pg = 0U, .pm_total = 0U};
      
#line 2373 
      tmp_32 = is_offload((struct adapter const *)adapter);
      
#line 2373 
      if (tmp_32 == 0) {
        
#line 2374 
        __retres = -95;
        
#line 2374 
        goto return_label;
      }
      else ;
      
#line 2375 
      m_0.tx_pg_sz = p->tx_pg_size;
      
#line 2376 
      m_0.tx_num_pg = p->tx_num_pgs;
      
#line 2377 
      m_0.rx_pg_sz = p->rx_pg_size;
      
#line 2378 
      m_0.rx_num_pg = p->rx_num_pgs;
      
#line 2379 
      m_0.pm_total = p->pmtx_size + p->chan_rx_size * p->nchan;
      
#line 2380 
      tmp_33 = copy_to_user(useraddr,(void const *)(& m_0),24UL);
      
#line 2380 
      if (tmp_33 != 0UL) {
        
#line 2381 
        __retres = -14;
        
#line 2381 
        goto return_label;
      }
      else ;
      
#line 2382 
      goto ldv_51164;
    }
    case (u32)1032: 
#line 2384 
    ;
    {
      struct ch_pm m_1;
      int tmp_34;
      int tmp_36;
      bool tmp_35;
      unsigned long tmp_37;
      int tmp_39;
      bool tmp_38;
      
#line 2386 
      struct tp_params *p_0 = & adapter->params.tp;
      
#line 2388 
      tmp_34 = is_offload((struct adapter const *)adapter);
      
#line 2388 
      if (tmp_34 == 0) {
        
#line 2389 
        __retres = -95;
        
#line 2389 
        goto return_label;
      }
      else ;
      
#line 2390 
      tmp_35 = capable(12);
      
#line 2390 
      if (tmp_35) 
#line 2390 
                  tmp_36 = 0; else 
#line 2390 
                                   tmp_36 = 1;
      
#line 2390 
      if (tmp_36) {
        
#line 2391 
        __retres = -1;
        
#line 2391 
        goto return_label;
      }
      else ;
      
#line 2392 
      if ((adapter->flags & 1UL) != 0UL) {
        
#line 2393 
        __retres = -16;
        
#line 2393 
        goto return_label;
      }
      else ;
      
#line 2394 
      tmp_37 = copy_from_user((void *)(& m_1),(void const *)useraddr,24UL);
      
#line 2394 
      if (tmp_37 != 0UL) {
        
#line 2395 
        __retres = -14;
        
#line 2395 
        goto return_label;
      }
      else ;
      
#line 2396 
      tmp_38 = is_power_of_2((unsigned long)m_1.rx_pg_sz);
      
#line 2396 
      if (tmp_38) 
#line 2396 
                  tmp_39 = 0; else 
#line 2396 
                                   tmp_39 = 1;
      
#line 2396 
      if (tmp_39) {
        
#line 2398 
        __retres = -22;
        
#line 2398 
        goto return_label;
      }
      else {
        int tmp_41;
        bool tmp_40;
        
#line 2397 
        tmp_40 = is_power_of_2((unsigned long)m_1.tx_pg_sz);
        
#line 2397 
        if (tmp_40) 
#line 2397 
                    tmp_41 = 0; else 
#line 2397 
                                     tmp_41 = 1;
        
#line 2397 
        if (tmp_41) {
          
#line 2398 
          __retres = -22;
          
#line 2398 
          goto return_label;
        }
        else ;
      }
      
#line 2399 
      if ((m_1.rx_pg_sz & 81920U) == 0U) {
        
#line 2400 
        __retres = -22;
        
#line 2400 
        goto return_label;
      }
      else ;
      
#line 2401 
      if ((m_1.tx_pg_sz & 22364160U) == 0U) {
        
#line 2402 
        __retres = -22;
        
#line 2402 
        goto return_label;
      }
      else ;
      
#line 2403 
      if (m_1.tx_num_pg == 4294967295U) 
#line 2404 
                                        m_1.tx_num_pg = p_0->tx_num_pgs; else ;
      
#line 2405 
      if (m_1.rx_num_pg == 4294967295U) 
#line 2406 
                                        m_1.rx_num_pg = p_0->rx_num_pgs; else ;
      
#line 2407 
      if (m_1.tx_num_pg % 24U != 0U || m_1.rx_num_pg % 24U != 0U) {
        
#line 2408 
        __retres = -22;
        
#line 2408 
        goto return_label;
      }
      else ;
      
#line 2409 
      if (m_1.rx_num_pg * m_1.rx_pg_sz > p_0->chan_rx_size || m_1.tx_num_pg * m_1.tx_pg_sz > p_0->chan_tx_size) {
        
#line 2411 
        __retres = -22;
        
#line 2411 
        goto return_label;
      }
      else ;
      
#line 2412 
      p_0->rx_pg_size = m_1.rx_pg_sz;
      
#line 2413 
      p_0->tx_pg_size = m_1.tx_pg_sz;
      
#line 2414 
      p_0->rx_num_pgs = m_1.rx_num_pg;
      
#line 2415 
      p_0->tx_num_pgs = m_1.tx_num_pg;
      
#line 2416 
      goto ldv_51164;
    }
    case (u32)1038: 
#line 2418 
    ;
    {
      struct ch_mem_range t_2;
      struct mc7 *mem;
      u64 buf[32U];
      int tmp_42;
      unsigned long tmp_43;
      unsigned long tmp_44;
      
#line 2423 
      tmp_42 = is_offload((struct adapter const *)adapter);
      
#line 2423 
      if (tmp_42 == 0) {
        
#line 2424 
        __retres = -95;
        
#line 2424 
        goto return_label;
      }
      else ;
      
#line 2425 
      if ((adapter->flags & 1UL) == 0UL) {
        
#line 2426 
        __retres = -5;
        
#line 2426 
        goto return_label;
      }
      else ;
      
#line 2427 
      tmp_43 = copy_from_user((void *)(& t_2),(void const *)useraddr,20UL);
      
#line 2427 
      if (tmp_43 != 0UL) {
        
#line 2428 
        __retres = -14;
        
#line 2428 
        goto return_label;
      }
      else ;
      
#line 2429 
      if ((t_2.addr & 7U) != 0U || (t_2.len & 7U) != 0U) {
        
#line 2430 
        __retres = -22;
        
#line 2430 
        goto return_label;
      }
      else ;
      
#line 2431 
      if (t_2.mem_id == 0U) 
#line 2432 
                            mem = & adapter->cm;
      else 
        
#line 2433 
        if (t_2.mem_id == 1U) 
#line 2434 
                              mem = & adapter->pmrx;
        else 
          
#line 2435 
          if (t_2.mem_id == 2U) 
#line 2436 
                                mem = & adapter->pmtx;
          else {
            
#line 2438 
            __retres = -22;
            
#line 2438 
            goto return_label;
          }
      
#line 2445 
      t_2.version = (adapter->params.rev << 10) | 3U;
      
#line 2446 
      tmp_44 = copy_to_user(useraddr,(void const *)(& t_2),20UL);
      
#line 2446 
      if (tmp_44 != 0UL) {
        
#line 2447 
        __retres = -14;
        
#line 2447 
        goto return_label;
      }
      else ;
      
#line 2453 
      useraddr += 20U;
      
#line 2454 
      goto ldv_51211;
      ldv_51210: 
#line 2455 
      ;
      {
        unsigned int tmp_46;
        unsigned long tmp_47;
        {
          unsigned int tmp_45;
          
#line 2456 
          unsigned int __min1 = t_2.len;
          
#line 2456 
          unsigned int __min2 = 256U;
          
#line 2456 
          if (__min1 < __min2) 
#line 2456 
                               tmp_45 = __min1; else 
#line 2456 
                                                     tmp_45 = __min2;
          
#line 2456 
          tmp_46 = tmp_45;
        }
        
#line 2455 
        unsigned int chunk = tmp_46;
        
#line 2458 
        ret = t3_mc7_bd_read(mem,t_2.addr / 8U,chunk / 8U,(u64 *)(& buf));
        
#line 2461 
        if (ret != 0) {
          
#line 2462 
          __retres = ret;
          
#line 2462 
          goto return_label;
        }
        else ;
        
#line 2463 
        tmp_47 = copy_to_user(useraddr,(void const *)(& buf),(unsigned long)chunk);
        
#line 2463 
        if (tmp_47 != 0UL) {
          
#line 2464 
          __retres = -14;
          
#line 2464 
          goto return_label;
        }
        else ;
        
#line 2465 
        useraddr += chunk;
        
#line 2466 
        t_2.addr += chunk;
        
#line 2467 
        t_2.len -= chunk;
      }
      ldv_51211: 
#line 2469 
      ;
      
#line 2454 
      if (t_2.len != 0U) 
#line 2456 
                         goto ldv_51210; else 
#line 2459 
                                              goto ldv_51212;
      ldv_51212: 
#line 2460 
      ;
      
#line 2469 
      goto ldv_51164;
    }
    case (u32)1044: 
#line 2471 
    ;
    {
      struct ch_trace t_3;
      struct trace_params const *tp;
      int tmp_49;
      bool tmp_48;
      int tmp_50;
      unsigned long tmp_51;
      
#line 2475 
      tmp_48 = capable(12);
      
#line 2475 
      if (tmp_48) 
#line 2475 
                  tmp_49 = 0; else 
#line 2475 
                                   tmp_49 = 1;
      
#line 2475 
      if (tmp_49) {
        
#line 2476 
        __retres = -1;
        
#line 2476 
        goto return_label;
      }
      else ;
      
#line 2477 
      tmp_50 = offload_running(adapter);
      
#line 2477 
      if (tmp_50 == 0) {
        
#line 2478 
        __retres = -11;
        
#line 2478 
        goto return_label;
      }
      else ;
      
#line 2479 
      tmp_51 = copy_from_user((void *)(& t_3),(void const *)useraddr,36UL);
      
#line 2479 
      if (tmp_51 != 0UL) {
        
#line 2480 
        __retres = -14;
        
#line 2480 
        goto return_label;
      }
      else ;
      
#line 2482 
      tp = (struct trace_params const *)(& t_3.sip);
      
#line 2483 
      if ((unsigned int)*((unsigned char *)(& t_3) + 34UL) != 0U) 
#line 2484 
                                                                  t3_config_trace_filter(adapter,tp,0,(int)t_3.invert_match,(int)t_3.trace_tx); else ;
      
#line 2487 
      if ((unsigned int)*((unsigned char *)(& t_3) + 34UL) != 0U) 
#line 2488 
                                                                  t3_config_trace_filter(adapter,tp,1,(int)t_3.invert_match,(int)t_3.trace_rx); else ;
      
#line 2491 
      goto ldv_51164;
    }
    default: 
#line 2493 
    ;
    
#line 2494 
    __retres = -95;
    
#line 2494 
    goto return_label;
  }
  ldv_51164: 
#line 2496 
  ;
  
#line 2496 
  __retres = 0;
  return_label: 
#line 2496 
                return __retres;
}


#line 2499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_ioctl(struct net_device *dev, struct ifreq *req, int cmd)
{
  int __retres;
  
#line 2501 
  struct mii_ioctl_data *data = if_mii(req);
  
#line 2502 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2503 
  struct adapter *adapter = pi->adapter;
  
#line 2505 
  switch (cmd) {
    int tmp_1;
    int tmp_4;
    int tmp_5;
    case 35144: 
#line 2506 
    ;
    case 35145: 
#line 2507 
    ;
    
#line 2509 
    tmp_1 = is_10G((struct adapter const *)adapter);
    
#line 2509 
    if (tmp_1 != 0) {
      int tmp_3;
      bool tmp_2;
      
#line 2510 
      tmp_2 = mdio_phy_id_is_c45((int)data->phy_id);
      
#line 2510 
      if (tmp_2) 
#line 2510 
                 tmp_3 = 0; else 
#line 2510 
                                 tmp_3 = 1;
      
#line 2510 
      if (tmp_3) {
        
#line 2510 
        if (((int)data->phy_id & 7936) != 0) {
          
#line 2511 
          if (((int)data->phy_id & 57568) == 0) 
#line 2513 
                                                data->phy_id = mdio_phy_id_c45((int)data->phy_id >> 8,(int)data->phy_id & 31); else ;
        }
        else ;
      }
      else ;
    }
    else ;
    case 35143: 
#line 2516 
    ;
    
#line 2517 
    tmp_4 = mdio_mii_ioctl((struct mdio_if_info const *)(& pi->phy.mdio),data,cmd);
    
#line 2517 
    __retres = tmp_4;
    
#line 2517 
    goto return_label;
    case 35312: 
#line 2518 
    ;
    
#line 2519 
    tmp_5 = cxgb_extension_ioctl(dev,req->ifr_ifru.ifru_data);
    
#line 2519 
    __retres = tmp_5;
    
#line 2519 
    goto return_label;
    default: 
#line 2520 
    ;
    
#line 2521 
    __retres = -95;
    
#line 2521 
    goto return_label;
  }
  return_label: 
#line 2505 
                return __retres;
}


#line 2525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int ret;
  
#line 2527 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2528 
  struct adapter *adapter = pi->adapter;
  
#line 2531 
  if (new_mtu <= 80) {
    
#line 2532 
    __retres = -22;
    
#line 2532 
    goto return_label;
  }
  else ;
  
#line 2533 
  ret = t3_mac_set_mtu(& pi->mac,(unsigned int)new_mtu);
  
#line 2533 
  if (ret != 0) {
    
#line 2534 
    __retres = ret;
    
#line 2534 
    goto return_label;
  }
  else ;
  
#line 2535 
  dev->mtu = (unsigned int)new_mtu;
  
#line 2536 
  init_port_mtus(adapter);
  
#line 2537 
  if (adapter->params.rev == 0U) {
    int tmp_0;
    
#line 2537 
    tmp_0 = offload_running(adapter);
    
#line 2537 
    if (tmp_0 != 0) 
#line 2538 
                    t3_load_mtus(adapter,(unsigned short *)(& adapter->params.mtus),(unsigned short *)(& adapter->params.a_wnd),(unsigned short *)(& adapter->params.b_wnd),(unsigned short)((int)((unsigned short)(adapter->port[0])->mtu))); else ;
  }
  else ;
  
#line 2541 
  __retres = 0;
  return_label: 
#line 2541 
                return __retres;
}


#line 2544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_set_mac_addr(struct net_device *dev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  
#line 2546 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2547 
  struct adapter *adapter = pi->adapter;
  
#line 2548 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 2550 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 2550 
  if (tmp_0) 
#line 2550 
             tmp_1 = 0; else 
#line 2550 
                             tmp_1 = 1;
  
#line 2550 
  if (tmp_1) {
    
#line 2551 
    __retres = -99;
    
#line 2551 
    goto return_label;
  }
  else ;
  
#line 2553 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 2554 
  t3_mac_set_address(& pi->mac,0U,dev->dev_addr);
  
#line 2555 
  tmp_2 = offload_running(adapter);
  
#line 2555 
  if (tmp_2 != 0) 
#line 2556 
                  write_smt_entry(adapter,(int)pi->port_id); else ;
  
#line 2557 
  __retres = 0;
  return_label: 
#line 2557 
                return __retres;
}


#line 2560  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static netdev_features_t cxgb_fix_features(struct net_device *dev, netdev_features_t features)
{
  
#line 2567 
  if ((features & 256ULL) != 0ULL) 
#line 2568 
                                   features |= 128ULL; else 
#line 2570 
                                                            features &= 18446744073709551487ULL;
  
#line 2572 
  return features;
}


#line 2575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 2577 
  netdev_features_t changed = dev->features ^ features;
  
#line 2579 
  if ((changed & 256ULL) != 0ULL) 
#line 2580 
                                  cxgb_vlan_mode(dev,features); else ;
  
#line 2582 
  __retres = 0;
  
#line 2582 
  return __retres;
}


#line 2586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void cxgb_netpoll(struct net_device *dev)
{
  int qidx;
  
#line 2588 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 2589 
  struct adapter *adapter = pi->adapter;
  
#line 2592 
  qidx = (int)pi->first_qset;
  
#line 2592 
  goto ldv_51262;
  ldv_51261: 
#line 2593 
  ;
  {
    void *source;
    irq_handler_t tmp_0;
    
#line 2593 
    struct sge_qset *qs = & adapter->sge.qs[qidx];
    
#line 2596 
    if ((adapter->flags & 4UL) != 0UL) 
#line 2597 
                                       source = (void *)qs; else 
#line 2599 
                                                                 source = (void *)adapter;
    
#line 2601 
    tmp_0 = t3_intr_handler(adapter,(int)qs->rspq.polling);
    
#line 2601 
    (*tmp_0)(0,source);
  }
  
#line 2592 
  qidx += 1;
  ldv_51262: 
#line 2593 
  ;
  
#line 2592 
  if ((int)pi->first_qset + (int)pi->nqsets > qidx) 
#line 2594 
                                                    goto ldv_51261; else 
                                                                    
#line 2597 
                                                                    goto ldv_51263;
  ldv_51263: 
#line 2598 
  ;
  
#line 2599 
  return;
}


#line 2609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void mac_stats_update(struct adapter *adapter)
{
  int i;
  
#line 2613 
  i = 0;
  
#line 2613 
  goto ldv_51271;
  ldv_51270: 
#line 2614 
  ;
  {
    bool tmp_0;
    
#line 2614 
    struct net_device *dev = adapter->port[i];
    
#line 2615 
    struct port_info *p = netdev_priv((struct net_device const *)dev);
    
#line 2617 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 2617 
    if ((int)tmp_0 != 0) {
      
#line 2618 
      ldv_spin_lock_96(& adapter->stats_lock);
      
#line 2619 
      t3_mac_update_stats(& p->mac);
      
#line 2620 
      ldv_spin_unlock_97(& adapter->stats_lock);
    }
    else ;
  }
  
#line 2613 
  i += 1;
  ldv_51271: 
#line 2614 
  ;
  
#line 2613 
  if (adapter->params.nports > (unsigned int)i) 
#line 2615 
                                                goto ldv_51270; else 
                                                                  
#line 2618 
                                                                  goto ldv_51272;
  ldv_51272: 
#line 2619 
  ;
  
#line 2620 
  return;
}


#line 2625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void check_link_status(struct adapter *adapter)
{
  int i;
  
#line 2629 
  i = 0;
  
#line 2629 
  goto ldv_51282;
  ldv_51281: 
#line 2630 
  ;
  {
    int link_fault;
    
#line 2630 
    struct net_device *dev = adapter->port[i];
    
#line 2631 
    struct port_info *p = netdev_priv((struct net_device const *)dev);
    
#line 2634 
    ldv_spin_lock_irq_98(& adapter->work_lock);
    
#line 2635 
    link_fault = p->link_fault;
    
#line 2636 
    ldv_spin_unlock_irq_99(& adapter->work_lock);
    
#line 2638 
    if (link_fault != 0) {
      
#line 2639 
      t3_link_fault(adapter,i);
      
#line 2640 
      goto ldv_51280;
    }
    else ;
    
#line 2643 
    if ((p->phy.caps & 16777216U) == 0U) {
      bool tmp_0;
      
#line 2643 
      tmp_0 = netif_running((struct net_device const *)dev);
      
#line 2643 
      if ((int)tmp_0 != 0) {
        
#line 2644 
        t3_xgm_intr_disable(adapter,i);
        
#line 2645 
        t3_read_reg(adapter,p->mac.offset + 2156U);
        
#line 2647 
        t3_link_changed(adapter,i);
        
#line 2648 
        t3_xgm_intr_enable(adapter,i);
      }
      else ;
    }
    else ;
  }
  ldv_51280: 
#line 2651 
  ;
  
#line 2629 
  i += 1;
  ldv_51282: 
#line 2630 
  ;
  
#line 2629 
  if (adapter->params.nports > (unsigned int)i) 
#line 2631 
                                                goto ldv_51281; else 
                                                                  
#line 2634 
                                                                  goto ldv_51283;
  ldv_51283: 
#line 2635 
  ;
  
#line 2636 
  return;
}


#line 2653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void check_t3b2_mac(struct adapter *adapter)
{
  int i;
  int tmp;
  
#line 2657 
  tmp = rtnl_trylock();
  
#line 2657 
  if (tmp == 0) 
#line 2658 
                goto return_label; else ;
  
#line 2660 
  i = 0;
  
#line 2660 
  goto ldv_51294;
  ldv_51293: 
#line 2661 
  ;
  {
    int status;
    int tmp_2;
    bool tmp_1;
    bool tmp_3;
    
#line 2661 
    struct net_device *dev = adapter->port[i];
    
#line 2662 
    struct port_info *p = netdev_priv((struct net_device const *)dev);
    
#line 2665 
    tmp_1 = netif_running((struct net_device const *)dev);
    
#line 2665 
    if (tmp_1) 
#line 2665 
               tmp_2 = 0; else 
#line 2665 
                               tmp_2 = 1;
    
#line 2665 
    if (tmp_2) 
#line 2666 
               goto ldv_51291; else ;
    
#line 2668 
    status = 0;
    
#line 2669 
    tmp_3 = netif_running((struct net_device const *)dev);
    
#line 2669 
    if ((int)tmp_3 != 0) {
      bool tmp_4;
      
#line 2669 
      tmp_4 = netif_carrier_ok((struct net_device const *)dev);
      
#line 2669 
      if ((int)tmp_4 != 0) 
#line 2670 
                           status = t3b2_mac_watchdog_task(& p->mac); else ;
    }
    else ;
    
#line 2671 
    if (status == 1) 
#line 2672 
                     p->mac.stats.num_toggled += 1UL;
    else 
      
#line 2673 
      if (status == 2) {
        
#line 2674 
        struct cmac *mac = & p->mac;
        
#line 2676 
        t3_mac_set_mtu(mac,dev->mtu);
        
#line 2677 
        t3_mac_set_address(mac,0U,dev->dev_addr);
        
#line 2678 
        cxgb_set_rxmode(dev);
        
#line 2679 
        t3_link_start(& p->phy,mac,& p->link_config);
        
#line 2680 
        t3_mac_enable(mac,3);
        
#line 2681 
        t3_port_intr_enable(adapter,(int)p->port_id);
        
#line 2682 
        p->mac.stats.num_resets += 1UL;
      }
      else ;
  }
  ldv_51291: 
#line 2685 
  ;
  
#line 2660 
  i += 1;
  ldv_51294: 
#line 2661 
  ;
  
#line 2660 
  if (adapter->params.nports > (unsigned int)i) 
#line 2662 
                                                goto ldv_51293; else 
                                                                  
#line 2665 
                                                                  goto ldv_51295;
  ldv_51295: 
#line 2666 
  ;
  
#line 2685 
  rtnl_unlock();
  return_label: 
#line 2686 
                return;
}


#line 2689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void t3_adap_check_task(struct work_struct *work)
{
  struct adapter *tmp;
  int port;
  unsigned int v;
  unsigned int status;
  unsigned int reset;
  {
    
#line 2691 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2691 
    tmp = (struct adapter *)__mptr + 18446744073709532640U;
  }
  
#line 2691 
  struct adapter *adapter = tmp;
  
#line 2693 
  struct adapter_params const *p = (struct adapter_params const *)(& adapter->params);
  
#line 2697 
  adapter->check_task_cnt += 1U;
  
#line 2699 
  check_link_status(adapter);
  
#line 2702 
  if (p->linkpoll_period == 0U || (adapter->check_task_cnt * p->linkpoll_period) / 10U >= p->stats_update_period) {
    
#line 2705 
    mac_stats_update(adapter);
    
#line 2706 
    adapter->check_task_cnt = 0U;
  }
  else ;
  
#line 2709 
  if (p->rev == 3U) 
#line 2710 
                    check_t3b2_mac(adapter); else ;
  
#line 2720 
  port = 0;
  
#line 2720 
  goto ldv_51310;
  ldv_51309: 
#line 2721 
  ;
  {
    struct port_info *tmp_0;
    u32 cause;
    
#line 2721 
    tmp_0 = adap2pinfo(adapter,port);
    
#line 2721 
    struct cmac *mac = & tmp_0->mac;
    
#line 2724 
    cause = t3_read_reg(adapter,mac->offset + 2264U);
    
#line 2725 
    reset = 0U;
    
#line 2726 
    if ((cause & 4096U) != 0U) {
      
#line 2727 
      mac->stats.rx_fifo_ovfl += 1UL;
      
#line 2728 
      reset |= 4096U;
    }
    else ;
    
#line 2731 
    t3_write_reg(adapter,mac->offset + 2264U,reset);
  }
  
#line 2720 
  port += 1;
  ldv_51310: 
#line 2721 
  ;
  
#line 2720 
  if (adapter->params.nports > (unsigned int)port) 
#line 2722 
                                                   goto ldv_51309; else 
                                                                    
#line 2725 
                                                                    goto ldv_51311;
  ldv_51311: 
#line 2726 
  ;
  
#line 2737 
  status = t3_read_reg(adapter,92U);
  
#line 2738 
  reset = 0U;
  
#line 2740 
  if ((status & 2U) != 0U) {
    u32 tmp_1;
    
#line 2741 
    struct sge_qset *qs = & adapter->sge.qs[0];
    
#line 2742 
    int i = 0;
    
#line 2744 
    reset |= 2U;
    
#line 2746 
    tmp_1 = t3_read_reg(adapter,76U);
    
#line 2746 
    v = (tmp_1 >> 16) & 65535U;
    
#line 2749 
    goto ldv_51315;
    ldv_51314: 
#line 2750 
    ;
    
#line 2750 
    qs->fl[i].empty += (unsigned long)v & 1UL;
    
#line 2751 
    if (i != 0) 
#line 2752 
                qs += 1; else ;
    
#line 2753 
    i ^= 1;
    
#line 2754 
    v >>= 1;
    ldv_51315: 
#line 2755 
    ;
    
#line 2749 
    if (v != 0U) 
#line 2751 
                 goto ldv_51314; else 
#line 2754 
                                      goto ldv_51316;
    ldv_51316: 
#line 2755 
    ;
  }
  else ;
  
#line 2758 
  t3_write_reg(adapter,92U,reset);
  
#line 2761 
  ldv_spin_lock_irq_100(& adapter->work_lock);
  
#line 2762 
  if ((adapter->open_device_map & 3UL) != 0UL) 
#line 2763 
                                               schedule_chk_task(adapter); else ;
  
#line 2764 
  ldv_spin_unlock_irq_101(& adapter->work_lock);
  
#line 2765 
  return;
}


#line 2767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void db_full_task(struct work_struct *work)
{
  struct adapter *tmp;
  {
    
#line 2769 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2769 
    tmp = (struct adapter *)__mptr + 18446744073709532176U;
  }
  
#line 2769 
  struct adapter *adapter = tmp;
  
#line 2772 
  cxgb3_event_notify(& adapter->tdev,4U,0U);
  
#line 2773 
  return;
}


#line 2775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void db_empty_task(struct work_struct *work)
{
  struct adapter *tmp;
  {
    
#line 2777 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2777 
    tmp = (struct adapter *)__mptr + 18446744073709532096U;
  }
  
#line 2777 
  struct adapter *adapter = tmp;
  
#line 2780 
  cxgb3_event_notify(& adapter->tdev,5U,0U);
  
#line 2781 
  return;
}


#line 2783  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void db_drop_task(struct work_struct *work)
{
  struct adapter *tmp;
  unsigned short r;
  struct task_struct *tmp_0;
  unsigned long tmp_1;
  {
    
#line 2785 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2785 
    tmp = (struct adapter *)__mptr + 18446744073709532016U;
  }
  
#line 2785 
  struct adapter *adapter = tmp;
  
#line 2787 
  unsigned long delay = 1000UL;
  
#line 2790 
  cxgb3_event_notify(& adapter->tdev,6U,0U);
  
#line 2796 
  get_random_bytes((void *)(& r),2);
  
#line 2797 
  delay = ((unsigned long)r & 1023UL) + delay;
  
#line 2798 
  tmp_0 = get_current();
  __here_0: 
#line 2798 
  ;
  
#line 2798 
  tmp_0->task_state_change = (unsigned long)((void *)0);
  {
    
#line 2798 
    long volatile __ret = 2L;
    
#line 2798 
    switch (8UL) {
      case (unsigned long)1: 
#line 2798 
      ;
      
#line 2799 
      ldv_inline_asm();
      
#line 2798 
      goto ldv_51341;
      case (unsigned long)2: 
#line 2798 
      ;
      
#line 2799 
      ldv_inline_asm();
      
#line 2798 
      goto ldv_51341;
      case (unsigned long)4: 
#line 2798 
      ;
      
#line 2799 
      ldv_inline_asm();
      
#line 2798 
      goto ldv_51341;
      case (unsigned long)8: 
#line 2798 
      ;
      
#line 2799 
      ldv_inline_asm();
      
#line 2798 
      goto ldv_51341;
      default: 
#line 2798 
      ;
      
#line 2798 
      __xchg_wrong_size();
    }
    ldv_51341: 
#line 2798 
    ;
    
#line 2798 
    long tmp_2 = __ret;
  }
  
#line 2799 
  tmp_1 = usecs_to_jiffies((unsigned int)delay);
  
#line 2799 
  schedule_timeout((long)tmp_1);
  
#line 2800 
  ring_dbs(adapter);
  
#line 2801 
  return;
}


#line 2806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void ext_intr_task(struct work_struct *work)
{
  struct adapter *tmp;
  int i;
  {
    
#line 2808 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2808 
    tmp = (struct adapter *)__mptr + 18446744073709532416U;
  }
  
#line 2808 
  struct adapter *adapter = tmp;
  
#line 2813 
  i = 0;
  
#line 2813 
  goto ldv_51357;
  ldv_51356: 
#line 2814 
  ;
  {
    
#line 2814 
    struct net_device *dev = adapter->port[i];
    
#line 2815 
    struct port_info *p = netdev_priv((struct net_device const *)dev);
    
#line 2817 
    t3_xgm_intr_disable(adapter,i);
    
#line 2818 
    t3_read_reg(adapter,p->mac.offset + 2156U);
  }
  
#line 2813 
  i += 1;
  ldv_51357: 
#line 2814 
  ;
  
#line 2813 
  if (adapter->params.nports > (unsigned int)i) 
#line 2815 
                                                goto ldv_51356; else 
                                                                  
#line 2818 
                                                                  goto ldv_51358;
  ldv_51358: 
#line 2819 
  ;
  
#line 2822 
  t3_phy_intr_handler(adapter);
  
#line 2824 
  i = 0;
  
#line 2824 
  goto ldv_51360;
  ldv_51359: 
#line 2825 
  ;
  
#line 2825 
  t3_xgm_intr_enable(adapter,i);
  
#line 2824 
  i += 1;
  ldv_51360: 
#line 2825 
  ;
  
#line 2824 
  if (adapter->params.nports > (unsigned int)i) 
#line 2826 
                                                goto ldv_51359; else 
                                                                  
#line 2829 
                                                                  goto ldv_51361;
  ldv_51361: 
#line 2830 
  ;
  
#line 2828 
  ldv_spin_lock_irq_102(& adapter->work_lock);
  
#line 2829 
  if (adapter->slow_intr_mask != 0U) {
    
#line 2830 
    adapter->slow_intr_mask |= 8388608U;
    
#line 2831 
    t3_write_reg(adapter,1764U,8388608U);
    
#line 2832 
    t3_write_reg(adapter,1760U,adapter->slow_intr_mask);
  }
  else ;
  
#line 2835 
  ldv_spin_unlock_irq_103(& adapter->work_lock);
  
#line 2836 
  return;
}


#line 2841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
void t3_os_ext_intr_handler(struct adapter *adapter)
{
  
#line 2849 
  ldv_spin_lock_104_0(& adapter->work_lock);
  
#line 2850 
  if (adapter->slow_intr_mask != 0U) {
    
#line 2851 
    adapter->slow_intr_mask &= 4286578687U;
    
#line 2852 
    t3_write_reg(adapter,1760U,adapter->slow_intr_mask);
    
#line 2854 
    ldv_queue_work_105(cxgb3_wq,& adapter->ext_intr_handler_task);
  }
  else ;
  
#line 2856 
  ldv_spin_unlock_106(& adapter->work_lock);
  
#line 2857 
  return;
}


#line 2859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
void t3_os_link_fault_handler(struct adapter *adapter, int port_id)
{
  
#line 2861 
  struct net_device *netdev = adapter->port[port_id];
  
#line 2862 
  struct port_info *pi = netdev_priv((struct net_device const *)netdev);
  
#line 2864 
  ldv_spin_lock_107(& adapter->work_lock);
  
#line 2865 
  pi->link_fault = 1;
  
#line 2866 
  ldv_spin_unlock_108(& adapter->work_lock);
  
#line 2867 
  return;
}


#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int t3_adapter_error(struct adapter *adapter, int reset, int on_wq)
{
  int i;
  int tmp;
  
#line 2871 
  int ret = 0;
  
#line 2873 
  tmp = is_offload((struct adapter const *)adapter);
  
#line 2873 
  if (tmp != 0) {
    int tmp_0;
    
#line 2873 
    tmp_0 = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
    
#line 2873 
    if (tmp_0 != 0) {
      
#line 2875 
      cxgb3_event_notify(& adapter->tdev,1U,0U);
      
#line 2876 
      offload_close(& adapter->tdev);
    }
    else ;
  }
  else ;
  
#line 2880 
  i = 0;
  
#line 2880 
  goto ldv_51380;
  ldv_51379: 
#line 2881 
  ;
  {
    bool tmp_1;
    
#line 2881 
    struct net_device *netdev = adapter->port[i];
    
#line 2883 
    tmp_1 = netif_running((struct net_device const *)netdev);
    
#line 2883 
    if ((int)tmp_1 != 0) 
#line 2884 
                         __cxgb_close(netdev,on_wq); else ;
  }
  
#line 2880 
  i += 1;
  ldv_51380: 
#line 2881 
  ;
  
#line 2880 
  if (adapter->params.nports > (unsigned int)i) 
#line 2882 
                                                goto ldv_51379; else 
                                                                  
#line 2885 
                                                                  goto ldv_51381;
  ldv_51381: 
#line 2886 
  ;
  
#line 2888 
  t3_stop_sge_timers(adapter);
  
#line 2890 
  adapter->flags &= 18446744073709551614UL;
  
#line 2892 
  if (reset != 0) 
#line 2893 
                  ret = t3_reset_adapter(adapter); else ;
  
#line 2895 
  pci_disable_device(adapter->pdev);
  
#line 2897 
  return ret;
}


#line 2900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int t3_reenable_adapter(struct adapter *adapter)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 2902 
  tmp = pci_enable_device(adapter->pdev);
  
#line 2902 
  if (tmp != 0) {
    
#line 2903 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Cannot re-enable PCI device after reset.\n");
    
#line 2905 
    goto err;
  }
  else ;
  
#line 2907 
  pci_set_master(adapter->pdev);
  
#line 2908 
  pci_restore_state(adapter->pdev);
  
#line 2909 
  pci_save_state(adapter->pdev);
  
#line 2912 
  t3_free_sge_resources(adapter);
  
#line 2914 
  tmp_0 = t3_replay_prep_adapter(adapter);
  
#line 2914 
  if (tmp_0 != 0) 
#line 2915 
                  goto err; else ;
  
#line 2917 
  __retres = 0;
  
#line 2917 
  goto return_label;
  err: 
#line 2918 
  ;
  
#line 2919 
  __retres = -1;
  return_label: 
#line 2919 
                return __retres;
}


#line 2922  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void t3_resume_ports(struct adapter *adapter)
{
  int i;
  int tmp_1;
  
#line 2927 
  i = 0;
  
#line 2927 
  goto ldv_51393;
  ldv_51392: 
#line 2928 
  ;
  {
    bool tmp_0;
    
#line 2928 
    struct net_device *netdev = adapter->port[i];
    
#line 2930 
    tmp_0 = netif_running((struct net_device const *)netdev);
    
#line 2930 
    if ((int)tmp_0 != 0) {
      int tmp;
      
#line 2931 
      tmp = cxgb_open(netdev);
      
#line 2931 
      if (tmp != 0) {
        
#line 2932 
        dev_err((struct device const *)(& (adapter->pdev)->dev),"can\'t bring device back up");
        
#line 2935 
        goto ldv_51391;
      }
      else ;
    }
    else ;
  }
  ldv_51391: 
#line 2938 
  ;
  
#line 2927 
  i += 1;
  ldv_51393: 
#line 2928 
  ;
  
#line 2927 
  if (adapter->params.nports > (unsigned int)i) 
#line 2929 
                                                goto ldv_51392; else 
                                                                  
#line 2932 
                                                                  goto ldv_51394;
  ldv_51394: 
#line 2933 
  ;
  
#line 2940 
  tmp_1 = is_offload((struct adapter const *)adapter);
  
#line 2940 
  if (tmp_1 != 0) {
    
#line 2940 
    if (ofld_disable == 0) 
#line 2941 
                           cxgb3_event_notify(& adapter->tdev,0U,0U); else ;
  }
  else ;
  
#line 2942 
  return;
}


#line 2948  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void fatal_error_task(struct work_struct *work)
{
  struct adapter *tmp;
  char *tmp_0;
  {
    
#line 2950 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2950 
    tmp = (struct adapter *)__mptr + 18446744073709532336U;
  }
  
#line 2950 
  struct adapter *adapter = tmp;
  
#line 2952 
  int err = 0;
  
#line 2954 
  rtnl_lock();
  
#line 2955 
  err = t3_adapter_error(adapter,1,1);
  
#line 2956 
  if (err == 0) 
#line 2957 
                err = t3_reenable_adapter(adapter); else ;
  
#line 2958 
  if (err == 0) 
#line 2959 
                t3_resume_ports(adapter); else ;
  
#line 2961 
  if (err != 0) 
#line 2961 
                tmp_0 = (char *)"failed"; else 
#line 2961 
                                               tmp_0 = (char *)"succeeded";
  
#line 2961 
  ;
  
#line 2961 
  dev_alert((struct device const *)(& (adapter->pdev)->dev),"adapter reset %s\n",tmp_0);
  
#line 2962 
  rtnl_unlock();
  
#line 2963 
  return;
}


#line 2965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
void t3_fatal_err(struct adapter *adapter)
{
  unsigned int fw_status[4U];
  int tmp;
  
#line 2969 
  if ((adapter->flags & 1UL) != 0UL) {
    
#line 2970 
    t3_sge_stop(adapter);
    
#line 2971 
    t3_write_reg(adapter,2048U,0U);
    
#line 2972 
    t3_write_reg(adapter,2060U,0U);
    
#line 2973 
    t3_write_reg(adapter,2560U,0U);
    
#line 2974 
    t3_write_reg(adapter,2572U,0U);
    
#line 2976 
    ldv_spin_lock_109(& adapter->work_lock);
    
#line 2977 
    t3_intr_disable(adapter);
    
#line 2978 
    ldv_queue_work_110(cxgb3_wq,& adapter->fatal_error_handler_task);
    
#line 2979 
    ldv_spin_unlock_111_0(& adapter->work_lock);
  }
  else ;
  
#line 2981 
  dev_alert((struct device const *)(& (adapter->pdev)->dev),"encountered fatal error, operation suspended\n");
  
#line 2982 
  tmp = t3_cim_ctl_blk_read(adapter,160U,4U,(unsigned int *)(& fw_status));
  
#line 2982 
  if (tmp == 0) 
#line 2983 
                dev_alert((struct device const *)(& (adapter->pdev)->dev),"FW status: 0x%x, 0x%x, 0x%x, 0x%x\n",fw_status[0],fw_status[1],fw_status[2],fw_status[3]); else ;
  
#line 2984 
  return;
}


#line 2996  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static pci_ers_result_t t3_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  
#line 2999 
  struct adapter *adapter = pci_get_drvdata(pdev);
  
#line 3001 
  if (state == 3U) {
    
#line 3002 
    __retres = 4U;
    
#line 3002 
    goto return_label;
  }
  else ;
  
#line 3004 
  t3_adapter_error(adapter,0,0);
  
#line 3007 
  __retres = 3U;
  return_label: 
#line 3007 
                return __retres;
}


#line 3016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static pci_ers_result_t t3_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_0;
  
#line 3018 
  struct adapter *adapter = pci_get_drvdata(pdev);
  
#line 3020 
  tmp_0 = t3_reenable_adapter(adapter);
  
#line 3020 
  if (tmp_0 == 0) {
    
#line 3021 
    __retres = 5U;
    
#line 3021 
    goto return_label;
  }
  else ;
  
#line 3023 
  __retres = 4U;
  return_label: 
#line 3023 
                return __retres;
}


#line 3033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void t3_io_resume(struct pci_dev *pdev)
{
  u32 tmp_0;
  
#line 3035 
  struct adapter *adapter = pci_get_drvdata(pdev);
  
#line 3037 
  tmp_0 = t3_read_reg(adapter,164U);
  
#line 3037 
  ;
  
#line 3037 
  dev_alert((struct device const *)(& (adapter->pdev)->dev),"adapter recovering, PEX ERR 0x%x\n",tmp_0);
  
#line 3040 
  rtnl_lock();
  
#line 3041 
  t3_resume_ports(adapter);
  
#line 3042 
  rtnl_unlock();
  
#line 3043 
  return;
}


#line 3045  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct pci_error_handlers const t3_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& t3_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & t3_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & t3_io_resume};

#line 3056  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void set_nqsets(struct adapter *adap)
{
  int i;
  
#line 3058 
  int j = 0;
  
#line 3059 
  int num_cpus = netif_get_num_default_rss_queues();
  
#line 3060 
  int hwports = (int)adap->params.nports;
  
#line 3061 
  int nqsets = adap->msix_nvectors + -1;
  
#line 3063 
  if (adap->params.rev != 0U && (adap->flags & 4UL) != 0UL) {
    
#line 3064 
    if (hwports == 2 && (hwports * nqsets > 8 || nqsets / hwports <= num_cpus)) 
      
#line 3067 
      nqsets /= hwports; else ;
    
#line 3068 
    if (nqsets > num_cpus) 
#line 3069 
                           nqsets = num_cpus; else ;
    
#line 3070 
    if (nqsets <= 0 || hwports == 4) 
#line 3071 
                                     nqsets = 1; else ;
  }
  else 
#line 3073 
       nqsets = 1;
  
#line 3075 
  i = 0;
  
#line 3075 
  goto ldv_51430;
  ldv_51429: 
#line 3076 
  ;
  {
    
#line 3076 
    struct port_info *pi = adap2pinfo(adap,i);
    
#line 3078 
    pi->first_qset = (unsigned char)j;
    
#line 3079 
    pi->nqsets = (unsigned char)nqsets;
    
#line 3080 
    j = (int)pi->first_qset + nqsets;
    
#line 3082 
    _dev_info((struct device const *)(& (adap->pdev)->dev),"Port %d using %d queue sets.\n",i,nqsets);
  }
  
#line 3075 
  i += 1;
  ldv_51430: 
#line 3076 
  ;
  
#line 3075 
  if (adap->params.nports > (unsigned int)i) 
#line 3077 
                                             goto ldv_51429; else 
#line 3080 
                                                                  goto ldv_51431;
  ldv_51431: 
#line 3081 
  ;
  
#line 3082 
  return;
}


#line 3087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb_enable_msix(struct adapter *adap)
{
  int __retres;
  struct msix_entry entries[9U];
  int vectors;
  int i;
  
#line 3093 
  vectors = 9;
  
#line 3094 
  i = 0;
  
#line 3094 
  goto ldv_51442;
  ldv_51441: 
#line 3095 
  ;
  
#line 3095 
  entries[i].entry = (unsigned short)i;
  
#line 3094 
  i += 1;
  ldv_51442: 
#line 3095 
  ;
  
#line 3094 
  if (i < vectors) 
#line 3096 
                   goto ldv_51441; else 
#line 3099 
                                        goto ldv_51443;
  ldv_51443: 
#line 3100 
  ;
  
#line 3097 
  vectors = pci_enable_msix_range(adap->pdev,(struct msix_entry *)(& entries),(int)(adap->params.nports + 1U),vectors);
  
#line 3099 
  if (vectors < 0) {
    
#line 3100 
    __retres = vectors;
    
#line 3100 
    goto return_label;
  }
  else ;
  
#line 3102 
  i = 0;
  
#line 3102 
  goto ldv_51445;
  ldv_51444: 
#line 3103 
  ;
  
#line 3103 
  adap->msix_info[i].vec = (unsigned short)entries[i].vector;
  
#line 3102 
  i += 1;
  ldv_51445: 
#line 3103 
  ;
  
#line 3102 
  if (i < vectors) 
#line 3104 
                   goto ldv_51444; else 
#line 3107 
                                        goto ldv_51446;
  ldv_51446: 
#line 3108 
  ;
  
#line 3104 
  adap->msix_nvectors = vectors;
  
#line 3106 
  __retres = 0;
  return_label: 
#line 3106 
                return __retres;
}


#line 3109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void print_port_info(struct adapter *adap, struct adapter_info const *ai)
{
  int i;
  char buf[80U];
  unsigned int tmp;
  
#line 3111 
  char const *pci_variant[5U] = {"PCI", "PCI-X", "PCI-X ECC", "PCI-X 266", "PCI Express"};
  
#line 3118 
  tmp = is_pcie((struct adapter const *)adap);
  
#line 3118 
  if (tmp != 0U) 
#line 3119 
                 snprintf((char *)(& buf),80UL,"%s x%d",pci_variant[(int)adap->params.pci.variant],(int)adap->params.pci.width); else 
                                                                    
#line 3123 
                                                                    snprintf((char *)(& buf),80UL,"%s %dMHz/%d-bit",pci_variant[(int)adap->params.pci.variant],(int)adap->params.pci.speed,(int)adap->params.pci.width);
  
#line 3127 
  i = 0;
  
#line 3127 
  goto ldv_51458;
  ldv_51457: 
#line 3128 
  ;
  {
    int tmp_3;
    char *tmp_5;
    char *tmp_7;
    int tmp_6;
    
#line 3128 
    struct net_device *dev = adap->port[i];
    
#line 3129 
    struct port_info const *pi = netdev_priv((struct net_device const *)dev);
    
#line 3131 
    if (0 != 0) {
      int tmp_1;
      
#line 3131 
      tmp_1 = constant_test_bit((long)i,(unsigned long const volatile *)(& adap->registered_device_map));
      
#line 3131 
      tmp_3 = tmp_1 == 0;
    }
    else {
      int tmp_2;
      
#line 3131 
      tmp_2 = variable_test_bit((long)i,(unsigned long const volatile *)(& adap->registered_device_map));
      
#line 3131 
      tmp_3 = tmp_2 == 0;
    }
    
#line 3131 
    if (tmp_3) 
#line 3132 
               goto ldv_51456; else ;
    
#line 3135 
    if ((adap->flags & 4UL) == 0UL) {
      char *tmp_4;
      
#line 3136 
      if ((adap->flags & 2UL) != 0UL) 
#line 3136 
                                      tmp_4 = (char *)" MSI"; else 
#line 3136 
                                                                   tmp_4 = (char *)"";
      
#line 3135 
      tmp_5 = tmp_4;
    }
    else 
#line 3135 
         tmp_5 = (char *)" MSI-X";
    
#line 3133 
    ;
    
#line 3134 
    tmp_6 = is_offload((struct adapter const *)adap);
    
#line 3134 
    if (tmp_6 != 0) 
#line 3134 
                    tmp_7 = (char *)"R"; else 
#line 3134 
                                              tmp_7 = (char *)"";
    
#line 3133 
    ;
    
#line 3133 
    ;
    
#line 3133 
    ;
    
#line 3133 
    netdev_info((struct net_device const *)dev,"%s %s %sNIC (rev %d) %s%s\n",ai->desc,pi->phy.desc,tmp_7,adap->params.rev,(char *)(& buf),tmp_5);
    
#line 3138 
    if (adap->name == (char const *)(& dev->name) && adap->params.vpd.mclk != 0U) {
      unsigned int tmp_8;
      unsigned int tmp_9;
      unsigned int tmp_10;
      
#line 3139 
      ;
      
#line 3139 
      tmp_8 = t3_mc7_size((struct mc7 const *)(& adap->pmrx));
      
#line 3139 
      tmp_9 = t3_mc7_size((struct mc7 const *)(& adap->pmtx));
      
#line 3139 
      tmp_10 = t3_mc7_size((struct mc7 const *)(& adap->cm));
      
#line 3139 
      ;
      
#line 3139 
      printk("\001",adap->name,tmp_10 >> 20,tmp_9 >> 20,tmp_8 >> 20,(u8 *)(& adap->params.vpd.sn));
    }
    else ;
  }
  ldv_51456: 
#line 3141 
  ;
  
#line 3127 
  i += 1;
  ldv_51458: 
#line 3128 
  ;
  
#line 3127 
  if (adap->params.nports > (unsigned int)i) 
#line 3129 
                                             goto ldv_51457; else 
#line 3132 
                                                                  goto ldv_51459;
  ldv_51459: 
#line 3133 
  ;
  
#line 3134 
  return;
}


#line 3147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct net_device_ops const cxgb_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & cxgb_open, .ndo_stop = & cxgb_close, .ndo_start_xmit = & t3_eth_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & cxgb_set_rxmode, .ndo_set_mac_address = & cxgb_set_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & cxgb_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & cxgb_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & cxgb_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & cxgb_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & cxgb_fix_features, .ndo_set_features = & cxgb_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 3164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void cxgb3_init_iscsi_mac(struct net_device *dev)
{
  
#line 3166 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 3168 
  memcpy((void *)(& pi->iscsic.mac_addr),(void const *)dev->dev_addr,6UL);
  
#line 3169 
  pi->iscsic.mac_addr[3] = (unsigned char)((unsigned int)pi->iscsic.mac_addr[3] | 128U);
  
#line 3170 
  return;
}


#line 3175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int init_one(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  int i;
  int err;
  resource_size_t mmio_start;
  resource_size_t mmio_len;
  struct adapter_info const *ai;
  struct port_info *pi;
  int tmp_1;
  int tmp_4;
  int tmp_5;
  
#line 3177 
  int pci_using_dac = 0;
  
#line 3180 
  struct adapter *adapter = (struct adapter *)0;
  {
    bool __print_once;
    
#line 3183 
    if (! __print_once) {
      
#line 3183 
      __print_once = (_Bool)1;
      
#line 3183 
      printk("\001",(char *)"Chelsio T3 Network Driver",(char *)"1.1.5-ko");
    }
    else ;
  }
  
#line 3185 
  if (cxgb3_wq == (struct workqueue_struct *)0) {
    struct workqueue_struct *tmp_0;
    {
      struct lock_class_key __key;
      char const *__lock_name;
      
#line 3186 
      __lock_name = "\"%s\"";
      
#line 3186 
      tmp_0 = __alloc_workqueue_key("%s",131082U,1,& __key,__lock_name,(char *)"cxgb3");
    }
    
#line 3186 
    cxgb3_wq = tmp_0;
    
#line 3187 
    if (cxgb3_wq == (struct workqueue_struct *)0) {
      
#line 3188 
      printk("\001");
      
#line 3189 
      __retres = -12;
      
#line 3189 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3193 
  err = pci_enable_device(pdev);
  
#line 3194 
  if (err != 0) {
    
#line 3195 
    dev_err((struct device const *)(& pdev->dev),"cannot enable PCI device\n");
    
#line 3196 
    goto out;
  }
  else ;
  
#line 3199 
  err = pci_request_regions(pdev,"cxgb3");
  
#line 3200 
  if (err != 0) {
    
#line 3202 
    _dev_info((struct device const *)(& pdev->dev),"cannot obtain PCI resources\n");
    
#line 3203 
    goto out_disable_device;
  }
  else ;
  
#line 3206 
  tmp_1 = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 3206 
  if (tmp_1 == 0) {
    
#line 3207 
    pci_using_dac = 1;
    
#line 3208 
    err = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 3209 
    if (err != 0) {
      
#line 3210 
      dev_err((struct device const *)(& pdev->dev),"unable to obtain 64-bit DMA for ");
      
#line 3212 
      goto out_release_regions;
    }
    else ;
  }
  else {
    
#line 3214 
    err = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 3214 
    if (err != 0) {
      
#line 3215 
      dev_err((struct device const *)(& pdev->dev),"no usable DMA configuration\n");
      
#line 3216 
      goto out_release_regions;
    }
    else ;
  }
  
#line 3219 
  pci_set_master(pdev);
  
#line 3220 
  pci_save_state(pdev);
  
#line 3222 
  mmio_start = pdev->resource[0].start;
  
#line 3223 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 3223 
    mmio_len = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 3223 
                                                                    mmio_len = 0ULL;
  
#line 3224 
  ai = t3_get_adapter_info((unsigned int)ent->driver_data);
  
#line 3226 
  adapter = (struct adapter *)kzalloc_0(20032UL,208U);
  
#line 3227 
  if (adapter == (struct adapter *)0) {
    
#line 3228 
    err = -12;
    
#line 3229 
    goto out_release_regions;
  }
  else ;
  
#line 3232 
  adapter->nofail_skb = alloc_skb(32U,208U);
  
#line 3234 
  if (adapter->nofail_skb == (struct sk_buff *)0) {
    
#line 3235 
    dev_err((struct device const *)(& pdev->dev),"cannot allocate nofail buffer\n");
    
#line 3236 
    err = -12;
    
#line 3237 
    goto out_free_adapter;
  }
  else ;
  
#line 3240 
  adapter->regs = ioremap_nocache(mmio_start,(unsigned long)mmio_len);
  
#line 3241 
  if (adapter->regs == (void *)0) {
    
#line 3242 
    dev_err((struct device const *)(& pdev->dev),"cannot map device registers\n");
    
#line 3243 
    err = -12;
    
#line 3244 
    goto out_free_adapter;
  }
  else ;
  
#line 3247 
  adapter->pdev = pdev;
  
#line 3248 
  adapter->name = pci_name((struct pci_dev const *)pdev);
  
#line 3249 
  adapter->msg_enable = dflt_msg_enable;
  
#line 3250 
  adapter->mmio_len = (unsigned int)mmio_len;
  {
    struct lock_class_key __key_0;
    
#line 3252 
    __mutex_init(& adapter->mdio_lock,"&adapter->mdio_lock",& __key_0);
  }
  
#line 3253 
  spinlock_check(& adapter->work_lock);
  {
    struct lock_class_key __key_1;
    
#line 3253 
    __raw_spin_lock_init(& adapter->work_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->work_lock)->rlock",& __key_1);
  }
  
#line 3254 
  spinlock_check(& adapter->stats_lock);
  {
    struct lock_class_key __key_2;
    
#line 3254 
    __raw_spin_lock_init(& adapter->stats_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->stats_lock)->rlock",& __key_2);
  }
  
#line 3256 
  INIT_LIST_HEAD(& adapter->adapter_list);
  {
    struct lock_class_key __key_3;
    
#line 3257 
    __init_work(& adapter->ext_intr_handler_task,0);
    
#line 3257 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 3257 
    adapter->ext_intr_handler_task.data = __constr_expr_37;
    
#line 3257 
    lockdep_init_map(& adapter->ext_intr_handler_task.lockdep_map,"(&adapter->ext_intr_handler_task)",& __key_3,0);
    
#line 3257 
    INIT_LIST_HEAD(& adapter->ext_intr_handler_task.entry);
    
#line 3257 
    adapter->ext_intr_handler_task.func = & ext_intr_task;
  }
  {
    struct lock_class_key __key_4;
    
#line 3258 
    __init_work(& adapter->fatal_error_handler_task,0);
    
#line 3258 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 3258 
    adapter->fatal_error_handler_task.data = __constr_expr_38;
    
#line 3258 
    lockdep_init_map(& adapter->fatal_error_handler_task.lockdep_map,"(&adapter->fatal_error_handler_task)",& __key_4,0);
    
#line 3258 
    INIT_LIST_HEAD(& adapter->fatal_error_handler_task.entry);
    
#line 3258 
    adapter->fatal_error_handler_task.func = & fatal_error_task;
  }
  {
    struct lock_class_key __key_5;
    
#line 3260 
    __init_work(& adapter->db_full_task,0);
    
#line 3260 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 3260 
    adapter->db_full_task.data = __constr_expr_39;
    
#line 3260 
    lockdep_init_map(& adapter->db_full_task.lockdep_map,"(&adapter->db_full_task)",& __key_5,0);
    
#line 3260 
    INIT_LIST_HEAD(& adapter->db_full_task.entry);
    
#line 3260 
    adapter->db_full_task.func = & db_full_task;
  }
  {
    struct lock_class_key __key_6;
    
#line 3261 
    __init_work(& adapter->db_empty_task,0);
    
#line 3261 
    atomic_long_t __constr_expr_40 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 3261 
    adapter->db_empty_task.data = __constr_expr_40;
    
#line 3261 
    lockdep_init_map(& adapter->db_empty_task.lockdep_map,"(&adapter->db_empty_task)",& __key_6,0);
    
#line 3261 
    INIT_LIST_HEAD(& adapter->db_empty_task.entry);
    
#line 3261 
    adapter->db_empty_task.func = & db_empty_task;
  }
  {
    struct lock_class_key __key_7;
    
#line 3262 
    __init_work(& adapter->db_drop_task,0);
    
#line 3262 
    atomic_long_t __constr_expr_41 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 3262 
    adapter->db_drop_task.data = __constr_expr_41;
    
#line 3262 
    lockdep_init_map(& adapter->db_drop_task.lockdep_map,"(&adapter->db_drop_task)",& __key_7,0);
    
#line 3262 
    INIT_LIST_HEAD(& adapter->db_drop_task.entry);
    
#line 3262 
    adapter->db_drop_task.func = & db_drop_task;
  }
  {
    struct lock_class_key __key_8;
    
#line 3264 
    __init_work(& adapter->adap_check_task.work,0);
    
#line 3264 
    atomic_long_t __constr_expr_42 = {.counter = WORK_STRUCT_NO_POOL_0};
    
#line 3264 
    adapter->adap_check_task.work.data = __constr_expr_42;
    
#line 3264 
    lockdep_init_map(& adapter->adap_check_task.work.lockdep_map,"(&(&adapter->adap_check_task)->work)",& __key_8,0);
    
#line 3264 
    INIT_LIST_HEAD(& adapter->adap_check_task.work.entry);
    
#line 3264 
    adapter->adap_check_task.work.func = & t3_adap_check_task;
  }
  {
    struct lock_class_key __key_9;
    
#line 3264 
    init_timer_key(& adapter->adap_check_task.timer,2097152U,"(&(&adapter->adap_check_task)->timer)",& __key_9);
  }
  
#line 3264 
  adapter->adap_check_task.timer.function = & delayed_work_timer_fn;
  
#line 3264 
  adapter->adap_check_task.timer.data = (unsigned long)(& adapter->adap_check_task);
  
#line 3266 
  i = 0;
  
#line 3266 
  goto ldv_51504;
  ldv_51503: 
#line 3267 
  ;
  {
    struct net_device *netdev;
    
#line 3269 
    netdev = ldv_alloc_etherdev_mqs_112(4128,8U,8U);
    
#line 3270 
    if (netdev == (struct net_device *)0) {
      
#line 3271 
      err = -12;
      
#line 3272 
      goto out_free_dev;
    }
    else ;
    
#line 3275 
    netdev->dev.parent = & pdev->dev;
    
#line 3277 
    adapter->port[i] = netdev;
    
#line 3278 
    pi = (struct port_info *)netdev_priv((struct net_device const *)netdev);
    
#line 3279 
    pi->adapter = adapter;
    
#line 3280 
    pi->port_id = (unsigned char)i;
    
#line 3281 
    netif_carrier_off(netdev);
    
#line 3282 
    netdev->irq = (int)pdev->irq;
    
#line 3283 
    netdev->mem_start = (unsigned long)mmio_start;
    
#line 3284 
    netdev->mem_end = (unsigned long)((mmio_start + mmio_len) + 18446744073709551615ULL);
    
#line 3285 
    netdev->hw_features = 17179934979ULL;
    
#line 3287 
    netdev->features = (netdev->features | netdev->hw_features) | 128ULL;
    
#line 3289 
    netdev->vlan_features |= netdev->features & 1638451ULL;
    
#line 3290 
    if (pci_using_dac != 0) 
#line 3291 
                            netdev->features |= 32ULL; else ;
    
#line 3293 
    netdev->netdev_ops = & cxgb_netdev_ops;
    
#line 3294 
    netdev->ethtool_ops = & cxgb_ethtool_ops;
  }
  
#line 3266 
  i += 1;
  ldv_51504: 
#line 3267 
  ;
  
#line 3266 
  if ((int)ai->nports0 + (int)ai->nports1 > i) 
#line 3268 
                                               goto ldv_51503; else 
#line 3271 
                                                                    goto ldv_51505;
  ldv_51505: 
#line 3272 
  ;
  
#line 3297 
  pci_set_drvdata(pdev,(void *)adapter);
  
#line 3298 
  tmp_4 = t3_prep_adapter(adapter,ai,1);
  
#line 3298 
  if (tmp_4 < 0) {
    
#line 3299 
    err = -19;
    
#line 3300 
    goto out_free_dev;
  }
  else ;
  
#line 3309 
  i = 0;
  
#line 3309 
  goto ldv_51507;
  ldv_51506: 
#line 3310 
  ;
  
#line 3310 
  err = ldv_register_netdev_113(adapter->port[i]);
  
#line 3311 
  if (err != 0) 
#line 3312 
                dev_warn((struct device const *)(& pdev->dev),"cannot register net device %s, skipping\n",(char *)(& (adapter->port[i])->name));
  else {
    
#line 3320 
    if (adapter->registered_device_map == 0UL) 
#line 3321 
                                               adapter->name = (char const *)(& (adapter->port[i])->name); else ;
    
#line 3323 
    __set_bit((long)i,(unsigned long volatile *)(& adapter->registered_device_map));
  }
  
#line 3309 
  i += 1;
  ldv_51507: 
#line 3310 
  ;
  
#line 3309 
  if (adapter->params.nports > (unsigned int)i) 
#line 3311 
                                                goto ldv_51506; else 
                                                                  
#line 3314 
                                                                  goto ldv_51508;
  ldv_51508: 
#line 3315 
  ;
  
#line 3326 
  if (adapter->registered_device_map == 0UL) {
    
#line 3327 
    dev_err((struct device const *)(& pdev->dev),"could not register any net devices\n");
    
#line 3328 
    goto out_free_dev;
  }
  else ;
  
#line 3331 
  i = 0;
  
#line 3331 
  goto ldv_51510;
  ldv_51509: 
#line 3332 
  ;
  
#line 3332 
  cxgb3_init_iscsi_mac(adapter->port[i]);
  
#line 3331 
  i += 1;
  ldv_51510: 
#line 3332 
  ;
  
#line 3331 
  if (adapter->params.nports > (unsigned int)i) 
#line 3333 
                                                goto ldv_51509; else 
                                                                  
#line 3336 
                                                                  goto ldv_51511;
  ldv_51511: 
#line 3337 
  ;
  
#line 3335 
  t3_led_ready(adapter);
  
#line 3337 
  tmp_5 = is_offload((struct adapter const *)adapter);
  
#line 3337 
  if (tmp_5 != 0) {
    
#line 3338 
    __set_bit(15L,(unsigned long volatile *)(& adapter->registered_device_map));
    
#line 3339 
    cxgb3_adapter_ofld(adapter);
  }
  else ;
  
#line 3343 
  if (msi > 1) {
    int tmp_7;
    
#line 3343 
    tmp_7 = cxgb_enable_msix(adapter);
    
#line 3343 
    if (tmp_7 == 0) 
#line 3344 
                    adapter->flags |= 4UL; else 
#line 3343 
                                                goto _LAND;
  }
  else {
    _LAND: 
#line 3345 
    ;
    
#line 3345 
    if (msi > 0) {
      int tmp_6;
      
#line 3345 
      tmp_6 = pci_enable_msi_exact(pdev,1);
      
#line 3345 
      if (tmp_6 == 0) 
#line 3346 
                      adapter->flags |= 2UL; else ;
    }
    else ;
  }
  
#line 3348 
  set_nqsets(adapter);
  
#line 3350 
  err = sysfs_create_group(& (adapter->port[0])->dev.kobj,(struct attribute_group const *)(& cxgb3_attr_group));
  
#line 3353 
  print_port_info(adapter,ai);
  
#line 3354 
  __retres = 0;
  
#line 3354 
  goto return_label;
  out_free_dev: 
#line 3356 
  ;
  
#line 3357 
  iounmap((void volatile *)adapter->regs);
  
#line 3358 
  i = ((int)ai->nports0 + (int)ai->nports1) + -1;
  
#line 3358 
  goto ldv_51513;
  ldv_51512: 
#line 3359 
  ;
  
#line 3359 
  if (adapter->port[i] != (struct net_device *)0) 
#line 3360 
                                                  ldv_free_netdev_114(adapter->port[i]); else ;
  
#line 3358 
  i -= 1;
  ldv_51513: 
#line 3359 
  ;
  
#line 3358 
  if (i >= 0) 
#line 3360 
              goto ldv_51512; else 
#line 3363 
                                   goto ldv_51514;
  ldv_51514: 
#line 3364 
  ;
  out_free_adapter: 
#line 3362 
  ;
  
#line 3363 
  kfree((void const *)adapter);
  out_release_regions: 
#line 3365 
  ;
  
#line 3366 
  pci_release_regions(pdev);
  out_disable_device: 
#line 3367 
  ;
  
#line 3368 
  pci_disable_device(pdev);
  out: 
#line 3369 
  ;
  
#line 3370 
  __retres = err;
  return_label: 
#line 3370 
                return __retres;
}


#line 3373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void remove_one(struct pci_dev *pdev)
{
  
#line 3375 
  struct adapter *adapter = pci_get_drvdata(pdev);
  
#line 3377 
  if (adapter != (struct adapter *)0) {
    int i;
    int tmp_1;
    int tmp_4;
    
#line 3380 
    t3_sge_stop(adapter);
    
#line 3381 
    sysfs_remove_group(& (adapter->port[0])->dev.kobj,(struct attribute_group const *)(& cxgb3_attr_group));
    
#line 3384 
    tmp_1 = is_offload((struct adapter const *)adapter);
    
#line 3384 
    if (tmp_1 != 0) {
      int tmp_0;
      
#line 3385 
      cxgb3_adapter_unofld(adapter);
      
#line 3386 
      tmp_0 = constant_test_bit(15L,(unsigned long const volatile *)(& adapter->open_device_map));
      
#line 3386 
      if (tmp_0 != 0) 
#line 3388 
                      offload_close(& adapter->tdev); else ;
    }
    else ;
    
#line 3391 
    i = 0;
    
#line 3391 
    goto ldv_51521;
    ldv_51520: 
#line 3392 
    ;
    
#line 3392 
    if (0 != 0) {
      int tmp_2;
      
#line 3392 
      tmp_2 = constant_test_bit((long)i,(unsigned long const volatile *)(& adapter->registered_device_map));
      
#line 3392 
      tmp_4 = tmp_2 != 0;
    }
    else {
      int tmp_3;
      
#line 3392 
      tmp_3 = variable_test_bit((long)i,(unsigned long const volatile *)(& adapter->registered_device_map));
      
#line 3392 
      tmp_4 = tmp_3 != 0;
    }
    
#line 3392 
    if (tmp_4) 
#line 3393 
               ldv_unregister_netdev_115(adapter->port[i]); else ;
    
#line 3391 
    i += 1;
    ldv_51521: 
#line 3392 
    ;
    
#line 3391 
    if (adapter->params.nports > (unsigned int)i) 
#line 3393 
                                                  goto ldv_51520; else 
                                                                    
#line 3396 
                                                                    goto ldv_51522;
    ldv_51522: 
#line 3397 
    ;
    
#line 3395 
    t3_stop_sge_timers(adapter);
    
#line 3396 
    t3_free_sge_resources(adapter);
    
#line 3397 
    cxgb_disable_msi(adapter);
    
#line 3399 
    i = 0;
    
#line 3399 
    goto ldv_51524;
    ldv_51523: 
#line 3400 
    ;
    
#line 3400 
    if (adapter->port[i] != (struct net_device *)0) 
#line 3401 
                                                    ldv_free_netdev_116(adapter->port[i]); else ;
    
#line 3399 
    i += 1;
    ldv_51524: 
#line 3400 
    ;
    
#line 3399 
    if (adapter->params.nports > (unsigned int)i) 
#line 3401 
                                                  goto ldv_51523; else 
                                                                    
#line 3404 
                                                                    goto ldv_51525;
    ldv_51525: 
#line 3405 
    ;
    
#line 3403 
    iounmap((void volatile *)adapter->regs);
    
#line 3404 
    if (adapter->nofail_skb != (struct sk_buff *)0) 
#line 3405 
                                                    kfree_skb(adapter->nofail_skb); else ;
    
#line 3406 
    kfree((void const *)adapter);
    
#line 3407 
    pci_release_regions(pdev);
    
#line 3408 
    pci_disable_device(pdev);
  }
  else ;
  
#line 3410 
  return;
}


#line 3412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static struct pci_driver driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "cxgb3", .id_table = (struct pci_device_id const *)(& cxgb3_pci_tbl), .probe = & init_one, .remove = & remove_one, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & t3_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static int cxgb3_init_module(void)
{
  int ret;
  
#line 3424 
  cxgb3_offload_init();
  
#line 3426 
  ret = ldv___pci_register_driver_117(& driver,& __this_module,"cxgb3");
  
#line 3427 
  return ret;
}


#line 3430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c"
static void cxgb3_cleanup_module(void)
{
  
#line 3432 
  ldv_pci_unregister_driver_118(& driver);
  
#line 3433 
  if (cxgb3_wq != (struct workqueue_struct *)0) 
#line 3434 
                                                destroy_workqueue(cxgb3_wq); else ;
  
#line 3435 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int (*ldv_emg_alias_eth_validate_addr_8)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_11)(struct net_device *) = & ethtool_op_get_link;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
struct pci_driver *ldv_emg_alias_driver_2 = & driver;

#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 66 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 68 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 69 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 70 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 71 
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2);


#line 72 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 73 
_Bool ldv_emg_flush_work(struct work_struct *arg0);


#line 74 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 76 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_cxgb_set_mac_addr_19(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 81 
  tmp = cxgb_set_mac_addr(arg0,arg1);
  
#line 81 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_set_msglevel_27(struct net_device *arg0, unsigned int arg1)
{
  
#line 86 
  set_msglevel(arg0,arg1);
  
#line 87 
  return;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_strings_6(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 91 
  get_strings(arg0,arg1,arg2);
  
#line 92 
  return;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_get_coalesce_28(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 96 
  tmp = get_coalesce(arg0,arg1);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_cxgb_set_rxmode_7(struct net_device *arg0)
{
  
#line 101 
  cxgb_set_rxmode(arg0);
  
#line 102 
  return;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_regs_23(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 106 
  get_regs(arg0,arg1,arg2);
  
#line 107 
  return;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_get_regs_len_29(struct net_device *arg0)
{
  int tmp;
  
#line 111 
  tmp = get_regs_len(arg0);
  
#line 111 
  return tmp;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_restart_autoneg_26(struct net_device *arg0)
{
  int tmp;
  
#line 116 
  tmp = restart_autoneg(arg0);
  
#line 116 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_set_coalesce_30(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 121 
  tmp = set_coalesce(arg0,arg1);
  
#line 121 
  return tmp;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_cxgb_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 126 
  tmp = cxgb_open(arg0);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_wol_21(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 131 
  get_wol(arg0,arg1);
  
#line 132 
  return;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_set_eeprom_16(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 136 
  tmp = set_eeprom(arg0,arg1,arg2);
  
#line 136 
  return tmp;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 141 
  tmp = set_settings(arg0,arg1);
  
#line 141 
  return tmp;
}


#line 145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_cxgb_netpoll_32(struct net_device *arg0)
{
  
#line 146 
  cxgb_netpoll(arg0);
  
#line 147 
  return;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 151 
  get_pauseparam(arg0,arg1);
  
#line 152 
  return;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_remove_one_3(struct pci_dev *arg0)
{
  
#line 156 
  remove_one(arg0);
  
#line 157 
  return;
}


#line 160  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_stats_9(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 161 
  get_stats(arg0,arg1,arg2);
  
#line 162 
  return;
}


#line 165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_set_phys_id_5(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 166 
  tmp = set_phys_id(arg0,arg1);
  
#line 166 
  return tmp;
}


#line 170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_get_eeprom_len_33(struct net_device *arg0)
{
  int tmp;
  
#line 171 
  tmp = get_eeprom_len(arg0);
  
#line 171 
  return tmp;
}


#line 175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 176 
  tmp = get_eeprom(arg0,arg1,arg2);
  
#line 176 
  return tmp;
}


#line 180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_drvinfo_14(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 181 
  get_drvinfo(arg0,arg1);
  
#line 182 
  return;
}


#line 185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
unsigned int ldv_emg_wrapper_get_msglevel_18(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 186 
  tmp = get_msglevel(arg0);
  
#line 186 
  return tmp;
}


#line 190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_cxgb_change_mtu_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 191 
  tmp = cxgb_change_mtu(arg0,arg1);
  
#line 191 
  return tmp;
}


#line 195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_cxgb_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 196 
  tmp = cxgb_close(arg0);
  
#line 196 
  return tmp;
}


#line 200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_get_settings_20(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 201 
  tmp = get_settings(arg0,arg1);
  
#line 201 
  return tmp;
}


#line 205  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_set_pauseparam_31(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 206 
  tmp = set_pauseparam(arg0,arg1);
  
#line 206 
  return tmp;
}


#line 210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_init_one_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 211 
  tmp = init_one(arg0,(struct pci_device_id const *)arg1);
  
#line 211 
  return tmp;
}


#line 215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
enum irqreturn ldv_emg_wrapper_t3_async_intr_handler_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 216 
  tmp = t3_async_intr_handler(arg0,arg1);
  
#line 216 
  return tmp;
}


#line 220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_set_sge_param_17(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 221 
  tmp = set_sge_param(arg0,arg1);
  
#line 221 
  return tmp;
}


#line 225  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_cxgb3_cleanup_module(void)
{
  
#line 226 
  cxgb3_cleanup_module();
  
#line 227 
  return;
}


#line 229  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_cxgb3_init_module(void)
{
  int tmp;
  
#line 230 
  tmp = cxgb3_init_module();
  
#line 230 
  return tmp;
}


#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_get_sset_count_24(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 234 
  tmp = get_sset_count(arg0,arg1);
  
#line 234 
  return tmp;
}


#line 238  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
unsigned long long ldv_emg_wrapper_cxgb_fix_features_15(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 239 
  tmp = cxgb_fix_features(arg0,arg1);
  
#line 239 
  return tmp;
}


#line 243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
struct net_device_stats *ldv_emg_wrapper_cxgb_get_stats_25(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 244 
  tmp = cxgb_get_stats(arg0);
  
#line 244 
  return tmp;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_cxgb_set_features_13(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 249 
  tmp = cxgb_set_features(arg0,arg1);
  
#line 249 
  return tmp;
}


#line 253  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
int ldv_emg_wrapper_cxgb_ioctl_22(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 254 
  tmp = cxgb_ioctl(arg0,arg1,arg2);
  
#line 254 
  return tmp;
}


#line 258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
void ldv_emg_wrapper_get_sge_param_12(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 259 
  get_sge_param(arg0,arg1);
  
#line 260 
  return;
}


#line 271  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 274 
  tmp = ldv_ptr_err(ptr);
  
#line 274 
  return tmp;
}


#line 278  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static bool IS_ERR_0(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 282 
  ret = ldv_is_err(ptr);
  
#line 283 
  __retres = (_Bool)(ret != 0L);
  
#line 283 
  return __retres;
}


#line 683  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 686 
  tmp = ldv_kmalloc(size,flags);
  
#line 686 
  return tmp;
}


#line 704  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 707 
  tmp = ldv_kzalloc(size,flags);
  
#line 707 
  return tmp;
}


#line 950  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static int ldv_request_irq_74(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 954 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 954 
  return tmp;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_irq_75(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 962 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 963 
  return;
}


#line 966  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_irq_76(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 970 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 971 
  return;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_irq_77(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 978 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 979 
  return;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_irq_78(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 986 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_irq_79_0(spinlock_t *lock)
{
  
#line 994 
  ldv_spin_model_lock((char *)"lock_of_sge_rspq");
  
#line 996 
  spin_lock_irq_1(lock);
  
#line 997 
  return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_irq_80_0(spinlock_t *lock)
{
  
#line 1004 
  ldv_spin_model_unlock((char *)"lock_of_sge_rspq");
  
#line 1006 
  spin_unlock_irq_1(lock);
  
#line 1007 
  return;
}


#line 1010  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static int ldv_request_irq_81(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1014 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1014 
  return tmp;
}


#line 1018  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_irq_82(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1022 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1023 
  return;
}


#line 1026  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static int ldv_request_irq_83(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1030 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1030 
  return tmp;
}


#line 1034  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_irq_84(spinlock_t *lock)
{
  
#line 1038 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1040 
  spin_lock_irq_1(lock);
  
#line 1041 
  return;
}


#line 1044  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_irq_85(spinlock_t *lock)
{
  
#line 1048 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1050 
  spin_unlock_irq_1(lock);
  
#line 1051 
  return;
}


#line 1054  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static bool ldv_queue_delayed_work_86(struct workqueue_struct *wq, struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 1058 
  tmp = ldv_emg_queue_delayed_work(wq,dwork,delay);
  
#line 1058 
  __retres = tmp != 0;
  
#line 1058 
  return __retres;
}


#line 1062  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static bool ldv_flush_work_87(struct work_struct *ldv_func_arg1)
{
  bool __retres;
  bool tmp;
  
#line 1066 
  tmp = ldv_emg_flush_work(ldv_func_arg1);
  
#line 1066 
  __retres = tmp != 0;
  
#line 1066 
  return __retres;
}


#line 1070  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_irq_88(spinlock_t *lock)
{
  
#line 1074 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1076 
  spin_lock_irq_1(lock);
  
#line 1077 
  return;
}


#line 1080  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_irq_89(spinlock_t *lock)
{
  
#line 1084 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1086 
  spin_unlock_irq_1(lock);
  
#line 1087 
  return;
}


#line 1090  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_90(spinlock_t *lock)
{
  
#line 1094 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 1096 
  spin_lock_2(lock);
  
#line 1097 
  return;
}


#line 1100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_91(spinlock_t *lock)
{
  
#line 1104 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 1106 
  spin_unlock_2(lock);
  
#line 1107 
  return;
}


#line 1110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_92(spinlock_t *lock)
{
  
#line 1114 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 1116 
  spin_lock_2(lock);
  
#line 1117 
  return;
}


#line 1120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_93(spinlock_t *lock)
{
  
#line 1124 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 1126 
  spin_unlock_2(lock);
  
#line 1127 
  return;
}


#line 1130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_94(spinlock_t *lock)
{
  
#line 1134 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 1136 
  spin_lock_2(lock);
  
#line 1137 
  return;
}


#line 1140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_95(spinlock_t *lock)
{
  
#line 1144 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 1146 
  spin_unlock_2(lock);
  
#line 1147 
  return;
}


#line 1150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_96(spinlock_t *lock)
{
  
#line 1154 
  ldv_spin_model_lock((char *)"stats_lock_of_adapter");
  
#line 1156 
  spin_lock_2(lock);
  
#line 1157 
  return;
}


#line 1160  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_97(spinlock_t *lock)
{
  
#line 1164 
  ldv_spin_model_unlock((char *)"stats_lock_of_adapter");
  
#line 1166 
  spin_unlock_2(lock);
  
#line 1167 
  return;
}


#line 1170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_irq_98(spinlock_t *lock)
{
  
#line 1174 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1176 
  spin_lock_irq_1(lock);
  
#line 1177 
  return;
}


#line 1180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_irq_99(spinlock_t *lock)
{
  
#line 1184 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1186 
  spin_unlock_irq_1(lock);
  
#line 1187 
  return;
}


#line 1190  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_irq_100(spinlock_t *lock)
{
  
#line 1194 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1196 
  spin_lock_irq_1(lock);
  
#line 1197 
  return;
}


#line 1200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_irq_101(spinlock_t *lock)
{
  
#line 1204 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1206 
  spin_unlock_irq_1(lock);
  
#line 1207 
  return;
}


#line 1210  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_irq_102(spinlock_t *lock)
{
  
#line 1214 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1216 
  spin_lock_irq_1(lock);
  
#line 1217 
  return;
}


#line 1220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_irq_103(spinlock_t *lock)
{
  
#line 1224 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1226 
  spin_unlock_irq_1(lock);
  
#line 1227 
  return;
}


#line 1230  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_104_0(spinlock_t *lock)
{
  
#line 1234 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1236 
  spin_lock_2(lock);
  
#line 1237 
  return;
}


#line 1240  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static bool ldv_queue_work_105(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1244 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1244 
  __retres = tmp != 0;
  
#line 1244 
  return __retres;
}


#line 1248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_106(spinlock_t *lock)
{
  
#line 1252 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1254 
  spin_unlock_2(lock);
  
#line 1255 
  return;
}


#line 1258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_107(spinlock_t *lock)
{
  
#line 1262 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1264 
  spin_lock_2(lock);
  
#line 1265 
  return;
}


#line 1268  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_108(spinlock_t *lock)
{
  
#line 1272 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1274 
  spin_unlock_2(lock);
  
#line 1275 
  return;
}


#line 1278  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_lock_109(spinlock_t *lock)
{
  
#line 1282 
  ldv_spin_model_lock((char *)"work_lock_of_adapter");
  
#line 1284 
  spin_lock_2(lock);
  
#line 1285 
  return;
}


#line 1288  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static bool ldv_queue_work_110(struct workqueue_struct *wq, struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1292 
  tmp = ldv_emg_queue_work(wq,work);
  
#line 1292 
  __retres = tmp != 0;
  
#line 1292 
  return __retres;
}


#line 1296  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_spin_unlock_111_0(spinlock_t *lock)
{
  
#line 1300 
  ldv_spin_model_unlock((char *)"work_lock_of_adapter");
  
#line 1302 
  spin_unlock_2(lock);
  
#line 1303 
  return;
}


#line 1306  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_112(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1310 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1310 
  return tmp;
}


#line 1314  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static int ldv_register_netdev_113(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1318 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1318 
  return tmp;
}


#line 1322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_netdev_114(struct net_device *ldv_func_arg1)
{
  
#line 1326 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1327 
  return;
}


#line 1330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_unregister_netdev_115(struct net_device *ldv_func_arg1)
{
  
#line 1334 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1335 
  return;
}


#line 1338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_free_netdev_116(struct net_device *ldv_func_arg1)
{
  
#line 1342 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1343 
  return;
}


#line 1346  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static int ldv___pci_register_driver_117(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1350 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1350 
  return tmp;
}


#line 1354  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_cxgb3_main.c.aux"
static void ldv_pci_unregister_driver_118(struct pci_driver *ldv_func_arg1)
{
  
#line 1358 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1359 
  return;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mdio.h"
int mdio_set_flag(struct mdio_if_info const *, int, int, u16, int, bool);


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/adapter.h"
__inline static int phy2portid(struct cphy *phy)
{
  int __retres;
  
#line 292 
  struct adapter *adap = phy->adapter;
  
#line 293 
  struct port_info *port0 = adap2pinfo(adap,0);
  
#line 295 
  __retres = & port0->phy != phy;
  
#line 295 
  return __retres;
}


#line 660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
int t3_phy_lasi_intr_enable(struct cphy *phy);


#line 661 
int t3_phy_lasi_intr_disable(struct cphy *phy);


#line 662 
int t3_phy_lasi_intr_clear(struct cphy *phy);


#line 663 
int t3_phy_lasi_intr_handler(struct cphy *phy);


#line 759 
int t3_ael1002_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 761 
int t3_ael1006_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 763 
int t3_ael2005_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 765 
int t3_ael2020_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 767 
int t3_qt2045_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 769 
int t3_xaui_direct_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int set_phy_regs(struct cphy *phy, struct reg_val const *rv)
{
  int err;
  
#line 88 
  err = 0;
  
#line 88 
  goto ldv_47514;
  ldv_47513: 
#line 89 
  ;
  
#line 89 
  if ((unsigned int)rv->clear_bits == 65535U) 
#line 90 
                                              err = t3_mdio_write(phy,(int)rv->mmd_addr,(int)rv->reg_addr,(unsigned int)rv->set_bits); else 
                                                                    
#line 93 
                                                                    err = t3_mdio_change_bits(phy,(int)rv->mmd_addr,(int)rv->reg_addr,(unsigned int)rv->clear_bits,(unsigned int)rv->set_bits);
  
#line 88 
  rv += 1;
  ldv_47514: 
#line 89 
  ;
  
#line 88 
  if ((unsigned int)rv->mmd_addr != 0U && err == 0) 
#line 90 
                                                    goto ldv_47513; else 
                                                                    
#line 93 
                                                                    goto ldv_47515;
  ldv_47515: 
#line 94 
  ;
  
#line 97 
  return err;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static void ael100x_txon(struct cphy *phy)
{
  unsigned int tmp;
  
#line 103 
  if (phy->mdio.prtad == 0) 
#line 103 
                            tmp = 128U; else 
#line 103 
                                             tmp = 4U;
  
#line 102 
  int tx_on_gpio = (int)tmp;
  
#line 105 
  msleep(100U);
  
#line 106 
  t3_set_reg_field(phy->adapter,208U,0U,(unsigned int)tx_on_gpio);
  
#line 107 
  msleep(30U);
  
#line 108 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael_i2c_rd(struct cphy *phy, int dev_addr, int word_addr)
{
  int __retres;
  int i;
  int err;
  unsigned int stat;
  unsigned int data;
  
#line 118 
  err = t3_mdio_write(phy,1,49930,(unsigned int)(((dev_addr << 8) | 256) | word_addr));
  
#line 120 
  if (err != 0) {
    
#line 121 
    __retres = err;
    
#line 121 
    goto return_label;
  }
  else ;
  
#line 123 
  i = 0;
  
#line 123 
  goto ldv_47530;
  ldv_47529: 
#line 124 
  ;
  
#line 124 
  msleep(1U);
  
#line 125 
  err = t3_mdio_read(phy,1,49932,& stat);
  
#line 126 
  if (err != 0) {
    
#line 127 
    __retres = err;
    
#line 127 
    goto return_label;
  }
  else ;
  
#line 128 
  if ((stat & 3U) == 1U) {
    
#line 129 
    err = t3_mdio_read(phy,1,49931,& data);
    
#line 131 
    if (err != 0) {
      
#line 132 
      __retres = err;
      
#line 132 
      goto return_label;
    }
    else ;
    
#line 133 
    __retres = (int)(data >> 8);
    
#line 133 
    goto return_label;
  }
  else ;
  
#line 123 
  i += 1;
  ldv_47530: 
#line 124 
  ;
  
#line 123 
  if (i <= 199) 
#line 125 
                goto ldv_47529; else 
#line 128 
                                     goto ldv_47531;
  ldv_47531: 
#line 129 
  ;
  
#line 136 
  dev_warn((struct device const *)(& ((phy->adapter)->pdev)->dev),"PHY %u i2c read of dev.addr %#x.%#x timed out\n",phy->mdio.prtad,dev_addr,word_addr);
  
#line 138 
  __retres = -110;
  return_label: 
#line 138 
                return __retres;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael1002_power_down(struct cphy *phy, int enable)
{
  int err;
  
#line 145 
  err = t3_mdio_write(phy,1,9,(unsigned int)(enable != 0));
  
#line 146 
  if (err == 0) 
#line 147 
                err = mdio_set_flag((struct mdio_if_info const *)(& phy->mdio),phy->mdio.prtad,1,(unsigned short)0,2048,(_Bool)(enable != 0)); else ;
  
#line 150 
  return err;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael1002_reset(struct cphy *phy, int wait)
{
  int __retres;
  int err;
  
#line 157 
  err = ael1002_power_down(phy,0);
  
#line 157 
  if (err != 0) {
    
#line 164 
    __retres = err;
    
#line 164 
    goto return_label;
  }
  else {
    
#line 158 
    err = t3_mdio_write(phy,1,49154,1U);
    
#line 157 
    if (err != 0) {
      
#line 164 
      __retres = err;
      
#line 164 
      goto return_label;
    }
    else {
      
#line 159 
      err = t3_mdio_write(phy,1,49169,0U);
      
#line 158 
      if (err != 0) {
        
#line 164 
        __retres = err;
        
#line 164 
        goto return_label;
      }
      else {
        
#line 160 
        err = t3_mdio_write(phy,1,49170,0U);
        
#line 159 
        if (err != 0) {
          
#line 164 
          __retres = err;
          
#line 164 
          goto return_label;
        }
        else {
          
#line 161 
          err = t3_mdio_write(phy,1,49173,24U);
          
#line 160 
          if (err != 0) {
            
#line 164 
            __retres = err;
            
#line 164 
            goto return_label;
          }
          else {
            
#line 162 
            err = t3_mdio_change_bits(phy,1,49175,0U,32U);
            
#line 161 
            if (err != 0) {
              
#line 164 
              __retres = err;
              
#line 164 
              goto return_label;
            }
            else ;
          }
        }
      }
    }
  }
  
#line 165 
  __retres = 0;
  return_label: 
#line 165 
                return __retres;
}


#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael1002_intr_noop(struct cphy *phy)
{
  int __retres;
  
#line 170 
  __retres = 0;
  
#line 170 
  return __retres;
}


#line 176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int get_link_status_r(struct cphy *phy, int *link_ok, int *speed, int *duplex, int *fc)
{
  int __retres;
  
#line 179 
  if (link_ok != (int *)0) {
    unsigned int stat0;
    unsigned int stat1;
    unsigned int stat2;
    
#line 181 
    int err = t3_mdio_read(phy,1,10,& stat0);
    
#line 184 
    if (err == 0) 
#line 185 
                  err = t3_mdio_read(phy,3,32,& stat1); else ;
    
#line 187 
    if (err == 0) 
#line 188 
                  err = t3_mdio_read(phy,4,24,& stat2); else ;
    
#line 190 
    if (err != 0) {
      
#line 191 
      __retres = err;
      
#line 191 
      goto return_label;
    }
    else ;
    
#line 192 
    *link_ok = (int)((stat0 & stat1) & (stat2 >> 12)) & 1;
  }
  else ;
  
#line 194 
  if (speed != (int *)0) 
#line 195 
                         *speed = 10000; else ;
  
#line 196 
  if (duplex != (int *)0) 
#line 197 
                          *duplex = 1; else ;
  
#line 198 
  __retres = 0;
  return_label: 
#line 198 
                return __retres;
}


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct cphy_ops ael1002_ops = {.reset = & ael1002_reset, .intr_enable = & ael1002_intr_noop, .intr_disable = & ael1002_intr_noop, .intr_clear = & ael1002_intr_noop, .intr_handler = & ael1002_intr_noop, .autoneg_enable = (int (*)(struct cphy *))0, .autoneg_restart = (int (*)(struct cphy *))0, .advertise = (int (*)(struct cphy *, unsigned int ))0, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = (int (*)(struct cphy *, int , int ))0, .get_link_status = & get_link_status_r, .power_down = & ael1002_power_down, .mmds = 26U};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
int t3_ael1002_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  
#line 215 
  cphy_init(phy,adapter,phy_addr,& ael1002_ops,mdio_ops,5376U,"10GBASE-R");
  
#line 218 
  ael100x_txon(phy);
  
#line 219 
  __retres = 0;
  
#line 219 
  return __retres;
}


#line 222  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael1006_reset(struct cphy *phy, int wait)
{
  int tmp;
  
#line 224 
  tmp = t3_phy_reset(phy,1,wait);
  
#line 224 
  return tmp;
}


#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct cphy_ops ael1006_ops = {.reset = & ael1006_reset, .intr_enable = & t3_phy_lasi_intr_enable, .intr_disable = & t3_phy_lasi_intr_disable, .intr_clear = & t3_phy_lasi_intr_clear, .intr_handler = & t3_phy_lasi_intr_handler, .autoneg_enable = (int (*)(struct cphy *))0, .autoneg_restart = (int (*)(struct cphy *))0, .advertise = (int (*)(struct cphy *, unsigned int ))0, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = (int (*)(struct cphy *, int , int ))0, .get_link_status = & get_link_status_r, .power_down = & ael1002_power_down, .mmds = 26U};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
int t3_ael1006_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  
#line 241 
  cphy_init(phy,adapter,phy_addr,& ael1006_ops,mdio_ops,5376U,"10GBASE-SR");
  
#line 244 
  ael100x_txon(phy);
  
#line 245 
  __retres = 0;
  
#line 245 
  return __retres;
}


#line 251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2xxx_get_module_type(struct cphy *phy, int delay_ms)
{
  int __retres;
  int v;
  
#line 255 
  if (delay_ms != 0) 
#line 256 
                     msleep((unsigned int)delay_ms); else ;
  
#line 259 
  v = ael_i2c_rd(phy,160,3);
  
#line 260 
  if (v < 0) {
    
#line 261 
    __retres = v;
    
#line 261 
    goto return_label;
  }
  else ;
  
#line 263 
  if (v == 16) {
    
#line 264 
    __retres = 1;
    
#line 264 
    goto return_label;
  }
  else ;
  
#line 265 
  if (v == 32) {
    
#line 266 
    __retres = 2;
    
#line 266 
    goto return_label;
  }
  else ;
  
#line 267 
  if (v == 64) {
    
#line 268 
    __retres = 3;
    
#line 268 
    goto return_label;
  }
  else ;
  
#line 270 
  v = ael_i2c_rd(phy,160,6);
  
#line 271 
  if (v < 0) {
    
#line 272 
    __retres = v;
    
#line 272 
    goto return_label;
  }
  else ;
  
#line 273 
  if (v != 4) 
#line 274 
              goto unknown; else ;
  
#line 276 
  v = ael_i2c_rd(phy,160,10);
  
#line 277 
  if (v < 0) {
    
#line 278 
    __retres = v;
    
#line 278 
    goto return_label;
  }
  else ;
  
#line 280 
  if ((v & 128) != 0) {
    int tmp;
    
#line 281 
    v = ael_i2c_rd(phy,160,18);
    
#line 282 
    if (v < 0) {
      
#line 283 
      __retres = v;
      
#line 283 
      goto return_label;
    }
    else ;
    
#line 284 
    if (v > 10) 
#line 284 
                tmp = 5; else 
#line 284 
                              tmp = 4;
    
#line 284 
    __retres = tmp;
    
#line 284 
    goto return_label;
  }
  else ;
  unknown: 
#line 286 
  ;
  
#line 287 
  __retres = 6;
  return_label: 
#line 287 
                return __retres;
}


#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_setup_sr_edc(struct cphy *phy)
{
  int __retres;
  int i;
  int err;
  
#line 295 
  struct reg_val const regs[4U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49155U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)385U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49168U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)17546U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49226U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)20992U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 304 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs));
  
#line 305 
  if (err != 0) {
    
#line 306 
    __retres = err;
    
#line 306 
    goto return_label;
  }
  else ;
  
#line 308 
  msleep(50U);
  
#line 310 
  if ((int)phy->priv != 1) 
#line 311 
                           err = t3_get_edc_fw(phy,0,1084); else ;
  
#line 313 
  if (err != 0) {
    
#line 314 
    __retres = err;
    
#line 314 
    goto return_label;
  }
  else ;
  
#line 316 
  i = 0;
  
#line 316 
  goto ldv_47587;
  ldv_47586: 
#line 317 
  ;
  
#line 317 
  err = t3_mdio_write(phy,1,(int)phy->phy_cache[i],(unsigned int)phy->phy_cache[i + 1]);
  
#line 316 
  i += 2;
  ldv_47587: 
#line 317 
  ;
  
#line 316 
  if ((unsigned int)i <= 541U && err == 0) 
#line 318 
                                           goto ldv_47586; else 
#line 321 
                                                                goto ldv_47588;
  ldv_47588: 
#line 322 
  ;
  
#line 320 
  if (err == 0) 
#line 321 
                phy->priv = (short)1; else ;
  
#line 322 
  __retres = err;
  return_label: 
#line 322 
                return __retres;
}


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_setup_twinax_edc(struct cphy *phy, int modtype)
{
  int __retres;
  int i;
  int err;
  
#line 327 
  struct reg_val const regs[2U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49226U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)23040U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 331 
  struct reg_val const preemphasis[3U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49172U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)65046U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49173U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)40960U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 338 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs));
  
#line 339 
  if (err == 0 && modtype == 5) 
#line 340 
                                err = set_phy_regs(phy,(struct reg_val const *)(& preemphasis)); else ;
  
#line 341 
  if (err != 0) {
    
#line 342 
    __retres = err;
    
#line 342 
    goto return_label;
  }
  else ;
  
#line 344 
  msleep(50U);
  
#line 346 
  if ((int)phy->priv != 2) 
#line 347 
                           err = t3_get_edc_fw(phy,1,1464); else ;
  
#line 349 
  if (err != 0) {
    
#line 350 
    __retres = err;
    
#line 350 
    goto return_label;
  }
  else ;
  
#line 352 
  i = 0;
  
#line 352 
  goto ldv_47598;
  ldv_47597: 
#line 353 
  ;
  
#line 353 
  err = t3_mdio_write(phy,1,(int)phy->phy_cache[i],(unsigned int)phy->phy_cache[i + 1]);
  
#line 352 
  i += 2;
  ldv_47598: 
#line 353 
  ;
  
#line 352 
  if ((unsigned int)i <= 731U && err == 0) 
#line 354 
                                           goto ldv_47597; else 
#line 357 
                                                                goto ldv_47599;
  ldv_47599: 
#line 358 
  ;
  
#line 356 
  if (err == 0) 
#line 357 
                phy->priv = (short)2; else ;
  
#line 358 
  __retres = err;
  return_label: 
#line 358 
                return __retres;
}


#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_get_module_type(struct cphy *phy, int delay_ms)
{
  int __retres;
  int v;
  unsigned int stat;
  int tmp;
  
#line 366 
  v = t3_mdio_read(phy,1,49684,& stat);
  
#line 367 
  if (v != 0) {
    
#line 368 
    __retres = v;
    
#line 368 
    goto return_label;
  }
  else ;
  
#line 370 
  if ((stat & 256U) != 0U) {
    
#line 371 
    __retres = 0;
    
#line 371 
    goto return_label;
  }
  else ;
  
#line 373 
  tmp = ael2xxx_get_module_type(phy,delay_ms);
  
#line 373 
  __retres = tmp;
  return_label: 
#line 373 
                return __retres;
}


#line 376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_intr_enable(struct cphy *phy)
{
  int tmp_1;
  
#line 378 
  int err = t3_mdio_write(phy,1,49684,512U);
  
#line 379 
  if (err == 0) 
#line 379 
                tmp_1 = t3_phy_lasi_intr_enable(phy); else 
#line 379 
                                                           tmp_1 = err;
  
#line 379 
  return tmp_1;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_intr_disable(struct cphy *phy)
{
  int tmp_1;
  
#line 384 
  int err = t3_mdio_write(phy,1,49684,256U);
  
#line 385 
  if (err == 0) 
#line 385 
                tmp_1 = t3_phy_lasi_intr_disable(phy); else 
#line 385 
                                                            tmp_1 = err;
  
#line 385 
  return tmp_1;
}


#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_intr_clear(struct cphy *phy)
{
  int tmp_1;
  
#line 390 
  int err = t3_mdio_write(phy,1,49684,3328U);
  
#line 391 
  if (err == 0) 
#line 391 
                tmp_1 = t3_phy_lasi_intr_clear(phy); else 
#line 391 
                                                          tmp_1 = err;
  
#line 391 
  return tmp_1;
}


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_reset(struct cphy *phy, int wait)
{
  int __retres;
  int err;
  unsigned int lasi_ctrl;
  
#line 396 
  struct reg_val const regs0[8U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49153U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)32U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49175U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)32U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49171U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)62273U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49680U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)32768U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49680U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)33024U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49680U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)32768U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49680U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)0U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 406 
  struct reg_val const regs1[3U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)51712U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)128U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)51730U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)0U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 415 
  err = t3_mdio_read(phy,1,36866,& lasi_ctrl);
  
#line 417 
  if (err != 0) {
    
#line 418 
    __retres = err;
    
#line 418 
    goto return_label;
  }
  else ;
  
#line 420 
  err = t3_phy_reset(phy,1,0);
  
#line 421 
  if (err != 0) {
    
#line 422 
    __retres = err;
    
#line 422 
    goto return_label;
  }
  else ;
  
#line 424 
  msleep(125U);
  
#line 425 
  phy->priv = (short)0;
  
#line 426 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs0));
  
#line 427 
  if (err != 0) {
    
#line 428 
    __retres = err;
    
#line 428 
    goto return_label;
  }
  else ;
  
#line 430 
  msleep(50U);
  
#line 432 
  err = ael2005_get_module_type(phy,0);
  
#line 433 
  if (err < 0) {
    
#line 434 
    __retres = err;
    
#line 434 
    goto return_label;
  }
  else ;
  
#line 435 
  phy->modtype = (unsigned char)err;
  
#line 437 
  if ((unsigned int)err + 4294967292U <= 1U) 
#line 438 
                                             err = ael2005_setup_twinax_edc(phy,err); else 
                                                                    
#line 440 
                                                                    err = ael2005_setup_sr_edc(phy);
  
#line 441 
  if (err != 0) {
    
#line 442 
    __retres = err;
    
#line 442 
    goto return_label;
  }
  else ;
  
#line 444 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs1));
  
#line 445 
  if (err != 0) {
    
#line 446 
    __retres = err;
    
#line 446 
    goto return_label;
  }
  else ;
  
#line 449 
  if ((lasi_ctrl & 1U) != 0U) 
#line 450 
                              err = ael2005_intr_enable(phy); else ;
  
#line 451 
  __retres = err;
  return_label: 
#line 451 
                return __retres;
}


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2005_intr_handler(struct cphy *phy)
{
  int __retres;
  unsigned int stat;
  int ret;
  int edc_needed;
  int tmp_0;
  
#line 457 
  int cause = 0;
  
#line 459 
  ret = t3_mdio_read(phy,1,49685,& stat);
  
#line 460 
  if (ret != 0) {
    
#line 461 
    __retres = ret;
    
#line 461 
    goto return_label;
  }
  else ;
  
#line 463 
  if ((stat & 4U) != 0U) {
    
#line 464 
    ret = t3_mdio_write(phy,1,49684,3328U);
    
#line 466 
    if (ret != 0) {
      
#line 467 
      __retres = ret;
      
#line 467 
      goto return_label;
    }
    else ;
    
#line 470 
    ret = ael2005_get_module_type(phy,300);
    
#line 471 
    if (ret < 0) {
      
#line 472 
      __retres = ret;
      
#line 472 
      goto return_label;
    }
    else ;
    
#line 474 
    phy->modtype = (unsigned char)ret;
    
#line 475 
    if (ret == 0) 
#line 476 
                  edc_needed = (int)phy->priv;
    else 
      
#line 477 
      if ((unsigned int)ret + 4294967292U <= 1U) 
#line 479 
                                                 edc_needed = 2; else 
                                                                   
#line 481 
                                                                   edc_needed = 1;
    
#line 483 
    if ((int)phy->priv != edc_needed) {
      int tmp;
      
#line 484 
      ret = ael2005_reset(phy,0);
      
#line 485 
      if (ret != 0) 
#line 485 
                    tmp = ret; else 
#line 485 
                                    tmp = 4;
      
#line 485 
      __retres = tmp;
      
#line 485 
      goto return_label;
    }
    else ;
    
#line 487 
    cause = 4;
  }
  else ;
  
#line 490 
  ret = t3_phy_lasi_intr_handler(phy);
  
#line 491 
  if (ret < 0) {
    
#line 492 
    __retres = ret;
    
#line 492 
    goto return_label;
  }
  else ;
  
#line 494 
  ret |= cause;
  
#line 495 
  if (ret != 0) 
#line 495 
                tmp_0 = ret; else 
#line 495 
                                  tmp_0 = 1;
  
#line 495 
  __retres = tmp_0;
  return_label: 
#line 495 
                return __retres;
}


#line 498  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct cphy_ops ael2005_ops = {.reset = & ael2005_reset, .intr_enable = & ael2005_intr_enable, .intr_disable = & ael2005_intr_disable, .intr_clear = & ael2005_intr_clear, .intr_handler = & ael2005_intr_handler, .autoneg_enable = (int (*)(struct cphy *))0, .autoneg_restart = (int (*)(struct cphy *))0, .advertise = (int (*)(struct cphy *, unsigned int ))0, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = (int (*)(struct cphy *, int , int ))0, .get_link_status = & get_link_status_r, .power_down = & ael1002_power_down, .mmds = 26U};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
int t3_ael2005_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int tmp;
  
#line 512 
  cphy_init(phy,adapter,phy_addr,& ael2005_ops,mdio_ops,16782592U,"10GBASE-R");
  
#line 515 
  msleep(125U);
  
#line 516 
  tmp = t3_mdio_change_bits(phy,1,49175,0U,32U);
  
#line 516 
  return tmp;
}


#line 523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_setup_sr_edc(struct cphy *phy)
{
  int __retres;
  int err;
  
#line 525 
  struct reg_val const regs[5U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)52225U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)18570U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)51995U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)512U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)51996U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)240U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)52230U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)224U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 539 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs));
  
#line 540 
  msleep(50U);
  
#line 541 
  if (err != 0) {
    
#line 542 
    __retres = err;
    
#line 542 
    goto return_label;
  }
  else ;
  
#line 544 
  phy->priv = (short)1;
  
#line 545 
  __retres = 0;
  return_label: 
#line 545 
                return __retres;
}


#line 551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_setup_twinax_edc(struct cphy *phy, int modtype)
{
  int __retres;
  int i;
  int err;
  
#line 554 
  struct reg_val const uCclock40MHz[3U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)65320U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)16385U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)65322U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)2U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 561 
  struct reg_val const uCclockActivate[2U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)53248U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)20992U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 567 
  struct reg_val const uCactivate[3U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)53376U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)256U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)53394U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)0U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 575 
  err = set_phy_regs(phy,(struct reg_val const *)(& uCclock40MHz));
  
#line 576 
  msleep(500U);
  
#line 577 
  if (err != 0) {
    
#line 578 
    __retres = err;
    
#line 578 
    goto return_label;
  }
  else ;
  
#line 579 
  err = set_phy_regs(phy,(struct reg_val const *)(& uCclockActivate));
  
#line 580 
  msleep(500U);
  
#line 581 
  if (err != 0) {
    
#line 582 
    __retres = err;
    
#line 582 
    goto return_label;
  }
  else ;
  
#line 584 
  if ((int)phy->priv != 2) 
#line 585 
                           err = t3_get_edc_fw(phy,2,1628); else ;
  
#line 587 
  if (err != 0) {
    
#line 588 
    __retres = err;
    
#line 588 
    goto return_label;
  }
  else ;
  
#line 590 
  i = 0;
  
#line 590 
  goto ldv_47655;
  ldv_47654: 
#line 591 
  ;
  
#line 591 
  err = t3_mdio_write(phy,1,(int)phy->phy_cache[i],(unsigned int)phy->phy_cache[i + 1]);
  
#line 590 
  i += 2;
  ldv_47655: 
#line 591 
  ;
  
#line 590 
  if ((unsigned int)i <= 813U && err == 0) 
#line 592 
                                           goto ldv_47654; else 
#line 595 
                                                                goto ldv_47656;
  ldv_47656: 
#line 596 
  ;
  
#line 595 
  err = set_phy_regs(phy,(struct reg_val const *)(& uCactivate));
  
#line 596 
  if (err == 0) 
#line 597 
                phy->priv = (short)2; else ;
  
#line 598 
  __retres = err;
  return_label: 
#line 598 
                return __retres;
}


#line 604  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_get_module_type(struct cphy *phy, int delay_ms)
{
  int __retres;
  int v;
  unsigned int stat;
  int tmp;
  
#line 609 
  v = t3_mdio_read(phy,1,49420,& stat);
  
#line 610 
  if (v != 0) {
    
#line 611 
    __retres = v;
    
#line 611 
    goto return_label;
  }
  else ;
  
#line 613 
  if ((stat & 16U) != 0U) {
    
#line 615 
    __retres = 0;
    
#line 615 
    goto return_label;
  }
  else ;
  
#line 618 
  tmp = ael2xxx_get_module_type(phy,delay_ms);
  
#line 618 
  __retres = tmp;
  return_label: 
#line 618 
                return __retres;
}


#line 625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_intr_enable(struct cphy *phy)
{
  int __retres;
  int err;
  
#line 627 
  struct reg_val const regs[4U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49426U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)4U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49416U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)2048U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49416U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)32U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 641 
  int link_ok = 0;
  
#line 644 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs));
  
#line 645 
  if (err != 0) {
    
#line 646 
    __retres = err;
    
#line 646 
    goto return_label;
  }
  else ;
  
#line 648 
  err = get_link_status_r(phy,& link_ok,(int *)0,(int *)0,(int *)0);
  
#line 649 
  if (err != 0) {
    
#line 650 
    __retres = err;
    
#line 650 
    goto return_label;
  }
  else ;
  
#line 651 
  if (link_ok != 0) {
    int tmp;
    
#line 652 
    tmp = phy2portid(phy);
    
#line 652 
    ;
    
#line 652 
    t3_link_changed(phy->adapter,tmp);
  }
  else ;
  
#line 655 
  err = t3_phy_lasi_intr_enable(phy);
  
#line 656 
  if (err != 0) {
    
#line 657 
    __retres = err;
    
#line 657 
    goto return_label;
  }
  else ;
  
#line 659 
  __retres = 0;
  return_label: 
#line 659 
                return __retres;
}


#line 665  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_intr_disable(struct cphy *phy)
{
  int __retres;
  int err;
  int tmp;
  
#line 667 
  struct reg_val const regs[3U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49416U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)2816U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49416U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)16U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};
  
#line 682 
  err = set_phy_regs(phy,(struct reg_val const *)(& regs));
  
#line 683 
  if (err != 0) {
    
#line 684 
    __retres = err;
    
#line 684 
    goto return_label;
  }
  else ;
  
#line 686 
  tmp = t3_phy_lasi_intr_disable(phy);
  
#line 686 
  __retres = tmp;
  return_label: 
#line 686 
                return __retres;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_intr_clear(struct cphy *phy)
{
  unsigned int stat;
  int tmp_1;
  
#line 700 
  int err = t3_mdio_read(phy,1,49411,& stat);
  
#line 701 
  if (err == 0) 
#line 701 
                tmp_1 = t3_phy_lasi_intr_clear(phy); else 
#line 701 
                                                          tmp_1 = err;
  
#line 701 
  return tmp_1;
}


#line 704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct reg_val const ael2020_reset_regs[6U] = {{.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)49155U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)12545U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)52544U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)1U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)65282U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)35U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)65283U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)0U}, {.mmd_addr = (unsigned short)1U, .reg_addr = (unsigned short)65284U, .clear_bits = (unsigned short)65535U, .set_bits = (unsigned short)0U}, {.mmd_addr = (unsigned short)0U, .reg_addr = (unsigned short)0U, .clear_bits = (unsigned short)0U, .set_bits = (unsigned short)0U}};

#line 722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_reset(struct cphy *phy, int wait)
{
  int __retres;
  int err;
  unsigned int lasi_ctrl;
  
#line 728 
  err = t3_mdio_read(phy,1,36866,& lasi_ctrl);
  
#line 730 
  if (err != 0) {
    
#line 731 
    __retres = err;
    
#line 731 
    goto return_label;
  }
  else ;
  
#line 733 
  err = t3_phy_reset(phy,1,125);
  
#line 734 
  if (err != 0) {
    
#line 735 
    __retres = err;
    
#line 735 
    goto return_label;
  }
  else ;
  
#line 736 
  msleep(100U);
  
#line 739 
  phy->priv = (short)0;
  
#line 740 
  err = set_phy_regs(phy,(struct reg_val const *)(& ael2020_reset_regs));
  
#line 741 
  if (err != 0) {
    
#line 742 
    __retres = err;
    
#line 742 
    goto return_label;
  }
  else ;
  
#line 745 
  err = ael2020_get_module_type(phy,0);
  
#line 746 
  if (err < 0) {
    
#line 747 
    __retres = err;
    
#line 747 
    goto return_label;
  }
  else ;
  
#line 748 
  phy->modtype = (unsigned char)err;
  
#line 749 
  if ((unsigned int)err + 4294967292U <= 1U) 
#line 750 
                                             err = ael2020_setup_twinax_edc(phy,err); else 
                                                                    
#line 752 
                                                                    err = ael2020_setup_sr_edc(phy);
  
#line 753 
  if (err != 0) {
    
#line 754 
    __retres = err;
    
#line 754 
    goto return_label;
  }
  else ;
  
#line 757 
  if ((lasi_ctrl & 1U) != 0U) 
#line 758 
                              err = ael2005_intr_enable(phy); else ;
  
#line 759 
  __retres = err;
  return_label: 
#line 759 
                return __retres;
}


#line 765  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int ael2020_intr_handler(struct cphy *phy)
{
  int __retres;
  unsigned int stat;
  int ret;
  int edc_needed;
  int tmp_0;
  
#line 768 
  int cause = 0;
  
#line 770 
  ret = t3_mdio_read(phy,1,49411,& stat);
  
#line 771 
  if (ret != 0) {
    
#line 772 
    __retres = ret;
    
#line 772 
    goto return_label;
  }
  else ;
  
#line 774 
  if ((stat & 2U) != 0U) {
    
#line 776 
    ret = ael2020_get_module_type(phy,300);
    
#line 777 
    if (ret < 0) {
      
#line 778 
      __retres = ret;
      
#line 778 
      goto return_label;
    }
    else ;
    
#line 780 
    phy->modtype = (unsigned char)ret;
    
#line 781 
    if (ret == 0) 
#line 782 
                  edc_needed = (int)phy->priv;
    else 
      
#line 783 
      if ((unsigned int)ret + 4294967292U <= 1U) 
#line 785 
                                                 edc_needed = 2; else 
                                                                   
#line 787 
                                                                   edc_needed = 1;
    
#line 789 
    if ((int)phy->priv != edc_needed) {
      int tmp;
      
#line 790 
      ret = ael2020_reset(phy,0);
      
#line 791 
      if (ret != 0) 
#line 791 
                    tmp = ret; else 
#line 791 
                                    tmp = 4;
      
#line 791 
      __retres = tmp;
      
#line 791 
      goto return_label;
    }
    else ;
    
#line 793 
    cause = 4;
  }
  else ;
  
#line 796 
  ret = t3_phy_lasi_intr_handler(phy);
  
#line 797 
  if (ret < 0) {
    
#line 798 
    __retres = ret;
    
#line 798 
    goto return_label;
  }
  else ;
  
#line 800 
  ret |= cause;
  
#line 801 
  if (ret != 0) 
#line 801 
                tmp_0 = ret; else 
#line 801 
                                  tmp_0 = 1;
  
#line 801 
  __retres = tmp_0;
  return_label: 
#line 801 
                return __retres;
}


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct cphy_ops ael2020_ops = {.reset = & ael2020_reset, .intr_enable = & ael2020_intr_enable, .intr_disable = & ael2020_intr_disable, .intr_clear = & ael2020_intr_clear, .intr_handler = & ael2020_intr_handler, .autoneg_enable = (int (*)(struct cphy *))0, .autoneg_restart = (int (*)(struct cphy *))0, .advertise = (int (*)(struct cphy *, unsigned int ))0, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = (int (*)(struct cphy *, int , int ))0, .get_link_status = & get_link_status_r, .power_down = & ael1002_power_down, .mmds = 26U};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
int t3_ael2020_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  int err;
  
#line 820 
  cphy_init(phy,adapter,phy_addr,& ael2020_ops,mdio_ops,16782592U,"10GBASE-R");
  
#line 823 
  msleep(125U);
  
#line 825 
  err = set_phy_regs(phy,(struct reg_val const *)(& ael2020_reset_regs));
  
#line 826 
  if (err != 0) {
    
#line 827 
    __retres = err;
    
#line 827 
    goto return_label;
  }
  else ;
  
#line 828 
  __retres = 0;
  return_label: 
#line 828 
                return __retres;
}


#line 834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int get_link_status_x(struct cphy *phy, int *link_ok, int *speed, int *duplex, int *fc)
{
  int __retres;
  
#line 837 
  if (link_ok != (int *)0) {
    unsigned int stat0;
    unsigned int stat1;
    unsigned int stat2;
    
#line 839 
    int err = t3_mdio_read(phy,1,10,& stat0);
    
#line 842 
    if (err == 0) 
#line 843 
                  err = t3_mdio_read(phy,3,24,& stat1); else ;
    
#line 845 
    if (err == 0) 
#line 846 
                  err = t3_mdio_read(phy,4,24,& stat2); else ;
    
#line 848 
    if (err != 0) {
      
#line 849 
      __retres = err;
      
#line 849 
      goto return_label;
    }
    else ;
    
#line 850 
    *link_ok = (int)(((stat1 >> 12) & stat0) & (stat2 >> 12)) & 1;
  }
  else ;
  
#line 852 
  if (speed != (int *)0) 
#line 853 
                         *speed = 10000; else ;
  
#line 854 
  if (duplex != (int *)0) 
#line 855 
                          *duplex = 1; else ;
  
#line 856 
  __retres = 0;
  return_label: 
#line 856 
                return __retres;
}


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct cphy_ops qt2045_ops = {.reset = & ael1006_reset, .intr_enable = & t3_phy_lasi_intr_enable, .intr_disable = & t3_phy_lasi_intr_disable, .intr_clear = & t3_phy_lasi_intr_clear, .intr_handler = & t3_phy_lasi_intr_handler, .autoneg_enable = (int (*)(struct cphy *))0, .autoneg_restart = (int (*)(struct cphy *))0, .advertise = (int (*)(struct cphy *, unsigned int ))0, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = (int (*)(struct cphy *, int , int ))0, .get_link_status = & get_link_status_x, .power_down = & ael1002_power_down, .mmds = 26U};

#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
int t3_qt2045_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  unsigned int stat;
  
#line 875 
  cphy_init(phy,adapter,phy_addr,& qt2045_ops,mdio_ops,4480U,"10GBASE-CX4");
  
#line 883 
  if (phy_addr == 0) {
    int tmp;
    
#line 883 
    tmp = t3_mdio_read(phy,1,1,& stat);
    
#line 883 
    if (tmp == 0) {
      
#line 884 
      if (stat == 65535U) 
#line 886 
                          phy->mdio.prtad = 1; else ;
    }
    else ;
  }
  else ;
  
#line 887 
  __retres = 0;
  
#line 887 
  return __retres;
}


#line 890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int xaui_direct_reset(struct cphy *phy, int wait)
{
  int __retres;
  
#line 892 
  __retres = 0;
  
#line 892 
  return __retres;
}


#line 895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int xaui_direct_get_link_status(struct cphy *phy, int *link_ok, int *speed, int *duplex, int *fc)
{
  int __retres;
  
#line 898 
  if (link_ok != (int *)0) {
    unsigned int status;
    u32 tmp;
    u32 tmp_0;
    u32 tmp_1;
    u32 tmp_2;
    
#line 900 
    int prtad = phy->mdio.prtad;
    
#line 902 
    tmp = t3_read_reg(phy->adapter,(unsigned int)(prtad * 512 + 2288));
    
#line 903 
    tmp_0 = t3_read_reg(phy->adapter,(unsigned int)(prtad * 512 + 2292));
    
#line 905 
    tmp_1 = t3_read_reg(phy->adapter,(unsigned int)(prtad * 512 + 2296));
    
#line 907 
    tmp_2 = t3_read_reg(phy->adapter,(unsigned int)(prtad * 512 + 2300));
    
#line 902 
    status = ((tmp | tmp_0) | tmp_1) | tmp_2;
    
#line 910 
    *link_ok = (status & 1U) == 0U;
  }
  else ;
  
#line 912 
  if (speed != (int *)0) 
#line 913 
                         *speed = 10000; else ;
  
#line 914 
  if (duplex != (int *)0) 
#line 915 
                          *duplex = 1; else ;
  
#line 916 
  __retres = 0;
  
#line 916 
  return __retres;
}


#line 919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static int xaui_direct_power_down(struct cphy *phy, int enable)
{
  int __retres;
  
#line 921 
  __retres = 0;
  
#line 921 
  return __retres;
}


#line 924  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
static struct cphy_ops xaui_direct_ops = {.reset = & xaui_direct_reset, .intr_enable = & ael1002_intr_noop, .intr_disable = & ael1002_intr_noop, .intr_clear = & ael1002_intr_noop, .intr_handler = & ael1002_intr_noop, .autoneg_enable = (int (*)(struct cphy *))0, .autoneg_restart = (int (*)(struct cphy *))0, .advertise = (int (*)(struct cphy *, unsigned int ))0, .set_loopback = (int (*)(struct cphy *, int , int , int ))0, .set_speed_duplex = (int (*)(struct cphy *, int , int ))0, .get_link_status = & xaui_direct_get_link_status, .power_down = & xaui_direct_power_down, .mmds = 0U};

#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/ael1002.c"
int t3_xaui_direct_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  
#line 937 
  cphy_init(phy,adapter,phy_addr,& xaui_direct_ops,mdio_ops,4480U,"10GBASE-CX4");
  
#line 940 
  __retres = 0;
  
#line 940 
  return __retres;
}


#line 771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/common.h"
int t3_aq100x_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops);


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_reset(struct cphy *phy, int wait)
{
  
#line 71 
  int err = t3_phy_reset(phy,30,3000);
  
#line 73 
  if (err != 0) 
#line 74 
                dev_warn((struct device const *)(& ((phy->adapter)->pdev)->dev),"PHY%d: reset failed (0x%x).\n",phy->mdio.prtad,err); else ;
  
#line 77 
  return err;
}


#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_intr_enable(struct cphy *phy)
{
  int __retres;
  
#line 82 
  int err = t3_mdio_write(phy,1,61440,4U);
  
#line 83 
  if (err != 0) {
    
#line 84 
    __retres = err;
    
#line 84 
    goto return_label;
  }
  else ;
  
#line 86 
  err = t3_mdio_write(phy,30,65280,32768U);
  
#line 87 
  __retres = err;
  return_label: 
#line 87 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_intr_disable(struct cphy *phy)
{
  int tmp;
  
#line 92 
  tmp = t3_mdio_write(phy,30,65280,0U);
  
#line 92 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_intr_clear(struct cphy *phy)
{
  int __retres;
  unsigned int v;
  
#line 99 
  t3_mdio_read(phy,30,64512,& v);
  
#line 100 
  t3_mdio_read(phy,1,1,& v);
  
#line 102 
  __retres = 0;
  
#line 102 
  return __retres;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_intr_handler(struct cphy *phy)
{
  int __retres;
  int err;
  unsigned int cause;
  unsigned int v;
  
#line 110 
  err = t3_mdio_read(phy,30,64512,& cause);
  
#line 111 
  if (err != 0) {
    
#line 112 
    __retres = err;
    
#line 112 
    goto return_label;
  }
  else ;
  
#line 115 
  t3_mdio_read(phy,1,1,& v);
  
#line 117 
  __retres = 1;
  return_label: 
#line 117 
                return __retres;
}


#line 120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_power_down(struct cphy *phy, int off)
{
  int tmp;
  
#line 122 
  tmp = mdio_set_flag((struct mdio_if_info const *)(& phy->mdio),phy->mdio.prtad,1,(unsigned short)0,2048,(_Bool)(off != 0));
  
#line 122 
  return tmp;
}


#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_autoneg_enable(struct cphy *phy)
{
  int err;
  
#line 131 
  err = aq100x_power_down(phy,0);
  
#line 132 
  if (err == 0) 
#line 133 
                err = mdio_set_flag((struct mdio_if_info const *)(& phy->mdio),phy->mdio.prtad,7,(unsigned short)0,4608,(_Bool)1); else ;
  
#line 137 
  return err;
}


#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_autoneg_restart(struct cphy *phy)
{
  int err;
  
#line 144 
  err = aq100x_power_down(phy,0);
  
#line 145 
  if (err == 0) 
#line 146 
                err = mdio_set_flag((struct mdio_if_info const *)(& phy->mdio),phy->mdio.prtad,7,(unsigned short)0,4608,(_Bool)1); else ;
  
#line 150 
  return err;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_advertise(struct cphy *phy, unsigned int advertise_map)
{
  int __retres;
  unsigned int adv;
  int err;
  
#line 159 
  adv = 0U;
  
#line 160 
  if ((advertise_map & 4096U) != 0U) 
#line 161 
                                     adv |= 4096U; else ;
  
#line 162 
  err = t3_mdio_change_bits(phy,7,32,4096U,adv);
  
#line 164 
  if (err != 0) {
    
#line 165 
    __retres = err;
    
#line 165 
    goto return_label;
  }
  else ;
  
#line 168 
  adv = 0U;
  
#line 169 
  if ((advertise_map & 32U) != 0U) 
#line 170 
                                   adv |= 32768U; else ;
  
#line 171 
  if ((advertise_map & 16U) != 0U) 
#line 172 
                                   adv |= 16384U; else ;
  
#line 173 
  err = t3_mdio_change_bits(phy,7,50176,49152U,adv);
  
#line 175 
  if (err != 0) {
    
#line 176 
    __retres = err;
    
#line 176 
    goto return_label;
  }
  else ;
  
#line 179 
  adv = 0U;
  
#line 180 
  if ((advertise_map & 4U) != 0U) 
#line 181 
                                  adv |= 128U; else ;
  
#line 182 
  if ((advertise_map & 8U) != 0U) 
#line 183 
                                  adv |= 256U; else ;
  
#line 184 
  if ((advertise_map & 8192U) != 0U) 
#line 185 
                                     adv |= 1024U; else ;
  
#line 186 
  if ((advertise_map & 16384U) != 0U) 
#line 187 
                                      adv |= 2048U; else ;
  
#line 188 
  err = t3_mdio_change_bits(phy,7,16,4064U,adv);
  
#line 191 
  __retres = err;
  return_label: 
#line 191 
                return __retres;
}


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_set_loopback(struct cphy *phy, int mmd, int dir, int enable)
{
  int tmp;
  
#line 196 
  tmp = mdio_set_flag((struct mdio_if_info const *)(& phy->mdio),phy->mdio.prtad,1,(unsigned short)0,16384,(_Bool)(enable != 0));
  
#line 196 
  return tmp;
}


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_set_speed_duplex(struct cphy *phy, int speed, int duplex)
{
  int __retres;
  
#line 204 
  __retres = -1;
  
#line 204 
  return __retres;
}


#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static int aq100x_get_link_status(struct cphy *phy, int *link_ok, int *speed, int *duplex, int *fc)
{
  int __retres;
  int err;
  unsigned int v;
  
#line 213 
  if (link_ok != (int *)0) {
    
#line 214 
    err = t3_mdio_read(phy,1,59392,& v);
    
#line 215 
    if (err != 0) {
      
#line 216 
      __retres = err;
      
#line 216 
      goto return_label;
    }
    else ;
    
#line 218 
    *link_ok = (int)v & 1;
    
#line 219 
    if (*link_ok == 0) {
      
#line 220 
      __retres = 0;
      
#line 220 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 223 
  err = t3_mdio_read(phy,7,51200,& v);
  
#line 224 
  if (err != 0) {
    
#line 225 
    __retres = err;
    
#line 225 
    goto return_label;
  }
  else ;
  
#line 227 
  if (speed != (int *)0) {
    
#line 228 
    switch (v & 6U) {
      case (unsigned int)6: 
#line 229 
      ;
      
#line 230 
      *speed = 10000;
      
#line 231 
      goto ldv_47550;
      case (unsigned int)4: 
#line 232 
      ;
      
#line 233 
      *speed = 1000;
      
#line 234 
      goto ldv_47550;
      case (unsigned int)2: 
#line 235 
      ;
      
#line 236 
      *speed = 100;
      
#line 237 
      goto ldv_47550;
      case (unsigned int)0: 
#line 238 
      ;
      
#line 239 
      *speed = 10;
      
#line 240 
      goto ldv_47550;
    }
    ldv_47550: 
#line 242 
    ;
  }
  else ;
  
#line 244 
  if (duplex != (int *)0) 
#line 245 
                          *duplex = (int)v & 1; else ;
  
#line 247 
  __retres = 0;
  return_label: 
#line 247 
                return __retres;
}


#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
static struct cphy_ops aq100x_ops = {.reset = & aq100x_reset, .intr_enable = & aq100x_intr_enable, .intr_disable = & aq100x_intr_disable, .intr_clear = & aq100x_intr_clear, .intr_handler = & aq100x_intr_handler, .autoneg_enable = & aq100x_autoneg_enable, .autoneg_restart = & aq100x_autoneg_restart, .advertise = & aq100x_advertise, .set_loopback = & aq100x_set_loopback, .set_speed_duplex = & aq100x_set_speed_duplex, .get_link_status = & aq100x_get_link_status, .power_down = & aq100x_power_down, .mmds = 26U};

#line 266  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/aq100x.c"
int t3_aq100x_phy_prep(struct cphy *phy, struct adapter *adapter, int phy_addr, struct mdio_ops const *mdio_ops)
{
  int __retres;
  unsigned int v;
  unsigned int v2;
  unsigned int gpio;
  unsigned int wait;
  int err;
  
#line 272 
  cphy_init(phy,adapter,phy_addr,& aq100x_ops,mdio_ops,4576U,"1000/10GBASE-T");
  
#line 281 
  if (phy_addr != 0) 
#line 281 
                     gpio = 1024U; else 
#line 281 
                                        gpio = 64U;
  
#line 282 
  t3_set_reg_field(adapter,208U,gpio,0U);
  
#line 283 
  msleep(1U);
  
#line 284 
  t3_set_reg_field(adapter,208U,gpio,gpio);
  
#line 289 
  msleep(1000U);
  
#line 290 
  wait = 500U;
  ldv_47567: 
#line 291 
  ;
  
#line 292 
  err = t3_mdio_read(phy,30,0,& v);
  
#line 293 
  if (err != 0 || v == 65535U) {
    
#line 297 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"PHY%d: reset failed (0x%x, 0x%x).\n",phy_addr,err,v);
    
#line 299 
    goto done;
  }
  else ;
  
#line 302 
  v &= 49152U;
  
#line 303 
  if (v != 0U) 
#line 304 
               msleep(10U); else ;
  
#line 305 
  if (v != 0U) {
    
#line 305 
    wait -= 1U;
    
#line 305 
    if (wait != 0U) 
#line 307 
                    goto ldv_47567; else 
#line 310 
                                         goto ldv_47568;
  }
  else 
#line 310 
       goto ldv_47568;
  ldv_47568: 
#line 311 
  ;
  
#line 306 
  if (v != 0U) {
    
#line 307 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"PHY%d: reset timed out (0x%x).\n",phy_addr,v);
    
#line 310 
    goto done;
  }
  else ;
  
#line 314 
  wait = wait * 4294967286U + 6000U;
  
#line 315 
  if (wait > 3000U) 
#line 316 
                    dev_warn((struct device const *)(& (adapter->pdev)->dev),"PHY%d: reset took %ums\n",phy_addr,wait); else ;
  
#line 319 
  t3_mdio_read(phy,30,32,& v);
  
#line 320 
  if (v != 101U) 
#line 321 
                 dev_warn((struct device const *)(& (adapter->pdev)->dev),"PHY%d: unsupported firmware %d\n",phy_addr,v); else ;
  
#line 328 
  err = t3_mdio_read(phy,30,0,& v);
  
#line 329 
  if (err != 0) {
    
#line 330 
    __retres = err;
    
#line 330 
    goto return_label;
  }
  else ;
  
#line 331 
  if ((v & 4096U) != 0U) {
    
#line 332 
    err = t3_mdio_change_bits(phy,30,0,4096U,0U);
    
#line 334 
    if (err != 0) {
      
#line 335 
      __retres = err;
      
#line 335 
      goto return_label;
    }
    else ;
    
#line 336 
    msleep(10U);
  }
  else 
#line 338 
       dev_warn((struct device const *)(& (adapter->pdev)->dev),"PHY%d does not start in low power mode.\n",phy_addr);
  
#line 344 
  v2 = 0U;
  
#line 344 
  v = v2;
  
#line 345 
  t3_mdio_read(phy,4,50176,& v);
  
#line 346 
  t3_mdio_read(phy,4,58368,& v2);
  
#line 347 
  if (v != 27U || v2 != 27U) 
#line 348 
                             dev_warn((struct device const *)(& (adapter->pdev)->dev),"PHY%d: incorrect XAUI settings (0x%x, 0x%x).\n",phy_addr,v,v2); else ;
  done: 
#line 352 
  ;
  
#line 353 
  __retres = err;
  return_label: 
#line 353 
                return __retres;
}


#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int hex_to_bin(char);


#line 516 
int hex2bin(u8 *, char const *, size_t);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_80(struct mutex *ldv_func_arg1);


#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __bad_udelay(void);


#line 8 
void __udelay(unsigned long);


#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1);


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_find_capability(struct pci_dev *, int);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 910 
int pcie_capability_read_word(struct pci_dev *, int, u16 *);


#line 912 
int pcie_capability_write_word(struct pci_dev *, int, u16);


#line 1718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_cap(struct pci_dev *dev)
{
  int __retres;
  
#line 1720 
  __retres = (int)dev->pcie_cap;
  
#line 1720 
  return __retres;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static bool pci_is_pcie(struct pci_dev *dev)
{
  bool __retres;
  int tmp;
  
#line 1731 
  tmp = pci_pcie_cap(dev);
  
#line 1731 
  __retres = (_Bool)(tmp != 0);
  
#line 1731 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void t3_port_intr_clear(struct adapter *adapter, int idx);


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_wait_op_done_val(struct adapter *adapter, int reg, u32 mask, int polarity, int attempts, int delay, u32 *valp)
{
  int __retres;
  ldv_47516: 
#line 57 
  ;
  {
    
#line 59 
    u32 val = t3_read_reg(adapter,(unsigned int)reg);
    
#line 61 
    if (((val & mask) != 0U) == polarity) {
      
#line 62 
      if (valp != (u32 *)0U) 
#line 63 
                             *valp = val; else ;
      
#line 64 
      __retres = 0;
      
#line 64 
      goto return_label;
    }
    else ;
    
#line 66 
    attempts -= 1;
    
#line 66 
    if (attempts == 0) {
      
#line 67 
      __retres = -11;
      
#line 67 
      goto return_label;
    }
    else ;
    
#line 68 
    if (delay != 0) 
      
#line 69 
      if (0 != 0) 
        
#line 69 
        if (delay > 19999) 
#line 69 
                           __bad_udelay(); else 
#line 69 
                                                __const_udelay((unsigned long)delay * 4295UL);
      else 
#line 69 
           __udelay((unsigned long)delay);
    else ;
  }
  
#line 58 
  goto ldv_47516;
  return_label: 
#line 58 
                return __retres;
}


#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_write_regs(struct adapter *adapter, struct addr_val_pair const *p, int n, unsigned int offset)
{
  int tmp;
  
#line 87 
  goto ldv_47524;
  ldv_47523: 
#line 88 
  ;
  
#line 88 
  t3_write_reg(adapter,p->reg_addr + offset,p->val);
  
#line 89 
  p += 1;
  ldv_47524: 
#line 90 
  ;
  
#line 87 
  tmp = n;
  
#line 87 
  n -= 1;
  
#line 87 
  ;
  
#line 87 
  if (tmp != 0) 
#line 89 
                goto ldv_47523; else 
#line 92 
                                     goto ldv_47525;
  ldv_47525: 
#line 93 
  ;
  
#line 94 
  return;
}


#line 103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_set_reg_field(struct adapter *adapter, unsigned int addr, u32 mask, u32 val)
{
  u32 tmp;
  
#line 106 
  tmp = t3_read_reg(adapter,addr);
  
#line 106 
  u32 v = tmp & ~ mask;
  
#line 108 
  t3_write_reg(adapter,addr,v | val);
  
#line 109 
  t3_read_reg(adapter,addr);
  
#line 110 
  return;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void t3_read_indirect(struct adapter *adap, unsigned int addr_reg, unsigned int data_reg, u32 *vals, unsigned int nregs, unsigned int start_idx)
{
  u32 *tmp;
  unsigned int tmp_0;
  
#line 128 
  goto ldv_47542;
  ldv_47541: 
#line 129 
  ;
  
#line 129 
  t3_write_reg(adap,addr_reg,start_idx);
  
#line 130 
  tmp = vals;
  
#line 130 
  vals += 1;
  
#line 130 
  *tmp = t3_read_reg(adap,data_reg);
  
#line 131 
  start_idx += 1U;
  ldv_47542: 
#line 132 
  ;
  
#line 128 
  tmp_0 = nregs;
  
#line 128 
  nregs -= 1U;
  
#line 128 
  ;
  
#line 128 
  if (tmp_0 != 0U) 
#line 130 
                   goto ldv_47541; else 
#line 133 
                                        goto ldv_47543;
  ldv_47543: 
#line 134 
  ;
  
#line 135 
  return;
}


#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_mc7_bd_read(struct mc7 *mc7, unsigned int start, unsigned int n, u64 *buf)
{
  int __retres;
  unsigned int tmp_2;
  
#line 148 
  int const shift[4U] = {0, 0, 16, 24};
  
#line 149 
  int const step[4U] = {0, 32, 16, 8};
  
#line 151 
  unsigned int size64 = mc7->size / 8U;
  
#line 152 
  struct adapter *adap = mc7->adapter;
  
#line 154 
  if (start >= size64 || start + n > size64) {
    
#line 155 
    __retres = -22;
    
#line 155 
    goto return_label;
  }
  else ;
  
#line 157 
  start = (unsigned int)(8 << mc7->width) * start;
  
#line 158 
  goto ldv_47565;
  ldv_47564: 
#line 159 
  ;
  {
    int i;
    u64 *tmp_1;
    
#line 160 
    u64 val64 = 0ULL;
    
#line 162 
    i = (1 << mc7->width) + -1;
    
#line 162 
    goto ldv_47562;
    ldv_47561: 
#line 163 
    ;
    {
      u32 val;
      
#line 163 
      int attempts = 10;
      
#line 166 
      t3_write_reg(adap,mc7->offset + 340U,start);
      
#line 167 
      t3_write_reg(adap,mc7->offset + 356U,0U);
      
#line 168 
      val = t3_read_reg(adap,mc7->offset + 356U);
      
#line 169 
      goto ldv_47559;
      ldv_47558: 
#line 170 
      ;
      
#line 170 
      val = t3_read_reg(adap,mc7->offset + 356U);
      ldv_47559: 
#line 172 
      ;
      
#line 169 
      if (val < (u32)0) {
        int tmp;
        
#line 169 
        tmp = attempts;
        
#line 169 
        attempts -= 1;
        
#line 169 
        ;
        
#line 169 
        if (tmp != 0) 
#line 171 
                      goto ldv_47558; else 
#line 174 
                                           goto ldv_47560;
      }
      else 
#line 174 
           goto ldv_47560;
      ldv_47560: 
#line 175 
      ;
      
#line 172 
      if (val < (u32)0) {
        
#line 173 
        __retres = -5;
        
#line 173 
        goto return_label;
      }
      else ;
      
#line 175 
      val = t3_read_reg(adap,mc7->offset + 348U);
      
#line 176 
      if (mc7->width == 0U) {
        u32 tmp_0;
        
#line 177 
        tmp_0 = t3_read_reg(adap,mc7->offset + 344U);
        
#line 177 
        val64 = (unsigned long long)tmp_0;
        
#line 180 
        val64 = ((unsigned long long)val << 32) | val64;
      }
      else {
        
#line 182 
        if (mc7->width > 1U) 
#line 183 
                             val >>= shift[mc7->width]; else ;
        
#line 184 
        val64 = ((unsigned long long)val << step[mc7->width] * i) | val64;
      }
      
#line 186 
      start += 8U;
    }
    
#line 162 
    i -= 1;
    ldv_47562: 
#line 163 
    ;
    
#line 162 
    if (i >= 0) 
#line 164 
                goto ldv_47561; else 
#line 167 
                                     goto ldv_47563;
    ldv_47563: 
#line 168 
    ;
    
#line 188 
    tmp_1 = buf;
    
#line 188 
    buf += 1;
    
#line 188 
    *tmp_1 = val64;
  }
  ldv_47565: 
#line 190 
  ;
  
#line 158 
  tmp_2 = n;
  
#line 158 
  n -= 1U;
  
#line 158 
  ;
  
#line 158 
  if (tmp_2 != 0U) 
#line 160 
                   goto ldv_47564; else 
#line 163 
                                        goto ldv_47566;
  ldv_47566: 
#line 164 
  ;
  
#line 190 
  __retres = 0;
  return_label: 
#line 190 
                return __retres;
}


#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void mi1_init(struct adapter *adap, struct adapter_info const *ai)
{
  
#line 198 
  u32 clkdiv = adap->params.vpd.cclk / (adap->params.vpd.mdc * 2U) + 4294967295U;
  
#line 199 
  u32 val = (clkdiv << 5) | 4U;
  
#line 201 
  t3_write_reg(adap,1712U,val);
  
#line 202 
  return;
}


#line 209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_mi1_read(struct net_device *dev, int phy_addr, int mmd_addr, u16 reg_addr)
{
  int ret;
  
#line 212 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 213 
  struct adapter *adapter = pi->adapter;
  
#line 215 
  u32 addr = (unsigned int)((int)reg_addr | (phy_addr << 5));
  
#line 217 
  ldv_mutex_lock_74(& adapter->mdio_lock);
  
#line 218 
  t3_set_reg_field(adapter,1712U,24U,8U);
  
#line 219 
  t3_write_reg(adapter,1716U,addr);
  
#line 220 
  t3_write_reg(adapter,1724U,2U);
  
#line 221 
  ret = t3_wait_op_done(adapter,1724,2147483648U,0,20,10);
  
#line 222 
  if (ret == 0) {
    u32 tmp_0;
    
#line 223 
    tmp_0 = t3_read_reg(adapter,1720U);
    
#line 223 
    ret = (int)tmp_0;
  }
  else ;
  
#line 224 
  ldv_mutex_unlock_75(& adapter->mdio_lock);
  
#line 225 
  return ret;
}


#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_mi1_write(struct net_device *dev, int phy_addr, int mmd_addr, u16 reg_addr, u16 val)
{
  int ret;
  
#line 231 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 232 
  struct adapter *adapter = pi->adapter;
  
#line 234 
  u32 addr = (unsigned int)((int)reg_addr | (phy_addr << 5));
  
#line 236 
  ldv_mutex_lock_76(& adapter->mdio_lock);
  
#line 237 
  t3_set_reg_field(adapter,1712U,24U,8U);
  
#line 238 
  t3_write_reg(adapter,1716U,addr);
  
#line 239 
  t3_write_reg(adapter,1720U,(unsigned int)val);
  
#line 240 
  t3_write_reg(adapter,1724U,1U);
  
#line 241 
  ret = t3_wait_op_done(adapter,1724,2147483648U,0,20,10);
  
#line 242 
  ldv_mutex_unlock_77(& adapter->mdio_lock);
  
#line 243 
  return ret;
}


#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static struct mdio_ops const mi1_mdio_ops = {.read = & t3_mi1_read, .write = & t3_mi1_write, .mode_support = 1U};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int mi1_wr_addr(struct adapter *adapter, int phy_addr, int mmd_addr, int reg_addr)
{
  int tmp;
  
#line 259 
  u32 addr = (unsigned int)((phy_addr << 5) | mmd_addr);
  
#line 261 
  t3_set_reg_field(adapter,1712U,24U,0U);
  
#line 262 
  t3_write_reg(adapter,1716U,addr);
  
#line 263 
  t3_write_reg(adapter,1720U,(unsigned int)reg_addr);
  
#line 264 
  t3_write_reg(adapter,1724U,0U);
  
#line 265 
  tmp = t3_wait_op_done(adapter,1724,2147483648U,0,20,10);
  
#line 265 
  return tmp;
}


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int mi1_ext_read(struct net_device *dev, int phy_addr, int mmd_addr, u16 reg_addr)
{
  int ret;
  
#line 275 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 276 
  struct adapter *adapter = pi->adapter;
  
#line 279 
  ldv_mutex_lock_78(& adapter->mdio_lock);
  
#line 280 
  ret = mi1_wr_addr(adapter,phy_addr,mmd_addr,(int)reg_addr);
  
#line 281 
  if (ret == 0) {
    
#line 282 
    t3_write_reg(adapter,1724U,3U);
    
#line 283 
    ret = t3_wait_op_done(adapter,1724,2147483648U,0,20,10);
    
#line 285 
    if (ret == 0) {
      u32 tmp_0;
      
#line 286 
      tmp_0 = t3_read_reg(adapter,1720U);
      
#line 286 
      ret = (int)tmp_0;
    }
    else ;
  }
  else ;
  
#line 288 
  ldv_mutex_unlock_79(& adapter->mdio_lock);
  
#line 289 
  return ret;
}


#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int mi1_ext_write(struct net_device *dev, int phy_addr, int mmd_addr, u16 reg_addr, u16 val)
{
  int ret;
  
#line 295 
  struct port_info *pi = netdev_priv((struct net_device const *)dev);
  
#line 296 
  struct adapter *adapter = pi->adapter;
  
#line 299 
  ldv_mutex_lock_80(& adapter->mdio_lock);
  
#line 300 
  ret = mi1_wr_addr(adapter,phy_addr,mmd_addr,(int)reg_addr);
  
#line 301 
  if (ret == 0) {
    
#line 302 
    t3_write_reg(adapter,1720U,(unsigned int)val);
    
#line 303 
    t3_write_reg(adapter,1724U,1U);
    
#line 304 
    ret = t3_wait_op_done(adapter,1724,2147483648U,0,20,10);
  }
  else ;
  
#line 307 
  ldv_mutex_unlock_81(& adapter->mdio_lock);
  
#line 308 
  return ret;
}


#line 311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static struct mdio_ops const mi1_mdio_ext_ops = {.read = & mi1_ext_read, .write = & mi1_ext_write, .mode_support = 6U};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_mdio_change_bits(struct cphy *phy, int mmd, int reg, unsigned int clear, unsigned int set)
{
  int ret;
  unsigned int val;
  
#line 334 
  ret = t3_mdio_read(phy,mmd,reg,& val);
  
#line 335 
  if (ret == 0) {
    
#line 336 
    val = ~ clear & val;
    
#line 337 
    ret = t3_mdio_write(phy,mmd,reg,val | set);
  }
  else ;
  
#line 339 
  return ret;
}


#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_reset(struct cphy *phy, int mmd, int wait)
{
  int __retres;
  int err;
  unsigned int ctl;
  int tmp;
  
#line 357 
  err = t3_mdio_change_bits(phy,mmd,0,2048U,32768U);
  
#line 359 
  if (err != 0 || wait == 0) {
    
#line 360 
    __retres = err;
    
#line 360 
    goto return_label;
  }
  else ;
  ldv_47638: 
#line 361 
  ;
  
#line 363 
  err = t3_mdio_read(phy,mmd,0,& ctl);
  
#line 364 
  if (err != 0) {
    
#line 365 
    __retres = err;
    
#line 365 
    goto return_label;
  }
  else ;
  
#line 366 
  ctl &= 32768U;
  
#line 367 
  if (ctl != 0U) 
#line 368 
                 msleep(1U); else ;
  
#line 369 
  if (ctl != 0U) {
    
#line 369 
    wait -= 1;
    
#line 369 
    if (wait != 0) 
#line 371 
                   goto ldv_47638; else 
#line 374 
                                        goto ldv_47639;
  }
  else 
#line 374 
       goto ldv_47639;
  ldv_47639: 
#line 375 
  ;
  
#line 371 
  if (ctl != 0U) 
#line 371 
                 tmp = -1; else 
#line 371 
                                tmp = 0;
  
#line 371 
  __retres = tmp;
  return_label: 
#line 371 
                return __retres;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_advertise(struct cphy *phy, unsigned int advert)
{
  int __retres;
  int err;
  int tmp;
  
#line 385 
  unsigned int val = 0U;
  
#line 387 
  err = t3_mdio_read(phy,-1,9,& val);
  
#line 388 
  if (err != 0) {
    
#line 389 
    __retres = err;
    
#line 389 
    goto return_label;
  }
  else ;
  
#line 391 
  val &= 4294966527U;
  
#line 392 
  if ((advert & 16U) != 0U) 
#line 393 
                            val |= 256U; else ;
  
#line 394 
  if ((advert & 32U) != 0U) 
#line 395 
                            val |= 512U; else ;
  
#line 397 
  err = t3_mdio_write(phy,-1,9,val);
  
#line 398 
  if (err != 0) {
    
#line 399 
    __retres = err;
    
#line 399 
    goto return_label;
  }
  else ;
  
#line 401 
  val = 1U;
  
#line 402 
  if ((advert & 1U) != 0U) 
#line 403 
                           val |= 32U; else ;
  
#line 404 
  if ((advert & 2U) != 0U) 
#line 405 
                           val |= 64U; else ;
  
#line 406 
  if ((advert & 4U) != 0U) 
#line 407 
                           val |= 128U; else ;
  
#line 408 
  if ((advert & 8U) != 0U) 
#line 409 
                           val |= 256U; else ;
  
#line 410 
  if ((advert & 8192U) != 0U) 
#line 411 
                              val |= 1024U; else ;
  
#line 412 
  if ((advert & 16384U) != 0U) 
#line 413 
                               val |= 2048U; else ;
  
#line 414 
  tmp = t3_mdio_write(phy,-1,4,val);
  
#line 414 
  __retres = tmp;
  return_label: 
#line 414 
                return __retres;
}


#line 425  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_advertise_fiber(struct cphy *phy, unsigned int advert)
{
  int tmp;
  
#line 427 
  unsigned int val = 0U;
  
#line 429 
  if ((advert & 16U) != 0U) 
#line 430 
                            val |= 64U; else ;
  
#line 431 
  if ((advert & 32U) != 0U) 
#line 432 
                            val |= 32U; else ;
  
#line 433 
  if ((advert & 8192U) != 0U) 
#line 434 
                              val |= 128U; else ;
  
#line 435 
  if ((advert & 16384U) != 0U) 
#line 436 
                               val |= 256U; else ;
  
#line 437 
  tmp = t3_mdio_write(phy,-1,4,val);
  
#line 437 
  return tmp;
}


#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_set_phy_speed_duplex(struct cphy *phy, int speed, int duplex)
{
  int __retres;
  int err;
  unsigned int ctl;
  int tmp;
  
#line 454 
  err = t3_mdio_read(phy,-1,0,& ctl);
  
#line 455 
  if (err != 0) {
    
#line 456 
    __retres = err;
    
#line 456 
    goto return_label;
  }
  else ;
  
#line 458 
  if (speed >= 0) {
    
#line 459 
    ctl &= 4294954943U;
    
#line 460 
    if (speed == 100) 
#line 461 
                      ctl |= 8192U;
    else 
      
#line 462 
      if (speed == 1000) 
#line 463 
                         ctl |= 64U; else ;
  }
  else ;
  
#line 465 
  if (duplex >= 0) {
    
#line 466 
    ctl &= 4294962943U;
    
#line 467 
    if (duplex == 1) 
#line 468 
                     ctl |= 256U; else ;
  }
  else ;
  
#line 470 
  if ((ctl & 64U) != 0U) 
#line 471 
                         ctl |= 4096U; else ;
  
#line 472 
  tmp = t3_mdio_write(phy,-1,0,ctl);
  
#line 472 
  __retres = tmp;
  return_label: 
#line 472 
                return __retres;
}


#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_lasi_intr_enable(struct cphy *phy)
{
  int tmp;
  
#line 477 
  tmp = t3_mdio_write(phy,1,36866,1U);
  
#line 477 
  return tmp;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_lasi_intr_disable(struct cphy *phy)
{
  int tmp;
  
#line 483 
  tmp = t3_mdio_write(phy,1,36866,0U);
  
#line 483 
  return tmp;
}


#line 486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_lasi_intr_clear(struct cphy *phy)
{
  u32 val;
  int tmp;
  
#line 490 
  tmp = t3_mdio_read(phy,1,36869,& val);
  
#line 490 
  return tmp;
}


#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_lasi_intr_handler(struct cphy *phy)
{
  int __retres;
  unsigned int status;
  
#line 496 
  int err = t3_mdio_read(phy,1,36869,& status);
  
#line 499 
  if (err != 0) {
    
#line 500 
    __retres = err;
    
#line 500 
    goto return_label;
  }
  else ;
  
#line 501 
  __retres = (int)status & 1;
  return_label: 
#line 501 
                return __retres;
}


#line 504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static struct adapter_info const t3_adap_info[8U] = {{.nports0 = (unsigned char)1U, .nports1 = (unsigned char)1U, .phy_base_addr = (unsigned char)0U, .gpio_out = 1310740U, .gpio_intr = {(unsigned char)3U, (unsigned char)5U}, .caps = 0UL, .mdio_ops = & mi1_mdio_ops, .desc = "Chelsio PE9000"}, {.nports0 = (unsigned char)1U, .nports1 = (unsigned char)1U, .phy_base_addr = (unsigned char)0U, .gpio_out = 1310740U, .gpio_intr = {(unsigned char)3U, (unsigned char)5U}, .caps = 0UL, .mdio_ops = & mi1_mdio_ops, .desc = "Chelsio T302"}, {.nports0 = (unsigned char)1U, .nports1 = (unsigned char)0U, .phy_base_addr = (unsigned char)0U, .gpio_out = 214041666U, .gpio_intr = {(unsigned char)0U}, .caps = 4352UL, .mdio_ops = & mi1_mdio_ext_ops, .desc = "Chelsio T310"}, {.nports0 = (unsigned char)1U, .nports1 = (unsigned char)1U, .phy_base_addr = (unsigned char)0U, .gpio_out = 217449570U, .gpio_intr = {(unsigned char)9U, (unsigned char)3U}, .caps = 4352UL, .mdio_ops = & mi1_mdio_ext_ops, .desc = "Chelsio T320"}, {.nports0 = (unsigned char)0, .nports1 = (unsigned char)0, .phy_base_addr = (unsigned char)0, .gpio_out = 0U, .gpio_intr = {(unsigned char)0, (unsigned char)0}, .caps = 0UL, .mdio_ops = (struct mdio_ops const *)0, .desc = (char const *)0}, {.nports0 = (unsigned char)0, .nports1 = (unsigned char)0, .phy_base_addr = (unsigned char)0, .gpio_out = 0U, .gpio_intr = {(unsigned char)0, (unsigned char)0}, .caps = 0UL, .mdio_ops = (struct mdio_ops const *)0, .desc = (char const *)0}, {.nports0 = (unsigned char)1U, .nports1 = (unsigned char)0U, .phy_base_addr = (unsigned char)0U, .gpio_out = 81134658U, .gpio_intr = {(unsigned char)9U}, .caps = 4352UL, .mdio_ops = & mi1_mdio_ext_ops, .desc = "Chelsio T310"}, {.nports0 = (unsigned char)1U, .nports1 = (unsigned char)0U, .phy_base_addr = (unsigned char)0U, .gpio_out = 12714050U, .gpio_intr = {(unsigned char)9U}, .caps = 4352UL, .mdio_ops = & mi1_mdio_ext_ops, .desc = "Chelsio N320E-G2"}};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
struct adapter_info const *t3_get_adapter_info(unsigned int id)
{
  struct adapter_info const *tmp;
  
#line 544 
  if (id <= 7U) 
#line 544 
                tmp = & t3_adap_info[id]; else 
#line 544 
                                               tmp = (struct adapter_info const *)0;
  
#line 544 
  return tmp;
}


#line 552  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static struct port_type_info const port_types[11U] = {{.phy_prep = (int (*)(struct cphy *, struct adapter *, int , struct mdio_ops const *))0}, {.phy_prep = & t3_ael1002_phy_prep}, {.phy_prep = & t3_vsc8211_phy_prep}, {.phy_prep = (int (*)(struct cphy *, struct adapter *, int , struct mdio_ops const *))0}, {.phy_prep = & t3_xaui_direct_phy_prep}, {.phy_prep = & t3_ael2005_phy_prep}, {.phy_prep = & t3_qt2045_phy_prep}, {.phy_prep = & t3_ael1006_phy_prep}, {.phy_prep = (int (*)(struct cphy *, struct adapter *, int , struct mdio_ops const *))0}, {.phy_prep = & t3_aq100x_phy_prep}, {.phy_prep = & t3_ael2020_phy_prep}};

#line 613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_seeprom_read(struct adapter *adapter, u32 addr, __le32 *data)
{
  int __retres;
  u16 val;
  u32 v;
  
#line 616 
  int attempts = 40;
  
#line 618 
  unsigned int base = adapter->params.pci.vpd_cap_addr;
  
#line 620 
  if ((addr > 8191U && addr != 16384U) || (addr & 3U) != 0U) {
    
#line 621 
    __retres = -22;
    
#line 621 
    goto return_label;
  }
  else ;
  
#line 623 
  pci_write_config_word((struct pci_dev const *)adapter->pdev,(int)(base + 2U),(unsigned short)((int)((unsigned short)addr)));
  ldv_47751: 
#line 624 
  ;
  
#line 625 
  __const_udelay(42950UL);
  
#line 626 
  pci_read_config_word((struct pci_dev const *)adapter->pdev,(int)(base + 2U),& val);
  
#line 627 
  if ((int)val >= 0) {
    
#line 627 
    attempts -= 1;
    
#line 627 
    if (attempts != 0) 
#line 629 
                       goto ldv_47751; else 
#line 632 
                                            goto ldv_47752;
  }
  else 
#line 632 
       goto ldv_47752;
  ldv_47752: 
#line 633 
  ;
  
#line 629 
  if ((int)val >= 0) {
    
#line 630 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"reading EEPROM address 0x%x failed\n",addr);
    
#line 631 
    __retres = -5;
    
#line 631 
    goto return_label;
  }
  else ;
  
#line 633 
  pci_read_config_dword((struct pci_dev const *)adapter->pdev,(int)(base + 4U),& v);
  
#line 634 
  *data = v;
  
#line 635 
  __retres = 0;
  return_label: 
#line 635 
                return __retres;
}


#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_seeprom_write(struct adapter *adapter, u32 addr, __le32 data)
{
  int __retres;
  u16 val;
  
#line 650 
  int attempts = 40;
  
#line 651 
  unsigned int base = adapter->params.pci.vpd_cap_addr;
  
#line 653 
  if ((addr > 8191U && addr != 16384U) || (addr & 3U) != 0U) {
    
#line 654 
    __retres = -22;
    
#line 654 
    goto return_label;
  }
  else ;
  
#line 656 
  pci_write_config_dword((struct pci_dev const *)adapter->pdev,(int)(base + 4U),data);
  
#line 658 
  pci_write_config_word((struct pci_dev const *)adapter->pdev,(int)(base + 2U),(unsigned short)((int)((unsigned int)((unsigned short)addr) | 32768U)));
  ldv_47761: 
#line 660 
  ;
  
#line 661 
  msleep(1U);
  
#line 662 
  pci_read_config_word((struct pci_dev const *)adapter->pdev,(int)(base + 2U),& val);
  
#line 663 
  if ((int)val < 0) {
    
#line 663 
    attempts -= 1;
    
#line 663 
    if (attempts != 0) 
#line 665 
                       goto ldv_47761; else 
#line 668 
                                            goto ldv_47762;
  }
  else 
#line 668 
       goto ldv_47762;
  ldv_47762: 
#line 669 
  ;
  
#line 665 
  if ((int)val < 0) {
    
#line 666 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"write to EEPROM address 0x%x failed\n",addr);
    
#line 667 
    __retres = -5;
    
#line 667 
    goto return_label;
  }
  else ;
  
#line 669 
  __retres = 0;
  return_label: 
#line 669 
                return __retres;
}


#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_seeprom_wp(struct adapter *adapter, int enable)
{
  int tmp_0;
  int tmp;
  
#line 681 
  if (enable != 0) 
#line 681 
                   tmp = 12; else 
#line 681 
                                  tmp = 0;
  
#line 681 
  ;
  
#line 681 
  tmp_0 = t3_seeprom_write(adapter,16384U,(unsigned int)tmp);
  
#line 681 
  return tmp_0;
}


#line 691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int get_vpd_params(struct adapter *adapter, struct vpd_params *p)
{
  int __retres;
  int i;
  int addr;
  int ret;
  struct t3_vpd vpd;
  unsigned long tmp;
  unsigned long tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  unsigned long tmp_3;
  
#line 700 
  ret = t3_seeprom_read(adapter,3072U,(__le32 *)(& vpd));
  
#line 701 
  if (ret != 0) {
    
#line 702 
    __retres = ret;
    
#line 702 
    goto return_label;
  }
  else ;
  
#line 703 
  if ((unsigned int)vpd.id_tag == 130U) 
#line 703 
                                        addr = 3072; else 
#line 703 
                                                          addr = 0;
  
#line 705 
  i = 0;
  
#line 705 
  goto ldv_47776;
  ldv_47775: 
#line 706 
  ;
  
#line 706 
  ret = t3_seeprom_read(adapter,(unsigned int)(addr + i),(__le32 *)(& vpd) + i);
  
#line 708 
  if (ret != 0) {
    
#line 709 
    __retres = ret;
    
#line 709 
    goto return_label;
  }
  else ;
  
#line 705 
  i += 4;
  ldv_47776: 
#line 706 
  ;
  
#line 705 
  if ((unsigned int)i <= 183U) 
#line 707 
                               goto ldv_47775; else 
#line 710 
                                                    goto ldv_47777;
  ldv_47777: 
#line 711 
  ;
  
#line 712 
  tmp = simple_strtoul((char const *)(& vpd.cclk_data),(char **)0,10U);
  
#line 712 
  p->cclk = (unsigned int)tmp;
  
#line 713 
  tmp_0 = simple_strtoul((char const *)(& vpd.mclk_data),(char **)0,10U);
  
#line 713 
  p->mclk = (unsigned int)tmp_0;
  
#line 714 
  tmp_1 = simple_strtoul((char const *)(& vpd.uclk_data),(char **)0,10U);
  
#line 714 
  p->uclk = (unsigned int)tmp_1;
  
#line 715 
  tmp_2 = simple_strtoul((char const *)(& vpd.mdc_data),(char **)0,10U);
  
#line 715 
  p->mdc = (unsigned int)tmp_2;
  
#line 716 
  tmp_3 = simple_strtoul((char const *)(& vpd.mt_data),(char **)0,10U);
  
#line 716 
  p->mem_timing = (unsigned int)tmp_3;
  
#line 717 
  memcpy((void *)(& p->sn),(void const *)(& vpd.sn_data),16UL);
  
#line 720 
  if (adapter->params.rev == 0U && (unsigned int)vpd.port0_data[0] == 0U) {
    int tmp_4;
    int tmp_5;
    
#line 721 
    tmp_4 = uses_xaui((struct adapter const *)adapter);
    
#line 721 
    if (tmp_4 != 0) 
#line 721 
                    p->port_type[0] = (unsigned char)1U; else 
#line 721 
                                                              p->port_type[0] = (unsigned char)2U;
    
#line 722 
    tmp_5 = uses_xaui((struct adapter const *)adapter);
    
#line 722 
    if (tmp_5 != 0) 
#line 722 
                    p->port_type[1] = (unsigned char)6U; else 
#line 722 
                                                              p->port_type[1] = (unsigned char)2U;
  }
  else {
    int tmp_6;
    int tmp_7;
    unsigned long tmp_8;
    unsigned long tmp_9;
    
#line 724 
    tmp_6 = hex_to_bin((char)((int)((char)vpd.port0_data[0])));
    
#line 724 
    p->port_type[0] = (unsigned char)tmp_6;
    
#line 725 
    tmp_7 = hex_to_bin((char)((int)((char)vpd.port1_data[0])));
    
#line 725 
    p->port_type[1] = (unsigned char)tmp_7;
    
#line 726 
    tmp_8 = simple_strtoul((char const *)(& vpd.xaui0cfg_data),(char **)0,16U);
    
#line 726 
    p->xauicfg[0] = (unsigned short)tmp_8;
    
#line 727 
    tmp_9 = simple_strtoul((char const *)(& vpd.xaui1cfg_data),(char **)0,16U);
    
#line 727 
    p->xauicfg[1] = (unsigned short)tmp_9;
  }
  
#line 730 
  ret = hex2bin((u8 *)(& p->eth_base),(char const *)(& vpd.na_data),6UL);
  
#line 731 
  if (ret < 0) {
    
#line 732 
    __retres = -22;
    
#line 732 
    goto return_label;
  }
  else ;
  
#line 733 
  __retres = 0;
  return_label: 
#line 733 
                return __retres;
}


#line 766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int sf1_read(struct adapter *adapter, unsigned int byte_cnt, int cont, u32 *valp)
{
  int __retres;
  int ret;
  u32 tmp;
  
#line 771 
  if (byte_cnt + 4294967295U > 3U) {
    
#line 772 
    __retres = -22;
    
#line 772 
    goto return_label;
  }
  else ;
  
#line 773 
  tmp = t3_read_reg(adapter,1756U);
  
#line 773 
  if (tmp < (u32)0) {
    
#line 774 
    __retres = -16;
    
#line 774 
    goto return_label;
  }
  else ;
  
#line 775 
  t3_write_reg(adapter,1756U,(unsigned int)(cont << 3) | ((byte_cnt + 4294967295U) << 1));
  
#line 776 
  ret = t3_wait_op_done(adapter,1756,2147483648U,0,5,10);
  
#line 777 
  if (ret == 0) 
#line 778 
                *valp = t3_read_reg(adapter,1752U); else ;
  
#line 779 
  __retres = ret;
  return_label: 
#line 779 
                return __retres;
}


#line 793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int sf1_write(struct adapter *adapter, unsigned int byte_cnt, int cont, u32 val)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 796 
  if (byte_cnt + 4294967295U > 3U) {
    
#line 797 
    __retres = -22;
    
#line 797 
    goto return_label;
  }
  else ;
  
#line 798 
  tmp = t3_read_reg(adapter,1756U);
  
#line 798 
  if (tmp < (u32)0) {
    
#line 799 
    __retres = -16;
    
#line 799 
    goto return_label;
  }
  else ;
  
#line 800 
  t3_write_reg(adapter,1752U,val);
  
#line 801 
  t3_write_reg(adapter,1756U,((unsigned int)(cont << 3) | ((byte_cnt + 4294967295U) << 1)) | 1U);
  
#line 803 
  tmp_0 = t3_wait_op_done(adapter,1756,2147483648U,0,5,10);
  
#line 803 
  __retres = tmp_0;
  return_label: 
#line 803 
                return __retres;
}


#line 814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int flash_wait_op(struct adapter *adapter, int attempts, int delay)
{
  int __retres;
  int ret;
  u32 status;
  ldv_47811: 
#line 818 
  ;
  
#line 820 
  ret = sf1_write(adapter,1U,1,5U);
  
#line 820 
  if (ret != 0) {
    
#line 822 
    __retres = ret;
    
#line 822 
    goto return_label;
  }
  else {
    
#line 821 
    ret = sf1_read(adapter,1U,0,& status);
    
#line 820 
    if (ret != 0) {
      
#line 822 
      __retres = ret;
      
#line 822 
      goto return_label;
    }
    else ;
  }
  
#line 823 
  if ((status & 1U) == 0U) {
    
#line 824 
    __retres = 0;
    
#line 824 
    goto return_label;
  }
  else ;
  
#line 825 
  attempts -= 1;
  
#line 825 
  if (attempts == 0) {
    
#line 826 
    __retres = -11;
    
#line 826 
    goto return_label;
  }
  else ;
  
#line 827 
  if (delay != 0) 
#line 828 
                  msleep((unsigned int)delay); else ;
  
#line 820 
  goto ldv_47811;
  return_label: 
#line 820 
                return __retres;
}


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_read_flash(struct adapter *adapter, unsigned int addr, unsigned int nwords, u32 *data, int byte_oriented)
{
  int __retres;
  int ret;
  
#line 850 
  if ((unsigned long)addr + (unsigned long)nwords * 4UL > 524288UL || (addr & 3U) != 0U) {
    
#line 851 
    __retres = -22;
    
#line 851 
    goto return_label;
  }
  else ;
  
#line 853 
  if (0 != 0) 
#line 853 
              addr = ((((addr << 24) | ((addr << 8) & 16711680U)) | ((addr >> 8) & 65280U)) | (addr >> 24)) | 11U;
  else {
    __u32 tmp;
    
#line 853 
    tmp = __fswab32(addr);
    
#line 853 
    addr = tmp | 11U;
  }
  
#line 855 
  ret = sf1_write(adapter,4U,1,addr);
  
#line 855 
  if (ret != 0) {
    
#line 857 
    __retres = ret;
    
#line 857 
    goto return_label;
  }
  else {
    
#line 856 
    ret = sf1_read(adapter,1U,1,data);
    
#line 855 
    if (ret != 0) {
      
#line 857 
      __retres = ret;
      
#line 857 
      goto return_label;
    }
    else ;
  }
  
#line 859 
  goto ldv_47821;
  ldv_47820: 
#line 860 
  ;
  
#line 860 
  ret = sf1_read(adapter,4U,nwords > 1U,data);
  
#line 861 
  if (ret != 0) {
    
#line 862 
    __retres = ret;
    
#line 862 
    goto return_label;
  }
  else ;
  
#line 863 
  if (byte_oriented != 0) 
    
#line 864 
    if (0 != 0) 
#line 864 
                *data = (((*data << 24) | ((*data << 8) & 16711680U)) | ((*data >> 8) & 65280U)) | (*data >> 24); else 
                                                                    
#line 864 
                                                                    *data = __fswab32(*data);
  else ;
  
#line 859 
  nwords -= 1U;
  
#line 859 
  data += 1;
  ldv_47821: 
#line 860 
  ;
  
#line 859 
  if (nwords != 0U) 
#line 861 
                    goto ldv_47820; else 
#line 864 
                                         goto ldv_47822;
  ldv_47822: 
#line 865 
  ;
  
#line 866 
  __retres = 0;
  return_label: 
#line 866 
                return __retres;
}


#line 879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_write_flash(struct adapter *adapter, unsigned int addr, unsigned int n, u8 const *data)
{
  int __retres;
  int ret;
  u32 buf[64U];
  unsigned int i;
  unsigned int c;
  unsigned int left;
  unsigned int val;
  unsigned int tmp_1;
  u8 const *tmp_2;
  int tmp_3;
  
#line 884 
  unsigned int offset = addr & 255U;
  
#line 886 
  if (addr + n > 524288U || offset + n > 256U) {
    
#line 887 
    __retres = -22;
    
#line 887 
    goto return_label;
  }
  else ;
  
#line 889 
  if (0 != 0) 
#line 889 
              val = ((((addr << 24) | ((addr << 8) & 16711680U)) | ((addr >> 8) & 65280U)) | (addr >> 24)) | 2U;
  else {
    __u32 tmp;
    
#line 889 
    tmp = __fswab32(addr);
    
#line 889 
    val = tmp | 2U;
  }
  
#line 891 
  ret = sf1_write(adapter,1U,0,6U);
  
#line 891 
  if (ret != 0) {
    
#line 893 
    __retres = ret;
    
#line 893 
    goto return_label;
  }
  else {
    
#line 892 
    ret = sf1_write(adapter,4U,1,val);
    
#line 891 
    if (ret != 0) {
      
#line 893 
      __retres = ret;
      
#line 893 
      goto return_label;
    }
    else ;
  }
  
#line 895 
  left = n;
  
#line 895 
  goto ldv_47843;
  ldv_47842: 
#line 896 
  ;
  {
    unsigned int tmp_0;
    
#line 896 
    unsigned int _min1 = left;
    
#line 896 
    unsigned int _min2 = 4U;
    
#line 896 
    if (_min1 < _min2) 
#line 896 
                       tmp_0 = _min1; else 
#line 896 
                                           tmp_0 = _min2;
    
#line 896 
    tmp_1 = tmp_0;
  }
  
#line 896 
  c = tmp_1;
  
#line 897 
  val = 0U;
  
#line 897 
  i = 0U;
  
#line 897 
  goto ldv_47840;
  ldv_47839: 
#line 898 
  ;
  
#line 898 
  tmp_2 = data;
  
#line 898 
  data += 1;
  
#line 898 
  val = (val << 8) + (unsigned int)*tmp_2;
  
#line 897 
  i += 1U;
  ldv_47840: 
#line 898 
  ;
  
#line 897 
  if (i < c) 
#line 899 
             goto ldv_47839; else 
#line 902 
                                  goto ldv_47841;
  ldv_47841: 
#line 903 
  ;
  
#line 900 
  ret = sf1_write(adapter,c,c != left,val);
  
#line 901 
  if (ret != 0) {
    
#line 902 
    __retres = ret;
    
#line 902 
    goto return_label;
  }
  else ;
  
#line 895 
  left -= c;
  ldv_47843: 
#line 896 
  ;
  
#line 895 
  if (left != 0U) 
#line 897 
                  goto ldv_47842; else 
#line 900 
                                       goto ldv_47844;
  ldv_47844: 
#line 901 
  ;
  
#line 904 
  ret = flash_wait_op(adapter,5,1);
  
#line 904 
  if (ret != 0) {
    
#line 905 
    __retres = ret;
    
#line 905 
    goto return_label;
  }
  else ;
  
#line 908 
  ret = t3_read_flash(adapter,addr & 4294967040U,64U,(u32 *)(& buf),1);
  
#line 909 
  if (ret != 0) {
    
#line 910 
    __retres = ret;
    
#line 910 
    goto return_label;
  }
  else ;
  
#line 912 
  tmp_3 = memcmp((void const *)(data + - n),(void const *)(& buf) + offset,(unsigned long)n);
  
#line 912 
  if (tmp_3 != 0) {
    
#line 913 
    __retres = -5;
    
#line 913 
    goto return_label;
  }
  else ;
  
#line 914 
  __retres = 0;
  return_label: 
#line 914 
                return __retres;
}


#line 924  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_get_tp_version(struct adapter *adapter, u32 *vers)
{
  int __retres;
  int ret;
  
#line 929 
  t3_write_reg(adapter,1256U,0U);
  
#line 930 
  ret = t3_wait_op_done(adapter,1256,1U,1,5,1);
  
#line 932 
  if (ret != 0) {
    
#line 933 
    __retres = ret;
    
#line 933 
    goto return_label;
  }
  else ;
  
#line 935 
  *vers = t3_read_reg(adapter,1260U);
  
#line 937 
  __retres = 0;
  return_label: 
#line 937 
                return __retres;
}


#line 946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_check_tpsram_version(struct adapter *adapter)
{
  int __retres;
  int ret;
  u32 vers;
  unsigned int major;
  unsigned int minor;
  
#line 952 
  if (adapter->params.rev == 0U) {
    
#line 953 
    __retres = 0;
    
#line 953 
    goto return_label;
  }
  else ;
  
#line 956 
  ret = t3_get_tp_version(adapter,& vers);
  
#line 957 
  if (ret != 0) {
    
#line 958 
    __retres = ret;
    
#line 958 
    goto return_label;
  }
  else ;
  
#line 960 
  major = (vers >> 16) & 255U;
  
#line 961 
  minor = (vers >> 8) & 255U;
  
#line 963 
  if (major == 1U && minor == 1U) {
    
#line 964 
    __retres = 0;
    
#line 964 
    goto return_label;
  }
  else 
#line 966 
       dev_err((struct device const *)(& (adapter->pdev)->dev),"found wrong TP version (%u.%u), ",major,minor,1,1);
  
#line 970 
  __retres = -22;
  return_label: 
#line 970 
                return __retres;
}


#line 983  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_check_tpsram(struct adapter *adapter, u8 const *tp_sram, unsigned int size)
{
  int __retres;
  u32 csum;
  unsigned int i;
  unsigned int tmp_0;
  
#line 988 
  __be32 const *p = (__be32 const *)tp_sram;
  
#line 991 
  csum = 0U;
  
#line 991 
  i = 0U;
  
#line 991 
  goto ldv_47869;
  ldv_47868: 
#line 992 
  ;
  
#line 992 
  if (0 != 0) 
#line 992 
              tmp_0 = (((*(p + i) << 24) | ((*(p + i) << 8) & 16711680U)) | ((*(p + i) >> 8) & 65280U)) | (*(p + i) >> 24); else 
                                                                    
#line 992 
                                                                    tmp_0 = __fswab32(*(p + i));
  
#line 992 
  csum = tmp_0 + csum;
  
#line 991 
  i += 1U;
  ldv_47869: 
#line 992 
  ;
  
#line 991 
  if (size / 4U > i) 
#line 993 
                     goto ldv_47868; else 
#line 996 
                                          goto ldv_47870;
  ldv_47870: 
#line 997 
  ;
  
#line 993 
  if (csum != 4294967295U) {
    
#line 994 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"corrupted protocol SRAM image, checksum %u\n",csum);
    
#line 996 
    __retres = -22;
    
#line 996 
    goto return_label;
  }
  else ;
  
#line 999 
  __retres = 0;
  return_label: 
#line 999 
                return __retres;
}


#line 1014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_get_fw_version(struct adapter *adapter, u32 *vers)
{
  int tmp;
  
#line 1016 
  tmp = t3_read_flash(adapter,524284U,1U,vers,0);
  
#line 1016 
  return tmp;
}


#line 1026  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_check_fw_version(struct adapter *adapter)
{
  int __retres;
  int ret;
  u32 vers;
  unsigned int type;
  unsigned int major;
  unsigned int minor;
  
#line 1032 
  ret = t3_get_fw_version(adapter,& vers);
  
#line 1033 
  if (ret != 0) {
    
#line 1034 
    __retres = ret;
    
#line 1034 
    goto return_label;
  }
  else ;
  
#line 1036 
  type = vers >> 28;
  
#line 1037 
  major = (vers >> 16) & 4095U;
  
#line 1038 
  minor = (vers >> 8) & 255U;
  
#line 1040 
  if ((type == 1U && major == 7U) && minor == 12U) {
    
#line 1042 
    __retres = 0;
    
#line 1042 
    goto return_label;
  }
  else 
    
#line 1043 
    if (major != 7U || minor <= 11U) 
#line 1044 
                                     dev_warn((struct device const *)(& (adapter->pdev)->dev),"found old FW minor version(%u.%u), ",major,minor,7,12);
    else {
      
#line 1048 
      dev_warn((struct device const *)(& (adapter->pdev)->dev),"found newer FW version(%u.%u), ",major,minor,7,12);
      
#line 1051 
      __retres = 0;
      
#line 1051 
      goto return_label;
    }
  
#line 1053 
  __retres = -22;
  return_label: 
#line 1053 
                return __retres;
}


#line 1064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_flash_erase_sectors(struct adapter *adapter, int start, int end)
{
  int __retres;
  
#line 1066 
  goto ldv_47893;
  ldv_47892: 
#line 1067 
  ;
  {
    int ret;
    
#line 1069 
    ret = sf1_write(adapter,1U,0,6U);
    
#line 1069 
    if (ret != 0) {
      
#line 1073 
      __retres = ret;
      
#line 1073 
      goto return_label;
    }
    else {
      
#line 1070 
      ret = sf1_write(adapter,4U,0,(unsigned int)((start << 8) | 216));
      
#line 1069 
      if (ret != 0) {
        
#line 1073 
        __retres = ret;
        
#line 1073 
        goto return_label;
      }
      else {
        
#line 1072 
        ret = flash_wait_op(adapter,5,500);
        
#line 1071 
        if (ret != 0) {
          
#line 1073 
          __retres = ret;
          
#line 1073 
          goto return_label;
        }
        else ;
      }
    }
    
#line 1074 
    start += 1;
  }
  ldv_47893: 
#line 1076 
  ;
  
#line 1066 
  if (start <= end) 
#line 1068 
                    goto ldv_47892; else 
#line 1071 
                                         goto ldv_47894;
  ldv_47894: 
#line 1072 
  ;
  
#line 1076 
  __retres = 0;
  return_label: 
#line 1076 
                return __retres;
}


#line 1090  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_load_fw(struct adapter *adapter, u8 const *fw_data, unsigned int size)
{
  int __retres;
  u32 csum;
  unsigned int i;
  int ret;
  int addr;
  unsigned int tmp_0;
  
#line 1094 
  __be32 const *p = (__be32 const *)fw_data;
  
#line 1095 
  int fw_sector = 7;
  
#line 1097 
  if ((size & 3U) != 0U || size <= 7U) {
    
#line 1098 
    __retres = -22;
    
#line 1098 
    goto return_label;
  }
  else ;
  
#line 1099 
  if (size > 65540U) {
    
#line 1100 
    __retres = -27;
    
#line 1100 
    goto return_label;
  }
  else ;
  
#line 1102 
  csum = 0U;
  
#line 1102 
  i = 0U;
  
#line 1102 
  goto ldv_47907;
  ldv_47906: 
#line 1103 
  ;
  
#line 1103 
  if (0 != 0) 
#line 1103 
              tmp_0 = (((*(p + i) << 24) | ((*(p + i) << 8) & 16711680U)) | ((*(p + i) >> 8) & 65280U)) | (*(p + i) >> 24); else 
                                                                    
#line 1103 
                                                                    tmp_0 = __fswab32(*(p + i));
  
#line 1103 
  csum = tmp_0 + csum;
  
#line 1102 
  i += 1U;
  ldv_47907: 
#line 1103 
  ;
  
#line 1102 
  if (size / 4U > i) 
#line 1104 
                     goto ldv_47906; else 
#line 1107 
                                          goto ldv_47908;
  ldv_47908: 
#line 1108 
  ;
  
#line 1104 
  if (csum != 4294967295U) {
    
#line 1105 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"corrupted firmware image, checksum %u\n",csum);
    
#line 1107 
    __retres = -22;
    
#line 1107 
    goto return_label;
  }
  else ;
  
#line 1110 
  ret = t3_flash_erase_sectors(adapter,fw_sector,fw_sector);
  
#line 1111 
  if (ret != 0) 
#line 1112 
                goto out; else ;
  
#line 1114 
  size += 4294967288U;
  
#line 1115 
  addr = 458752;
  
#line 1115 
  goto ldv_47915;
  ldv_47914: 
#line 1116 
  ;
  {
    unsigned int tmp_2;
    {
      unsigned int tmp_1;
      
#line 1116 
      unsigned int _min1 = size;
      
#line 1116 
      unsigned int _min2 = 256U;
      
#line 1116 
      if (_min1 < _min2) 
#line 1116 
                         tmp_1 = _min1; else 
#line 1116 
                                             tmp_1 = _min2;
      
#line 1116 
      tmp_2 = tmp_1;
    }
    
#line 1116 
    unsigned int chunk_size = tmp_2;
    
#line 1118 
    ret = t3_write_flash(adapter,(unsigned int)addr,chunk_size,fw_data);
    
#line 1119 
    if (ret != 0) 
#line 1120 
                  goto out; else ;
    
#line 1122 
    addr = (int)((unsigned int)addr + chunk_size);
    
#line 1123 
    fw_data += chunk_size;
    
#line 1124 
    size -= chunk_size;
  }
  ldv_47915: 
#line 1126 
  ;
  
#line 1115 
  if (size != 0U) 
#line 1117 
                  goto ldv_47914; else 
#line 1120 
                                       goto ldv_47916;
  ldv_47916: 
#line 1121 
  ;
  
#line 1127 
  ret = t3_write_flash(adapter,524284U,4U,fw_data);
  out: 
#line 1128 
  ;
  
#line 1129 
  if (ret != 0) 
#line 1130 
                dev_err((struct device const *)(& (adapter->pdev)->dev),"firmware download failed, error %d\n",ret); else ;
  
#line 1131 
  __retres = ret;
  return_label: 
#line 1131 
                return __retres;
}


#line 1146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_cim_ctl_blk_read(struct adapter *adap, unsigned int addr, unsigned int n, unsigned int *valp)
{
  int __retres;
  u32 tmp;
  
#line 1149 
  int ret = 0;
  
#line 1151 
  tmp = t3_read_reg(adap,688U);
  
#line 1151 
  if ((tmp & 131072U) != 0U) {
    
#line 1152 
    __retres = -16;
    
#line 1152 
    goto return_label;
  }
  else ;
  
#line 1154 
  goto ldv_47925;
  ldv_47924: 
#line 1155 
  ;
  
#line 1155 
  t3_write_reg(adap,688U,addr + 8192U);
  
#line 1156 
  ret = t3_wait_op_done(adap,688,131072U,0,5,2);
  
#line 1158 
  if (ret == 0) {
    unsigned int *tmp_0;
    
#line 1159 
    tmp_0 = valp;
    
#line 1159 
    valp += 1;
    
#line 1159 
    *tmp_0 = t3_read_reg(adap,692U);
  }
  else ;
  
#line 1154 
  addr += 4U;
  ldv_47925: 
#line 1155 
  ;
  
#line 1154 
  if (ret == 0) {
    unsigned int tmp_1;
    
#line 1154 
    tmp_1 = n;
    
#line 1154 
    n -= 1U;
    
#line 1154 
    ;
    
#line 1154 
    if (tmp_1 != 0U) 
#line 1156 
                     goto ldv_47924; else 
#line 1159 
                                          goto ldv_47926;
  }
  else 
#line 1159 
       goto ldv_47926;
  ldv_47926: 
#line 1160 
  ;
  
#line 1161 
  __retres = ret;
  return_label: 
#line 1161 
                return __retres;
}


#line 1164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void t3_gate_rx_traffic(struct cmac *mac, u32 *rx_cfg, u32 *rx_hash_high, u32 *rx_hash_low)
{
  
#line 1168 
  t3_mac_disable_exact_filters(mac);
  
#line 1171 
  *rx_cfg = t3_read_reg(mac->adapter,2064U);
  
#line 1172 
  t3_set_reg_field(mac->adapter,2064U,7U,2U);
  
#line 1176 
  *rx_hash_high = t3_read_reg(mac->adapter,2072U);
  
#line 1177 
  t3_write_reg(mac->adapter,2072U,0U);
  
#line 1179 
  *rx_hash_low = t3_read_reg(mac->adapter,2068U);
  
#line 1180 
  t3_write_reg(mac->adapter,2068U,0U);
  
#line 1183 
  msleep(1U);
  
#line 1184 
  return;
}


#line 1186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void t3_open_rx_traffic(struct cmac *mac, u32 rx_cfg, u32 rx_hash_high, u32 rx_hash_low)
{
  
#line 1189 
  t3_mac_enable_exact_filters(mac);
  
#line 1190 
  t3_set_reg_field(mac->adapter,2064U,7U,rx_cfg);
  
#line 1193 
  t3_write_reg(mac->adapter,2072U,rx_hash_high);
  
#line 1194 
  t3_write_reg(mac->adapter,2068U,rx_hash_low);
  
#line 1195 
  return;
}


#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_link_changed(struct adapter *adapter, int port_id)
{
  int link_ok;
  int speed;
  int duplex;
  int fc;
  
#line 1209 
  struct port_info *pi = adap2pinfo(adapter,port_id);
  
#line 1210 
  struct cphy *phy = & pi->phy;
  
#line 1211 
  struct cmac *mac = & pi->mac;
  
#line 1212 
  struct link_config *lc = & pi->link_config;
  
#line 1214 
  (*((phy->ops)->get_link_status))(phy,& link_ok,& speed,& duplex,& fc);
  
#line 1216 
  if (lc->link_ok == 0U && link_ok != 0) {
    u32 rx_cfg;
    u32 rx_hash_high;
    u32 rx_hash_low;
    u32 status;
    
#line 1220 
    t3_xgm_intr_enable(adapter,port_id);
    
#line 1221 
    t3_gate_rx_traffic(mac,& rx_cfg,& rx_hash_high,& rx_hash_low);
    
#line 1222 
    t3_write_reg(adapter,mac->offset + 2060U,0U);
    
#line 1223 
    t3_mac_enable(mac,1);
    
#line 1225 
    status = t3_read_reg(adapter,mac->offset + 2156U);
    
#line 1226 
    if ((status & 512U) != 0U) {
      
#line 1227 
      mac->stats.link_faults += 1UL;
      
#line 1228 
      pi->link_fault = 1;
    }
    else ;
    
#line 1230 
    t3_open_rx_traffic(mac,rx_cfg,rx_hash_high,rx_hash_low);
  }
  else ;
  
#line 1233 
  if (((int)lc->requested_fc & 4) != 0) 
#line 1234 
                                        fc = (int)lc->requested_fc & fc; else 
                                                                    
#line 1236 
                                                                    fc = (int)lc->requested_fc & 3;
  
#line 1238 
  if (((lc->link_ok == (unsigned int)link_ok && (int)lc->speed == speed) && (int)lc->duplex == duplex) && (int)lc->fc == fc) 
    
#line 1240 
    goto return_label; else ;
  
#line 1242 
  if (lc->link_ok != (unsigned int)link_ok && adapter->params.rev != 0U) {
    int tmp_1;
    
#line 1242 
    tmp_1 = uses_xaui((struct adapter const *)adapter);
    
#line 1242 
    if (tmp_1 != 0) {
      unsigned int tmp_0;
      
#line 1244 
      if (link_ok != 0) 
#line 1245 
                        t3b_pcs_reset(mac); else ;
      
#line 1246 
      if (link_ok != 0) 
#line 1246 
                        tmp_0 = 3U; else 
#line 1246 
                                         tmp_0 = 0U;
      
#line 1246 
      ;
      
#line 1246 
      ;
      
#line 1246 
      t3_write_reg(adapter,mac->offset + 2268U,tmp_0);
    }
    else ;
  }
  else ;
  
#line 1249 
  lc->link_ok = (unsigned int)link_ok;
  
#line 1250 
  if (speed >= 0) 
#line 1250 
                  lc->speed = (unsigned short)speed; else 
#line 1250 
                                                          lc->speed = (unsigned short)65535U;
  
#line 1251 
  if (duplex >= 0) 
#line 1251 
                   lc->duplex = (unsigned char)duplex; else 
#line 1251 
                                                            lc->duplex = (unsigned char)255U;
  
#line 1253 
  if ((link_ok != 0 && speed >= 0) && (unsigned int)lc->autoneg == 1U) {
    
#line 1255 
    t3_mac_set_speed_duplex_fc(mac,speed,duplex,fc);
    
#line 1256 
    lc->fc = (unsigned char)fc;
  }
  else ;
  
#line 1259 
  t3_os_link_changed(adapter,port_id,(link_ok != 0 && pi->link_fault == 0) != 0,speed,duplex,fc);
  return_label: 
#line 1260 
                return;
}


#line 1263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_link_fault(struct adapter *adapter, int port_id)
{
  int link_ok;
  int speed;
  int duplex;
  int fc;
  int link_fault;
  u32 rx_cfg;
  u32 rx_hash_high;
  u32 rx_hash_low;
  u32 tmp_1;
  
#line 1265 
  struct port_info *pi = adap2pinfo(adapter,port_id);
  
#line 1266 
  struct cmac *mac = & pi->mac;
  
#line 1267 
  struct cphy *phy = & pi->phy;
  
#line 1268 
  struct link_config *lc = & pi->link_config;
  
#line 1272 
  t3_gate_rx_traffic(mac,& rx_cfg,& rx_hash_high,& rx_hash_low);
  
#line 1274 
  if (adapter->params.rev != 0U) {
    int tmp_0;
    
#line 1274 
    tmp_0 = uses_xaui((struct adapter const *)adapter);
    
#line 1274 
    if (tmp_0 != 0) 
#line 1275 
                    t3_write_reg(adapter,mac->offset + 2268U,0U); else ;
  }
  else ;
  
#line 1277 
  t3_write_reg(adapter,mac->offset + 2060U,0U);
  
#line 1278 
  t3_mac_enable(mac,1);
  
#line 1280 
  t3_open_rx_traffic(mac,rx_cfg,rx_hash_high,rx_hash_low);
  
#line 1282 
  tmp_1 = t3_read_reg(adapter,mac->offset + 2156U);
  
#line 1282 
  link_fault = (int)tmp_1;
  
#line 1284 
  link_fault &= 512;
  
#line 1286 
  link_ok = (int)lc->link_ok;
  
#line 1287 
  speed = (int)lc->speed;
  
#line 1288 
  duplex = (int)lc->duplex;
  
#line 1289 
  fc = (int)lc->fc;
  
#line 1291 
  (*((phy->ops)->get_link_status))(phy,& link_ok,& speed,& duplex,& fc);
  
#line 1293 
  if (link_fault != 0) {
    
#line 1294 
    lc->link_ok = 0U;
    
#line 1295 
    lc->speed = (unsigned short)65535U;
    
#line 1296 
    lc->duplex = (unsigned char)255U;
    
#line 1298 
    t3_os_link_fault(adapter,port_id,0);
    
#line 1301 
    if (link_ok != 0) 
#line 1302 
                      mac->stats.link_faults += 1UL; else ;
  }
  else {
    
#line 1304 
    if (link_ok != 0) 
#line 1305 
                      t3_write_reg(adapter,mac->offset + 2268U,3U); else ;
    
#line 1308 
    pi->link_fault = 0;
    
#line 1309 
    lc->link_ok = (unsigned int)((unsigned char)link_ok);
    
#line 1310 
    if (speed >= 0) 
#line 1310 
                    lc->speed = (unsigned short)speed; else 
#line 1310 
                                                            lc->speed = (unsigned short)65535U;
    
#line 1311 
    if (duplex >= 0) 
#line 1311 
                     lc->duplex = (unsigned char)duplex; else 
#line 1311 
                                                              lc->duplex = (unsigned char)255U;
    
#line 1312 
    t3_os_link_fault(adapter,port_id,link_ok);
  }
  
#line 1314 
  return;
}


#line 1329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_link_start(struct cphy *phy, struct cmac *mac, struct link_config *lc)
{
  int __retres;
  
#line 1331 
  unsigned int fc = (unsigned int)lc->requested_fc & 3U;
  
#line 1333 
  lc->link_ok = 0U;
  
#line 1334 
  if ((lc->supported & 64U) != 0U) {
    
#line 1335 
    lc->advertising &= 4294942719U;
    
#line 1336 
    if (fc != 0U) {
      
#line 1337 
      lc->advertising |= 16384U;
      
#line 1338 
      if ((fc & 1U) != 0U) 
#line 1339 
                           lc->advertising |= 8192U; else ;
    }
    else ;
    
#line 1341 
    (*((phy->ops)->advertise))(phy,lc->advertising);
    
#line 1343 
    if ((unsigned int)lc->autoneg == 0U) {
      
#line 1344 
      lc->speed = lc->requested_speed;
      
#line 1345 
      lc->duplex = lc->requested_duplex;
      
#line 1346 
      lc->fc = (unsigned char)fc;
      
#line 1347 
      t3_mac_set_speed_duplex_fc(mac,(int)lc->speed,(int)lc->duplex,(int)fc);
      
#line 1350 
      (*((phy->ops)->set_speed_duplex))(phy,(int)lc->speed,(int)lc->duplex);
    }
    else 
#line 1352 
         (*((phy->ops)->autoneg_enable))(phy);
  }
  else {
    
#line 1354 
    t3_mac_set_speed_duplex_fc(mac,-1,-1,(int)fc);
    
#line 1355 
    lc->fc = (unsigned char)fc;
    
#line 1356 
    (*((phy->ops)->reset))(phy,0);
  }
  
#line 1358 
  __retres = 0;
  
#line 1358 
  return __retres;
}


#line 1369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_set_vlan_accel(struct adapter *adapter, unsigned int ports, int on)
{
  unsigned int tmp;
  
#line 1372 
  if (on != 0) 
#line 1372 
               tmp = ports << 12; else 
#line 1372 
                                       tmp = 0U;
  
#line 1371 
  ;
  
#line 1371 
  ;
  
#line 1371 
  t3_set_reg_field(adapter,772U,ports << 12,tmp);
  
#line 1374 
  return;
}


#line 1398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_handle_intr_status(struct adapter *adapter, unsigned int reg, unsigned int mask, struct intr_info const *acts, unsigned long *stats)
{
  u32 tmp;
  
#line 1403 
  int fatal = 0;
  
#line 1404 
  tmp = t3_read_reg(adapter,reg);
  
#line 1404 
  unsigned int status = tmp & mask;
  
#line 1406 
  goto ldv_47998;
  ldv_47997: 
#line 1407 
  ;
  
#line 1407 
  if ((acts->mask & status) == 0U) 
#line 1408 
                                   goto ldv_47996; else ;
  
#line 1409 
  if ((unsigned int)acts->fatal != 0U) {
    
#line 1410 
    fatal += 1;
    
#line 1411 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"%s (0x%x)\n",acts->msg,acts->mask & status);
    
#line 1413 
    status = ~ acts->mask & status;
  }
  else 
    
#line 1414 
    if (acts->msg != (char const *)0) 
#line 1415 
                                      dev_warn((struct device const *)(& (adapter->pdev)->dev),"%s (0x%x)\n",acts->msg,acts->mask & status); else ;
  
#line 1417 
  if ((int)acts->stat_idx >= 0) 
#line 1418 
                                *(stats + (int)acts->stat_idx) += 1UL; else ;
  ldv_47996: 
#line 1419 
  ;
  
#line 1406 
  acts += 1;
  ldv_47998: 
#line 1407 
  ;
  
#line 1406 
  if (acts->mask != 0U) 
#line 1408 
                        goto ldv_47997; else 
#line 1411 
                                             goto ldv_47999;
  ldv_47999: 
#line 1412 
  ;
  
#line 1420 
  if (status != 0U) 
#line 1421 
                    t3_write_reg(adapter,reg,status); else ;
  
#line 1422 
  return fatal;
}


#line 1486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void pci_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1488 
  struct intr_info const pcix1_intr_info[17U] = {{.mask = 1U, .msg = "PCI master detected parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2U, .msg = "PCI signaled target abort", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4U, .msg = "PCI received target abort", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 8U, .msg = "PCI received master abort", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 16U, .msg = "PCI signaled system error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 32U, .msg = "PCI detected parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 64U, .msg = "PCI split completion discarded", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 128U, .msg = "PCI unexpected split completion error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 256U, .msg = "PCI received split completion error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 512U, .msg = "PCI correctable ECC error", .stat_idx = (short)2, .fatal = (unsigned short)0U}, {.mask = 1024U, .msg = "PCI uncorrectable ECC error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2048U, .msg = "PCI PIO FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 12288U, .msg = "PCI write FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 245760U, .msg = "PCI read FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 3932160U, .msg = "PCI command FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 29360128U, .msg = "PCI MSI-X table/PBA parity ", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1514 
  tmp = t3_handle_intr_status(adapter,132U,4194303U,(struct intr_info const *)(& pcix1_intr_info),(unsigned long *)(& adapter->irq_stats));
  
#line 1514 
  if (tmp != 0) 
#line 1516 
                t3_fatal_err(adapter); else ;
  
#line 1517 
  return;
}


#line 1522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void pcie_intr_handler(struct adapter *adapter)
{
  u32 tmp_0;
  int tmp_1;
  
#line 1524 
  struct intr_info const pcie_intr_info[14U] = {{.mask = 1U, .msg = "PCI PEX error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 64U, .msg = "PCI unexpected split completion DMA read error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 128U, .msg = "PCI unexpected split completion DMA command error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 256U, .msg = "PCI PIO FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 512U, .msg = "PCI write FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 1024U, .msg = "PCI read FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2048U, .msg = "PCI command FIFO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 28672U, .msg = "PCI MSI-X table/PBA parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 32768U, .msg = "PCI retry buffer parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 65536U, .msg = "PCI retry LUT parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 131072U, .msg = "PCI Rx parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 262144U, .msg = "PCI Tx parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 8355840U, .msg = "PCI BIST error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1544 
  tmp_0 = t3_read_reg(adapter,132U);
  
#line 1544 
  if ((tmp_0 & 1U) != 0U) {
    u32 tmp;
    
#line 1545 
    tmp = t3_read_reg(adapter,164U);
    
#line 1545 
    ;
    
#line 1545 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"PEX error code 0x%x\n",tmp);
  }
  else ;
  
#line 1548 
  tmp_1 = t3_handle_intr_status(adapter,132U,8359872U,(struct intr_info const *)(& pcie_intr_info),(unsigned long *)(& adapter->irq_stats));
  
#line 1548 
  if (tmp_1 != 0) 
#line 1550 
                  t3_fatal_err(adapter); else ;
  
#line 1551 
  return;
}


#line 1556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void tp_intr_handler(struct adapter *adapter)
{
  int tmp_0;
  struct intr_info const *tmp;
  
#line 1558 
  struct intr_info const tp_intr_info[4U] = {{.mask = 16777215U, .msg = "TP parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 16777216U, .msg = "TP out of Rx pages", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 33554432U, .msg = "TP out of Tx pages", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1565 
  struct intr_info const tp_intr_info_t3c[4U] = {{.mask = 536870911U, .msg = "TP parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 536870912U, .msg = "TP out of Rx pages", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 1073741824U, .msg = "TP out of Tx pages", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1572 
  if (adapter->params.rev <= 3U) 
#line 1572 
                                 tmp = (struct intr_info const *)(& tp_intr_info); else 
                                                                    
#line 1572 
                                                                    tmp = (struct intr_info const *)(& tp_intr_info_t3c);
  
#line 1572 
  ;
  
#line 1572 
  tmp_0 = t3_handle_intr_status(adapter,1140U,4294967295U,tmp,(unsigned long *)0UL);
  
#line 1572 
  if (tmp_0 != 0) 
#line 1575 
                  t3_fatal_err(adapter); else ;
  
#line 1576 
  return;
}


#line 1581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void cim_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1583 
  struct intr_info const cim_intr_info[25U] = {{.mask = 1U, .msg = "CIM reserved space write", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2U, .msg = "CIM SDRAM address out of range", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4U, .msg = "CIM flash address out of range", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 16U, .msg = "CIM block write to boot space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 32U, .msg = "CIM write to cached flash space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 64U, .msg = "CIM single write to flash space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 128U, .msg = "CIM block read from flash space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 256U, .msg = "CIM block write to flash space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 512U, .msg = "CIM block read from CTL space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 1024U, .msg = "CIM block write to CTL space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2048U, .msg = "CIM block read from PL space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4096U, .msg = "CIM block write to PL space", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 131072U, .msg = "CIM DRAM parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 262144U, .msg = "CIM icache parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 524288U, .msg = "CIM dcache parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 1048576U, .msg = "CIM OBQ SGE parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2097152U, .msg = "CIM OBQ ULPHI parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4194304U, .msg = "CIM OBQ ULPLO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 8388608U, .msg = "CIM IBQ SGELO parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 16777216U, .msg = "CIM IBQ SGEHI parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 33554432U, .msg = "CIM IBQ ULP parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 67108864U, .msg = "CIM IBQ TP parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 134217728U, .msg = "CIM itag parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 268435456U, .msg = "CIM dtag parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1611 
  tmp = t3_handle_intr_status(adapter,668U,4294967295U,(struct intr_info const *)(& cim_intr_info),(unsigned long *)0UL);
  
#line 1611 
  if (tmp != 0) 
#line 1613 
                t3_fatal_err(adapter); else ;
  
#line 1614 
  return;
}


#line 1619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void ulprx_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1621 
  struct intr_info const ulprx_intr_info[9U] = {{.mask = 1U, .msg = "ULP RX data parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2U, .msg = "ULP RX command parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4U, .msg = "ULP RX ArbPF1 parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 8U, .msg = "ULP RX ArbPF0 parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 16U, .msg = "ULP RX ArbF parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 32U, .msg = "ULP RX PCMDMUX parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 64U, .msg = "ULP RX frame error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 128U, .msg = "ULP RX frame error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1633 
  tmp = t3_handle_intr_status(adapter,1288U,4294967295U,(struct intr_info const *)(& ulprx_intr_info),(unsigned long *)0UL);
  
#line 1633 
  if (tmp != 0) 
#line 1635 
                t3_fatal_err(adapter); else ;
  
#line 1636 
  return;
}


#line 1641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void ulptx_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1643 
  struct intr_info const ulptx_intr_info[4U] = {{.mask = 1U, .msg = "ULP TX channel 0 PBL out of bounds", .stat_idx = (short)0, .fatal = (unsigned short)0U}, {.mask = 2U, .msg = "ULP TX channel 1 PBL out of bounds", .stat_idx = (short)1, .fatal = (unsigned short)0U}, {.mask = 252U, .msg = "ULP TX parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1652 
  tmp = t3_handle_intr_status(adapter,1416U,4294967295U,(struct intr_info const *)(& ulptx_intr_info),(unsigned long *)(& adapter->irq_stats));
  
#line 1652 
  if (tmp != 0) 
#line 1654 
                t3_fatal_err(adapter); else ;
  
#line 1655 
  return;
}


#line 1669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void pmtx_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1671 
  struct intr_info const pmtx_intr_info[6U] = {{.mask = 262144U, .msg = "PMTX 0-length pcmd", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 258048U, .msg = "PMTX ispi framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4032U, .msg = "PMTX ospi framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 56U, .msg = "PMTX ispi parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 7U, .msg = "PMTX ospi parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1682 
  tmp = t3_handle_intr_status(adapter,1532U,4294967295U,(struct intr_info const *)(& pmtx_intr_info),(unsigned long *)0UL);
  
#line 1682 
  if (tmp != 0) 
#line 1684 
                t3_fatal_err(adapter); else ;
  
#line 1685 
  return;
}


#line 1699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void pmrx_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1701 
  struct intr_info const pmrx_intr_info[6U] = {{.mask = 262144U, .msg = "PMRX 0-length pcmd", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 258048U, .msg = "PMRX ispi framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4032U, .msg = "PMRX ospi framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 56U, .msg = "PMRX ispi parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 7U, .msg = "PMRX ospi parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1712 
  tmp = t3_handle_intr_status(adapter,1500U,4294967295U,(struct intr_info const *)(& pmrx_intr_info),(unsigned long *)0UL);
  
#line 1712 
  if (tmp != 0) 
#line 1714 
                t3_fatal_err(adapter); else ;
  
#line 1715 
  return;
}


#line 1720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void cplsw_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1722 
  struct intr_info const cplsw_intr_info[7U] = {{.mask = 32U, .msg = "CPL switch CIM parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 16U, .msg = "CPL switch CIM overflow", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 8U, .msg = "CPL switch TP framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 4U, .msg = "CPL switch SGE framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 2U, .msg = "CPL switch CIM framing error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 1U, .msg = "CPL switch no-switch error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1732 
  tmp = t3_handle_intr_status(adapter,1620U,4294967295U,(struct intr_info const *)(& cplsw_intr_info),(unsigned long *)0UL);
  
#line 1732 
  if (tmp != 0) 
#line 1734 
                t3_fatal_err(adapter); else ;
  
#line 1735 
  return;
}


#line 1740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void mps_intr_handler(struct adapter *adapter)
{
  int tmp;
  
#line 1742 
  struct intr_info const mps_intr_info[2U] = {{.mask = 511U, .msg = "MPS parity error", .stat_idx = (short)(-1), .fatal = (unsigned short)1U}, {.mask = 0U, .msg = (char const *)0, .stat_idx = (short)0, .fatal = (unsigned short)0}};
  
#line 1747 
  tmp = t3_handle_intr_status(adapter,1568U,4294967295U,(struct intr_info const *)(& mps_intr_info),(unsigned long *)0UL);
  
#line 1747 
  if (tmp != 0) 
#line 1749 
                t3_fatal_err(adapter); else ;
  
#line 1750 
  return;
}


#line 1757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void mc7_intr_handler(struct mc7 *mc7)
{
  
#line 1759 
  struct adapter *adapter = mc7->adapter;
  
#line 1760 
  u32 cause = t3_read_reg(adapter,mc7->offset + 380U);
  
#line 1762 
  if ((cause & 1U) != 0U) {
    u32 tmp_0;
    u32 tmp_1;
    u32 tmp_2;
    u32 tmp_3;
    
#line 1763 
    mc7->stats.corr_err += 1UL;
    
#line 1764 
    tmp_0 = t3_read_reg(adapter,mc7->offset + 320U);
    
#line 1764 
    tmp_1 = t3_read_reg(adapter,mc7->offset + 316U);
    
#line 1764 
    tmp_2 = t3_read_reg(adapter,mc7->offset + 312U);
    
#line 1764 
    tmp_3 = t3_read_reg(adapter,mc7->offset + 308U);
    
#line 1764 
    ;
    
#line 1764 
    ;
    
#line 1764 
    dev_warn((struct device const *)(& (adapter->pdev)->dev),"%s MC7 correctable error at addr 0x%x, ",mc7->name,tmp_3,tmp_2,tmp_1,tmp_0);
  }
  else ;
  
#line 1772 
  if ((cause & 2U) != 0U) {
    u32 tmp_4;
    u32 tmp_5;
    u32 tmp_6;
    u32 tmp_7;
    
#line 1773 
    mc7->stats.uncorr_err += 1UL;
    
#line 1774 
    tmp_4 = t3_read_reg(adapter,mc7->offset + 336U);
    
#line 1774 
    tmp_5 = t3_read_reg(adapter,mc7->offset + 332U);
    
#line 1774 
    tmp_6 = t3_read_reg(adapter,mc7->offset + 328U);
    
#line 1774 
    tmp_7 = t3_read_reg(adapter,mc7->offset + 324U);
    
#line 1774 
    ;
    
#line 1774 
    ;
    
#line 1774 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"%s MC7 uncorrectable error at addr 0x%x, ",mc7->name,tmp_7,tmp_6,tmp_5,tmp_4);
  }
  else ;
  
#line 1782 
  if (((cause >> 2) & 32767U) != 0U) {
    
#line 1783 
    mc7->stats.parity_err += 1UL;
    
#line 1784 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"%s MC7 parity error 0x%x\n",mc7->name,(cause >> 2) & 32767U);
  }
  else ;
  
#line 1788 
  if ((cause & 131072U) != 0U) {
    
#line 1789 
    u32 addr = 0U;
    
#line 1791 
    if (adapter->params.rev != 0U) 
#line 1792 
                                   addr = t3_read_reg(adapter,mc7->offset + 300U); else ;
    
#line 1794 
    mc7->stats.addr_err += 1UL;
    
#line 1795 
    dev_alert((struct device const *)(& (adapter->pdev)->dev),"%s MC7 address error: 0x%x\n",mc7->name,addr);
  }
  else ;
  
#line 1799 
  if ((cause & 262142U) != 0U) 
#line 1800 
                               t3_fatal_err(adapter); else ;
  
#line 1802 
  t3_write_reg(adapter,mc7->offset + 380U,cause);
  
#line 1803 
  return;
}


#line 1810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int mac_intr_handler(struct adapter *adap, unsigned int idx)
{
  int __retres;
  struct port_info *tmp;
  u32 tmp_0;
  
#line 1812 
  tmp = adap2pinfo(adap,(int)idx);
  
#line 1812 
  struct cmac *mac = & tmp->mac;
  
#line 1819 
  tmp_0 = t3_read_reg(adap,mac->offset + 2264U);
  
#line 1819 
  u32 cause = tmp_0 & 4294963199U;
  
#line 1822 
  if ((cause & 917504U) != 0U) {
    
#line 1823 
    mac->stats.tx_fifo_parity_err += 1UL;
    
#line 1824 
    dev_alert((struct device const *)(& (adap->pdev)->dev),"port%d: MAC TX FIFO parity error\n",idx);
  }
  else ;
  
#line 1826 
  if ((cause & 114688U) != 0U) {
    
#line 1827 
    mac->stats.rx_fifo_parity_err += 1UL;
    
#line 1828 
    dev_alert((struct device const *)(& (adap->pdev)->dev),"port%d: MAC RX FIFO parity error\n",idx);
  }
  else ;
  
#line 1830 
  if ((cause & 8192U) != 0U) 
#line 1831 
                             mac->stats.tx_fifo_urun += 1UL; else ;
  
#line 1832 
  if ((cause & 4096U) != 0U) 
#line 1833 
                             mac->stats.rx_fifo_ovfl += 1UL; else ;
  
#line 1834 
  if ((cause & 240U) != 0U) 
#line 1835 
                            mac->stats.serdes_signal_loss += 1UL; else ;
  
#line 1836 
  if ((cause & 8U) != 0U) 
#line 1837 
                          mac->stats.xaui_pcs_ctc_err += 1UL; else ;
  
#line 1838 
  if ((cause & 4U) != 0U) 
#line 1839 
                          mac->stats.xaui_pcs_align_change += 1UL; else ;
  
#line 1840 
  if ((cause & 1U) != 0U) {
    
#line 1841 
    t3_set_reg_field(adap,mac->offset + 2260U,1U,0U);
    
#line 1844 
    mac->stats.link_faults += 1UL;
    
#line 1846 
    t3_os_link_fault_handler(adap,(int)idx);
  }
  else ;
  
#line 1849 
  if ((cause & 1032192U) != 0U) 
#line 1850 
                                t3_fatal_err(adap); else ;
  
#line 1852 
  t3_write_reg(adap,mac->offset + 2264U,cause);
  
#line 1853 
  __retres = cause != 0U;
  
#line 1853 
  return __retres;
}


#line 1859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_phy_intr_handler(struct adapter *adapter)
{
  int __retres;
  u32 i;
  
#line 1861 
  u32 cause = t3_read_reg(adapter,220U);
  
#line 1863 
  i = 0U;
  
#line 1863 
  goto ldv_48062;
  ldv_48061: 
#line 1864 
  ;
  {
    
#line 1864 
    struct port_info *p = adap2pinfo(adapter,(int)i);
    
#line 1866 
    if ((p->phy.caps & 16777216U) == 0U) 
#line 1867 
                                         goto ldv_48059; else ;
    
#line 1869 
    if (((unsigned int)(1 << (int)(adapter->params.info)->gpio_intr[i]) & cause) != 0U) {
      int tmp_1;
      
#line 1870 
      tmp_1 = (*((p->phy.ops)->intr_handler))(& p->phy);
      
#line 1870 
      int phy_cause = tmp_1;
      
#line 1872 
      if ((phy_cause & 1) != 0) 
#line 1873 
                                t3_link_changed(adapter,(int)i); else ;
      
#line 1874 
      if ((phy_cause & 2) != 0) 
#line 1875 
                                p->phy.fifo_errors += 1UL; else ;
      
#line 1876 
      if ((phy_cause & 4) != 0) 
#line 1877 
                                t3_os_phymod_changed(adapter,(int)i); else ;
    }
    else ;
  }
  ldv_48059: 
#line 1880 
  ;
  
#line 1863 
  i += 1U;
  ldv_48062: 
#line 1864 
  ;
  
#line 1863 
  if (adapter->params.nports > i) 
#line 1865 
                                  goto ldv_48061; else 
#line 1868 
                                                       goto ldv_48063;
  ldv_48063: 
#line 1869 
  ;
  
#line 1881 
  t3_write_reg(adapter,220U,cause);
  
#line 1882 
  __retres = 0;
  
#line 1882 
  return __retres;
}


#line 1888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_slow_intr_handler(struct adapter *adapter)
{
  int __retres;
  
#line 1890 
  u32 cause = t3_read_reg(adapter,1764U);
  
#line 1892 
  cause = adapter->slow_intr_mask & cause;
  
#line 1893 
  if (cause == 0U) {
    
#line 1894 
    __retres = 0;
    
#line 1894 
    goto return_label;
  }
  else ;
  
#line 1895 
  if ((cause & 2U) != 0U) {
    unsigned int tmp_0;
    
#line 1896 
    tmp_0 = is_pcie((struct adapter const *)adapter);
    
#line 1896 
    if (tmp_0 != 0U) 
#line 1897 
                     pcie_intr_handler(adapter); else 
#line 1899 
                                                      pci_intr_handler(adapter);
  }
  else ;
  
#line 1901 
  if ((cause & 1U) != 0U) 
#line 1902 
                          t3_sge_err_intr_handler(adapter); else ;
  
#line 1903 
  if ((cause & 4U) != 0U) 
#line 1904 
                          mc7_intr_handler(& adapter->pmrx); else ;
  
#line 1905 
  if ((cause & 8U) != 0U) 
#line 1906 
                          mc7_intr_handler(& adapter->pmtx); else ;
  
#line 1907 
  if ((cause & 16U) != 0U) 
#line 1908 
                           mc7_intr_handler(& adapter->cm); else ;
  
#line 1909 
  if ((cause & 32U) != 0U) 
#line 1910 
                           cim_intr_handler(adapter); else ;
  
#line 1911 
  if ((cause & 64U) != 0U) 
#line 1912 
                           tp_intr_handler(adapter); else ;
  
#line 1913 
  if ((cause & 128U) != 0U) 
#line 1914 
                            ulprx_intr_handler(adapter); else ;
  
#line 1915 
  if ((cause & 256U) != 0U) 
#line 1916 
                            ulptx_intr_handler(adapter); else ;
  
#line 1917 
  if ((cause & 512U) != 0U) 
#line 1918 
                            pmrx_intr_handler(adapter); else ;
  
#line 1919 
  if ((cause & 1024U) != 0U) 
#line 1920 
                             pmtx_intr_handler(adapter); else ;
  
#line 1921 
  if ((cause & 4096U) != 0U) 
#line 1922 
                             cplsw_intr_handler(adapter); else ;
  
#line 1923 
  if ((cause & 2048U) != 0U) 
#line 1924 
                             mps_intr_handler(adapter); else ;
  
#line 1925 
  if ((cause & 262144U) != 0U) 
#line 1926 
                               t3_mc5_intr_handler(& adapter->mc5); else ;
  
#line 1927 
  if ((cause & 524288U) != 0U) 
#line 1928 
                               mac_intr_handler(adapter,0U); else ;
  
#line 1929 
  if ((cause & 1048576U) != 0U) 
#line 1930 
                                mac_intr_handler(adapter,1U); else ;
  
#line 1931 
  if ((cause & 8388608U) != 0U) 
#line 1932 
                                t3_os_ext_intr_handler(adapter); else ;
  
#line 1935 
  t3_write_reg(adapter,1764U,cause);
  
#line 1936 
  t3_read_reg(adapter,1764U);
  
#line 1937 
  __retres = 1;
  return_label: 
#line 1937 
                return __retres;
}


#line 1940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static unsigned int calc_gpio_intr(struct adapter *adap)
{
  unsigned int i;
  struct port_info *tmp;
  
#line 1942 
  unsigned int gpi_intr = 0U;
  
#line 1944 
  i = 0U;
  
#line 1944 
  goto ldv_48074;
  ldv_48073: 
#line 1945 
  ;
  
#line 1945 
  tmp = adap2pinfo(adap,(int)i);
  
#line 1945 
  ;
  
#line 1945 
  if ((tmp->phy.caps & 16777216U) != 0U) {
    
#line 1945 
    if ((unsigned int)(adap->params.info)->gpio_intr[i] != 0U) 
#line 1947 
                                                               gpi_intr = (unsigned int)(1 << (int)(adap->params.info)->gpio_intr[i]) | gpi_intr; else ;
  }
  else ;
  
#line 1944 
  i += 1U;
  ldv_48074: 
#line 1945 
  ;
  
#line 1944 
  if (adap->params.nports > i) 
#line 1946 
                               goto ldv_48073; else 
#line 1949 
                                                    goto ldv_48075;
  ldv_48075: 
#line 1950 
  ;
  
#line 1948 
  return gpi_intr;
}


#line 1959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_intr_enable(struct adapter *adapter)
{
  int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  
#line 1961 
  struct addr_val_pair const intr_en_avp[10U] = {{.reg_addr = 96U, .val = 4294954232U}, {.reg_addr = 376U, .val = 262143U}, {.reg_addr = 504U, .val = 262143U}, {.reg_addr = 632U, .val = 262143U}, {.reg_addr = 1856U, .val = 491968U}, {.reg_addr = 1284U, .val = 255U}, {.reg_addr = 1528U, .val = 524287U}, {.reg_addr = 1496U, .val = 524287U}, {.reg_addr = 664U, .val = 536748023U}, {.reg_addr = 1564U, .val = 511U}};
  
#line 1976 
  adapter->slow_intr_mask = 10231807U;
  
#line 1978 
  t3_write_regs(adapter,(struct addr_val_pair const *)(& intr_en_avp),10,0U);
  
#line 1980 
  if (adapter->params.rev > 3U) 
#line 1980 
                                tmp = 46137343; else 
#line 1980 
                                                     tmp = 62914559;
  
#line 1979 
  ;
  
#line 1979 
  t3_write_reg(adapter,1136U,(unsigned int)tmp);
  
#line 1982 
  if (adapter->params.rev != 0U) {
    
#line 1983 
    t3_write_reg(adapter,1616U,63U);
    
#line 1985 
    t3_write_reg(adapter,1412U,255U);
  }
  else {
    
#line 1989 
    t3_write_reg(adapter,1616U,47U);
    
#line 1990 
    t3_write_reg(adapter,1412U,252U);
  }
  
#line 1993 
  tmp_0 = calc_gpio_intr(adapter);
  
#line 1993 
  ;
  
#line 1993 
  t3_write_reg(adapter,216U,tmp_0);
  
#line 1995 
  tmp_1 = is_pcie((struct adapter const *)adapter);
  
#line 1995 
  if (tmp_1 != 0U) 
#line 1996 
                   t3_write_reg(adapter,128U,8359872U); else 
#line 1998 
                                                             t3_write_reg(adapter,128U,4194303U);
  
#line 1999 
  t3_write_reg(adapter,1760U,adapter->slow_intr_mask);
  
#line 2000 
  t3_read_reg(adapter,1760U);
  
#line 2001 
  return;
}


#line 2010  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_intr_disable(struct adapter *adapter)
{
  
#line 2012 
  t3_write_reg(adapter,1760U,0U);
  
#line 2013 
  t3_read_reg(adapter,1760U);
  
#line 2014 
  adapter->slow_intr_mask = 0U;
  
#line 2015 
  return;
}


#line 2023  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_intr_clear(struct adapter *adapter)
{
  unsigned int i;
  unsigned int tmp;
  
#line 2025 
  unsigned int const cause_reg_addr[16U] = {92U, 76U, 132U, 380U, 508U, 636U, 668U, 1140U, 1860U, 1288U, 1416U, 1620U, 1532U, 1500U, 1568U, 220U};
  
#line 2046 
  i = 0U;
  
#line 2046 
  goto ldv_48092;
  ldv_48091: 
#line 2047 
  ;
  
#line 2047 
  t3_port_intr_clear(adapter,(int)i);
  
#line 2046 
  i += 1U;
  ldv_48092: 
#line 2047 
  ;
  
#line 2046 
  if (adapter->params.nports > i) 
#line 2048 
                                  goto ldv_48091; else 
#line 2051 
                                                       goto ldv_48093;
  ldv_48093: 
#line 2052 
  ;
  
#line 2049 
  i = 0U;
  
#line 2049 
  goto ldv_48098;
  ldv_48097: 
#line 2050 
  ;
  
#line 2050 
  t3_write_reg(adapter,cause_reg_addr[i],4294967295U);
  
#line 2049 
  i += 1U;
  ldv_48098: 
#line 2050 
  ;
  
#line 2049 
  if (i <= 15U) 
#line 2051 
                goto ldv_48097; else 
#line 2054 
                                     goto ldv_48099;
  ldv_48099: 
#line 2055 
  ;
  
#line 2052 
  tmp = is_pcie((struct adapter const *)adapter);
  
#line 2052 
  if (tmp != 0U) 
#line 2053 
                 t3_write_reg(adapter,164U,4294967295U); else ;
  
#line 2054 
  t3_write_reg(adapter,1764U,4294967295U);
  
#line 2055 
  t3_read_reg(adapter,1764U);
  
#line 2056 
  return;
}


#line 2058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_xgm_intr_enable(struct adapter *adapter, int idx)
{
  
#line 2060 
  struct port_info *pi = adap2pinfo(adapter,idx);
  
#line 2062 
  t3_write_reg(adapter,pi->mac.offset + 2164U,512U);
  
#line 2063 
  return;
}


#line 2066  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_xgm_intr_disable(struct adapter *adapter, int idx)
{
  
#line 2068 
  struct port_info *pi = adap2pinfo(adapter,idx);
  
#line 2070 
  t3_write_reg(adapter,pi->mac.offset + 2168U,2047U);
  
#line 2071 
  return;
}


#line 2082  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_port_intr_enable(struct adapter *adapter, int idx)
{
  struct port_info *tmp;
  
#line 2084 
  tmp = adap2pinfo(adapter,idx);
  
#line 2084 
  struct cphy *phy = & tmp->phy;
  
#line 2086 
  t3_write_reg(adapter,(unsigned int)(idx * 512 + 2260),1040384U);
  
#line 2087 
  t3_read_reg(adapter,(unsigned int)(idx * 512 + 2260));
  
#line 2088 
  (*((phy->ops)->intr_enable))(phy);
  
#line 2089 
  return;
}


#line 2099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_port_intr_disable(struct adapter *adapter, int idx)
{
  struct port_info *tmp;
  
#line 2101 
  tmp = adap2pinfo(adapter,idx);
  
#line 2101 
  struct cphy *phy = & tmp->phy;
  
#line 2103 
  t3_write_reg(adapter,(unsigned int)(idx * 512 + 2260),0U);
  
#line 2104 
  t3_read_reg(adapter,(unsigned int)(idx * 512 + 2260));
  
#line 2105 
  (*((phy->ops)->intr_disable))(phy);
  
#line 2106 
  return;
}


#line 2116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void t3_port_intr_clear(struct adapter *adapter, int idx)
{
  struct port_info *tmp;
  
#line 2118 
  tmp = adap2pinfo(adapter,idx);
  
#line 2118 
  struct cphy *phy = & tmp->phy;
  
#line 2120 
  t3_write_reg(adapter,(unsigned int)(idx * 512 + 2264),4294967295U);
  
#line 2121 
  t3_read_reg(adapter,(unsigned int)(idx * 512 + 2264));
  
#line 2122 
  (*((phy->ops)->intr_clear))(phy);
  
#line 2123 
  return;
}


#line 2136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_sge_write_context(struct adapter *adapter, unsigned int id, unsigned int type)
{
  int tmp;
  
#line 2139 
  if (type == 262144U) {
    
#line 2146 
    t3_write_reg(adapter,32U,4294967295U);
    
#line 2147 
    t3_write_reg(adapter,36U,4294967295U);
    
#line 2148 
    t3_write_reg(adapter,40U,402653183U);
    
#line 2149 
    t3_write_reg(adapter,44U,4294967295U);
  }
  else {
    
#line 2151 
    t3_write_reg(adapter,32U,4294967295U);
    
#line 2152 
    t3_write_reg(adapter,36U,4294967295U);
    
#line 2153 
    t3_write_reg(adapter,40U,4294967295U);
    
#line 2154 
    t3_write_reg(adapter,44U,4294967295U);
  }
  
#line 2156 
  t3_write_reg(adapter,12U,(type | id) | 268435456U);
  
#line 2158 
  tmp = t3_wait_op_done(adapter,12,134217728U,0,100,1);
  
#line 2158 
  return tmp;
}


#line 2173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int clear_sge_ctxt(struct adapter *adap, unsigned int id, unsigned int type)
{
  int tmp;
  
#line 2176 
  t3_write_reg(adap,16U,0U);
  
#line 2177 
  t3_write_reg(adap,20U,0U);
  
#line 2178 
  t3_write_reg(adap,24U,0U);
  
#line 2179 
  t3_write_reg(adap,28U,0U);
  
#line 2180 
  t3_write_reg(adap,32U,4294967295U);
  
#line 2181 
  t3_write_reg(adap,36U,4294967295U);
  
#line 2182 
  t3_write_reg(adap,40U,4294967295U);
  
#line 2183 
  t3_write_reg(adap,44U,4294967295U);
  
#line 2184 
  t3_write_reg(adap,12U,(type | id) | 268435456U);
  
#line 2186 
  tmp = t3_wait_op_done(adap,12,134217728U,0,100,1);
  
#line 2186 
  return tmp;
}


#line 2207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_init_ecntxt(struct adapter *adapter, unsigned int id, int gts_enable, enum sge_context_type type, int respq, u64 base_addr, unsigned int size, unsigned int token, int gen, unsigned int cidx)
{
  int __retres;
  int tmp;
  u32 tmp_0;
  int tmp_1;
  
#line 2212 
  if (type == (unsigned int)SGE_CNTXT_OFLD) 
#line 2212 
                                            tmp = 0; else 
#line 2212 
                                                          tmp = 16;
  
#line 2212 
  unsigned int credits = (unsigned int)tmp;
  
#line 2214 
  if ((base_addr & 4095ULL) != 0ULL) {
    
#line 2215 
    __retres = -22;
    
#line 2215 
    goto return_label;
  }
  else ;
  
#line 2216 
  tmp_0 = t3_read_reg(adapter,12U);
  
#line 2216 
  if ((tmp_0 & 134217728U) != 0U) {
    
#line 2217 
    __retres = -16;
    
#line 2217 
    goto return_label;
  }
  else ;
  
#line 2219 
  base_addr >>= 12;
  
#line 2220 
  t3_write_reg(adapter,16U,((cidx << 16) | credits) | (unsigned int)(gts_enable << 15));
  
#line 2222 
  t3_write_reg(adapter,20U,((unsigned int)base_addr << 16U) | size);
  
#line 2224 
  base_addr >>= 16;
  
#line 2225 
  t3_write_reg(adapter,24U,(unsigned int)base_addr);
  
#line 2226 
  base_addr >>= 32;
  
#line 2227 
  t3_write_reg(adapter,28U,((((((unsigned int)base_addr & 15U) | (unsigned int)(respq << 4)) | ((unsigned int)type << 7)) | (unsigned int)(gen << 10)) | (token << 11)) | 2147483648U);
  
#line 2231 
  tmp_1 = t3_sge_write_context(adapter,id,131072U);
  
#line 2231 
  __retres = tmp_1;
  return_label: 
#line 2231 
                return __retres;
}


#line 2250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_init_flcntxt(struct adapter *adapter, unsigned int id, int gts_enable, u64 base_addr, unsigned int size, unsigned int bsize, unsigned int cong_thres, int gen, unsigned int cidx)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2255 
  if ((base_addr & 4095ULL) != 0ULL) {
    
#line 2256 
    __retres = -22;
    
#line 2256 
    goto return_label;
  }
  else ;
  
#line 2257 
  tmp = t3_read_reg(adapter,12U);
  
#line 2257 
  if ((tmp & 134217728U) != 0U) {
    
#line 2258 
    __retres = -16;
    
#line 2258 
    goto return_label;
  }
  else ;
  
#line 2260 
  base_addr >>= 12;
  
#line 2261 
  t3_write_reg(adapter,16U,(unsigned int)base_addr);
  
#line 2262 
  base_addr >>= 32;
  
#line 2263 
  t3_write_reg(adapter,20U,(unsigned int)base_addr | (cidx << 20));
  
#line 2266 
  t3_write_reg(adapter,24U,(((size << 4) | (unsigned int)(gen << 20)) | (cidx >> 12)) | (bsize << 21));
  
#line 2269 
  t3_write_reg(adapter,28U,((bsize >> 11) | (cong_thres << 21)) | (unsigned int)(gts_enable << 31));
  
#line 2272 
  tmp_0 = t3_sge_write_context(adapter,id,65536U);
  
#line 2272 
  __retres = tmp_0;
  return_label: 
#line 2272 
                return __retres;
}


#line 2290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_init_rspcntxt(struct adapter *adapter, unsigned int id, int irq_vec_idx, u64 base_addr, unsigned int size, unsigned int fl_thres, int gen, unsigned int cidx)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2294 
  unsigned int intr = 0U;
  
#line 2296 
  if ((base_addr & 4095ULL) != 0ULL) {
    
#line 2297 
    __retres = -22;
    
#line 2297 
    goto return_label;
  }
  else ;
  
#line 2298 
  tmp = t3_read_reg(adapter,12U);
  
#line 2298 
  if ((tmp & 134217728U) != 0U) {
    
#line 2299 
    __retres = -16;
    
#line 2299 
    goto return_label;
  }
  else ;
  
#line 2301 
  base_addr >>= 12;
  
#line 2302 
  t3_write_reg(adapter,16U,(size << 16) | cidx);
  
#line 2304 
  t3_write_reg(adapter,20U,(unsigned int)base_addr);
  
#line 2305 
  base_addr >>= 32;
  
#line 2306 
  if (irq_vec_idx >= 0) 
#line 2307 
                        intr = (unsigned int)(irq_vec_idx << 20) | 67108864U; else ;
  
#line 2308 
  t3_write_reg(adapter,24U,((unsigned int)base_addr | intr) | (unsigned int)(gen << 28));
  
#line 2310 
  t3_write_reg(adapter,28U,fl_thres);
  
#line 2311 
  tmp_0 = t3_sge_write_context(adapter,id,262144U);
  
#line 2311 
  __retres = tmp_0;
  return_label: 
#line 2311 
                return __retres;
}


#line 2329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_init_cqcntxt(struct adapter *adapter, unsigned int id, u64 base_addr, unsigned int size, int rspq, int ovfl_mode, unsigned int credits, unsigned int credit_thres)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2333 
  if ((base_addr & 4095ULL) != 0ULL) {
    
#line 2334 
    __retres = -22;
    
#line 2334 
    goto return_label;
  }
  else ;
  
#line 2335 
  tmp = t3_read_reg(adapter,12U);
  
#line 2335 
  if ((tmp & 134217728U) != 0U) {
    
#line 2336 
    __retres = -16;
    
#line 2336 
    goto return_label;
  }
  else ;
  
#line 2338 
  base_addr >>= 12;
  
#line 2339 
  t3_write_reg(adapter,16U,size << 16);
  
#line 2340 
  t3_write_reg(adapter,20U,(unsigned int)base_addr);
  
#line 2341 
  base_addr >>= 32;
  
#line 2342 
  t3_write_reg(adapter,24U,((((unsigned int)base_addr | (unsigned int)(rspq << 20)) | (unsigned int)(ovfl_mode << 31)) | (unsigned int)(ovfl_mode << 30)) | 536870912U);
  
#line 2346 
  t3_write_reg(adapter,28U,(credit_thres << 16) | credits);
  
#line 2348 
  tmp_0 = t3_sge_write_context(adapter,id,524288U);
  
#line 2348 
  __retres = tmp_0;
  return_label: 
#line 2348 
                return __retres;
}


#line 2360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_enable_ecntxt(struct adapter *adapter, unsigned int id, int enable)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2362 
  tmp = t3_read_reg(adapter,12U);
  
#line 2362 
  if ((tmp & 134217728U) != 0U) {
    
#line 2363 
    __retres = -16;
    
#line 2363 
    goto return_label;
  }
  else ;
  
#line 2365 
  t3_write_reg(adapter,32U,0U);
  
#line 2366 
  t3_write_reg(adapter,36U,0U);
  
#line 2367 
  t3_write_reg(adapter,40U,0U);
  
#line 2368 
  t3_write_reg(adapter,44U,2147483648U);
  
#line 2369 
  t3_write_reg(adapter,28U,(unsigned int)(enable << 31));
  
#line 2370 
  t3_write_reg(adapter,12U,id | 268566528U);
  
#line 2372 
  tmp_0 = t3_wait_op_done(adapter,12,134217728U,0,100,1);
  
#line 2372 
  __retres = tmp_0;
  return_label: 
#line 2372 
                return __retres;
}


#line 2384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_disable_fl(struct adapter *adapter, unsigned int id)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2386 
  tmp = t3_read_reg(adapter,12U);
  
#line 2386 
  if ((tmp & 134217728U) != 0U) {
    
#line 2387 
    __retres = -16;
    
#line 2387 
    goto return_label;
  }
  else ;
  
#line 2389 
  t3_write_reg(adapter,32U,0U);
  
#line 2390 
  t3_write_reg(adapter,36U,0U);
  
#line 2391 
  t3_write_reg(adapter,40U,1048560U);
  
#line 2392 
  t3_write_reg(adapter,44U,0U);
  
#line 2393 
  t3_write_reg(adapter,24U,0U);
  
#line 2394 
  t3_write_reg(adapter,12U,id | 268500992U);
  
#line 2396 
  tmp_0 = t3_wait_op_done(adapter,12,134217728U,0,100,1);
  
#line 2396 
  __retres = tmp_0;
  return_label: 
#line 2396 
                return __retres;
}


#line 2408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_disable_rspcntxt(struct adapter *adapter, unsigned int id)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2410 
  tmp = t3_read_reg(adapter,12U);
  
#line 2410 
  if ((tmp & 134217728U) != 0U) {
    
#line 2411 
    __retres = -16;
    
#line 2411 
    goto return_label;
  }
  else ;
  
#line 2413 
  t3_write_reg(adapter,32U,4294901760U);
  
#line 2414 
  t3_write_reg(adapter,36U,0U);
  
#line 2415 
  t3_write_reg(adapter,40U,0U);
  
#line 2416 
  t3_write_reg(adapter,44U,0U);
  
#line 2417 
  t3_write_reg(adapter,16U,0U);
  
#line 2418 
  t3_write_reg(adapter,12U,id | 268697600U);
  
#line 2420 
  tmp_0 = t3_wait_op_done(adapter,12,134217728U,0,100,1);
  
#line 2420 
  __retres = tmp_0;
  return_label: 
#line 2420 
                return __retres;
}


#line 2432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_disable_cqcntxt(struct adapter *adapter, unsigned int id)
{
  int __retres;
  u32 tmp;
  int tmp_0;
  
#line 2434 
  tmp = t3_read_reg(adapter,12U);
  
#line 2434 
  if ((tmp & 134217728U) != 0U) {
    
#line 2435 
    __retres = -16;
    
#line 2435 
    goto return_label;
  }
  else ;
  
#line 2437 
  t3_write_reg(adapter,32U,4294901760U);
  
#line 2438 
  t3_write_reg(adapter,36U,0U);
  
#line 2439 
  t3_write_reg(adapter,40U,0U);
  
#line 2440 
  t3_write_reg(adapter,44U,0U);
  
#line 2441 
  t3_write_reg(adapter,16U,0U);
  
#line 2442 
  t3_write_reg(adapter,12U,id | 268959744U);
  
#line 2444 
  tmp_0 = t3_wait_op_done(adapter,12,134217728U,0,100,1);
  
#line 2444 
  __retres = tmp_0;
  return_label: 
#line 2444 
                return __retres;
}


#line 2458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_sge_cqcntxt_op(struct adapter *adapter, unsigned int id, unsigned int op, unsigned int credits)
{
  int __retres;
  u32 val;
  u32 tmp;
  int tmp_0;
  
#line 2463 
  tmp = t3_read_reg(adapter,12U);
  
#line 2463 
  if ((tmp & 134217728U) != 0U) {
    
#line 2464 
    __retres = -16;
    
#line 2464 
    goto return_label;
  }
  else ;
  
#line 2466 
  t3_write_reg(adapter,16U,credits << 16);
  
#line 2467 
  t3_write_reg(adapter,12U,((op << 28) | id) | 524288U);
  
#line 2469 
  tmp_0 = t3_wait_op_done_val(adapter,12,134217728U,0,100,1,& val);
  
#line 2469 
  if (tmp_0 != 0) {
    
#line 2471 
    __retres = -5;
    
#line 2471 
    goto return_label;
  }
  else ;
  
#line 2473 
  if (op + 4294967294U <= 4U) {
    int tmp_1;
    u32 tmp_2;
    
#line 2474 
    if (adapter->params.rev != 0U) {
      
#line 2475 
      __retres = (int)val & 65535;
      
#line 2475 
      goto return_label;
    }
    else ;
    
#line 2477 
    t3_write_reg(adapter,12U,id | 524288U);
    
#line 2479 
    tmp_1 = t3_wait_op_done(adapter,12,134217728U,0,100,1);
    
#line 2479 
    if (tmp_1 != 0) {
      
#line 2482 
      __retres = -5;
      
#line 2482 
      goto return_label;
    }
    else ;
    
#line 2483 
    tmp_2 = t3_read_reg(adapter,16U);
    
#line 2483 
    __retres = (int)tmp_2 & 65535;
    
#line 2483 
    goto return_label;
  }
  else ;
  
#line 2485 
  __retres = 0;
  return_label: 
#line 2485 
                return __retres;
}


#line 2500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_config_rss(struct adapter *adapter, unsigned int rss_config, u8 const *cpus, u16 const *rspq)
{
  int i;
  int j;
  
#line 2503 
  int cpu_idx = 0;
  
#line 2503 
  int q_idx = 0;
  
#line 2505 
  if (cpus != (u8 const *)0U) {
    
#line 2506 
    i = 0;
    
#line 2506 
    goto ldv_48219;
    ldv_48218: 
#line 2507 
    ;
    {
      int tmp;
      
#line 2507 
      u32 val = (unsigned int)(i << 16);
      
#line 2509 
      j = 0;
      
#line 2509 
      goto ldv_48216;
      ldv_48215: 
#line 2510 
      ;
      
#line 2510 
      tmp = cpu_idx;
      
#line 2510 
      cpu_idx += 1;
      
#line 2510 
      val = (unsigned int)(((int)*(cpus + tmp) & 63) << j * 8) | val;
      
#line 2511 
      if ((unsigned int)*(cpus + cpu_idx) == 255U) 
#line 2512 
                                                   cpu_idx = 0; else ;
      
#line 2509 
      j += 1;
      ldv_48216: 
#line 2510 
      ;
      
#line 2509 
      if (j <= 1) 
#line 2511 
                  goto ldv_48215; else 
#line 2514 
                                       goto ldv_48217;
      ldv_48217: 
#line 2515 
      ;
      
#line 2514 
      t3_write_reg(adapter,1004U,val);
    }
    
#line 2506 
    i += 1;
    ldv_48219: 
#line 2507 
    ;
    
#line 2506 
    if (i <= 63) 
#line 2508 
                 goto ldv_48218; else 
#line 2511 
                                      goto ldv_48220;
    ldv_48220: 
#line 2512 
    ;
  }
  else ;
  
#line 2517 
  if (rspq != (u16 const *)0U) {
    int tmp_0;
    
#line 2518 
    i = 0;
    
#line 2518 
    goto ldv_48222;
    ldv_48221: 
#line 2519 
    ;
    
#line 2520 
    tmp_0 = q_idx;
    
#line 2520 
    q_idx += 1;
    
#line 2519 
    ;
    
#line 2519 
    ;
    
#line 2519 
    t3_write_reg(adapter,1000U,(unsigned int)((i << 16) | (int)*(rspq + tmp_0)));
    
#line 2521 
    if ((unsigned int)*(rspq + q_idx) == 65535U) 
#line 2522 
                                                 q_idx = 0; else ;
    
#line 2518 
    i += 1;
    ldv_48222: 
#line 2519 
    ;
    
#line 2518 
    if (i <= 63) 
#line 2520 
                 goto ldv_48221; else 
#line 2523 
                                      goto ldv_48223;
    ldv_48223: 
#line 2524 
    ;
  }
  else ;
  
#line 2525 
  t3_write_reg(adapter,1008U,rss_config);
  
#line 2526 
  return;
}


#line 2535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_tp_set_offload_mode(struct adapter *adap, int enable)
{
  int tmp_0;
  
#line 2537 
  tmp_0 = is_offload((struct adapter const *)adap);
  
#line 2537 
  if (tmp_0 != 0) 
#line 2537 
                  goto _LOR;
  else 
    
#line 2537 
    if (enable == 0) {
      int tmp;
      _LOR: { /* sequence */
              
#line 2539 
              if (enable == 0) 
#line 2539 
                               tmp = 16384; else 
#line 2539 
                                                 tmp = 0;
              
#line 2538 
              ;
            }
      
#line 2538 
      t3_set_reg_field(adap,768U,16384U,(unsigned int)tmp);
    }
    else ;
  
#line 2540 
  return;
}


#line 2551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
__inline static unsigned int pm_num_pages(unsigned int mem_size, unsigned int pg_size)
{
  unsigned int __retres;
  
#line 2554 
  unsigned int n = mem_size / pg_size;
  
#line 2556 
  __retres = n - n % 24U;
  
#line 2556 
  return __retres;
}


#line 2571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void partition_mem(struct adapter *adap, struct tp_params const *p)
{
  unsigned int m;
  unsigned int pstructs;
  int tmp_0;
  unsigned int tmp_1;
  
#line 2573 
  unsigned int tids = t3_mc5_size((struct mc5 const *)(& adap->mc5));
  
#line 2574 
  unsigned int timers = 0U;
  
#line 2574 
  unsigned int timers_shift = 22U;
  
#line 2576 
  if (adap->params.rev != 0U) {
    
#line 2577 
    if (tids <= 16384U) {
      
#line 2578 
      timers = 1U;
      
#line 2579 
      timers_shift = 16U;
    }
    else 
      
#line 2580 
      if (tids <= 65536U) {
        
#line 2581 
        timers = 2U;
        
#line 2582 
        timers_shift = 18U;
      }
      else 
        
#line 2583 
        if (tids <= 262144U) {
          
#line 2584 
          timers = 3U;
          
#line 2585 
          timers_shift = 20U;
        }
        else ;
  }
  else ;
  
#line 2589 
  t3_write_reg(adap,796U,p->chan_rx_size | (p->chan_tx_size >> 16));
  
#line 2592 
  t3_write_reg(adap,800U,0U);
  
#line 2593 
  t3_write_reg(adap,820U,p->tx_pg_size);
  
#line 2594 
  t3_write_reg(adap,824U,p->tx_num_pgs);
  
#line 2596 
  tmp_0 = ffs((int)p->tx_pg_size);
  
#line 2595 
  ;
  
#line 2595 
  t3_set_reg_field(adap,876U,983040U,(unsigned int)((tmp_0 + -12) << 16));
  
#line 2598 
  t3_write_reg(adap,808U,0U);
  
#line 2599 
  t3_write_reg(adap,812U,p->rx_pg_size);
  
#line 2600 
  t3_write_reg(adap,816U,p->rx_num_pgs);
  
#line 2602 
  pstructs = p->rx_num_pgs + p->tx_num_pgs;
  
#line 2604 
  pstructs += 48U;
  
#line 2605 
  pstructs -= pstructs % 24U;
  
#line 2606 
  t3_write_reg(adap,1132U,pstructs);
  
#line 2608 
  m = tids * 128U;
  
#line 2609 
  t3_write_reg(adap,88U,m);
  
#line 2609 
  m += 4194304U;
  
#line 2610 
  t3_write_reg(adap,108U,m);
  
#line 2610 
  m += 4194304U;
  
#line 2611 
  t3_write_reg(adap,792U,(timers << 28) | m);
  
#line 2612 
  m = (((p->ntimer_qs + 4294967295U) << timers_shift) + m) + 4194304U;
  
#line 2613 
  t3_write_reg(adap,788U,m);
  
#line 2613 
  m = pstructs * 64U + m;
  
#line 2614 
  t3_write_reg(adap,1128U,m);
  
#line 2614 
  m = (pstructs / 24U) * 64U + m;
  
#line 2615 
  t3_write_reg(adap,1120U,m);
  
#line 2615 
  m = (p->rx_num_pgs / 24U) * 64U + m;
  
#line 2616 
  t3_write_reg(adap,1124U,m);
  
#line 2616 
  m = (p->tx_num_pgs / 24U) * 64U + m;
  
#line 2618 
  m = (m + 4095U) & 4294963200U;
  
#line 2619 
  t3_write_reg(adap,652U,m);
  
#line 2620 
  t3_write_reg(adap,656U,p->cm_size - m);
  
#line 2622 
  tids = ((p->cm_size - m) + 4291821568U) / 3072U + 4294967264U;
  
#line 2623 
  tmp_1 = t3_mc5_size((struct mc5 const *)(& adap->mc5));
  
#line 2623 
  m = ((tmp_1 - adap->params.mc5.nservers) - adap->params.mc5.nfilters) - adap->params.mc5.nroutes;
  
#line 2625 
  if (tids < m) 
#line 2626 
                adap->params.mc5.nservers += m - tids; else ;
  
#line 2627 
  return;
}


#line 2629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
__inline static void tp_wr_indirect(struct adapter *adap, unsigned int addr, u32 val)
{
  
#line 2632 
  t3_write_reg(adap,1088U,addr);
  
#line 2633 
  t3_write_reg(adap,1092U,val);
  
#line 2634 
  return;
}


#line 2636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void tp_config(struct adapter *adap, struct tp_params const *p)
{
  unsigned int tmp;
  
#line 2638 
  t3_write_reg(adap,776U,16824384U);
  
#line 2641 
  t3_write_reg(adap,832U,37750037U);
  
#line 2644 
  t3_write_reg(adap,836U,1343037463U);
  
#line 2648 
  t3_set_reg_field(adap,768U,50331648U,49152U);
  
#line 2650 
  t3_write_reg(adap,1060U,403970068U);
  
#line 2651 
  t3_write_reg(adap,880U,84214021U);
  
#line 2652 
  if (adap->params.rev != 0U) 
#line 2652 
                              tmp = 2048U; else 
#line 2652 
                                                tmp = 8192U;
  
#line 2652 
  ;
  
#line 2652 
  t3_set_reg_field(adap,888U,0U,tmp);
  
#line 2656 
  t3_set_reg_field(adap,840U,8388608U,1075412992U);
  
#line 2660 
  t3_set_reg_field(adap,844U,16U,47104U);
  
#line 2663 
  t3_write_reg(adap,1200U,1080U);
  
#line 2664 
  t3_write_reg(adap,1200U,1000U);
  
#line 2666 
  if (adap->params.rev != 0U) {
    
#line 2667 
    tp_wr_indirect(adap,325U,1U);
    
#line 2668 
    t3_set_reg_field(adap,876U,256U,256U);
    
#line 2670 
    t3_set_reg_field(adap,840U,268435456U,268435456U);
    
#line 2671 
    t3_set_reg_field(adap,876U,0U,1024U);
  }
  else 
#line 2673 
       t3_set_reg_field(adap,876U,0U,512U);
  
#line 2675 
  if (adap->params.rev == 4U) 
#line 2676 
                              t3_set_reg_field(adap,840U,15U,4U); else ;
  
#line 2680 
  t3_write_reg(adap,1068U,0U);
  
#line 2681 
  t3_write_reg(adap,1072U,0U);
  
#line 2682 
  t3_write_reg(adap,1076U,0U);
  
#line 2683 
  t3_write_reg(adap,1080U,4062183424U);
  
#line 2684 
  return;
}


#line 2701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void tp_set_timers(struct adapter *adap, unsigned int core_clk)
{
  int tmp;
  int tmp_0;
  int tmp_1;
  unsigned int tmp_2;
  
#line 2703 
  tmp = ffs((int)(core_clk / 20000U));
  
#line 2703 
  unsigned int tre = (unsigned int)(tmp + -1);
  
#line 2704 
  tmp_0 = ffs((int)(core_clk / 5000U));
  
#line 2704 
  unsigned int dack_re = (unsigned int)(tmp_0 + -1);
  
#line 2705 
  tmp_1 = ffs((int)(core_clk / 1000U));
  
#line 2705 
  unsigned int tstamp_re = (unsigned int)tmp_1;
  
#line 2706 
  unsigned int tps = core_clk >> tre;
  
#line 2708 
  t3_write_reg(adap,912U,((tre << 16) | dack_re) | (tstamp_re << 8));
  
#line 2711 
  t3_write_reg(adap,948U,(core_clk >> dack_re) / 20U);
  
#line 2713 
  t3_write_reg(adap,848U,50462976U);
  
#line 2714 
  t3_write_reg(adap,852U,117835012U);
  
#line 2715 
  t3_write_reg(adap,856U,185207048U);
  
#line 2716 
  t3_write_reg(adap,860U,252579084U);
  
#line 2717 
  t3_write_reg(adap,960U,105875465U);
  
#line 2724 
  if (adap->params.rev == 0U) 
#line 2724 
                              tmp_2 = tps * 2U; else 
#line 2724 
                                                     tmp_2 = 0U;
  
#line 2724 
  ;
  
#line 2724 
  t3_write_reg(adap,916U,tmp_2);
  
#line 2725 
  t3_write_reg(adap,920U,tps / 4U);
  
#line 2726 
  t3_write_reg(adap,924U,tps * 64U);
  
#line 2727 
  t3_write_reg(adap,928U,tps * 5U);
  
#line 2728 
  t3_write_reg(adap,932U,tps * 64U);
  
#line 2729 
  t3_write_reg(adap,936U,tps * 7200U);
  
#line 2730 
  t3_write_reg(adap,940U,tps * 75U);
  
#line 2731 
  t3_write_reg(adap,944U,tps * 3U);
  
#line 2732 
  t3_write_reg(adap,952U,tps * 600U);
  
#line 2733 
  return;
}


#line 2745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int t3_tp_set_coalescing_size(struct adapter *adap, unsigned int size, int psh)
{
  int __retres;
  u32 val;
  
#line 2750 
  if (size > 12288U) {
    
#line 2751 
    __retres = -22;
    
#line 2751 
    goto return_label;
  }
  else ;
  
#line 2753 
  val = t3_read_reg(adap,876U);
  
#line 2754 
  val &= 4294967292U;
  
#line 2756 
  if (size != 0U) {
    unsigned int tmp_0;
    
#line 2757 
    val |= 2U;
    
#line 2758 
    if (psh != 0) 
#line 2759 
                  val |= 1U; else ;
    {
      unsigned int tmp;
      
#line 2760 
      unsigned int _min1 = 12288U;
      
#line 2760 
      unsigned int _min2 = size;
      
#line 2760 
      if (_min1 < _min2) 
#line 2760 
                         tmp = _min1; else 
#line 2760 
                                           tmp = _min2;
      
#line 2760 
      tmp_0 = tmp;
    }
    
#line 2760 
    size = tmp_0;
    
#line 2761 
    t3_write_reg(adap,872U,size | 805306368U);
  }
  else ;
  
#line 2764 
  t3_write_reg(adap,876U,val);
  
#line 2765 
  __retres = 0;
  return_label: 
#line 2765 
                return __retres;
}


#line 2776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void t3_tp_set_max_rxsize(struct adapter *adap, unsigned int size)
{
  
#line 2778 
  t3_write_reg(adap,892U,(size << 16) | size);
  
#line 2780 
  return;
}


#line 2782  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void init_mtus(unsigned short *mtus)
{
  
#line 2789 
  *mtus = (unsigned short)88U;
  
#line 2790 
  *(mtus + 1U) = (unsigned short)88U;
  
#line 2791 
  *(mtus + 2U) = (unsigned short)256U;
  
#line 2792 
  *(mtus + 3U) = (unsigned short)512U;
  
#line 2793 
  *(mtus + 4U) = (unsigned short)576U;
  
#line 2794 
  *(mtus + 5U) = (unsigned short)1024U;
  
#line 2795 
  *(mtus + 6U) = (unsigned short)1280U;
  
#line 2796 
  *(mtus + 7U) = (unsigned short)1492U;
  
#line 2797 
  *(mtus + 8U) = (unsigned short)1500U;
  
#line 2798 
  *(mtus + 9U) = (unsigned short)2002U;
  
#line 2799 
  *(mtus + 10U) = (unsigned short)2048U;
  
#line 2800 
  *(mtus + 11U) = (unsigned short)4096U;
  
#line 2801 
  *(mtus + 12U) = (unsigned short)4352U;
  
#line 2802 
  *(mtus + 13U) = (unsigned short)8192U;
  
#line 2803 
  *(mtus + 14U) = (unsigned short)9000U;
  
#line 2804 
  *(mtus + 15U) = (unsigned short)9600U;
  
#line 2805 
  return;
}


#line 2810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void init_cong_ctrl(unsigned short *a, unsigned short *b)
{
  unsigned short tmp_6;
  unsigned short tmp_5;
  unsigned short tmp_4;
  unsigned short tmp_3;
  unsigned short tmp_2;
  unsigned short tmp_1;
  unsigned short tmp_0;
  unsigned short tmp;
  unsigned short tmp_14;
  unsigned short tmp_13;
  unsigned short tmp_12;
  unsigned short tmp_11;
  unsigned short tmp_10;
  unsigned short tmp_9;
  unsigned short tmp_8;
  unsigned short tmp_7;
  unsigned short tmp_15;
  unsigned short tmp_16;
  unsigned short tmp_19;
  unsigned short tmp_18;
  unsigned short tmp_17;
  unsigned short tmp_23;
  unsigned short tmp_22;
  unsigned short tmp_21;
  unsigned short tmp_20;
  unsigned short tmp_28;
  unsigned short tmp_27;
  unsigned short tmp_26;
  unsigned short tmp_25;
  unsigned short tmp_24;
  unsigned short tmp_29;
  unsigned short tmp_30;
  
#line 2812 
  tmp_6 = (unsigned short)1U;
  
#line 2812 
  *(a + 8U) = tmp_6;
  
#line 2812 
  tmp_5 = tmp_6;
  
#line 2812 
  *(a + 7U) = tmp_5;
  
#line 2812 
  tmp_4 = tmp_5;
  
#line 2812 
  *(a + 6U) = tmp_4;
  
#line 2812 
  tmp_3 = tmp_4;
  
#line 2812 
  *(a + 5U) = tmp_3;
  
#line 2812 
  tmp_2 = tmp_3;
  
#line 2812 
  *(a + 4U) = tmp_2;
  
#line 2812 
  tmp_1 = tmp_2;
  
#line 2812 
  *(a + 3U) = tmp_1;
  
#line 2812 
  tmp_0 = tmp_1;
  
#line 2812 
  *(a + 2U) = tmp_0;
  
#line 2812 
  tmp = tmp_0;
  
#line 2812 
  *(a + 1U) = tmp;
  
#line 2812 
  *a = tmp;
  
#line 2813 
  *(a + 9U) = (unsigned short)2U;
  
#line 2814 
  *(a + 10U) = (unsigned short)3U;
  
#line 2815 
  *(a + 11U) = (unsigned short)4U;
  
#line 2816 
  *(a + 12U) = (unsigned short)5U;
  
#line 2817 
  *(a + 13U) = (unsigned short)6U;
  
#line 2818 
  *(a + 14U) = (unsigned short)7U;
  
#line 2819 
  *(a + 15U) = (unsigned short)8U;
  
#line 2820 
  *(a + 16U) = (unsigned short)9U;
  
#line 2821 
  *(a + 17U) = (unsigned short)10U;
  
#line 2822 
  *(a + 18U) = (unsigned short)14U;
  
#line 2823 
  *(a + 19U) = (unsigned short)17U;
  
#line 2824 
  *(a + 20U) = (unsigned short)21U;
  
#line 2825 
  *(a + 21U) = (unsigned short)25U;
  
#line 2826 
  *(a + 22U) = (unsigned short)30U;
  
#line 2827 
  *(a + 23U) = (unsigned short)35U;
  
#line 2828 
  *(a + 24U) = (unsigned short)45U;
  
#line 2829 
  *(a + 25U) = (unsigned short)60U;
  
#line 2830 
  *(a + 26U) = (unsigned short)80U;
  
#line 2831 
  *(a + 27U) = (unsigned short)100U;
  
#line 2832 
  *(a + 28U) = (unsigned short)200U;
  
#line 2833 
  *(a + 29U) = (unsigned short)300U;
  
#line 2834 
  *(a + 30U) = (unsigned short)400U;
  
#line 2835 
  *(a + 31U) = (unsigned short)500U;
  
#line 2837 
  tmp_14 = (unsigned short)0U;
  
#line 2837 
  *(b + 8U) = tmp_14;
  
#line 2837 
  tmp_13 = tmp_14;
  
#line 2837 
  *(b + 7U) = tmp_13;
  
#line 2837 
  tmp_12 = tmp_13;
  
#line 2837 
  *(b + 6U) = tmp_12;
  
#line 2837 
  tmp_11 = tmp_12;
  
#line 2837 
  *(b + 5U) = tmp_11;
  
#line 2837 
  tmp_10 = tmp_11;
  
#line 2837 
  *(b + 4U) = tmp_10;
  
#line 2837 
  tmp_9 = tmp_10;
  
#line 2837 
  *(b + 3U) = tmp_9;
  
#line 2837 
  tmp_8 = tmp_9;
  
#line 2837 
  *(b + 2U) = tmp_8;
  
#line 2837 
  tmp_7 = tmp_8;
  
#line 2837 
  *(b + 1U) = tmp_7;
  
#line 2837 
  *b = tmp_7;
  
#line 2838 
  tmp_15 = (unsigned short)1U;
  
#line 2838 
  *(b + 10U) = tmp_15;
  
#line 2838 
  *(b + 9U) = tmp_15;
  
#line 2839 
  tmp_16 = (unsigned short)2U;
  
#line 2839 
  *(b + 12U) = tmp_16;
  
#line 2839 
  *(b + 11U) = tmp_16;
  
#line 2840 
  tmp_19 = (unsigned short)3U;
  
#line 2840 
  *(b + 16U) = tmp_19;
  
#line 2840 
  tmp_18 = tmp_19;
  
#line 2840 
  *(b + 15U) = tmp_18;
  
#line 2840 
  tmp_17 = tmp_18;
  
#line 2840 
  *(b + 14U) = tmp_17;
  
#line 2840 
  *(b + 13U) = tmp_17;
  
#line 2841 
  tmp_23 = (unsigned short)4U;
  
#line 2841 
  *(b + 21U) = tmp_23;
  
#line 2841 
  tmp_22 = tmp_23;
  
#line 2841 
  *(b + 20U) = tmp_22;
  
#line 2841 
  tmp_21 = tmp_22;
  
#line 2841 
  *(b + 19U) = tmp_21;
  
#line 2841 
  tmp_20 = tmp_21;
  
#line 2841 
  *(b + 18U) = tmp_20;
  
#line 2841 
  *(b + 17U) = tmp_20;
  
#line 2842 
  tmp_28 = (unsigned short)5U;
  
#line 2842 
  *(b + 27U) = tmp_28;
  
#line 2842 
  tmp_27 = tmp_28;
  
#line 2842 
  *(b + 26U) = tmp_27;
  
#line 2842 
  tmp_26 = tmp_27;
  
#line 2842 
  *(b + 25U) = tmp_26;
  
#line 2842 
  tmp_25 = tmp_26;
  
#line 2842 
  *(b + 24U) = tmp_25;
  
#line 2842 
  tmp_24 = tmp_25;
  
#line 2842 
  *(b + 23U) = tmp_24;
  
#line 2842 
  *(b + 22U) = tmp_24;
  
#line 2843 
  tmp_29 = (unsigned short)6U;
  
#line 2843 
  *(b + 29U) = tmp_29;
  
#line 2843 
  *(b + 28U) = tmp_29;
  
#line 2844 
  tmp_30 = (unsigned short)7U;
  
#line 2844 
  *(b + 31U) = tmp_30;
  
#line 2844 
  *(b + 30U) = tmp_30;
  
#line 2845 
  return;
}


#line 2862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_load_mtus(struct adapter *adap, unsigned short *mtus, unsigned short *alpha, unsigned short *beta, unsigned short mtu_cap)
{
  unsigned int i;
  unsigned int w;
  
#line 2866 
  unsigned int const avg_pkts[32U] = {2U, 6U, 10U, 14U, 20U, 28U, 40U, 56U, 80U, 112U, 160U, 224U, 320U, 448U, 640U, 896U, 1281U, 1792U, 2560U, 3584U, 5120U, 7168U, 10240U, 14336U, 20480U, 28672U, 40960U, 57344U, 81920U, 114688U, 163840U, 229376U};
  
#line 2874 
  i = 0U;
  
#line 2874 
  goto ldv_48302;
  ldv_48301: 
#line 2875 
  ;
  {
    int tmp_0;
    int tmp_1;
    {
      int tmp;
      
#line 2875 
      unsigned short _min1 = *(mtus + i);
      
#line 2875 
      unsigned short _min2 = mtu_cap;
      
#line 2875 
      if ((int)_min1 < (int)_min2) 
#line 2875 
                                   tmp = (int)_min1; else 
#line 2875 
                                                          tmp = (int)_min2;
      
#line 2875 
      tmp_0 = tmp;
    }
    
#line 2875 
    unsigned int mtu = (unsigned int)tmp_0;
    
#line 2876 
    tmp_1 = ffs((int)mtu);
    
#line 2876 
    unsigned int log2 = (unsigned int)tmp_1;
    
#line 2878 
    if (((unsigned int)((1 << log2) >> 2) & mtu) == 0U) 
#line 2879 
                                                        log2 -= 1U; else ;
    
#line 2880 
    t3_write_reg(adap,996U,((i << 24) | (log2 << 16)) | mtu);
    
#line 2883 
    w = 0U;
    
#line 2883 
    goto ldv_48299;
    ldv_48298: 
#line 2884 
    ;
    {
      unsigned int inc;
      unsigned int tmp_3;
      {
        unsigned int tmp_2;
        
#line 2886 
        unsigned int _max1 = ((mtu + 4294967256U) * (unsigned int)*(alpha + w)) / avg_pkts[w];
        
#line 2886 
        unsigned int _max2 = 2U;
        
#line 2886 
        if (_max1 > _max2) 
#line 2886 
                           tmp_2 = _max1; else 
#line 2886 
                                               tmp_2 = _max2;
        
#line 2886 
        tmp_3 = tmp_2;
      }
      
#line 2886 
      inc = tmp_3;
      
#line 2889 
      t3_write_reg(adap,988U,(((i << 21) | (w << 16)) | (unsigned int)((int)*(beta + w) << 13)) | inc);
    }
    
#line 2883 
    w += 1U;
    ldv_48299: 
#line 2884 
    ;
    
#line 2883 
    if (w <= 31U) 
#line 2885 
                  goto ldv_48298; else 
#line 2888 
                                       goto ldv_48300;
    ldv_48300: 
#line 2889 
    ;
  }
  
#line 2874 
  i += 1U;
  ldv_48302: 
#line 2875 
  ;
  
#line 2874 
  if (i <= 15U) 
#line 2876 
                goto ldv_48301; else 
#line 2879 
                                     goto ldv_48303;
  ldv_48303: 
#line 2880 
  ;
  
#line 2881 
  return;
}


#line 2902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_tp_get_mib_stats(struct adapter *adap, struct tp_mib_stats *tps)
{
  
#line 2904 
  t3_read_indirect(adap,1104U,1108U,(u32 *)tps,46U,0U);
  
#line 2905 
  return;
}


#line 2919  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void ulp_config(struct adapter *adap, struct tp_params const *p)
{
  
#line 2921 
  unsigned int m = p->chan_rx_size;
  
#line 2923 
  t3_write_reg(adap,1292U,m);
  
#line 2923 
  t3_write_reg(adap,1296U,(p->chan_rx_size / 8U + m) + 4294967295U);
  
#line 2923 
  m = p->chan_rx_size / 8U + m;
  
#line 2924 
  t3_write_reg(adap,1308U,m);
  
#line 2924 
  t3_write_reg(adap,1312U,(p->chan_rx_size / 8U + m) + 4294967295U);
  
#line 2924 
  m = p->chan_rx_size / 8U + m;
  
#line 2925 
  t3_write_reg(adap,1420U,m);
  
#line 2925 
  t3_write_reg(adap,1424U,(p->chan_rx_size / 4U + m) + 4294967295U);
  
#line 2926 
  t3_write_reg(adap,1324U,m);
  
#line 2926 
  t3_write_reg(adap,1328U,(p->chan_rx_size / 4U + m) + 4294967295U);
  
#line 2926 
  m = p->chan_rx_size / 4U + m;
  
#line 2927 
  t3_write_reg(adap,1332U,m);
  
#line 2927 
  t3_write_reg(adap,1336U,(p->chan_rx_size / 4U + m) + 4294967295U);
  
#line 2927 
  m = p->chan_rx_size / 4U + m;
  
#line 2928 
  t3_write_reg(adap,1428U,m);
  
#line 2928 
  t3_write_reg(adap,1432U,(p->chan_rx_size / 4U + m) + 4294967295U);
  
#line 2929 
  t3_write_reg(adap,1340U,m);
  
#line 2929 
  t3_write_reg(adap,1344U,(p->chan_rx_size / 4U + m) + 4294967295U);
  
#line 2929 
  m = p->chan_rx_size / 4U + m;
  
#line 2930 
  t3_write_reg(adap,1316U,4294967295U);
  
#line 2931 
  return;
}


#line 2940  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_set_proto_sram(struct adapter *adap, u8 const *data)
{
  int __retres;
  int i;
  __u32 tmp_0;
  __be32 const *tmp;
  __u32 tmp_2;
  __be32 const *tmp_1;
  __u32 tmp_4;
  __be32 const *tmp_3;
  __u32 tmp_6;
  __be32 const *tmp_5;
  __u32 tmp_8;
  __be32 const *tmp_7;
  int tmp_9;
  
#line 2943 
  __be32 const *buf = (__be32 const *)data;
  
#line 2945 
  i = 0;
  
#line 2945 
  goto ldv_48320;
  ldv_48319: 
#line 2946 
  ;
  
#line 2946 
  tmp = buf;
  
#line 2946 
  buf += 1;
  
#line 2946 
  ;
  
#line 2946 
  tmp_0 = __fswab32(*tmp);
  
#line 2946 
  ;
  
#line 2946 
  t3_write_reg(adap,1276U,tmp_0);
  
#line 2947 
  tmp_1 = buf;
  
#line 2947 
  buf += 1;
  
#line 2947 
  ;
  
#line 2947 
  tmp_2 = __fswab32(*tmp_1);
  
#line 2947 
  ;
  
#line 2947 
  t3_write_reg(adap,1272U,tmp_2);
  
#line 2948 
  tmp_3 = buf;
  
#line 2948 
  buf += 1;
  
#line 2948 
  ;
  
#line 2948 
  tmp_4 = __fswab32(*tmp_3);
  
#line 2948 
  ;
  
#line 2948 
  t3_write_reg(adap,1268U,tmp_4);
  
#line 2949 
  tmp_5 = buf;
  
#line 2949 
  buf += 1;
  
#line 2949 
  ;
  
#line 2949 
  tmp_6 = __fswab32(*tmp_5);
  
#line 2949 
  ;
  
#line 2949 
  t3_write_reg(adap,1264U,tmp_6);
  
#line 2950 
  tmp_7 = buf;
  
#line 2950 
  buf += 1;
  
#line 2950 
  ;
  
#line 2950 
  tmp_8 = __fswab32(*tmp_7);
  
#line 2950 
  ;
  
#line 2950 
  t3_write_reg(adap,1260U,tmp_8);
  
#line 2952 
  t3_write_reg(adap,1256U,(unsigned int)(i << 1) | -2147483648);
  
#line 2953 
  tmp_9 = t3_wait_op_done(adap,1256,1U,1,5,1);
  
#line 2953 
  if (tmp_9 != 0) {
    
#line 2954 
    __retres = -5;
    
#line 2954 
    goto return_label;
  }
  else ;
  
#line 2945 
  i += 1;
  ldv_48320: 
#line 2946 
  ;
  
#line 2945 
  if (i <= 127) 
#line 2947 
                goto ldv_48319; else 
#line 2950 
                                     goto ldv_48321;
  ldv_48321: 
#line 2951 
  ;
  
#line 2956 
  t3_write_reg(adap,1256U,0U);
  
#line 2958 
  __retres = 0;
  return_label: 
#line 2958 
                return __retres;
}


#line 2961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_config_trace_filter(struct adapter *adapter, struct trace_params const *tp, int filter_index, int invert, int enable)
{
  u32 addr;
  u32 key[4U];
  u32 mask[4U];
  int tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  
#line 2967 
  key[0] = (unsigned int)tp->sport | (tp->sip << 16);
  
#line 2968 
  key[1] = (tp->sip >> 16) | (unsigned int)((int)tp->dport << 16);
  
#line 2969 
  key[2] = tp->dip;
  
#line 2970 
  key[3] = (unsigned int)(((int)tp->proto | ((int)tp->vlan << 8)) | ((int)tp->intf << 20));
  
#line 2972 
  mask[0] = (unsigned int)tp->sport_mask | (tp->sip_mask << 16);
  
#line 2973 
  mask[1] = (tp->sip_mask >> 16) | (unsigned int)((int)tp->dport_mask << 16);
  
#line 2974 
  mask[2] = tp->dip_mask;
  
#line 2975 
  mask[3] = (unsigned int)(((int)tp->proto_mask | ((int)tp->vlan_mask << 8)) | ((int)tp->intf_mask << 20));
  
#line 2977 
  if (invert != 0) 
#line 2978 
                   key[3] |= 536870912U; else ;
  
#line 2979 
  if (enable != 0) 
#line 2980 
                   key[3] |= 268435456U; else ;
  
#line 2982 
  if (filter_index != 0) 
#line 2982 
                         tmp = 288; else 
#line 2982 
                                         tmp = 32;
  
#line 2982 
  addr = (unsigned int)tmp;
  
#line 2983 
  ;
  
#line 2983 
  tmp_0 = addr;
  
#line 2983 
  addr += 1U;
  
#line 2983 
  ;
  
#line 2983 
  ;
  
#line 2983 
  tp_wr_indirect(adapter,tmp_0,key[0]);
  
#line 2984 
  ;
  
#line 2984 
  tmp_1 = addr;
  
#line 2984 
  addr += 1U;
  
#line 2984 
  ;
  
#line 2984 
  ;
  
#line 2984 
  tp_wr_indirect(adapter,tmp_1,mask[0]);
  
#line 2985 
  ;
  
#line 2985 
  tmp_2 = addr;
  
#line 2985 
  addr += 1U;
  
#line 2985 
  ;
  
#line 2985 
  ;
  
#line 2985 
  tp_wr_indirect(adapter,tmp_2,key[1]);
  
#line 2986 
  ;
  
#line 2986 
  tmp_3 = addr;
  
#line 2986 
  addr += 1U;
  
#line 2986 
  ;
  
#line 2986 
  ;
  
#line 2986 
  tp_wr_indirect(adapter,tmp_3,mask[1]);
  
#line 2987 
  ;
  
#line 2987 
  tmp_4 = addr;
  
#line 2987 
  addr += 1U;
  
#line 2987 
  ;
  
#line 2987 
  ;
  
#line 2987 
  tp_wr_indirect(adapter,tmp_4,key[2]);
  
#line 2988 
  ;
  
#line 2988 
  tmp_5 = addr;
  
#line 2988 
  addr += 1U;
  
#line 2988 
  ;
  
#line 2988 
  ;
  
#line 2988 
  tp_wr_indirect(adapter,tmp_5,mask[2]);
  
#line 2989 
  ;
  
#line 2989 
  tmp_6 = addr;
  
#line 2989 
  addr += 1U;
  
#line 2989 
  ;
  
#line 2989 
  ;
  
#line 2989 
  tp_wr_indirect(adapter,tmp_6,key[3]);
  
#line 2990 
  tp_wr_indirect(adapter,addr,mask[3]);
  
#line 2991 
  t3_read_reg(adapter,1092U);
  
#line 2992 
  return;
}


#line 3002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_config_sched(struct adapter *adap, unsigned int kbps, int sched)
{
  int __retres;
  unsigned int v;
  unsigned int tps;
  unsigned int cpt;
  unsigned int bpt;
  unsigned int delta;
  
#line 3004 
  unsigned int mindelta = 4294967295U;
  
#line 3005 
  unsigned int clk = adap->params.vpd.cclk * 1000U;
  
#line 3006 
  unsigned int selected_cpt = 0U;
  
#line 3006 
  unsigned int selected_bpt = 0U;
  
#line 3008 
  if (kbps != 0U) {
    
#line 3009 
    kbps *= 125U;
    
#line 3010 
    cpt = 1U;
    
#line 3010 
    goto ldv_48348;
    ldv_48347: 
#line 3011 
    ;
    
#line 3011 
    tps = clk / cpt;
    
#line 3012 
    bpt = (tps / 2U + kbps) / tps;
    
#line 3013 
    if (bpt + 4294967295U <= 254U) {
      
#line 3014 
      v = bpt * tps;
      
#line 3015 
      if (v >= kbps) 
#line 3015 
                     delta = v - kbps; else 
#line 3015 
                                            delta = kbps - v;
      
#line 3016 
      if (delta <= mindelta) {
        
#line 3017 
        mindelta = delta;
        
#line 3018 
        selected_cpt = cpt;
        
#line 3019 
        selected_bpt = bpt;
      }
      else ;
    }
    else 
      
#line 3021 
      if (selected_cpt != 0U) 
#line 3022 
                              goto ldv_48346; else ;
    
#line 3010 
    cpt += 1U;
    ldv_48348: 
#line 3011 
    ;
    
#line 3010 
    if (cpt <= 255U) 
#line 3012 
                     goto ldv_48347; else 
#line 3015 
                                          goto ldv_48346;
    ldv_48346: 
#line 3016 
    ;
    
#line 3024 
    if (selected_cpt == 0U) {
      
#line 3025 
      __retres = -22;
      
#line 3025 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3027 
  t3_write_reg(adap,1048U,(unsigned int)(sched / -2 + 8));
  
#line 3029 
  v = t3_read_reg(adap,1052U);
  
#line 3030 
  if ((sched & 1) != 0) 
#line 3031 
                        v = ((v & 65535U) | (selected_cpt << 16)) | (selected_bpt << 24); else 
                                                                    
#line 3033 
                                                                    v = ((v & 4294901760U) | selected_cpt) | (selected_bpt << 8);
  
#line 3034 
  t3_write_reg(adap,1052U,v);
  
#line 3035 
  __retres = 0;
  return_label: 
#line 3035 
                return __retres;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int tp_init(struct adapter *adap, struct tp_params const *p)
{
  int tmp;
  
#line 3040 
  int busy = 0;
  
#line 3042 
  tp_config(adap,p);
  
#line 3043 
  t3_set_vlan_accel(adap,3U,0);
  
#line 3045 
  tmp = is_offload((struct adapter const *)adap);
  
#line 3045 
  if (tmp != 0) {
    
#line 3046 
    tp_set_timers(adap,adap->params.vpd.cclk * 1000U);
    
#line 3047 
    t3_write_reg(adap,1100U,2U);
    
#line 3048 
    busy = t3_wait_op_done(adap,1100,2U,0,1000,5);
    
#line 3050 
    if (busy != 0) 
#line 3051 
                   dev_err((struct device const *)(& (adap->pdev)->dev),"TP initialization timed out\n"); else ;
  }
  else ;
  
#line 3054 
  if (busy == 0) 
#line 3055 
                 t3_write_reg(adap,1100U,1U); else ;
  
#line 3056 
  return busy;
}


#line 3063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void chan_init_hw(struct adapter *adap, unsigned int chan_map)
{
  int i;
  
#line 3067 
  if (chan_map != 3U) {
    unsigned int tmp;
    unsigned int tmp_0;
    
#line 3068 
    t3_set_reg_field(adap,1280U,16U,0U);
    
#line 3069 
    t3_set_reg_field(adap,1408U,1U,0U);
    
#line 3070 
    if (chan_map == 1U) 
#line 3070 
                        tmp = 2069U; else 
#line 3070 
                                          tmp = 2074U;
    
#line 3070 
    ;
    
#line 3070 
    t3_write_reg(adap,1536U,tmp);
    
#line 3073 
    if (chan_map == 1U) 
#line 3073 
                        tmp_0 = 4294967295U; else 
#line 3073 
                                                  tmp_0 = 0U;
    
#line 3073 
    ;
    
#line 3073 
    t3_write_reg(adap,1504U,tmp_0);
  }
  else {
    
#line 3076 
    t3_set_reg_field(adap,1280U,0U,16U);
    
#line 3077 
    t3_set_reg_field(adap,1408U,0U,1U);
    
#line 3078 
    t3_write_reg(adap,1452U,1048592U);
    
#line 3080 
    t3_write_reg(adap,1536U,2079U);
    
#line 3083 
    t3_write_reg(adap,1504U,2147516416U);
    
#line 3084 
    t3_set_reg_field(adap,840U,0U,67108864U);
    
#line 3085 
    t3_write_reg(adap,1064U,170U);
    
#line 3087 
    i = 0;
    
#line 3087 
    goto ldv_48360;
    ldv_48359: 
#line 3088 
    ;
    
#line 3088 
    t3_write_reg(adap,1056U,(unsigned int)((i << 16) | 4112));
    
#line 3087 
    i += 1;
    ldv_48360: 
#line 3088 
    ;
    
#line 3087 
    if (i <= 15) 
#line 3089 
                 goto ldv_48359; else 
#line 3092 
                                      goto ldv_48361;
    ldv_48361: 
#line 3093 
    ;
  }
  
#line 3095 
  return;
}


#line 3093  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int calibrate_xgm(struct adapter *adapter)
{
  int __retres;
  int tmp;
  
#line 3095 
  tmp = uses_xaui((struct adapter const *)adapter);
  
#line 3095 
  if (tmp != 0) {
    unsigned int v;
    unsigned int i;
    
#line 3098 
    i = 0U;
    
#line 3098 
    goto ldv_48368;
    ldv_48367: 
#line 3099 
    ;
    
#line 3099 
    t3_write_reg(adapter,2208U,0U);
    
#line 3100 
    t3_read_reg(adapter,2208U);
    
#line 3101 
    msleep(1U);
    
#line 3102 
    v = t3_read_reg(adapter,2208U);
    
#line 3103 
    if ((v & 2684354560U) == 0U) {
      
#line 3104 
      t3_write_reg(adapter,2208U,(v >> 26) & 7U);
      
#line 3106 
      __retres = 0;
      
#line 3106 
      goto return_label;
    }
    else ;
    
#line 3098 
    i += 1U;
    ldv_48368: 
#line 3099 
    ;
    
#line 3098 
    if (i <= 4U) 
#line 3100 
                 goto ldv_48367; else 
#line 3103 
                                      goto ldv_48369;
    ldv_48369: 
#line 3104 
    ;
    
#line 3109 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"MAC calibration failed\n");
    
#line 3110 
    __retres = -1;
    
#line 3110 
    goto return_label;
  }
  else {
    
#line 3112 
    t3_write_reg(adapter,2204U,19U);
    
#line 3114 
    t3_set_reg_field(adapter,2204U,64U,64U);
  }
  
#line 3117 
  __retres = 0;
  return_label: 
#line 3117 
                return __retres;
}


#line 3120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void calibrate_xgm_t3b(struct adapter *adapter)
{
  int tmp;
  
#line 3122 
  tmp = uses_xaui((struct adapter const *)adapter);
  
#line 3122 
  if (tmp == 0) {
    
#line 3123 
    t3_write_reg(adapter,2204U,403U);
    
#line 3125 
    t3_set_reg_field(adapter,2204U,256U,0U);
    
#line 3126 
    t3_set_reg_field(adapter,2204U,0U,64U);
    
#line 3128 
    t3_set_reg_field(adapter,2204U,64U,0U);
    
#line 3130 
    t3_set_reg_field(adapter,2204U,128U,0U);
    
#line 3131 
    t3_set_reg_field(adapter,2204U,0U,128U);
  }
  else ;
  
#line 3133 
  return;
}


#line 3150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int wrreg_wait(struct adapter *adapter, unsigned int addr, u32 val)
{
  int __retres;
  u32 tmp;
  
#line 3152 
  t3_write_reg(adapter,addr,val);
  
#line 3153 
  t3_read_reg(adapter,addr);
  
#line 3154 
  tmp = t3_read_reg(adapter,addr);
  
#line 3154 
  if (tmp >= (u32)0) {
    
#line 3155 
    __retres = 0;
    
#line 3155 
    goto return_label;
  }
  else ;
  
#line 3156 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"write to MC7 register 0x%x timed out\n",addr);
  
#line 3157 
  __retres = -5;
  return_label: 
#line 3157 
                return __retres;
}


#line 3160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int mc7_init(struct mc7 *mc7, unsigned int mc7_clock, int mem_type)
{
  int __retres;
  u32 val;
  unsigned int width;
  unsigned int density;
  unsigned int slow;
  unsigned int attempts;
  int tmp_0;
  int tmp_1;
  int tmp_5;
  
#line 3162 
  unsigned int const mc7_mode[5U] = {1586U, 1602U, 1618U, 1074U, 1090U};
  
#line 3165 
  struct mc7_timing_params const mc7_timings[5U] = {{.ActToPreDly = (unsigned char)12U, .ActToRdWrDly = (unsigned char)3U, .PreCyc = (unsigned char)4U, .RefCyc = {(unsigned char)20U, (unsigned char)28U, (unsigned char)34U, (unsigned char)52U, (unsigned char)0U}, .BkCyc = (unsigned char)15U, .WrToRdDly = (unsigned char)6U, .RdToWrDly = (unsigned char)4U}, {.ActToPreDly = (unsigned char)12U, .ActToRdWrDly = (unsigned char)4U, .PreCyc = (unsigned char)5U, .RefCyc = {(unsigned char)20U, (unsigned char)28U, (unsigned char)34U, (unsigned char)52U, (unsigned char)0U}, .BkCyc = (unsigned char)16U, .WrToRdDly = (unsigned char)7U, .RdToWrDly = (unsigned char)4U}, {.ActToPreDly = (unsigned char)12U, .ActToRdWrDly = (unsigned char)5U, .PreCyc = (unsigned char)6U, .RefCyc = {(unsigned char)20U, (unsigned char)28U, (unsigned char)34U, (unsigned char)52U, (unsigned char)0U}, .BkCyc = (unsigned char)17U, .WrToRdDly = (unsigned char)8U, .RdToWrDly = (unsigned char)4U}, {.ActToPreDly = (unsigned char)9U, .ActToRdWrDly = (unsigned char)3U, .PreCyc = (unsigned char)4U, .RefCyc = {(unsigned char)15U, (unsigned char)21U, (unsigned char)26U, (unsigned char)39U, (unsigned char)0U}, .BkCyc = (unsigned char)12U, .WrToRdDly = (unsigned char)6U, .RdToWrDly = (unsigned char)4U}, {.ActToPreDly = (unsigned char)9U, .ActToRdWrDly = (unsigned char)4U, .PreCyc = (unsigned char)5U, .RefCyc = {(unsigned char)15U, (unsigned char)21U, (unsigned char)26U, (unsigned char)39U, (unsigned char)0U}, .BkCyc = (unsigned char)13U, .WrToRdDly = (unsigned char)7U, .RdToWrDly = (unsigned char)4U}};
  
#line 3175 
  struct adapter *adapter = mc7->adapter;
  
#line 3176 
  struct mc7_timing_params const *p = & mc7_timings[mem_type];
  
#line 3178 
  if (mc7->size == 0U) {
    
#line 3179 
    __retres = 0;
    
#line 3179 
    goto return_label;
  }
  else ;
  
#line 3181 
  val = t3_read_reg(adapter,mc7->offset + 256U);
  
#line 3182 
  slow = val & 1024U;
  
#line 3183 
  width = (val >> 8) & 3U;
  
#line 3184 
  density = (val >> 2) & 7U;
  
#line 3186 
  t3_write_reg(adapter,mc7->offset + 256U,val | 8192U);
  
#line 3187 
  val = t3_read_reg(adapter,mc7->offset + 256U);
  
#line 3188 
  msleep(1U);
  
#line 3190 
  if (slow == 0U) {
    u32 tmp;
    
#line 3191 
    t3_write_reg(adapter,mc7->offset + 296U,1048576U);
    
#line 3192 
    t3_read_reg(adapter,mc7->offset + 296U);
    
#line 3193 
    msleep(1U);
    
#line 3194 
    tmp = t3_read_reg(adapter,mc7->offset + 296U);
    
#line 3194 
    if ((tmp & 3222274048U) != 0U) {
      
#line 3196 
      dev_err((struct device const *)(& (adapter->pdev)->dev),"%s MC7 calibration timed out\n",mc7->name);
      
#line 3198 
      goto out_fail;
    }
    else ;
  }
  else ;
  
#line 3202 
  t3_write_reg(adapter,mc7->offset + 288U,(unsigned int)((((((((int)p->ActToPreDly << 26) | ((int)p->ActToRdWrDly << 23)) | ((int)p->PreCyc << 20)) | ((int)p->RefCyc[density] << 13)) | ((int)p->BkCyc << 8)) | ((int)p->WrToRdDly << 4)) | (int)p->RdToWrDly));
  
#line 3208 
  t3_write_reg(adapter,mc7->offset + 256U,val | 2049U);
  
#line 3210 
  t3_read_reg(adapter,mc7->offset + 256U);
  
#line 3212 
  if (slow == 0U) 
#line 3213 
                  t3_set_reg_field(adapter,mc7->offset + 284U,2U,2U); else ;
  
#line 3215 
  __const_udelay(4295UL);
  
#line 3217 
  if (slow != 0U) 
#line 3217 
                  tmp_0 = 3; else 
#line 3217 
                                  tmp_0 = 6;
  
#line 3217 
  val = (unsigned int)tmp_0;
  
#line 3218 
  tmp_1 = wrreg_wait(adapter,mc7->offset + 276U,0U);
  
#line 3218 
  if (tmp_1 != 0) 
#line 3222 
                  goto out_fail;
  else {
    int tmp_2;
    
#line 3218 
    tmp_2 = wrreg_wait(adapter,mc7->offset + 268U,0U);
    
#line 3218 
    if (tmp_2 != 0) 
#line 3222 
                    goto out_fail;
    else {
      int tmp_3;
      
#line 3219 
      tmp_3 = wrreg_wait(adapter,mc7->offset + 272U,0U);
      
#line 3219 
      if (tmp_3 != 0) 
#line 3222 
                      goto out_fail;
      else {
        int tmp_4;
        
#line 3220 
        tmp_4 = wrreg_wait(adapter,mc7->offset + 264U,val);
        
#line 3220 
        if (tmp_4 != 0) 
#line 3222 
                        goto out_fail; else ;
      }
    }
  }
  
#line 3224 
  if (slow == 0U) {
    
#line 3225 
    t3_write_reg(adapter,mc7->offset + 260U,256U);
    
#line 3226 
    t3_set_reg_field(adapter,mc7->offset + 284U,1U,0U);
    
#line 3227 
    __const_udelay(21475UL);
  }
  else ;
  
#line 3230 
  tmp_5 = wrreg_wait(adapter,mc7->offset + 276U,0U);
  
#line 3230 
  if (tmp_5 != 0) 
#line 3237 
                  goto out_fail;
  else {
    int tmp_6;
    
#line 3230 
    tmp_6 = wrreg_wait(adapter,mc7->offset + 280U,0U);
    
#line 3230 
    if (tmp_6 != 0) 
#line 3237 
                    goto out_fail;
    else {
      int tmp_7;
      
#line 3231 
      tmp_7 = wrreg_wait(adapter,mc7->offset + 280U,0U);
      
#line 3231 
      if (tmp_7 != 0) 
#line 3237 
                      goto out_fail;
      else {
        int tmp_8;
        
#line 3232 
        tmp_8 = wrreg_wait(adapter,mc7->offset + 260U,mc7_mode[mem_type]);
        
#line 3232 
        if (tmp_8 != 0) 
#line 3237 
                        goto out_fail;
        else {
          int tmp_9;
          
#line 3234 
          tmp_9 = wrreg_wait(adapter,mc7->offset + 264U,val | 896U);
          
#line 3234 
          if (tmp_9 != 0) 
#line 3237 
                          goto out_fail;
          else {
            int tmp_10;
            
#line 3235 
            tmp_10 = wrreg_wait(adapter,mc7->offset + 264U,val);
            
#line 3235 
            if (tmp_10 != 0) 
#line 3237 
                             goto out_fail; else ;
          }
        }
      }
    }
  }
  
#line 3240 
  mc7_clock = mc7_clock * 7812U + mc7_clock / 2U;
  
#line 3241 
  mc7_clock /= 1000000U;
  
#line 3243 
  t3_write_reg(adapter,mc7->offset + 280U,(mc7_clock << 1) | 1U);
  
#line 3245 
  t3_read_reg(adapter,mc7->offset + 280U);
  
#line 3247 
  t3_write_reg(adapter,mc7->offset + 304U,3U);
  
#line 3248 
  t3_write_reg(adapter,mc7->offset + 368U,0U);
  
#line 3249 
  t3_write_reg(adapter,mc7->offset + 360U,0U);
  
#line 3250 
  t3_write_reg(adapter,mc7->offset + 364U,(mc7->size << width) + 4294967295U);
  
#line 3252 
  t3_write_reg(adapter,mc7->offset + 372U,1U);
  
#line 3253 
  t3_read_reg(adapter,mc7->offset + 372U);
  
#line 3255 
  attempts = 50U;
  ldv_48401: 
#line 3256 
  ;
  
#line 3257 
  msleep(250U);
  
#line 3258 
  val = t3_read_reg(adapter,mc7->offset + 372U);
  
#line 3259 
  if (val < (u32)0) {
    
#line 3259 
    attempts -= 1U;
    
#line 3259 
    if (attempts != 0U) 
#line 3261 
                        goto ldv_48401; else 
#line 3264 
                                             goto ldv_48402;
  }
  else 
#line 3264 
       goto ldv_48402;
  ldv_48402: 
#line 3265 
  ;
  
#line 3260 
  if (val < (u32)0) {
    
#line 3261 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"%s MC7 BIST timed out\n",mc7->name);
    
#line 3262 
    goto out_fail;
  }
  else ;
  
#line 3266 
  t3_set_reg_field(adapter,mc7->offset + 256U,0U,2U);
  
#line 3267 
  __retres = 0;
  
#line 3267 
  goto return_label;
  out_fail: 
#line 3269 
  ;
  
#line 3270 
  __retres = -1;
  return_label: 
#line 3270 
                return __retres;
}


#line 3273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void config_pcie(struct adapter *adap)
{
  u16 val;
  u16 devid;
  unsigned int log2_width;
  unsigned int pldsize;
  unsigned int fst_trn_rx;
  unsigned int fst_trn_tx;
  unsigned int acklat;
  unsigned int rpllmt;
  u32 tmp;
  int tmp_1;
  
#line 3275 
  u16 const ack_lat[4U][6U] = {{(unsigned short)237U, (unsigned short)416U, (unsigned short)559U, (unsigned short)1071U, (unsigned short)2095U, (unsigned short)4143U}, {(unsigned short)128U, (unsigned short)217U, (unsigned short)289U, (unsigned short)545U, (unsigned short)1057U, (unsigned short)2081U}, {(unsigned short)73U, (unsigned short)118U, (unsigned short)154U, (unsigned short)282U, (unsigned short)538U, (unsigned short)1050U}, {(unsigned short)67U, (unsigned short)107U, (unsigned short)86U, (unsigned short)150U, (unsigned short)278U, (unsigned short)534U}};
  
#line 3281 
  u16 const rpl_tmr[4U][6U] = {{(unsigned short)711U, (unsigned short)1248U, (unsigned short)1677U, (unsigned short)3213U, (unsigned short)6285U, (unsigned short)12429U}, {(unsigned short)384U, (unsigned short)651U, (unsigned short)867U, (unsigned short)1635U, (unsigned short)3171U, (unsigned short)6243U}, {(unsigned short)219U, (unsigned short)354U, (unsigned short)462U, (unsigned short)846U, (unsigned short)1614U, (unsigned short)3150U}, {(unsigned short)201U, (unsigned short)321U, (unsigned short)258U, (unsigned short)450U, (unsigned short)834U, (unsigned short)1602U}};
  
#line 3292 
  pcie_capability_read_word(adap->pdev,8,& val);
  
#line 3293 
  pldsize = (unsigned int)((int)val >> 5) & 7U;
  
#line 3295 
  pci_read_config_word((struct pci_dev const *)adap->pdev,2,& devid);
  
#line 3296 
  if ((unsigned int)devid == 55U) {
    
#line 3297 
    pcie_capability_write_word(adap->pdev,8,(unsigned short)((int)val & 36639));
    
#line 3300 
    pldsize = 0U;
  }
  else ;
  
#line 3303 
  pcie_capability_read_word(adap->pdev,16,& val);
  
#line 3305 
  tmp = t3_read_reg(adap,152U);
  
#line 3305 
  fst_trn_tx = (tmp >> 22) & 255U;
  
#line 3306 
  if (adap->params.rev != 0U) {
    u32 tmp_0;
    
#line 3307 
    tmp_0 = t3_read_reg(adap,140U);
    
#line 3306 
    fst_trn_rx = (tmp_0 >> 10) & 255U;
  }
  else 
#line 3306 
       fst_trn_rx = fst_trn_tx;
  
#line 3308 
  tmp_1 = ffs((int)adap->params.pci.width);
  
#line 3308 
  log2_width = (unsigned int)(tmp_1 + -1);
  
#line 3309 
  acklat = (unsigned int)ack_lat[log2_width][pldsize];
  
#line 3310 
  if (((int)val & 1) != 0) 
#line 3311 
                           acklat = fst_trn_tx * 4U + acklat; else ;
  
#line 3312 
  rpllmt = (unsigned int)rpl_tmr[log2_width][pldsize] + fst_trn_rx * 4U;
  
#line 3314 
  if (adap->params.rev == 0U) 
#line 3315 
                              t3_set_reg_field(adap,156U,2047U,acklat); else 
                                                                    
#line 3319 
                                                                    t3_set_reg_field(adap,156U,8191U,acklat);
  
#line 3322 
  t3_set_reg_field(adap,152U,4194300U,rpllmt << 2);
  
#line 3325 
  t3_write_reg(adap,164U,4294967295U);
  
#line 3326 
  t3_set_reg_field(adap,136U,0U,19988480U);
  
#line 3327 
  return;
}


#line 3339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_init_hw(struct adapter *adapter, u32 fw_params)
{
  int attempts;
  int i;
  int tmp_5;
  unsigned int tmp_7;
  unsigned int tmp_9;
  unsigned int tmp_10;
  unsigned int tmp_11;
  u32 tmp_12;
  
#line 3341 
  int err = -5;
  
#line 3342 
  struct vpd_params const *vpd = (struct vpd_params const *)(& adapter->params.vpd);
  
#line 3344 
  if (adapter->params.rev != 0U) 
#line 3345 
                                 calibrate_xgm_t3b(adapter);
  else {
    int tmp;
    
#line 3346 
    tmp = calibrate_xgm(adapter);
    
#line 3346 
    if (tmp != 0) 
#line 3347 
                  goto out_err; else ;
  }
  
#line 3349 
  if (vpd->mclk != 0U) {
    int tmp_0;
    int tmp_4;
    
#line 3350 
    partition_mem(adapter,(struct tp_params const *)(& adapter->params.tp));
    
#line 3352 
    tmp_0 = mc7_init(& adapter->pmrx,vpd->mclk,(int)vpd->mem_timing);
    
#line 3352 
    if (tmp_0 != 0) 
#line 3358 
                    goto out_err;
    else {
      int tmp_1;
      
#line 3352 
      tmp_1 = mc7_init(& adapter->pmtx,vpd->mclk,(int)vpd->mem_timing);
      
#line 3352 
      if (tmp_1 != 0) 
#line 3358 
                      goto out_err;
      else {
        int tmp_2;
        
#line 3353 
        tmp_2 = mc7_init(& adapter->cm,vpd->mclk,(int)vpd->mem_timing);
        
#line 3353 
        if (tmp_2 != 0) 
#line 3358 
                        goto out_err;
        else {
          int tmp_3;
          
#line 3354 
          tmp_3 = t3_mc5_init(& adapter->mc5,adapter->params.mc5.nservers,adapter->params.mc5.nfilters,adapter->params.mc5.nroutes);
          
#line 3354 
          if (tmp_3 != 0) 
#line 3358 
                          goto out_err; else ;
        }
      }
    }
    
#line 3360 
    i = 0;
    
#line 3360 
    goto ldv_48426;
    ldv_48425: 
#line 3361 
    ;
    
#line 3361 
    tmp_4 = clear_sge_ctxt(adapter,(unsigned int)i,524288U);
    
#line 3361 
    if (tmp_4 != 0) 
#line 3362 
                    goto out_err; else ;
    
#line 3360 
    i += 1;
    ldv_48426: 
#line 3361 
    ;
    
#line 3360 
    if (i <= 31) 
#line 3362 
                 goto ldv_48425; else 
#line 3365 
                                      goto ldv_48427;
    ldv_48427: 
#line 3366 
    ;
  }
  else ;
  
#line 3365 
  tmp_5 = tp_init(adapter,(struct tp_params const *)(& adapter->params.tp));
  
#line 3365 
  if (tmp_5 != 0) 
#line 3366 
                  goto out_err; else ;
  {
    unsigned int tmp_6;
    
#line 3369 
    unsigned int _min1 = adapter->params.sge.max_pkt_size;
    
#line 3369 
    unsigned int _min2 = 12288U;
    
#line 3369 
    if (_min1 < _min2) 
#line 3369 
                       tmp_6 = _min1; else 
#line 3369 
                                           tmp_6 = _min2;
    
#line 3369 
    tmp_7 = tmp_6;
  }
  
#line 3368 
  ;
  
#line 3368 
  t3_tp_set_coalescing_size(adapter,tmp_7,1);
  {
    unsigned int tmp_8;
    
#line 3372 
    unsigned int _min1_0 = adapter->params.sge.max_pkt_size;
    
#line 3372 
    unsigned int _min2_0 = 16384U;
    
#line 3372 
    if (_min1_0 < _min2_0) 
#line 3372 
                           tmp_8 = _min1_0; else 
#line 3372 
                                                 tmp_8 = _min2_0;
    
#line 3372 
    tmp_9 = tmp_8;
  }
  
#line 3371 
  ;
  
#line 3371 
  t3_tp_set_max_rxsize(adapter,tmp_9);
  
#line 3373 
  ulp_config(adapter,(struct tp_params const *)(& adapter->params.tp));
  
#line 3375 
  tmp_10 = is_pcie((struct adapter const *)adapter);
  
#line 3375 
  if (tmp_10 != 0U) 
#line 3376 
                    config_pcie(adapter); else 
#line 3378 
                                               t3_set_reg_field(adapter,136U,0U,786432U);
  
#line 3381 
  if (adapter->params.rev == 4U) 
#line 3382 
                                 t3_set_reg_field(adapter,1408U,0U,2U); else ;
  
#line 3385 
  t3_write_reg(adapter,1472U,4294967295U);
  
#line 3386 
  t3_write_reg(adapter,1476U,0U);
  
#line 3387 
  t3_write_reg(adapter,1508U,0U);
  
#line 3388 
  chan_init_hw(adapter,adapter->params.chan_map);
  
#line 3389 
  t3_sge_init(adapter,& adapter->params.sge);
  
#line 3390 
  t3_set_reg_field(adapter,1776U,0U,16U);
  
#line 3392 
  tmp_11 = calc_gpio_intr(adapter);
  
#line 3392 
  ;
  
#line 3392 
  t3_write_reg(adapter,240U,tmp_11);
  
#line 3394 
  t3_write_reg(adapter,692U,vpd->uclk | fw_params);
  
#line 3395 
  t3_write_reg(adapter,640U,458752U);
  
#line 3397 
  t3_read_reg(adapter,640U);
  
#line 3399 
  attempts = 100;
  ldv_48434: 
#line 3400 
  ;
  
#line 3401 
  msleep(20U);
  
#line 3402 
  tmp_12 = t3_read_reg(adapter,692U);
  
#line 3402 
  if (tmp_12 != 0U) {
    
#line 3402 
    attempts -= 1;
    
#line 3402 
    if (attempts != 0) 
#line 3404 
                       goto ldv_48434; else 
#line 3407 
                                            goto ldv_48435;
  }
  else 
#line 3407 
       goto ldv_48435;
  ldv_48435: 
#line 3408 
  ;
  
#line 3403 
  if (attempts == 0) {
    
#line 3404 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"uP initialization timed out\n");
    
#line 3405 
    goto out_err;
  }
  else ;
  
#line 3408 
  err = 0;
  out_err: 
#line 3409 
  ;
  
#line 3410 
  return err;
}


#line 3421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void get_pci_mode(struct adapter *adapter, struct pci_params *p)
{
  u32 pci_mode;
  bool tmp;
  
#line 3423 
  unsigned short speed_map[4U] = {(unsigned short)33U, (unsigned short)66U, (unsigned short)100U, (unsigned short)133U};
  
#line 3426 
  tmp = pci_is_pcie(adapter->pdev);
  
#line 3426 
  if ((int)tmp != 0) {
    u16 val;
    
#line 3429 
    p->variant = (unsigned char)4U;
    
#line 3430 
    pcie_capability_read_word(adapter->pdev,18,& val);
    
#line 3431 
    p->width = (unsigned char)((unsigned int)((unsigned char)((int)val >> 4)) & 63U);
    
#line 3432 
    goto return_label;
  }
  else ;
  
#line 3435 
  pci_mode = t3_read_reg(adapter,140U);
  
#line 3436 
  p->speed = speed_map[(pci_mode >> 6) & 3U];
  
#line 3437 
  if ((pci_mode & 1U) != 0U) 
#line 3437 
                             p->width = (unsigned char)64U; else 
#line 3437 
                                                                 p->width = (unsigned char)32U;
  
#line 3438 
  pci_mode = (pci_mode >> 2) & 15U;
  
#line 3439 
  if (pci_mode == 0U) 
#line 3440 
                      p->variant = (unsigned char)0U;
  else 
    
#line 3441 
    if (pci_mode <= 3U) 
#line 3442 
                        p->variant = (unsigned char)1U;
    else 
      
#line 3443 
      if (pci_mode <= 7U) 
#line 3444 
                          p->variant = (unsigned char)2U; else 
#line 3446 
                                                               p->variant = (unsigned char)3U;
  return_label: 
#line 3447 
                return;
}


#line 3458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void init_link_config(struct link_config *lc, unsigned int caps)
{
  unsigned short tmp;
  unsigned char tmp_0;
  unsigned char tmp_1;
  
#line 3460 
  lc->supported = caps;
  
#line 3461 
  tmp = (unsigned short)65535U;
  
#line 3461 
  lc->speed = tmp;
  
#line 3461 
  lc->requested_speed = tmp;
  
#line 3462 
  tmp_0 = (unsigned char)255U;
  
#line 3462 
  lc->duplex = tmp_0;
  
#line 3462 
  lc->requested_duplex = tmp_0;
  
#line 3463 
  tmp_1 = (unsigned char)3U;
  
#line 3463 
  lc->fc = tmp_1;
  
#line 3463 
  lc->requested_fc = tmp_1;
  
#line 3464 
  if ((lc->supported & 64U) != 0U) {
    
#line 3465 
    lc->advertising = lc->supported;
    
#line 3466 
    lc->autoneg = (unsigned char)1U;
    
#line 3467 
    lc->requested_fc = (unsigned char)((unsigned int)lc->requested_fc | 4U);
  }
  else {
    
#line 3469 
    lc->advertising = 0U;
    
#line 3470 
    lc->autoneg = (unsigned char)0U;
  }
  
#line 3472 
  return;
}


#line 3481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static unsigned int mc7_calc_size(u32 cfg)
{
  unsigned int __retres;
  int tmp;
  int tmp_0;
  
#line 3483 
  unsigned int width = (cfg >> 8) & 3U;
  
#line 3484 
  if ((cfg & 64U) != 0U) 
#line 3484 
                         tmp = 2; else 
#line 3484 
                                       tmp = 1;
  
#line 3484 
  unsigned int banks = (unsigned int)tmp;
  
#line 3485 
  if ((cfg & 32U) != 0U) 
#line 3485 
                         tmp_0 = 2; else 
#line 3485 
                                         tmp_0 = 1;
  
#line 3485 
  unsigned int org = (unsigned int)tmp_0;
  
#line 3486 
  unsigned int density = (cfg >> 2) & 7U;
  
#line 3487 
  unsigned int MBs = ((unsigned int)(256 << density) * banks) / (org << width);
  
#line 3489 
  __retres = MBs << 20;
  
#line 3489 
  return __retres;
}


#line 3492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void mc7_prep(struct adapter *adapter, struct mc7 *mc7, unsigned int base_addr, char const *name)
{
  u32 cfg;
  
#line 3497 
  mc7->adapter = adapter;
  
#line 3498 
  mc7->name = name;
  
#line 3499 
  mc7->offset = base_addr + 4294967040U;
  
#line 3500 
  cfg = t3_read_reg(adapter,mc7->offset + 256U);
  
#line 3501 
  if (((cfg >> 2) & 7U) != 7U) 
#line 3501 
                               mc7->size = mc7_calc_size(cfg); else 
#line 3501 
                                                                    mc7->size = 0U;
  
#line 3502 
  mc7->width = (cfg >> 8) & 3U;
  
#line 3503 
  return;
}


#line 3505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void mac_prep(struct cmac *mac, struct adapter *adapter, int index)
{
  u16 devid;
  
#line 3509 
  mac->adapter = adapter;
  
#line 3510 
  pci_read_config_word((struct pci_dev const *)adapter->pdev,2,& devid);
  
#line 3512 
  if ((unsigned int)devid == 55U && (unsigned int)adapter->params.vpd.xauicfg[1] == 0U) 
    
#line 3513 
    index = 0; else ;
  
#line 3514 
  mac->offset = (unsigned int)(index * 512);
  
#line 3515 
  mac->nucast = 1U;
  
#line 3517 
  if (adapter->params.rev == 0U) {
    int tmp_1;
    
#line 3517 
    tmp_1 = uses_xaui((struct adapter const *)adapter);
    
#line 3517 
    if (tmp_1 != 0) {
      int tmp_0;
      int tmp;
      
#line 3519 
      tmp = is_10G((struct adapter const *)adapter);
      
#line 3519 
      if (tmp != 0) 
#line 3519 
                    tmp_0 = 42998788; else 
#line 3519 
                                           tmp_0 = 36707332;
      
#line 3518 
      ;
      
#line 3518 
      ;
      
#line 3518 
      t3_write_reg(adapter,mac->offset + 2192U,(unsigned int)tmp_0);
      
#line 3520 
      t3_set_reg_field(adapter,mac->offset + 2232U,1U,0U);
    }
    else ;
  }
  else ;
  
#line 3522 
  return;
}


#line 3525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static void early_hw_init(struct adapter *adapter, struct adapter_info const *ai)
{
  int tmp_0;
  int tmp;
  
#line 3528 
  tmp = is_10G((struct adapter const *)adapter);
  
#line 3528 
  if (tmp != 0) 
#line 3528 
                tmp_0 = 6; else 
#line 3528 
                                tmp_0 = 4;
  
#line 3528 
  u32 val = (unsigned int)tmp_0;
  
#line 3530 
  mi1_init(adapter,ai);
  
#line 3531 
  t3_write_reg(adapter,1696U,adapter->params.vpd.cclk / 80U + 4294967295U);
  
#line 3533 
  t3_write_reg(adapter,208U,ai->gpio_out | 65537U);
  
#line 3535 
  t3_write_reg(adapter,1812U,0U);
  
#line 3536 
  t3_write_reg(adapter,112U,268369920U);
  
#line 3538 
  if (adapter->params.rev == 0U) 
#line 3539 
                                 val |= 1U;
  else {
    int tmp_1;
    
#line 3538 
    tmp_1 = uses_xaui((struct adapter const *)adapter);
    
#line 3538 
    if (tmp_1 == 0) 
#line 3539 
                    val |= 1U; else ;
  }
  
#line 3542 
  t3_write_reg(adapter,2232U,val);
  
#line 3543 
  t3_read_reg(adapter,2232U);
  
#line 3545 
  val |= 8U;
  
#line 3546 
  t3_write_reg(adapter,2232U,val);
  
#line 3547 
  t3_read_reg(adapter,2232U);
  
#line 3548 
  t3_write_reg(adapter,2744U,val);
  
#line 3549 
  t3_read_reg(adapter,2232U);
  
#line 3550 
  return;
}


#line 3557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_reset_adapter(struct adapter *adapter)
{
  int __retres;
  int i;
  int tmp_0;
  
#line 3559 
  if (adapter->params.rev <= 2U) {
    unsigned int tmp;
    
#line 3560 
    tmp = is_pcie((struct adapter const *)adapter);
    
#line 3560 
    if (tmp != 0U) 
#line 3559 
                   tmp_0 = 1; else 
#line 3559 
                                   tmp_0 = 0;
  }
  else 
#line 3559 
       tmp_0 = 0;
  
#line 3559 
  int save_and_restore_pcie = tmp_0;
  
#line 3561 
  uint16_t devid = (unsigned short)0U;
  
#line 3563 
  if (save_and_restore_pcie != 0) 
#line 3564 
                                  pci_save_state(adapter->pdev); else ;
  
#line 3565 
  t3_write_reg(adapter,1776U,3U);
  
#line 3571 
  i = 0;
  
#line 3571 
  goto ldv_48481;
  ldv_48480: 
#line 3572 
  ;
  
#line 3572 
  msleep(50U);
  
#line 3573 
  pci_read_config_word((struct pci_dev const *)adapter->pdev,0,& devid);
  
#line 3574 
  if ((unsigned int)devid == 5157U) 
#line 3575 
                                    goto ldv_48479; else ;
  
#line 3571 
  i += 1;
  ldv_48481: 
#line 3572 
  ;
  
#line 3571 
  if (i <= 9) 
#line 3573 
              goto ldv_48480; else 
#line 3576 
                                   goto ldv_48479;
  ldv_48479: 
#line 3577 
  ;
  
#line 3578 
  if ((unsigned int)devid != 5157U) {
    
#line 3579 
    __retres = -1;
    
#line 3579 
    goto return_label;
  }
  else ;
  
#line 3581 
  if (save_and_restore_pcie != 0) 
#line 3582 
                                  pci_restore_state(adapter->pdev); else ;
  
#line 3583 
  __retres = 0;
  return_label: 
#line 3583 
                return __retres;
}


#line 3586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
static int init_parity(struct adapter *adap)
{
  int __retres;
  int i;
  int err;
  int addr;
  u32 tmp;
  
#line 3590 
  tmp = t3_read_reg(adap,12U);
  
#line 3590 
  if ((tmp & 134217728U) != 0U) {
    
#line 3591 
    __retres = -16;
    
#line 3591 
    goto return_label;
  }
  else ;
  
#line 3593 
  i = 0;
  
#line 3593 
  err = i;
  
#line 3593 
  goto ldv_48489;
  ldv_48488: 
#line 3594 
  ;
  
#line 3594 
  err = clear_sge_ctxt(adap,(unsigned int)i,131072U);
  
#line 3593 
  i += 1;
  ldv_48489: 
#line 3594 
  ;
  
#line 3593 
  if (err == 0 && i <= 15) 
#line 3595 
                           goto ldv_48488; else 
#line 3598 
                                                goto ldv_48490;
  ldv_48490: 
#line 3599 
  ;
  
#line 3595 
  i = 65520;
  
#line 3595 
  goto ldv_48492;
  ldv_48491: 
#line 3596 
  ;
  
#line 3596 
  err = clear_sge_ctxt(adap,(unsigned int)i,131072U);
  
#line 3595 
  i += 1;
  ldv_48492: 
#line 3596 
  ;
  
#line 3595 
  if (err == 0 && i <= 65535) 
#line 3597 
                              goto ldv_48491; else 
#line 3600 
                                                   goto ldv_48493;
  ldv_48493: 
#line 3601 
  ;
  
#line 3597 
  i = 0;
  
#line 3597 
  goto ldv_48495;
  ldv_48494: 
#line 3598 
  ;
  
#line 3598 
  err = clear_sge_ctxt(adap,(unsigned int)i,262144U);
  
#line 3597 
  i += 1;
  ldv_48495: 
#line 3598 
  ;
  
#line 3597 
  if (err == 0 && i <= 7) 
#line 3599 
                          goto ldv_48494; else 
#line 3602 
                                               goto ldv_48496;
  ldv_48496: 
#line 3603 
  ;
  
#line 3599 
  if (err != 0) {
    
#line 3600 
    __retres = err;
    
#line 3600 
    goto return_label;
  }
  else ;
  
#line 3602 
  t3_write_reg(adap,712U,0U);
  
#line 3603 
  i = 0;
  
#line 3603 
  goto ldv_48501;
  ldv_48500: 
#line 3604 
  ;
  
#line 3604 
  addr = 0;
  
#line 3604 
  goto ldv_48498;
  ldv_48497: 
#line 3605 
  ;
  
#line 3605 
  t3_write_reg(adap,704U,((unsigned int)(i << 3) | (unsigned int)(addr << 16)) | 5U);
  
#line 3608 
  err = t3_wait_op_done(adap,704,2U,0,2,1);
  
#line 3610 
  if (err != 0) {
    
#line 3611 
    __retres = err;
    
#line 3611 
    goto return_label;
  }
  else ;
  
#line 3604 
  addr += 1;
  ldv_48498: 
#line 3605 
  ;
  
#line 3604 
  if (addr <= 511) 
#line 3606 
                   goto ldv_48497; else 
#line 3609 
                                        goto ldv_48499;
  ldv_48499: 
#line 3610 
  ;
  
#line 3603 
  i += 1;
  ldv_48501: 
#line 3604 
  ;
  
#line 3603 
  if (i <= 3) 
#line 3605 
              goto ldv_48500; else 
#line 3608 
                                   goto ldv_48502;
  ldv_48502: 
#line 3609 
  ;
  
#line 3613 
  __retres = 0;
  return_label: 
#line 3613 
                return __retres;
}


#line 3621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_prep_adapter(struct adapter *adapter, struct adapter_info const *ai, int reset)
{
  int __retres;
  int ret;
  unsigned int i;
  int tmp;
  int tmp_1;
  int tmp_0;
  int tmp_2;
  int tmp_11;
  unsigned int tmp_8;
  int tmp_13;
  
#line 3625 
  unsigned int j = 4294967295U;
  
#line 3627 
  get_pci_mode(adapter,& adapter->params.pci);
  
#line 3629 
  adapter->params.info = ai;
  
#line 3630 
  adapter->params.nports = (unsigned int)((int)ai->nports0 + (int)ai->nports1);
  
#line 3631 
  if ((unsigned int)ai->nports1 != 0U) 
#line 3631 
                                       tmp = 2; else 
#line 3631 
                                                     tmp = 0;
  
#line 3631 
  adapter->params.chan_map = (unsigned int)(((unsigned int)ai->nports0 != 0U) | tmp);
  
#line 3632 
  adapter->params.rev = t3_read_reg(adapter,1780U);
  
#line 3641 
  adapter->params.linkpoll_period = 10U;
  
#line 3643 
  tmp_0 = is_10G((struct adapter const *)adapter);
  
#line 3643 
  if (tmp_0 != 0) 
#line 3643 
                  tmp_1 = 180; else 
#line 3643 
                                    tmp_1 = 1800;
  
#line 3642 
  adapter->params.stats_update_period = (unsigned int)tmp_1;
  
#line 3645 
  tmp_2 = pci_find_capability(adapter->pdev,3);
  
#line 3644 
  adapter->params.pci.vpd_cap_addr = (unsigned int)tmp_2;
  
#line 3646 
  ret = get_vpd_params(adapter,& adapter->params.vpd);
  
#line 3647 
  if (ret < 0) {
    
#line 3648 
    __retres = ret;
    
#line 3648 
    goto return_label;
  }
  else ;
  
#line 3650 
  if (reset != 0) {
    int tmp_3;
    
#line 3650 
    tmp_3 = t3_reset_adapter(adapter);
    
#line 3650 
    if (tmp_3 != 0) {
      
#line 3651 
      __retres = -1;
      
#line 3651 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3653 
  t3_sge_prep(adapter,& adapter->params.sge);
  
#line 3655 
  if (adapter->params.vpd.mclk != 0U) {
    int tmp_4;
    int tmp_6;
    int tmp_5;
    int tmp_7;
    
#line 3656 
    struct tp_params *p = & adapter->params.tp;
    
#line 3658 
    mc7_prep(adapter,& adapter->pmrx,256U,"PMRX");
    
#line 3659 
    mc7_prep(adapter,& adapter->pmtx,384U,"PMTX");
    
#line 3660 
    mc7_prep(adapter,& adapter->cm,512U,"CM");
    
#line 3662 
    if (adapter->params.chan_map == 3U) 
#line 3662 
                                        tmp_4 = 2; else 
#line 3662 
                                                        tmp_4 = 1;
    
#line 3662 
    p->nchan = (unsigned int)tmp_4;
    
#line 3663 
    p->pmrx_size = t3_mc7_size((struct mc7 const *)(& adapter->pmrx));
    
#line 3664 
    p->pmtx_size = t3_mc7_size((struct mc7 const *)(& adapter->pmtx));
    
#line 3665 
    p->cm_size = t3_mc7_size((struct mc7 const *)(& adapter->cm));
    
#line 3666 
    p->chan_rx_size = p->pmrx_size / 2U;
    
#line 3667 
    p->chan_tx_size = p->pmtx_size / p->nchan;
    
#line 3668 
    p->rx_pg_size = 65536U;
    
#line 3669 
    tmp_5 = is_10G((struct adapter const *)adapter);
    
#line 3669 
    if (tmp_5 != 0) 
#line 3669 
                    tmp_6 = 65536; else 
#line 3669 
                                        tmp_6 = 16384;
    
#line 3669 
    p->tx_pg_size = (unsigned int)tmp_6;
    
#line 3670 
    p->rx_num_pgs = pm_num_pages(p->chan_rx_size,p->rx_pg_size);
    
#line 3671 
    p->tx_num_pgs = pm_num_pages(p->chan_tx_size,p->tx_pg_size);
    
#line 3673 
    if (p->cm_size > 134217727U || adapter->params.rev != 0U) 
#line 3673 
                                                              tmp_7 = 12; else 
                                                                    
#line 3673 
                                                                    tmp_7 = 6;
    
#line 3672 
    p->ntimer_qs = (unsigned int)tmp_7;
  }
  else ;
  
#line 3677 
  tmp_8 = t3_mc7_size((struct mc7 const *)(& adapter->pmrx));
  
#line 3677 
  if (tmp_8 != 0U) {
    unsigned int tmp_9;
    
#line 3676 
    tmp_9 = t3_mc7_size((struct mc7 const *)(& adapter->pmtx));
    
#line 3676 
    if (tmp_9 != 0U) {
      unsigned int tmp_10;
      
#line 3677 
      tmp_10 = t3_mc7_size((struct mc7 const *)(& adapter->cm));
      
#line 3677 
      if (tmp_10 != 0U) 
#line 3677 
                        tmp_11 = 1; else 
#line 3677 
                                         tmp_11 = 0;
    }
    else 
#line 3677 
         tmp_11 = 0;
  }
  else 
#line 3677 
       tmp_11 = 0;
  
#line 3676 
  adapter->params.offload = (unsigned int)tmp_11;
  
#line 3680 
  tmp_13 = is_offload((struct adapter const *)adapter);
  
#line 3680 
  if (tmp_13 != 0) {
    int tmp_12;
    
#line 3681 
    adapter->params.mc5.nservers = 512U;
    
#line 3683 
    if (adapter->params.rev != 0U) 
#line 3683 
                                   tmp_12 = 128; else 
#line 3683 
                                                      tmp_12 = 0;
    
#line 3682 
    adapter->params.mc5.nfilters = (unsigned int)tmp_12;
    
#line 3684 
    adapter->params.mc5.nroutes = 0U;
    
#line 3685 
    t3_mc5_prep(adapter,& adapter->mc5,1);
    
#line 3687 
    init_mtus((unsigned short *)(& adapter->params.mtus));
    
#line 3688 
    init_cong_ctrl((unsigned short *)(& adapter->params.a_wnd),(unsigned short *)(& adapter->params.b_wnd));
  }
  else ;
  
#line 3691 
  early_hw_init(adapter,ai);
  
#line 3692 
  ret = init_parity(adapter);
  
#line 3693 
  if (ret != 0) {
    
#line 3694 
    __retres = ret;
    
#line 3694 
    goto return_label;
  }
  else ;
  
#line 3696 
  i = 0U;
  
#line 3696 
  goto ldv_48519;
  ldv_48518: 
#line 3697 
  ;
  {
    u8 hw_addr[6U];
    struct port_type_info const *pti;
    
#line 3699 
    struct port_info *p_0 = adap2pinfo(adapter,(int)i);
    
#line 3701 
    goto ldv_48516;
    ldv_48515: 
#line 3702 
    ;
    ldv_48516: 
#line 3703 
    ;
    
#line 3701 
    j += 1U;
    
#line 3701 
    ;
    
#line 3701 
    if ((unsigned int)adapter->params.vpd.port_type[j] == 0U) 
#line 3703 
                                                              goto ldv_48515; else 
                                                                    
#line 3706 
                                                                    goto ldv_48517;
    ldv_48517: 
#line 3707 
    ;
    
#line 3704 
    pti = & port_types[(int)adapter->params.vpd.port_type[j]];
    
#line 3705 
    if (pti->phy_prep == (int (*)(struct cphy *, struct adapter *, int , struct mdio_ops const *))0) {
      
#line 3706 
      dev_alert((struct device const *)(& (adapter->pdev)->dev),"Invalid port type index %d\n",(int)adapter->params.vpd.port_type[j]);
      
#line 3708 
      __retres = -22;
      
#line 3708 
      goto return_label;
    }
    else ;
    
#line 3711 
    p_0->phy.mdio.dev = adapter->port[i];
    
#line 3712 
    ret = (*(pti->phy_prep))(& p_0->phy,adapter,(int)((unsigned int)ai->phy_base_addr + j),ai->mdio_ops);
    
#line 3714 
    if (ret != 0) {
      
#line 3715 
      __retres = ret;
      
#line 3715 
      goto return_label;
    }
    else ;
    
#line 3716 
    mac_prep(& p_0->mac,adapter,(int)j);
    
#line 3723 
    memcpy((void *)(& hw_addr),(void const *)(& adapter->params.vpd.eth_base),5UL);
    
#line 3724 
    hw_addr[5] = (unsigned char)((int)adapter->params.vpd.eth_base[5] + (int)((unsigned char)i));
    
#line 3726 
    memcpy((void *)(adapter->port[i])->dev_addr,(void const *)(& hw_addr),6UL);
    
#line 3728 
    init_link_config(& p_0->link_config,p_0->phy.caps);
    
#line 3729 
    (*((p_0->phy.ops)->power_down))(& p_0->phy,1);
    
#line 3736 
    if ((p_0->phy.caps & 16777216U) == 0U && adapter->params.linkpoll_period > 10U) 
      
#line 3738 
      adapter->params.linkpoll_period = 10U; else ;
  }
  
#line 3696 
  i += 1U;
  ldv_48519: 
#line 3697 
  ;
  
#line 3696 
  if (adapter->params.nports > i) 
#line 3698 
                                  goto ldv_48518; else 
#line 3701 
                                                       goto ldv_48520;
  ldv_48520: 
#line 3702 
  ;
  
#line 3741 
  __retres = 0;
  return_label: 
#line 3741 
                return __retres;
}


#line 3744  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
void t3_led_ready(struct adapter *adapter)
{
  
#line 3746 
  t3_set_reg_field(adapter,208U,1U,1U);
  
#line 3747 
  return;
}


#line 3750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/chelsio/cxgb3/t3_hw.c"
int t3_replay_prep_adapter(struct adapter *adapter)
{
  int __retres;
  unsigned int i;
  int ret;
  
#line 3752 
  struct adapter_info const *ai = adapter->params.info;
  
#line 3753 
  unsigned int j = 4294967295U;
  
#line 3756 
  early_hw_init(adapter,ai);
  
#line 3757 
  ret = init_parity(adapter);
  
#line 3758 
  if (ret != 0) {
    
#line 3759 
    __retres = ret;
    
#line 3759 
    goto return_label;
  }
  else ;
  
#line 3761 
  i = 0U;
  
#line 3761 
  goto ldv_48537;
  ldv_48536: 
#line 3762 
  ;
  {
    struct port_type_info const *pti;
    
#line 3763 
    struct port_info *p = adap2pinfo(adapter,(int)i);
    
#line 3765 
    goto ldv_48534;
    ldv_48533: 
#line 3766 
    ;
    ldv_48534: 
#line 3767 
    ;
    
#line 3765 
    j += 1U;
    
#line 3765 
    ;
    
#line 3765 
    if ((unsigned int)adapter->params.vpd.port_type[j] == 0U) 
#line 3767 
                                                              goto ldv_48533; else 
                                                                    
#line 3770 
                                                                    goto ldv_48535;
    ldv_48535: 
#line 3771 
    ;
    
#line 3768 
    pti = & port_types[(int)adapter->params.vpd.port_type[j]];
    
#line 3769 
    ret = (*(pti->phy_prep))(& p->phy,adapter,p->phy.mdio.prtad,(struct mdio_ops const *)0);
    
#line 3770 
    if (ret != 0) {
      
#line 3771 
      __retres = ret;
      
#line 3771 
      goto return_label;
    }
    else ;
    
#line 3772 
    (*((p->phy.ops)->power_down))(& p->phy,1);
  }
  
#line 3761 
  i += 1U;
  ldv_48537: 
#line 3762 
  ;
  
#line 3761 
  if (adapter->params.nports > i) 
#line 3763 
                                  goto ldv_48536; else 
#line 3766 
                                                       goto ldv_48538;
  ldv_48538: 
#line 3767 
  ;
  
#line 3775 
  __retres = 0;
  return_label: 
#line 3775 
                return __retres;
}


#line 759  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1)
{
  
#line 763 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 764 
  return;
}


#line 767  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1)
{
  
#line 771 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 772 
  return;
}


#line 775  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1)
{
  
#line 779 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 780 
  return;
}


#line 783  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1)
{
  
#line 787 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 788 
  return;
}


#line 791  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1)
{
  
#line 795 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 796 
  return;
}


#line 799  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1)
{
  
#line 803 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 804 
  return;
}


#line 807  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_lock_80(struct mutex *ldv_func_arg1)
{
  
#line 811 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 812 
  return;
}


#line 815  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/weaver/.tmp_t3_hw.c.aux"
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1)
{
  
#line 819 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"mdio_lock_of_adapter");
  
#line 820 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0);


#line 91 
void *ldv_interrupt_scenario_18(void *arg0);


#line 93 
int main(void);


#line 95 
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 98 
void ldv_dispatch_instance_deregister_15_1(struct timer_list *arg0);


#line 100 
void *ldv_timer_scenario_21(void *arg0);


#line 101 
void *ldv_pci_scenario_20(void *arg0);


#line 102 
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0);


#line 103 
void *ldv_initialization_1(void *arg0);


#line 104 
void ldv_dispatch_register_12_3(struct pci_driver *arg0);


#line 108 
void ldv_dispatch_register_10_4(struct net_device *arg0);


#line 109 
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0);


#line 110 
void *ldv_random_allocationless_scenario_19(void *arg0);


#line 117 
void ldv_dispatch_irq_deregister_16_1(int arg0);


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_21;

#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_20;

#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_5_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_19 *cf_arg_19;
  int tmp;
  
#line 131 
  tmp = ldv_undef_int();
  
#line 131 
  switch (tmp) {
    case 0: 
#line 132 
    ;
    
#line 133 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 134 
    __VERIFIER_assume(ret == 0);
    
#line 135 
    goto ldv_44764;
    default: 
#line 137 
    ;
    
#line 137 
    __VERIFIER_assume(0);
  }
  ldv_44764: 
#line 138 
  ;
  
#line 139 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_init(struct tasklet_struct *arg0, void (*arg1)(unsigned long ), unsigned long arg2)
{
  
#line 148 
  arg0->func = arg1;
  
#line 149 
  arg0->data = arg2;
  
#line 150 
  arg0->count.counter = 0;
  
#line 154 
  goto return_label;
  return_label: 
#line 156 
                return;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_18(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_18_ret_val;
  int ldv_18_line;
  void *ldv_18_data;
  enum irqreturn (*ldv_18_thread)(int , void *);
  int tmp;
  
#line 167 
  enum irqreturn (*ldv_18_callback)(int , void *) = & ldv_emg_wrapper_t3_async_intr_handler_2;
  
#line 170 
  struct ldv_struct_interrupt_scenario_18 *data = (struct ldv_struct_interrupt_scenario_18 *)arg0;
  
#line 175 
  if (data != (struct ldv_struct_interrupt_scenario_18 *)0) {
    
#line 176 
    ldv_18_line = data->arg0;
    
#line 177 
    ldv_18_callback = data->arg1;
    
#line 178 
    ldv_18_thread = data->arg2;
    
#line 179 
    ldv_18_data = data->arg3;
    
#line 180 
    ldv_free((void *)data);
  }
  else ;
  
#line 186 
  ldv_switch_to_interrupt_context();
  
#line 188 
  ldv_18_ret_val = ldv_emg_wrapper_t3_async_intr_handler_2(ldv_18_line,ldv_18_data);
  
#line 190 
  ldv_switch_to_process_context();
  
#line 193 
  tmp = ldv_undef_int();
  
#line 193 
  if (tmp != 0) {
    
#line 195 
    __VERIFIER_assume(ldv_18_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 199 
    if (ldv_18_thread != (enum irqreturn (*)(int , void *))0) 
#line 201 
                                                              (*ldv_18_thread)(ldv_18_line,ldv_18_data); else ;
  }
  else 
#line 208 
       __VERIFIER_assume(ldv_18_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 217 
  __retres = (void *)0;
  
#line 217 
  goto return_label;
  
#line 219 
  __retres = (void *)0;
  return_label: 
#line 219 
                return __retres;
}


#line 224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 227 
  struct pci_driver *ldv_12_pci_driver = ldv_emg_alias_driver_2;
  
#line 231 
  tmp_0 = ldv_undef_int();
  
#line 231 
  if (tmp_0 != 0) {
    
#line 233 
    ldv_12_pci_driver = arg0;
    
#line 237 
    ldv_dispatch_register_12_3(ldv_12_pci_driver);
    
#line 241 
    __retres = 0;
    
#line 241 
    goto return_label;
  }
  else {
    int tmp;
    
#line 248 
    tmp = ldv_undef_int_negative();
    
#line 248 
    __retres = tmp;
    
#line 248 
    goto return_label;
  }
  return_label: 
#line 231 
                return __retres;
}


#line 258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 261 
  ldv_initialize();
  
#line 264 
  ldv_initialization_1((void *)0);
  
#line 266 
  __retres = 0;
  
#line 266 
  return __retres;
}


#line 271  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_tasklet_schedule(struct tasklet_struct *arg0)
{
  unsigned long ldv_17_ldv_param_0_2;
  struct tasklet_struct *ldv_17_tasklet_struct;
  
#line 278 
  ldv_17_tasklet_struct = arg0;
  
#line 285 
  if (ldv_17_tasklet_struct->count.counter == 0) 
#line 287 
                                                 (*ldv_emg_alias_None_2)(ldv_17_ldv_param_0_2); else ;
  
#line 295 
  goto return_label;
  return_label: 
#line 297 
                return;
}


#line 302  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_14_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_18 *cf_arg_18;
  int tmp;
  
#line 305 
  tmp = ldv_undef_int();
  
#line 305 
  switch (tmp) {
    case 0: 
#line 306 
    ;
    
#line 307 
    cf_arg_18 = (struct ldv_struct_interrupt_scenario_18 *)ldv_xmalloc(32UL);
    
#line 308 
    cf_arg_18->arg0 = arg0;
    
#line 309 
    cf_arg_18->arg1 = arg1;
    
#line 310 
    cf_arg_18->arg2 = arg2;
    
#line 311 
    cf_arg_18->arg3 = arg3;
    
#line 312 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_interrupt_scenario_18,(void *)cf_arg_18);
    
#line 313 
    __VERIFIER_assume(ret == 0);
    
#line 314 
    goto ldv_44812;
    default: 
#line 316 
    ;
    
#line 316 
    __VERIFIER_assume(0);
  }
  ldv_44812: 
#line 317 
  ;
  
#line 318 
  return;
}


#line 322  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_work(struct workqueue_struct *arg0, struct work_struct *arg1)
{
  _Bool __retres;
  struct work_struct *ldv_11_work_struct;
  int tmp;
  
#line 329 
  tmp = ldv_undef_int();
  
#line 329 
  if (tmp != 0) {
    
#line 331 
    ldv_11_work_struct = arg1;
    
#line 335 
    if (ldv_11_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 337 
      (*(ldv_11_work_struct->func))(ldv_11_work_struct); else ;
    
#line 342 
    __retres = (_Bool)1;
    
#line 342 
    goto return_label;
  }
  else {
    
#line 349 
    __retres = (_Bool)0;
    
#line 349 
    goto return_label;
  }
  return_label: 
#line 329 
                return __retres;
}


#line 359  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_4_netdev;
  int tmp_0;
  
#line 366 
  tmp_0 = ldv_undef_int();
  
#line 366 
  if (tmp_0 != 0) {
    
#line 368 
    ldv_4_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 372 
    __retres = ldv_4_netdev;
    
#line 372 
    goto return_label;
  }
  else {
    
#line 379 
    __retres = (struct net_device *)0;
    
#line 379 
    goto return_label;
  }
  return_label: 
#line 366 
                return __retres;
}


#line 389  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_15_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_21 *cf_arg_21;
  int tmp;
  
#line 392 
  tmp = ldv_undef_int();
  
#line 392 
  switch (tmp) {
    case 0: 
#line 393 
    ;
    
#line 394 
    ret = pthread_join(ldv_thread_21,(void **)0);
    
#line 395 
    __VERIFIER_assume(ret == 0);
    
#line 396 
    goto ldv_44831;
    default: 
#line 398 
    ;
    
#line 398 
    __VERIFIER_assume(0);
  }
  ldv_44831: 
#line 399 
  ;
  
#line 400 
  return;
}


#line 404  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp_0;
  
#line 409 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_t3_async_intr_handler_2;
  
#line 414 
  tmp_0 = ldv_undef_int();
  
#line 414 
  if (tmp_0 != 0) {
    
#line 416 
    ldv_14_line = (int)arg0;
    
#line 417 
    ldv_14_callback = arg1;
    
#line 418 
    ldv_14_thread = (enum irqreturn (*)(int , void *))0;
    
#line 419 
    ldv_14_data = arg4;
    
#line 423 
    ldv_dispatch_irq_register_14_3(ldv_14_line,ldv_14_callback,ldv_14_thread,ldv_14_data);
    
#line 427 
    __retres = 0;
    
#line 427 
    goto return_label;
  }
  else {
    int tmp;
    
#line 434 
    tmp = ldv_undef_int_negative();
    
#line 434 
    __retres = tmp;
    
#line 434 
    goto return_label;
  }
  return_label: 
#line 414 
                return __retres;
}


#line 444  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_21(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_21_container;
  
#line 449 
  struct ldv_struct_timer_scenario_21 *data = (struct ldv_struct_timer_scenario_21 *)arg0;
  
#line 454 
  if (data != (struct ldv_struct_timer_scenario_21 *)0) {
    
#line 455 
    ldv_21_container = data->arg0;
    
#line 456 
    ldv_free((void *)data);
  }
  else ;
  
#line 461 
  if (ldv_21_container->function != (void (*)(unsigned long ))0) {
    
#line 463 
    ldv_switch_to_interrupt_context();
    
#line 465 
    (*(ldv_21_container->function))(ldv_21_container->data);
    
#line 467 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 476 
  __retres = (void *)0;
  
#line 476 
  goto return_label;
  
#line 478 
  __retres = (void *)0;
  return_label: 
#line 478 
                return __retres;
}


#line 483  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_20(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_20_resource_1;
  struct pci_device_id *ldv_20_ldv_param_1_2;
  struct pm_message ldv_20_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 488 
  struct pci_driver *ldv_20_container = ldv_emg_alias_driver_2;
  
#line 489 
  int ldv_20_ret = ldv_undef_int();
  
#line 492 
  struct ldv_struct_pci_scenario_20 *data = (struct ldv_struct_pci_scenario_20 *)arg0;
  
#line 496 
  ldv_20_ret = ldv_undef_int();
  
#line 499 
  if (data != (struct ldv_struct_pci_scenario_20 *)0) {
    
#line 500 
    ldv_20_container = data->arg0;
    
#line 501 
    ldv_free((void *)data);
  }
  else ;
  
#line 512 
  goto ldv_main_20;
  
#line 514 
  __retres = (void *)0;
  
#line 514 
  goto return_label;
  ldv_main_20: 
#line 517 
  ;
  
#line 520 
  tmp_2 = ldv_undef_int();
  
#line 520 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 522 
    ldv_20_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 527 
    ldv_pre_probe();
    
#line 529 
    ldv_20_ret = ldv_emg_wrapper_init_one_2(ldv_20_resource_1,ldv_20_ldv_param_1_2);
    
#line 531 
    ldv_20_ret = ldv_post_probe(ldv_20_ret);
    
#line 535 
    ldv_free((void *)ldv_20_ldv_param_1_2);
    
#line 538 
    tmp_1 = ldv_undef_int();
    
#line 538 
    if (tmp_1 != 0) {
      
#line 540 
      __VERIFIER_assume(ldv_20_ret == 0);
      
#line 547 
      goto ldv_call_20;
    }
    else {
      
#line 551 
      __VERIFIER_assume(ldv_20_ret != 0);
      
#line 558 
      goto ldv_main_20;
    }
  }
  else {
    
#line 570 
    __retres = (void *)0;
    
#line 570 
    goto return_label;
  }
  
#line 573 
  __retres = (void *)0;
  
#line 573 
  goto return_label;
  ldv_call_20: 
#line 576 
  ;
  
#line 579 
  tmp_3 = ldv_undef_int();
  
#line 579 
  switch (tmp_3) {
    case 1: 
#line 580 
    ;
    
#line 589 
    goto ldv_call_20;
    case 2: 
#line 592 
    ;
    
#line 594 
    if (ldv_20_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 596 
      ldv_20_ret = (*(ldv_20_container->suspend))(ldv_20_resource_1,ldv_20_resource_0);
      
#line 598 
      ldv_20_ret = ldv_filter_err_code(ldv_20_ret);
    }
    else 
#line 600 
         ldv_20_ret = ldv_undef_int();
    
#line 605 
    if (ldv_20_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 607 
      ldv_20_ret = (*(ldv_20_container->suspend_late))(ldv_20_resource_1,ldv_20_resource_0);
      
#line 609 
      ldv_20_ret = ldv_filter_err_code(ldv_20_ret);
    }
    else 
#line 611 
         ldv_20_ret = ldv_undef_int();
    
#line 616 
    if (ldv_20_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 618 
      (*(ldv_20_container->resume_early))(ldv_20_resource_1); else ;
    
#line 623 
    if (ldv_20_container->resume != (int (*)(struct pci_dev *))0) 
#line 625 
                                                                  (*(ldv_20_container->resume))(ldv_20_resource_1); else ;
    
#line 633 
    goto ldv_call_20;
    case 3: 
#line 636 
    ;
    
#line 638 
    if (ldv_20_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 640 
      (*(ldv_20_container->shutdown))(ldv_20_resource_1); else ;
    
#line 646 
    ldv_emg_wrapper_remove_one_3(ldv_20_resource_1);
    
#line 653 
    goto ldv_main_20;
    default: 
#line 656 
    ;
    
#line 656 
    __VERIFIER_assume(0);
  }
  
#line 659 
  __retres = (void *)0;
  return_label: 
#line 659 
                return __retres;
}


#line 664  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_20 *cf_arg_20;
  int tmp;
  
#line 667 
  tmp = ldv_undef_int();
  
#line 667 
  switch (tmp) {
    case 0: 
#line 668 
    ;
    
#line 669 
    ret = pthread_join(ldv_thread_20,(void **)0);
    
#line 670 
    __VERIFIER_assume(ret == 0);
    
#line 671 
    goto ldv_44876;
    default: 
#line 673 
    ;
    
#line 673 
    __VERIFIER_assume(0);
  }
  ldv_44876: 
#line 674 
  ;
  
#line 675 
  return;
}


#line 679  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 686 
  ldv_1_ret = ldv_emg_cxgb3_init_module();
  
#line 687 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 690 
  tmp = ldv_undef_int();
  
#line 690 
  if (tmp != 0) {
    
#line 692 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 696 
    __retres = (void *)0;
    
#line 696 
    goto return_label;
  }
  else {
    
#line 700 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 705 
    ldv_emg_cxgb3_cleanup_module();
    
#line 709 
    __retres = (void *)0;
    
#line 709 
    goto return_label;
  }
  
#line 712 
  __retres = (void *)0;
  return_label: 
#line 712 
                return __retres;
}


#line 717  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_12_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_20 *cf_arg_20;
  int tmp;
  
#line 720 
  tmp = ldv_undef_int();
  
#line 720 
  switch (tmp) {
    case 0: 
#line 721 
    ;
    
#line 722 
    cf_arg_20 = (struct ldv_struct_pci_scenario_20 *)ldv_xmalloc(16UL);
    
#line 723 
    cf_arg_20->arg0 = arg0;
    
#line 724 
    ret = pthread_create(& ldv_thread_20,(pthread_attr_t const *)0,& ldv_pci_scenario_20,(void *)cf_arg_20);
    
#line 725 
    __VERIFIER_assume(ret == 0);
    
#line 726 
    goto ldv_44888;
    default: 
#line 728 
    ;
    
#line 728 
    __VERIFIER_assume(0);
  }
  ldv_44888: 
#line 729 
  ;
  
#line 730 
  return;
}


#line 734  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_13_work_struct;
  int tmp;
  
#line 741 
  tmp = ldv_undef_int();
  
#line 741 
  if (tmp != 0) {
    
#line 743 
    ldv_13_work_struct = arg0;
    
#line 747 
    if (ldv_13_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 749 
      (*(ldv_13_work_struct->func))(ldv_13_work_struct); else ;
    
#line 754 
    __retres = (_Bool)1;
    
#line 754 
    goto return_label;
  }
  else {
    
#line 761 
    __retres = (_Bool)0;
    
#line 761 
    goto return_label;
  }
  return_label: 
#line 741 
                return __retres;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_15_timer_list;
  
#line 777 
  ldv_15_timer_list = arg0;
  
#line 781 
  ldv_dispatch_instance_deregister_15_1(ldv_15_timer_list);
  
#line 782 
  ;
  
#line 782 
  __retres = 0;
  
#line 782 
  return __retres;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 793 
  struct pci_driver *ldv_9_pci_driver = ldv_emg_alias_driver_2;
  
#line 796 
  ldv_9_pci_driver = arg0;
  
#line 800 
  ldv_dispatch_deregister_9_1(ldv_9_pci_driver);
  
#line 804 
  goto return_label;
  return_label: 
#line 806 
                return;
}


#line 811  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_19 *cf_arg_19;
  int tmp;
  
#line 814 
  tmp = ldv_undef_int();
  
#line 814 
  switch (tmp) {
    case 0: 
#line 815 
    ;
    
#line 816 
    cf_arg_19 = (struct ldv_struct_random_allocationless_scenario_19 *)ldv_xmalloc(16UL);
    
#line 817 
    cf_arg_19->arg0 = arg0;
    
#line 818 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_19,(void *)cf_arg_19);
    
#line 819 
    __VERIFIER_assume(ret == 0);
    
#line 820 
    goto ldv_44908;
    default: 
#line 822 
    ;
    
#line 822 
    __VERIFIER_assume(0);
  }
  ldv_44908: 
#line 823 
  ;
  
#line 824 
  return;
}


#line 828  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_3_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_21 *cf_arg_21;
  int tmp;
  
#line 831 
  tmp = ldv_undef_int();
  
#line 831 
  switch (tmp) {
    case 0: 
#line 832 
    ;
    
#line 833 
    cf_arg_21 = (struct ldv_struct_timer_scenario_21 *)ldv_xmalloc(16UL);
    
#line 834 
    cf_arg_21->arg0 = arg0;
    
#line 835 
    ret = pthread_create(& ldv_thread_21,(pthread_attr_t const *)0,& ldv_timer_scenario_21,(void *)cf_arg_21);
    
#line 836 
    __VERIFIER_assume(ret == 0);
    
#line 837 
    goto ldv_44916;
    default: 
#line 839 
    ;
    
#line 839 
    __VERIFIER_assume(0);
  }
  ldv_44916: 
#line 840 
  ;
  
#line 841 
  return;
}


#line 845  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_19(void *arg0)
{
  void *__retres;
  struct ethtool_cmd *ldv_19_ldv_param_1_3;
  unsigned long long ldv_19_ldv_param_1_10;
  struct ethtool_eeprom *ldv_19_ldv_param_1_13;
  struct ethtool_ringparam *ldv_19_ldv_param_1_15;
  unsigned char *ldv_19_ldv_param_2_28;
  struct ethtool_stats *ldv_19_ldv_param_1_8;
  struct ethtool_ringparam *ldv_19_ldv_param_1_29;
  struct ethtool_pauseparam *ldv_19_ldv_param_1_2;
  struct ethtool_cmd *ldv_19_ldv_param_1_4;
  void *ldv_19_ldv_param_2_25;
  struct ethtool_drvinfo *ldv_19_ldv_param_1_11;
  struct sk_buff *ldv_19_ldv_param_0_16;
  int ldv_19_ldv_param_2_22;
  int ldv_19_ldv_param_1_26;
  unsigned int ldv_19_ldv_param_1_27;
  unsigned long long ldv_19_ldv_param_1_12;
  struct ethtool_coalesce *ldv_19_ldv_param_1_23;
  struct ethtool_eeprom *ldv_19_ldv_param_1_18;
  struct ethtool_wolinfo *ldv_19_ldv_param_1_20;
  unsigned char *ldv_19_ldv_param_2_19;
  struct ifreq *ldv_19_ldv_param_1_21;
  unsigned int ldv_19_ldv_param_1_6;
  struct ethtool_pauseparam *ldv_19_ldv_param_1_31;
  void *ldv_19_ldv_param_1_17;
  struct ethtool_regs *ldv_19_ldv_param_1_24;
  unsigned char *ldv_19_ldv_param_2_14;
  enum ethtool_phys_id_state *ldv_19_ldv_param_1_5;
  struct net_device *ldv_19_container;
  unsigned long long *ldv_19_ldv_param_2_9;
  struct ethtool_coalesce *ldv_19_ldv_param_1_30;
  int ldv_19_ldv_param_1_7;
  int tmp_21;
  
#line 880 
  struct ldv_struct_random_allocationless_scenario_19 *data = (struct ldv_struct_random_allocationless_scenario_19 *)arg0;
  
#line 885 
  if (data != (struct ldv_struct_random_allocationless_scenario_19 *)0) {
    
#line 886 
    ldv_19_container = data->arg0;
    
#line 887 
    ldv_free((void *)data);
  }
  else ;
  
#line 895 
  goto ldv_call_19;
  
#line 897 
  __retres = (void *)0;
  
#line 897 
  goto return_label;
  ldv_call_19: 
#line 900 
  ;
  
#line 903 
  tmp_21 = ldv_undef_int();
  
#line 903 
  if (tmp_21 != 0) {
    int tmp_0;
    
#line 905 
    ldv_19_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 908 
    tmp_0 = ldv_undef_int();
    
#line 908 
    switch (tmp_0) {
      case 1: 
#line 909 
      ;
      
#line 912 
      ldv_emg_wrapper_get_pauseparam_2(ldv_19_container,ldv_19_ldv_param_1_2);
      
#line 915 
      goto ldv_44955;
      case 2: 
#line 917 
      ;
      
#line 920 
      ldv_emg_wrapper_cxgb_set_rxmode_7(ldv_19_container);
      
#line 923 
      goto ldv_44955;
      case 3: 
#line 925 
      ;
      
#line 928 
      ldv_emg_wrapper_restart_autoneg_26(ldv_19_container);
      
#line 931 
      goto ldv_44955;
      case 4: 
#line 933 
      ;
      
#line 935 
      ldv_19_ldv_param_1_31 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 940 
      ldv_emg_wrapper_set_pauseparam_31(ldv_19_container,ldv_19_ldv_param_1_31);
      
#line 944 
      ldv_free((void *)ldv_19_ldv_param_1_31);
      
#line 947 
      goto ldv_44955;
      case 5: 
#line 949 
      ;
      
#line 951 
      ldv_19_ldv_param_1_30 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 956 
      ldv_emg_wrapper_set_coalesce_30(ldv_19_container,ldv_19_ldv_param_1_30);
      
#line 960 
      ldv_free((void *)ldv_19_ldv_param_1_30);
      
#line 963 
      goto ldv_44955;
      case 6: 
#line 965 
      ;
      
#line 968 
      ldv_emg_wrapper_get_regs_len_29(ldv_19_container);
      
#line 971 
      goto ldv_44955;
      case 7: 
#line 973 
      ;
      
#line 975 
      ldv_19_ldv_param_1_29 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 980 
      ldv_emg_wrapper_get_sge_param_12(ldv_19_container,ldv_19_ldv_param_1_29);
      
#line 984 
      ldv_free((void *)ldv_19_ldv_param_1_29);
      
#line 987 
      goto ldv_44955;
      case 8: 
#line 989 
      ;
      
#line 991 
      ldv_19_ldv_param_2_28 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 996 
      ldv_emg_wrapper_get_strings_6(ldv_19_container,ldv_19_ldv_param_1_27,ldv_19_ldv_param_2_28);
      
#line 1000 
      ldv_free((void *)ldv_19_ldv_param_2_28);
      
#line 1003 
      goto ldv_44955;
      case 9: 
#line 1005 
      ;
      
#line 1008 
      ldv_emg_wrapper_cxgb_netpoll_32(ldv_19_container);
      
#line 1011 
      goto ldv_44955;
      case 10: 
#line 1013 
      ;
      
#line 1016 
      ldv_emg_wrapper_cxgb_get_stats_25(ldv_19_container);
      
#line 1019 
      goto ldv_44955;
      case 11: 
#line 1021 
      ;
      
#line 1027 
      ldv_emg_wrapper_get_sset_count_24(ldv_19_container,ldv_19_ldv_param_1_26);
      
#line 1033 
      goto ldv_44955;
      case 12: 
#line 1035 
      ;
      
#line 1037 
      ldv_19_ldv_param_2_25 = ldv_xmalloc_unknown_size(0UL);
      
#line 1038 
      ldv_19_ldv_param_1_24 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 1043 
      ldv_emg_wrapper_get_regs_23(ldv_19_container,ldv_19_ldv_param_1_24,ldv_19_ldv_param_2_25);
      
#line 1047 
      ldv_free(ldv_19_ldv_param_2_25);
      
#line 1048 
      ldv_free((void *)ldv_19_ldv_param_1_24);
      
#line 1051 
      goto ldv_44955;
      case 13: 
#line 1053 
      ;
      
#line 1055 
      ldv_19_ldv_param_1_23 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1060 
      ldv_emg_wrapper_get_coalesce_28(ldv_19_container,ldv_19_ldv_param_1_23);
      
#line 1064 
      ldv_free((void *)ldv_19_ldv_param_1_23);
      
#line 1067 
      goto ldv_44955;
      case 14: 
#line 1069 
      ;
      
#line 1071 
      ldv_19_ldv_param_1_21 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1076 
      ldv_emg_wrapper_cxgb_ioctl_22(ldv_19_container,ldv_19_ldv_param_1_21,ldv_19_ldv_param_2_22);
      
#line 1080 
      ldv_free((void *)ldv_19_ldv_param_1_21);
      
#line 1083 
      goto ldv_44955;
      case 15: 
#line 1085 
      ;
      
#line 1087 
      ldv_19_ldv_param_1_20 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1092 
      ldv_emg_wrapper_get_wol_21(ldv_19_container,ldv_19_ldv_param_1_20);
      
#line 1096 
      ldv_free((void *)ldv_19_ldv_param_1_20);
      
#line 1099 
      goto ldv_44955;
      case 16: 
#line 1101 
      ;
      
#line 1103 
      ldv_19_ldv_param_1_18 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1104 
      ldv_19_ldv_param_2_19 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1109 
      ldv_emg_wrapper_get_eeprom_3(ldv_19_container,ldv_19_ldv_param_1_18,ldv_19_ldv_param_2_19);
      
#line 1113 
      ldv_free((void *)ldv_19_ldv_param_1_18);
      
#line 1114 
      ldv_free((void *)ldv_19_ldv_param_2_19);
      
#line 1117 
      goto ldv_44955;
      case 17: 
#line 1119 
      ;
      
#line 1121 
      ldv_19_ldv_param_1_17 = ldv_xmalloc_unknown_size(0UL);
      
#line 1126 
      ldv_emg_wrapper_cxgb_set_mac_addr_19(ldv_19_container,ldv_19_ldv_param_1_17);
      
#line 1130 
      ldv_free(ldv_19_ldv_param_1_17);
      
#line 1133 
      goto ldv_44955;
      case 18: 
#line 1135 
      ;
      
#line 1137 
      ldv_19_ldv_param_0_16 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1142 
      t3_eth_xmit(ldv_19_ldv_param_0_16,ldv_19_container);
      
#line 1146 
      ldv_free((void *)ldv_19_ldv_param_0_16);
      
#line 1149 
      goto ldv_44955;
      case 19: 
#line 1151 
      ;
      
#line 1154 
      ldv_emg_wrapper_get_msglevel_18(ldv_19_container);
      
#line 1157 
      goto ldv_44955;
      case 20: 
#line 1159 
      ;
      
#line 1161 
      ldv_19_ldv_param_1_15 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1166 
      ldv_emg_wrapper_set_sge_param_17(ldv_19_container,ldv_19_ldv_param_1_15);
      
#line 1170 
      ldv_free((void *)ldv_19_ldv_param_1_15);
      
#line 1173 
      goto ldv_44955;
      case 21: 
#line 1175 
      ;
      
#line 1177 
      ldv_19_ldv_param_2_14 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1178 
      ldv_19_ldv_param_1_13 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1183 
      ldv_emg_wrapper_set_eeprom_16(ldv_19_container,ldv_19_ldv_param_1_13,ldv_19_ldv_param_2_14);
      
#line 1187 
      ldv_free((void *)ldv_19_ldv_param_2_14);
      
#line 1188 
      ldv_free((void *)ldv_19_ldv_param_1_13);
      
#line 1191 
      goto ldv_44955;
      case 22: 
#line 1193 
      ;
      
#line 1196 
      ldv_emg_wrapper_get_eeprom_len_33(ldv_19_container);
      
#line 1199 
      goto ldv_44955;
      case 23: 
#line 1201 
      ;
      
#line 1207 
      ldv_emg_wrapper_cxgb_fix_features_15(ldv_19_container,ldv_19_ldv_param_1_12);
      
#line 1213 
      goto ldv_44955;
      case 24: 
#line 1215 
      ;
      
#line 1217 
      ldv_19_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1222 
      ldv_emg_wrapper_get_drvinfo_14(ldv_19_container,ldv_19_ldv_param_1_11);
      
#line 1226 
      ldv_free((void *)ldv_19_ldv_param_1_11);
      
#line 1229 
      goto ldv_44955;
      case 25: 
#line 1231 
      ;
      
#line 1237 
      ldv_emg_wrapper_cxgb_set_features_13(ldv_19_container,ldv_19_ldv_param_1_10);
      
#line 1243 
      goto ldv_44955;
      case 26: 
#line 1245 
      ;
      
#line 1248 
      (*ldv_emg_alias_ethtool_op_get_link_11)(ldv_19_container);
      
#line 1251 
      goto ldv_44955;
      case 27: 
#line 1253 
      ;
      
#line 1256 
      (*ldv_emg_alias_eth_validate_addr_8)(ldv_19_container);
      
#line 1259 
      goto ldv_44955;
      case 28: 
#line 1261 
      ;
      
#line 1263 
      ldv_19_ldv_param_2_9 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1264 
      ldv_19_ldv_param_1_8 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1269 
      ldv_emg_wrapper_get_stats_9(ldv_19_container,ldv_19_ldv_param_1_8,ldv_19_ldv_param_2_9);
      
#line 1273 
      ldv_free((void *)ldv_19_ldv_param_2_9);
      
#line 1274 
      ldv_free((void *)ldv_19_ldv_param_1_8);
      
#line 1277 
      goto ldv_44955;
      case 29: 
#line 1279 
      ;
      
#line 1285 
      ldv_emg_wrapper_cxgb_change_mtu_10(ldv_19_container,ldv_19_ldv_param_1_7);
      
#line 1291 
      goto ldv_44955;
      case 30: 
#line 1293 
      ;
      
#line 1299 
      ldv_emg_wrapper_set_msglevel_27(ldv_19_container,ldv_19_ldv_param_1_6);
      
#line 1305 
      goto ldv_44955;
      case 31: 
#line 1307 
      ;
      
#line 1309 
      ldv_19_ldv_param_1_5 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1314 
      ldv_emg_wrapper_set_phys_id_5(ldv_19_container,*ldv_19_ldv_param_1_5);
      
#line 1318 
      ldv_free((void *)ldv_19_ldv_param_1_5);
      
#line 1321 
      goto ldv_44955;
      case 32: 
#line 1323 
      ;
      
#line 1325 
      ldv_19_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1330 
      ldv_emg_wrapper_set_settings_4(ldv_19_container,ldv_19_ldv_param_1_4);
      
#line 1334 
      ldv_free((void *)ldv_19_ldv_param_1_4);
      
#line 1337 
      goto ldv_44955;
      case 33: 
#line 1339 
      ;
      
#line 1341 
      ldv_19_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1346 
      ldv_emg_wrapper_get_settings_20(ldv_19_container,ldv_19_ldv_param_1_3);
      
#line 1350 
      ldv_free((void *)ldv_19_ldv_param_1_3);
      
#line 1353 
      goto ldv_44955;
      default: 
#line 1355 
      ;
      
#line 1355 
      __VERIFIER_assume(0);
    }
    ldv_44955: 
#line 1358 
    ;
    
#line 1358 
    ldv_free((void *)ldv_19_ldv_param_1_2);
    
#line 1365 
    goto ldv_call_19;
  }
  else {
    
#line 1373 
    __retres = (void *)0;
    
#line 1373 
    goto return_label;
  }
  
#line 1376 
  __retres = (void *)0;
  return_label: 
#line 1376 
                return __retres;
}


#line 1381  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_5_netdev;
  
#line 1387 
  ldv_5_netdev = arg0;
  
#line 1392 
  ldv_emg_wrapper_cxgb_close_2(ldv_5_netdev);
  
#line 1396 
  ldv_dispatch_deregister_5_1(ldv_5_netdev);
  
#line 1400 
  goto return_label;
  return_label: 
#line 1402 
                return;
}


#line 1407  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_16_line;
  
#line 1413 
  ldv_16_line = (int)arg0;
  
#line 1417 
  ldv_dispatch_irq_deregister_16_1(ldv_16_line);
  
#line 1421 
  goto return_label;
  return_label: 
#line 1423 
                return;
}


#line 1428  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_queue_delayed_work(struct workqueue_struct *arg0, struct delayed_work *arg1, unsigned long arg2)
{
  _Bool __retres;
  struct work_struct *ldv_6_ldv_param_0_2;
  struct delayed_work *ldv_6_delayed_work;
  int tmp_0;
  
#line 1436 
  tmp_0 = ldv_undef_int();
  
#line 1436 
  if (tmp_0 != 0) {
    
#line 1438 
    ldv_6_delayed_work = arg1;
    
#line 1442 
    ldv_6_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 1446 
    if (ldv_6_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 1448 
      (*(ldv_6_delayed_work->work.func))(ldv_6_ldv_param_0_2); else ;
    
#line 1453 
    ldv_free((void *)ldv_6_ldv_param_0_2);
    
#line 1457 
    __retres = (_Bool)1;
    
#line 1457 
    goto return_label;
  }
  else {
    
#line 1464 
    __retres = (_Bool)0;
    
#line 1464 
    goto return_label;
  }
  return_label: 
#line 1436 
                return __retres;
}


#line 1474  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_3_timer_list;
  int tmp_0;
  
#line 1481 
  tmp_0 = ldv_undef_int();
  
#line 1481 
  if (tmp_0 != 0) {
    
#line 1483 
    ldv_3_timer_list = arg0;
    
#line 1487 
    ldv_dispatch_instance_register_3_3(ldv_3_timer_list);
    
#line 1491 
    __retres = 0;
    
#line 1491 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1498 
    tmp = ldv_undef_int_negative();
    
#line 1498 
    __retres = tmp;
    
#line 1498 
    goto return_label;
  }
  return_label: 
#line 1481 
                return __retres;
}


#line 1508  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_flush_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 1515 
  tmp = ldv_undef_int();
  
#line 1515 
  if (tmp != 0) {
    
#line 1517 
    ldv_8_work_struct = arg0;
    
#line 1521 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1523 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 1528 
    __retres = (_Bool)1;
    
#line 1528 
    goto return_label;
  }
  else {
    
#line 1535 
    __retres = (_Bool)0;
    
#line 1535 
    goto return_label;
  }
  return_label: 
#line 1515 
                return __retres;
}


#line 1545  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1551 
  ldv_2_netdev = arg0;
  
#line 1552 
  ldv_free((void *)ldv_2_netdev);
  
#line 1556 
  goto return_label;
  return_label: 
#line 1558 
                return;
}


#line 1563  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_16_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_16 *cf_arg_18;
  int tmp;
  
#line 1566 
  tmp = ldv_undef_int();
  
#line 1566 
  switch (tmp) {
    case 0: 
#line 1567 
    ;
    
#line 1568 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 1569 
    __VERIFIER_assume(ret == 0);
    
#line 1570 
    goto ldv_45024;
    default: 
#line 1572 
    ;
    
#line 1572 
    __VERIFIER_assume(0);
  }
  ldv_45024: 
#line 1573 
  ;
  
#line 1574 
  return;
}


#line 1578  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_10_netdev;
  int tmp_3;
  
#line 1582 
  int ldv_10_ret = ldv_undef_int();
  
#line 1585 
  ldv_10_ret = ldv_undef_int();
  
#line 1588 
  tmp_3 = ldv_undef_int();
  
#line 1588 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1590 
    ldv_10_netdev = arg0;
    
#line 1595 
    ldv_10_ret = ldv_emg_wrapper_cxgb_open_2(ldv_10_netdev);
    
#line 1598 
    tmp_1 = ldv_undef_int();
    
#line 1598 
    if (tmp_1 != 0) {
      
#line 1600 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 1604 
      ldv_dispatch_register_10_4(ldv_10_netdev);
      
#line 1608 
      __retres = 0;
      
#line 1608 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1615 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 1616 
      ldv_failed_register_netdev();
      
#line 1617 
      tmp_0 = ldv_undef_int_negative();
      
#line 1617 
      __retres = tmp_0;
      
#line 1617 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1625 
    ldv_failed_register_netdev();
    
#line 1626 
    tmp_2 = ldv_undef_int_negative();
    
#line 1626 
    __retres = tmp_2;
    
#line 1626 
    goto return_label;
  }
  return_label: 
#line 1588 
                return __retres;
}


