/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned char u_char;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short u_short;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int u_int;

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long u_long;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 796 
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_188 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_188 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_190 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_191 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_192 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_193 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_195 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_194 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_195 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_196 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_197 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_189 {
   int _pad[28U] ;
   struct __anonstruct__kill_190 _kill ;
   struct __anonstruct__timer_191 _timer ;
   struct __anonstruct__rt_192 _rt ;
   struct __anonstruct__sigchld_193 _sigchld ;
   struct __anonstruct__sigfault_194 _sigfault ;
   struct __anonstruct__sigpoll_196 _sigpoll ;
   struct __anonstruct__sigsys_197 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_189 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_205 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_207 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_206 {
   struct keyring_index_key index_key ;
   struct __anonstruct_207 __anonCompField___anonunion_206_59 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_208 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_210 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_209 {
   union __anonunion_payload_210 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_204 __anonCompField_key_57 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_205 __anonCompField_key_58 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_206 __anonCompField_key_60 ;
   union __anonunion_type_data_208 type_data ;
   union __anonunion_209 __anonCompField_key_61 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291 
struct mnt_namespace;

#line 2292 
struct ipc_namespace;

#line 2293 
struct net;

#line 2293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct proc_ns_operations;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct pidmap {
   atomic_t nr_free ;
   void *page ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct fs_pin;

#line 18 
struct vfsmount;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct pid_namespace {
   struct kref kref ;
   struct pidmap pidmap[128U] ;
   struct callback_head rcu ;
   int last_pid ;
   unsigned int nr_hashed ;
   struct task_struct *child_reaper ;
   struct kmem_cache *pid_cachep ;
   unsigned int level ;
   struct pid_namespace *parent ;
   struct vfsmount *proc_mnt ;
   struct dentry *proc_self ;
   struct dentry *proc_thread_self ;
   struct fs_pin *bacct ;
   struct user_namespace *user_ns ;
   struct work_struct proc_work ;
   kgid_t pid_gid ;
   int hide_pid ;
   int reboot ;
   struct ns_common ns ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct eisa_device_id {
   char sig[8U] ;
   kernel_ulong_t driver_data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_232 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_232 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 1189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct eisa_device {
   struct eisa_device_id id ;
   int slot ;
   int state ;
   unsigned long base_addr ;
   struct resource res[4U] ;
   u64 dma_mask ;
   struct device dev ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_233 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_233 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_235 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_235 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_236 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_236 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_237 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_237 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_238 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_238 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_239 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_239 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_240 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_240 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_241 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_241 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_242 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_242 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_243 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_244 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_243 ifr_ifrn ;
   union __anonunion_ifr_ifru_244 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_249 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_248 {
   struct __anonstruct_249 __anonCompField___anonunion_248_67 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_248 __anonCompField_lockref_68 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_251 {
   u32 hash ;
   u32 len ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_250 {
   struct __anonstruct_251 __anonCompField___anonunion_250_69 ;
   u64 hash_len ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_250 __anonCompField_qstr_70 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_252 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_252 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_256 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_255 {
   struct __anonstruct_256 __anonCompField___anonunion_255_71 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_255 __anonCompField_radix_tree_node_72 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_260 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_260 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_261 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_261 __anonCompField_kqid_74 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_264 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_265 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_266 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_264 __anonCompField_inode_75 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_265 __anonCompField_inode_76 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_266 __anonCompField_inode_77 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_267 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_267 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_269 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_268 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_269 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_268 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_284 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_284 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27478 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27478 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_289 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_290 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_293 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   u64 v64 ;
   struct __anonstruct_293 __anonCompField___anonunion_292_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_292 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_295 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_296 __anonCompField___anonstruct_295_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_294 {
   struct __anonstruct_295 __anonCompField___anonunion_294_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_298 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __wsum csum ;
   struct __anonstruct_298 __anonCompField___anonunion_297_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_299 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_300 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_301 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_294 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_297 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_299 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_300 __anonCompField_sk_buff_91 ;
   union __anonunion_301 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net_generic;

#line 17 
struct netns_ipvs;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_310 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_310 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29336 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29336 phy_interface_t;

#line 126 
enum ldv_29389 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29389 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31082 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31083 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_320 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_321 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_322 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_320 adj_list ;
   struct __anonstruct_all_adj_list_321 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31082 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31083 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_322 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma.h"
struct de4x5_ioctl {
   unsigned short cmd ;
   unsigned short len ;
   unsigned char *data ;
};

#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct __anonstruct_spd_331 {
   int reg ;
   int mask ;
   int value ;
};

#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct phy_table {
   int reset ;
   int id ;
   int ta ;
   struct __anonstruct_spd_331 spd ;
};

#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct __anonstruct_spd_332 {
   int reg ;
   int mask ;
   int value ;
};

#line 500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct mii_phy {
   int reset ;
   int id ;
   int ta ;
   struct __anonstruct_spd_332 spd ;
   int addr ;
   u_char *gep ;
   u_char *rst ;
   u_int mc ;
   u_int ana ;
   u_int fdx ;
   u_int ttm ;
   u_int mci ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct sia_phy {
   u_char mc ;
   u_char ext ;
   int csr13 ;
   int csr14 ;
   int csr15 ;
   int gepc ;
   int gep ;
};

#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct parameters {
   bool fdx ;
   int autosense ;
};

#line 674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct de4x5_srom {
   char sub_vendor_id[2U] ;
   char sub_system_id[2U] ;
   char reserved[12U] ;
   char id_block_crc ;
   char reserved2 ;
   char version ;
   char num_controllers ;
   char ieee_addr[6U] ;
   char info[100U] ;
   short chksum ;
};

#line 743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct de4x5_desc {
   __le32 volatile status ;
   __le32 des1 ;
   __le32 buf ;
   __le32 next ;
};

#line 764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct pkt_stats {
   u_int bins[16U] ;
   u_int unicast ;
   u_int multicast ;
   u_int broadcast ;
   u_int excessive_collisions ;
   u_int tx_underruns ;
   u_int excessive_underruns ;
   u_int rx_runt_frames ;
   u_int rx_collision ;
   u_int rx_dribble ;
   u_int rx_overflow ;
};

#line 786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct __anonstruct_cache_333 {
   u_long lock ;
   s32 csr0 ;
   s32 csr6 ;
   s32 csr7 ;
   s32 gep ;
   s32 gepc ;
   s32 csr13 ;
   s32 csr14 ;
   s32 csr15 ;
   int save_cnt ;
   struct sk_buff_head queue ;
};

#line 786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct de4x5_private {
   char adapter_name[80U] ;
   u_long interrupt ;
   struct de4x5_desc *rx_ring ;
   struct de4x5_desc *tx_ring ;
   struct sk_buff *tx_skb[32U] ;
   struct sk_buff *rx_skb[8U] ;
   int rx_new ;
   int rx_old ;
   int tx_new ;
   int tx_old ;
   char setup_frame[192U] ;
   char frame[64U] ;
   spinlock_t lock ;
   struct net_device_stats stats ;
   struct pkt_stats pktStats ;
   char rxRingSize ;
   char txRingSize ;
   int bus ;
   int bus_num ;
   int device ;
   int state ;
   int chipset ;
   s32 irq_mask ;
   s32 irq_en ;
   int media ;
   int c_media ;
   bool fdx ;
   int linkOK ;
   int autosense ;
   bool tx_enable ;
   int setup_f ;
   int local_state ;
   struct mii_phy phy[8U] ;
   struct sia_phy sia ;
   int active ;
   int mii_cnt ;
   int timeout ;
   struct timer_list timer ;
   int tmp ;
   struct __anonstruct_cache_333 cache ;
   struct de4x5_srom srom ;
   int cfrv ;
   int rx_ovf ;
   bool useSROM ;
   bool useMII ;
   int asBitValid ;
   int asPolarity ;
   int asBit ;
   int defMedium ;
   int tcount ;
   int infoblock_init ;
   int infoleaf_offset ;
   s32 infoblock_csr6 ;
   int infoblock_media ;
   int (*infoleaf_fn)(struct net_device *) ;
   u_char *rst ;
   u_char ibn ;
   struct parameters params ;
   struct device *gendev ;
   dma_addr_t dma_rings ;
   int dma_size ;
   char *rx_bufs ;
};

#line 879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct __anonstruct_last_334 {
   int chipset ;
   int bus ;
   int irq ;
   u_char addr[6U] ;
};

#line 1028  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct InfoLeaf {
   int chipset ;
   int (*fn)(struct net_device *) ;
};

#line 3992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
struct __anonstruct_llsig_341 {
   u32 a ;
   u32 b ;
};

#line 3992  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
union __anonunion_dev_340 {
   struct __anonstruct_llsig_341 llsig ;
   char Sig[8U] ;
};

#line 5367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
union __anonunion_tmp_358 {
   u8 addr[144U] ;
   u16 sval[72U] ;
   u32 lval[36U] ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_13 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_12 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 31  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_14 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 36  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_15 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/fvtp/.tmp_de4x5.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u32 __le32_to_cpup(__le32 const *p)
{
  __u32 __retres;
  
#line 57 
  __retres = *p;
  
#line 57 
  return __retres;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 const *p)
{
  __u16 __retres;
  
#line 65 
  __retres = *p;
  
#line 65 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 248  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_fault(char const *, int);


#line 402 
int sprintf(char *, char const * , ...);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 71 
char *strstr(char const *, char const *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_81(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_82(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_83(spinlock_t *lock);


#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 452 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 453 
  return;
}


#line 486 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_96(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 74 
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_93(spinlock_t *ldv_func_arg1);


#line 90 
static void ldv___ldv_spin_lock_95(spinlock_t *ldv_func_arg1);


#line 98 
void ldv_spin_model_lock(char *);


#line 99 
void ldv_spin_model_unlock(char *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_92(struct timer_list *ldv_func_arg1);


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
extern struct resource ioport_resource;


#line 192 
struct resource *__request_region(struct resource *, resource_size_t, resource_size_t, char const *, int);


#line 201 
void __release_region(struct resource *, resource_size_t, resource_size_t);


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static phys_addr_t virt_to_phys(void volatile *address)
{
  phys_addr_t tmp;
  
#line 120 
  tmp = (phys_addr_t)__phys_addr((unsigned long)address);
  
#line 120 
  return tmp;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outb(unsigned char value, int port)
{
  
#line 322 
  ldv_inline_asm();
  
#line 323 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char inb(int port)
{
  unsigned char value;
  
#line 321 
  ldv_inline_asm();
  
#line 320 
  return value;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outl(unsigned int value, int port)
{
  
#line 324 
  ldv_inline_asm();
  
#line 325 
  return;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int inl(int port)
{
  unsigned int value;
  
#line 323 
  ldv_inline_asm();
  
#line 322 
  return value;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 652 
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 664 
void copy_to_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_75(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_76(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 157 
static void ldv_free_irq_85(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
bool capable(int);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_97(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_98(struct pci_driver *ldv_func_arg1);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void kfree_skb(struct sk_buff *);


#line 775 
void consume_skb(struct sk_buff *);


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head const *list)
{
  int __retres;
  
#line 1013 
  __retres = (struct sk_buff const *)list->next == (struct sk_buff const *)list;
  
#line 1013 
  return __retres;
}


#line 1259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *skb_peek(struct sk_buff_head const *list_)
{
  
#line 1261 
  struct sk_buff *skb = list_->next;
  
#line 1263 
  if (skb == (struct sk_buff *)list_) 
#line 1264 
                                      skb = (struct sk_buff *)0; else ;
  
#line 1265 
  return skb;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1333 
  tmp = (struct sk_buff *)list;
  
#line 1333 
  list->next = tmp;
  
#line 1333 
  list->prev = tmp;
  
#line 1334 
  list->qlen = 0U;
  
#line 1335 
  return;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  
#line 1347 
  spinlock_check(& list->lock);
  {
    struct lock_class_key __key;
    
#line 1347 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_18.rlock,"&(&list->lock)->rlock",& __key);
  }
  
#line 1348 
  __skb_queue_head_init(list);
  
#line 1349 
  return;
}


#line 1366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_insert(struct sk_buff *newsk, struct sk_buff *prev, struct sk_buff *next, struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1370 
  newsk->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.next = next;
  
#line 1371 
  newsk->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.prev = prev;
  
#line 1372 
  tmp = newsk;
  
#line 1372 
  prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.next = tmp;
  
#line 1372 
  next->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.prev = tmp;
  
#line 1373 
  list->qlen += 1U;
  
#line 1374 
  return;
}


#line 1464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_after(struct sk_buff_head *list, struct sk_buff *prev, struct sk_buff *newsk)
{
  
#line 1468 
  __skb_insert(newsk,prev,prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.next,list);
  
#line 1469 
  return;
}


#line 1474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_before(struct sk_buff_head *list, struct sk_buff *next, struct sk_buff *newsk)
{
  
#line 1478 
  __skb_insert(newsk,next->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.prev,next,list);
  
#line 1479 
  return;
}


#line 1492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head(struct sk_buff_head *list, struct sk_buff *newsk)
{
  
#line 1495 
  __skb_queue_after(list,(struct sk_buff *)list,newsk);
  
#line 1496 
  return;
}


#line 1509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_tail(struct sk_buff_head *list, struct sk_buff *newsk)
{
  
#line 1512 
  __skb_queue_before(list,(struct sk_buff *)list,newsk);
  
#line 1513 
  return;
}


#line 1520  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_unlink(struct sk_buff *skb, struct sk_buff_head *list)
{
  struct sk_buff *next;
  struct sk_buff *prev;
  struct sk_buff *tmp;
  
#line 1524 
  list->qlen -= 1U;
  
#line 1525 
  next = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.next;
  
#line 1526 
  prev = skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.prev;
  
#line 1527 
  tmp = (struct sk_buff *)0;
  
#line 1527 
  skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.prev = tmp;
  
#line 1527 
  skb->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.next = tmp;
  
#line 1528 
  next->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.prev = prev;
  
#line 1529 
  prev->__anonCompField_sk_buff_87.__anonCompField___anonunion_294_86.next = next;
  
#line 1530 
  return;
}


#line 1541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__skb_dequeue(struct sk_buff_head *list)
{
  
#line 1543 
  struct sk_buff *skb = skb_peek((struct sk_buff_head const *)list);
  
#line 1544 
  if (skb != (struct sk_buff *)0) 
#line 1545 
                                  __skb_unlink(skb,list); else ;
  
#line 1546 
  return skb;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_purge(struct sk_buff_head *list)
{
  struct sk_buff *skb;
  
#line 2134 
  goto ldv_37248;
  ldv_37247: 
#line 2135 
  ;
  
#line 2135 
  kfree_skb(skb);
  ldv_37248: 
#line 2136 
  ;
  
#line 2134 
  skb = __skb_dequeue(list);
  
#line 2134 
  if (skb != (struct sk_buff *)0) 
#line 2136 
                                  goto ldv_37247; else 
#line 2139 
                                                       goto ldv_37249;
  ldv_37249: 
#line 2140 
  ;
  
#line 2141 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 3355 
static int ldv_register_netdev_74(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1);


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void const *p)
{
  u16 tmp;
  
#line 9 
  tmp = __le16_to_cpup((__le16 const *)p);
  
#line 9 
  return tmp;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u32 get_unaligned_le32(void const *p)
{
  u32 tmp;
  
#line 14 
  tmp = __le32_to_cpup((__le32 const *)p);
  
#line 14 
  return tmp;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 45 
int eth_mac_addr(struct net_device *, void *);


#line 46 
int eth_change_mtu(struct net_device *, int);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static char const version[56U] = {(char)'\001', (char)'\000'};

#line 536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct phy_table phy_info[5U] = {{.reset = 0, .id = 8192, .ta = 1, .spd = {.reg = 25, .mask = 64, .value = 0}}, {.reset = 1, .id = 992, .ta = 1, .spd = {.reg = 16, .mask = 2, .value = 2}}, {.reset = 0, .id = 22, .ta = 1, .spd = {.reg = 18, .mask = 16, .value = 16}}, {.reset = 0, .id = 20, .ta = 1, .spd = {.reg = 5, .mask = 32, .value = 32}}, {.reset = 0, .id = 30736, .ta = 1, .spd = {.reg = 20, .mask = 2048, .value = 2048}}};

#line 556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static char const enet_det[2U][6U] = {{(char)0, (char)0, (char)(-64), (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)(-24), (char)0, (char)0, (char)0}};

#line 569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static char const srom_repair_info[1U][100U] = {{(char)0, (char)30, (char)0, (char)0, (char)0, (char)8, (char)31, (char)1, (char)(-113), (char)1, (char)0, (char)1, (char)0, (char)2, (char)1, (char)0, (char)0, (char)120, (char)(-32), (char)1, (char)0, (char)80, (char)0, (char)24}};

#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_debug = 3;

#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static char *args;

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static char const *de4x5_signatures[5U] = {"DE425", "DE434", "DE435", "DE450", "DE500"};

#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dec_only;

#line 879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct __anonstruct_last_334 last = {.chipset = 0, .bus = 0, .irq = 0, .addr = {(unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0}};

#line 897 
static int de4x5_open(struct net_device *dev);


#line 898 
static netdev_tx_t de4x5_queue_pkt(struct sk_buff *skb, struct net_device *dev);


#line 900 
static irqreturn_t de4x5_interrupt(int irq, void *dev_id);


#line 901 
static int de4x5_close(struct net_device *dev);


#line 902 
static struct net_device_stats *de4x5_get_stats(struct net_device *dev);


#line 903 
static void de4x5_local_stats(struct net_device *dev, char *buf, int pkt_len);


#line 904 
static void set_multicast_list(struct net_device *dev);


#line 905 
static int de4x5_ioctl(struct net_device *dev, struct ifreq *rq, int cmd);


#line 910 
static int de4x5_hw_init(struct net_device *dev, u_long iobase, struct device *gendev);


#line 911 
static int de4x5_init(struct net_device *dev);


#line 912 
static int de4x5_sw_reset(struct net_device *dev);


#line 913 
static int de4x5_rx(struct net_device *dev);


#line 914 
static int de4x5_tx(struct net_device *dev);


#line 915 
static void de4x5_ast(struct net_device *dev);


#line 916 
static int de4x5_txur(struct net_device *dev);


#line 917 
static int de4x5_rx_ovfc(struct net_device *dev);


#line 919 
static int autoconf_media(struct net_device *dev);


#line 920 
static void create_packet(struct net_device *dev, char *frame, int len);


#line 921 
static void load_packet(struct net_device *dev, char *buf, u32 flags, struct sk_buff *skb);


#line 922 
static int dc21040_autoconf(struct net_device *dev);


#line 923 
static int dc21041_autoconf(struct net_device *dev);


#line 924 
static int dc21140m_autoconf(struct net_device *dev);


#line 925 
static int dc2114x_autoconf(struct net_device *dev);


#line 926 
static int srom_autoconf(struct net_device *dev);


#line 927 
static int de4x5_suspect_state(struct net_device *dev, int timeout, int prev_state, int (*fn)(struct net_device *, int ), int (*asfn)(struct net_device *));


#line 928 
static int dc21040_state(struct net_device *dev, int csr13, int csr14, int csr15, int timeout, int next_state, int suspect_state, int (*fn)(struct net_device *, int ));


#line 929 
static int test_media(struct net_device *dev, s32 irqs, s32 irq_mask, s32 csr13, s32 csr14, s32 csr15, s32 msec);


#line 930 
static int test_for_100Mb(struct net_device *dev, int msec);


#line 931 
static int wait_for_link(struct net_device *dev);


#line 932 
static int test_mii_reg(struct net_device *dev, int reg, int mask, bool pol, long msec);


#line 933 
static int is_spd_100(struct net_device *dev);


#line 934 
static int is_100_up(struct net_device *dev);


#line 935 
static int is_10_up(struct net_device *dev);


#line 936 
static int is_anc_capable(struct net_device *dev);


#line 937 
static int ping_media(struct net_device *dev, int msec);


#line 938 
static struct sk_buff *de4x5_alloc_rx_buff(struct net_device *dev, int index, int len);


#line 939 
static void de4x5_free_rx_buffs(struct net_device *dev);


#line 940 
static void de4x5_free_tx_buffs(struct net_device *dev);


#line 941 
static void de4x5_save_skbs(struct net_device *dev);


#line 942 
static void de4x5_rst_desc_ring(struct net_device *dev);


#line 943 
static void de4x5_cache_state(struct net_device *dev, int flag);


#line 944 
static void de4x5_put_cache(struct net_device *dev, struct sk_buff *skb);


#line 945 
static void de4x5_putb_cache(struct net_device *dev, struct sk_buff *skb);


#line 946 
static struct sk_buff *de4x5_get_cache(struct net_device *dev);


#line 947 
static void de4x5_setup_intr(struct net_device *dev);


#line 948 
static void de4x5_init_connection(struct net_device *dev);


#line 949 
static int de4x5_reset_phy(struct net_device *dev);


#line 950 
static void reset_init_sia(struct net_device *dev, s32 csr13, s32 csr14, s32 csr15);


#line 951 
static int test_ans(struct net_device *dev, s32 irqs, s32 irq_mask, s32 msec);


#line 952 
static int test_tp(struct net_device *dev, s32 msec);


#line 953 
static int EISA_signature(char *name, struct device *device);


#line 954 
static int PCI_signature(char *name, struct de4x5_private *lp);


#line 955 
static void DevicePresent(struct net_device *dev, u_long aprom_addr);


#line 956 
static void enet_addr_rst(u_long aprom_addr);


#line 957 
static int de4x5_bad_srom(struct de4x5_private *lp);


#line 958 
static short srom_rd(u_long addr, u_char offset);


#line 959 
static void srom_latch(u_int command, u_long addr);


#line 960 
static void srom_command(u_int command, u_long addr);


#line 961 
static void srom_address(u_int command, u_long addr, u_char offset);


#line 962 
static short srom_data(u_int command, u_long addr);


#line 964 
static void sendto_srom(u_int command, u_long addr);


#line 965 
static int getfrom_srom(u_long addr);


#line 966 
static int srom_map_media(struct net_device *dev);


#line 967 
static int srom_infoleaf_info(struct net_device *dev);


#line 968 
static void srom_init(struct net_device *dev);


#line 969 
static void srom_exec(struct net_device *dev, u_char *p);


#line 970 
static int mii_rd(u_char phyreg, u_char phyaddr, u_long ioaddr);


#line 971 
static void mii_wr(int data, u_char phyreg, u_char phyaddr, u_long ioaddr);


#line 972 
static int mii_rdata(u_long ioaddr);


#line 973 
static void mii_wdata(int data, int len, u_long ioaddr);


#line 974 
static void mii_ta(u_long rw, u_long ioaddr);


#line 975 
static int mii_swap(int data, int len);


#line 976 
static void mii_address(u_char addr, u_long ioaddr);


#line 977 
static void sendto_mii(u32 command, int data, u_long ioaddr);


#line 978 
static int getfrom_mii(u32 command, u_long ioaddr);


#line 979 
static int mii_get_oui(u_char phyaddr, u_long ioaddr);


#line 980 
static int mii_get_phy(struct net_device *dev);


#line 981 
static void SetMulticastFilter(struct net_device *dev);


#line 982 
static int get_hw_addr(struct net_device *dev);


#line 983 
static void srom_repair(struct net_device *dev, int card);


#line 984 
static int test_bad_enet(struct net_device *dev, int status);


#line 985 
static int an_exception(struct de4x5_private *lp);


#line 986 
static char *build_setup_frame(struct net_device *dev, int mode);


#line 987 
static void disable_ast(struct net_device *dev);


#line 988 
static long de4x5_switch_mac_port(struct net_device *dev);


#line 989 
static int gep_rd(struct net_device *dev);


#line 990 
static void gep_wr(s32 data, struct net_device *dev);


#line 991 
static void yawn(struct net_device *dev, int state);


#line 992 
static void de4x5_parse_params(struct net_device *dev);


#line 993 
static void de4x5_dbg_open(struct net_device *dev);


#line 994 
static void de4x5_dbg_mii(struct net_device *dev, int k);


#line 995 
static void de4x5_dbg_media(struct net_device *dev);


#line 996 
static void de4x5_dbg_srom(struct de4x5_srom *p);


#line 997 
static void de4x5_dbg_rx(struct sk_buff *skb, int len);


#line 998 
static int dc21041_infoleaf(struct net_device *dev);


#line 999 
static int dc21140_infoleaf(struct net_device *dev);


#line 1000 
static int dc21142_infoleaf(struct net_device *dev);


#line 1001 
static int dc21143_infoleaf(struct net_device *dev);


#line 1002 
static int type0_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1003 
static int type1_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1004 
static int type2_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1005 
static int type3_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1006 
static int type4_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1007 
static int type5_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1008 
static int compact_infoblock(struct net_device *dev, u_char count, u_char *p);


#line 1016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int io = 0;

#line 1036  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct InfoLeaf infoleaf_array[4U] = {{.chipset = 5120, .fn = & dc21041_infoleaf}, {.chipset = 2304, .fn = & dc21140_infoleaf}, {.chipset = 6416, .fn = & dc21142_infoleaf}, {.chipset = 6448, .fn = & dc21143_infoleaf}};

#line 1047  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int (*dc_infoblock[7U])(struct net_device *, u_char , u_char *) = {& type0_infoblock, & type1_infoblock, & type2_infoblock, & type3_infoblock, & type4_infoblock, & type5_infoblock, & compact_infoblock};

#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct net_device_ops const de4x5_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & de4x5_open, .ndo_stop = & de4x5_close, .ndo_start_xmit = & de4x5_queue_pkt, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & set_multicast_list, .ndo_set_mac_address = & eth_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & de4x5_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & eth_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & de4x5_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 1095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_hw_init(struct net_device *dev, u_long iobase, struct device *gendev)
{
  int __retres;
  char name[9U];
  int i;
  unsigned int tmp_8;
  char const *tmp_9;
  
#line 1098 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1099 
  struct pci_dev *pdev = (struct pci_dev *)0;
  
#line 1100 
  int status = 0;
  
#line 1102 
  dev_set_drvdata(gendev,(void *)dev);
  
#line 1105 
  if (lp->bus == 1) 
#line 1106 
                    outb((unsigned char)0,(int)(iobase + (u_long)67U));
  else {
    struct pci_dev *tmp_0;
    {
      
#line 1108 
      struct device const *__mptr = (struct device const *)gendev;
      
#line 1108 
      tmp_0 = (struct pci_dev *)__mptr + 18446744073709551464U;
    }
    
#line 1108 
    pdev = tmp_0;
    
#line 1109 
    pci_write_config_byte((struct pci_dev const *)pdev,67,(unsigned char)0);
  }
  {
    
#line 1111 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_1;
      
#line 1111 
      goto ldv_47058;
      ldv_47057: 
#line 1112 
      ;
      
#line 1111 
      __const_udelay(4295000UL);
      ldv_47058: 
#line 1113 
      ;
      
#line 1111 
      tmp_1 = __ms;
      
#line 1111 
      __ms -= 1UL;
      
#line 1111 
      ;
      
#line 1111 
      if (tmp_1 != 0UL) 
#line 1113 
                        goto ldv_47057; else 
#line 1116 
                                             goto ldv_47059;
      ldv_47059: 
#line 1117 
      ;
    }
  }
  {
    int i_0;
    unsigned int tmp_2;
    
#line 1113 
    tmp_2 = inl((int)iobase);
    
#line 1113 
    i_0 = (int)tmp_2;
    
#line 1113 
    if (1) 
#line 1113 
           __const_udelay(4295000UL);
    else {
      
#line 1113 
      unsigned long __ms_0 = 1UL;
      {
        unsigned long tmp_3;
        
#line 1113 
        goto ldv_47063;
        ldv_47062: 
#line 1114 
        ;
        
#line 1113 
        __const_udelay(4295000UL);
        ldv_47063: 
#line 1115 
        ;
        
#line 1113 
        tmp_3 = __ms_0;
        
#line 1113 
        __ms_0 -= 1UL;
        
#line 1113 
        ;
        
#line 1113 
        if (tmp_3 != 0UL) 
#line 1115 
                          goto ldv_47062; else 
#line 1118 
                                               goto ldv_47064;
        ldv_47064: 
#line 1119 
        ;
      }
    }
    
#line 1113 
    outl((unsigned int)(i_0 | 1),(int)iobase);
    
#line 1113 
    if (1) 
#line 1113 
           __const_udelay(4295000UL);
    else {
      
#line 1113 
      unsigned long __ms_1 = 1UL;
      {
        unsigned long tmp_4;
        
#line 1113 
        goto ldv_47067;
        ldv_47066: 
#line 1114 
        ;
        
#line 1113 
        __const_udelay(4295000UL);
        ldv_47067: 
#line 1115 
        ;
        
#line 1113 
        tmp_4 = __ms_1;
        
#line 1113 
        __ms_1 -= 1UL;
        
#line 1113 
        ;
        
#line 1113 
        if (tmp_4 != 0UL) 
#line 1115 
                          goto ldv_47066; else 
#line 1118 
                                               goto ldv_47068;
        ldv_47068: 
#line 1119 
        ;
      }
    }
    
#line 1113 
    outl((unsigned int)i_0,(int)iobase);
    
#line 1113 
    if (1) 
#line 1113 
           __const_udelay(4295000UL);
    else {
      
#line 1113 
      unsigned long __ms_2 = 1UL;
      {
        unsigned long tmp_5;
        
#line 1113 
        goto ldv_47071;
        ldv_47070: 
#line 1114 
        ;
        
#line 1113 
        __const_udelay(4295000UL);
        ldv_47071: 
#line 1115 
        ;
        
#line 1113 
        tmp_5 = __ms_2;
        
#line 1113 
        __ms_2 -= 1UL;
        
#line 1113 
        ;
        
#line 1113 
        if (tmp_5 != 0UL) 
#line 1115 
                          goto ldv_47070; else 
#line 1118 
                                               goto ldv_47072;
        ldv_47072: 
#line 1119 
        ;
      }
    }
    
#line 1113 
    i_0 = 0;
    
#line 1113 
    goto ldv_47078;
    ldv_47077: 
#line 1114 
    ;
    
#line 1113 
    inl((int)iobase);
    
#line 1113 
    if (1) 
#line 1113 
           __const_udelay(4295000UL);
    else {
      
#line 1113 
      unsigned long __ms_3 = 1UL;
      {
        unsigned long tmp_6;
        
#line 1113 
        goto ldv_47075;
        ldv_47074: 
#line 1114 
        ;
        
#line 1113 
        __const_udelay(4295000UL);
        ldv_47075: 
#line 1115 
        ;
        
#line 1113 
        tmp_6 = __ms_3;
        
#line 1113 
        __ms_3 -= 1UL;
        
#line 1113 
        ;
        
#line 1113 
        if (tmp_6 != 0UL) 
#line 1115 
                          goto ldv_47074; else 
#line 1118 
                                               goto ldv_47076;
        ldv_47076: 
#line 1119 
        ;
      }
    }
    
#line 1113 
    i_0 += 1;
    ldv_47078: 
#line 1114 
    ;
    
#line 1113 
    if (i_0 <= 4) 
#line 1115 
                  goto ldv_47077; else 
#line 1118 
                                       goto ldv_47079;
    ldv_47079: 
#line 1119 
    ;
    
#line 1113 
    if (1) 
#line 1113 
           __const_udelay(4295000UL);
    else {
      
#line 1113 
      unsigned long __ms_4 = 1UL;
      {
        unsigned long tmp_7;
        
#line 1113 
        goto ldv_47082;
        ldv_47081: 
#line 1114 
        ;
        
#line 1113 
        __const_udelay(4295000UL);
        ldv_47082: 
#line 1115 
        ;
        
#line 1113 
        tmp_7 = __ms_4;
        
#line 1113 
        __ms_4 -= 1UL;
        
#line 1113 
        ;
        
#line 1113 
        if (tmp_7 != 0UL) 
#line 1115 
                          goto ldv_47081; else 
#line 1118 
                                               goto ldv_47083;
        ldv_47083: 
#line 1119 
        ;
      }
    }
  }
  
#line 1115 
  tmp_8 = inl((int)((u_long)(40 << lp->bus) + iobase));
  
#line 1115 
  if ((tmp_8 & 8257536U) != 0U) {
    
#line 1116 
    __retres = -6;
    
#line 1116 
    goto return_label;
  }
  else ;
  
#line 1122 
  lp->useSROM = (_Bool)0;
  
#line 1123 
  if (lp->bus == 0) 
#line 1124 
                    PCI_signature((char *)(& name),lp); else 
#line 1126 
                                                             EISA_signature((char *)(& name),gendev);
  
#line 1129 
  if ((int)*((char *)(& name)) == 0) {
    
#line 1130 
    __retres = -6;
    
#line 1130 
    goto return_label;
  }
  else ;
  
#line 1133 
  dev->base_addr = iobase;
  
#line 1134 
  ;
  
#line 1134 
  tmp_9 = dev_name((struct device const *)gendev);
  
#line 1134 
  printk("%s: %s at 0x%04lx",tmp_9,(char *)(& name),iobase);
  
#line 1136 
  status = get_hw_addr(dev);
  
#line 1137 
  printk(", h/w address %pM\n",dev->dev_addr);
  
#line 1139 
  if (status != 0) {
    
#line 1140 
    printk("      which has an Ethernet PROM CRC error.\n");
    
#line 1141 
    __retres = -6;
    
#line 1141 
    goto return_label;
  }
  else {
    char const *tmp_10;
    char *tmp_13;
    
#line 1143 
    skb_queue_head_init(& lp->cache.queue);
    
#line 1144 
    lp->cache.gepc = 287;
    
#line 1145 
    lp->asBit = 64;
    
#line 1146 
    lp->asPolarity = 64;
    
#line 1147 
    lp->asBitValid = -1;
    
#line 1148 
    lp->timeout = -1;
    
#line 1149 
    lp->gendev = gendev;
    
#line 1150 
    spinlock_check(& lp->lock);
    {
      struct lock_class_key __key;
      
#line 1150 
      __raw_spin_lock_init(& lp->lock.__anonCompField_spinlock_18.rlock,"&(&lp->lock)->rlock",& __key);
    }
    {
      struct lock_class_key __key_0;
      
#line 1151 
      init_timer_key(& lp->timer,0U,"(&lp->timer)",& __key_0);
    }
    
#line 1152 
    lp->timer.function = (void (*)(unsigned long ))(& de4x5_ast);
    
#line 1153 
    lp->timer.data = (unsigned long)dev;
    
#line 1154 
    de4x5_parse_params(dev);
    
#line 1159 
    lp->autosense = lp->params.autosense;
    
#line 1160 
    if (lp->chipset != 2304) {
      
#line 1161 
      if (lp->chipset == 512 && (lp->params.autosense & 2) != 0) 
#line 1162 
                                                                 lp->params.autosense = 64; else ;
      
#line 1164 
      if (lp->chipset == 5120 && (lp->params.autosense & 16) != 0) 
#line 1165 
                                                                   lp->params.autosense = 4; else ;
    }
    else ;
    
#line 1168 
    lp->fdx = lp->params.fdx;
    
#line 1169 
    tmp_10 = dev_name((struct device const *)gendev);
    
#line 1169 
    ;
    
#line 1169 
    sprintf((char *)(& lp->adapter_name),"%s (%s)",(char *)(& name),tmp_10);
    
#line 1171 
    lp->dma_size = 640;
    
#line 1175 
    lp->rx_ring = (struct de4x5_desc *)dma_alloc_attrs(gendev,(unsigned long)lp->dma_size,& lp->dma_rings,32U,(struct dma_attrs *)0);
    
#line 1177 
    if (lp->rx_ring == (struct de4x5_desc *)0) {
      
#line 1178 
      __retres = -12;
      
#line 1178 
      goto return_label;
    }
    else ;
    
#line 1181 
    lp->tx_ring = lp->rx_ring + 8U;
    
#line 1188 
    i = 0;
    
#line 1188 
    goto ldv_47088;
    ldv_47087: 
#line 1189 
    ;
    
#line 1189 
    (lp->rx_ring + i)->status = 0U;
    
#line 1190 
    (lp->rx_ring + i)->des1 = 1536U;
    
#line 1191 
    (lp->rx_ring + i)->buf = 0U;
    
#line 1192 
    (lp->rx_ring + i)->next = 0U;
    
#line 1193 
    lp->rx_skb[i] = (struct sk_buff *)1;
    
#line 1188 
    i += 1;
    ldv_47088: 
#line 1189 
    ;
    
#line 1188 
    if (i <= 7) 
#line 1190 
                goto ldv_47087; else 
#line 1193 
                                     goto ldv_47089;
    ldv_47089: 
#line 1194 
    ;
    
#line 1195 
    ldv_inline_asm();
    
#line 1219 
    lp->rxRingSize = (char)8;
    
#line 1220 
    lp->txRingSize = (char)32;
    
#line 1223 
    (lp->rx_ring + ((unsigned long)lp->rxRingSize + 18446744073709551615U))->des1 |= 33554432U;
    
#line 1224 
    (lp->tx_ring + ((unsigned long)lp->txRingSize + 18446744073709551615U))->des1 |= 33554432U;
    
#line 1227 
    outl((unsigned int)lp->dma_rings,(int)((u_long)(24 << lp->bus) + iobase));
    
#line 1228 
    outl((unsigned int)lp->dma_rings + 128U,(int)((u_long)(32 << lp->bus) + iobase));
    
#line 1232 
    lp->irq_mask = 101;
    
#line 1233 
    lp->irq_en = 98304;
    
#line 1236 
    create_packet(dev,(char *)(& lp->frame),64);
    
#line 1239 
    i = lp->cfrv & 254;
    
#line 1240 
    if (lp->chipset == 2304 && i == 32) 
#line 1241 
                                        lp->rx_ovf = 1; else ;
    
#line 1245 
    if ((int)lp->useSROM != 0) {
      int tmp_12;
      
#line 1246 
      lp->state = 0;
      
#line 1247 
      tmp_12 = srom_infoleaf_info(dev);
      
#line 1247 
      if (tmp_12 != 0) {
        
#line 1248 
        dma_free_attrs(gendev,(unsigned long)lp->dma_size,(void *)lp->rx_ring,lp->dma_rings,(struct dma_attrs *)0);
        
#line 1250 
        __retres = -6;
        
#line 1250 
        goto return_label;
      }
      else ;
      
#line 1252 
      srom_init(dev);
    }
    else ;
    
#line 1255 
    lp->state = 1;
    
#line 1260 
    if (lp->chipset != 512 && lp->chipset != 5120) 
#line 1261 
                                                   mii_get_phy(dev); else ;
    
#line 1264 
    if (lp->bus == 0) 
#line 1264 
                      tmp_13 = (char *)"PCI BIOS"; else 
#line 1264 
                                                        tmp_13 = (char *)"EISA CNFG";
    
#line 1264 
    ;
    
#line 1264 
    printk("      and requires IRQ%d (provided by %s).\n",dev->irq,tmp_13);
  }
  
#line 1268 
  if ((de4x5_debug & 1) != 0) 
#line 1269 
                              printk((char const *)(& version)); else ;
  
#line 1273 
  dev->dev.parent = gendev;
  
#line 1274 
  dev->netdev_ops = & de4x5_netdev_ops;
  
#line 1275 
  dev->mem_start = 0UL;
  
#line 1278 
  status = ldv_register_netdev_74(dev);
  
#line 1278 
  if (status != 0) {
    
#line 1279 
    dma_free_attrs(gendev,(unsigned long)lp->dma_size,(void *)lp->rx_ring,lp->dma_rings,(struct dma_attrs *)0);
    
#line 1281 
    __retres = status;
    
#line 1281 
    goto return_label;
  }
  else ;
  
#line 1285 
  yawn(dev,128);
  
#line 1287 
  __retres = status;
  return_label: 
#line 1287 
                return __retres;
}


#line 1292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_open(struct net_device *dev)
{
  int __retres;
  int i;
  s32 omr;
  struct sk_buff *tmp_0;
  int tmp_2;
  unsigned int tmp_3;
  
#line 1294 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1295 
  u_long iobase = dev->base_addr;
  
#line 1296 
  int status = 0;
  
#line 1300 
  i = 0;
  
#line 1300 
  goto ldv_47099;
  ldv_47098: 
#line 1301 
  ;
  
#line 1301 
  tmp_0 = de4x5_alloc_rx_buff(dev,i,0);
  
#line 1301 
  if (tmp_0 == (struct sk_buff *)0) {
    
#line 1302 
    de4x5_free_rx_buffs(dev);
    
#line 1303 
    __retres = -11;
    
#line 1303 
    goto return_label;
  }
  else ;
  
#line 1300 
  i += 1;
  ldv_47099: 
#line 1301 
  ;
  
#line 1300 
  if ((int)lp->rxRingSize > i) 
#line 1302 
                               goto ldv_47098; else 
#line 1305 
                                                    goto ldv_47100;
  ldv_47100: 
#line 1306 
  ;
  
#line 1310 
  yawn(dev,0);
  
#line 1315 
  status = de4x5_init(dev);
  
#line 1316 
  spinlock_check(& lp->lock);
  {
    struct lock_class_key __key;
    
#line 1316 
    __raw_spin_lock_init(& lp->lock.__anonCompField_spinlock_18.rlock,"&(&lp->lock)->rlock",& __key);
  }
  
#line 1317 
  lp->state = 2;
  
#line 1318 
  de4x5_dbg_open(dev);
  
#line 1320 
  tmp_2 = ldv_request_irq_75((unsigned int)dev->irq,& de4x5_interrupt,128UL,(char const *)(& lp->adapter_name),(void *)dev);
  
#line 1320 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1322 
    printk("de4x5_open(): Requested IRQ%d is busy - attemping FAST/SHARE...",dev->irq);
    
#line 1323 
    tmp_1 = ldv_request_irq_76((unsigned int)dev->irq,& de4x5_interrupt,128UL,(char const *)(& lp->adapter_name),(void *)dev);
    
#line 1323 
    if (tmp_1 != 0) {
      
#line 1325 
      printk("\n              Cannot get IRQ- reconfigure your hardware.\n");
      
#line 1326 
      disable_ast(dev);
      
#line 1327 
      de4x5_free_rx_buffs(dev);
      
#line 1328 
      de4x5_free_tx_buffs(dev);
      
#line 1329 
      yawn(dev,128);
      
#line 1330 
      lp->state = 1;
      
#line 1331 
      __retres = -11;
      
#line 1331 
      goto return_label;
    }
    else {
      
#line 1333 
      printk("\n              Succeeded, but you should reconfigure your hardware to avoid this.\n");
      
#line 1334 
      printk("WARNING: there may be IRQ related problems in heavily loaded systems.\n");
    }
  }
  else ;
  
#line 1338 
  lp->interrupt = 0UL;
  
#line 1339 
  dev->trans_start = jiffies;
  
#line 1341 
  tmp_3 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 1341 
  omr = (int)tmp_3;
  
#line 1341 
  omr |= 8194;
  
#line 1341 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1343 
  de4x5_setup_intr(dev);
  
#line 1345 
  if ((de4x5_debug & 64) != 0) {
    unsigned int tmp_4;
    unsigned int tmp_5;
    unsigned int tmp_6;
    unsigned int tmp_7;
    unsigned int tmp_8;
    unsigned int tmp_9;
    unsigned int tmp_10;
    unsigned int tmp_11;
    
#line 1346 
    tmp_4 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 1346 
    printk("\tsts:  0x%08x\n",tmp_4);
    
#line 1347 
    tmp_5 = inl((int)iobase);
    
#line 1347 
    printk("\tbmr:  0x%08x\n",tmp_5);
    
#line 1348 
    tmp_6 = inl((int)((u_long)(56 << lp->bus) + iobase));
    
#line 1348 
    printk("\timr:  0x%08x\n",tmp_6);
    
#line 1349 
    tmp_7 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 1349 
    printk("\tomr:  0x%08x\n",tmp_7);
    
#line 1350 
    tmp_8 = inl((int)((u_long)(96 << lp->bus) + iobase));
    
#line 1350 
    printk("\tsisr: 0x%08x\n",tmp_8);
    
#line 1351 
    tmp_9 = inl((int)((u_long)(104 << lp->bus) + iobase));
    
#line 1351 
    printk("\tsicr: 0x%08x\n",tmp_9);
    
#line 1352 
    tmp_10 = inl((int)((u_long)(112 << lp->bus) + iobase));
    
#line 1352 
    printk("\tstrr: 0x%08x\n",tmp_10);
    
#line 1353 
    tmp_11 = inl((int)((u_long)(120 << lp->bus) + iobase));
    
#line 1353 
    printk("\tsigr: 0x%08x\n",tmp_11);
  }
  else ;
  
#line 1356 
  __retres = status;
  return_label: 
#line 1356 
                return __retres;
}


#line 1368  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_init(struct net_device *dev)
{
  int __retres;
  
#line 1371 
  netif_start_queue(dev);
  
#line 1373 
  de4x5_sw_reset(dev);
  
#line 1376 
  autoconf_media(dev);
  
#line 1378 
  __retres = 0;
  
#line 1378 
  return __retres;
}


#line 1382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_sw_reset(struct net_device *dev)
{
  int i;
  int j;
  s32 bmr;
  s32 omr;
  int tmp_0;
  unsigned int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 1384 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1385 
  u_long iobase = dev->base_addr;
  
#line 1386 
  int status = 0;
  
#line 1390 
  if (! lp->useSROM) {
    
#line 1391 
    if (lp->phy[lp->active].id != 0) 
#line 1392 
                                     lp->infoblock_csr6 = 34340864; else 
                                                                    
#line 1394 
                                                                    lp->infoblock_csr6 = 37748736;
    
#line 1396 
    de4x5_switch_mac_port(dev);
  }
  else ;
  
#line 1404 
  if (lp->chipset == 2304) 
#line 1404 
                           bmr = 34816; else 
#line 1404 
                                             bmr = 33792;
  
#line 1405 
  if ((lp->chipset & -256) == 6400) 
#line 1405 
                                    tmp_0 = 2097152; else 
#line 1405 
                                                          tmp_0 = 0;
  
#line 1405 
  bmr = tmp_0 | bmr;
  
#line 1406 
  outl((unsigned int)bmr,(int)iobase);
  
#line 1408 
  tmp_1 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 1408 
  omr = (int)tmp_1 & -65;
  
#line 1409 
  if (lp->chipset == 2304) 
#line 1410 
                           omr |= 33554464; else ;
  
#line 1412 
  lp->setup_f = 0;
  
#line 1413 
  outl((unsigned int)lp->dma_rings,(int)((u_long)(24 << lp->bus) + iobase));
  
#line 1414 
  outl((unsigned int)lp->dma_rings + 128U,(int)((u_long)(32 << lp->bus) + iobase));
  
#line 1417 
  tmp_2 = 0;
  
#line 1417 
  lp->rx_old = tmp_2;
  
#line 1417 
  lp->rx_new = tmp_2;
  
#line 1418 
  tmp_3 = 0;
  
#line 1418 
  lp->tx_old = tmp_3;
  
#line 1418 
  lp->tx_new = tmp_3;
  
#line 1420 
  i = 0;
  
#line 1420 
  goto ldv_47116;
  ldv_47115: 
#line 1421 
  ;
  
#line 1421 
  (lp->rx_ring + i)->status = 2147483648U;
  
#line 1420 
  i += 1;
  ldv_47116: 
#line 1421 
  ;
  
#line 1420 
  if ((int)lp->rxRingSize > i) 
#line 1422 
                               goto ldv_47115; else 
#line 1425 
                                                    goto ldv_47117;
  ldv_47117: 
#line 1426 
  ;
  
#line 1424 
  i = 0;
  
#line 1424 
  goto ldv_47119;
  ldv_47118: 
#line 1425 
  ;
  
#line 1425 
  (lp->tx_ring + i)->status = 0U;
  
#line 1424 
  i += 1;
  ldv_47119: 
#line 1425 
  ;
  
#line 1424 
  if ((int)lp->txRingSize > i) 
#line 1426 
                               goto ldv_47118; else 
#line 1429 
                                                    goto ldv_47120;
  ldv_47120: 
#line 1430 
  ;
  
#line 1431 
  ldv_inline_asm();
  
#line 1431 
  SetMulticastFilter(dev);
  
#line 1433 
  load_packet(dev,(char *)(& lp->setup_frame),134217920U,(struct sk_buff *)1);
  
#line 1434 
  outl((unsigned int)(omr | 8192),(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1438 
  j = 0;
  
#line 1438 
  i = 0;
  
#line 1438 
  goto ldv_47126;
  ldv_47125: 
#line 1439 
  ;
  
#line 1439 
  if (1) 
#line 1439 
         __const_udelay(4295000UL);
  else {
    
#line 1439 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_4;
      
#line 1439 
      goto ldv_47123;
      ldv_47122: 
#line 1440 
      ;
      
#line 1439 
      __const_udelay(4295000UL);
      ldv_47123: 
#line 1441 
      ;
      
#line 1439 
      tmp_4 = __ms;
      
#line 1439 
      __ms -= 1UL;
      
#line 1439 
      ;
      
#line 1439 
      if (tmp_4 != 0UL) 
#line 1441 
                        goto ldv_47122; else 
#line 1444 
                                             goto ldv_47124;
      ldv_47124: 
#line 1445 
      ;
    }
  }
  
#line 1440 
  if ((int)(lp->tx_ring + lp->tx_new)->status >= 0) 
#line 1440 
                                                    j = 1; else ;
  
#line 1438 
  i += 1;
  ldv_47126: 
#line 1439 
  ;
  
#line 1438 
  if (i <= 499 && j == 0) 
#line 1440 
                          goto ldv_47125; else 
#line 1443 
                                               goto ldv_47127;
  ldv_47127: 
#line 1444 
  ;
  
#line 1442 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1444 
  if (j == 0) {
    unsigned int tmp_5;
    
#line 1445 
    tmp_5 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 1445 
    ;
    
#line 1445 
    printk("%s: Setup frame timed out, status %08x\n",(char *)(& dev->name),tmp_5);
    
#line 1447 
    status = -5;
  }
  else ;
  
#line 1450 
  lp->tx_new = (lp->tx_new + 1) % (int)lp->txRingSize;
  
#line 1451 
  lp->tx_old = lp->tx_new;
  
#line 1453 
  return status;
}


#line 1460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static netdev_tx_t de4x5_queue_pkt(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  int tmp_0;
  bool tmp_10;
  
#line 1462 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1463 
  u_long iobase = dev->base_addr;
  
#line 1464 
  u_long flags = 0UL;
  
#line 1466 
  netif_start_queue(dev);
  
#line 1467 
  if (! lp->tx_enable) {
    
#line 1468 
    __retres = NETDEV_TX_LOCKED;
    
#line 1468 
    goto return_label;
  }
  else ;
  
#line 1475 
  ldv___ldv_spin_lock_77(& lp->lock);
  
#line 1476 
  de4x5_tx(dev);
  
#line 1477 
  ldv_spin_unlock_irqrestore_78(& lp->lock,flags);
  
#line 1480 
  tmp_0 = test_and_set_bit(0L,(unsigned long volatile *)(& lp->cache.lock));
  
#line 1480 
  if (tmp_0 != 0) {
    
#line 1480 
    if (lp->interrupt == 0UL) {
      
#line 1481 
      __retres = NETDEV_TX_LOCKED;
      
#line 1481 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1484 
  tmp_10 = netif_queue_stopped((struct net_device const *)dev);
  
#line 1484 
  if ((int)tmp_10 != 0) 
#line 1484 
                        goto _LOR;
  else 
    
#line 1484 
    if ((unsigned long)lp->tx_skb[lp->tx_new] > 1UL) {
      _LOR: {
              
#line 1485 
              if (lp->interrupt != 0UL) 
#line 1486 
                                        de4x5_putb_cache(dev,skb); else 
                                                                    
#line 1488 
                                                                    de4x5_put_cache(dev,skb);
              
#line 1490 
              if ((de4x5_debug & 4) != 0) {
                char *tmp_1;
                unsigned int tmp_2;
                unsigned int tmp_3;
                bool tmp_4;
                unsigned int tmp_5;
                
#line 1491 
                if ((unsigned long)lp->tx_skb[lp->tx_new] > 1UL) 
#line 1491 
                                                                 tmp_1 = (char *)"YES"; else 
                                                                    
#line 1491 
                                                                    tmp_1 = (char *)"NO";
                
#line 1491 
                tmp_2 = inl((int)((u_long)(48 << lp->bus) + iobase));
                
#line 1491 
                tmp_3 = inl((int)((u_long)(56 << lp->bus) + iobase));
                
#line 1491 
                tmp_4 = netif_queue_stopped((struct net_device const *)dev);
                
#line 1491 
                tmp_5 = inl((int)((u_long)(40 << lp->bus) + iobase));
                
#line 1491 
                ;
                
#line 1491 
                printk("%s: transmit busy, lost media or stale skb found:\n  STS:%08x\n  tbusy:%d\n  IMR:%08x\n  OMR:%08x\n Stale skb: %s\n",(char *)(& dev->name),tmp_5,(int)tmp_4,tmp_3,tmp_2,tmp_1);
              }
              else ;
            }
    }
    else 
      
#line 1493 
      if (skb->len != 0U) {
        int tmp_6;
        int tmp_7;
        
#line 1495 
        tmp_6 = skb_queue_empty((struct sk_buff_head const *)(& lp->cache.queue));
        
#line 1495 
        if (tmp_6 == 0) {
          
#line 1495 
          if (lp->interrupt == 0UL) {
            
#line 1496 
            de4x5_put_cache(dev,skb);
            
#line 1497 
            skb = de4x5_get_cache(dev);
          }
          else ;
        }
        else ;
        
#line 1500 
        goto ldv_47136;
        ldv_47135: 
#line 1501 
        ;
        
#line 1502 
        ldv___ldv_spin_lock_79(& lp->lock);
        
#line 1503 
        netif_start_queue(dev);
        
#line 1504 
        load_packet(dev,(char *)skb->data,skb->len | 3758096384U,skb);
        
#line 1505 
        lp->stats.tx_bytes += (unsigned long)skb->len;
        
#line 1506 
        outl(1U,(int)((u_long)(8 << lp->bus) + iobase));
        
#line 1508 
        lp->tx_new = (lp->tx_new + 1) % (int)lp->txRingSize;
        
#line 1510 
        if (lp->tx_old <= lp->tx_new) 
#line 1510 
                                      tmp_7 = (lp->tx_old + (int)lp->txRingSize) - lp->tx_new != 1; else 
                                                                    
#line 1510 
                                                                    tmp_7 = lp->tx_old - lp->tx_new != 1;
        
#line 1510 
        if (tmp_7) 
#line 1511 
                   netif_start_queue(dev); else ;
        
#line 1513 
        skb = de4x5_get_cache(dev);
        
#line 1514 
        ldv_spin_unlock_irqrestore_80(& lp->lock,flags);
        ldv_47136: 
#line 1515 
        ;
        
#line 1500 
        if (skb != (struct sk_buff *)0) {
          int tmp_9;
          bool tmp_8;
          
#line 1500 
          tmp_8 = netif_queue_stopped((struct net_device const *)dev);
          
#line 1500 
          if (tmp_8) 
#line 1500 
                     tmp_9 = 0; else 
#line 1500 
                                     tmp_9 = 1;
          
#line 1500 
          if (tmp_9) {
            
#line 1501 
            if ((unsigned long)lp->tx_skb[lp->tx_new] <= 1UL) 
#line 1503 
                                                              goto ldv_47135; else 
                                                                    
#line 1506 
                                                                    goto ldv_47137;
          }
          else 
#line 1506 
               goto ldv_47137;
        }
        else 
#line 1506 
             goto ldv_47137;
        ldv_47137: 
#line 1507 
        ;
        
#line 1516 
        if (skb != (struct sk_buff *)0) 
#line 1516 
                                        de4x5_putb_cache(dev,skb); else ;
      }
      else ;
  
#line 1519 
  lp->cache.lock = 0UL;
  
#line 1521 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1521 
                return __retres;
}


#line 1536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static irqreturn_t de4x5_interrupt(int irq, void *dev_id)
{
  irqreturn_t __retres;
  struct de4x5_private *lp;
  s32 imr;
  s32 omr;
  s32 sts;
  s32 limit;
  u_long iobase;
  unsigned int tmp_0;
  int tmp_1;
  unsigned int tmp_2;
  int tmp_8;
  
#line 1538 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 1542 
  unsigned int handled = 0U;
  
#line 1544 
  lp = (struct de4x5_private *)netdev_priv((struct net_device const *)dev);
  
#line 1545 
  ldv_spin_lock_81(& lp->lock);
  
#line 1546 
  iobase = dev->base_addr;
  
#line 1548 
  tmp_0 = inl((int)((u_long)(56 << lp->bus) + iobase));
  
#line 1548 
  imr = (int)tmp_0;
  
#line 1548 
  imr = ~ lp->irq_en & imr;
  
#line 1548 
  outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
  
#line 1550 
  tmp_1 = test_and_set_bit(1L,(unsigned long volatile *)(& lp->interrupt));
  
#line 1550 
  if (tmp_1 != 0) 
#line 1551 
                  printk("%s: Re-entering the interrupt handler.\n",(char *)(& dev->name)); else ;
  
#line 1553 
  synchronize_irq((unsigned int)dev->irq);
  
#line 1555 
  limit = 0;
  
#line 1555 
  goto ldv_47152;
  ldv_47151: 
#line 1556 
  ;
  
#line 1556 
  tmp_2 = inl((int)((u_long)(40 << lp->bus) + iobase));
  
#line 1556 
  sts = (int)tmp_2;
  
#line 1557 
  outl((unsigned int)sts,(int)((u_long)(40 << lp->bus) + iobase));
  
#line 1559 
  if ((lp->irq_mask & sts) == 0) 
#line 1559 
                                 goto ldv_47150; else ;
  
#line 1560 
  handled = 1U;
  
#line 1562 
  if ((sts & 192) != 0) 
#line 1563 
                        de4x5_rx(dev); else ;
  
#line 1565 
  if ((sts & 5) != 0) 
#line 1566 
                      de4x5_tx(dev); else ;
  
#line 1568 
  if ((sts & 4096) != 0) 
#line 1569 
                         lp->irq_mask &= -4097; else ;
  
#line 1572 
  if ((sts & 32) != 0) 
#line 1573 
                       de4x5_txur(dev); else ;
  
#line 1576 
  if ((sts & 8192) != 0) {
    unsigned int tmp_3;
    
#line 1577 
    tmp_3 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 1577 
    omr = (int)tmp_3;
    
#line 1577 
    omr &= -8195;
    
#line 1577 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
    
#line 1578 
    printk("%s: Fatal bus error occurred, sts=%#8x, device stopped.\n",(char *)(& dev->name),sts);
    
#line 1580 
    ldv_spin_unlock_82(& lp->lock);
    
#line 1581 
    __retres = IRQ_HANDLED;
    
#line 1581 
    goto return_label;
  }
  else ;
  
#line 1555 
  limit += 1;
  ldv_47152: 
#line 1556 
  ;
  
#line 1555 
  if (limit <= 7) 
#line 1557 
                  goto ldv_47151; else 
#line 1560 
                                       goto ldv_47150;
  ldv_47150: 
#line 1561 
  ;
  
#line 1586 
  tmp_8 = test_and_set_bit(0L,(unsigned long volatile *)(& lp->cache.lock));
  
#line 1586 
  if (tmp_8 == 0) {
    struct sk_buff *tmp_4;
    int tmp_5;
    
#line 1587 
    goto ldv_47154;
    ldv_47153: 
#line 1588 
    ;
    
#line 1588 
    ;
    
#line 1588 
    tmp_4 = de4x5_get_cache(dev);
    
#line 1588 
    de4x5_queue_pkt(tmp_4,dev);
    ldv_47154: 
#line 1589 
    ;
    
#line 1587 
    tmp_5 = skb_queue_empty((struct sk_buff_head const *)(& lp->cache.queue));
    
#line 1587 
    if (tmp_5 == 0) {
      int tmp_7;
      bool tmp_6;
      
#line 1587 
      tmp_6 = netif_queue_stopped((struct net_device const *)dev);
      
#line 1587 
      if (tmp_6) 
#line 1587 
                 tmp_7 = 0; else 
#line 1587 
                                 tmp_7 = 1;
      
#line 1587 
      if (tmp_7) {
        
#line 1587 
        if ((int)lp->tx_enable != 0) 
#line 1589 
                                     goto ldv_47153; else 
#line 1592 
                                                          goto ldv_47155;
      }
      else 
#line 1592 
           goto ldv_47155;
    }
    else 
#line 1592 
         goto ldv_47155;
    ldv_47155: 
#line 1593 
    ;
    
#line 1590 
    lp->cache.lock = 0UL;
  }
  else ;
  
#line 1593 
  lp->interrupt = 0UL;
  
#line 1594 
  imr = lp->irq_en | imr;
  
#line 1594 
  outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
  
#line 1595 
  ldv_spin_unlock_83(& lp->lock);
  
#line 1597 
  __retres = (enum irqreturn)(handled != 0U);
  return_label: 
#line 1597 
                return __retres;
}


#line 1601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_rx(struct net_device *dev)
{
  int __retres;
  int entry;
  s32 status;
  
#line 1603 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1604 
  u_long iobase = dev->base_addr;
  
#line 1608 
  entry = lp->rx_new;
  
#line 1608 
  goto ldv_47170;
  ldv_47169: 
#line 1609 
  ;
  
#line 1610 
  status = (int)(lp->rx_ring + entry)->status;
  
#line 1612 
  if (lp->rx_ovf != 0) {
    unsigned int tmp_0;
    
#line 1613 
    tmp_0 = inl((int)((u_long)(64 << lp->bus) + iobase));
    
#line 1613 
    if ((tmp_0 & 536739840U) != 0U) {
      
#line 1614 
      de4x5_rx_ovfc(dev);
      
#line 1615 
      goto ldv_47163;
    }
    else ;
  }
  else ;
  
#line 1619 
  if ((status & 512) != 0) 
#line 1620 
                           lp->rx_old = entry; else ;
  
#line 1623 
  if ((status & 256) != 0) {
    
#line 1624 
    if ((int)lp->tx_enable != 0) 
#line 1624 
                                 lp->linkOK += 1; else ;
    
#line 1625 
    if ((status & 32768) != 0) {
      
#line 1626 
      lp->stats.rx_errors += 1UL;
      
#line 1627 
      if ((status & 2176) != 0) 
#line 1627 
                                lp->stats.rx_frame_errors += 1UL; else ;
      
#line 1628 
      if ((status & 2) != 0) 
#line 1628 
                             lp->stats.rx_crc_errors += 1UL; else ;
      
#line 1629 
      if ((status & 1) != 0) 
#line 1629 
                             lp->stats.rx_fifo_errors += 1UL; else ;
      
#line 1630 
      if ((status & 128) != 0) 
#line 1630 
                               lp->stats.rx_length_errors += 1UL; else ;
      
#line 1631 
      if ((status & 2048) != 0) 
#line 1631 
                                lp->pktStats.rx_runt_frames += 1U; else ;
      
#line 1632 
      if ((status & 64) != 0) 
#line 1632 
                              lp->pktStats.rx_collision += 1U; else ;
      
#line 1633 
      if ((status & 4) != 0) 
#line 1633 
                             lp->pktStats.rx_dribble += 1U; else ;
      
#line 1634 
      if ((status & 1) != 0) 
#line 1634 
                             lp->pktStats.rx_overflow += 1U; else ;
    }
    else {
      struct sk_buff *skb;
      
#line 1637 
      short pkt_len = (short)(((lp->rx_ring + entry)->status >> 16) + 65532U);
      
#line 1640 
      skb = de4x5_alloc_rx_buff(dev,entry,(int)pkt_len);
      
#line 1640 
      if (skb == (struct sk_buff *)0) {
        
#line 1641 
        printk("%s: Insufficient memory; nuking packet.\n",(char *)(& dev->name));
        
#line 1643 
        lp->stats.rx_dropped += 1UL;
      }
      else {
        
#line 1645 
        de4x5_dbg_rx(skb,(int)pkt_len);
        
#line 1648 
        skb->protocol = eth_type_trans(skb,dev);
        
#line 1649 
        de4x5_local_stats(dev,(char *)skb->data,(int)pkt_len);
        
#line 1650 
        netif_rx(skb);
        
#line 1653 
        lp->stats.rx_packets += 1UL;
        
#line 1654 
        lp->stats.rx_bytes += (unsigned long)pkt_len;
      }
    }
    
#line 1659 
    goto ldv_47167;
    ldv_47166: 
#line 1660 
    ;
    
#line 1660 
    (lp->rx_ring + lp->rx_old)->status = 2147483648U;
    
#line 1661 
    ldv_inline_asm();
    
#line 1659 
    lp->rx_old = (lp->rx_old + 1) % (int)lp->rxRingSize;
    ldv_47167: 
#line 1660 
    ;
    
#line 1659 
    if (lp->rx_old != entry) 
#line 1661 
                             goto ldv_47166; else 
#line 1664 
                                                  goto ldv_47168;
    ldv_47168: 
#line 1665 
    ;
    
#line 1663 
    (lp->rx_ring + entry)->status = 2147483648U;
    
#line 1664 
    ldv_inline_asm();
  }
  else ;
  
#line 1670 
  lp->rx_new = (lp->rx_new + 1) % (int)lp->rxRingSize;
  
#line 1609 
  entry = lp->rx_new;
  ldv_47170: 
#line 1610 
  ;
  
#line 1608 
  if ((int)(lp->rx_ring + entry)->status >= 0) 
#line 1610 
                                               goto ldv_47169; else 
#line 1613 
                                                                    goto ldv_47163;
  ldv_47163: 
#line 1614 
  ;
  
#line 1673 
  __retres = 0;
  
#line 1673 
  return __retres;
}


#line 1677  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
__inline static void de4x5_free_tx_buff(struct de4x5_private *lp, int entry)
{
  
#line 1679 
  dma_unmap_single_attrs(lp->gendev,(unsigned long long)(lp->tx_ring + entry)->buf,(unsigned long)(lp->tx_ring + entry)->des1 & 2047UL,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1682 
  if ((unsigned long)lp->tx_skb[entry] > 1UL) 
#line 1683 
                                              dev_kfree_skb_irq(lp->tx_skb[entry]); else ;
  
#line 1684 
  lp->tx_skb[entry] = (struct sk_buff *)0;
  
#line 1685 
  return;
}


#line 1691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_tx(struct net_device *dev)
{
  int __retres;
  int entry;
  s32 status;
  int tmp_1;
  
#line 1693 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1694 
  u_long iobase = dev->base_addr;
  
#line 1698 
  entry = lp->tx_old;
  
#line 1698 
  goto ldv_47184;
  ldv_47183: 
#line 1699 
  ;
  
#line 1699 
  status = (int)(lp->tx_ring + entry)->status;
  
#line 1700 
  if (status < 0) 
#line 1701 
                  goto ldv_47182;
  else 
    
#line 1702 
    if (status != 2147483647) {
      int tmp_0;
      
#line 1703 
      if ((status & 32768) != 0) {
        
#line 1704 
        lp->stats.tx_errors += 1UL;
        
#line 1705 
        if ((status & 1024) != 0) 
#line 1705 
                                  lp->stats.tx_carrier_errors += 1UL; else ;
        
#line 1706 
        if ((status & 512) != 0) 
#line 1706 
                                 lp->stats.tx_window_errors += 1UL; else ;
        
#line 1707 
        if ((status & 2) != 0) 
#line 1707 
                               lp->stats.tx_fifo_errors += 1UL; else ;
        
#line 1708 
        if ((status & 256) != 0) 
#line 1708 
                                 lp->pktStats.excessive_collisions += 1U; else ;
        
#line 1709 
        if ((status & 1) != 0) 
#line 1709 
                               lp->stats.tx_aborted_errors += 1UL; else ;
        
#line 1711 
        if (lp->tx_old != lp->tx_new) 
#line 1712 
                                      outl(1U,(int)((u_long)(8 << lp->bus) + iobase)); else ;
      }
      else {
        
#line 1715 
        lp->stats.tx_packets += 1UL;
        
#line 1716 
        if ((int)lp->tx_enable != 0) 
#line 1716 
                                     lp->linkOK += 1; else ;
      }
      
#line 1719 
      if ((status & 256) == 0) 
#line 1719 
                               tmp_0 = (status >> 3) & 15; else 
#line 1719 
                                                                tmp_0 = 16;
      
#line 1719 
      lp->stats.collisions += (unsigned long)tmp_0;
      
#line 1723 
      if (lp->tx_skb[entry] != (struct sk_buff *)0) 
#line 1724 
                                                    de4x5_free_tx_buff(lp,entry); else ;
    }
    else ;
  
#line 1728 
  lp->tx_old = (lp->tx_old + 1) % (int)lp->txRingSize;
  
#line 1698 
  entry = lp->tx_old;
  ldv_47184: 
#line 1699 
  ;
  
#line 1698 
  if (lp->tx_new != entry) 
#line 1700 
                           goto ldv_47183; else 
#line 1703 
                                                goto ldv_47182;
  ldv_47182: 
#line 1704 
  ;
  
#line 1732 
  if (lp->tx_old <= lp->tx_new) 
#line 1732 
                                tmp_1 = (lp->tx_old + (int)lp->txRingSize) - lp->tx_new != 1; else 
                                                                    
#line 1732 
                                                                    tmp_1 = lp->tx_old - lp->tx_new != 1;
  
#line 1732 
  if (tmp_1) {
    bool tmp_2;
    
#line 1732 
    tmp_2 = netif_queue_stopped((struct net_device const *)dev);
    
#line 1732 
    if ((int)tmp_2 != 0) 
      
#line 1733 
      if (lp->interrupt != 0UL) 
#line 1734 
                                netif_wake_queue(dev); else 
#line 1736 
                                                            netif_start_queue(dev);
    else ;
  }
  else ;
  
#line 1739 
  __retres = 0;
  
#line 1739 
  return __retres;
}


#line 1743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_ast(struct net_device *dev)
{
  int dt;
  
#line 1745 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1746 
  int next_tick = 250;
  
#line 1749 
  if ((int)lp->useSROM != 0) 
#line 1750 
                             next_tick = srom_autoconf(dev);
  else 
    
#line 1751 
    if (lp->chipset == 2304) 
#line 1752 
                             next_tick = dc21140m_autoconf(dev);
    else 
      
#line 1753 
      if (lp->chipset == 5120) 
#line 1754 
                               next_tick = dc21041_autoconf(dev);
      else 
        
#line 1755 
        if (lp->chipset == 512) 
#line 1756 
                                next_tick = dc21040_autoconf(dev); else ;
  
#line 1757 
  lp->linkOK = 0;
  
#line 1759 
  dt = (next_tick * 250) / 1000;
  
#line 1761 
  if (dt == 0) 
#line 1762 
               dt = 1; else ;
  
#line 1764 
  ldv_mod_timer_84(& lp->timer,(unsigned long)dt + jiffies);
  
#line 1765 
  return;
}


#line 1768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_txur(struct net_device *dev)
{
  int __retres;
  int omr;
  unsigned int tmp_0;
  
#line 1770 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1771 
  u_long iobase = dev->base_addr;
  
#line 1774 
  tmp_0 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 1774 
  omr = (int)tmp_0;
  
#line 1775 
  if (((omr & 2097152) == 0 || lp->chipset == 5120) || lp->chipset == 512) {
    unsigned int tmp_1;
    
#line 1776 
    omr &= -8195;
    
#line 1777 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
    
#line 1778 
    goto ldv_47198;
    ldv_47197: 
#line 1779 
    ;
    ldv_47198: 
#line 1780 
    ;
    
#line 1778 
    tmp_1 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 1778 
    if ((tmp_1 & 7340032U) != 0U) 
#line 1780 
                                  goto ldv_47197; else 
#line 1783 
                                                       goto ldv_47199;
    ldv_47199: 
#line 1784 
    ;
    
#line 1779 
    if ((omr & 49152) <= 49151) 
#line 1780 
                                omr += 16384; else 
#line 1782 
                                                   omr |= 2097152;
    
#line 1784 
    outl((unsigned int)(omr | 8194),(int)((u_long)(48 << lp->bus) + iobase));
  }
  else ;
  
#line 1787 
  __retres = 0;
  
#line 1787 
  return __retres;
}


#line 1791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_rx_ovfc(struct net_device *dev)
{
  int __retres;
  int omr;
  unsigned int tmp_0;
  unsigned int tmp_1;
  
#line 1793 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1794 
  u_long iobase = dev->base_addr;
  
#line 1797 
  tmp_0 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 1797 
  omr = (int)tmp_0;
  
#line 1798 
  outl((unsigned int)omr & 4294967293U,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1799 
  goto ldv_47207;
  ldv_47206: 
#line 1800 
  ;
  ldv_47207: 
#line 1801 
  ;
  
#line 1799 
  tmp_1 = inl((int)((u_long)(40 << lp->bus) + iobase));
  
#line 1799 
  if ((tmp_1 & 917504U) != 0U) 
#line 1801 
                               goto ldv_47206; else 
#line 1804 
                                                    goto ldv_47208;
  ldv_47208: 
#line 1805 
  ;
  
#line 1801 
  goto ldv_47210;
  ldv_47209: 
#line 1802 
  ;
  
#line 1802 
  (lp->rx_ring + lp->rx_new)->status = 2147483648U;
  
#line 1803 
  lp->rx_new = (lp->rx_new + 1) % (int)lp->rxRingSize;
  ldv_47210: 
#line 1804 
  ;
  
#line 1801 
  if ((int)(lp->rx_ring + lp->rx_new)->status >= 0) 
#line 1803 
                                                    goto ldv_47209; else 
                                                                    
#line 1806 
                                                                    goto ldv_47211;
  ldv_47211: 
#line 1807 
  ;
  
#line 1806 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1808 
  __retres = 0;
  
#line 1808 
  return __retres;
}


#line 1812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_close(struct net_device *dev)
{
  int __retres;
  s32 imr;
  s32 omr;
  unsigned int tmp_1;
  unsigned int tmp_2;
  
#line 1814 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1815 
  u_long iobase = dev->base_addr;
  
#line 1818 
  disable_ast(dev);
  
#line 1820 
  netif_start_queue(dev);
  
#line 1822 
  if ((de4x5_debug & 128) != 0) {
    unsigned int tmp_0;
    
#line 1824 
    tmp_0 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 1823 
    ;
    
#line 1823 
    printk("%s: Shutting down ethercard, status was %8.8x.\n",(char *)(& dev->name),tmp_0);
  }
  else ;
  
#line 1830 
  tmp_1 = inl((int)((u_long)(56 << lp->bus) + iobase));
  
#line 1830 
  imr = (int)tmp_1;
  
#line 1830 
  imr = ~ lp->irq_en & imr;
  
#line 1830 
  outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
  
#line 1831 
  tmp_2 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 1831 
  omr = (int)tmp_2;
  
#line 1831 
  omr &= -8195;
  
#line 1831 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1834 
  ldv_free_irq_85((unsigned int)dev->irq,(void *)dev);
  
#line 1835 
  lp->state = 1;
  
#line 1838 
  de4x5_free_rx_buffs(dev);
  
#line 1839 
  de4x5_free_tx_buffs(dev);
  
#line 1842 
  yawn(dev,128);
  
#line 1844 
  __retres = 0;
  
#line 1844 
  return __retres;
}


#line 1848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct net_device_stats *de4x5_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  unsigned int tmp_0;
  
#line 1850 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1851 
  u_long iobase = dev->base_addr;
  
#line 1853 
  tmp_0 = inl((int)((u_long)(64 << lp->bus) + iobase));
  
#line 1853 
  lp->stats.rx_missed_errors = (unsigned long)((int)tmp_0) & 131071UL;
  
#line 1855 
  __retres = & lp->stats;
  
#line 1855 
  return __retres;
}


#line 1859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_local_stats(struct net_device *dev, char *buf, int pkt_len)
{
  int i;
  bool tmp_2;
  
#line 1861 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1864 
  i = 1;
  
#line 1864 
  goto ldv_47232;
  ldv_47231: 
#line 1865 
  ;
  
#line 1865 
  if (i * 128 > pkt_len) {
    
#line 1866 
    lp->pktStats.bins[i] += 1U;
    
#line 1867 
    i = 16;
  }
  else ;
  
#line 1864 
  i += 1;
  ldv_47232: 
#line 1865 
  ;
  
#line 1864 
  if (i <= 14) 
#line 1866 
               goto ldv_47231; else 
#line 1869 
                                    goto ldv_47233;
  ldv_47233: 
#line 1870 
  ;
  
#line 1870 
  tmp_2 = is_multicast_ether_addr((u8 const *)buf);
  
#line 1870 
  if ((int)tmp_2 != 0) {
    bool tmp_0;
    
#line 1871 
    tmp_0 = is_broadcast_ether_addr((u8 const *)buf);
    
#line 1871 
    if ((int)tmp_0 != 0) 
#line 1872 
                         lp->pktStats.broadcast += 1U; else 
#line 1874 
                                                            lp->pktStats.multicast += 1U;
  }
  else {
    bool tmp_1;
    
#line 1876 
    tmp_1 = ether_addr_equal((u8 const *)buf,(u8 const *)dev->dev_addr);
    
#line 1876 
    if ((int)tmp_1 != 0) 
#line 1877 
                         lp->pktStats.unicast += 1U; else ;
  }
  
#line 1880 
  lp->pktStats.bins[0] += 1U;
  
#line 1881 
  if (lp->pktStats.bins[0] == 0U) 
#line 1882 
                                  memset((void *)(& lp->pktStats),0,104UL); else ;
  
#line 1883 
  return;
}


#line 1895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void load_packet(struct net_device *dev, char *buf, u32 flags, struct sk_buff *skb)
{
  int tmp_0;
  
#line 1897 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1898 
  if (lp->tx_new != 0) 
#line 1898 
                       tmp_0 = lp->tx_new + -1; else 
#line 1898 
                                                     tmp_0 = (int)lp->txRingSize + -1;
  
#line 1898 
  int entry = tmp_0;
  
#line 1899 
  dma_addr_t buf_dma = dma_map_single_attrs(lp->gendev,(void *)buf,(unsigned long)flags & 2047UL,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 1901 
  (lp->tx_ring + lp->tx_new)->buf = (unsigned int)buf_dma;
  
#line 1902 
  (lp->tx_ring + lp->tx_new)->des1 &= 33554432U;
  
#line 1903 
  (lp->tx_ring + lp->tx_new)->des1 |= flags;
  
#line 1904 
  lp->tx_skb[lp->tx_new] = skb;
  
#line 1905 
  (lp->tx_ring + entry)->des1 &= 2147483647U;
  
#line 1906 
  ldv_inline_asm();
  
#line 1908 
  (lp->tx_ring + lp->tx_new)->status = 2147483648U;
  
#line 1909 
  ldv_inline_asm();
  
#line 1910 
  return;
}


#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void set_multicast_list(struct net_device *dev)
{
  
#line 1918 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1919 
  u_long iobase = dev->base_addr;
  
#line 1922 
  if (lp->state == 2) 
    
#line 1923 
    if ((dev->flags & 256U) != 0U) {
      u32 omr;
      
#line 1925 
      omr = inl((int)((u_long)(48 << lp->bus) + iobase));
      
#line 1926 
      omr |= 64U;
      
#line 1927 
      outl(omr,(int)((u_long)(48 << lp->bus) + iobase));
    }
    else {
      
#line 1929 
      SetMulticastFilter(dev);
      
#line 1930 
      load_packet(dev,(char *)(& lp->setup_frame),2281701568U,(struct sk_buff *)1);
      
#line 1933 
      lp->tx_new = (lp->tx_new + 1) % (int)lp->txRingSize;
      
#line 1934 
      outl(1U,(int)((u_long)(8 << lp->bus) + iobase));
      
#line 1935 
      dev->trans_start = jiffies;
    }
  else ;
  
#line 1937 
  return;
}


#line 1946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void SetMulticastFilter(struct net_device *dev)
{
  struct netdev_hw_addr *ha;
  int i;
  int bit;
  int byte;
  u16 hashcode;
  u32 omr;
  u32 crc;
  char *pa;
  unsigned char *addrs;
  
#line 1948 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 1950 
  u_long iobase = dev->base_addr;
  
#line 1957 
  omr = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 1958 
  omr &= 4294967103U;
  
#line 1959 
  pa = build_setup_frame(dev,0);
  
#line 1961 
  if ((dev->flags & 512U) != 0U || dev->mc.count > 14) 
#line 1962 
                                                       omr |= 128U;
  else 
    
#line 1963 
    if (lp->setup_f == 1) {
      struct netdev_hw_addr *tmp_0;
      struct netdev_hw_addr *tmp_1;
      {
        
#line 1964 
        struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
        
#line 1964 
        tmp_0 = (struct netdev_hw_addr *)__mptr;
      }
      
#line 1964 
      ha = tmp_0;
      
#line 1964 
      goto ldv_47268;
      ldv_47267: 
#line 1965 
      ;
      
#line 1965 
      crc = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
      
#line 1966 
      hashcode = (unsigned short)((unsigned int)((unsigned short)crc) & 511U);
      
#line 1968 
      byte = (int)hashcode >> 3;
      
#line 1969 
      bit = 1 << ((int)hashcode & 7);
      
#line 1971 
      byte <<= 1;
      
#line 1972 
      if ((byte & 2) != 0) 
#line 1973 
                           byte += -1; else ;
      
#line 1975 
      lp->setup_frame[byte] = (char)((int)lp->setup_frame[byte] | (int)((char)bit));
      {
        
#line 1964 
        struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
        
#line 1964 
        tmp_1 = (struct netdev_hw_addr *)__mptr_0;
      }
      
#line 1964 
      ha = tmp_1;
      ldv_47268: 
#line 1966 
      ;
      
#line 1964 
      if (& ha->list != & dev->mc.list) 
#line 1966 
                                        goto ldv_47267; else 
#line 1969 
                                                             goto ldv_47269;
      ldv_47269: 
#line 1970 
      ;
    }
    else {
      struct netdev_hw_addr *tmp_2;
      unsigned char *tmp_3;
      struct netdev_hw_addr *tmp_4;
      {
        
#line 1978 
        struct list_head const *__mptr_1 = (struct list_head const *)dev->mc.list.next;
        
#line 1978 
        tmp_2 = (struct netdev_hw_addr *)__mptr_1;
      }
      
#line 1978 
      ha = tmp_2;
      
#line 1978 
      goto ldv_47278;
      ldv_47277: 
#line 1979 
      ;
      
#line 1979 
      addrs = (unsigned char *)(& ha->addr);
      
#line 1980 
      i = 0;
      
#line 1980 
      goto ldv_47275;
      ldv_47274: 
#line 1981 
      ;
      
#line 1981 
      tmp_3 = addrs;
      
#line 1981 
      addrs += 1;
      
#line 1981 
      *(pa + ((unsigned int)i & 1U)) = (char)*tmp_3;
      
#line 1982 
      if ((i & 1) != 0) 
#line 1982 
                        pa += 4U; else ;
      
#line 1980 
      i += 1;
      ldv_47275: 
#line 1981 
      ;
      
#line 1980 
      if (i <= 5) 
#line 1982 
                  goto ldv_47274; else 
#line 1985 
                                       goto ldv_47276;
      ldv_47276: 
#line 1986 
      ;
      {
        
#line 1978 
        struct list_head const *__mptr_2 = (struct list_head const *)ha->list.next;
        
#line 1978 
        tmp_4 = (struct netdev_hw_addr *)__mptr_2;
      }
      
#line 1978 
      ha = tmp_4;
      ldv_47278: 
#line 1980 
      ;
      
#line 1978 
      if (& ha->list != & dev->mc.list) 
#line 1980 
                                        goto ldv_47277; else 
#line 1983 
                                                             goto ldv_47279;
      ldv_47279: 
#line 1984 
      ;
    }
  
#line 1986 
  outl(omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 1987 
  return;
}


#line 2121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_search(struct net_device *dev, struct pci_dev *pdev)
{
  u_char pb;
  u_short vendor;
  u_short status;
  u_int device;
  int i;
  int j;
  struct pci_dev *this_dev;
  struct pci_dev *tmp_0;
  struct pci_dev *tmp_2;
  
#line 2125 
  u_int irq = 0U;
  
#line 2126 
  u_long iobase = 0UL;
  
#line 2128 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  {
    
#line 2131 
    struct list_head const *__mptr = (struct list_head const *)(pdev->bus)->devices.next;
    
#line 2131 
    tmp_0 = (struct pci_dev *)__mptr;
  }
  
#line 2131 
  this_dev = tmp_0;
  
#line 2131 
  goto ldv_47306;
  ldv_47305: 
#line 2132 
  ;
  
#line 2132 
  vendor = this_dev->vendor;
  
#line 2133 
  device = (unsigned int)((int)this_dev->device << 8);
  
#line 2134 
  if ((unsigned int)vendor != 4113U || ((device != 512U && device != 5120U) && (device != 2304U && device != 6400U))) 
    
#line 2134 
    goto ldv_47298; else ;
  
#line 2137 
  pb = (this_dev->bus)->number;
  
#line 2140 
  lp->device = (int)(this_dev->devfn >> 3) & 31;
  
#line 2141 
  lp->bus_num = (int)pb;
  
#line 2144 
  if ((unsigned int)vendor == 4113U && device == 6400U) {
    int tmp_1;
    
#line 2146 
    if (((int)this_dev->revision & 240) <= 31) 
#line 2146 
                                               tmp_1 = 6416; else 
#line 2146 
                                                                  tmp_1 = 6448;
    
#line 2145 
    device = (unsigned int)tmp_1;
  }
  else ;
  
#line 2148 
  lp->chipset = (int)device;
  
#line 2151 
  iobase = (unsigned long)this_dev->resource[0].start;
  
#line 2154 
  irq = this_dev->irq;
  
#line 2155 
  if ((irq == 0U || irq == 255U) || irq == 4294967295U) 
#line 2155 
                                                        goto ldv_47298; else ;
  
#line 2158 
  pci_read_config_word((struct pci_dev const *)this_dev,4,& status);
  
#line 2159 
  if (((int)status & 1) == 0) 
#line 2159 
                              goto ldv_47298; else ;
  
#line 2162 
  DevicePresent(dev,(unsigned long)(72 << lp->bus) + iobase);
  
#line 2163 
  j = 0;
  
#line 2163 
  i = 0;
  
#line 2163 
  goto ldv_47300;
  ldv_47299: 
#line 2164 
  ;
  
#line 2164 
  j = (int)*((u_char *)(& lp->srom) + ((unsigned int)i + 20U)) + j;
  
#line 2163 
  i += 1;
  ldv_47300: 
#line 2164 
  ;
  
#line 2163 
  if (i <= 5) 
#line 2165 
              goto ldv_47299; else 
#line 2168 
                                   goto ldv_47301;
  ldv_47301: 
#line 2169 
  ;
  
#line 2166 
  if (j != 0 && j != 1530) {
    
#line 2167 
    last.chipset = (int)device;
    
#line 2168 
    last.bus = (int)pb;
    
#line 2169 
    last.irq = (int)irq;
    
#line 2170 
    i = 0;
    
#line 2170 
    goto ldv_47303;
    ldv_47302: 
#line 2171 
    ;
    
#line 2171 
    last.addr[i] = *((u_char *)(& lp->srom) + ((unsigned int)i + 20U));
    
#line 2170 
    i += 1;
    ldv_47303: 
#line 2171 
    ;
    
#line 2170 
    if (i <= 5) 
#line 2172 
                goto ldv_47302; else 
#line 2175 
                                     goto ldv_47304;
    ldv_47304: 
#line 2176 
    ;
    
#line 2173 
    goto return_label;
  }
  else ;
  ldv_47298: 
#line 2175 
  ;
  {
    
#line 2131 
    struct list_head const *__mptr_0 = (struct list_head const *)this_dev->bus_list.next;
    
#line 2131 
    tmp_2 = (struct pci_dev *)__mptr_0;
  }
  
#line 2131 
  this_dev = tmp_2;
  ldv_47306: 
#line 2133 
  ;
  
#line 2131 
  if (& this_dev->bus_list != & (pdev->bus)->devices) 
#line 2133 
                                                      goto ldv_47305; else 
                                                                    
#line 2136 
                                                                    goto ldv_47307;
  ldv_47307: 
#line 2137 
  ;
  return_label: 
#line 2138 
                return;
}


#line 2194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_pci_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  u_char pb;
  u_char dev_num;
  u_char timer;
  u_short vendor;
  u_short status;
  u_int device;
  int error;
  struct net_device *dev;
  struct de4x5_private *lp;
  struct resource *tmp_1;
  
#line 2197 
  u_char pbus = (unsigned char)0U;
  
#line 2197 
  u_char dnum = (unsigned char)0U;
  
#line 2199 
  u_int irq = 0U;
  
#line 2200 
  u_long iobase = 0UL;
  
#line 2205 
  dev_num = (unsigned char)((unsigned int)((unsigned char)(pdev->devfn >> 3)) & 31U);
  
#line 2206 
  pb = (pdev->bus)->number;
  
#line 2208 
  if (io != 0) {
    
#line 2209 
    pbus = (unsigned char)(io >> 8);
    
#line 2210 
    dnum = (unsigned char)io;
    
#line 2211 
    if ((int)pbus != (int)pb || (int)dnum != (int)dev_num) {
      
#line 2212 
      __retres = -19;
      
#line 2212 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2215 
  vendor = pdev->vendor;
  
#line 2216 
  device = (unsigned int)((int)pdev->device << 8);
  
#line 2217 
  if ((unsigned int)vendor != 4113U || ((device != 512U && device != 5120U) && (device != 2304U && device != 6400U))) {
    
#line 2218 
    __retres = -19;
    
#line 2218 
    goto return_label;
  }
  else ;
  
#line 2221 
  error = pci_enable_device(pdev);
  
#line 2221 
  if (error != 0) {
    
#line 2222 
    __retres = error;
    
#line 2222 
    goto return_label;
  }
  else ;
  
#line 2224 
  dev = ldv_alloc_etherdev_mqs_86(2256,1U,1U);
  
#line 2224 
  if (dev == (struct net_device *)0) {
    
#line 2225 
    error = -12;
    
#line 2226 
    goto disable_dev;
  }
  else ;
  
#line 2229 
  lp = (struct de4x5_private *)netdev_priv((struct net_device const *)dev);
  
#line 2230 
  lp->bus = 0;
  
#line 2231 
  lp->bus_num = 0;
  
#line 2234 
  if (lp->bus_num != (int)pb) {
    
#line 2235 
    lp->bus_num = (int)pb;
    
#line 2236 
    srom_search(dev,pdev);
  }
  else ;
  
#line 2240 
  lp->cfrv = (int)pdev->revision;
  
#line 2243 
  lp->device = (int)dev_num;
  
#line 2244 
  lp->bus_num = (int)pb;
  
#line 2247 
  if ((unsigned int)vendor == 4113U && device == 6400U) {
    int tmp_0;
    
#line 2248 
    if ((lp->cfrv & 240) <= 31) 
#line 2248 
                                tmp_0 = 6416; else 
#line 2248 
                                                   tmp_0 = 6448;
    
#line 2248 
    device = (unsigned int)tmp_0;
  }
  else ;
  
#line 2250 
  lp->chipset = (int)device;
  
#line 2253 
  iobase = (unsigned long)pdev->resource[0].start;
  
#line 2256 
  irq = pdev->irq;
  
#line 2257 
  if ((irq == 0U || irq == 255U) || irq == 4294967295U) {
    
#line 2258 
    error = -19;
    
#line 2259 
    goto free_dev;
  }
  else ;
  
#line 2263 
  pci_read_config_word((struct pci_dev const *)pdev,4,& status);
  
#line 2271 
  if (((int)status & 1) == 0) {
    
#line 2272 
    error = -19;
    
#line 2273 
    goto free_dev;
  }
  else ;
  
#line 2276 
  if (((int)status & 4) == 0) {
    
#line 2277 
    status = (unsigned short)((unsigned int)status | 4U);
    
#line 2278 
    pci_write_config_word((struct pci_dev const *)pdev,4,(unsigned short)((int)status));
    
#line 2279 
    pci_read_config_word((struct pci_dev const *)pdev,4,& status);
  }
  else ;
  
#line 2281 
  if (((int)status & 4) == 0) {
    
#line 2282 
    error = -19;
    
#line 2283 
    goto free_dev;
  }
  else ;
  
#line 2287 
  pci_read_config_byte((struct pci_dev const *)pdev,13,& timer);
  
#line 2288 
  if ((unsigned int)timer <= 95U) 
#line 2289 
                                  pci_write_config_byte((struct pci_dev const *)pdev,13,(unsigned char)96); else ;
  
#line 2292 
  DevicePresent(dev,(unsigned long)(72 << lp->bus) + iobase);
  
#line 2294 
  tmp_1 = __request_region(& ioport_resource,(unsigned long long)iobase,128ULL,"de4x5",0);
  
#line 2294 
  if (tmp_1 == (struct resource *)0) {
    
#line 2295 
    error = -16;
    
#line 2296 
    goto free_dev;
  }
  else ;
  
#line 2299 
  dev->irq = (int)irq;
  
#line 2301 
  error = de4x5_hw_init(dev,iobase,& pdev->dev);
  
#line 2301 
  if (error != 0) 
#line 2302 
                  goto release; else ;
  
#line 2305 
  __retres = 0;
  
#line 2305 
  goto return_label;
  release: 
#line 2307 
  ;
  
#line 2308 
  __release_region(& ioport_resource,(unsigned long long)iobase,128ULL);
  free_dev: 
#line 2309 
  ;
  
#line 2310 
  ldv_free_netdev_87(dev);
  disable_dev: 
#line 2311 
  ;
  
#line 2312 
  pci_disable_device(pdev);
  
#line 2313 
  __retres = error;
  return_label: 
#line 2313 
                return __retres;
}


#line 2316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_pci_remove(struct pci_dev *pdev)
{
  struct net_device *dev;
  u_long iobase;
  
#line 2321 
  dev = (struct net_device *)pci_get_drvdata(pdev);
  
#line 2322 
  iobase = dev->base_addr;
  
#line 2324 
  ldv_unregister_netdev_88(dev);
  
#line 2325 
  ldv_free_netdev_89(dev);
  
#line 2326 
  __release_region(& ioport_resource,(unsigned long long)iobase,128ULL);
  
#line 2327 
  pci_disable_device(pdev);
  
#line 2328 
  return;
}


#line 2330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct pci_device_id const de4x5_pci_tbl[5U] = {{.vendor = 4113U, .device = 2U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 4113U, .device = 20U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 4113U, .device = 9U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 4113U, .device = 25U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 2342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct pci_driver de4x5_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "de4x5", .id_table = (struct pci_device_id const *)(& de4x5_pci_tbl), .probe = & de4x5_pci_probe, .remove = & de4x5_pci_remove, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 2359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int autoconf_media(struct net_device *dev)
{
  int __retres;
  
#line 2361 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2362 
  u_long iobase = dev->base_addr;
  
#line 2364 
  disable_ast(dev);
  
#line 2366 
  lp->c_media = 16384;
  
#line 2367 
  inl((int)((u_long)(64 << lp->bus) + iobase));
  
#line 2368 
  lp->media = 512;
  
#line 2369 
  lp->tcount = 0;
  
#line 2371 
  de4x5_ast(dev);
  
#line 2373 
  __retres = lp->media;
  
#line 2373 
  return __retres;
}


#line 2389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21040_autoconf(struct net_device *dev)
{
  s32 imr;
  
#line 2391 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2392 
  u_long iobase = dev->base_addr;
  
#line 2393 
  int next_tick = 250;
  
#line 2396 
  switch (lp->media) {
    unsigned int tmp_0;
    case 512: 
#line 2397 
    ;
    
#line 2398 
    tmp_0 = inl((int)((u_long)(56 << lp->bus) + iobase));
    
#line 2398 
    imr = (int)tmp_0;
    
#line 2398 
    imr = ~ lp->irq_en & imr;
    
#line 2398 
    outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
    
#line 2399 
    lp->tx_enable = (_Bool)0;
    
#line 2400 
    lp->timeout = -1;
    
#line 2401 
    de4x5_save_skbs(dev);
    
#line 2402 
    if (lp->autosense == 16384 || lp->autosense == 64) 
#line 2403 
                                                       lp->media = 64;
    else 
      
#line 2404 
      if ((lp->autosense == 4 || lp->autosense == 8) || lp->autosense == 16) 
        
#line 2405 
        lp->media = 16;
      else 
        
#line 2406 
        if (lp->autosense == 1024) 
#line 2407 
                                   lp->media = 1024; else 
#line 2409 
                                                          lp->media = 0;
    
#line 2411 
    lp->local_state = 0;
    
#line 2412 
    next_tick = dc21040_autoconf(dev);
    
#line 2413 
    goto ldv_47348;
    case 64: 
#line 2415 
    ;
    
#line 2416 
    next_tick = dc21040_state(dev,36609,65535,0,3000,16,2051,& test_tp);
    
#line 2418 
    goto ldv_47348;
    case 2051: 
#line 2420 
    ;
    
#line 2421 
    next_tick = de4x5_suspect_state(dev,1000,64,& test_tp,& dc21040_autoconf);
    
#line 2422 
    goto ldv_47348;
    case 4: 
#line 2424 
    ;
    case 8: 
#line 2425 
    ;
    case 16: 
#line 2426 
    ;
    
#line 2427 
    next_tick = dc21040_state(dev,36617,1797,6,3000,1024,2052,& ping_media);
    
#line 2429 
    goto ldv_47348;
    case 2052: 
#line 2431 
    ;
    
#line 2432 
    next_tick = de4x5_suspect_state(dev,1000,16,& ping_media,& dc21040_autoconf);
    
#line 2433 
    goto ldv_47348;
    case 1024: 
#line 2435 
    ;
    
#line 2436 
    next_tick = dc21040_state(dev,12353,0,6,3000,0,2053,& ping_media);
    
#line 2438 
    goto ldv_47348;
    case 2053: 
#line 2440 
    ;
    
#line 2441 
    next_tick = de4x5_suspect_state(dev,1000,1024,& ping_media,& dc21040_autoconf);
    
#line 2442 
    goto ldv_47348;
    case 0: 
#line 2444 
    ;
    
#line 2446 
    reset_init_sia(dev,36609,65535,0);
    
#line 2447 
    if (lp->media != lp->c_media) {
      
#line 2448 
      de4x5_dbg_media(dev);
      
#line 2449 
      lp->c_media = lp->media;
    }
    else ;
    
#line 2451 
    lp->media = 512;
    
#line 2452 
    lp->tx_enable = (_Bool)0;
    
#line 2453 
    goto ldv_47348;
  }
  ldv_47348: 
#line 2456 
  ;
  
#line 2456 
  return next_tick;
}


#line 2460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21040_state(struct net_device *dev, int csr13, int csr14, int csr15, int timeout, int next_state, int suspect_state, int (*fn)(struct net_device *, int ))
{
  int linkBad;
  
#line 2464 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2465 
  int next_tick = 250;
  
#line 2468 
  switch (lp->local_state) {
    case 0: 
#line 2469 
    ;
    
#line 2470 
    reset_init_sia(dev,csr13,csr14,csr15);
    
#line 2471 
    lp->local_state += 1;
    
#line 2472 
    next_tick = 500;
    
#line 2473 
    goto ldv_47374;
    case 1: 
#line 2475 
    ;
    
#line 2476 
    if (! lp->tx_enable) {
      
#line 2477 
      linkBad = (*fn)(dev,timeout);
      
#line 2478 
      if (linkBad < 0) 
#line 2479 
                       next_tick = linkBad & 2147483647;
      else 
        
#line 2481 
        if (linkBad != 0 && lp->autosense == 16384) {
          
#line 2482 
          lp->local_state = 0;
          
#line 2483 
          lp->media = next_state;
        }
        else 
#line 2485 
             de4x5_init_connection(dev);
    }
    else 
      
#line 2488 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        
#line 2489 
        lp->media = suspect_state;
        
#line 2490 
        next_tick = 3000;
      }
      else ;
    
#line 2492 
    goto ldv_47374;
  }
  ldv_47374: 
#line 2495 
  ;
  
#line 2495 
  return next_tick;
}


#line 2499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_suspect_state(struct net_device *dev, int timeout, int prev_state, int (*fn)(struct net_device *, int ), int (*asfn)(struct net_device *))
{
  int linkBad;
  
#line 2503 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2504 
  int next_tick = 250;
  
#line 2507 
  switch (lp->local_state) {
    case 1: 
#line 2508 
    ;
    
#line 2509 
    if (lp->linkOK != 0) 
#line 2510 
                         lp->media = prev_state;
    else {
      
#line 2512 
      lp->local_state += 1;
      
#line 2513 
      next_tick = (*asfn)(dev);
    }
    
#line 2515 
    goto ldv_47390;
    case 2: 
#line 2517 
    ;
    
#line 2518 
    linkBad = (*fn)(dev,timeout);
    
#line 2519 
    if (linkBad < 0) 
#line 2520 
                     next_tick = linkBad & 2147483647;
    else 
      
#line 2521 
      if (linkBad == 0) {
        
#line 2522 
        lp->local_state -= 1;
        
#line 2523 
        lp->media = prev_state;
      }
      else {
        
#line 2525 
        lp->media = 512;
        
#line 2526 
        lp->tcount += 1;
      }
  }
  ldv_47390: 
#line 2530 
  ;
  
#line 2530 
  return next_tick;
}


#line 2543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21041_autoconf(struct net_device *dev)
{
  s32 sts;
  s32 irqs;
  s32 irq_mask;
  s32 imr;
  s32 omr;
  
#line 2545 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2546 
  u_long iobase = dev->base_addr;
  
#line 2548 
  int next_tick = 250;
  
#line 2550 
  switch (lp->media) {
    unsigned int tmp_0;
    unsigned int tmp_7;
    case 512: 
#line 2551 
    ;
    
#line 2552 
    tmp_0 = inl((int)((u_long)(56 << lp->bus) + iobase));
    
#line 2552 
    imr = (int)tmp_0;
    
#line 2552 
    imr = ~ lp->irq_en & imr;
    
#line 2552 
    outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
    
#line 2553 
    lp->tx_enable = (_Bool)0;
    
#line 2554 
    lp->timeout = -1;
    
#line 2555 
    de4x5_save_skbs(dev);
    
#line 2556 
    if (lp->autosense == 16384 || lp->autosense == 2) 
#line 2557 
                                                      lp->media = 64;
    else 
      
#line 2558 
      if (lp->autosense == 64) 
#line 2559 
                               lp->media = 64;
      else 
        
#line 2560 
        if (lp->autosense == 4) 
#line 2561 
                                lp->media = 4;
        else 
          
#line 2562 
          if (lp->autosense == 8) 
#line 2563 
                                  lp->media = 8; else 
#line 2565 
                                                      lp->media = 0;
    
#line 2567 
    lp->local_state = 0;
    
#line 2568 
    next_tick = dc21041_autoconf(dev);
    
#line 2569 
    goto ldv_47404;
    case 2: 
#line 2571 
    ;
    
#line 2572 
    if (lp->timeout < 0) {
      unsigned int tmp_1;
      
#line 2573 
      tmp_1 = inl((int)((u_long)(48 << lp->bus) + iobase));
      
#line 2573 
      omr = (int)tmp_1;
      
#line 2574 
      outl((unsigned int)(omr | 512),(int)((u_long)(48 << lp->bus) + iobase));
    }
    else ;
    
#line 2576 
    irqs = 4112;
    
#line 2577 
    irq_mask = 4112;
    
#line 2578 
    sts = test_media(dev,irqs,irq_mask,61185,65535,8,2400);
    
#line 2579 
    if (sts < 0) 
#line 2580 
                 next_tick = sts & 2147483647;
    else {
      
#line 2582 
      if ((sts & 16) != 0) 
#line 2583 
                           lp->media = 32; else 
#line 2585 
                                                lp->media = 8;
      
#line 2587 
      next_tick = dc21041_autoconf(dev);
    }
    
#line 2589 
    goto ldv_47404;
    case 32: 
#line 2591 
    ;
    
#line 2592 
    if (! lp->tx_enable) {
      
#line 2593 
      irqs = 16;
      
#line 2594 
      irq_mask = 16;
      
#line 2595 
      sts = test_ans(dev,irqs,irq_mask,3000);
      
#line 2596 
      if (sts < 0) 
#line 2597 
                   next_tick = sts & 2147483647;
      else 
        
#line 2599 
        if ((sts & 16) == 0 && lp->autosense == 16384) {
          
#line 2600 
          lp->media = 64;
          
#line 2601 
          next_tick = dc21041_autoconf(dev);
        }
        else {
          
#line 2603 
          lp->local_state = 1;
          
#line 2604 
          de4x5_init_connection(dev);
        }
    }
    else 
      
#line 2607 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        
#line 2608 
        lp->media = 2050;
        
#line 2609 
        next_tick = 3000;
      }
      else ;
    
#line 2611 
    goto ldv_47404;
    case 2050: 
#line 2613 
    ;
    
#line 2614 
    next_tick = de4x5_suspect_state(dev,1000,32,& test_tp,& dc21041_autoconf);
    
#line 2615 
    goto ldv_47404;
    case 64: 
#line 2617 
    ;
    
#line 2618 
    if (! lp->tx_enable) {
      
#line 2619 
      if (lp->timeout < 0) {
        unsigned int tmp_2;
        
#line 2620 
        tmp_2 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 2620 
        omr = (int)tmp_2;
        
#line 2621 
        outl((unsigned int)omr & 4294966783U,(int)((u_long)(48 << lp->bus) + iobase));
      }
      else ;
      
#line 2623 
      irqs = 4112;
      
#line 2624 
      irq_mask = 4112;
      
#line 2625 
      sts = test_media(dev,irqs,irq_mask,61185,65343,8,2400);
      
#line 2626 
      if (sts < 0) 
#line 2627 
                   next_tick = sts & 2147483647;
      else 
        
#line 2629 
        if ((sts & 16) == 0 && lp->autosense == 16384) {
          unsigned int tmp_3;
          
#line 2630 
          tmp_3 = inl((int)((u_long)(96 << lp->bus) + iobase));
          
#line 2630 
          if ((tmp_3 & 512U) != 0U) 
#line 2631 
                                    lp->media = 8; else 
#line 2633 
                                                        lp->media = 4;
          
#line 2635 
          next_tick = dc21041_autoconf(dev);
        }
        else {
          
#line 2637 
          lp->local_state = 1;
          
#line 2638 
          de4x5_init_connection(dev);
        }
    }
    else 
      
#line 2641 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        
#line 2642 
        lp->media = 2051;
        
#line 2643 
        next_tick = 3000;
      }
      else ;
    
#line 2645 
    goto ldv_47404;
    case 2051: 
#line 2647 
    ;
    
#line 2648 
    next_tick = de4x5_suspect_state(dev,1000,64,& test_tp,& dc21041_autoconf);
    
#line 2649 
    goto ldv_47404;
    case 8: 
#line 2651 
    ;
    
#line 2652 
    if (! lp->tx_enable) {
      
#line 2653 
      if (lp->timeout < 0) {
        unsigned int tmp_4;
        
#line 2654 
        tmp_4 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 2654 
        omr = (int)tmp_4;
        
#line 2655 
        outl((unsigned int)omr & 4294966783U,(int)((u_long)(48 << lp->bus) + iobase));
      }
      else ;
      
#line 2657 
      irqs = 0;
      
#line 2658 
      irq_mask = 0;
      
#line 2659 
      sts = test_media(dev,irqs,irq_mask,61193,63293,14,1000);
      
#line 2660 
      if (sts < 0) 
#line 2661 
                   next_tick = sts & 2147483647;
      else {
        unsigned int tmp_5;
        
#line 2663 
        tmp_5 = inl((int)((u_long)(96 << lp->bus) + iobase));
        
#line 2663 
        if ((tmp_5 & 256U) == 0U) {
          
#line 2663 
          if (lp->autosense == 16384) {
            
#line 2664 
            lp->media = 4;
            
#line 2665 
            next_tick = dc21041_autoconf(dev);
          }
          else 
#line 2663 
               goto _LAND;
        }
        else {
          _LAND: {
                   
#line 2667 
                   lp->local_state = 1;
                   
#line 2668 
                   de4x5_init_connection(dev);
                 }
        }
      }
    }
    else 
      
#line 2671 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        
#line 2672 
        lp->media = 2055;
        
#line 2673 
        next_tick = 3000;
      }
      else ;
    
#line 2675 
    goto ldv_47404;
    case 2055: 
#line 2677 
    ;
    
#line 2678 
    next_tick = de4x5_suspect_state(dev,1000,8,& ping_media,& dc21041_autoconf);
    
#line 2679 
    goto ldv_47404;
    case 4: 
#line 2681 
    ;
    
#line 2682 
    switch (lp->local_state) {
      case 0: 
#line 2683 
      ;
      
#line 2684 
      if (lp->timeout < 0) {
        unsigned int tmp_6;
        
#line 2685 
        tmp_6 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 2685 
        omr = (int)tmp_6;
        
#line 2686 
        outl((unsigned int)omr & 4294966783U,(int)((u_long)(48 << lp->bus) + iobase));
      }
      else ;
      
#line 2688 
      irqs = 0;
      
#line 2689 
      irq_mask = 0;
      
#line 2690 
      sts = test_media(dev,irqs,irq_mask,61193,63293,6,1000);
      
#line 2691 
      if (sts < 0) 
#line 2692 
                   next_tick = sts & 2147483647;
      else {
        
#line 2694 
        lp->local_state += 1;
        
#line 2695 
        next_tick = dc21041_autoconf(dev);
      }
      
#line 2697 
      goto ldv_47414;
      case 1: 
#line 2699 
      ;
      
#line 2700 
      if (! lp->tx_enable) {
        
#line 2701 
        sts = ping_media(dev,3000);
        
#line 2701 
        if (sts < 0) 
#line 2702 
                     next_tick = sts & 2147483647;
        else 
          
#line 2704 
          if (sts != 0) {
            
#line 2705 
            lp->local_state = 0;
            
#line 2706 
            lp->media = 0;
          }
          else 
#line 2708 
               de4x5_init_connection(dev);
      }
      else 
        
#line 2711 
        if (lp->linkOK == 0 && lp->autosense == 16384) {
          
#line 2712 
          lp->media = 2054;
          
#line 2713 
          next_tick = 3000;
        }
        else ;
      
#line 2715 
      goto ldv_47414;
    }
    ldv_47414: 
#line 2717 
    ;
    
#line 2717 
    goto ldv_47404;
    case 2054: 
#line 2719 
    ;
    
#line 2720 
    next_tick = de4x5_suspect_state(dev,1000,4,& ping_media,& dc21041_autoconf);
    
#line 2721 
    goto ldv_47404;
    case 0: 
#line 2723 
    ;
    
#line 2724 
    tmp_7 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 2724 
    omr = (int)tmp_7;
    
#line 2725 
    outl((unsigned int)(omr | 512),(int)((u_long)(48 << lp->bus) + iobase));
    
#line 2726 
    reset_init_sia(dev,61185,65535,8);
    
#line 2727 
    if (lp->media != lp->c_media) {
      
#line 2728 
      de4x5_dbg_media(dev);
      
#line 2729 
      lp->c_media = lp->media;
    }
    else ;
    
#line 2731 
    lp->media = 512;
    
#line 2732 
    lp->tx_enable = (_Bool)0;
    
#line 2733 
    goto ldv_47404;
  }
  ldv_47404: 
#line 2736 
  ;
  
#line 2736 
  return next_tick;
}


#line 2745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21140m_autoconf(struct net_device *dev)
{
  int __retres;
  int ana;
  int anlpa;
  int cap;
  int cr;
  int slnk;
  int sr;
  u_long imr;
  u_long omr;
  
#line 2747 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2749 
  int next_tick = 250;
  
#line 2750 
  u_long iobase = dev->base_addr;
  
#line 2752 
  switch (lp->media) {
    case 512: 
#line 2753 
    ;
    
#line 2754 
    if (lp->timeout < 0) {
      unsigned int tmp_0;
      
#line 2755 
      tmp_0 = inl((int)((u_long)(56 << lp->bus) + iobase));
      
#line 2755 
      imr = (unsigned long)tmp_0;
      
#line 2755 
      imr = (unsigned long)(~ lp->irq_en) & imr;
      
#line 2755 
      outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
      
#line 2756 
      lp->tx_enable = (_Bool)0;
      
#line 2757 
      lp->linkOK = 0;
      
#line 2758 
      de4x5_save_skbs(dev);
    }
    else ;
    
#line 2760 
    next_tick = de4x5_reset_phy(dev);
    
#line 2760 
    if (next_tick < 0) 
#line 2761 
                       next_tick &= 2147483647;
    else {
      
#line 2763 
      if ((int)lp->useSROM != 0) {
        int tmp_1;
        
#line 2764 
        tmp_1 = srom_map_media(dev);
        
#line 2764 
        if (tmp_1 < 0) {
          
#line 2765 
          lp->tcount += 1;
          
#line 2766 
          __retres = next_tick;
          
#line 2766 
          goto return_label;
        }
        else ;
        
#line 2768 
        srom_exec(dev,lp->phy[lp->active].gep);
        
#line 2769 
        if (lp->infoblock_media == 32) {
          
#line 2770 
          ana = (int)(lp->phy[lp->active].ana | 1U);
          
#line 2771 
          mii_wr(ana,(unsigned char)4,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
      }
      else {
        
#line 2774 
        lp->tmp = 32;
        
#line 2775 
        if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
          unsigned int tmp_2;
          int tmp_4;
          
#line 2775 
          tmp_2 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2775 
          omr = (unsigned long)tmp_2 & 4265606655UL;
          
#line 2775 
          if (lp->tmp != 32 || lp->autosense != 16384) {
            int tmp_3;
            
#line 2775 
            ;
            
#line 2775 
            ;
            
#line 2775 
            if ((int)lp->fdx != 0) 
#line 2775 
                                   tmp_3 = 256; else 
#line 2775 
                                                     tmp_3 = 0;
            
#line 2775 
            mii_wr(tmp_3,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          }
          else ;
          
#line 2775 
          if ((int)lp->fdx != 0) 
#line 2775 
                                 tmp_4 = 4194816; else 
#line 2775 
                                                       tmp_4 = 4194304;
          
#line 2775 
          omr = (unsigned long)tmp_4 | omr;
          
#line 2775 
          outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
          
#line 2775 
          if (! lp->useSROM) 
#line 2775 
                             lp->cache.gep = 0; else ;
        }
        else 
          
#line 2775 
          if ((int)lp->useSROM != 0 && ! lp->useMII) {
            unsigned int tmp_5;
            int tmp_6;
            
#line 2775 
            tmp_5 = inl((int)((u_long)(48 << lp->bus) + iobase));
            
#line 2775 
            omr = (unsigned long)tmp_5 & 4264820223UL;
            
#line 2775 
            if ((int)lp->fdx != 0) 
#line 2775 
                                   tmp_6 = 512; else 
#line 2775 
                                                     tmp_6 = 0;
            
#line 2775 
            omr = (unsigned long)tmp_6 | omr;
            
#line 2775 
            outl(((unsigned int)lp->infoblock_csr6 & 4277665791U) | (unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
          }
          else {
            unsigned int tmp_7;
            int tmp_8;
            
#line 2775 
            tmp_7 = inl((int)((u_long)(48 << lp->bus) + iobase));
            
#line 2775 
            omr = (unsigned long)tmp_7 & 4264820223UL;
            
#line 2775 
            if ((int)lp->fdx != 0) 
#line 2775 
                                   tmp_8 = 512; else 
#line 2775 
                                                     tmp_8 = 0;
            
#line 2775 
            omr = (unsigned long)tmp_8 | omr;
            
#line 2775 
            outl((unsigned int)omr | 37748736U,(int)((u_long)(48 << lp->bus) + iobase));
            
#line 2775 
            if ((int)lp->fdx != 0) 
#line 2775 
                                   lp->cache.gep = 0; else 
#line 2775 
                                                           lp->cache.gep = 8;
            
#line 2775 
            gep_wr(lp->cache.gep,dev);
          }
        
#line 2776 
        if (lp->autosense == 128) 
#line 2777 
                                  lp->media = 128;
        else 
          
#line 2778 
          if (lp->autosense == 64) 
#line 2779 
                                   lp->media = 64;
          else 
            
#line 2780 
            if (lp->autosense == 16384) {
              
#line 2781 
              sr = is_anc_capable(dev);
              
#line 2780 
              if ((sr & 8) != 0) {
                int tmp_9;
                
#line 2782 
                ana = ((sr >> 6) & 992) | 1;
                
#line 2783 
                if ((int)lp->fdx != 0) 
#line 2783 
                                       tmp_9 = -1; else 
#line 2783 
                                                        tmp_9 = -321;
                
#line 2783 
                ana = tmp_9 & ana;
                
#line 2784 
                mii_wr(ana,(unsigned char)4,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
                
#line 2785 
                lp->media = 32;
              }
              else 
#line 2780 
                   goto _LAND;
            }
            else {
              _LAND: 
#line 2786 
              ;
              
#line 2786 
              if (lp->autosense == 16384) 
#line 2787 
                                          lp->media = 256;
              else {
                int tmp_10;
                
#line 2788 
                tmp_10 = is_spd_100(dev);
                
#line 2788 
                if (tmp_10 != 0) {
                  int tmp_11;
                  
#line 2788 
                  tmp_11 = is_100_up(dev);
                  
#line 2788 
                  if (tmp_11 != 0) 
#line 2789 
                                   lp->media = 128; else 
#line 2791 
                                                         lp->media = 0;
                }
                else 
#line 2791 
                     lp->media = 0;
              }
            }
      }
      
#line 2794 
      lp->local_state = 0;
      
#line 2795 
      next_tick = dc21140m_autoconf(dev);
    }
    
#line 2797 
    goto ldv_47433;
    case 32: 
#line 2799 
    ;
    
#line 2800 
    switch (lp->local_state) {
      case 0: 
#line 2801 
      ;
      
#line 2802 
      if (lp->timeout < 0) 
#line 2803 
                           mii_wr(4608,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase); else ;
      
#line 2805 
      cr = test_mii_reg(dev,0,512,(_Bool)0,500L);
      
#line 2806 
      if (cr < 0) 
#line 2807 
                  next_tick = cr & 2147483647;
      else {
        
#line 2809 
        if (cr != 0) {
          
#line 2810 
          lp->local_state = 0;
          
#line 2811 
          lp->media = 256;
        }
        else 
#line 2813 
             lp->local_state += 1;
        
#line 2815 
        next_tick = dc21140m_autoconf(dev);
      }
      
#line 2817 
      goto ldv_47436;
      case 1: 
#line 2819 
      ;
      
#line 2820 
      sr = test_mii_reg(dev,1,32,(_Bool)1,2000L);
      
#line 2820 
      if (sr < 0) 
#line 2821 
                  next_tick = sr & 2147483647;
      else {
        
#line 2823 
        lp->media = 256;
        
#line 2824 
        lp->local_state = 0;
        
#line 2825 
        if (sr != 0) {
          
#line 2826 
          lp->tmp = 32;
          
#line 2827 
          anlpa = mii_rd((unsigned char)5,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          
#line 2828 
          ana = mii_rd((unsigned char)4,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          
#line 2829 
          if ((anlpa & 8192) == 0) {
            
#line 2829 
            cap = (anlpa & 992) & ana;
            
#line 2829 
            if (cap != 0) {
              
#line 2831 
              if ((cap & 896) != 0) {
                
#line 2832 
                lp->fdx = (_Bool)(((ana & anlpa) & 256) != 0);
                
#line 2833 
                lp->media = 128;
              }
              else 
                
#line 2834 
                if ((cap & 96) != 0) {
                  
#line 2835 
                  lp->fdx = (_Bool)(((ana & anlpa) & 64) != 0);
                  
#line 2837 
                  lp->media = 64;
                }
                else ;
            }
            else ;
          }
          else ;
        }
        else ;
        
#line 2841 
        next_tick = dc21140m_autoconf(dev);
      }
      
#line 2843 
      goto ldv_47436;
    }
    ldv_47436: 
#line 2845 
    ;
    
#line 2845 
    goto ldv_47433;
    case 256: 
#line 2847 
    ;
    
#line 2848 
    if (lp->timeout < 0) {
      
#line 2849 
      if (lp->phy[lp->active].id == 0) {
        int tmp_12;
        
#line 2850 
        tmp_12 = gep_rd(dev);
        
#line 2849 
        lp->tmp = ~ tmp_12 & 128;
      }
      else 
#line 2849 
           lp->tmp = 4;
      
#line 2851 
      if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
        unsigned int tmp_13;
        
#line 2851 
        mii_wr(12288,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        
#line 2851 
        tmp_13 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 2851 
        omr = (unsigned long)tmp_13 & 4265606655UL;
        
#line 2851 
        outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
      }
      else 
        
#line 2851 
        if ((int)lp->useSROM != 0 && ! lp->useMII) {
          unsigned int tmp_14;
          
#line 2851 
          tmp_14 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2851 
          omr = (unsigned long)tmp_14 & 4265606655UL;
          
#line 2851 
          outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        }
        else {
          unsigned int tmp_15;
          
#line 2851 
          tmp_15 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2851 
          omr = (unsigned long)tmp_15 & 4264820223UL;
          
#line 2851 
          outl((unsigned int)omr | 42729472U,(int)((u_long)(48 << lp->bus) + iobase));
          
#line 2851 
          lp->cache.gep = 9;
          
#line 2851 
          gep_wr(lp->cache.gep,dev);
        }
    }
    else ;
    
#line 2853 
    slnk = test_for_100Mb(dev,6500);
    
#line 2853 
    if (slnk < 0) 
#line 2854 
                  next_tick = slnk & 2147483647;
    else {
      int tmp_18;
      
#line 2856 
      tmp_18 = is_spd_100(dev);
      
#line 2856 
      if (tmp_18 != 0) {
        int tmp_19;
        
#line 2856 
        tmp_19 = is_100_up(dev);
        
#line 2856 
        if (tmp_19 != 0) 
#line 2857 
                         lp->media = 128; else 
#line 2856 
                                               goto _LAND_0;
      }
      else {
        int tmp_16;
        _LAND_0: 
#line 2858 
        tmp_16 = is_spd_100(dev);
        
#line 2858 
        if (tmp_16 == 0) {
          int tmp_17;
          
#line 2858 
          tmp_17 = is_10_up(dev);
          
#line 2858 
          ;
          
#line 2858 
          if ((tmp_17 & lp->tmp) != 0) 
#line 2859 
                                       lp->media = 64; else 
#line 2861 
                                                            lp->media = 0;
        }
        else 
#line 2861 
             lp->media = 0;
      }
      
#line 2863 
      next_tick = dc21140m_autoconf(dev);
    }
    
#line 2865 
    goto ldv_47433;
    case 128: 
#line 2867 
    ;
    
#line 2868 
    next_tick = 3000;
    
#line 2869 
    if (! lp->tx_enable) {
      
#line 2870 
      if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
        unsigned int tmp_21;
        
#line 2870 
        int fdx = 0;
        
#line 2870 
        if (lp->phy[lp->active].id == 8192) {
          int tmp_20;
          
#line 2870 
          ;
          
#line 2870 
          ;
          
#line 2870 
          tmp_20 = mii_rd((unsigned char)24,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          
#line 2870 
          mii_wr(tmp_20 & -8193,(unsigned char)24,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
        
#line 2870 
        tmp_21 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 2870 
        omr = (unsigned long)tmp_21 & 4265606655UL;
        
#line 2870 
        sr = mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        
#line 2870 
        if ((sr & 512) == 0 && (int)lp->fdx != 0) 
#line 2870 
                                                  fdx = 1; else ;
        
#line 2870 
        if (lp->tmp != 32 || lp->autosense != 16384) {
          int tmp_22;
          
#line 2870 
          ;
          
#line 2870 
          ;
          
#line 2870 
          if (fdx != 0) 
#line 2870 
                        tmp_22 = 8448; else 
#line 2870 
                                            tmp_22 = 8192;
          
#line 2870 
          mii_wr(tmp_22,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
        
#line 2870 
        if (fdx != 0) 
#line 2870 
                      omr |= 512UL; else ;
        
#line 2870 
        outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        
#line 2870 
        if (! lp->useSROM) 
#line 2870 
                           lp->cache.gep = 0; else ;
      }
      else 
        
#line 2870 
        if ((int)lp->useSROM != 0 && ! lp->useMII) {
          unsigned int tmp_23;
          int tmp_24;
          
#line 2870 
          tmp_23 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2870 
          omr = (unsigned long)tmp_23 & 4264820223UL;
          
#line 2870 
          if ((int)lp->fdx != 0) 
#line 2870 
                                 tmp_24 = 512; else 
#line 2870 
                                                    tmp_24 = 0;
          
#line 2870 
          omr = (unsigned long)tmp_24 | omr;
          
#line 2870 
          outl((unsigned int)lp->infoblock_csr6 | (unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        }
        else {
          unsigned int tmp_25;
          int tmp_26;
          
#line 2870 
          tmp_25 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2870 
          omr = (unsigned long)tmp_25 & 4264820223UL;
          
#line 2870 
          if ((int)lp->fdx != 0) 
#line 2870 
                                 tmp_26 = 512; else 
#line 2870 
                                                    tmp_26 = 0;
          
#line 2870 
          omr = (unsigned long)tmp_26 | omr;
          
#line 2870 
          outl((unsigned int)omr | 59506688U,(int)((u_long)(48 << lp->bus) + iobase));
          
#line 2870 
          if ((int)lp->fdx != 0) 
#line 2870 
                                 lp->cache.gep = 1; else 
#line 2870 
                                                         lp->cache.gep = 9;
          
#line 2870 
          gep_wr(lp->cache.gep,dev);
        }
      
#line 2871 
      de4x5_init_connection(dev);
    }
    else 
      
#line 2873 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        int tmp_27;
        
#line 2874 
        tmp_27 = is_100_up(dev);
        
#line 2874 
        if (tmp_27 == 0) 
#line 2874 
                         goto _LOR;
        else 
          
#line 2874 
          if (! lp->useSROM) {
            int tmp_28;
            
#line 2874 
            tmp_28 = is_spd_100(dev);
            
#line 2874 
            if (tmp_28 == 0) {
              _LOR: {
                      
#line 2875 
                      lp->media = 512;
                      
#line 2876 
                      lp->tcount += 1;
                      
#line 2877 
                      next_tick = 250;
                    }
            }
            else ;
          }
          else ;
      }
      else ;
    
#line 2881 
    goto ldv_47433;
    case 4: 
#line 2883 
    ;
    case 8: 
#line 2884 
    ;
    case 64: 
#line 2885 
    ;
    
#line 2886 
    next_tick = 3000;
    
#line 2887 
    if (! lp->tx_enable) {
      
#line 2888 
      if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
        unsigned int tmp_29;
        int tmp_31;
        
#line 2888 
        tmp_29 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 2888 
        omr = (unsigned long)tmp_29 & 4265606655UL;
        
#line 2888 
        if (lp->tmp != 32 || lp->autosense != 16384) {
          int tmp_30;
          
#line 2888 
          ;
          
#line 2888 
          ;
          
#line 2888 
          if ((int)lp->fdx != 0) 
#line 2888 
                                 tmp_30 = 256; else 
#line 2888 
                                                    tmp_30 = 0;
          
#line 2888 
          mii_wr(tmp_30,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
        
#line 2888 
        if ((int)lp->fdx != 0) 
#line 2888 
                               tmp_31 = 4194816; else 
#line 2888 
                                                      tmp_31 = 4194304;
        
#line 2888 
        omr = (unsigned long)tmp_31 | omr;
        
#line 2888 
        outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        
#line 2888 
        if (! lp->useSROM) 
#line 2888 
                           lp->cache.gep = 0; else ;
      }
      else 
        
#line 2888 
        if ((int)lp->useSROM != 0 && ! lp->useMII) {
          unsigned int tmp_32;
          int tmp_33;
          
#line 2888 
          tmp_32 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2888 
          omr = (unsigned long)tmp_32 & 4264820223UL;
          
#line 2888 
          if ((int)lp->fdx != 0) 
#line 2888 
                                 tmp_33 = 512; else 
#line 2888 
                                                    tmp_33 = 0;
          
#line 2888 
          omr = (unsigned long)tmp_33 | omr;
          
#line 2888 
          outl(((unsigned int)lp->infoblock_csr6 & 4277665791U) | (unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        }
        else {
          unsigned int tmp_34;
          int tmp_35;
          
#line 2888 
          tmp_34 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 2888 
          omr = (unsigned long)tmp_34 & 4264820223UL;
          
#line 2888 
          if ((int)lp->fdx != 0) 
#line 2888 
                                 tmp_35 = 512; else 
#line 2888 
                                                    tmp_35 = 0;
          
#line 2888 
          omr = (unsigned long)tmp_35 | omr;
          
#line 2888 
          outl((unsigned int)omr | 37748736U,(int)((u_long)(48 << lp->bus) + iobase));
          
#line 2888 
          if ((int)lp->fdx != 0) 
#line 2888 
                                 lp->cache.gep = 0; else 
#line 2888 
                                                         lp->cache.gep = 8;
          
#line 2888 
          gep_wr(lp->cache.gep,dev);
        }
      
#line 2889 
      de4x5_init_connection(dev);
    }
    else 
      
#line 2891 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        int tmp_36;
        
#line 2892 
        tmp_36 = is_10_up(dev);
        
#line 2892 
        if (tmp_36 == 0) 
#line 2892 
                         goto _LOR_0;
        else 
          
#line 2892 
          if (! lp->useSROM) {
            int tmp_37;
            
#line 2892 
            tmp_37 = is_spd_100(dev);
            
#line 2892 
            if (tmp_37 != 0) {
              _LOR_0: {
                        
#line 2893 
                        lp->media = 512;
                        
#line 2894 
                        lp->tcount += 1;
                        
#line 2895 
                        next_tick = 250;
                      }
            }
            else ;
          }
          else ;
      }
      else ;
    
#line 2899 
    goto ldv_47433;
    case 0: 
#line 2901 
    ;
    
#line 2902 
    if (lp->media != lp->c_media) {
      
#line 2903 
      de4x5_dbg_media(dev);
      
#line 2904 
      lp->c_media = lp->media;
    }
    else ;
    
#line 2906 
    lp->media = 512;
    
#line 2907 
    lp->tx_enable = (_Bool)0;
    
#line 2908 
    goto ldv_47433;
  }
  ldv_47433: 
#line 2911 
  ;
  
#line 2911 
  __retres = next_tick;
  return_label: 
#line 2911 
                return __retres;
}


#line 2929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc2114x_autoconf(struct net_device *dev)
{
  int __retres;
  s32 cr;
  s32 anlpa;
  s32 ana;
  s32 cap;
  s32 irqs;
  s32 irq_mask;
  s32 imr;
  s32 omr;
  s32 slnk;
  s32 sr;
  s32 sts;
  
#line 2931 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 2932 
  u_long iobase = dev->base_addr;
  
#line 2934 
  int next_tick = 250;
  
#line 2936 
  switch (lp->media) {
    int tmp_5;
    case 512: 
#line 2937 
    ;
    
#line 2938 
    if (lp->timeout < 0) {
      unsigned int tmp_0;
      
#line 2939 
      tmp_0 = inl((int)((u_long)(56 << lp->bus) + iobase));
      
#line 2939 
      imr = (int)tmp_0;
      
#line 2939 
      imr = ~ lp->irq_en & imr;
      
#line 2939 
      outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
      
#line 2940 
      lp->tx_enable = (_Bool)0;
      
#line 2941 
      lp->linkOK = 0;
      
#line 2942 
      lp->timeout = -1;
      
#line 2943 
      de4x5_save_skbs(dev);
      
#line 2944 
      if ((lp->params.autosense & -16385) != 0) {
        
#line 2945 
        srom_map_media(dev);
        
#line 2946 
        if (lp->media != lp->params.autosense) {
          
#line 2947 
          lp->tcount += 1;
          
#line 2948 
          lp->media = 512;
          
#line 2949 
          __retres = next_tick;
          
#line 2949 
          goto return_label;
        }
        else ;
        
#line 2951 
        lp->media = 512;
      }
      else ;
    }
    else ;
    
#line 2954 
    next_tick = de4x5_reset_phy(dev);
    
#line 2954 
    if (next_tick < 0) 
#line 2955 
                       next_tick &= 2147483647;
    else {
      
#line 2957 
      if (lp->autosense == 128) 
#line 2958 
                                lp->media = 128;
      else 
        
#line 2959 
        if (lp->autosense == 64) 
#line 2960 
                                 lp->media = 64;
        else 
          
#line 2961 
          if (lp->autosense == 64) 
#line 2962 
                                   lp->media = 64;
          else 
            
#line 2963 
            if (lp->autosense == 4) 
#line 2964 
                                    lp->media = 4;
            else 
              
#line 2965 
              if (lp->autosense == 8) 
#line 2966 
                                      lp->media = 8;
              else {
                
#line 2968 
                lp->media = 256;
                
#line 2969 
                if (lp->infoblock_media == 32) {
                  
#line 2970 
                  sr = is_anc_capable(dev);
                  
#line 2969 
                  if ((sr & 8) != 0) {
                    int tmp_1;
                    
#line 2971 
                    ana = ((sr >> 6) & 992) | 1;
                    
#line 2972 
                    if ((int)lp->fdx != 0) 
#line 2972 
                                           tmp_1 = -1; else 
#line 2972 
                                                            tmp_1 = -321;
                    
#line 2972 
                    ana = tmp_1 & ana;
                    
#line 2973 
                    mii_wr(ana,(unsigned char)4,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
                    
#line 2974 
                    lp->media = 32;
                  }
                  else ;
                }
                else ;
              }
      
#line 2977 
      lp->local_state = 0;
      
#line 2978 
      next_tick = dc2114x_autoconf(dev);
    }
    
#line 2980 
    goto ldv_47463;
    case 32: 
#line 2982 
    ;
    
#line 2983 
    switch (lp->local_state) {
      case 0: 
#line 2984 
      ;
      
#line 2985 
      if (lp->timeout < 0) 
#line 2986 
                           mii_wr(4608,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase); else ;
      
#line 2988 
      cr = test_mii_reg(dev,0,512,(_Bool)0,500L);
      
#line 2989 
      if (cr < 0) 
#line 2990 
                  next_tick = cr & 2147483647;
      else {
        
#line 2992 
        if (cr != 0) {
          
#line 2993 
          lp->local_state = 0;
          
#line 2994 
          lp->media = 256;
        }
        else 
#line 2996 
             lp->local_state += 1;
        
#line 2998 
        next_tick = dc2114x_autoconf(dev);
      }
      
#line 3000 
      goto ldv_47466;
      case 1: 
#line 3002 
      ;
      
#line 3003 
      sr = test_mii_reg(dev,1,32,(_Bool)1,2000L);
      
#line 3004 
      if (sr < 0) 
#line 3005 
                  next_tick = sr & 2147483647;
      else {
        
#line 3007 
        lp->media = 256;
        
#line 3008 
        lp->local_state = 0;
        
#line 3009 
        if (sr != 0) {
          
#line 3010 
          lp->tmp = 32;
          
#line 3011 
          anlpa = mii_rd((unsigned char)5,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          
#line 3012 
          ana = mii_rd((unsigned char)4,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          
#line 3013 
          if ((anlpa & 8192) == 0) {
            
#line 3013 
            cap = (anlpa & 992) & ana;
            
#line 3013 
            if (cap != 0) {
              
#line 3015 
              if ((cap & 896) != 0) {
                
#line 3016 
                lp->fdx = (_Bool)(((ana & anlpa) & 256) != 0);
                
#line 3017 
                lp->media = 128;
              }
              else 
                
#line 3018 
                if ((cap & 96) != 0) {
                  
#line 3019 
                  lp->fdx = (_Bool)(((ana & anlpa) & 64) != 0);
                  
#line 3020 
                  lp->media = 64;
                }
                else ;
            }
            else ;
          }
          else ;
        }
        else ;
        
#line 3024 
        next_tick = dc2114x_autoconf(dev);
      }
      
#line 3026 
      goto ldv_47466;
    }
    ldv_47466: 
#line 3028 
    ;
    
#line 3028 
    goto ldv_47463;
    case 8: 
#line 3030 
    ;
    
#line 3031 
    if (! lp->tx_enable) {
      
#line 3032 
      if (lp->timeout < 0) {
        unsigned int tmp_2;
        
#line 3033 
        tmp_2 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 3033 
        omr = (int)tmp_2;
        
#line 3034 
        outl((unsigned int)omr & 4294966783U,(int)((u_long)(48 << lp->bus) + iobase));
      }
      else ;
      
#line 3036 
      irqs = 0;
      
#line 3037 
      irq_mask = 0;
      
#line 3038 
      sts = test_media(dev,irqs,irq_mask,0,0,0,1000);
      
#line 3039 
      if (sts < 0) 
#line 3040 
                   next_tick = sts & 2147483647;
      else {
        unsigned int tmp_3;
        
#line 3042 
        tmp_3 = inl((int)((u_long)(96 << lp->bus) + iobase));
        
#line 3042 
        if ((tmp_3 & 256U) == 0U) {
          
#line 3042 
          if (lp->autosense == 16384) {
            
#line 3043 
            lp->media = 4;
            
#line 3044 
            next_tick = dc2114x_autoconf(dev);
          }
          else 
#line 3042 
               goto _LAND;
        }
        else {
          _LAND: {
                   
#line 3046 
                   lp->local_state = 1;
                   
#line 3047 
                   de4x5_init_connection(dev);
                 }
        }
      }
    }
    else 
      
#line 3050 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        
#line 3051 
        lp->media = 2055;
        
#line 3052 
        next_tick = 3000;
      }
      else ;
    
#line 3054 
    goto ldv_47463;
    case 2055: 
#line 3056 
    ;
    
#line 3057 
    next_tick = de4x5_suspect_state(dev,1000,8,& ping_media,& dc2114x_autoconf);
    
#line 3058 
    goto ldv_47463;
    case 4: 
#line 3060 
    ;
    
#line 3061 
    switch (lp->local_state) {
      case 0: 
#line 3062 
      ;
      
#line 3063 
      if (lp->timeout < 0) {
        unsigned int tmp_4;
        
#line 3064 
        tmp_4 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 3064 
        omr = (int)tmp_4;
        
#line 3065 
        outl((unsigned int)omr & 4294966783U,(int)((u_long)(48 << lp->bus) + iobase));
      }
      else ;
      
#line 3067 
      irqs = 0;
      
#line 3068 
      irq_mask = 0;
      
#line 3069 
      sts = test_media(dev,irqs,irq_mask,0,0,0,1000);
      
#line 3070 
      if (sts < 0) 
#line 3071 
                   next_tick = sts & 2147483647;
      else {
        
#line 3073 
        lp->local_state += 1;
        
#line 3074 
        next_tick = dc2114x_autoconf(dev);
      }
      
#line 3076 
      goto ldv_47472;
      case 1: 
#line 3078 
      ;
      
#line 3079 
      if (! lp->tx_enable) {
        
#line 3080 
        sts = ping_media(dev,3000);
        
#line 3080 
        if (sts < 0) 
#line 3081 
                     next_tick = sts & 2147483647;
        else 
          
#line 3083 
          if (sts != 0) {
            
#line 3084 
            lp->local_state = 0;
            
#line 3085 
            lp->tcount += 1;
            
#line 3086 
            lp->media = 512;
          }
          else 
#line 3088 
               de4x5_init_connection(dev);
      }
      else 
        
#line 3091 
        if (lp->linkOK == 0 && lp->autosense == 16384) {
          
#line 3092 
          lp->media = 2054;
          
#line 3093 
          next_tick = 3000;
        }
        else ;
      
#line 3095 
      goto ldv_47472;
    }
    ldv_47472: 
#line 3097 
    ;
    
#line 3097 
    goto ldv_47463;
    case 2054: 
#line 3099 
    ;
    
#line 3100 
    next_tick = de4x5_suspect_state(dev,1000,4,& ping_media,& dc2114x_autoconf);
    
#line 3101 
    goto ldv_47463;
    case 256: 
#line 3103 
    ;
    
#line 3104 
    tmp_5 = srom_map_media(dev);
    
#line 3104 
    if (tmp_5 < 0) {
      
#line 3105 
      lp->tcount += 1;
      
#line 3106 
      lp->media = 512;
      
#line 3107 
      __retres = next_tick;
      
#line 3107 
      goto return_label;
    }
    else ;
    
#line 3109 
    if (lp->media == 128) {
      
#line 3110 
      slnk = test_for_100Mb(dev,6500);
      
#line 3110 
      if (slnk < 0) {
        
#line 3111 
        lp->media = 256;
        
#line 3112 
        __retres = slnk & 2147483647;
        
#line 3112 
        goto return_label;
      }
      else ;
    }
    else {
      int tmp_6;
      
#line 3115 
      tmp_6 = wait_for_link(dev);
      
#line 3115 
      if (tmp_6 < 0) {
        
#line 3116 
        lp->media = 256;
        
#line 3117 
        __retres = 1200;
        
#line 3117 
        goto return_label;
      }
      else ;
    }
    
#line 3120 
    if (lp->media == 32) {
      int tmp_7;
      
#line 3121 
      tmp_7 = is_spd_100(dev);
      
#line 3121 
      if (tmp_7 != 0) 
#line 3122 
                      lp->media = 128; else 
#line 3124 
                                            lp->media = 64;
      
#line 3126 
      next_tick = dc2114x_autoconf(dev);
    }
    else 
      
#line 3127 
      if (lp->media == 128) {
        int tmp_8;
        
#line 3127 
        tmp_8 = is_100_up(dev);
        
#line 3127 
        if (tmp_8 != 0) 
#line 3127 
                        goto _LOR; else 
#line 3127 
                                        goto _LAND_1;
      }
      else 
        _LAND_1: 
#line 3127 
                 if ((lp->media == 64 || lp->media == 4) || lp->media == 8) {
                   int tmp_9;
                   
#line 3129 
                   tmp_9 = is_10_up(dev);
                   
#line 3129 
                   if (tmp_9 != 0) _LOR: 
#line 3131 
                                         next_tick = dc2114x_autoconf(dev); else 
                                                                    
#line 3127 
                                                                    goto _LAND_0;
                 }
                 else {
                   _LAND_0: {
                              
#line 3133 
                              lp->tcount += 1;
                              
#line 3134 
                              lp->media = 512;
                            }
                 }
    
#line 3136 
    goto ldv_47463;
    case 64: 
#line 3138 
    ;
    
#line 3139 
    next_tick = 3000;
    
#line 3140 
    if (! lp->tx_enable) {
      
#line 3141 
      if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
        unsigned int tmp_10;
        int tmp_12;
        
#line 3141 
        tmp_10 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 3141 
        omr = (int)tmp_10 & -29360641;
        
#line 3141 
        if (lp->tmp != 32 || lp->autosense != 16384) {
          int tmp_11;
          
#line 3141 
          ;
          
#line 3141 
          ;
          
#line 3141 
          if ((int)lp->fdx != 0) 
#line 3141 
                                 tmp_11 = 256; else 
#line 3141 
                                                    tmp_11 = 0;
          
#line 3141 
          mii_wr(tmp_11,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
        
#line 3141 
        if ((int)lp->fdx != 0) 
#line 3141 
                               tmp_12 = 4194816; else 
#line 3141 
                                                      tmp_12 = 4194304;
        
#line 3141 
        omr = tmp_12 | omr;
        
#line 3141 
        outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        
#line 3141 
        if (! lp->useSROM) 
#line 3141 
                           lp->cache.gep = 0; else ;
      }
      else 
        
#line 3141 
        if ((int)lp->useSROM != 0 && ! lp->useMII) {
          unsigned int tmp_13;
          int tmp_14;
          
#line 3141 
          tmp_13 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 3141 
          omr = (int)tmp_13 & -30147073;
          
#line 3141 
          if ((int)lp->fdx != 0) 
#line 3141 
                                 tmp_14 = 512; else 
#line 3141 
                                                    tmp_14 = 0;
          
#line 3141 
          omr = tmp_14 | omr;
          
#line 3141 
          outl((unsigned int)((lp->infoblock_csr6 & -17301505) | omr),(int)((u_long)(48 << lp->bus) + iobase));
        }
        else {
          unsigned int tmp_15;
          int tmp_16;
          
#line 3141 
          tmp_15 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 3141 
          omr = (int)tmp_15 & -30147073;
          
#line 3141 
          if ((int)lp->fdx != 0) 
#line 3141 
                                 tmp_16 = 512; else 
#line 3141 
                                                    tmp_16 = 0;
          
#line 3141 
          omr = tmp_16 | omr;
          
#line 3141 
          outl((unsigned int)(omr | 37748736),(int)((u_long)(48 << lp->bus) + iobase));
          
#line 3141 
          if ((int)lp->fdx != 0) 
#line 3141 
                                 lp->cache.gep = 0; else 
#line 3141 
                                                         lp->cache.gep = 8;
          
#line 3141 
          gep_wr(lp->cache.gep,dev);
        }
      
#line 3142 
      de4x5_init_connection(dev);
    }
    else 
      
#line 3144 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        int tmp_17;
        
#line 3145 
        tmp_17 = is_10_up(dev);
        
#line 3145 
        if (tmp_17 == 0) 
#line 3145 
                         goto _LOR_0;
        else 
          
#line 3145 
          if (! lp->useSROM) {
            int tmp_18;
            
#line 3145 
            tmp_18 = is_spd_100(dev);
            
#line 3145 
            if (tmp_18 != 0) {
              _LOR_0: {
                        
#line 3146 
                        lp->media = 512;
                        
#line 3147 
                        lp->tcount += 1;
                        
#line 3148 
                        next_tick = 250;
                      }
            }
            else ;
          }
          else ;
      }
      else ;
    
#line 3152 
    goto ldv_47463;
    case 128: 
#line 3154 
    ;
    
#line 3155 
    next_tick = 3000;
    
#line 3156 
    if (! lp->tx_enable) {
      
#line 3157 
      if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
        unsigned int tmp_20;
        
#line 3157 
        int fdx = 0;
        
#line 3157 
        if (lp->phy[lp->active].id == 8192) {
          int tmp_19;
          
#line 3157 
          ;
          
#line 3157 
          ;
          
#line 3157 
          tmp_19 = mii_rd((unsigned char)24,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
          
#line 3157 
          mii_wr(tmp_19 & -8193,(unsigned char)24,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
        
#line 3157 
        tmp_20 = inl((int)((u_long)(48 << lp->bus) + iobase));
        
#line 3157 
        omr = (int)tmp_20 & -29360641;
        
#line 3157 
        sr = mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        
#line 3157 
        if ((sr & 512) == 0 && (int)lp->fdx != 0) 
#line 3157 
                                                  fdx = 1; else ;
        
#line 3157 
        if (lp->tmp != 32 || lp->autosense != 16384) {
          int tmp_21;
          
#line 3157 
          ;
          
#line 3157 
          ;
          
#line 3157 
          if (fdx != 0) 
#line 3157 
                        tmp_21 = 8448; else 
#line 3157 
                                            tmp_21 = 8192;
          
#line 3157 
          mii_wr(tmp_21,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
        }
        else ;
        
#line 3157 
        if (fdx != 0) 
#line 3157 
                      omr |= 512; else ;
        
#line 3157 
        outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
        
#line 3157 
        if (! lp->useSROM) 
#line 3157 
                           lp->cache.gep = 0; else ;
      }
      else 
        
#line 3157 
        if ((int)lp->useSROM != 0 && ! lp->useMII) {
          unsigned int tmp_22;
          int tmp_23;
          
#line 3157 
          tmp_22 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 3157 
          omr = (int)tmp_22 & -30147073;
          
#line 3157 
          if ((int)lp->fdx != 0) 
#line 3157 
                                 tmp_23 = 512; else 
#line 3157 
                                                    tmp_23 = 0;
          
#line 3157 
          omr = tmp_23 | omr;
          
#line 3157 
          outl((unsigned int)(lp->infoblock_csr6 | omr),(int)((u_long)(48 << lp->bus) + iobase));
        }
        else {
          unsigned int tmp_24;
          int tmp_25;
          
#line 3157 
          tmp_24 = inl((int)((u_long)(48 << lp->bus) + iobase));
          
#line 3157 
          omr = (int)tmp_24 & -30147073;
          
#line 3157 
          if ((int)lp->fdx != 0) 
#line 3157 
                                 tmp_25 = 512; else 
#line 3157 
                                                    tmp_25 = 0;
          
#line 3157 
          omr = tmp_25 | omr;
          
#line 3157 
          outl((unsigned int)(omr | 59506688),(int)((u_long)(48 << lp->bus) + iobase));
          
#line 3157 
          if ((int)lp->fdx != 0) 
#line 3157 
                                 lp->cache.gep = 1; else 
#line 3157 
                                                         lp->cache.gep = 9;
          
#line 3157 
          gep_wr(lp->cache.gep,dev);
        }
      
#line 3158 
      de4x5_init_connection(dev);
    }
    else 
      
#line 3160 
      if (lp->linkOK == 0 && lp->autosense == 16384) {
        int tmp_26;
        
#line 3161 
        tmp_26 = is_100_up(dev);
        
#line 3161 
        if (tmp_26 == 0) 
#line 3161 
                         goto _LOR_1;
        else 
          
#line 3161 
          if (! lp->useSROM) {
            int tmp_27;
            
#line 3161 
            tmp_27 = is_spd_100(dev);
            
#line 3161 
            if (tmp_27 == 0) {
              _LOR_1: {
                        
#line 3162 
                        lp->media = 512;
                        
#line 3163 
                        lp->tcount += 1;
                        
#line 3164 
                        next_tick = 250;
                      }
            }
            else ;
          }
          else ;
      }
      else ;
    
#line 3168 
    goto ldv_47463;
    default: 
#line 3170 
    ;
    
#line 3171 
    lp->tcount += 1;
    
#line 3172 
    printk("Huh?: media:%02x\n",lp->media);
    
#line 3173 
    lp->media = 512;
    
#line 3174 
    goto ldv_47463;
  }
  ldv_47463: 
#line 3177 
  ;
  
#line 3177 
  __retres = next_tick;
  return_label: 
#line 3177 
                return __retres;
}


#line 3181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int srom_autoconf(struct net_device *dev)
{
  int tmp_0;
  
#line 3183 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3185 
  tmp_0 = (*(lp->infoleaf_fn))(dev);
  
#line 3185 
  return tmp_0;
}


#line 3194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int srom_map_media(struct net_device *dev)
{
  int __retres;
  
#line 3196 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3198 
  lp->fdx = (_Bool)0;
  
#line 3199 
  if (lp->infoblock_media == lp->media) {
    
#line 3200 
    __retres = 0;
    
#line 3200 
    goto return_label;
  }
  else ;
  
#line 3202 
  switch (lp->infoblock_media) {
    case 4: 
#line 3203 
    ;
    
#line 3204 
    if (! lp->params.fdx) {
      
#line 3204 
      __retres = -1;
      
#line 3204 
      goto return_label;
    }
    else ;
    
#line 3205 
    lp->fdx = (_Bool)1;
    case 0: 
#line 3206 
    ;
    
#line 3207 
    if ((int)lp->params.fdx != 0 && ! lp->fdx) {
      
#line 3207 
      __retres = -1;
      
#line 3207 
      goto return_label;
    }
    else ;
    
#line 3208 
    if (lp->chipset == 2304 || (lp->chipset & -256) == 6400) 
#line 3209 
                                                             lp->media = 64; else 
                                                                    
#line 3211 
                                                                    lp->media = 64;
    
#line 3213 
    goto ldv_47490;
    case 1: 
#line 3215 
    ;
    
#line 3216 
    lp->media = 4;
    
#line 3217 
    goto ldv_47490;
    case 2: 
#line 3219 
    ;
    
#line 3220 
    lp->media = 8;
    
#line 3221 
    goto ldv_47490;
    case 5: 
#line 3223 
    ;
    
#line 3224 
    if (! lp->params.fdx) {
      
#line 3224 
      __retres = -1;
      
#line 3224 
      goto return_label;
    }
    else ;
    
#line 3225 
    lp->fdx = (_Bool)1;
    case 3: 
#line 3226 
    ;
    
#line 3227 
    if ((int)lp->params.fdx != 0 && ! lp->fdx) {
      
#line 3227 
      __retres = -1;
      
#line 3227 
      goto return_label;
    }
    else ;
    
#line 3228 
    lp->media = 128;
    
#line 3229 
    goto ldv_47490;
    case 6: 
#line 3231 
    ;
    
#line 3232 
    lp->media = 128;
    
#line 3233 
    goto ldv_47490;
    case 8: 
#line 3235 
    ;
    
#line 3236 
    if (! lp->params.fdx) {
      
#line 3236 
      __retres = -1;
      
#line 3236 
      goto return_label;
    }
    else ;
    
#line 3237 
    lp->fdx = (_Bool)1;
    case 7: 
#line 3238 
    ;
    
#line 3239 
    if ((int)lp->params.fdx != 0 && ! lp->fdx) {
      
#line 3239 
      __retres = -1;
      
#line 3239 
      goto return_label;
    }
    else ;
    
#line 3240 
    lp->media = 128;
    
#line 3241 
    goto ldv_47490;
    case 32: 
#line 3243 
    ;
    
#line 3244 
    lp->media = 32;
    
#line 3245 
    lp->fdx = lp->params.fdx;
    
#line 3246 
    goto ldv_47490;
    default: 
#line 3248 
    ;
    
#line 3249 
    printk("%s: Bad media code [%d] detected in SROM!\n",(char *)(& dev->name),lp->infoblock_media);
    
#line 3251 
    __retres = -1;
    
#line 3251 
    goto return_label;
  }
  ldv_47490: 
#line 3254 
  ;
  
#line 3254 
  __retres = 0;
  return_label: 
#line 3254 
                return __retres;
}


#line 3258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_init_connection(struct net_device *dev)
{
  
#line 3260 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3261 
  u_long iobase = dev->base_addr;
  
#line 3262 
  u_long flags = 0UL;
  
#line 3264 
  if (lp->media != lp->c_media) {
    
#line 3265 
    de4x5_dbg_media(dev);
    
#line 3266 
    lp->c_media = lp->media;
  }
  else ;
  
#line 3269 
  ldv___ldv_spin_lock_90(& lp->lock);
  
#line 3270 
  de4x5_rst_desc_ring(dev);
  
#line 3271 
  de4x5_setup_intr(dev);
  
#line 3272 
  lp->tx_enable = (_Bool)1;
  
#line 3273 
  ldv_spin_unlock_irqrestore_91(& lp->lock,flags);
  
#line 3274 
  outl(1U,(int)((u_long)(8 << lp->bus) + iobase));
  
#line 3276 
  netif_wake_queue(dev);
  
#line 3277 
  return;
}


#line 3285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_reset_phy(struct net_device *dev)
{
  
#line 3287 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3288 
  u_long iobase = dev->base_addr;
  
#line 3289 
  int next_tick = 0;
  
#line 3291 
  if ((int)lp->useSROM != 0 || lp->phy[lp->active].id != 0) {
    
#line 3292 
    if (lp->timeout < 0) {
      
#line 3293 
      if ((int)lp->useSROM != 0) {
        
#line 3294 
        if (lp->phy[lp->active].rst != (u_char *)0U) {
          
#line 3295 
          srom_exec(dev,lp->phy[lp->active].rst);
          
#line 3296 
          srom_exec(dev,lp->phy[lp->active].rst);
        }
        else 
          
#line 3297 
          if (lp->rst != (u_char *)0U) {
            
#line 3298 
            srom_exec(dev,lp->rst);
            
#line 3299 
            srom_exec(dev,lp->rst);
          }
          else ;
      }
      else {
        
#line 3302 
        outl(16U,(int)((u_long)(96 << lp->bus) + iobase));
        
#line 3302 
        if (1) 
#line 3302 
               __const_udelay(4295000UL);
        else {
          
#line 3302 
          unsigned long __ms = 1UL;
          {
            unsigned long tmp_0;
            
#line 3302 
            goto ldv_47514;
            ldv_47513: 
#line 3303 
            ;
            
#line 3302 
            __const_udelay(4295000UL);
            ldv_47514: 
#line 3304 
            ;
            
#line 3302 
            tmp_0 = __ms;
            
#line 3302 
            __ms -= 1UL;
            
#line 3302 
            ;
            
#line 3302 
            if (tmp_0 != 0UL) 
#line 3304 
                              goto ldv_47513; else 
#line 3307 
                                                   goto ldv_47515;
            ldv_47515: 
#line 3308 
            ;
          }
        }
        
#line 3302 
        outl(0U,(int)((u_long)(96 << lp->bus) + iobase));
        
#line 3302 
        if (1) 
#line 3302 
               __const_udelay(8590000UL);
        else {
          
#line 3302 
          unsigned long __ms_0 = 2UL;
          {
            unsigned long tmp_1;
            
#line 3302 
            goto ldv_47518;
            ldv_47517: 
#line 3303 
            ;
            
#line 3302 
            __const_udelay(4295000UL);
            ldv_47518: 
#line 3304 
            ;
            
#line 3302 
            tmp_1 = __ms_0;
            
#line 3302 
            __ms_0 -= 1UL;
            
#line 3302 
            ;
            
#line 3302 
            if (tmp_1 != 0UL) 
#line 3304 
                              goto ldv_47517; else 
#line 3307 
                                                   goto ldv_47519;
            ldv_47519: 
#line 3308 
            ;
          }
        }
      }
      
#line 3304 
      if ((int)lp->useMII != 0) 
#line 3305 
                                mii_wr(32768,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase); else ;
    }
    else ;
    
#line 3308 
    if ((int)lp->useMII != 0) 
#line 3309 
                              next_tick = test_mii_reg(dev,0,32768,(_Bool)0,500L); else ;
  }
  else 
    
#line 3311 
    if (lp->chipset == 2304) {
      
#line 3312 
      outl(16U,(int)((u_long)(96 << lp->bus) + iobase));
      
#line 3312 
      if (1) 
#line 3312 
             __const_udelay(4295000UL);
      else {
        
#line 3312 
        unsigned long __ms_1 = 1UL;
        {
          unsigned long tmp_2;
          
#line 3312 
          goto ldv_47522;
          ldv_47521: 
#line 3313 
          ;
          
#line 3312 
          __const_udelay(4295000UL);
          ldv_47522: 
#line 3314 
          ;
          
#line 3312 
          tmp_2 = __ms_1;
          
#line 3312 
          __ms_1 -= 1UL;
          
#line 3312 
          ;
          
#line 3312 
          if (tmp_2 != 0UL) 
#line 3314 
                            goto ldv_47521; else 
#line 3317 
                                                 goto ldv_47523;
          ldv_47523: 
#line 3318 
          ;
        }
      }
      
#line 3312 
      outl(0U,(int)((u_long)(96 << lp->bus) + iobase));
      
#line 3312 
      if (1) 
#line 3312 
             __const_udelay(8590000UL);
      else {
        
#line 3312 
        unsigned long __ms_2 = 2UL;
        {
          unsigned long tmp_3;
          
#line 3312 
          goto ldv_47526;
          ldv_47525: 
#line 3313 
          ;
          
#line 3312 
          __const_udelay(4295000UL);
          ldv_47526: 
#line 3314 
          ;
          
#line 3312 
          tmp_3 = __ms_2;
          
#line 3312 
          __ms_2 -= 1UL;
          
#line 3312 
          ;
          
#line 3312 
          if (tmp_3 != 0UL) 
#line 3314 
                            goto ldv_47525; else 
#line 3317 
                                                 goto ldv_47527;
          ldv_47527: 
#line 3318 
          ;
        }
      }
    }
    else ;
  
#line 3315 
  return next_tick;
}


#line 3319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int test_media(struct net_device *dev, s32 irqs, s32 irq_mask, s32 csr13, s32 csr14, s32 csr15, s32 msec)
{
  s32 sts;
  s32 csr12;
  unsigned int tmp_2;
  
#line 3321 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3322 
  u_long iobase = dev->base_addr;
  
#line 3325 
  if (lp->timeout < 0) {
    unsigned int tmp_0;
    
#line 3326 
    lp->timeout = msec / 100;
    
#line 3327 
    if (! lp->useSROM) 
#line 3328 
                       reset_init_sia(dev,csr13,csr14,csr15); else ;
    
#line 3332 
    outl((unsigned int)irq_mask,(int)((u_long)(56 << lp->bus) + iobase));
    
#line 3335 
    tmp_0 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 3335 
    sts = (int)tmp_0;
    
#line 3336 
    outl((unsigned int)sts,(int)((u_long)(40 << lp->bus) + iobase));
    
#line 3339 
    if (lp->chipset == 5120 || (int)lp->useSROM != 0) {
      unsigned int tmp_1;
      
#line 3340 
      tmp_1 = inl((int)((u_long)(96 << lp->bus) + iobase));
      
#line 3340 
      csr12 = (int)tmp_1;
      
#line 3341 
      outl((unsigned int)csr12,(int)((u_long)(96 << lp->bus) + iobase));
    }
    else ;
  }
  else ;
  
#line 3345 
  tmp_2 = inl((int)((u_long)(40 << lp->bus) + iobase));
  
#line 3345 
  sts = (int)tmp_2 & 2147483647;
  
#line 3347 
  if ((sts & irqs) == 0) {
    
#line 3347 
    lp->timeout -= 1;
    
#line 3347 
    if (lp->timeout != 0) 
#line 3348 
                          sts = -2147483548; else 
#line 3350 
                                                  lp->timeout = -1;
  }
  else 
#line 3350 
       lp->timeout = -1;
  
#line 3353 
  return sts;
}


#line 3357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int test_tp(struct net_device *dev, s32 msec)
{
  int sisr;
  unsigned int tmp_0;
  
#line 3359 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3360 
  u_long iobase = dev->base_addr;
  
#line 3363 
  if (lp->timeout < 0) 
#line 3364 
                       lp->timeout = msec / 100; else ;
  
#line 3367 
  tmp_0 = inl((int)((u_long)(96 << lp->bus) + iobase));
  
#line 3367 
  sisr = (int)tmp_0 & 6;
  
#line 3369 
  if (sisr != 0) {
    
#line 3369 
    lp->timeout -= 1;
    
#line 3369 
    if (lp->timeout != 0) 
#line 3370 
                          sisr = -2147483548; else 
#line 3372 
                                                   lp->timeout = -1;
  }
  else 
#line 3372 
       lp->timeout = -1;
  
#line 3375 
  return sisr;
}


#line 3386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int test_for_100Mb(struct net_device *dev, int msec)
{
  int __retres;
  int tmp_0;
  
#line 3388 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3389 
  int gep = 0;
  
#line 3389 
  if ((lp->chipset & -256) == 6400) 
#line 3389 
                                    tmp_0 = -1; else 
#line 3389 
                                                     tmp_0 = 64;
  
#line 3389 
  int ret = tmp_0;
  
#line 3391 
  if (lp->timeout < 0) {
    
#line 3392 
    if (msec <= 499) {
      
#line 3392 
      __retres = 0;
      
#line 3392 
      goto return_label;
    }
    else ;
    
#line 3393 
    if (msec > 2000) {
      
#line 3394 
      lp->timeout = (msec + -2000) / 500;
      
#line 3395 
      gep = -2147481648;
      
#line 3396 
      __retres = gep;
      
#line 3396 
      goto return_label;
    }
    else 
#line 3398 
         lp->timeout = msec / 500;
  }
  else ;
  
#line 3402 
  if (lp->phy[lp->active].id != 0 || (int)lp->useSROM != 0) {
    int tmp_1;
    int tmp_2;
    
#line 3403 
    tmp_1 = is_100_up(dev);
    
#line 3403 
    tmp_2 = is_spd_100(dev);
    
#line 3403 
    gep = tmp_1 | tmp_2;
  }
  else {
    int tmp_3;
    
#line 3405 
    tmp_3 = gep_rd(dev);
    
#line 3405 
    gep = ~ tmp_3 & 192;
  }
  
#line 3407 
  if ((gep & ret) == 0) {
    
#line 3407 
    lp->timeout -= 1;
    
#line 3407 
    if (lp->timeout != 0) 
#line 3408 
                          gep = -2147483148; else 
#line 3410 
                                                  lp->timeout = -1;
  }
  else 
#line 3410 
       lp->timeout = -1;
  
#line 3413 
  __retres = gep;
  return_label: 
#line 3413 
                return __retres;
}


#line 3417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int wait_for_link(struct net_device *dev)
{
  int __retres;
  int tmp_0;
  
#line 3419 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3421 
  if (lp->timeout < 0) 
#line 3422 
                       lp->timeout = 1; else ;
  
#line 3425 
  tmp_0 = lp->timeout;
  
#line 3425 
  lp->timeout -= 1;
  
#line 3425 
  ;
  
#line 3425 
  if (tmp_0 != 0) {
    
#line 3426 
    __retres = (int)(-2147483648);
    
#line 3426 
    goto return_label;
  }
  else 
#line 3428 
       lp->timeout = -1;
  
#line 3431 
  __retres = 0;
  return_label: 
#line 3431 
                return __retres;
}


#line 3439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int test_mii_reg(struct net_device *dev, int reg, int mask, bool pol, long msec)
{
  int test;
  int tmp_0;
  int tmp_1;
  
#line 3441 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3443 
  u_long iobase = dev->base_addr;
  
#line 3445 
  if (lp->timeout < 0) 
#line 3446 
                       lp->timeout = (int)(msec / 100L); else ;
  
#line 3449 
  tmp_0 = mii_rd((unsigned char)((int)((unsigned char)reg)),(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
  
#line 3449 
  reg = tmp_0 & mask;
  
#line 3450 
  if ((int)pol != 0) 
#line 3450 
                     tmp_1 = -1; else 
#line 3450 
                                      tmp_1 = 0;
  
#line 3450 
  test = (tmp_1 ^ reg) & mask;
  
#line 3452 
  if (test != 0) {
    
#line 3452 
    lp->timeout -= 1;
    
#line 3452 
    if (lp->timeout != 0) 
#line 3453 
                          reg = -2147483548; else 
#line 3455 
                                                  lp->timeout = -1;
  }
  else 
#line 3455 
       lp->timeout = -1;
  
#line 3458 
  return reg;
}


#line 3462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int is_spd_100(struct net_device *dev)
{
  int __retres;
  int spd;
  
#line 3464 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3465 
  u_long iobase = dev->base_addr;
  
#line 3468 
  if ((int)lp->useMII != 0) {
    
#line 3469 
    spd = mii_rd((unsigned char)((int)((unsigned char)lp->phy[lp->active].spd.reg)),(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 3470 
    spd = ~ (lp->phy[lp->active].spd.value ^ spd);
    
#line 3471 
    spd = lp->phy[lp->active].spd.mask & spd;
  }
  else 
    
#line 3472 
    if (! lp->useSROM) {
      int tmp_0;
      
#line 3473 
      tmp_0 = gep_rd(dev);
      
#line 3473 
      spd = ~ tmp_0 & 64;
    }
    else {
      int tmp_3;
      
#line 3475 
      if ((unsigned int)lp->ibn == 2U || lp->asBitValid == 0) {
        unsigned int tmp_2;
        
#line 3476 
        if (lp->chipset == 6448) {
          unsigned int tmp_1;
          
#line 3476 
          tmp_1 = inl((int)((u_long)(96 << lp->bus) + iobase));
          
#line 3476 
          tmp_2 = ~ tmp_1 & 2U;
        }
        else 
#line 3476 
             tmp_2 = 0U;
        
#line 3476 
        __retres = (int)tmp_2;
        
#line 3476 
        goto return_label;
      }
      else ;
      
#line 3478 
      tmp_3 = gep_rd(dev);
      
#line 3478 
      spd = (lp->asBitValid & (lp->asPolarity ^ (tmp_3 & lp->asBit))) | (lp->linkOK & ~ lp->asBitValid);
    }
  
#line 3482 
  __retres = spd;
  return_label: 
#line 3482 
                return __retres;
}


#line 3486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int is_100_up(struct net_device *dev)
{
  int __retres;
  
#line 3488 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3489 
  u_long iobase = dev->base_addr;
  
#line 3491 
  if ((int)lp->useMII != 0) {
    int tmp_0;
    
#line 3493 
    mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 3494 
    tmp_0 = mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 3494 
    __retres = tmp_0 & 4;
    
#line 3494 
    goto return_label;
  }
  else 
    
#line 3495 
    if (! lp->useSROM) {
      int tmp_1;
      
#line 3496 
      tmp_1 = gep_rd(dev);
      
#line 3496 
      __retres = ~ tmp_1 & 64;
      
#line 3496 
      goto return_label;
    }
    else {
      int tmp_4;
      
#line 3498 
      if ((unsigned int)lp->ibn == 2U || lp->asBitValid == 0) {
        unsigned int tmp_3;
        
#line 3499 
        if (lp->chipset == 6448) {
          unsigned int tmp_2;
          
#line 3499 
          tmp_2 = inl((int)((u_long)(96 << lp->bus) + iobase));
          
#line 3499 
          tmp_3 = ~ tmp_2 & 2U;
        }
        else 
#line 3499 
             tmp_3 = 0U;
        
#line 3499 
        __retres = (int)tmp_3;
        
#line 3499 
        goto return_label;
      }
      else ;
      
#line 3501 
      tmp_4 = gep_rd(dev);
      
#line 3501 
      ;
      
#line 3501 
      __retres = (lp->asBitValid & (lp->asPolarity ^ (tmp_4 & lp->asBit))) | (lp->linkOK & ~ lp->asBitValid);
      
#line 3501 
      goto return_label;
    }
  return_label: 
#line 3491 
                return __retres;
}


#line 3507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int is_10_up(struct net_device *dev)
{
  int __retres;
  
#line 3509 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3510 
  u_long iobase = dev->base_addr;
  
#line 3512 
  if ((int)lp->useMII != 0) {
    int tmp_0;
    
#line 3514 
    mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 3515 
    tmp_0 = mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 3515 
    __retres = tmp_0 & 4;
    
#line 3515 
    goto return_label;
  }
  else 
    
#line 3516 
    if (! lp->useSROM) {
      int tmp_1;
      
#line 3517 
      tmp_1 = gep_rd(dev);
      
#line 3517 
      __retres = ~ tmp_1 & 128;
      
#line 3517 
      goto return_label;
    }
    else {
      int tmp_4;
      
#line 3519 
      if ((unsigned int)lp->ibn == 2U || lp->asBitValid == 0) {
        unsigned int tmp_3;
        
#line 3521 
        if ((lp->chipset & -256) == 6400) {
          unsigned int tmp_2;
          
#line 3521 
          tmp_2 = inl((int)((u_long)(96 << lp->bus) + iobase));
          
#line 3521 
          tmp_3 = ~ tmp_2 & 4U;
        }
        else 
#line 3521 
             tmp_3 = 0U;
        
#line 3521 
        __retres = (int)tmp_3;
        
#line 3521 
        goto return_label;
      }
      else ;
      
#line 3524 
      tmp_4 = gep_rd(dev);
      
#line 3524 
      ;
      
#line 3524 
      __retres = (lp->asBitValid & (lp->asPolarity ^ (tmp_4 & lp->asBit))) | (lp->linkOK & ~ lp->asBitValid);
      
#line 3524 
      goto return_label;
    }
  return_label: 
#line 3512 
                return __retres;
}


#line 3530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int is_anc_capable(struct net_device *dev)
{
  int __retres;
  
#line 3532 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3533 
  u_long iobase = dev->base_addr;
  
#line 3535 
  if (lp->phy[lp->active].id != 0 && (! lp->useSROM || (int)lp->useMII != 0)) {
    int tmp_0;
    
#line 3536 
    tmp_0 = mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[lp->active].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 3536 
    __retres = tmp_0;
    
#line 3536 
    goto return_label;
  }
  else 
    
#line 3537 
    if ((lp->chipset & -256) == 6400) {
      unsigned int tmp_1;
      
#line 3538 
      tmp_1 = inl((int)((u_long)(96 << lp->bus) + iobase));
      
#line 3538 
      __retres = (int)(tmp_1 >> 12) & 8;
      
#line 3538 
      goto return_label;
    }
    else {
      
#line 3540 
      __retres = 0;
      
#line 3540 
      goto return_label;
    }
  return_label: 
#line 3535 
                return __retres;
}


#line 3549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int ping_media(struct net_device *dev, int msec)
{
  int sisr;
  unsigned int tmp_0;
  
#line 3551 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3552 
  u_long iobase = dev->base_addr;
  
#line 3555 
  if (lp->timeout < 0) {
    
#line 3556 
    lp->timeout = msec / 100;
    
#line 3558 
    lp->tmp = lp->tx_new;
    
#line 3559 
    load_packet(dev,(char *)(& lp->frame),1610612800U,(struct sk_buff *)1);
    
#line 3560 
    lp->tx_new = (lp->tx_new + 1) % (int)lp->txRingSize;
    
#line 3561 
    outl(1U,(int)((u_long)(8 << lp->bus) + iobase));
  }
  else ;
  
#line 3564 
  tmp_0 = inl((int)((u_long)(96 << lp->bus) + iobase));
  
#line 3564 
  sisr = (int)tmp_0;
  
#line 3566 
  if ((sisr & 2) == 0 && (int)(lp->tx_ring + lp->tmp)->status < 0) {
    
#line 3568 
    lp->timeout -= 1;
    
#line 3568 
    if (lp->timeout != 0) 
#line 3569 
                          sisr = -2147483548; else 
#line 3566 
                                                   goto _LAND;
  }
  else {
    _LAND: {
             
#line 3571 
             if (((sisr & 2) == 0 && ((lp->tx_ring + lp->tmp)->status & 2147516416U) == 0U) && lp->timeout != 0) 
               
#line 3574 
               sisr = 0; else 
#line 3576 
                              sisr = 1;
             
#line 3578 
             lp->timeout = -1;
           }
  }
  
#line 3581 
  return sisr;
}


#line 3590  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct sk_buff *de4x5_alloc_rx_buff(struct net_device *dev, int index, int len)
{
  struct sk_buff *__retres;
  struct sk_buff *p;
  struct sk_buff *ret;
  u_long tmp_0;
  
#line 3592 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3597 
  u_long i = 0UL;
  
#line 3599 
  p = netdev_alloc_skb(dev,1551U);
  
#line 3600 
  if (p == (struct sk_buff *)0) {
    
#line 3600 
    __retres = (struct sk_buff *)0;
    
#line 3600 
    goto return_label;
  }
  else ;
  
#line 3602 
  tmp_0 = (u_long)virt_to_phys((void volatile *)p->data);
  
#line 3603 
  i = ((tmp_0 + 31UL) & 18446744073709551584UL) - tmp_0;
  
#line 3604 
  skb_reserve(p,(int)i);
  
#line 3605 
  (lp->rx_ring + index)->buf = (unsigned int)tmp_0 + (unsigned int)i;
  
#line 3607 
  ret = lp->rx_skb[index];
  
#line 3608 
  lp->rx_skb[index] = p;
  
#line 3610 
  if ((unsigned long)ret > 1UL) 
#line 3611 
                                skb_put(ret,(unsigned int)len); else ;
  
#line 3614 
  __retres = ret;
  return_label: 
#line 3614 
                return __retres;
}


#line 3636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_free_rx_buffs(struct net_device *dev)
{
  int i;
  
#line 3638 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3641 
  i = 0;
  
#line 3641 
  goto ldv_47613;
  ldv_47612: 
#line 3642 
  ;
  
#line 3642 
  if ((unsigned long)lp->rx_skb[i] > 1UL) 
#line 3643 
                                          consume_skb(lp->rx_skb[i]); else ;
  
#line 3645 
  (lp->rx_ring + i)->status = 0U;
  
#line 3646 
  lp->rx_skb[i] = (struct sk_buff *)1;
  
#line 3641 
  i += 1;
  ldv_47613: 
#line 3642 
  ;
  
#line 3641 
  if ((int)lp->rxRingSize > i) 
#line 3643 
                               goto ldv_47612; else 
#line 3646 
                                                    goto ldv_47614;
  ldv_47614: 
#line 3647 
  ;
  
#line 3648 
  return;
}


#line 3651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_free_tx_buffs(struct net_device *dev)
{
  int i;
  
#line 3653 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3656 
  i = 0;
  
#line 3656 
  goto ldv_47621;
  ldv_47620: 
#line 3657 
  ;
  
#line 3657 
  if (lp->tx_skb[i] != (struct sk_buff *)0) 
#line 3658 
                                            de4x5_free_tx_buff(lp,i); else ;
  
#line 3659 
  (lp->tx_ring + i)->status = 0U;
  
#line 3656 
  i += 1;
  ldv_47621: 
#line 3657 
  ;
  
#line 3656 
  if ((int)lp->txRingSize > i) 
#line 3658 
                               goto ldv_47620; else 
#line 3661 
                                                    goto ldv_47622;
  ldv_47622: 
#line 3662 
  ;
  
#line 3663 
  __skb_queue_purge(& lp->cache.queue);
  
#line 3664 
  return;
}


#line 3674  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_save_skbs(struct net_device *dev)
{
  s32 omr;
  
#line 3676 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3677 
  u_long iobase = dev->base_addr;
  
#line 3680 
  if (lp->cache.save_cnt == 0) {
    unsigned int tmp_0;
    unsigned int tmp_1;
    
#line 3681 
    tmp_0 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 3681 
    omr = (int)tmp_0;
    
#line 3681 
    omr &= -8195;
    
#line 3681 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
    
#line 3682 
    de4x5_tx(dev);
    
#line 3683 
    de4x5_free_tx_buffs(dev);
    
#line 3684 
    de4x5_cache_state(dev,0);
    
#line 3685 
    de4x5_sw_reset(dev);
    
#line 3686 
    de4x5_cache_state(dev,1);
    
#line 3687 
    lp->cache.save_cnt += 1;
    
#line 3688 
    tmp_1 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 3688 
    omr = (int)tmp_1;
    
#line 3688 
    omr |= 8194;
    
#line 3688 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  }
  else ;
  
#line 3690 
  return;
}


#line 3693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_rst_desc_ring(struct net_device *dev)
{
  int i;
  s32 omr;
  
#line 3695 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3696 
  u_long iobase = dev->base_addr;
  
#line 3700 
  if (lp->cache.save_cnt != 0) {
    unsigned int tmp_0;
    int tmp_1;
    int tmp_2;
    unsigned int tmp_3;
    
#line 3701 
    tmp_0 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 3701 
    omr = (int)tmp_0;
    
#line 3701 
    omr &= -8195;
    
#line 3701 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
    
#line 3702 
    outl((unsigned int)lp->dma_rings,(int)((u_long)(24 << lp->bus) + iobase));
    
#line 3703 
    outl((unsigned int)lp->dma_rings + 128U,(int)((u_long)(32 << lp->bus) + iobase));
    
#line 3706 
    tmp_1 = 0;
    
#line 3706 
    lp->rx_old = tmp_1;
    
#line 3706 
    lp->rx_new = tmp_1;
    
#line 3707 
    tmp_2 = 0;
    
#line 3707 
    lp->tx_old = tmp_2;
    
#line 3707 
    lp->tx_new = tmp_2;
    
#line 3709 
    i = 0;
    
#line 3709 
    goto ldv_47637;
    ldv_47636: 
#line 3710 
    ;
    
#line 3710 
    (lp->rx_ring + i)->status = 2147483648U;
    
#line 3709 
    i += 1;
    ldv_47637: 
#line 3710 
    ;
    
#line 3709 
    if ((int)lp->rxRingSize > i) 
#line 3711 
                                 goto ldv_47636; else 
#line 3714 
                                                      goto ldv_47638;
    ldv_47638: 
#line 3715 
    ;
    
#line 3713 
    i = 0;
    
#line 3713 
    goto ldv_47640;
    ldv_47639: 
#line 3714 
    ;
    
#line 3714 
    (lp->tx_ring + i)->status = 0U;
    
#line 3713 
    i += 1;
    ldv_47640: 
#line 3714 
    ;
    
#line 3713 
    if ((int)lp->txRingSize > i) 
#line 3715 
                                 goto ldv_47639; else 
#line 3718 
                                                      goto ldv_47641;
    ldv_47641: 
#line 3719 
    ;
    
#line 3720 
    ldv_inline_asm();
    
#line 3718 
    lp->cache.save_cnt -= 1;
    
#line 3719 
    tmp_3 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 3719 
    omr = (int)tmp_3;
    
#line 3719 
    omr |= 8194;
    
#line 3719 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  }
  else ;
  
#line 3721 
  return;
}


#line 3724  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_cache_state(struct net_device *dev, int flag)
{
  
#line 3726 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3727 
  u_long iobase = dev->base_addr;
  
#line 3729 
  switch (flag) {
    unsigned int tmp_0;
    unsigned int tmp_1;
    unsigned int tmp_2;
    case 0: 
#line 3730 
    ;
    
#line 3731 
    tmp_0 = inl((int)iobase);
    
#line 3731 
    lp->cache.csr0 = (int)tmp_0;
    
#line 3732 
    tmp_1 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 3732 
    lp->cache.csr6 = (int)tmp_1 & -8195;
    
#line 3733 
    tmp_2 = inl((int)((u_long)(56 << lp->bus) + iobase));
    
#line 3733 
    lp->cache.csr7 = (int)tmp_2;
    
#line 3734 
    goto ldv_47649;
    case 1: 
#line 3736 
    ;
    
#line 3737 
    outl((unsigned int)lp->cache.csr0,(int)iobase);
    
#line 3738 
    outl((unsigned int)lp->cache.csr6,(int)((u_long)(48 << lp->bus) + iobase));
    
#line 3739 
    outl((unsigned int)lp->cache.csr7,(int)((u_long)(56 << lp->bus) + iobase));
    
#line 3740 
    if (lp->chipset == 2304) {
      
#line 3741 
      gep_wr(lp->cache.gepc,dev);
      
#line 3742 
      gep_wr(lp->cache.gep,dev);
    }
    else 
#line 3744 
         reset_init_sia(dev,lp->cache.csr13,lp->cache.csr14,lp->cache.csr15);
    
#line 3747 
    goto ldv_47649;
  }
  ldv_47649: 
#line 3749 
  ;
  
#line 3750 
  return;
}


#line 3752  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_put_cache(struct net_device *dev, struct sk_buff *skb)
{
  
#line 3754 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3756 
  __skb_queue_tail(& lp->cache.queue,skb);
  
#line 3757 
  return;
}


#line 3760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_putb_cache(struct net_device *dev, struct sk_buff *skb)
{
  
#line 3762 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3764 
  __skb_queue_head(& lp->cache.queue,skb);
  
#line 3765 
  return;
}


#line 3768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static struct sk_buff *de4x5_get_cache(struct net_device *dev)
{
  struct sk_buff *tmp_0;
  
#line 3770 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3772 
  tmp_0 = __skb_dequeue(& lp->cache.queue);
  
#line 3772 
  return tmp_0;
}


#line 3780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int test_ans(struct net_device *dev, s32 irqs, s32 irq_mask, s32 msec)
{
  s32 sts;
  s32 ans;
  unsigned int tmp_1;
  unsigned int tmp_2;
  
#line 3782 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3783 
  u_long iobase = dev->base_addr;
  
#line 3786 
  if (lp->timeout < 0) {
    unsigned int tmp_0;
    
#line 3787 
    lp->timeout = msec / 100;
    
#line 3788 
    outl((unsigned int)irq_mask,(int)((u_long)(56 << lp->bus) + iobase));
    
#line 3791 
    tmp_0 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 3791 
    sts = (int)tmp_0;
    
#line 3792 
    outl((unsigned int)sts,(int)((u_long)(40 << lp->bus) + iobase));
  }
  else ;
  
#line 3795 
  tmp_1 = inl((int)((u_long)(96 << lp->bus) + iobase));
  
#line 3795 
  ans = (int)tmp_1 & 28672;
  
#line 3796 
  tmp_2 = inl((int)((u_long)(40 << lp->bus) + iobase));
  
#line 3796 
  sts = (int)tmp_2 & 2147483647;
  
#line 3798 
  if ((sts & irqs) == 0 && ans != 20480) {
    
#line 3798 
    lp->timeout -= 1;
    
#line 3798 
    if (lp->timeout != 0) 
#line 3799 
                          sts = -2147483548; else 
#line 3801 
                                                  lp->timeout = -1;
  }
  else 
#line 3801 
       lp->timeout = -1;
  
#line 3804 
  return sts;
}


#line 3808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_setup_intr(struct net_device *dev)
{
  s32 imr;
  s32 sts;
  unsigned int tmp_1;
  
#line 3810 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3811 
  u_long iobase = dev->base_addr;
  
#line 3814 
  tmp_1 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 3814 
  if ((tmp_1 & 2U) != 0U) {
    unsigned int tmp_0;
    
#line 3815 
    imr = 0;
    
#line 3816 
    imr = lp->irq_mask | imr;
    
#line 3816 
    outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
    
#line 3817 
    tmp_0 = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 3817 
    sts = (int)tmp_0;
    
#line 3818 
    outl((unsigned int)sts,(int)((u_long)(40 << lp->bus) + iobase));
    
#line 3819 
    imr = lp->irq_en | imr;
    
#line 3819 
    outl((unsigned int)imr,(int)((u_long)(56 << lp->bus) + iobase));
  }
  else ;
  
#line 3821 
  return;
}


#line 3827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void reset_init_sia(struct net_device *dev, s32 csr13, s32 csr14, s32 csr15)
{
  
#line 3829 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3830 
  u_long iobase = dev->base_addr;
  
#line 3832 
  outl(0U,(int)((u_long)(104 << lp->bus) + iobase));
  
#line 3833 
  if ((int)lp->useSROM != 0) 
    
#line 3834 
    if ((unsigned int)lp->ibn == 3U) {
      
#line 3835 
      srom_exec(dev,lp->phy[lp->active].rst);
      
#line 3836 
      srom_exec(dev,lp->phy[lp->active].gep);
      
#line 3837 
      outl(1U,(int)((u_long)(104 << lp->bus) + iobase));
      
#line 3838 
      goto return_label;
    }
    else {
      
#line 3840 
      csr15 = lp->cache.csr15;
      
#line 3841 
      csr14 = lp->cache.csr14;
      
#line 3842 
      csr13 = lp->cache.csr13;
      
#line 3843 
      outl((unsigned int)(lp->cache.gepc | csr15),(int)((u_long)(120 << lp->bus) + iobase));
      
#line 3844 
      outl((unsigned int)(lp->cache.gep | csr15),(int)((u_long)(120 << lp->bus) + iobase));
    }
  else 
#line 3847 
       outl((unsigned int)csr15,(int)((u_long)(120 << lp->bus) + iobase));
  
#line 3849 
  outl((unsigned int)csr14,(int)((u_long)(112 << lp->bus) + iobase));
  
#line 3850 
  outl((unsigned int)csr13,(int)((u_long)(104 << lp->bus) + iobase));
  {
    
#line 3852 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp_0;
      
#line 3852 
      goto ldv_47692;
      ldv_47691: 
#line 3853 
      ;
      
#line 3852 
      __const_udelay(4295000UL);
      ldv_47692: 
#line 3854 
      ;
      
#line 3852 
      tmp_0 = __ms;
      
#line 3852 
      __ms -= 1UL;
      
#line 3852 
      ;
      
#line 3852 
      if (tmp_0 != 0UL) 
#line 3854 
                        goto ldv_47691; else 
#line 3857 
                                             goto ldv_47693;
      ldv_47693: 
#line 3858 
      ;
    }
  }
  return_label: 
#line 3861 
                return;
}


#line 3859  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void create_packet(struct net_device *dev, char *frame, int len)
{
  int i;
  char *tmp;
  char *tmp_0;
  char *tmp_1;
  char *tmp_2;
  
#line 3862 
  char *buf = frame;
  
#line 3864 
  i = 0;
  
#line 3864 
  goto ldv_47702;
  ldv_47701: 
#line 3865 
  ;
  
#line 3865 
  tmp = buf;
  
#line 3865 
  buf += 1;
  
#line 3865 
  *tmp = (char)*(dev->dev_addr + i);
  
#line 3864 
  i += 1;
  ldv_47702: 
#line 3865 
  ;
  
#line 3864 
  if (i <= 5) 
#line 3866 
              goto ldv_47701; else 
#line 3869 
                                   goto ldv_47703;
  ldv_47703: 
#line 3870 
  ;
  
#line 3867 
  i = 0;
  
#line 3867 
  goto ldv_47705;
  ldv_47704: 
#line 3868 
  ;
  
#line 3868 
  tmp_0 = buf;
  
#line 3868 
  buf += 1;
  
#line 3868 
  *tmp_0 = (char)*(dev->dev_addr + i);
  
#line 3867 
  i += 1;
  ldv_47705: 
#line 3868 
  ;
  
#line 3867 
  if (i <= 5) 
#line 3869 
              goto ldv_47704; else 
#line 3872 
                                   goto ldv_47706;
  ldv_47706: 
#line 3873 
  ;
  
#line 3871 
  tmp_1 = buf;
  
#line 3871 
  buf += 1;
  
#line 3871 
  *tmp_1 = (char)0;
  
#line 3872 
  tmp_2 = buf;
  
#line 3872 
  buf += 1;
  
#line 3872 
  *tmp_2 = (char)1;
  
#line 3873 
  return;
}


#line 3879  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int EISA_signature(char *name, struct device *device)
{
  int i;
  struct eisa_device *edev;
  struct eisa_device *tmp;
  
#line 3881 
  int status = 0;
  
#line 3881 
  int siglen = 5;
  
#line 3884 
  *name = (char)0;
  {
    
#line 3885 
    struct device const *__mptr = (struct device const *)device;
    
#line 3885 
    tmp = (struct eisa_device *)__mptr + 18446744073709551352U;
  }
  
#line 3885 
  edev = tmp;
  
#line 3886 
  i = (int)edev->id.driver_data;
  
#line 3888 
  if (i >= 0 && i < siglen) {
    
#line 3889 
    strcpy(name,de4x5_signatures[i]);
    
#line 3890 
    status = 1;
  }
  else ;
  
#line 3893 
  return status;
}


#line 3900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int PCI_signature(char *name, struct de4x5_private *lp)
{
  int __retres;
  int i;
  char *tmp_0;
  
#line 3902 
  int status = 0;
  
#line 3902 
  int siglen = 5;
  
#line 3904 
  if (lp->chipset == 512) {
    
#line 3905 
    strcpy(name,"DE434/5");
    
#line 3906 
    __retres = status;
    
#line 3906 
    goto return_label;
  }
  else {
    
#line 3908 
    int tmp = (int)*((char *)(& lp->srom) + 19U) * 3;
    
#line 3909 
    strncpy(name,(char const *)(& lp->srom) + ((unsigned int)tmp + 26U),8UL);
  }
  
#line 3911 
  *(name + 8U) = (char)0;
  
#line 3912 
  i = 0;
  
#line 3912 
  goto ldv_47733;
  ldv_47732: 
#line 3913 
  ;
  
#line 3913 
  tmp_0 = strstr((char const *)name,de4x5_signatures[i]);
  
#line 3913 
  if (tmp_0 != (char *)0) 
#line 3913 
                          goto ldv_47731; else ;
  
#line 3912 
  i += 1;
  ldv_47733: 
#line 3913 
  ;
  
#line 3912 
  if (i < siglen) 
#line 3914 
                  goto ldv_47732; else 
#line 3917 
                                       goto ldv_47731;
  ldv_47731: 
#line 3918 
  ;
  
#line 3915 
  if (i == siglen) {
    
#line 3916 
    if (dec_only != 0) 
#line 3917 
                       *name = (char)0;
    else {
      char *tmp_5;
      
#line 3919 
      if (lp->chipset != 512) {
        char *tmp_4;
        
#line 3919 
        if (lp->chipset != 5120) {
          char *tmp_3;
          
#line 3920 
          if (lp->chipset != 2304) {
            char *tmp_2;
            
#line 3921 
            if (lp->chipset != 6416) {
              char *tmp_1;
              
#line 3922 
              if (lp->chipset == 6448) 
#line 3922 
                                       tmp_1 = (char *)"DC21143"; else 
                                                                    
#line 3922 
                                                                    tmp_1 = (char *)"UNKNOWN";
              
#line 3921 
              tmp_2 = tmp_1;
            }
            else 
#line 3921 
                 tmp_2 = (char *)"DC21142";
            
#line 3920 
            tmp_3 = tmp_2;
          }
          else 
#line 3920 
               tmp_3 = (char *)"DC21140";
          
#line 3919 
          tmp_4 = tmp_3;
        }
        else 
#line 3919 
             tmp_4 = (char *)"DC21041";
        
#line 3919 
        tmp_5 = tmp_4;
      }
      else 
#line 3919 
           tmp_5 = (char *)"DC21040";
      
#line 3919 
      ;
      
#line 3919 
      strcpy(name,(char const *)tmp_5);
    }
    
#line 3926 
    if (lp->chipset != 5120) 
#line 3927 
                             lp->useSROM = (_Bool)1; else ;
  }
  else 
    
#line 3929 
    if ((lp->chipset & -256) == 6400) 
#line 3930 
                                      lp->useSROM = (_Bool)1; else ;
  
#line 3933 
  __retres = status;
  return_label: 
#line 3933 
                return __retres;
}


#line 3945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void DevicePresent(struct net_device *dev, u_long aprom_addr)
{
  int i;
  
#line 3947 
  int j = 0;
  
#line 3948 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 3950 
  if (lp->chipset == 512) 
    
#line 3951 
    if (lp->bus == 1) 
#line 3952 
                      enet_addr_rst(aprom_addr); else 
#line 3954 
                                                      outl(0U,(int)aprom_addr);
  else {
    u_short tmp_0;
    short tmp_1;
    short tmp_2;
    __le16 *tmp_3;
    
#line 3958 
    __le16 *p = (__le16 *)(& lp->srom) + 20U;
    
#line 3959 
    i = 0;
    
#line 3959 
    goto ldv_47744;
    ldv_47743: 
#line 3960 
    ;
    
#line 3960 
    tmp_1 = srom_rd(aprom_addr,(unsigned char)((int)((unsigned int)((unsigned char)i) + 10U)));
    
#line 3960 
    tmp_0 = (unsigned short)tmp_1;
    
#line 3961 
    j = (int)tmp_0 + j;
    
#line 3962 
    *p = tmp_0;
    
#line 3959 
    i += 1;
    ldv_47744: 
#line 3960 
    ;
    
#line 3959 
    if (i <= 2) 
#line 3961 
                goto ldv_47743; else 
#line 3964 
                                     goto ldv_47745;
    ldv_47745: 
#line 3965 
    ;
    
#line 3964 
    if (j == 0 || j == 196605) 
#line 3966 
                               goto return_label; else ;
    
#line 3969 
    p = (__le16 *)(& lp->srom);
    
#line 3970 
    i = 0;
    
#line 3970 
    goto ldv_47747;
    ldv_47746: 
#line 3971 
    ;
    
#line 3971 
    tmp_2 = srom_rd(aprom_addr,(unsigned char)((int)((unsigned char)i)));
    
#line 3971 
    tmp_0 = (unsigned short)tmp_2;
    
#line 3972 
    tmp_3 = p;
    
#line 3972 
    p += 1;
    
#line 3972 
    *tmp_3 = tmp_0;
    
#line 3970 
    i += 1;
    ldv_47747: 
#line 3971 
    ;
    
#line 3970 
    if ((unsigned int)i <= 63U) 
#line 3972 
                                goto ldv_47746; else 
#line 3975 
                                                     goto ldv_47748;
    ldv_47748: 
#line 3976 
    ;
    
#line 3974 
    de4x5_dbg_srom(& lp->srom);
  }
  return_label: 
#line 3976 
                return;
}


#line 3984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void enet_addr_rst(u_long aprom_addr)
{
  union __anonunion_dev_340 dev;
  s8 data;
  int i;
  int j;
  unsigned char tmp;
  
#line 3993 
  short sigLength = (short)0;
  
#line 3997 
  dev.llsig.a = 2857697535U;
  
#line 3998 
  dev.llsig.b = 2857697535U;
  
#line 3999 
  sigLength = (short)8;
  
#line 4001 
  i = 0;
  
#line 4001 
  j = 0;
  
#line 4001 
  goto ldv_47764;
  ldv_47763: 
#line 4002 
  ;
  
#line 4002 
  tmp = inb((int)aprom_addr);
  
#line 4002 
  data = (signed char)tmp;
  
#line 4003 
  if ((int)((signed char)dev.Sig[j]) == (int)data) 
#line 4004 
                                                   j += 1;
  else 
    
#line 4006 
    if ((int)((signed char)dev.Sig[0]) == (int)data) 
#line 4007 
                                                     j = 1; else 
#line 4009 
                                                                 j = 0;
  
#line 4001 
  i += 1;
  ldv_47764: 
#line 4002 
  ;
  
#line 4001 
  if ((int)sigLength > j && (int)sigLength + 31 > i) 
#line 4003 
                                                     goto ldv_47763; else 
                                                                    
#line 4006 
                                                                    goto ldv_47765;
  ldv_47765: 
#line 4007 
  ;
  
#line 4008 
  return;
}


#line 4022  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int get_hw_addr(struct net_device *dev)
{
  int broken;
  int i;
  int k;
  int tmp;
  u_short j;
  u_short chksum;
  
#line 4024 
  u_long iobase = dev->base_addr;
  
#line 4025 
  int status = 0;
  
#line 4027 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4029 
  broken = de4x5_bad_srom(lp);
  
#line 4031 
  i = 0;
  
#line 4031 
  k = 0;
  
#line 4031 
  j = (unsigned short)0U;
  
#line 4031 
  goto ldv_47785;
  ldv_47784: 
#line 4032 
  ;
  
#line 4032 
  k <<= 1;
  
#line 4033 
  if (k > 65535) 
#line 4033 
                 k += -65535; else ;
  
#line 4035 
  if (lp->bus == 0) {
    
#line 4036 
    if (lp->chipset == 512) {
      unsigned int tmp_1;
      int tmp_2;
      unsigned int tmp_3;
      int tmp_4;
      
#line 4037 
      goto ldv_47779;
      ldv_47778: 
#line 4038 
      ;
      ldv_47779: 
#line 4039 
      ;
      
#line 4037 
      tmp_1 = inl((int)((u_long)(72 << lp->bus) + iobase));
      
#line 4037 
      tmp = (int)tmp_1;
      
#line 4037 
      if (tmp < 0) 
#line 4039 
                   goto ldv_47778; else 
#line 4042 
                                        goto ldv_47780;
      ldv_47780: 
#line 4043 
      ;
      
#line 4038 
      k = (int)((unsigned char)tmp) + k;
      
#line 4039 
      tmp_2 = i;
      
#line 4039 
      i += 1;
      
#line 4039 
      *(dev->dev_addr + tmp_2) = (unsigned char)tmp;
      
#line 4040 
      goto ldv_47782;
      ldv_47781: 
#line 4041 
      ;
      ldv_47782: 
#line 4042 
      ;
      
#line 4040 
      tmp_3 = inl((int)((u_long)(72 << lp->bus) + iobase));
      
#line 4040 
      tmp = (int)tmp_3;
      
#line 4040 
      if (tmp < 0) 
#line 4042 
                   goto ldv_47781; else 
#line 4045 
                                        goto ldv_47783;
      ldv_47783: 
#line 4046 
      ;
      
#line 4041 
      k = ((int)((unsigned short)tmp) << 8U) + k;
      
#line 4042 
      tmp_4 = i;
      
#line 4042 
      i += 1;
      
#line 4042 
      *(dev->dev_addr + tmp_4) = (unsigned char)tmp;
    }
    else 
      
#line 4043 
      if (broken == 0) {
        
#line 4044 
        *(dev->dev_addr + i) = (unsigned char)lp->srom.ieee_addr[i];
        
#line 4044 
        i += 1;
        
#line 4045 
        *(dev->dev_addr + i) = (unsigned char)lp->srom.ieee_addr[i];
        
#line 4045 
        i += 1;
      }
      else 
        
#line 4046 
        if ((unsigned int)broken + 4294967295U <= 1U) {
          
#line 4047 
          *(dev->dev_addr + i) = *((u_char *)(& lp->srom) + i);
          
#line 4047 
          i += 1;
          
#line 4048 
          *(dev->dev_addr + i) = *((u_char *)(& lp->srom) + i);
          
#line 4048 
          i += 1;
        }
        else ;
  }
  else {
    unsigned char tmp_5;
    int tmp_6;
    unsigned char tmp_7;
    int tmp_8;
    
#line 4051 
    tmp_5 = inb((int)(iobase + (u_long)3216U));
    
#line 4051 
    tmp = (int)tmp_5;
    
#line 4051 
    k = (int)((unsigned char)tmp) + k;
    
#line 4052 
    tmp_6 = i;
    
#line 4052 
    i += 1;
    
#line 4052 
    *(dev->dev_addr + tmp_6) = (unsigned char)tmp;
    
#line 4053 
    tmp_7 = inb((int)(iobase + (u_long)3216U));
    
#line 4053 
    tmp = (int)tmp_7;
    
#line 4053 
    k = ((int)((unsigned short)tmp) << 8U) + k;
    
#line 4054 
    tmp_8 = i;
    
#line 4054 
    i += 1;
    
#line 4054 
    *(dev->dev_addr + tmp_8) = (unsigned char)tmp;
  }
  
#line 4057 
  if (k > 65535) 
#line 4057 
                 k += -65535; else ;
  
#line 4031 
  j = (u_short)((int)j + 1);
  ldv_47785: 
#line 4032 
  ;
  
#line 4031 
  if ((unsigned int)j <= 2U) 
#line 4033 
                             goto ldv_47784; else 
#line 4036 
                                                  goto ldv_47786;
  ldv_47786: 
#line 4037 
  ;
  
#line 4059 
  if (k == 65535) 
#line 4059 
                  k = 0; else ;
  
#line 4061 
  if (lp->bus == 0) {
    
#line 4062 
    if (lp->chipset == 512) {
      unsigned int tmp_9;
      unsigned int tmp_10;
      
#line 4063 
      goto ldv_47788;
      ldv_47787: 
#line 4064 
      ;
      ldv_47788: 
#line 4065 
      ;
      
#line 4063 
      tmp_9 = inl((int)((u_long)(72 << lp->bus) + iobase));
      
#line 4063 
      tmp = (int)tmp_9;
      
#line 4063 
      if (tmp < 0) 
#line 4065 
                   goto ldv_47787; else 
#line 4068 
                                        goto ldv_47789;
      ldv_47789: 
#line 4069 
      ;
      
#line 4064 
      chksum = (unsigned short)((unsigned char)tmp);
      
#line 4065 
      goto ldv_47791;
      ldv_47790: 
#line 4066 
      ;
      ldv_47791: 
#line 4067 
      ;
      
#line 4065 
      tmp_10 = inl((int)((u_long)(72 << lp->bus) + iobase));
      
#line 4065 
      tmp = (int)tmp_10;
      
#line 4065 
      if (tmp < 0) 
#line 4067 
                   goto ldv_47790; else 
#line 4070 
                                        goto ldv_47792;
      ldv_47792: 
#line 4071 
      ;
      
#line 4066 
      chksum = (unsigned short)(((int)((unsigned short)tmp) << 8U) | (int)chksum);
      
#line 4067 
      if ((int)chksum != k && dec_only != 0) 
#line 4067 
                                             status = -1; else ;
    }
    else ;
  }
  else {
    unsigned char tmp_11;
    unsigned char tmp_12;
    
#line 4070 
    tmp_11 = inb((int)(iobase + (u_long)3216U));
    
#line 4070 
    chksum = (unsigned short)tmp_11;
    
#line 4071 
    tmp_12 = inb((int)(iobase + (u_long)3216U));
    
#line 4071 
    chksum = (unsigned short)(((int)((unsigned short)tmp_12) << 8U) | (int)chksum);
    
#line 4072 
    if ((int)chksum != k && dec_only != 0) 
#line 4072 
                                           status = -1; else ;
  }
  
#line 4076 
  srom_repair(dev,broken);
  
#line 4098 
  status = test_bad_enet(dev,status);
  
#line 4100 
  return status;
}


#line 4107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_bad_srom(struct de4x5_private *lp)
{
  int i;
  int tmp;
  
#line 4109 
  int status = 0;
  
#line 4111 
  i = 0;
  
#line 4111 
  goto ldv_47803;
  ldv_47802: 
#line 4112 
  ;
  
#line 4112 
  tmp = memcmp((void const *)(& lp->srom),(void const *)(& enet_det[i]),3UL);
  
#line 4112 
  if (tmp == 0) {
    int tmp_0;
    
#line 4112 
    tmp_0 = memcmp((void const *)(& lp->srom) + 16U,(void const *)(& enet_det[i]),3UL);
    
#line 4112 
    if (tmp_0 == 0) {
      
#line 4114 
      if (i == 0) 
#line 4115 
                  status = 1;
      else 
        
#line 4116 
        if (i == 1) 
#line 4117 
                    status = 2; else ;
      
#line 4119 
      goto ldv_47801;
    }
    else ;
  }
  else ;
  
#line 4111 
  i += 1;
  ldv_47803: 
#line 4112 
  ;
  
#line 4111 
  if ((unsigned int)i <= 1U) 
#line 4113 
                             goto ldv_47802; else 
#line 4116 
                                                  goto ldv_47801;
  ldv_47801: 
#line 4117 
  ;
  
#line 4123 
  return status;
}


#line 4127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_repair(struct net_device *dev, int card)
{
  
#line 4129 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4131 
  switch (card) {
    case 1: 
#line 4132 
    ;
    
#line 4133 
    memset((void *)(& lp->srom),0,128UL);
    
#line 4134 
    memcpy((void *)(& lp->srom.ieee_addr),(void const *)dev->dev_addr,6UL);
    
#line 4135 
    memcpy((void *)(& lp->srom.info),(void const *)(&(srom_repair_info[0])),100UL);
    
#line 4136 
    lp->useSROM = (_Bool)1;
    
#line 4137 
    goto ldv_47810;
  }
  ldv_47810: 
#line 4139 
  ;
  
#line 4140 
  return;
}


#line 4146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int test_bad_enet(struct net_device *dev, int status)
{
  int i;
  int tmp_0;
  
#line 4148 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4151 
  tmp_0 = 0;
  
#line 4151 
  i = 0;
  
#line 4151 
  goto ldv_47819;
  ldv_47818: 
#line 4152 
  ;
  
#line 4151 
  tmp_0 = (int)*(dev->dev_addr + i) + tmp_0;
  
#line 4151 
  i += 1;
  ldv_47819: 
#line 4152 
  ;
  
#line 4151 
  if (i <= 5) 
#line 4153 
              goto ldv_47818; else 
#line 4156 
                                   goto ldv_47820;
  ldv_47820: 
#line 4157 
  ;
  
#line 4152 
  if (tmp_0 == 0 || tmp_0 == 1530) {
    
#line 4153 
    if ((lp->chipset == last.chipset && lp->bus_num == last.bus) && lp->bus_num > 0) {
      int tmp_1;
      
#line 4155 
      i = 0;
      
#line 4155 
      goto ldv_47822;
      ldv_47821: 
#line 4156 
      ;
      
#line 4155 
      *(dev->dev_addr + i) = last.addr[i];
      
#line 4155 
      i += 1;
      ldv_47822: 
#line 4156 
      ;
      
#line 4155 
      if (i <= 5) 
#line 4157 
                  goto ldv_47821; else 
#line 4160 
                                       goto ldv_47823;
      ldv_47823: 
#line 4161 
      ;
      
#line 4156 
      i = 5;
      
#line 4156 
      goto ldv_47826;
      ldv_47825: 
#line 4157 
      ;
      
#line 4157 
      *(dev->dev_addr + i) = (unsigned char)((unsigned int)*(dev->dev_addr + i) + 1U);
      
#line 4158 
      if ((unsigned int)*(dev->dev_addr + i) != 0U) 
#line 4158 
                                                    goto ldv_47824; else ;
      
#line 4156 
      i -= 1;
      ldv_47826: 
#line 4157 
      ;
      
#line 4156 
      if (i > 2) 
#line 4158 
                 goto ldv_47825; else 
#line 4161 
                                      goto ldv_47824;
      ldv_47824: 
#line 4162 
      ;
      
#line 4160 
      i = 0;
      
#line 4160 
      goto ldv_47828;
      ldv_47827: 
#line 4161 
      ;
      
#line 4160 
      last.addr[i] = *(dev->dev_addr + i);
      
#line 4160 
      i += 1;
      ldv_47828: 
#line 4161 
      ;
      
#line 4160 
      if (i <= 5) 
#line 4162 
                  goto ldv_47827; else 
#line 4165 
                                       goto ldv_47829;
      ldv_47829: 
#line 4166 
      ;
      
#line 4161 
      tmp_1 = an_exception(lp);
      
#line 4161 
      if (tmp_1 == 0) 
#line 4162 
                      dev->irq = last.irq; else ;
      
#line 4165 
      status = 0;
    }
    else ;
  }
  else 
    
#line 4167 
    if (status == 0) {
      
#line 4168 
      last.chipset = lp->chipset;
      
#line 4169 
      last.bus = lp->bus_num;
      
#line 4170 
      last.irq = dev->irq;
      
#line 4171 
      i = 0;
      
#line 4171 
      goto ldv_47831;
      ldv_47830: 
#line 4172 
      ;
      
#line 4171 
      last.addr[i] = *(dev->dev_addr + i);
      
#line 4171 
      i += 1;
      ldv_47831: 
#line 4172 
      ;
      
#line 4171 
      if (i <= 5) 
#line 4173 
                  goto ldv_47830; else 
#line 4176 
                                       goto ldv_47832;
      ldv_47832: 
#line 4177 
      ;
    }
    else ;
  
#line 4174 
  return status;
}


#line 4181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int an_exception(struct de4x5_private *lp)
{
  int __retres;
  
#line 4183 
  if ((unsigned int)*((u_short *)(& lp->srom.sub_vendor_id)) == 192U && (unsigned int)*((u_short *)(& lp->srom.sub_system_id)) == 38368U) {
    
#line 4185 
    __retres = -1;
    
#line 4185 
    goto return_label;
  }
  else ;
  
#line 4188 
  __retres = 0;
  return_label: 
#line 4188 
                return __retres;
}


#line 4195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static short srom_rd(u_long addr, u_char offset)
{
  short tmp;
  
#line 4197 
  sendto_srom(18432U,addr);
  
#line 4199 
  srom_latch(18433U,addr);
  
#line 4200 
  srom_command(18437U,addr);
  
#line 4201 
  srom_address(18433U,addr,(unsigned char)((int)offset));
  
#line 4203 
  tmp = srom_data(18433U,addr);
  
#line 4203 
  return tmp;
}


#line 4207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_latch(u_int command, u_long addr)
{
  
#line 4209 
  sendto_srom(command,addr);
  
#line 4210 
  sendto_srom(command | 2U,addr);
  
#line 4211 
  sendto_srom(command,addr);
  
#line 4212 
  return;
}


#line 4215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_command(u_int command, u_long addr)
{
  
#line 4217 
  srom_latch(command,addr);
  
#line 4218 
  srom_latch(command,addr);
  
#line 4219 
  srom_latch((command & 65280U) | 1U,addr);
  
#line 4220 
  return;
}


#line 4223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_address(u_int command, u_long addr, u_char offset)
{
  int i;
  int a;
  int tmp;
  
#line 4227 
  a = (int)offset << 2;
  
#line 4228 
  i = 0;
  
#line 4228 
  goto ldv_47856;
  ldv_47855: 
#line 4229 
  ;
  
#line 4229 
  srom_latch(((unsigned int)(a >> 5) & 4U) | command,addr);
  
#line 4228 
  i += 1;
  
#line 4228 
  a <<= 1;
  ldv_47856: 
#line 4229 
  ;
  
#line 4228 
  if (i <= 5) 
#line 4230 
              goto ldv_47855; else 
#line 4233 
                                   goto ldv_47857;
  ldv_47857: 
#line 4234 
  ;
  
#line 4231 
  __const_udelay(4295UL);
  
#line 4233 
  tmp = getfrom_srom(addr);
  
#line 4233 
  i = (tmp >> 3) & 1;
  
#line 4234 
  return;
}


#line 4237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static short srom_data(u_int command, u_long addr)
{
  int i;
  s32 tmp;
  
#line 4240 
  short word = (short)0;
  
#line 4243 
  i = 0;
  
#line 4243 
  goto ldv_47866;
  ldv_47865: 
#line 4244 
  ;
  
#line 4244 
  sendto_srom(command | 2U,addr);
  
#line 4245 
  tmp = getfrom_srom(addr);
  
#line 4246 
  sendto_srom(command,addr);
  
#line 4248 
  word = (short)((int)((short)((int)word << 1)) | ((int)((short)(tmp >> 3)) & 1));
  
#line 4243 
  i += 1;
  ldv_47866: 
#line 4244 
  ;
  
#line 4243 
  if (i <= 15) 
#line 4245 
               goto ldv_47865; else 
#line 4248 
                                    goto ldv_47867;
  ldv_47867: 
#line 4249 
  ;
  
#line 4251 
  sendto_srom(command & 65280U,addr);
  
#line 4253 
  return word;
}


#line 4271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void sendto_srom(u_int command, u_long addr)
{
  
#line 4273 
  outl(command,(int)addr);
  
#line 4274 
  __const_udelay(4295UL);
  
#line 4276 
  return;
}


#line 4278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int getfrom_srom(u_long addr)
{
  s32 tmp;
  unsigned int tmp_0;
  
#line 4282 
  tmp_0 = inl((int)addr);
  
#line 4282 
  tmp = (int)tmp_0;
  
#line 4283 
  __const_udelay(4295UL);
  
#line 4285 
  return tmp;
}


#line 4289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int srom_infoleaf_info(struct net_device *dev)
{
  int __retres;
  int i;
  int count;
  u_char *p;
  u16 tmp_0;
  
#line 4291 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4296 
  i = 0;
  
#line 4296 
  goto ldv_47888;
  ldv_47887: 
#line 4297 
  ;
  
#line 4297 
  if (lp->chipset == infoleaf_array[i].chipset) 
#line 4297 
                                                goto ldv_47886; else ;
  
#line 4296 
  i += 1;
  ldv_47888: 
#line 4297 
  ;
  
#line 4296 
  if ((unsigned int)i <= 3U) 
#line 4298 
                             goto ldv_47887; else 
#line 4301 
                                                  goto ldv_47886;
  ldv_47886: 
#line 4302 
  ;
  
#line 4299 
  if (i == 4) {
    
#line 4300 
    lp->useSROM = (_Bool)0;
    
#line 4301 
    printk("%s: Cannot find correct chipset for SROM decoding!\n",(char *)(& dev->name));
    
#line 4303 
    __retres = -6;
    
#line 4303 
    goto return_label;
  }
  else ;
  
#line 4306 
  lp->infoleaf_fn = infoleaf_array[i].fn;
  
#line 4309 
  count = (int)*((u_char *)(& lp->srom) + 19U);
  
#line 4310 
  p = (u_char *)(& lp->srom) + 26U;
  
#line 4312 
  if (count > 1) {
    
#line 4313 
    i = count;
    
#line 4313 
    goto ldv_47894;
    ldv_47893: 
#line 4314 
    ;
    
#line 4314 
    if (lp->device == (int)*p) 
#line 4314 
                               goto ldv_47892; else ;
    
#line 4313 
    i -= 1;
    
#line 4313 
    p += 3U;
    ldv_47894: 
#line 4314 
    ;
    
#line 4313 
    if (i != 0) 
#line 4315 
                goto ldv_47893; else 
#line 4318 
                                     goto ldv_47892;
    ldv_47892: 
#line 4319 
    ;
    
#line 4316 
    if (i == 0) {
      
#line 4317 
      lp->useSROM = (_Bool)0;
      
#line 4318 
      printk("%s: Cannot find correct PCI device [%d] for SROM decoding!\n",(char *)(& dev->name),lp->device);
      
#line 4320 
      __retres = -6;
      
#line 4320 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4324 
  tmp_0 = get_unaligned_le16((void const *)(p + 1U));
  
#line 4324 
  lp->infoleaf_offset = (int)tmp_0;
  
#line 4326 
  __retres = 0;
  return_label: 
#line 4326 
                return __retres;
}


#line 4337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_init(struct net_device *dev)
{
  u_char count;
  u_char *tmp_1;
  
#line 4339 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4340 
  u_char *p = (u_char *)(& lp->srom) + lp->infoleaf_offset;
  
#line 4343 
  p += 2U;
  
#line 4344 
  if (lp->chipset == 2304) {
    u_char *tmp_0;
    
#line 4345 
    tmp_0 = p;
    
#line 4345 
    p += 1;
    
#line 4345 
    lp->cache.gepc = (int)*tmp_0 | 256;
    
#line 4346 
    gep_wr(lp->cache.gepc,dev);
  }
  else ;
  
#line 4350 
  tmp_1 = p;
  
#line 4350 
  p += 1;
  
#line 4350 
  count = *tmp_1;
  
#line 4353 
  goto ldv_47902;
  ldv_47901: 
#line 4354 
  ;
  
#line 4354 
  if ((int)*p >= 0) 
#line 4355 
                    p += 4U;
  else 
    
#line 4356 
    if ((unsigned int)*(p + 1U) == 5U) {
      
#line 4357 
      type5_infoblock(dev,(unsigned char)1,p);
      
#line 4358 
      p += ((unsigned int)*p & 127U) + 1U;
    }
    else 
      
#line 4359 
      if ((unsigned int)*(p + 1U) == 4U) 
#line 4360 
                                         p += ((unsigned int)*p & 127U) + 1U;
      else 
        
#line 4361 
        if ((unsigned int)*(p + 1U) == 3U) {
          
#line 4362 
          type3_infoblock(dev,(unsigned char)1,p);
          
#line 4363 
          p += ((unsigned int)*p & 127U) + 1U;
        }
        else 
          
#line 4364 
          if ((unsigned int)*(p + 1U) == 2U) 
#line 4365 
                                             p += ((unsigned int)*p & 127U) + 1U;
          else 
            
#line 4366 
            if ((unsigned int)*(p + 1U) == 1U) {
              
#line 4367 
              type1_infoblock(dev,(unsigned char)1,p);
              
#line 4368 
              p += ((unsigned int)*p & 127U) + 1U;
            }
            else 
#line 4370 
                 p += ((unsigned int)*p & 127U) + 1U;
  
#line 4353 
  count = (u_char)((int)count - 1);
  ldv_47902: 
#line 4354 
  ;
  
#line 4353 
  if ((unsigned int)count != 0U) 
#line 4355 
                                 goto ldv_47901; else 
#line 4358 
                                                      goto ldv_47903;
  ldv_47903: 
#line 4359 
  ;
  
#line 4360 
  return;
}


#line 4380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void srom_exec(struct net_device *dev, u_char *p)
{
  unsigned int tmp_1;
  int tmp_5;
  u_char tmp_7;
  
#line 4382 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4383 
  u_long iobase = dev->base_addr;
  
#line 4384 
  if (p != (u_char *)0U) {
    u_char *tmp_0;
    
#line 4384 
    tmp_0 = p;
    
#line 4384 
    p += 1;
    
#line 4384 
    tmp_1 = (unsigned int)*tmp_0;
  }
  else 
#line 4384 
       tmp_1 = 0U;
  
#line 4384 
  u_char count = (unsigned char)tmp_1;
  
#line 4385 
  u_short *w = (u_short *)p;
  
#line 4387 
  if ((((unsigned int)lp->ibn != 1U && (unsigned int)lp->ibn != 3U) && (unsigned int)lp->ibn != 5U) || (unsigned int)count == 0U) 
    
#line 4387 
    goto return_label; else ;
  
#line 4389 
  if (lp->chipset != 2304) 
#line 4389 
                           outl(0U,(int)((u_long)(104 << lp->bus) + iobase)); else ;
  
#line 4391 
  goto ldv_47917;
  ldv_47916: 
#line 4392 
  ;
  
#line 4392 
  ;
  
#line 4392 
  if (lp->chipset == 2304 && (unsigned int)lp->ibn != 5U) {
    u_char *tmp_2;
    
#line 4393 
    tmp_2 = p;
    
#line 4393 
    p += 1;
    
#line 4392 
    tmp_5 = (int)*tmp_2;
  }
  else {
    u16 tmp_4;
    u_short *tmp_3;
    
#line 4393 
    tmp_3 = w;
    
#line 4393 
    w += 1;
    
#line 4393 
    ;
    
#line 4393 
    tmp_4 = get_unaligned_le16((void const *)tmp_3);
    
#line 4392 
    tmp_5 = (int)tmp_4;
  }
  
#line 4392 
  gep_wr(tmp_5,dev);
  
#line 4394 
  if (1) 
#line 4394 
         __const_udelay(8590000UL);
  else {
    
#line 4394 
    unsigned long __ms = 2UL;
    {
      unsigned long tmp_6;
      
#line 4394 
      goto ldv_47914;
      ldv_47913: 
#line 4395 
      ;
      
#line 4394 
      __const_udelay(4295000UL);
      ldv_47914: 
#line 4396 
      ;
      
#line 4394 
      tmp_6 = __ms;
      
#line 4394 
      __ms -= 1UL;
      
#line 4394 
      ;
      
#line 4394 
      if (tmp_6 != 0UL) 
#line 4396 
                        goto ldv_47913; else 
#line 4399 
                                             goto ldv_47915;
      ldv_47915: 
#line 4400 
      ;
    }
  }
  ldv_47917: 
#line 4403 
  ;
  
#line 4391 
  tmp_7 = count;
  
#line 4391 
  count = (u_char)((int)count - 1);
  
#line 4391 
  ;
  
#line 4391 
  if ((unsigned int)tmp_7 != 0U) 
#line 4393 
                                 goto ldv_47916; else 
#line 4396 
                                                      goto ldv_47918;
  ldv_47918: 
#line 4397 
  ;
  
#line 4397 
  if (lp->chipset != 2304) {
    
#line 4398 
    outl((unsigned int)lp->cache.csr14,(int)((u_long)(112 << lp->bus) + iobase));
    
#line 4399 
    outl((unsigned int)lp->cache.csr13,(int)((u_long)(104 << lp->bus) + iobase));
  }
  else ;
  return_label: 
#line 4401 
                return;
}


#line 4409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21041_infoleaf(struct net_device *dev)
{
  int __retres;
  
#line 4411 
  __retres = 250;
  
#line 4411 
  return __retres;
}


#line 4415  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21140_infoleaf(struct net_device *dev)
{
  int __retres;
  u_char *tmp_0;
  u_char *tmp_1;
  
#line 4417 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4418 
  u_char count = (unsigned char)0U;
  
#line 4419 
  u_char *p = (u_char *)(& lp->srom) + lp->infoleaf_offset;
  
#line 4420 
  int next_tick = 250;
  
#line 4423 
  p += 2U;
  
#line 4426 
  tmp_0 = p;
  
#line 4426 
  p += 1;
  
#line 4426 
  lp->cache.gepc = (int)*tmp_0 | 256;
  
#line 4429 
  tmp_1 = p;
  
#line 4429 
  p += 1;
  
#line 4429 
  count = *tmp_1;
  
#line 4432 
  if ((int)*p >= 0) 
#line 4433 
                    next_tick = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p); else 
                                                                    
#line 4435 
                                                                    next_tick = (*(dc_infoblock[(int)*(p + 1U)]))(dev,(unsigned char)((int)count),p);
  
#line 4438 
  if (lp->tcount == (int)count) {
    
#line 4439 
    lp->media = 0;
    
#line 4440 
    if (lp->media != lp->c_media) {
      
#line 4441 
      de4x5_dbg_media(dev);
      
#line 4442 
      lp->c_media = lp->media;
    }
    else ;
    
#line 4444 
    lp->media = 512;
    
#line 4445 
    lp->tcount = 0;
    
#line 4446 
    lp->tx_enable = (_Bool)0;
  }
  else ;
  
#line 4449 
  __retres = next_tick & 2147483647;
  
#line 4449 
  return __retres;
}


#line 4453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21142_infoleaf(struct net_device *dev)
{
  int __retres;
  u_char *tmp_0;
  
#line 4455 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4456 
  u_char count = (unsigned char)0U;
  
#line 4457 
  u_char *p = (u_char *)(& lp->srom) + lp->infoleaf_offset;
  
#line 4458 
  int next_tick = 250;
  
#line 4461 
  p += 2U;
  
#line 4464 
  tmp_0 = p;
  
#line 4464 
  p += 1;
  
#line 4464 
  count = *tmp_0;
  
#line 4467 
  if ((int)*p >= 0) 
#line 4468 
                    next_tick = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p); else 
                                                                    
#line 4470 
                                                                    next_tick = (*(dc_infoblock[(int)*(p + 1U)]))(dev,(unsigned char)((int)count),p);
  
#line 4473 
  if (lp->tcount == (int)count) {
    
#line 4474 
    lp->media = 0;
    
#line 4475 
    if (lp->media != lp->c_media) {
      
#line 4476 
      de4x5_dbg_media(dev);
      
#line 4477 
      lp->c_media = lp->media;
    }
    else ;
    
#line 4479 
    lp->media = 512;
    
#line 4480 
    lp->tcount = 0;
    
#line 4481 
    lp->tx_enable = (_Bool)0;
  }
  else ;
  
#line 4484 
  __retres = next_tick & 2147483647;
  
#line 4484 
  return __retres;
}


#line 4488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int dc21143_infoleaf(struct net_device *dev)
{
  int __retres;
  u_char *tmp_0;
  
#line 4490 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4491 
  u_char count = (unsigned char)0U;
  
#line 4492 
  u_char *p = (u_char *)(& lp->srom) + lp->infoleaf_offset;
  
#line 4493 
  int next_tick = 250;
  
#line 4496 
  p += 2U;
  
#line 4499 
  tmp_0 = p;
  
#line 4499 
  p += 1;
  
#line 4499 
  count = *tmp_0;
  
#line 4502 
  if ((int)*p >= 0) 
#line 4503 
                    next_tick = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p); else 
                                                                    
#line 4505 
                                                                    next_tick = (*(dc_infoblock[(int)*(p + 1U)]))(dev,(unsigned char)((int)count),p);
  
#line 4507 
  if (lp->tcount == (int)count) {
    
#line 4508 
    lp->media = 0;
    
#line 4509 
    if (lp->media != lp->c_media) {
      
#line 4510 
      de4x5_dbg_media(dev);
      
#line 4511 
      lp->c_media = lp->media;
    }
    else ;
    
#line 4513 
    lp->media = 512;
    
#line 4514 
    lp->tcount = 0;
    
#line 4515 
    lp->tx_enable = (_Bool)0;
  }
  else ;
  
#line 4518 
  __retres = next_tick & 2147483647;
  
#line 4518 
  return __retres;
}


#line 4526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int compact_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  u_char flags;
  u_char csr6;
  int tmp_7;
  
#line 4528 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4532 
  count = (u_char)((int)count - 1);
  
#line 4532 
  ;
  
#line 4532 
  if ((int)count > lp->tcount) 
    
#line 4533 
    if ((int)*(p + 4U) >= 0) {
      int tmp_0;
      
#line 4534 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + 4U);
      
#line 4534 
      __retres = tmp_0;
      
#line 4534 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4536 
      tmp_1 = (*(dc_infoblock[(int)*(p + 5U)]))(dev,(unsigned char)((int)count),p + 4U);
      
#line 4536 
      __retres = tmp_1;
      
#line 4536 
      goto return_label;
    }
  else ;
  
#line 4540 
  if (lp->media == 512 && lp->timeout < 0) {
    u_char *tmp_2;
    u_char *tmp_3;
    u_char *tmp_4;
    u_char *tmp_5;
    int tmp_6;
    
#line 4541 
    lp->ibn = (unsigned char)6U;
    
#line 4542 
    lp->active = 0;
    
#line 4543 
    gep_wr(lp->cache.gepc,dev);
    
#line 4544 
    tmp_2 = p;
    
#line 4544 
    p += 1;
    
#line 4544 
    lp->infoblock_media = (int)*tmp_2 & 63;
    
#line 4545 
    tmp_3 = p;
    
#line 4545 
    p += 1;
    
#line 4545 
    lp->cache.gep = (int)*tmp_3;
    
#line 4546 
    tmp_4 = p;
    
#line 4546 
    p += 1;
    
#line 4546 
    csr6 = *tmp_4;
    
#line 4547 
    tmp_5 = p;
    
#line 4547 
    p += 1;
    
#line 4547 
    flags = *tmp_5;
    
#line 4549 
    if ((int)flags < 0) 
#line 4549 
                        lp->asBitValid = 0; else 
#line 4549 
                                                 lp->asBitValid = -1;
    
#line 4550 
    if (((int)flags & 64) != 0) 
#line 4550 
                                lp->defMedium = -1; else 
#line 4550 
                                                         lp->defMedium = 0;
    
#line 4551 
    lp->asBit = 1 << (((int)csr6 >> 1) & 7);
    
#line 4552 
    if ((int)csr6 < 0) 
#line 4552 
                       tmp_6 = -1; else 
#line 4552 
                                        tmp_6 = 0;
    
#line 4552 
    lp->asPolarity = tmp_6 & lp->asBit;
    
#line 4553 
    lp->infoblock_csr6 = (((int)csr6 << 18) & 29622272) | 33554432;
    
#line 4554 
    lp->useMII = (_Bool)0;
    
#line 4556 
    de4x5_switch_mac_port(dev);
  }
  else ;
  
#line 4559 
  tmp_7 = dc21140m_autoconf(dev);
  
#line 4559 
  __retres = tmp_7;
  return_label: 
#line 4559 
                return __retres;
}


#line 4566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int type0_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  u_char flags;
  u_char csr6;
  int tmp_7;
  
#line 4568 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4569 
  u_char len = (unsigned char)(((unsigned int)*p & 127U) + 1U);
  
#line 4572 
  count = (u_char)((int)count - 1);
  
#line 4572 
  ;
  
#line 4572 
  if ((int)count > lp->tcount) 
    
#line 4573 
    if ((int)*(p + (int)len) >= 0) {
      int tmp_0;
      
#line 4574 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4574 
      __retres = tmp_0;
      
#line 4574 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4576 
      tmp_1 = (*(dc_infoblock[(int)*(p + ((unsigned int)len + 1U))]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4576 
      __retres = tmp_1;
      
#line 4576 
      goto return_label;
    }
  else ;
  
#line 4580 
  if (lp->media == 512 && lp->timeout < 0) {
    u_char *tmp_2;
    u_char *tmp_3;
    u_char *tmp_4;
    u_char *tmp_5;
    int tmp_6;
    
#line 4581 
    lp->ibn = (unsigned char)0U;
    
#line 4582 
    lp->active = 0;
    
#line 4583 
    gep_wr(lp->cache.gepc,dev);
    
#line 4584 
    p += 2U;
    
#line 4585 
    tmp_2 = p;
    
#line 4585 
    p += 1;
    
#line 4585 
    lp->infoblock_media = (int)*tmp_2 & 63;
    
#line 4586 
    tmp_3 = p;
    
#line 4586 
    p += 1;
    
#line 4586 
    lp->cache.gep = (int)*tmp_3;
    
#line 4587 
    tmp_4 = p;
    
#line 4587 
    p += 1;
    
#line 4587 
    csr6 = *tmp_4;
    
#line 4588 
    tmp_5 = p;
    
#line 4588 
    p += 1;
    
#line 4588 
    flags = *tmp_5;
    
#line 4590 
    if ((int)flags < 0) 
#line 4590 
                        lp->asBitValid = 0; else 
#line 4590 
                                                 lp->asBitValid = -1;
    
#line 4591 
    if (((int)flags & 64) != 0) 
#line 4591 
                                lp->defMedium = -1; else 
#line 4591 
                                                         lp->defMedium = 0;
    
#line 4592 
    lp->asBit = 1 << (((int)csr6 >> 1) & 7);
    
#line 4593 
    if ((int)csr6 < 0) 
#line 4593 
                       tmp_6 = -1; else 
#line 4593 
                                        tmp_6 = 0;
    
#line 4593 
    lp->asPolarity = tmp_6 & lp->asBit;
    
#line 4594 
    lp->infoblock_csr6 = (((int)csr6 << 18) & 29622272) | 33554432;
    
#line 4595 
    lp->useMII = (_Bool)0;
    
#line 4597 
    de4x5_switch_mac_port(dev);
  }
  else ;
  
#line 4600 
  tmp_7 = dc21140m_autoconf(dev);
  
#line 4600 
  __retres = tmp_7;
  return_label: 
#line 4600 
                return __retres;
}


#line 4606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int type1_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  int tmp_7;
  
#line 4608 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4609 
  u_char len = (unsigned char)(((unsigned int)*p & 127U) + 1U);
  
#line 4612 
  count = (u_char)((int)count - 1);
  
#line 4612 
  ;
  
#line 4612 
  if ((int)count > lp->tcount) 
    
#line 4613 
    if ((int)*(p + (int)len) >= 0) {
      int tmp_0;
      
#line 4614 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4614 
      __retres = tmp_0;
      
#line 4614 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4616 
      tmp_1 = (*(dc_infoblock[(int)*(p + ((unsigned int)len + 1U))]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4616 
      __retres = tmp_1;
      
#line 4616 
      goto return_label;
    }
  else ;
  
#line 4620 
  p += 2U;
  
#line 4621 
  if (lp->state == 0) {
    u_char *tmp_2;
    u16 tmp_3;
    u16 tmp_4;
    u16 tmp_5;
    u16 tmp_6;
    
#line 4622 
    lp->ibn = (unsigned char)1U;
    
#line 4623 
    tmp_2 = p;
    
#line 4623 
    p += 1;
    
#line 4623 
    lp->active = (int)*tmp_2;
    
#line 4624 
    if ((unsigned int)*p != 0U) 
#line 4624 
                                lp->phy[lp->active].gep = p; else 
#line 4624 
                                                                  lp->phy[lp->active].gep = (u_char *)0U;
    
#line 4624 
    p += (unsigned int)*p + 1U;
    
#line 4625 
    if ((unsigned int)*p != 0U) 
#line 4625 
                                lp->phy[lp->active].rst = p; else 
#line 4625 
                                                                  lp->phy[lp->active].rst = (u_char *)0U;
    
#line 4625 
    p += (unsigned int)*p + 1U;
    
#line 4626 
    tmp_3 = get_unaligned_le16((void const *)p);
    
#line 4626 
    lp->phy[lp->active].mc = (unsigned int)tmp_3;
    
#line 4626 
    p += 2U;
    
#line 4627 
    tmp_4 = get_unaligned_le16((void const *)p);
    
#line 4627 
    lp->phy[lp->active].ana = (unsigned int)tmp_4;
    
#line 4627 
    p += 2U;
    
#line 4628 
    tmp_5 = get_unaligned_le16((void const *)p);
    
#line 4628 
    lp->phy[lp->active].fdx = (unsigned int)tmp_5;
    
#line 4628 
    p += 2U;
    
#line 4629 
    tmp_6 = get_unaligned_le16((void const *)p);
    
#line 4629 
    lp->phy[lp->active].ttm = (unsigned int)tmp_6;
    
#line 4630 
    __retres = 0;
    
#line 4630 
    goto return_label;
  }
  else 
    
#line 4631 
    if (lp->media == 512 && lp->timeout < 0) {
      
#line 4632 
      lp->ibn = (unsigned char)1U;
      
#line 4633 
      lp->active = (int)*p;
      
#line 4634 
      lp->infoblock_csr6 = 34340864;
      
#line 4635 
      lp->useMII = (_Bool)1;
      
#line 4636 
      lp->infoblock_media = 32;
      
#line 4638 
      de4x5_switch_mac_port(dev);
    }
    else ;
  
#line 4641 
  tmp_7 = dc21140m_autoconf(dev);
  
#line 4641 
  __retres = tmp_7;
  return_label: 
#line 4641 
                return __retres;
}


#line 4645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int type2_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  int tmp_8;
  
#line 4647 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4648 
  u_char len = (unsigned char)(((unsigned int)*p & 127U) + 1U);
  
#line 4651 
  count = (u_char)((int)count - 1);
  
#line 4651 
  ;
  
#line 4651 
  if ((int)count > lp->tcount) 
    
#line 4652 
    if ((int)*(p + (int)len) >= 0) {
      int tmp_0;
      
#line 4653 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4653 
      __retres = tmp_0;
      
#line 4653 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4655 
      tmp_1 = (*(dc_infoblock[(int)*(p + ((unsigned int)len + 1U))]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4655 
      __retres = tmp_1;
      
#line 4655 
      goto return_label;
    }
  else ;
  
#line 4659 
  if (lp->media == 512 && lp->timeout < 0) {
    u_char *tmp_5;
    u16 tmp_6;
    u16 tmp_7;
    
#line 4660 
    lp->ibn = (unsigned char)2U;
    
#line 4661 
    lp->active = 0;
    
#line 4662 
    p += 2U;
    
#line 4663 
    lp->infoblock_media = (int)*p & 63;
    
#line 4665 
    tmp_5 = p;
    
#line 4665 
    p += 1;
    
#line 4665 
    ;
    
#line 4665 
    if (((int)*tmp_5 & 64) != 0) {
      u16 tmp_2;
      u16 tmp_3;
      u16 tmp_4;
      
#line 4666 
      tmp_2 = get_unaligned_le16((void const *)p);
      
#line 4666 
      lp->cache.csr13 = (int)tmp_2;
      
#line 4666 
      p += 2U;
      
#line 4667 
      tmp_3 = get_unaligned_le16((void const *)p);
      
#line 4667 
      lp->cache.csr14 = (int)tmp_3;
      
#line 4667 
      p += 2U;
      
#line 4668 
      tmp_4 = get_unaligned_le16((void const *)p);
      
#line 4668 
      lp->cache.csr15 = (int)tmp_4;
      
#line 4668 
      p += 2U;
    }
    else {
      
#line 4670 
      lp->cache.csr13 = 1;
      
#line 4671 
      lp->cache.csr14 = 262015;
      
#line 4672 
      lp->cache.csr15 = 8;
    }
    
#line 4674 
    tmp_6 = get_unaligned_le16((void const *)p);
    
#line 4674 
    lp->cache.gepc = (int)tmp_6 << 16;
    
#line 4674 
    p += 2U;
    
#line 4675 
    tmp_7 = get_unaligned_le16((void const *)p);
    
#line 4675 
    lp->cache.gep = (int)tmp_7 << 16;
    
#line 4676 
    lp->infoblock_csr6 = 37748736;
    
#line 4677 
    lp->useMII = (_Bool)0;
    
#line 4679 
    de4x5_switch_mac_port(dev);
  }
  else ;
  
#line 4682 
  tmp_8 = dc2114x_autoconf(dev);
  
#line 4682 
  __retres = tmp_8;
  return_label: 
#line 4682 
                return __retres;
}


#line 4686  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int type3_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  int tmp_9;
  
#line 4688 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4689 
  u_char len = (unsigned char)(((unsigned int)*p & 127U) + 1U);
  
#line 4692 
  count = (u_char)((int)count - 1);
  
#line 4692 
  ;
  
#line 4692 
  if ((int)count > lp->tcount) 
    
#line 4693 
    if ((int)*(p + (int)len) >= 0) {
      int tmp_0;
      
#line 4694 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4694 
      __retres = tmp_0;
      
#line 4694 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4696 
      tmp_1 = (*(dc_infoblock[(int)*(p + ((unsigned int)len + 1U))]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4696 
      __retres = tmp_1;
      
#line 4696 
      goto return_label;
    }
  else ;
  
#line 4700 
  p += 2U;
  
#line 4701 
  if (lp->state == 0) {
    u_char *tmp_2;
    u16 tmp_4;
    u16 tmp_5;
    u16 tmp_6;
    u16 tmp_7;
    
#line 4702 
    lp->ibn = (unsigned char)3U;
    
#line 4703 
    tmp_2 = p;
    
#line 4703 
    p += 1;
    
#line 4703 
    lp->active = (int)*tmp_2;
    
#line 4704 
    if (lp->active == 8) {
      u32 tmp_3;
      
#line 4704 
      tmp_3 = get_unaligned_le32((void const *)dev->dev_addr);
      
#line 4704 
      if ((tmp_3 & 16777215U) == 4063240U) 
#line 4704 
                                           lp->active = 0; else ;
    }
    else ;
    
#line 4705 
    if ((unsigned int)*p != 0U) 
#line 4705 
                                lp->phy[lp->active].gep = p; else 
#line 4705 
                                                                  lp->phy[lp->active].gep = (u_char *)0U;
    
#line 4705 
    p += (unsigned int)((int)*p * 2) + 1U;
    
#line 4706 
    if ((unsigned int)*p != 0U) 
#line 4706 
                                lp->phy[lp->active].rst = p; else 
#line 4706 
                                                                  lp->phy[lp->active].rst = (u_char *)0U;
    
#line 4706 
    p += (unsigned int)((int)*p * 2) + 1U;
    
#line 4707 
    tmp_4 = get_unaligned_le16((void const *)p);
    
#line 4707 
    lp->phy[lp->active].mc = (unsigned int)tmp_4;
    
#line 4707 
    p += 2U;
    
#line 4708 
    tmp_5 = get_unaligned_le16((void const *)p);
    
#line 4708 
    lp->phy[lp->active].ana = (unsigned int)tmp_5;
    
#line 4708 
    p += 2U;
    
#line 4709 
    tmp_6 = get_unaligned_le16((void const *)p);
    
#line 4709 
    lp->phy[lp->active].fdx = (unsigned int)tmp_6;
    
#line 4709 
    p += 2U;
    
#line 4710 
    tmp_7 = get_unaligned_le16((void const *)p);
    
#line 4710 
    lp->phy[lp->active].ttm = (unsigned int)tmp_7;
    
#line 4710 
    p += 2U;
    
#line 4711 
    lp->phy[lp->active].mci = (unsigned int)*p;
    
#line 4712 
    __retres = 0;
    
#line 4712 
    goto return_label;
  }
  else 
    
#line 4713 
    if (lp->media == 512 && lp->timeout < 0) {
      
#line 4714 
      lp->ibn = (unsigned char)3U;
      
#line 4715 
      lp->active = (int)*p;
      
#line 4716 
      if (lp->active == 8) {
        u32 tmp_8;
        
#line 4716 
        tmp_8 = get_unaligned_le32((void const *)dev->dev_addr);
        
#line 4716 
        if ((tmp_8 & 16777215U) == 4063240U) 
#line 4716 
                                             lp->active = 0; else ;
      }
      else ;
      
#line 4717 
      lp->infoblock_csr6 = 34340864;
      
#line 4718 
      lp->useMII = (_Bool)1;
      
#line 4719 
      lp->infoblock_media = 32;
      
#line 4721 
      de4x5_switch_mac_port(dev);
    }
    else ;
  
#line 4724 
  tmp_9 = dc2114x_autoconf(dev);
  
#line 4724 
  __retres = tmp_9;
  return_label: 
#line 4724 
                return __retres;
}


#line 4728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int type4_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  u_char flags;
  u_char csr6;
  int tmp_8;
  
#line 4730 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4731 
  u_char len = (unsigned char)(((unsigned int)*p & 127U) + 1U);
  
#line 4734 
  count = (u_char)((int)count - 1);
  
#line 4734 
  ;
  
#line 4734 
  if ((int)count > lp->tcount) 
    
#line 4735 
    if ((int)*(p + (int)len) >= 0) {
      int tmp_0;
      
#line 4736 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4736 
      __retres = tmp_0;
      
#line 4736 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4738 
      tmp_1 = (*(dc_infoblock[(int)*(p + ((unsigned int)len + 1U))]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4738 
      __retres = tmp_1;
      
#line 4738 
      goto return_label;
    }
  else ;
  
#line 4742 
  if (lp->media == 512 && lp->timeout < 0) {
    u_char *tmp_2;
    u16 tmp_3;
    u16 tmp_4;
    u_char *tmp_5;
    u_char *tmp_6;
    int tmp_7;
    
#line 4743 
    lp->ibn = (unsigned char)4U;
    
#line 4744 
    lp->active = 0;
    
#line 4745 
    p += 2U;
    
#line 4746 
    tmp_2 = p;
    
#line 4746 
    p += 1;
    
#line 4746 
    lp->infoblock_media = (int)*tmp_2 & 63;
    
#line 4747 
    lp->cache.csr13 = 1;
    
#line 4748 
    lp->cache.csr14 = 262015;
    
#line 4749 
    lp->cache.csr15 = 8;
    
#line 4750 
    tmp_3 = get_unaligned_le16((void const *)p);
    
#line 4750 
    lp->cache.gepc = (int)tmp_3 << 16;
    
#line 4750 
    p += 2U;
    
#line 4751 
    tmp_4 = get_unaligned_le16((void const *)p);
    
#line 4751 
    lp->cache.gep = (int)tmp_4 << 16;
    
#line 4751 
    p += 2U;
    
#line 4752 
    tmp_5 = p;
    
#line 4752 
    p += 1;
    
#line 4752 
    csr6 = *tmp_5;
    
#line 4753 
    tmp_6 = p;
    
#line 4753 
    p += 1;
    
#line 4753 
    flags = *tmp_6;
    
#line 4755 
    if ((int)flags < 0) 
#line 4755 
                        lp->asBitValid = 0; else 
#line 4755 
                                                 lp->asBitValid = -1;
    
#line 4756 
    if (((int)flags & 64) != 0) 
#line 4756 
                                lp->defMedium = -1; else 
#line 4756 
                                                         lp->defMedium = 0;
    
#line 4757 
    lp->asBit = 1 << (((int)csr6 >> 1) & 7);
    
#line 4758 
    if ((int)csr6 < 0) 
#line 4758 
                       tmp_7 = -1; else 
#line 4758 
                                        tmp_7 = 0;
    
#line 4758 
    lp->asPolarity = tmp_7 & lp->asBit;
    
#line 4759 
    lp->infoblock_csr6 = (((int)csr6 << 18) & 29622272) | 33554432;
    
#line 4760 
    lp->useMII = (_Bool)0;
    
#line 4762 
    de4x5_switch_mac_port(dev);
  }
  else ;
  
#line 4765 
  tmp_8 = dc2114x_autoconf(dev);
  
#line 4765 
  __retres = tmp_8;
  return_label: 
#line 4765 
                return __retres;
}


#line 4773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int type5_infoblock(struct net_device *dev, u_char count, u_char *p)
{
  int __retres;
  
#line 4775 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4776 
  u_char len = (unsigned char)(((unsigned int)*p & 127U) + 1U);
  
#line 4779 
  count = (u_char)((int)count - 1);
  
#line 4779 
  ;
  
#line 4779 
  if ((int)count > lp->tcount) 
    
#line 4780 
    if ((int)*(p + (int)len) >= 0) {
      int tmp_0;
      
#line 4781 
      tmp_0 = (*(dc_infoblock[6UL]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4781 
      __retres = tmp_0;
      
#line 4781 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 4783 
      tmp_1 = (*(dc_infoblock[(int)*(p + ((unsigned int)len + 1U))]))(dev,(unsigned char)((int)count),p + (int)len);
      
#line 4783 
      __retres = tmp_1;
      
#line 4783 
      goto return_label;
    }
  else ;
  
#line 4788 
  if (lp->state == 0 || lp->media == 512) {
    
#line 4789 
    p += 2U;
    
#line 4790 
    lp->rst = p;
    
#line 4791 
    srom_exec(dev,lp->rst);
  }
  else ;
  
#line 4794 
  __retres = 250;
  return_label: 
#line 4794 
                return __retres;
}


#line 4802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int mii_rd(u_char phyreg, u_char phyaddr, u_long ioaddr)
{
  int tmp;
  
#line 4804 
  mii_wdata(-1,2,ioaddr);
  
#line 4805 
  mii_wdata(-1,32,ioaddr);
  
#line 4806 
  mii_wdata(6,4,ioaddr);
  
#line 4807 
  mii_address((unsigned char)((int)phyaddr),ioaddr);
  
#line 4808 
  mii_address((unsigned char)((int)phyreg),ioaddr);
  
#line 4809 
  mii_ta(6UL,ioaddr);
  
#line 4811 
  tmp = mii_rdata(ioaddr);
  
#line 4811 
  return tmp;
}


#line 4815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void mii_wr(int data, u_char phyreg, u_char phyaddr, u_long ioaddr)
{
  
#line 4817 
  mii_wdata(-1,2,ioaddr);
  
#line 4818 
  mii_wdata(-1,32,ioaddr);
  
#line 4819 
  mii_wdata(10,4,ioaddr);
  
#line 4820 
  mii_address((unsigned char)((int)phyaddr),ioaddr);
  
#line 4821 
  mii_address((unsigned char)((int)phyreg),ioaddr);
  
#line 4822 
  mii_ta(10UL,ioaddr);
  
#line 4823 
  data = mii_swap(data,16);
  
#line 4824 
  mii_wdata(data,16,ioaddr);
  
#line 4825 
  return;
}


#line 4828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int mii_rdata(u_long ioaddr)
{
  int i;
  int tmp_0;
  
#line 4831 
  s32 tmp = 0;
  
#line 4833 
  i = 0;
  
#line 4833 
  goto ldv_48047;
  ldv_48046: 
#line 4834 
  ;
  
#line 4834 
  tmp <<= 1;
  
#line 4835 
  tmp_0 = getfrom_mii(278528U,ioaddr);
  
#line 4835 
  tmp = tmp_0 | tmp;
  
#line 4833 
  i += 1;
  ldv_48047: 
#line 4834 
  ;
  
#line 4833 
  if (i <= 15) 
#line 4835 
               goto ldv_48046; else 
#line 4838 
                                    goto ldv_48048;
  ldv_48048: 
#line 4839 
  ;
  
#line 4838 
  return tmp;
}


#line 4842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void mii_wdata(int data, int len, u_long ioaddr)
{
  int i;
  
#line 4846 
  i = 0;
  
#line 4846 
  goto ldv_48056;
  ldv_48055: 
#line 4847 
  ;
  
#line 4847 
  sendto_mii(8192U,data,ioaddr);
  
#line 4848 
  data >>= 1;
  
#line 4846 
  i += 1;
  ldv_48056: 
#line 4847 
  ;
  
#line 4846 
  if (i < len) 
#line 4848 
               goto ldv_48055; else 
#line 4851 
                                    goto ldv_48057;
  ldv_48057: 
#line 4852 
  ;
  
#line 4853 
  return;
}


#line 4853  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void mii_address(u_char addr, u_long ioaddr)
{
  int i;
  int tmp;
  
#line 4857 
  tmp = mii_swap((int)addr,5);
  
#line 4857 
  addr = (unsigned char)tmp;
  
#line 4858 
  i = 0;
  
#line 4858 
  goto ldv_48064;
  ldv_48063: 
#line 4859 
  ;
  
#line 4859 
  sendto_mii(8192U,(int)addr,ioaddr);
  
#line 4860 
  addr = (unsigned char)((int)addr >> 1);
  
#line 4858 
  i += 1;
  ldv_48064: 
#line 4859 
  ;
  
#line 4858 
  if (i <= 4) 
#line 4860 
              goto ldv_48063; else 
#line 4863 
                                   goto ldv_48065;
  ldv_48065: 
#line 4864 
  ;
  
#line 4865 
  return;
}


#line 4865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void mii_ta(u_long rw, u_long ioaddr)
{
  
#line 4867 
  if (rw == 10UL) {
    
#line 4868 
    sendto_mii(8192U,1,ioaddr);
    
#line 4869 
    sendto_mii(8192U,0,ioaddr);
  }
  else 
#line 4871 
       getfrom_mii(278528U,ioaddr);
  
#line 4872 
  return;
}


#line 4876  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int mii_swap(int data, int len)
{
  int i;
  
#line 4878 
  int tmp = 0;
  
#line 4880 
  i = 0;
  
#line 4880 
  goto ldv_48077;
  ldv_48076: 
#line 4881 
  ;
  
#line 4881 
  tmp <<= 1;
  
#line 4882 
  tmp = (data & 1) | tmp;
  
#line 4883 
  data >>= 1;
  
#line 4880 
  i += 1;
  ldv_48077: 
#line 4881 
  ;
  
#line 4880 
  if (i < len) 
#line 4882 
               goto ldv_48076; else 
#line 4885 
                                    goto ldv_48078;
  ldv_48078: 
#line 4886 
  ;
  
#line 4886 
  return tmp;
}


#line 4890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void sendto_mii(u32 command, int data, u_long ioaddr)
{
  u32 j;
  
#line 4894 
  j = (unsigned int)(data << 17) & 131072U;
  
#line 4895 
  outl(command | j,(int)ioaddr);
  
#line 4896 
  __const_udelay(4295UL);
  
#line 4897 
  outl((command | j) | 65536U,(int)ioaddr);
  
#line 4898 
  __const_udelay(4295UL);
  
#line 4900 
  return;
}


#line 4902  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int getfrom_mii(u32 command, u_long ioaddr)
{
  int __retres;
  unsigned int tmp;
  
#line 4904 
  outl(command,(int)ioaddr);
  
#line 4905 
  __const_udelay(4295UL);
  
#line 4906 
  outl(command | 65536U,(int)ioaddr);
  
#line 4907 
  __const_udelay(4295UL);
  
#line 4909 
  tmp = inl((int)ioaddr);
  
#line 4909 
  __retres = (int)(tmp >> 19) & 1;
  
#line 4909 
  return __retres;
}


#line 4916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int mii_get_oui(u_char phyaddr, u_long ioaddr)
{
  int r2;
  int r3;
  
#line 4927 
  r2 = mii_rd((unsigned char)2,(unsigned char)((int)phyaddr),ioaddr);
  
#line 4928 
  r3 = mii_rd((unsigned char)3,(unsigned char)((int)phyaddr),ioaddr);
  
#line 4956 
  return r2;
}


#line 4963  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int mii_get_phy(struct net_device *dev)
{
  int __retres;
  int i;
  int j;
  int k;
  int n;
  int id;
  int tmp_0;
  
#line 4965 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 4966 
  u_long iobase = dev->base_addr;
  
#line 4967 
  int limit = 5;
  
#line 4970 
  lp->active = 0;
  
#line 4971 
  lp->useMII = (_Bool)1;
  
#line 4974 
  n = 0;
  
#line 4974 
  lp->mii_cnt = 0;
  
#line 4974 
  i = 1;
  
#line 4974 
  goto ldv_48125;
  ldv_48124: 
#line 4975 
  ;
  
#line 4975 
  lp->phy[lp->active].addr = i;
  
#line 4976 
  if (i == 0) 
#line 4976 
              n += 1; else ;
  
#line 4977 
  goto ldv_48110;
  ldv_48109: 
#line 4978 
  ;
  
#line 4977 
  __const_udelay(429500UL);
  ldv_48110: 
#line 4979 
  ;
  
#line 4977 
  tmp_0 = de4x5_reset_phy(dev);
  
#line 4977 
  if (tmp_0 < 0) 
#line 4979 
                 goto ldv_48109; else 
#line 4982 
                                      goto ldv_48111;
  ldv_48111: 
#line 4983 
  ;
  
#line 4978 
  id = mii_get_oui((unsigned char)((int)((unsigned char)i)),(unsigned long)(72 << lp->bus) + iobase);
  
#line 4979 
  if (id == 0 || id == 65535) 
#line 4979 
                              goto ldv_48112; else ;
  
#line 4980 
  j = 0;
  
#line 4980 
  goto ldv_48120;
  ldv_48119: 
#line 4981 
  ;
  
#line 4981 
  if (phy_info[j].id != id) 
#line 4981 
                            goto ldv_48113; else ;
  
#line 4982 
  k = 0;
  
#line 4982 
  goto ldv_48115;
  ldv_48114: 
#line 4983 
  ;
  
#line 4982 
  k += 1;
  ldv_48115: 
#line 4983 
  ;
  
#line 4982 
  if (k <= 7 && lp->phy[k].id != 0) 
#line 4984 
                                    goto ldv_48114; else 
#line 4987 
                                                         goto ldv_48116;
  ldv_48116: 
#line 4988 
  ;
  
#line 4983 
  if (k <= 7) {
    
#line 4984 
    memcpy((void *)(& lp->phy[k]),(void const *)(& phy_info[j]),24UL);
    
#line 4986 
    lp->phy[k].addr = i;
    
#line 4987 
    lp->mii_cnt += 1;
    
#line 4988 
    lp->active += 1;
  }
  else 
#line 4990 
       goto purgatory;
  
#line 4992 
  goto ldv_48118;
  ldv_48113: 
#line 4993 
  ;
  
#line 4980 
  j += 1;
  ldv_48120: 
#line 4981 
  ;
  
#line 4980 
  if (j < limit) 
#line 4982 
                 goto ldv_48119; else 
#line 4985 
                                      goto ldv_48118;
  ldv_48118: 
#line 4986 
  ;
  
#line 4994 
  if (j == limit && i <= 31) {
    
#line 4995 
    k = 0;
    
#line 4995 
    goto ldv_48122;
    ldv_48121: 
#line 4996 
    ;
    
#line 4995 
    k += 1;
    ldv_48122: 
#line 4996 
    ;
    
#line 4995 
    if (k <= 7 && lp->phy[k].id != 0) 
#line 4997 
                                      goto ldv_48121; else 
#line 5000 
                                                           goto ldv_48123;
    ldv_48123: 
#line 5001 
    ;
    
#line 4996 
    lp->phy[k].addr = i;
    
#line 4997 
    lp->phy[k].id = id;
    
#line 4998 
    lp->phy[k].spd.reg = 5;
    
#line 4999 
    lp->phy[k].spd.mask = 896;
    
#line 5000 
    lp->phy[k].spd.value = 896;
    
#line 5001 
    lp->mii_cnt += 1;
    
#line 5002 
    lp->active += 1;
    
#line 5003 
    printk("%s: Using generic MII device control. If the board doesn\'t operate,\nplease mail the following dump to the author:\n",(char *)(& dev->name));
    
#line 5004 
    j = de4x5_debug;
    
#line 5005 
    de4x5_debug |= 32;
    
#line 5006 
    de4x5_dbg_mii(dev,k);
    
#line 5007 
    de4x5_debug = j;
    
#line 5008 
    printk("\n");
  }
  else ;
  ldv_48112: 
#line 5010 
  ;
  
#line 4974 
  i = (i + 1) % 32;
  ldv_48125: 
#line 4975 
  ;
  
#line 4974 
  if (i != 1 || n != 1) 
#line 4976 
                        goto ldv_48124; else 
#line 4979 
                                             goto ldv_48126;
  ldv_48126: 
#line 4980 
  ;
  purgatory: 
#line 5011 
  ;
  
#line 5012 
  lp->active = 0;
  
#line 5013 
  if (lp->phy[0].id != 0) {
    int tmp_1;
    
#line 5014 
    k = 0;
    
#line 5014 
    goto ldv_48131;
    ldv_48130: 
#line 5015 
    ;
    
#line 5015 
    mii_wr(32768,(unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5016 
    goto ldv_48128;
    ldv_48127: 
#line 5017 
    ;
    ldv_48128: 
#line 5018 
    ;
    
#line 5016 
    tmp_1 = mii_rd((unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5016 
    if ((tmp_1 & 32768) != 0) 
#line 5018 
                              goto ldv_48127; else 
#line 5021 
                                                   goto ldv_48129;
    ldv_48129: 
#line 5022 
    ;
    
#line 5018 
    de4x5_dbg_mii(dev,k);
    
#line 5014 
    k += 1;
    ldv_48131: 
#line 5015 
    ;
    
#line 5014 
    if (k <= 7 && lp->phy[k].id != 0) 
#line 5016 
                                      goto ldv_48130; else 
#line 5019 
                                                           goto ldv_48132;
    ldv_48132: 
#line 5020 
    ;
  }
  else ;
  
#line 5021 
  if (lp->mii_cnt == 0) 
#line 5021 
                        lp->useMII = (_Bool)0; else ;
  
#line 5023 
  __retres = lp->mii_cnt;
  
#line 5023 
  return __retres;
}


#line 5027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static char *build_setup_frame(struct net_device *dev, int mode)
{
  int i;
  
#line 5029 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5031 
  char *pa = (char *)(& lp->setup_frame);
  
#line 5034 
  if (mode == 0) 
#line 5035 
                 memset((void *)(& lp->setup_frame),0,192UL); else ;
  
#line 5038 
  if (lp->setup_f == 1) {
    
#line 5039 
    pa = (char *)(& lp->setup_frame) + 156U;
    
#line 5039 
    i = 0;
    
#line 5039 
    goto ldv_48141;
    ldv_48140: 
#line 5040 
    ;
    
#line 5040 
    *(pa + i) = (char)*(dev->dev_addr + i);
    
#line 5041 
    if ((i & 1) != 0) 
#line 5041 
                      pa += 2U; else ;
    
#line 5039 
    i += 1;
    ldv_48141: 
#line 5040 
    ;
    
#line 5039 
    if (i <= 5) 
#line 5041 
                goto ldv_48140; else 
#line 5044 
                                     goto ldv_48142;
    ldv_48142: 
#line 5045 
    ;
    
#line 5043 
    *((char *)(& lp->setup_frame) + 61U) = (char)(-128);
  }
  else {
    
#line 5045 
    i = 0;
    
#line 5045 
    goto ldv_48144;
    ldv_48143: 
#line 5046 
    ;
    
#line 5046 
    *(pa + ((unsigned int)i & 1U)) = (char)*(dev->dev_addr + i);
    
#line 5047 
    if ((i & 1) != 0) 
#line 5047 
                      pa += 4U; else ;
    
#line 5045 
    i += 1;
    ldv_48144: 
#line 5046 
    ;
    
#line 5045 
    if (i <= 5) 
#line 5047 
                goto ldv_48143; else 
#line 5050 
                                     goto ldv_48145;
    ldv_48145: 
#line 5051 
    ;
    
#line 5049 
    i = 0;
    
#line 5049 
    goto ldv_48147;
    ldv_48146: 
#line 5050 
    ;
    
#line 5050 
    *(pa + ((unsigned int)i & 1U)) = (char)(-1);
    
#line 5051 
    if ((i & 1) != 0) 
#line 5051 
                      pa += 4U; else ;
    
#line 5049 
    i += 1;
    ldv_48147: 
#line 5050 
    ;
    
#line 5049 
    if (i <= 5) 
#line 5051 
                goto ldv_48146; else 
#line 5054 
                                     goto ldv_48148;
    ldv_48148: 
#line 5055 
    ;
  }
  
#line 5055 
  return pa;
}


#line 5059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void disable_ast(struct net_device *dev)
{
  
#line 5061 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5062 
  ldv_del_timer_sync_92(& lp->timer);
  
#line 5063 
  return;
}


#line 5066  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static long de4x5_switch_mac_port(struct net_device *dev)
{
  long __retres;
  s32 omr;
  unsigned int tmp_0;
  unsigned int tmp_1;
  
#line 5068 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5069 
  u_long iobase = dev->base_addr;
  
#line 5072 
  tmp_0 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 5072 
  omr = (int)tmp_0;
  
#line 5072 
  omr &= -8195;
  
#line 5072 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 5075 
  tmp_1 = inl((int)((u_long)(48 << lp->bus) + iobase));
  
#line 5075 
  omr = (int)tmp_1 & -30147073;
  
#line 5077 
  omr = lp->infoblock_csr6 | omr;
  
#line 5078 
  if ((omr & 262144) != 0) 
#line 5078 
                           omr |= 524288; else ;
  
#line 5079 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  {
    int i;
    unsigned int tmp_2;
    
#line 5082 
    tmp_2 = inl((int)iobase);
    
#line 5082 
    i = (int)tmp_2;
    
#line 5082 
    if (1) 
#line 5082 
           __const_udelay(4295000UL);
    else {
      
#line 5082 
      unsigned long __ms = 1UL;
      {
        unsigned long tmp_3;
        
#line 5082 
        goto ldv_48162;
        ldv_48161: 
#line 5083 
        ;
        
#line 5082 
        __const_udelay(4295000UL);
        ldv_48162: 
#line 5084 
        ;
        
#line 5082 
        tmp_3 = __ms;
        
#line 5082 
        __ms -= 1UL;
        
#line 5082 
        ;
        
#line 5082 
        if (tmp_3 != 0UL) 
#line 5084 
                          goto ldv_48161; else 
#line 5087 
                                               goto ldv_48163;
        ldv_48163: 
#line 5088 
        ;
      }
    }
    
#line 5082 
    outl((unsigned int)(i | 1),(int)iobase);
    
#line 5082 
    if (1) 
#line 5082 
           __const_udelay(4295000UL);
    else {
      
#line 5082 
      unsigned long __ms_0 = 1UL;
      {
        unsigned long tmp_4;
        
#line 5082 
        goto ldv_48166;
        ldv_48165: 
#line 5083 
        ;
        
#line 5082 
        __const_udelay(4295000UL);
        ldv_48166: 
#line 5084 
        ;
        
#line 5082 
        tmp_4 = __ms_0;
        
#line 5082 
        __ms_0 -= 1UL;
        
#line 5082 
        ;
        
#line 5082 
        if (tmp_4 != 0UL) 
#line 5084 
                          goto ldv_48165; else 
#line 5087 
                                               goto ldv_48167;
        ldv_48167: 
#line 5088 
        ;
      }
    }
    
#line 5082 
    outl((unsigned int)i,(int)iobase);
    
#line 5082 
    if (1) 
#line 5082 
           __const_udelay(4295000UL);
    else {
      
#line 5082 
      unsigned long __ms_1 = 1UL;
      {
        unsigned long tmp_5;
        
#line 5082 
        goto ldv_48170;
        ldv_48169: 
#line 5083 
        ;
        
#line 5082 
        __const_udelay(4295000UL);
        ldv_48170: 
#line 5084 
        ;
        
#line 5082 
        tmp_5 = __ms_1;
        
#line 5082 
        __ms_1 -= 1UL;
        
#line 5082 
        ;
        
#line 5082 
        if (tmp_5 != 0UL) 
#line 5084 
                          goto ldv_48169; else 
#line 5087 
                                               goto ldv_48171;
        ldv_48171: 
#line 5088 
        ;
      }
    }
    
#line 5082 
    i = 0;
    
#line 5082 
    goto ldv_48177;
    ldv_48176: 
#line 5083 
    ;
    
#line 5082 
    inl((int)iobase);
    
#line 5082 
    if (1) 
#line 5082 
           __const_udelay(4295000UL);
    else {
      
#line 5082 
      unsigned long __ms_2 = 1UL;
      {
        unsigned long tmp_6;
        
#line 5082 
        goto ldv_48174;
        ldv_48173: 
#line 5083 
        ;
        
#line 5082 
        __const_udelay(4295000UL);
        ldv_48174: 
#line 5084 
        ;
        
#line 5082 
        tmp_6 = __ms_2;
        
#line 5082 
        __ms_2 -= 1UL;
        
#line 5082 
        ;
        
#line 5082 
        if (tmp_6 != 0UL) 
#line 5084 
                          goto ldv_48173; else 
#line 5087 
                                               goto ldv_48175;
        ldv_48175: 
#line 5088 
        ;
      }
    }
    
#line 5082 
    i += 1;
    ldv_48177: 
#line 5083 
    ;
    
#line 5082 
    if (i <= 4) 
#line 5084 
                goto ldv_48176; else 
#line 5087 
                                     goto ldv_48178;
    ldv_48178: 
#line 5088 
    ;
    
#line 5082 
    if (1) 
#line 5082 
           __const_udelay(4295000UL);
    else {
      
#line 5082 
      unsigned long __ms_3 = 1UL;
      {
        unsigned long tmp_7;
        
#line 5082 
        goto ldv_48181;
        ldv_48180: 
#line 5083 
        ;
        
#line 5082 
        __const_udelay(4295000UL);
        ldv_48181: 
#line 5084 
        ;
        
#line 5082 
        tmp_7 = __ms_3;
        
#line 5082 
        __ms_3 -= 1UL;
        
#line 5082 
        ;
        
#line 5082 
        if (tmp_7 != 0UL) 
#line 5084 
                          goto ldv_48180; else 
#line 5087 
                                               goto ldv_48182;
        ldv_48182: 
#line 5088 
        ;
      }
    }
  }
  
#line 5085 
  if (lp->chipset == 2304) {
    
#line 5086 
    gep_wr(lp->cache.gepc,dev);
    
#line 5087 
    gep_wr(lp->cache.gep,dev);
  }
  else 
    
#line 5088 
    if ((lp->chipset & -256) == 6400) 
#line 5089 
                                      reset_init_sia(dev,lp->cache.csr13,lp->cache.csr14,lp->cache.csr15); else ;
  
#line 5093 
  outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
  
#line 5096 
  inl((int)((u_long)(64 << lp->bus) + iobase));
  
#line 5098 
  __retres = (long)omr;
  
#line 5098 
  return __retres;
}


#line 5102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void gep_wr(s32 data, struct net_device *dev)
{
  
#line 5104 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5105 
  u_long iobase = dev->base_addr;
  
#line 5107 
  if (lp->chipset == 2304) 
#line 5108 
                           outl((unsigned int)data,(int)((u_long)(96 << lp->bus) + iobase));
  else 
    
#line 5109 
    if ((lp->chipset & -256) == 6400) 
#line 5110 
                                      outl((unsigned int)((data << 16) | lp->cache.csr15),(int)((u_long)(120 << lp->bus) + iobase)); else ;
  
#line 5111 
  return;
}


#line 5115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int gep_rd(struct net_device *dev)
{
  int __retres;
  
#line 5117 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5118 
  u_long iobase = dev->base_addr;
  
#line 5120 
  if (lp->chipset == 2304) {
    unsigned int tmp_0;
    
#line 5121 
    tmp_0 = inl((int)((u_long)(96 << lp->bus) + iobase));
    
#line 5121 
    __retres = (int)tmp_0;
    
#line 5121 
    goto return_label;
  }
  else 
    
#line 5122 
    if ((lp->chipset & -256) == 6400) {
      unsigned int tmp_1;
      
#line 5123 
      tmp_1 = inl((int)((u_long)(120 << lp->bus) + iobase));
      
#line 5123 
      __retres = (int)tmp_1 & 1048575;
      
#line 5123 
      goto return_label;
    }
    else ;
  
#line 5126 
  __retres = 0;
  return_label: 
#line 5126 
                return __retres;
}


#line 5130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void yawn(struct net_device *dev, int state)
{
  
#line 5132 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5133 
  u_long iobase = dev->base_addr;
  
#line 5135 
  if (lp->chipset == 512 || lp->chipset == 2304) 
#line 5135 
                                                 goto return_label; else ;
  
#line 5137 
  if (lp->bus == 1) {
    
#line 5138 
    switch (state) {
      case 0: 
#line 5139 
      ;
      
#line 5140 
      outb((unsigned char)0,(int)(iobase + (u_long)67U));
      {
        
#line 5141 
        unsigned long __ms = 10UL;
        {
          unsigned long tmp_0;
          
#line 5141 
          goto ldv_48203;
          ldv_48202: 
#line 5142 
          ;
          
#line 5141 
          __const_udelay(4295000UL);
          ldv_48203: 
#line 5143 
          ;
          
#line 5141 
          tmp_0 = __ms;
          
#line 5141 
          __ms -= 1UL;
          
#line 5141 
          ;
          
#line 5141 
          if (tmp_0 != 0UL) 
#line 5143 
                            goto ldv_48202; else 
#line 5146 
                                                 goto ldv_48204;
          ldv_48204: 
#line 5147 
          ;
        }
      }
      
#line 5142 
      goto ldv_48205;
      case 64: 
#line 5144 
      ;
      
#line 5145 
      outb((unsigned char)64,(int)(iobase + (u_long)67U));
      
#line 5146 
      goto ldv_48205;
      case 128: 
#line 5148 
      ;
      
#line 5149 
      outl(0U,(int)((u_long)(104 << lp->bus) + iobase));
      
#line 5150 
      outb((unsigned char)128,(int)(iobase + (u_long)67U));
      
#line 5151 
      goto ldv_48205;
    }
    ldv_48205: 
#line 5153 
    ;
  }
  else {
    struct pci_dev *tmp_1;
    {
      
#line 5154 
      struct device const *__mptr = (struct device const *)lp->gendev;
      
#line 5154 
      tmp_1 = (struct pci_dev *)__mptr + 18446744073709551464U;
    }
    
#line 5154 
    struct pci_dev *pdev = tmp_1;
    
#line 5155 
    switch (state) {
      case 0: 
#line 5156 
      ;
      
#line 5157 
      pci_write_config_byte((struct pci_dev const *)pdev,67,(unsigned char)0);
      {
        
#line 5158 
        unsigned long __ms_0 = 10UL;
        {
          unsigned long tmp_2;
          
#line 5158 
          goto ldv_48214;
          ldv_48213: 
#line 5159 
          ;
          
#line 5158 
          __const_udelay(4295000UL);
          ldv_48214: 
#line 5160 
          ;
          
#line 5158 
          tmp_2 = __ms_0;
          
#line 5158 
          __ms_0 -= 1UL;
          
#line 5158 
          ;
          
#line 5158 
          if (tmp_2 != 0UL) 
#line 5160 
                            goto ldv_48213; else 
#line 5163 
                                                 goto ldv_48215;
          ldv_48215: 
#line 5164 
          ;
        }
      }
      
#line 5159 
      goto ldv_48216;
      case 64: 
#line 5161 
      ;
      
#line 5162 
      pci_write_config_byte((struct pci_dev const *)pdev,67,(unsigned char)64);
      
#line 5163 
      goto ldv_48216;
      case 128: 
#line 5165 
      ;
      
#line 5166 
      outl(0U,(int)((u_long)(104 << lp->bus) + iobase));
      
#line 5167 
      pci_write_config_byte((struct pci_dev const *)pdev,67,(unsigned char)128);
      
#line 5168 
      goto ldv_48216;
    }
    ldv_48216: 
#line 5170 
    ;
  }
  return_label: 
#line 5172 
                return;
}


#line 5174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_parse_params(struct net_device *dev)
{
  char *p;
  char *q;
  char t;
  
#line 5176 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5179 
  lp->params.fdx = (_Bool)0;
  
#line 5180 
  lp->params.autosense = 16384;
  
#line 5182 
  if (args == (char *)0) 
#line 5182 
                         goto return_label; else ;
  
#line 5184 
  p = strstr((char const *)args,(char const *)(& dev->name));
  
#line 5184 
  if (p != (char *)0) {
    size_t tmp_1;
    char *tmp_2;
    char *tmp_12;
    
#line 5185 
    tmp_1 = strlen((char const *)(& dev->name));
    
#line 5185 
    ;
    
#line 5185 
    q = strstr((char const *)(p + tmp_1),"eth");
    
#line 5185 
    if (q == (char *)0) {
      size_t tmp_0;
      
#line 5185 
      tmp_0 = strlen((char const *)p);
      
#line 5185 
      q = p + tmp_0;
    }
    else ;
    
#line 5186 
    t = *q;
    
#line 5187 
    *q = (char)0;
    
#line 5189 
    tmp_2 = strstr((char const *)p,"fdx");
    
#line 5189 
    if (tmp_2 != (char *)0) 
#line 5189 
                            lp->params.fdx = (_Bool)1;
    else {
      char *tmp_3;
      
#line 5189 
      tmp_3 = strstr((char const *)p,"FDX");
      
#line 5189 
      if (tmp_3 != (char *)0) 
#line 5189 
                              lp->params.fdx = (_Bool)1; else ;
    }
    
#line 5191 
    tmp_12 = strstr((char const *)p,"autosense");
    
#line 5191 
    if (tmp_12 != (char *)0) 
#line 5191 
                             goto _LOR;
    else {
      char *tmp_13;
      
#line 5191 
      tmp_13 = strstr((char const *)p,"AUTOSENSE");
      
#line 5191 
      if (tmp_13 != (char *)0) {
        char *tmp_11;
        _LOR: 
#line 5192 
        tmp_11 = strstr((char const *)p,"TP_NW");
        
#line 5192 
        if (tmp_11 != (char *)0) 
#line 5193 
                                 lp->params.autosense = 2;
        else {
          char *tmp_10;
          
#line 5194 
          tmp_10 = strstr((char const *)p,"TP");
          
#line 5194 
          if (tmp_10 != (char *)0) 
#line 5195 
                                   lp->params.autosense = 64;
          else {
            char *tmp_9;
            
#line 5196 
            tmp_9 = strstr((char const *)p,"BNC_AUI");
            
#line 5196 
            if (tmp_9 != (char *)0) 
#line 5197 
                                    lp->params.autosense = 4;
            else {
              char *tmp_8;
              
#line 5198 
              tmp_8 = strstr((char const *)p,"BNC");
              
#line 5198 
              if (tmp_8 != (char *)0) 
#line 5199 
                                      lp->params.autosense = 4;
              else {
                char *tmp_7;
                
#line 5200 
                tmp_7 = strstr((char const *)p,"AUI");
                
#line 5200 
                if (tmp_7 != (char *)0) 
#line 5201 
                                        lp->params.autosense = 8;
                else {
                  char *tmp_6;
                  
#line 5202 
                  tmp_6 = strstr((char const *)p,"10Mb");
                  
#line 5202 
                  if (tmp_6 != (char *)0) 
#line 5203 
                                          lp->params.autosense = 64;
                  else {
                    char *tmp_5;
                    
#line 5204 
                    tmp_5 = strstr((char const *)p,"100Mb");
                    
#line 5204 
                    if (tmp_5 != (char *)0) 
#line 5205 
                                            lp->params.autosense = 128;
                    else {
                      char *tmp_4;
                      
#line 5206 
                      tmp_4 = strstr((char const *)p,"AUTO");
                      
#line 5206 
                      if (tmp_4 != (char *)0) 
#line 5207 
                                              lp->params.autosense = 16384; else ;
                    }
                  }
                }
              }
            }
          }
        }
      }
      else ;
    }
    
#line 5210 
    *q = t;
  }
  else ;
  return_label: 
#line 5212 
                return;
}


#line 5215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_dbg_open(struct net_device *dev)
{
  int i;
  
#line 5217 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5220 
  if ((de4x5_debug & 64) != 0) {
    
#line 5221 
    printk("%s: de4x5 opening with irq %d\n",(char *)(& dev->name),dev->irq);
    
#line 5222 
    printk("\tphysical address: %pM\n",dev->dev_addr);
    
#line 5223 
    printk("Descriptor head addresses:\n");
    
#line 5224 
    printk("\t0x%8.8lx  0x%8.8lx\n",(unsigned long)lp->rx_ring,(unsigned long)lp->tx_ring);
    
#line 5225 
    printk("Descriptor addresses:\nRX: ");
    
#line 5226 
    i = 0;
    
#line 5226 
    goto ldv_48232;
    ldv_48231: 
#line 5227 
    ;
    
#line 5227 
    if (i <= 2) 
#line 5228 
                printk("0x%8.8lx  ",(unsigned long)(& (lp->rx_ring + i)->status)); else ;
    
#line 5226 
    i += 1;
    ldv_48232: 
#line 5227 
    ;
    
#line 5226 
    if ((int)lp->rxRingSize + -1 > i) 
#line 5228 
                                      goto ldv_48231; else 
#line 5231 
                                                           goto ldv_48233;
    ldv_48233: 
#line 5232 
    ;
    
#line 5231 
    printk("...0x%8.8lx\n",(unsigned long)(& (lp->rx_ring + i)->status));
    
#line 5232 
    printk("TX: ");
    
#line 5233 
    i = 0;
    
#line 5233 
    goto ldv_48235;
    ldv_48234: 
#line 5234 
    ;
    
#line 5234 
    if (i <= 2) 
#line 5235 
                printk("0x%8.8lx  ",(unsigned long)(& (lp->tx_ring + i)->status)); else ;
    
#line 5233 
    i += 1;
    ldv_48235: 
#line 5234 
    ;
    
#line 5233 
    if ((int)lp->txRingSize + -1 > i) 
#line 5235 
                                      goto ldv_48234; else 
#line 5238 
                                                           goto ldv_48236;
    ldv_48236: 
#line 5239 
    ;
    
#line 5238 
    printk("...0x%8.8lx\n",(unsigned long)(& (lp->tx_ring + i)->status));
    
#line 5239 
    printk("Descriptor buffers:\nRX: ");
    
#line 5240 
    i = 0;
    
#line 5240 
    goto ldv_48238;
    ldv_48237: 
#line 5241 
    ;
    
#line 5241 
    if (i <= 2) 
#line 5242 
                printk("0x%8.8x  ",(lp->rx_ring + i)->buf); else ;
    
#line 5240 
    i += 1;
    ldv_48238: 
#line 5241 
    ;
    
#line 5240 
    if ((int)lp->rxRingSize + -1 > i) 
#line 5242 
                                      goto ldv_48237; else 
#line 5245 
                                                           goto ldv_48239;
    ldv_48239: 
#line 5246 
    ;
    
#line 5245 
    printk("...0x%8.8x\n",(lp->rx_ring + i)->buf);
    
#line 5246 
    printk("TX: ");
    
#line 5247 
    i = 0;
    
#line 5247 
    goto ldv_48241;
    ldv_48240: 
#line 5248 
    ;
    
#line 5248 
    if (i <= 2) 
#line 5249 
                printk("0x%8.8x  ",(lp->tx_ring + i)->buf); else ;
    
#line 5247 
    i += 1;
    ldv_48241: 
#line 5248 
    ;
    
#line 5247 
    if ((int)lp->txRingSize + -1 > i) 
#line 5249 
                                      goto ldv_48240; else 
#line 5252 
                                                           goto ldv_48242;
    ldv_48242: 
#line 5253 
    ;
    
#line 5252 
    printk("...0x%8.8x\n",(lp->tx_ring + i)->buf);
    
#line 5253 
    printk("Ring size:\nRX: %d\nTX: %d\n",(int)lp->rxRingSize,(int)lp->txRingSize);
  }
  else ;
  
#line 5257 
  return;
}


#line 5260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_dbg_mii(struct net_device *dev, int k)
{
  
#line 5262 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5263 
  u_long iobase = dev->base_addr;
  
#line 5265 
  if ((de4x5_debug & 32) != 0) {
    int tmp_0;
    int tmp_1;
    int tmp_2;
    int tmp_3;
    int tmp_6;
    
#line 5266 
    printk("\nMII device address: %d\n",lp->phy[k].addr);
    
#line 5267 
    tmp_0 = mii_rd((unsigned char)0,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5267 
    printk("MII CR:  %x\n",tmp_0);
    
#line 5268 
    tmp_1 = mii_rd((unsigned char)1,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5268 
    printk("MII SR:  %x\n",tmp_1);
    
#line 5269 
    tmp_2 = mii_rd((unsigned char)2,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5269 
    printk("MII ID0: %x\n",tmp_2);
    
#line 5270 
    tmp_3 = mii_rd((unsigned char)3,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5270 
    printk("MII ID1: %x\n",tmp_3);
    
#line 5271 
    if (lp->phy[k].id != 992) {
      int tmp_4;
      int tmp_5;
      
#line 5272 
      tmp_4 = mii_rd((unsigned char)4,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
      
#line 5272 
      printk("MII ANA: %x\n",tmp_4);
      
#line 5273 
      tmp_5 = mii_rd((unsigned char)5,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
      
#line 5273 
      printk("MII ANC: %x\n",tmp_5);
    }
    else ;
    
#line 5275 
    tmp_6 = mii_rd((unsigned char)16,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
    
#line 5275 
    printk("MII 16:  %x\n",tmp_6);
    
#line 5276 
    if (lp->phy[k].id != 992) {
      int tmp_7;
      int tmp_8;
      
#line 5277 
      tmp_7 = mii_rd((unsigned char)17,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
      
#line 5277 
      printk("MII 17:  %x\n",tmp_7);
      
#line 5278 
      tmp_8 = mii_rd((unsigned char)18,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
      
#line 5278 
      printk("MII 18:  %x\n",tmp_8);
    }
    else {
      int tmp_9;
      
#line 5280 
      tmp_9 = mii_rd((unsigned char)20,(unsigned char)((int)((unsigned char)lp->phy[k].addr)),(unsigned long)(72 << lp->bus) + iobase);
      
#line 5280 
      printk("MII 20:  %x\n",tmp_9);
    }
  }
  else ;
  
#line 5282 
  return;
}


#line 5286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_dbg_media(struct net_device *dev)
{
  
#line 5288 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5290 
  if (lp->media != lp->c_media) {
    
#line 5291 
    if ((de4x5_debug & 2) != 0) {
      char *tmp_0;
      char *tmp_9;
      
#line 5293 
      if ((int)lp->fdx != 0) 
#line 5293 
                             tmp_0 = (char *)" full duplex."; else 
#line 5293 
                                                                   tmp_0 = (char *)".";
      
#line 5292 
      if (lp->media != 0) {
        char *tmp_8;
        
#line 5293 
        if (lp->media != 64) {
          char *tmp_7;
          
#line 5294 
          if (lp->media != 32) {
            char *tmp_6;
            
#line 5295 
            if (lp->media != 4) {
              char *tmp_5;
              
#line 5296 
              if (lp->media != 8) {
                char *tmp_4;
                
#line 5297 
                if (lp->media != 16) {
                  char *tmp_3;
                  
#line 5298 
                  if (lp->media != 1024) {
                    char *tmp_2;
                    
#line 5299 
                    if (lp->media != 128) {
                      char *tmp_1;
                      
#line 5300 
                      if (lp->media == 64) 
#line 5300 
                                           tmp_1 = (char *)"10Mb/s"; else 
                                                                    
#line 5300 
                                                                    tmp_1 = (char *)"?\?\?";
                      
#line 5299 
                      tmp_2 = tmp_1;
                    }
                    else 
#line 5299 
                         tmp_2 = (char *)"100Mb/s";
                    
#line 5298 
                    tmp_3 = tmp_2;
                  }
                  else 
#line 5298 
                       tmp_3 = (char *)"EXT SIA";
                  
#line 5297 
                  tmp_4 = tmp_3;
                }
                else 
#line 5297 
                     tmp_4 = (char *)"BNC/AUI";
                
#line 5296 
                tmp_5 = tmp_4;
              }
              else 
#line 5296 
                   tmp_5 = (char *)"AUI";
              
#line 5295 
              tmp_6 = tmp_5;
            }
            else 
#line 5295 
                 tmp_6 = (char *)"BNC";
            
#line 5294 
            tmp_7 = tmp_6;
          }
          else 
#line 5294 
               tmp_7 = (char *)"TP/Nway";
          
#line 5293 
          tmp_8 = tmp_7;
        }
        else 
#line 5293 
             tmp_8 = (char *)"TP";
        
#line 5292 
        tmp_9 = tmp_8;
      }
      else 
#line 5292 
           tmp_9 = (char *)"unconnected, link down or incompatible connection";
      
#line 5292 
      ;
      
#line 5292 
      printk("%s: media is %s%s\n",(char *)(& dev->name),tmp_9,tmp_0);
    }
    else ;
    
#line 5305 
    lp->c_media = lp->media;
  }
  else ;
  
#line 5307 
  return;
}


#line 5310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_dbg_srom(struct de4x5_srom *p)
{
  int i;
  
#line 5314 
  if ((de4x5_debug & 16) != 0) {
    
#line 5315 
    printk("Sub-system Vendor ID: %04x\n",(int)*((u_short *)(& p->sub_vendor_id)));
    
#line 5316 
    printk("Sub-system ID:        %04x\n",(int)*((u_short *)(& p->sub_system_id)));
    
#line 5317 
    printk("ID Block CRC:         %02x\n",(int)((unsigned char)p->id_block_crc));
    
#line 5318 
    printk("SROM version:         %02x\n",(int)((unsigned char)p->version));
    
#line 5319 
    printk("# controllers:        %02x\n",(int)((unsigned char)p->num_controllers));
    
#line 5321 
    printk("Hardware Address:     %pM\n",(char *)(& p->ieee_addr));
    
#line 5322 
    printk("CRC checksum:         %04x\n",(int)((unsigned short)p->chksum));
    
#line 5323 
    i = 0;
    
#line 5323 
    goto ldv_48258;
    ldv_48257: 
#line 5324 
    ;
    
#line 5324 
    printk("%3d %04x\n",i << 1,(int)*((u_short *)p + i));
    
#line 5323 
    i += 1;
    ldv_48258: 
#line 5324 
    ;
    
#line 5323 
    if (i <= 63) 
#line 5325 
                 goto ldv_48257; else 
#line 5328 
                                      goto ldv_48259;
    ldv_48259: 
#line 5329 
    ;
  }
  else ;
  
#line 5331 
  return;
}


#line 5330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_dbg_rx(struct sk_buff *skb, int len)
{
  int i;
  int j;
  
#line 5334 
  if ((de4x5_debug & 8) != 0) {
    
#line 5335 
    printk("R: %pM <- %pM len/SAP:%02x%02x [%d]\n",skb->data,skb->data + 6U,(int)*(skb->data + 12U),(int)*(skb->data + 13U),len);
    
#line 5340 
    j = 0;
    
#line 5340 
    goto ldv_48270;
    ldv_48269: 
#line 5341 
    ;
    
#line 5341 
    printk("    %03x: ",j);
    
#line 5342 
    i = 0;
    
#line 5342 
    goto ldv_48267;
    ldv_48266: 
#line 5343 
    ;
    
#line 5343 
    printk("%02x ",(int)*(skb->data + (i + j)));
    
#line 5342 
    i += 1;
    ldv_48267: 
#line 5343 
    ;
    
#line 5342 
    if (i <= 15 && i < len) 
#line 5344 
                            goto ldv_48266; else 
#line 5347 
                                                 goto ldv_48268;
    ldv_48268: 
#line 5348 
    ;
    
#line 5345 
    printk("\n");
    
#line 5340 
    j += 16;
    
#line 5340 
    len += -16;
    ldv_48270: 
#line 5341 
    ;
    
#line 5340 
    if (len > 0) 
#line 5342 
                 goto ldv_48269; else 
#line 5345 
                                      goto ldv_48271;
    ldv_48271: 
#line 5346 
    ;
  }
  else ;
  
#line 5348 
  return;
}


#line 5356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int __retres;
  int i;
  int j;
  s32 omr;
  union __anonunion_tmp_358 tmp_0;
  
#line 5358 
  struct de4x5_private *lp = netdev_priv((struct net_device const *)dev);
  
#line 5359 
  struct de4x5_ioctl *ioc = (struct de4x5_ioctl *)(& rq->ifr_ifru);
  
#line 5360 
  u_long iobase = dev->base_addr;
  
#line 5361 
  int status = 0;
  
#line 5368 
  u_long flags = 0UL;
  
#line 5370 
  switch ((int)ioc->cmd) {
    unsigned long tmp_1;
    int tmp_3;
    bool tmp_2;
    unsigned long tmp_4;
    bool tmp_5;
    int tmp_7;
    bool tmp_6;
    int tmp_9;
    bool tmp_8;
    unsigned int tmp_10;
    int tmp_13;
    bool tmp_12;
    unsigned int tmp_14;
    unsigned long tmp_15;
    int tmp_17;
    bool tmp_16;
    unsigned long tmp_18;
    unsigned long tmp_19;
    case 1: 
#line 5371 
    ;
    
#line 5372 
    ioc->len = (unsigned short)6U;
    
#line 5373 
    i = 0;
    
#line 5373 
    goto ldv_48292;
    ldv_48291: 
#line 5374 
    ;
    
#line 5374 
    tmp_0.addr[i] = *(dev->dev_addr + i);
    
#line 5373 
    i += 1;
    ldv_48292: 
#line 5374 
    ;
    
#line 5373 
    if (i <= 5) 
#line 5375 
                goto ldv_48291; else 
#line 5378 
                                     goto ldv_48293;
    ldv_48293: 
#line 5379 
    ;
    
#line 5376 
    tmp_1 = copy_to_user((void *)ioc->data,(void const *)(& tmp_0.addr),(unsigned long)ioc->len);
    
#line 5376 
    if (tmp_1 != 0UL) {
      
#line 5376 
      __retres = -14;
      
#line 5376 
      goto return_label;
    }
    else ;
    
#line 5377 
    goto ldv_48294;
    case 2: 
#line 5379 
    ;
    
#line 5380 
    tmp_2 = capable(12);
    
#line 5380 
    if (tmp_2) 
#line 5380 
               tmp_3 = 0; else 
#line 5380 
                               tmp_3 = 1;
    
#line 5380 
    if (tmp_3) {
      
#line 5380 
      __retres = -1;
      
#line 5380 
      goto return_label;
    }
    else ;
    
#line 5381 
    tmp_4 = copy_from_user((void *)(& tmp_0.addr),(void const *)ioc->data,6UL);
    
#line 5381 
    if (tmp_4 != 0UL) {
      
#line 5381 
      __retres = -14;
      
#line 5381 
      goto return_label;
    }
    else ;
    
#line 5382 
    tmp_5 = netif_queue_stopped((struct net_device const *)dev);
    
#line 5382 
    if ((int)tmp_5 != 0) {
      
#line 5383 
      __retres = -16;
      
#line 5383 
      goto return_label;
    }
    else ;
    
#line 5384 
    netif_start_queue(dev);
    
#line 5385 
    i = 0;
    
#line 5385 
    goto ldv_48297;
    ldv_48296: 
#line 5386 
    ;
    
#line 5386 
    *(dev->dev_addr + i) = tmp_0.addr[i];
    
#line 5385 
    i += 1;
    ldv_48297: 
#line 5386 
    ;
    
#line 5385 
    if (i <= 5) 
#line 5387 
                goto ldv_48296; else 
#line 5390 
                                     goto ldv_48298;
    ldv_48298: 
#line 5391 
    ;
    
#line 5388 
    build_setup_frame(dev,1);
    
#line 5390 
    load_packet(dev,(char *)(& lp->setup_frame),2281701568U,(struct sk_buff *)1);
    
#line 5392 
    lp->tx_new = (lp->tx_new + 1) % (int)lp->txRingSize;
    
#line 5393 
    outl(1U,(int)((u_long)(8 << lp->bus) + iobase));
    
#line 5394 
    netif_wake_queue(dev);
    
#line 5395 
    goto ldv_48294;
    case 5: 
#line 5397 
    ;
    
#line 5398 
    tmp_6 = capable(12);
    
#line 5398 
    if (tmp_6) 
#line 5398 
               tmp_7 = 0; else 
#line 5398 
                               tmp_7 = 1;
    
#line 5398 
    if (tmp_7) {
      
#line 5398 
      __retres = -1;
      
#line 5398 
      goto return_label;
    }
    else ;
    
#line 5399 
    printk("%s: Boo!\n",(char *)(& dev->name));
    
#line 5400 
    goto ldv_48294;
    case 9: 
#line 5402 
    ;
    
#line 5403 
    tmp_8 = capable(12);
    
#line 5403 
    if (tmp_8) 
#line 5403 
               tmp_9 = 0; else 
#line 5403 
                               tmp_9 = 1;
    
#line 5403 
    if (tmp_9) {
      
#line 5403 
      __retres = -1;
      
#line 5403 
      goto return_label;
    }
    else ;
    
#line 5404 
    tmp_10 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 5404 
    omr = (int)tmp_10;
    
#line 5405 
    omr |= 128;
    
#line 5406 
    outl((unsigned int)omr,(int)((u_long)(48 << lp->bus) + iobase));
    
#line 5407 
    goto ldv_48294;
    case 10: 
#line 5409 
    ;
    {
      struct pkt_stats statbuf;
      unsigned long tmp_11;
      
#line 5412 
      ioc->len = (unsigned short)104U;
      
#line 5413 
      ldv___ldv_spin_lock_93(& lp->lock);
      
#line 5414 
      memcpy((void *)(& statbuf),(void const *)(& lp->pktStats),(unsigned long)ioc->len);
      
#line 5415 
      ldv_spin_unlock_irqrestore_94(& lp->lock,flags);
      
#line 5416 
      tmp_11 = copy_to_user((void *)ioc->data,(void const *)(& statbuf),(unsigned long)ioc->len);
      
#line 5416 
      if (tmp_11 != 0UL) {
        
#line 5417 
        __retres = -14;
        
#line 5417 
        goto return_label;
      }
      else ;
      
#line 5418 
      goto ldv_48294;
    }
    case 11: 
#line 5420 
    ;
    
#line 5421 
    tmp_12 = capable(12);
    
#line 5421 
    if (tmp_12) 
#line 5421 
                tmp_13 = 0; else 
#line 5421 
                                 tmp_13 = 1;
    
#line 5421 
    if (tmp_13) {
      
#line 5421 
      __retres = -1;
      
#line 5421 
      goto return_label;
    }
    else ;
    
#line 5422 
    ldv___ldv_spin_lock_95(& lp->lock);
    
#line 5423 
    memset((void *)(& lp->pktStats),0,104UL);
    
#line 5424 
    ldv_spin_unlock_irqrestore_96(& lp->lock,flags);
    
#line 5425 
    goto ldv_48294;
    case 12: 
#line 5427 
    ;
    
#line 5428 
    tmp_14 = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 5428 
    tmp_0.addr[0] = (unsigned char)tmp_14;
    
#line 5429 
    tmp_15 = copy_to_user((void *)ioc->data,(void const *)(& tmp_0.addr),1UL);
    
#line 5429 
    if (tmp_15 != 0UL) {
      
#line 5429 
      __retres = -14;
      
#line 5429 
      goto return_label;
    }
    else ;
    
#line 5430 
    goto ldv_48294;
    case 13: 
#line 5432 
    ;
    
#line 5433 
    tmp_16 = capable(12);
    
#line 5433 
    if (tmp_16) 
#line 5433 
                tmp_17 = 0; else 
#line 5433 
                                 tmp_17 = 1;
    
#line 5433 
    if (tmp_17) {
      
#line 5433 
      __retres = -1;
      
#line 5433 
      goto return_label;
    }
    else ;
    
#line 5434 
    tmp_18 = copy_from_user((void *)(& tmp_0.addr),(void const *)ioc->data,1UL);
    
#line 5434 
    if (tmp_18 != 0UL) {
      
#line 5434 
      __retres = -14;
      
#line 5434 
      goto return_label;
    }
    else ;
    
#line 5435 
    outl((unsigned int)tmp_0.addr[0],(int)((u_long)(48 << lp->bus) + iobase));
    
#line 5436 
    goto ldv_48294;
    case 14: 
#line 5438 
    ;
    
#line 5439 
    j = 0;
    
#line 5440 
    tmp_0.lval[0] = inl((int)((u_long)(40 << lp->bus) + iobase));
    
#line 5440 
    j += 4;
    
#line 5441 
    tmp_0.lval[1] = inl((int)iobase);
    
#line 5441 
    j += 4;
    
#line 5442 
    tmp_0.lval[2] = inl((int)((u_long)(56 << lp->bus) + iobase));
    
#line 5442 
    j += 4;
    
#line 5443 
    tmp_0.lval[3] = inl((int)((u_long)(48 << lp->bus) + iobase));
    
#line 5443 
    j += 4;
    
#line 5444 
    tmp_0.lval[4] = inl((int)((u_long)(96 << lp->bus) + iobase));
    
#line 5444 
    j += 4;
    
#line 5445 
    tmp_0.lval[5] = inl((int)((u_long)(104 << lp->bus) + iobase));
    
#line 5445 
    j += 4;
    
#line 5446 
    tmp_0.lval[6] = inl((int)((u_long)(112 << lp->bus) + iobase));
    
#line 5446 
    j += 4;
    
#line 5447 
    tmp_0.lval[7] = inl((int)((u_long)(120 << lp->bus) + iobase));
    
#line 5447 
    j += 4;
    
#line 5448 
    ioc->len = (unsigned short)j;
    
#line 5449 
    tmp_19 = copy_to_user((void *)ioc->data,(void const *)(& tmp_0.lval),(unsigned long)ioc->len);
    
#line 5449 
    if (tmp_19 != 0UL) {
      
#line 5450 
      __retres = -14;
      
#line 5450 
      goto return_label;
    }
    else ;
    
#line 5451 
    goto ldv_48294;
    default: 
#line 5543 
    ;
    
#line 5544 
    __retres = -95;
    
#line 5544 
    goto return_label;
  }
  ldv_48294: 
#line 5547 
  ;
  
#line 5547 
  __retres = status;
  return_label: 
#line 5547 
                return __retres;
}


#line 5550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static int de4x5_module_init(void)
{
  
#line 5552 
  int err = 0;
  
#line 5555 
  err = ldv___pci_register_driver_97(& de4x5_pci_driver,& __this_module,"de4x5");
  
#line 5561 
  return err;
}


#line 5564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/dec/tulip/de4x5.c"
static void de4x5_module_exit(void)
{
  
#line 5567 
  ldv_pci_unregister_driver_98(& de4x5_pci_driver);
  
#line 5568 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int (*ldv_emg_alias_eth_change_mtu_3)(struct net_device *, int ) = & eth_change_mtu;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int (*ldv_emg_alias_eth_validate_addr_5)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int (*ldv_emg_alias_eth_mac_addr_7)(struct net_device *, void *) = & eth_mac_addr;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
struct pci_driver *ldv_emg_alias_de4x5_pci_driver_2 = & de4x5_pci_driver;

#line 62 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 63 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 64 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 65 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 66 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 67 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 68 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int ldv_emg_wrapper_de4x5_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 76 
  tmp = de4x5_open(arg0);
  
#line 76 
  return tmp;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
void ldv_emg_wrapper_de4x5_pci_remove_3(struct pci_dev *arg0)
{
  
#line 81 
  de4x5_pci_remove(arg0);
  
#line 82 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
void ldv_emg_de4x5_module_exit(void)
{
  
#line 86 
  de4x5_module_exit();
  
#line 87 
  return;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int ldv_emg_de4x5_module_init(void)
{
  int tmp;
  
#line 90 
  tmp = de4x5_module_init();
  
#line 90 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
struct net_device_stats *ldv_emg_wrapper_de4x5_get_stats_2(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 94 
  tmp = de4x5_get_stats(arg0);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int ldv_emg_wrapper_de4x5_ioctl_4(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 99 
  tmp = de4x5_ioctl(arg0,arg1,arg2);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
void ldv_emg_wrapper_set_multicast_list_8(struct net_device *arg0)
{
  
#line 104 
  set_multicast_list(arg0);
  
#line 105 
  return;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int ldv_emg_wrapper_de4x5_pci_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 109 
  tmp = de4x5_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
enum irqreturn ldv_emg_wrapper_de4x5_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 114 
  tmp = de4x5_interrupt(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
enum netdev_tx ldv_emg_wrapper_de4x5_queue_pkt_6(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 119 
  tmp = de4x5_queue_pkt(arg0,arg1);
  
#line 119 
  return tmp;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
int ldv_emg_wrapper_de4x5_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 124 
  tmp = de4x5_close(arg0);
  
#line 124 
  return tmp;
}


#line 819  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static int ldv_register_netdev_74(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 823 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 823 
  return tmp;
}


#line 827  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static int ldv_request_irq_75(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 831 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 831 
  return tmp;
}


#line 835  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static int ldv_request_irq_76(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 839 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 839 
  return tmp;
}


#line 843  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1)
{
  
#line 847 
  ldv_spin_model_lock((char *)"lock_of_de4x5_private");
  
#line 849 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 850 
  return;
}


#line 853  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 857 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 859 
  spin_unlock_irqrestore(lock,flags);
  
#line 860 
  return;
}


#line 863  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv___ldv_spin_lock_79(spinlock_t *ldv_func_arg1)
{
  
#line 867 
  ldv_spin_model_lock((char *)"lock_of_de4x5_private");
  
#line 869 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 870 
  return;
}


#line 873  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 877 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 879 
  spin_unlock_irqrestore(lock,flags);
  
#line 880 
  return;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_lock_81(spinlock_t *lock)
{
  
#line 887 
  ldv_spin_model_lock((char *)"lock_of_de4x5_private");
  
#line 889 
  spin_lock(lock);
  
#line 890 
  return;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_82(spinlock_t *lock)
{
  
#line 897 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 899 
  spin_unlock(lock);
  
#line 900 
  return;
}


#line 903  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_83(spinlock_t *lock)
{
  
#line 907 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 909 
  spin_unlock(lock);
  
#line 910 
  return;
}


#line 913  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 917 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 917 
  return tmp;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_free_irq_85(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 925 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 926 
  return;
}


#line 929  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 933 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 933 
  return tmp;
}


#line 937  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1)
{
  
#line 941 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 942 
  return;
}


#line 945  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1)
{
  
#line 949 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 950 
  return;
}


#line 953  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1)
{
  
#line 957 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 958 
  return;
}


#line 961  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 965 
  ldv_spin_model_lock((char *)"lock_of_de4x5_private");
  
#line 967 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 968 
  return;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 975 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 977 
  spin_unlock_irqrestore(lock,flags);
  
#line 978 
  return;
}


#line 981  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static int ldv_del_timer_sync_92(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 985 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 985 
  return tmp;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv___ldv_spin_lock_93(spinlock_t *ldv_func_arg1)
{
  
#line 993 
  ldv_spin_model_lock((char *)"lock_of_de4x5_private");
  
#line 995 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 1005 
  spin_unlock_irqrestore(lock,flags);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv___ldv_spin_lock_95(spinlock_t *ldv_func_arg1)
{
  
#line 1013 
  ldv_spin_model_lock((char *)"lock_of_de4x5_private");
  
#line 1015 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1016 
  return;
}


#line 1019  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_spin_unlock_irqrestore_96(spinlock_t *lock, unsigned long flags)
{
  
#line 1023 
  ldv_spin_model_unlock((char *)"lock_of_de4x5_private");
  
#line 1025 
  spin_unlock_irqrestore(lock,flags);
  
#line 1026 
  return;
}


#line 1029  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static int ldv___pci_register_driver_97(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1033 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1033 
  return tmp;
}


#line 1037  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/weaver/.tmp_de4x5.c.aux"
static void ldv_pci_unregister_driver_98(struct pci_driver *ldv_func_arg1)
{
  
#line 1041 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1042 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 64 
int main(void);


#line 65 
void ldv_dispatch_register_10_4(struct net_device *arg0);


#line 66 
void *ldv_timer_scenario_15(void *arg0);


#line 67 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 69 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 71 
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0);


#line 72 
void *ldv_initialization_1(void *arg0);


#line 73 
void *ldv_random_allocationless_scenario_14(void *arg0);


#line 74 
void *ldv_interrupt_scenario_13(void *arg0);


#line 76 
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0);


#line 80 
void *ldv_pci_scenario_12(void *arg0);


#line 81 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 84 
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_8_timer_list;
  
#line 100 
  ldv_8_timer_list = arg0;
  
#line 104 
  ldv_dispatch_instance_deregister_8_1(ldv_8_timer_list);
  
#line 105 
  ;
  
#line 105 
  __retres = 0;
  
#line 105 
  return __retres;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 116 
  tmp = ldv_undef_int();
  
#line 116 
  switch (tmp) {
    case 0: 
#line 117 
    ;
    
#line 118 
    cf_arg_15 = (struct ldv_struct_timer_scenario_15 *)ldv_xmalloc(16UL);
    
#line 119 
    cf_arg_15->arg0 = arg0;
    
#line 120 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_timer_scenario_15,(void *)cf_arg_15);
    
#line 121 
    __VERIFIER_assume(ret == 0);
    
#line 122 
    goto ldv_44671;
    default: 
#line 124 
    ;
    
#line 124 
    __VERIFIER_assume(0);
  }
  ldv_44671: 
#line 125 
  ;
  
#line 126 
  return;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 133 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_de4x5_pci_driver_2;
  
#line 137 
  tmp_0 = ldv_undef_int();
  
#line 137 
  if (tmp_0 != 0) {
    
#line 139 
    ldv_7_pci_driver = arg0;
    
#line 143 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 147 
    __retres = 0;
    
#line 147 
    goto return_label;
  }
  else {
    int tmp;
    
#line 154 
    tmp = ldv_undef_int_negative();
    
#line 154 
    __retres = tmp;
    
#line 154 
    goto return_label;
  }
  return_label: 
#line 137 
                return __retres;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 167 
  ldv_initialize();
  
#line 170 
  ldv_initialization_1((void *)0);
  
#line 172 
  __retres = 0;
  
#line 172 
  return __retres;
}


#line 177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_10_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 180 
  tmp = ldv_undef_int();
  
#line 180 
  switch (tmp) {
    case 0: 
#line 181 
    ;
    
#line 182 
    cf_arg_14 = (struct ldv_struct_random_allocationless_scenario_14 *)ldv_xmalloc(16UL);
    
#line 183 
    cf_arg_14->arg0 = arg0;
    
#line 184 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_14,(void *)cf_arg_14);
    
#line 185 
    __VERIFIER_assume(ret == 0);
    
#line 186 
    goto ldv_44688;
    default: 
#line 188 
    ;
    
#line 188 
    __VERIFIER_assume(0);
  }
  ldv_44688: 
#line 189 
  ;
  
#line 190 
  return;
}


#line 194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_15(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_15_container;
  
#line 199 
  struct ldv_struct_timer_scenario_15 *data = (struct ldv_struct_timer_scenario_15 *)arg0;
  
#line 204 
  if (data != (struct ldv_struct_timer_scenario_15 *)0) {
    
#line 205 
    ldv_15_container = data->arg0;
    
#line 206 
    ldv_free((void *)data);
  }
  else ;
  
#line 211 
  if (ldv_15_container->function != (void (*)(unsigned long ))0) {
    
#line 213 
    ldv_switch_to_interrupt_context();
    
#line 215 
    (*(ldv_15_container->function))(ldv_15_container->data);
    
#line 217 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 226 
  __retres = (void *)0;
  
#line 226 
  goto return_label;
  
#line 228 
  __retres = (void *)0;
  return_label: 
#line 228 
                return __retres;
}


#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_13;
  int tmp;
  
#line 236 
  tmp = ldv_undef_int();
  
#line 236 
  switch (tmp) {
    case 0: 
#line 237 
    ;
    
#line 238 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 239 
    __VERIFIER_assume(ret == 0);
    
#line 240 
    goto ldv_44701;
    default: 
#line 242 
    ;
    
#line 242 
    __VERIFIER_assume(0);
  }
  ldv_44701: 
#line 243 
  ;
  
#line 244 
  return;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 255 
  tmp_0 = ldv_undef_int();
  
#line 255 
  if (tmp_0 != 0) {
    
#line 257 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 261 
    __retres = ldv_5_netdev;
    
#line 261 
    goto return_label;
  }
  else {
    
#line 268 
    __retres = (struct net_device *)0;
    
#line 268 
    goto return_label;
  }
  return_label: 
#line 255 
                return __retres;
}


#line 278  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 281 
  tmp = ldv_undef_int();
  
#line 281 
  switch (tmp) {
    case 0: 
#line 282 
    ;
    
#line 283 
    cf_arg_12 = (struct ldv_struct_pci_scenario_12 *)ldv_xmalloc(16UL);
    
#line 284 
    cf_arg_12->arg0 = arg0;
    
#line 285 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_pci_scenario_12,(void *)cf_arg_12);
    
#line 286 
    __VERIFIER_assume(ret == 0);
    
#line 287 
    goto ldv_44715;
    default: 
#line 289 
    ;
    
#line 289 
    __VERIFIER_assume(0);
  }
  ldv_44715: 
#line 290 
  ;
  
#line 291 
  return;
}


#line 295  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_11_line;
  void *ldv_11_data;
  enum irqreturn (*ldv_11_thread)(int , void *);
  int tmp_0;
  
#line 300 
  enum irqreturn (*ldv_11_callback)(int , void *) = & ldv_emg_wrapper_de4x5_interrupt_2;
  
#line 305 
  tmp_0 = ldv_undef_int();
  
#line 305 
  if (tmp_0 != 0) {
    
#line 307 
    ldv_11_line = (int)arg0;
    
#line 308 
    ldv_11_callback = arg1;
    
#line 309 
    ldv_11_thread = (enum irqreturn (*)(int , void *))0;
    
#line 310 
    ldv_11_data = arg4;
    
#line 314 
    ldv_dispatch_irq_register_11_3(ldv_11_line,ldv_11_callback,ldv_11_thread,ldv_11_data);
    
#line 318 
    __retres = 0;
    
#line 318 
    goto return_label;
  }
  else {
    int tmp;
    
#line 325 
    tmp = ldv_undef_int_negative();
    
#line 325 
    __retres = tmp;
    
#line 325 
    goto return_label;
  }
  return_label: 
#line 305 
                return __retres;
}


#line 335  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_9_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_12 *cf_arg_12;
  int tmp;
  
#line 338 
  tmp = ldv_undef_int();
  
#line 338 
  switch (tmp) {
    case 0: 
#line 339 
    ;
    
#line 340 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 341 
    __VERIFIER_assume(ret == 0);
    
#line 342 
    goto ldv_44740;
    default: 
#line 344 
    ;
    
#line 344 
    __VERIFIER_assume(0);
  }
  ldv_44740: 
#line 345 
  ;
  
#line 346 
  return;
}


#line 350  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 357 
  ldv_1_ret = ldv_emg_de4x5_module_init();
  
#line 358 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 361 
  tmp = ldv_undef_int();
  
#line 361 
  if (tmp != 0) {
    
#line 363 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 367 
    __retres = (void *)0;
    
#line 367 
    goto return_label;
  }
  else {
    
#line 371 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 376 
    ldv_emg_de4x5_module_exit();
    
#line 380 
    __retres = (void *)0;
    
#line 380 
    goto return_label;
  }
  
#line 383 
  __retres = (void *)0;
  return_label: 
#line 383 
                return __retres;
}


#line 388  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_14(void *arg0)
{
  void *__retres;
  int ldv_14_ldv_param_1_2;
  struct ifreq *ldv_14_ldv_param_1_3;
  int ldv_14_ldv_param_2_4;
  struct net_device *ldv_14_container;
  void *ldv_14_ldv_param_1_6;
  struct sk_buff *ldv_14_ldv_param_0_5;
  int tmp;
  
#line 398 
  struct ldv_struct_random_allocationless_scenario_14 *data = (struct ldv_struct_random_allocationless_scenario_14 *)arg0;
  
#line 403 
  if (data != (struct ldv_struct_random_allocationless_scenario_14 *)0) {
    
#line 404 
    ldv_14_container = data->arg0;
    
#line 405 
    ldv_free((void *)data);
  }
  else ;
  
#line 413 
  goto ldv_call_14;
  
#line 415 
  __retres = (void *)0;
  
#line 415 
  goto return_label;
  ldv_call_14: 
#line 418 
  ;
  
#line 421 
  tmp = ldv_undef_int();
  
#line 421 
  switch (tmp) {
    case 1: 
#line 422 
    ;
    
#line 425 
    ldv_emg_wrapper_de4x5_get_stats_2(ldv_14_container);
    
#line 432 
    goto ldv_call_14;
    case 2: 
#line 435 
    ;
    
#line 438 
    ldv_emg_wrapper_set_multicast_list_8(ldv_14_container);
    
#line 445 
    goto ldv_call_14;
    case 3: 
#line 448 
    ;
    
#line 450 
    ldv_14_ldv_param_1_6 = ldv_xmalloc_unknown_size(0UL);
    
#line 455 
    (*ldv_emg_alias_eth_mac_addr_7)(ldv_14_container,ldv_14_ldv_param_1_6);
    
#line 459 
    ldv_free(ldv_14_ldv_param_1_6);
    
#line 466 
    goto ldv_call_14;
    case 4: 
#line 469 
    ;
    
#line 471 
    ldv_14_ldv_param_0_5 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    
#line 476 
    ldv_emg_wrapper_de4x5_queue_pkt_6(ldv_14_ldv_param_0_5,ldv_14_container);
    
#line 480 
    ldv_free((void *)ldv_14_ldv_param_0_5);
    
#line 487 
    goto ldv_call_14;
    case 5: 
#line 490 
    ;
    
#line 493 
    (*ldv_emg_alias_eth_validate_addr_5)(ldv_14_container);
    
#line 500 
    goto ldv_call_14;
    case 6: 
#line 503 
    ;
    
#line 505 
    ldv_14_ldv_param_1_3 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
    
#line 510 
    ldv_emg_wrapper_de4x5_ioctl_4(ldv_14_container,ldv_14_ldv_param_1_3,ldv_14_ldv_param_2_4);
    
#line 514 
    ldv_free((void *)ldv_14_ldv_param_1_3);
    
#line 521 
    goto ldv_call_14;
    case 7: 
#line 524 
    ;
    
#line 530 
    (*ldv_emg_alias_eth_change_mtu_3)(ldv_14_container,ldv_14_ldv_param_1_2);
    
#line 540 
    goto ldv_call_14;
    case 8: 
#line 543 
    ;
    
#line 549 
    __retres = (void *)0;
    
#line 549 
    goto return_label;
    default: 
#line 552 
    ;
    
#line 552 
    __VERIFIER_assume(0);
  }
  
#line 555 
  __retres = (void *)0;
  return_label: 
#line 555 
                return __retres;
}


#line 560  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_13(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_13_ret_val;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp;
  
#line 566 
  enum irqreturn (*ldv_13_callback)(int , void *) = & ldv_emg_wrapper_de4x5_interrupt_2;
  
#line 569 
  struct ldv_struct_interrupt_scenario_13 *data = (struct ldv_struct_interrupt_scenario_13 *)arg0;
  
#line 574 
  if (data != (struct ldv_struct_interrupt_scenario_13 *)0) {
    
#line 575 
    ldv_13_line = data->arg0;
    
#line 576 
    ldv_13_callback = data->arg1;
    
#line 577 
    ldv_13_thread = data->arg2;
    
#line 578 
    ldv_13_data = data->arg3;
    
#line 579 
    ldv_free((void *)data);
  }
  else ;
  
#line 585 
  ldv_switch_to_interrupt_context();
  
#line 587 
  ldv_13_ret_val = ldv_emg_wrapper_de4x5_interrupt_2(ldv_13_line,ldv_13_data);
  
#line 589 
  ldv_switch_to_process_context();
  
#line 592 
  tmp = ldv_undef_int();
  
#line 592 
  if (tmp != 0) {
    
#line 594 
    __VERIFIER_assume(ldv_13_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 598 
    if (ldv_13_thread != (enum irqreturn (*)(int , void *))0) 
#line 600 
                                                              (*ldv_13_thread)(ldv_13_line,ldv_13_data); else ;
  }
  else 
#line 607 
       __VERIFIER_assume(ldv_13_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 616 
  __retres = (void *)0;
  
#line 616 
  goto return_label;
  
#line 618 
  __retres = (void *)0;
  return_label: 
#line 618 
                return __retres;
}


#line 623  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 626 
  struct pci_driver *ldv_9_pci_driver = ldv_emg_alias_de4x5_pci_driver_2;
  
#line 629 
  ldv_9_pci_driver = arg0;
  
#line 633 
  ldv_dispatch_deregister_9_1(ldv_9_pci_driver);
  
#line 637 
  goto return_label;
  return_label: 
#line 639 
                return;
}


#line 644  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_8_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 647 
  tmp = ldv_undef_int();
  
#line 647 
  switch (tmp) {
    case 0: 
#line 648 
    ;
    
#line 649 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 650 
    __VERIFIER_assume(ret == 0);
    
#line 651 
    goto ldv_44789;
    default: 
#line 653 
    ;
    
#line 653 
    __VERIFIER_assume(0);
  }
  ldv_44789: 
#line 654 
  ;
  
#line 655 
  return;
}


#line 659  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 665 
  ldv_6_netdev = arg0;
  
#line 670 
  ldv_emg_wrapper_de4x5_close_2(ldv_6_netdev);
  
#line 674 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 678 
  goto return_label;
  return_label: 
#line 680 
                return;
}


#line 685  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 691 
  ldv_3_line = (int)arg0;
  
#line 695 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 699 
  goto return_label;
  return_label: 
#line 701 
                return;
}


#line 706  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 713 
  tmp_0 = ldv_undef_int();
  
#line 713 
  if (tmp_0 != 0) {
    
#line 715 
    ldv_4_timer_list = arg0;
    
#line 719 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 723 
    __retres = 0;
    
#line 723 
    goto return_label;
  }
  else {
    int tmp;
    
#line 730 
    tmp = ldv_undef_int_negative();
    
#line 730 
    __retres = tmp;
    
#line 730 
    goto return_label;
  }
  return_label: 
#line 713 
                return __retres;
}


#line 740  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_12(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_12_resource_1;
  struct pci_device_id *ldv_12_ldv_param_1_2;
  struct pm_message ldv_12_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 745 
  struct pci_driver *ldv_12_container = ldv_emg_alias_de4x5_pci_driver_2;
  
#line 746 
  int ldv_12_ret = ldv_undef_int();
  
#line 749 
  struct ldv_struct_pci_scenario_12 *data = (struct ldv_struct_pci_scenario_12 *)arg0;
  
#line 753 
  ldv_12_ret = ldv_undef_int();
  
#line 756 
  if (data != (struct ldv_struct_pci_scenario_12 *)0) {
    
#line 757 
    ldv_12_container = data->arg0;
    
#line 758 
    ldv_free((void *)data);
  }
  else ;
  
#line 769 
  goto ldv_main_12;
  
#line 771 
  __retres = (void *)0;
  
#line 771 
  goto return_label;
  ldv_main_12: 
#line 774 
  ;
  
#line 777 
  tmp_2 = ldv_undef_int();
  
#line 777 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 779 
    ldv_12_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 784 
    ldv_pre_probe();
    
#line 786 
    ldv_12_ret = ldv_emg_wrapper_de4x5_pci_probe_2(ldv_12_resource_1,ldv_12_ldv_param_1_2);
    
#line 788 
    ldv_12_ret = ldv_post_probe(ldv_12_ret);
    
#line 792 
    ldv_free((void *)ldv_12_ldv_param_1_2);
    
#line 795 
    tmp_1 = ldv_undef_int();
    
#line 795 
    if (tmp_1 != 0) {
      
#line 797 
      __VERIFIER_assume(ldv_12_ret == 0);
      
#line 804 
      goto ldv_call_12;
    }
    else {
      
#line 808 
      __VERIFIER_assume(ldv_12_ret != 0);
      
#line 815 
      goto ldv_main_12;
    }
  }
  else {
    
#line 827 
    __retres = (void *)0;
    
#line 827 
    goto return_label;
  }
  
#line 830 
  __retres = (void *)0;
  
#line 830 
  goto return_label;
  ldv_call_12: 
#line 833 
  ;
  
#line 836 
  tmp_3 = ldv_undef_int();
  
#line 836 
  switch (tmp_3) {
    case 1: 
#line 837 
    ;
    
#line 846 
    goto ldv_call_12;
    case 2: 
#line 849 
    ;
    
#line 851 
    if (ldv_12_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 853 
      ldv_12_ret = (*(ldv_12_container->suspend))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 855 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 857 
         ldv_12_ret = ldv_undef_int();
    
#line 862 
    if (ldv_12_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 864 
      ldv_12_ret = (*(ldv_12_container->suspend_late))(ldv_12_resource_1,ldv_12_resource_0);
      
#line 866 
      ldv_12_ret = ldv_filter_err_code(ldv_12_ret);
    }
    else 
#line 868 
         ldv_12_ret = ldv_undef_int();
    
#line 873 
    if (ldv_12_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 875 
      (*(ldv_12_container->resume_early))(ldv_12_resource_1); else ;
    
#line 880 
    if (ldv_12_container->resume != (int (*)(struct pci_dev *))0) 
#line 882 
                                                                  (*(ldv_12_container->resume))(ldv_12_resource_1); else ;
    
#line 890 
    goto ldv_call_12;
    case 3: 
#line 893 
    ;
    
#line 895 
    if (ldv_12_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 897 
      (*(ldv_12_container->shutdown))(ldv_12_resource_1); else ;
    
#line 903 
    ldv_emg_wrapper_de4x5_pci_remove_3(ldv_12_resource_1);
    
#line 910 
    goto ldv_main_12;
    default: 
#line 913 
    ;
    
#line 913 
    __VERIFIER_assume(0);
  }
  
#line 916 
  __retres = (void *)0;
  return_label: 
#line 916 
                return __retres;
}


#line 921  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 924 
  tmp = ldv_undef_int();
  
#line 924 
  switch (tmp) {
    case 0: 
#line 925 
    ;
    
#line 926 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 927 
    __VERIFIER_assume(ret == 0);
    
#line 928 
    goto ldv_44826;
    default: 
#line 930 
    ;
    
#line 930 
    __VERIFIER_assume(0);
  }
  ldv_44826: 
#line 931 
  ;
  
#line 932 
  return;
}


#line 936  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 942 
  ldv_2_netdev = arg0;
  
#line 943 
  ldv_free((void *)ldv_2_netdev);
  
#line 947 
  goto return_label;
  return_label: 
#line 949 
                return;
}


#line 954  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_10_netdev;
  int tmp_3;
  
#line 958 
  int ldv_10_ret = ldv_undef_int();
  
#line 961 
  ldv_10_ret = ldv_undef_int();
  
#line 964 
  tmp_3 = ldv_undef_int();
  
#line 964 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 966 
    ldv_10_netdev = arg0;
    
#line 971 
    ldv_10_ret = ldv_emg_wrapper_de4x5_open_2(ldv_10_netdev);
    
#line 974 
    tmp_1 = ldv_undef_int();
    
#line 974 
    if (tmp_1 != 0) {
      
#line 976 
      __VERIFIER_assume(ldv_10_ret == 0);
      
#line 980 
      ldv_dispatch_register_10_4(ldv_10_netdev);
      
#line 984 
      __retres = 0;
      
#line 984 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 991 
      __VERIFIER_assume(ldv_10_ret != 0);
      
#line 992 
      ldv_failed_register_netdev();
      
#line 993 
      tmp_0 = ldv_undef_int_negative();
      
#line 993 
      __retres = tmp_0;
      
#line 993 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1001 
    ldv_failed_register_netdev();
    
#line 1002 
    tmp_2 = ldv_undef_int_negative();
    
#line 1002 
    __retres = tmp_2;
    
#line 1002 
    goto return_label;
  }
  return_label: 
#line 964 
                return __retres;
}


#line 1012  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/dec/tulip/de4x5.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_11_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1015 
  tmp = ldv_undef_int();
  
#line 1015 
  switch (tmp) {
    case 0: 
#line 1016 
    ;
    
#line 1017 
    cf_arg_13 = (struct ldv_struct_interrupt_scenario_13 *)ldv_xmalloc(32UL);
    
#line 1018 
    cf_arg_13->arg0 = arg0;
    
#line 1019 
    cf_arg_13->arg1 = arg1;
    
#line 1020 
    cf_arg_13->arg2 = arg2;
    
#line 1021 
    cf_arg_13->arg3 = arg3;
    
#line 1022 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_interrupt_scenario_13,(void *)cf_arg_13);
    
#line 1023 
    __VERIFIER_assume(ret == 0);
    
#line 1024 
    goto ldv_44850;
    default: 
#line 1026 
    ;
    
#line 1026 
    __VERIFIER_assume(0);
  }
  ldv_44850: 
#line 1027 
  ;
  
#line 1028 
  return;
}


