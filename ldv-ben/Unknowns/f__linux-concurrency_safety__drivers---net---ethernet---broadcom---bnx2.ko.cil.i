/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
enum system_states {
    SYSTEM_BOOTING = 0,
    SYSTEM_RUNNING = 1,
    SYSTEM_HALT = 2,
    SYSTEM_POWER_OFF = 3,
    SYSTEM_RESTART = 4
};

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 209 
struct rw_semaphore;

#line 210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 259 
enum hrtimer_restart;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11956 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_180 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_180 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_182 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_183 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_184 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_187 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_186 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_187 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_188 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_189 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_181 {
   int _pad[28U] ;
   struct __anonstruct__kill_182 _kill ;
   struct __anonstruct__timer_183 _timer ;
   struct __anonstruct__rt_184 _rt ;
   struct __anonstruct__sigchld_185 _sigchld ;
   struct __anonstruct__sigfault_186 _sigfault ;
   struct __anonstruct__sigpoll_188 _sigpoll ;
   struct __anonstruct__sigsys_189 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_181 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_196 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_197 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_199 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_198 {
   struct keyring_index_key index_key ;
   struct __anonstruct_199 __anonCompField___anonunion_198_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_200 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_202 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   union __anonunion_payload_202 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_196 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_197 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_198 __anonCompField_key_53 ;
   union __anonunion_type_data_200 type_data ;
   union __anonunion_201 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_229 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_229 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_231 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_231 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_232 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_232 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_233 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_233 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_234 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_234 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_235 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_235 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_236 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_236 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_237 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_237 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_238 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_238 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_239 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_240 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_239 ifr_ifrn ;
   union __anonunion_ifr_ifru_240 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_245 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_244 {
   struct __anonstruct_245 __anonCompField___anonunion_244_67 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_244 __anonCompField_lockref_68 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_247 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_69 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_246 __anonCompField_qstr_70 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_248 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_248 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_252 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_251 {
   struct __anonstruct_252 __anonCompField___anonunion_251_71 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_251 __anonCompField_radix_tree_node_72 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_256 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_256 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_257 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_257 __anonCompField_kqid_74 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_262 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_260 __anonCompField_inode_75 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_261 __anonCompField_inode_76 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_262 __anonCompField_inode_77 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_263 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_263 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_265 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_264 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_265 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_264 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_27146 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_27146 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_280 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_280 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27547 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_286 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27547 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_285 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_286 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_287 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_287 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_289 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   u64 v64 ;
   struct __anonstruct_289 __anonCompField___anonunion_288_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_288 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_291 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_292 __anonCompField___anonstruct_291_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   struct __anonstruct_291 __anonCompField___anonunion_290_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_294 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_293 {
   __wsum csum ;
   struct __anonstruct_294 __anonCompField___anonunion_293_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_290 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_293 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_295 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_296 __anonCompField_sk_buff_91 ;
   union __anonunion_297 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 890 
enum pkt_hash_types {
    PKT_HASH_TYPE_NONE = 0,
    PKT_HASH_TYPE_L2 = 1,
    PKT_HASH_TYPE_L3 = 2,
    PKT_HASH_TYPE_L4 = 3
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29399 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29399 phy_interface_t;

#line 126 
enum ldv_29452 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29452 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_31162 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_31163 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_31162 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_31163 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_337 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_337 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_345 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_345 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_346 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_346 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_348 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_347 {
   __addrpair skc_addrpair ;
   struct __anonstruct_348 __anonCompField___anonunion_347_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_351 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_350 {
   __portpair skc_portpair ;
   struct __anonstruct_351 __anonCompField___anonunion_350_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_353 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_347 __anonCompField_sock_common_103 ;
   union __anonunion_349 __anonCompField_sock_common_104 ;
   union __anonunion_350 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_352 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_353 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_354 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_354 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_357 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_357 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_377 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_377 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_378 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_380 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_379 {
   struct __anonstruct_380 __anonCompField___anonunion_379_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_378 __anonCompField_inet_peer_111 ;
   union __anonunion_379 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cryptohash.h"
struct inet_ehash_bucket {
   struct hlist_nulls_head chain ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_bind_hashbucket {
   spinlock_t lock ;
   struct hlist_head chain ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_listen_hashbucket {
   spinlock_t lock ;
   struct hlist_nulls_head head ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_hashinfo {
   struct inet_ehash_bucket *ehash ;
   spinlock_t *ehash_locks ;
   unsigned int ehash_mask ;
   unsigned int ehash_locks_mask ;
   struct inet_bind_hashbucket *bhash ;
   unsigned int bhash_size ;
   struct kmem_cache *bind_bucket_cachep ;
   struct inet_listen_hashbucket listening_hash[32U] ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/aer.h"
struct fcoe_capabilities {
   u32 capability1 ;
   u32 capability2 ;
   u32 capability3 ;
   u32 capability4 ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2x/bnx2x_mfw_req.h"
struct eth_stats_info {
   u8 version[12U] ;
   u8 mac_local[8U] ;
   u8 mac_add1[8U] ;
   u8 mac_add2[8U] ;
   u32 mtu_size ;
   u32 feature_flags ;
   u32 lso_max_size ;
   u32 lso_min_seg_cnt ;
   u32 ipv4_ofld_cnt ;
   u32 ipv6_ofld_cnt ;
   u32 promiscuous_mode ;
   u32 txq_size ;
   u32 rxq_size ;
   u32 txq_avg_depth ;
   u32 rxq_avg_depth ;
   u32 iov_offload ;
   u32 netq_cnt ;
   u32 vf_cnt ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2x/bnx2x_mfw_req.h"
struct fcoe_stats_info {
   u8 version[12U] ;
   u8 mac_local[8U] ;
   u8 mac_add1[8U] ;
   u8 mac_add2[8U] ;
   u32 qos_priority ;
   u32 txq_size ;
   u32 rxq_size ;
   u32 txq_avg_depth ;
   u32 rxq_avg_depth ;
   u32 rx_frames_lo ;
   u32 rx_frames_hi ;
   u32 rx_bytes_lo ;
   u32 rx_bytes_hi ;
   u32 tx_frames_lo ;
   u32 tx_frames_hi ;
   u32 tx_bytes_lo ;
   u32 tx_bytes_hi ;
};

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2x/bnx2x_mfw_req.h"
struct iscsi_stats_info {
   u8 version[12U] ;
   u8 mac_local[8U] ;
   u8 mac_add1[8U] ;
   u32 qos_priority ;
   u8 initiator_name[64U] ;
   u8 ww_port_name[64U] ;
   u8 boot_target_name[64U] ;
   u8 boot_target_ip[16U] ;
   u32 boot_target_portal ;
   u8 boot_init_ip[16U] ;
   u32 max_frame_size ;
   u32 txq_size ;
   u32 rxq_size ;
   u32 txq_avg_depth ;
   u32 rxq_avg_depth ;
   u32 rx_pdus_lo ;
   u32 rx_pdus_hi ;
   u32 rx_bytes_lo ;
   u32 rx_bytes_hi ;
   u32 tx_pdus_lo ;
   u32 tx_pdus_hi ;
   u32 tx_bytes_lo ;
   u32 tx_bytes_hi ;
   u32 pcp_prior_map_tbl ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2x/bnx2x_mfw_req.h"
union drv_info_to_mcp {
   struct eth_stats_info ether_stat ;
   struct fcoe_stats_info fcoe_stat ;
   struct iscsi_stats_info iscsi_stat ;
};

#line 168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2x/bnx2x_mfw_req.h"
struct kwqe {
   u32 kwqe_op_flag ;
   u32 kwqe_info0 ;
   u32 kwqe_info1 ;
   u32 kwqe_info2 ;
   u32 kwqe_info3 ;
   u32 kwqe_info4 ;
   u32 kwqe_info5 ;
   u32 kwqe_info6 ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct kwqe_16 {
   u32 kwqe_info0 ;
   u32 kwqe_info1 ;
   u32 kwqe_info2 ;
   u32 kwqe_info3 ;
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct cnic_ctl_completion {
   u32 cid ;
   u8 opcode ;
   u8 error ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
union __anonunion_data_387 {
   struct cnic_ctl_completion comp ;
   char bytes[64U] ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct cnic_ctl_info {
   int cmd ;
   union __anonunion_data_387 data ;
};

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct drv_ctl_spq_credit {
   u32 credit_count ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct drv_ctl_io {
   u32 cid_addr ;
   u32 offset ;
   u32 data ;
   dma_addr_t dma_addr ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct drv_ctl_l2_ring {
   u32 client_id ;
   u32 cid ;
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct drv_ctl_register_data {
   int ulp_type ;
   struct fcoe_capabilities fcoe_features ;
};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
union __anonunion_data_388 {
   struct drv_ctl_spq_credit credit ;
   struct drv_ctl_io io ;
   struct drv_ctl_l2_ring ring ;
   int ulp_type ;
   struct drv_ctl_register_data register_data ;
   char bytes[64U] ;
};

#line 151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct drv_ctl_info {
   int cmd ;
   union __anonunion_data_388 data ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct cnic_ops {
   struct module *cnic_owner ;
   int (*cnic_handler)(void *, void *) ;
   int (*cnic_ctl)(void *, struct cnic_ctl_info *) ;
};

#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct cnic_irq {
   unsigned int vector ;
   void *status_blk ;
   u32 status_blk_num ;
   u32 status_blk_num2 ;
   u32 irq_flags ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct cnic_eth_dev {
   struct module *drv_owner ;
   u32 drv_state ;
   u32 chip_id ;
   u32 max_kwqe_pending ;
   struct pci_dev *pdev ;
   void *io_base ;
   void *io_base2 ;
   void const *iro_arr ;
   u32 ctx_tbl_offset ;
   u32 ctx_tbl_len ;
   int ctx_blk_size ;
   u32 starting_cid ;
   u32 max_iscsi_conn ;
   u32 max_fcoe_conn ;
   u32 max_rdma_conn ;
   u32 fcoe_init_cid ;
   u32 max_fcoe_exchanges ;
   u32 fcoe_wwn_port_name_hi ;
   u32 fcoe_wwn_port_name_lo ;
   u32 fcoe_wwn_node_name_hi ;
   u32 fcoe_wwn_node_name_lo ;
   u16 iscsi_l2_client_id ;
   u16 iscsi_l2_cid ;
   u8 iscsi_mac[6U] ;
   int num_irq ;
   struct cnic_irq irq_arr[8U] ;
   int (*drv_register_cnic)(struct net_device *, struct cnic_ops *, void *) ;
   int (*drv_unregister_cnic)(struct net_device *) ;
   int (*drv_submit_kwqes_32)(struct net_device *, struct kwqe **, u32 ) ;
   int (*drv_submit_kwqes_16)(struct net_device *, struct kwqe_16 **, u32 ) ;
   int (*drv_ctl)(struct net_device *, struct drv_ctl_info *) ;
   unsigned long reserved1[2U] ;
   union drv_info_to_mcp *addr_drv_info_to_mcp ;
};

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/cnic_if.h"
struct bnx2_tx_bd {
   u32 tx_bd_haddr_hi ;
   u32 tx_bd_haddr_lo ;
   u32 tx_bd_mss_nbytes ;
   u32 tx_bd_vlan_tag_flags ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_rx_bd {
   u32 rx_bd_haddr_hi ;
   u32 rx_bd_haddr_lo ;
   u32 rx_bd_len ;
   u32 rx_bd_flags ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct status_block {
   u32 status_attn_bits ;
   u32 status_attn_bits_ack ;
   u16 status_tx_quick_consumer_index1 ;
   u16 status_tx_quick_consumer_index0 ;
   u16 status_tx_quick_consumer_index3 ;
   u16 status_tx_quick_consumer_index2 ;
   u16 status_rx_quick_consumer_index1 ;
   u16 status_rx_quick_consumer_index0 ;
   u16 status_rx_quick_consumer_index3 ;
   u16 status_rx_quick_consumer_index2 ;
   u16 status_rx_quick_consumer_index5 ;
   u16 status_rx_quick_consumer_index4 ;
   u16 status_rx_quick_consumer_index7 ;
   u16 status_rx_quick_consumer_index6 ;
   u16 status_rx_quick_consumer_index9 ;
   u16 status_rx_quick_consumer_index8 ;
   u16 status_rx_quick_consumer_index11 ;
   u16 status_rx_quick_consumer_index10 ;
   u16 status_rx_quick_consumer_index13 ;
   u16 status_rx_quick_consumer_index12 ;
   u16 status_rx_quick_consumer_index15 ;
   u16 status_rx_quick_consumer_index14 ;
   u16 status_cmd_consumer_index ;
   u16 status_completion_producer_index ;
   u8 status_blk_num ;
   u8 status_unused ;
   u16 status_idx ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct status_block_msix {
   u16 status_rx_quick_consumer_index ;
   u16 status_tx_quick_consumer_index ;
   u16 status_cmd_consumer_index ;
   u16 status_completion_producer_index ;
   u32 status_unused ;
   u8 status_blk_num ;
   u8 status_unused2 ;
   u16 status_idx ;
};

#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct statistics_block {
   u32 stat_IfHCInOctets_hi ;
   u32 stat_IfHCInOctets_lo ;
   u32 stat_IfHCInBadOctets_hi ;
   u32 stat_IfHCInBadOctets_lo ;
   u32 stat_IfHCOutOctets_hi ;
   u32 stat_IfHCOutOctets_lo ;
   u32 stat_IfHCOutBadOctets_hi ;
   u32 stat_IfHCOutBadOctets_lo ;
   u32 stat_IfHCInUcastPkts_hi ;
   u32 stat_IfHCInUcastPkts_lo ;
   u32 stat_IfHCInMulticastPkts_hi ;
   u32 stat_IfHCInMulticastPkts_lo ;
   u32 stat_IfHCInBroadcastPkts_hi ;
   u32 stat_IfHCInBroadcastPkts_lo ;
   u32 stat_IfHCOutUcastPkts_hi ;
   u32 stat_IfHCOutUcastPkts_lo ;
   u32 stat_IfHCOutMulticastPkts_hi ;
   u32 stat_IfHCOutMulticastPkts_lo ;
   u32 stat_IfHCOutBroadcastPkts_hi ;
   u32 stat_IfHCOutBroadcastPkts_lo ;
   u32 stat_emac_tx_stat_dot3statsinternalmactransmiterrors ;
   u32 stat_Dot3StatsCarrierSenseErrors ;
   u32 stat_Dot3StatsFCSErrors ;
   u32 stat_Dot3StatsAlignmentErrors ;
   u32 stat_Dot3StatsSingleCollisionFrames ;
   u32 stat_Dot3StatsMultipleCollisionFrames ;
   u32 stat_Dot3StatsDeferredTransmissions ;
   u32 stat_Dot3StatsExcessiveCollisions ;
   u32 stat_Dot3StatsLateCollisions ;
   u32 stat_EtherStatsCollisions ;
   u32 stat_EtherStatsFragments ;
   u32 stat_EtherStatsJabbers ;
   u32 stat_EtherStatsUndersizePkts ;
   u32 stat_EtherStatsOverrsizePkts ;
   u32 stat_EtherStatsPktsRx64Octets ;
   u32 stat_EtherStatsPktsRx65Octetsto127Octets ;
   u32 stat_EtherStatsPktsRx128Octetsto255Octets ;
   u32 stat_EtherStatsPktsRx256Octetsto511Octets ;
   u32 stat_EtherStatsPktsRx512Octetsto1023Octets ;
   u32 stat_EtherStatsPktsRx1024Octetsto1522Octets ;
   u32 stat_EtherStatsPktsRx1523Octetsto9022Octets ;
   u32 stat_EtherStatsPktsTx64Octets ;
   u32 stat_EtherStatsPktsTx65Octetsto127Octets ;
   u32 stat_EtherStatsPktsTx128Octetsto255Octets ;
   u32 stat_EtherStatsPktsTx256Octetsto511Octets ;
   u32 stat_EtherStatsPktsTx512Octetsto1023Octets ;
   u32 stat_EtherStatsPktsTx1024Octetsto1522Octets ;
   u32 stat_EtherStatsPktsTx1523Octetsto9022Octets ;
   u32 stat_XonPauseFramesReceived ;
   u32 stat_XoffPauseFramesReceived ;
   u32 stat_OutXonSent ;
   u32 stat_OutXoffSent ;
   u32 stat_FlowControlDone ;
   u32 stat_MacControlFramesReceived ;
   u32 stat_XoffStateEntered ;
   u32 stat_IfInFramesL2FilterDiscards ;
   u32 stat_IfInRuleCheckerDiscards ;
   u32 stat_IfInFTQDiscards ;
   u32 stat_IfInMBUFDiscards ;
   u32 stat_IfInRuleCheckerP4Hit ;
   u32 stat_CatchupInRuleCheckerDiscards ;
   u32 stat_CatchupInFTQDiscards ;
   u32 stat_CatchupInMBUFDiscards ;
   u32 stat_CatchupInRuleCheckerP4Hit ;
   u32 stat_GenStat00 ;
   u32 stat_GenStat01 ;
   u32 stat_GenStat02 ;
   u32 stat_GenStat03 ;
   u32 stat_GenStat04 ;
   u32 stat_GenStat05 ;
   u32 stat_GenStat06 ;
   u32 stat_GenStat07 ;
   u32 stat_GenStat08 ;
   u32 stat_GenStat09 ;
   u32 stat_GenStat10 ;
   u32 stat_GenStat11 ;
   u32 stat_GenStat12 ;
   u32 stat_GenStat13 ;
   u32 stat_GenStat14 ;
   u32 stat_GenStat15 ;
   u32 stat_FwRxDrop ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct l2_fhdr {
   u32 l2_fhdr_status ;
   u32 l2_fhdr_hash ;
   u16 l2_fhdr_vlan_tag ;
   u16 l2_fhdr_pkt_len ;
   u16 l2_fhdr_tcp_udp_xsum ;
   u16 l2_fhdr_ip_xsum ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_sw_bd {
   u8 *data ;
   dma_addr_t mapping ;
};

#line 6635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_sw_pg {
   struct page *page ;
   dma_addr_t mapping ;
};

#line 6641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_sw_tx_bd {
   struct sk_buff *skb ;
   dma_addr_t mapping ;
   unsigned short is_gso ;
   unsigned short nr_frags ;
};

#line 6648  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct flash_spec {
   u32 strapping ;
   u32 config1 ;
   u32 config2 ;
   u32 config3 ;
   u32 write1 ;
   u32 flags ;
   u32 page_bits ;
   u32 page_size ;
   u32 addr_mask ;
   u32 total_size ;
   u8 *name ;
};

#line 6711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_irq {
   irqreturn_t (*handler)(int , void *) ;
   unsigned int vector ;
   u8 requested ;
   char name[18U] ;
};

#line 6727  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_tx_ring_info {
   u32 tx_prod_bseq ;
   u16 tx_prod ;
   u32 tx_bidx_addr ;
   u32 tx_bseq_addr ;
   struct bnx2_tx_bd *tx_desc_ring ;
   struct bnx2_sw_tx_bd *tx_buf_ring ;
   u16 tx_cons ;
   u16 hw_tx_cons ;
   dma_addr_t tx_desc_mapping ;
};

#line 6742  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_rx_ring_info {
   u32 rx_prod_bseq ;
   u16 rx_prod ;
   u16 rx_cons ;
   u32 rx_bidx_addr ;
   u32 rx_bseq_addr ;
   u32 rx_pg_bidx_addr ;
   u16 rx_pg_prod ;
   u16 rx_pg_cons ;
   struct bnx2_sw_bd *rx_buf_ring ;
   struct bnx2_rx_bd *rx_desc_ring[8U] ;
   struct bnx2_sw_pg *rx_pg_ring ;
   struct bnx2_rx_bd *rx_pg_desc_ring[32U] ;
   dma_addr_t rx_desc_mapping[8U] ;
   dma_addr_t rx_pg_desc_mapping[32U] ;
};

#line 6763 
struct bnx2;

#line 6763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
union __anonunion_status_blk_391 {
   struct status_block *msi ;
   struct status_block_msix *msix ;
};

#line 6763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_napi {
   struct napi_struct napi ;
   struct bnx2 *bp ;
   union __anonunion_status_blk_391 status_blk ;
   u16 *hw_tx_cons_ptr ;
   u16 *hw_rx_cons_ptr ;
   u32 last_status_idx ;
   u32 int_num ;
   u32 cnic_tag ;
   int cnic_present ;
   struct bnx2_rx_ring_info rx_ring ;
   struct bnx2_tx_ring_info tx_ring ;
};

#line 6784  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2 {
   void *regview ;
   struct net_device *dev ;
   struct pci_dev *pdev ;
   atomic_t intr_sem ;
   u32 flags ;
   struct bnx2_napi bnx2_napi[9U] ;
   u32 rx_buf_use_size ;
   u32 rx_buf_size ;
   u32 rx_copy_thresh ;
   u32 rx_jumbo_thresh ;
   u32 rx_max_ring_idx ;
   u32 rx_max_pg_ring_idx ;
   int tx_ring_size ;
   u32 tx_wake_thresh ;
   struct cnic_ops *cnic_ops ;
   void *cnic_data ;
   unsigned int current_interval ;
   struct timer_list timer ;
   struct work_struct reset_task ;
   spinlock_t phy_lock ;
   spinlock_t indirect_lock ;
   u32 phy_flags ;
   u32 mii_bmcr ;
   u32 mii_bmsr ;
   u32 mii_bmsr1 ;
   u32 mii_adv ;
   u32 mii_lpa ;
   u32 mii_up1 ;
   u32 chip_id ;
   u32 phy_addr ;
   u32 phy_id ;
   u16 bus_speed_mhz ;
   u8 wol ;
   u8 pad ;
   u16 fw_wr_seq ;
   u16 fw_drv_pulse_wr_seq ;
   u32 fw_last_msg ;
   int rx_max_ring ;
   int rx_ring_size ;
   int rx_max_pg_ring ;
   int rx_pg_ring_size ;
   u16 tx_quick_cons_trip ;
   u16 tx_quick_cons_trip_int ;
   u16 rx_quick_cons_trip ;
   u16 rx_quick_cons_trip_int ;
   u16 comp_prod_trip ;
   u16 comp_prod_trip_int ;
   u16 tx_ticks ;
   u16 tx_ticks_int ;
   u16 com_ticks ;
   u16 com_ticks_int ;
   u16 cmd_ticks ;
   u16 cmd_ticks_int ;
   u16 rx_ticks ;
   u16 rx_ticks_int ;
   u32 stats_ticks ;
   dma_addr_t status_blk_mapping ;
   struct statistics_block *stats_blk ;
   struct statistics_block *temp_stats_blk ;
   dma_addr_t stats_blk_mapping ;
   int ctx_pages ;
   void *ctx_blk[4U] ;
   dma_addr_t ctx_blk_mapping[4U] ;
   u32 hc_cmd ;
   u32 rx_mode ;
   u16 req_line_speed ;
   u8 req_duplex ;
   u8 phy_port ;
   u8 link_up ;
   u16 line_speed ;
   u8 duplex ;
   u8 flow_ctrl ;
   u32 advertising ;
   u8 req_flow_ctrl ;
   u8 autoneg ;
   u8 loopback ;
   u8 serdes_an_pending ;
   u8 mac_addr[8U] ;
   u32 shmem_base ;
   char fw_version[32U] ;
   int pm_cap ;
   int pcix_cap ;
   struct flash_spec const *flash_info ;
   u32 flash_size ;
   int status_stats_size ;
   struct bnx2_irq irq_tbl[9U] ;
   int irq_nvecs ;
   u8 func ;
   u8 num_tx_rings ;
   u8 num_rx_rings ;
   int num_req_tx_rings ;
   int num_req_rx_rings ;
   u32 leds_save ;
   u32 idle_chk_status_idx ;
   struct mutex cnic_lock ;
   struct cnic_eth_dev cnic_eth_dev ;
   struct cnic_eth_dev *(*cnic_probe)(struct net_device *) ;
   struct firmware const *mips_firmware ;
   struct firmware const *rv2p_firmware ;
};

#line 7005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct cpu_reg {
   u32 mode ;
   u32 mode_value_halt ;
   u32 mode_value_sstep ;
   u32 state ;
   u32 state_value_clear ;
   u32 gpr0 ;
   u32 evmask ;
   u32 pc ;
   u32 inst ;
   u32 bp ;
   u32 spad_base ;
   u32 mips_view_base ;
};

#line 7033  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_fw_file_section {
   __be32 addr ;
   __be32 len ;
   __be32 offset ;
};

#line 7039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_mips_fw_file_entry {
   __be32 start_addr ;
   struct bnx2_fw_file_section text ;
   struct bnx2_fw_file_section data ;
   struct bnx2_fw_file_section rodata ;
};

#line 7046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_rv2p_fw_file_entry {
   struct bnx2_fw_file_section rv2p ;
   __be32 fixup[8U] ;
};

#line 7051  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_mips_fw_file {
   struct bnx2_mips_fw_file_entry com ;
   struct bnx2_mips_fw_file_entry cp ;
   struct bnx2_mips_fw_file_entry rxp ;
   struct bnx2_mips_fw_file_entry tpat ;
   struct bnx2_mips_fw_file_entry txp ;
};

#line 7059  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
struct bnx2_rv2p_fw_file {
   struct bnx2_rv2p_fw_file_entry proc1 ;
   struct bnx2_rv2p_fw_file_entry proc2 ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct __anonstruct_board_info_392 {
   char *name ;
};

#line 3441  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
union __anonunion___u_394 {
   struct cnic_ops *__val ;
   char __c[1U] ;
};

#line 5546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct __anonstruct_reg_tbl_397 {
   u16 offset ;
   u16 flags ;
   u32 rw_mask ;
   u32 ro_mask ;
};

#line 5734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct mem_entry {
   u32 offset ;
   u32 len ;
};

#line 6460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct ftq_reg {
   char *name ;
   u32 off ;
};

#line 7412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct __anonstruct_bnx2_stats_str_arr_399 {
   char string[32U] ;
};

#line 7539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct __anonstruct_bnx2_tests_str_arr_400 {
   char string[32U] ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_17 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_15 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_14 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_16 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
unsigned int __builtin_bswap32(unsigned int);

void *__builtin_memcpy(void *, void const *, unsigned long);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/fvtp/.tmp_bnx2.c"
void ldv_inline_asm(void);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 9 
int ldv_atomic_dec_and_test(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __rounddown_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 72 
  tmp = fls_long(n);
  
#line 72 
  __retres = 1UL << (tmp + 4294967295U);
  
#line 72 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int sprintf(char *, char const * , ...);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 474 
extern enum system_states system_state;


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v, int i)
{
  
#line 39 
  v->counter = i;
  
#line 40 
  return;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 120 
static int atomic_dec_and_test(atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 333 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 342 
int lock_is_held(struct lockdep_map *);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 358 
static void ldv_spin_lock_92(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_98(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_112(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_114(spinlock_t *lock);


#line 371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 373 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 374 
  return;
}


#line 399 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 403 
static void ldv_spin_lock_bh_75(spinlock_t *lock);


#line 407 
static void ldv_spin_lock_bh_77(spinlock_t *lock);


#line 411 
static void ldv_spin_lock_bh_85(spinlock_t *lock);


#line 415 
static void ldv_spin_lock_bh_88(spinlock_t *lock);


#line 419 
static void ldv_spin_lock_bh_90(spinlock_t *lock);


#line 423 
static void ldv_spin_lock_bh_95(spinlock_t *lock);


#line 427 
static void ldv_spin_lock_bh_96(spinlock_t *lock);


#line 431 
static void ldv_spin_lock_bh_100(spinlock_t *lock);


#line 435 
static void ldv_spin_lock_bh_102(spinlock_t *lock);


#line 439 
static void ldv_spin_lock_bh_104(spinlock_t *lock);


#line 443 
static void ldv_spin_lock_bh_106(spinlock_t *lock);


#line 447 
static void ldv_spin_lock_bh_108(spinlock_t *lock);


#line 451 
static void ldv_spin_lock_bh_110(spinlock_t *lock);


#line 455 
static void ldv_spin_lock_bh_123(spinlock_t *lock);


#line 459 
static void ldv_spin_lock_bh_125(spinlock_t *lock);


#line 463 
static void ldv_spin_lock_bh_127(spinlock_t *lock);


#line 467 
static void ldv_spin_lock_bh_130(spinlock_t *lock);


#line 471 
static void ldv_spin_lock_bh_135(spinlock_t *lock);


#line 475 
static void ldv_spin_lock_bh_137(spinlock_t *lock);


#line 479 
static void ldv_spin_lock_bh_139(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 407 
static void ldv_spin_unlock_93(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_99(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_113(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_115(spinlock_t *lock);


#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 422 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 423 
  return;
}


#line 452 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 456 
static void ldv_spin_unlock_bh_76(spinlock_t *lock);


#line 460 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 464 
static void ldv_spin_unlock_bh_86(spinlock_t *lock);


#line 468 
static void ldv_spin_unlock_bh_87(spinlock_t *lock);


#line 472 
static void ldv_spin_unlock_bh_89(spinlock_t *lock);


#line 476 
static void ldv_spin_unlock_bh_94(spinlock_t *lock);


#line 480 
static void ldv_spin_unlock_bh_97(spinlock_t *lock);


#line 484 
static void ldv_spin_unlock_bh_101(spinlock_t *lock);


#line 488 
static void ldv_spin_unlock_bh_103(spinlock_t *lock);


#line 492 
static void ldv_spin_unlock_bh_105(spinlock_t *lock);


#line 496 
static void ldv_spin_unlock_bh_107(spinlock_t *lock);


#line 500 
static void ldv_spin_unlock_bh_109(spinlock_t *lock);


#line 504 
static void ldv_spin_unlock_bh_111(spinlock_t *lock);


#line 508 
static void ldv_spin_unlock_bh_124(spinlock_t *lock);


#line 512 
static void ldv_spin_unlock_bh_126(spinlock_t *lock);


#line 516 
static void ldv_spin_unlock_bh_128(spinlock_t *lock);


#line 520 
static void ldv_spin_unlock_bh_129(spinlock_t *lock);


#line 524 
static void ldv_spin_unlock_bh_132(spinlock_t *lock);


#line 528 
static void ldv_spin_unlock_bh_136(spinlock_t *lock);


#line 532 
static void ldv_spin_unlock_bh_138(spinlock_t *lock);


#line 536 
static void ldv_spin_unlock_bh_140(spinlock_t *lock);


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1);


#line 41 
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1);


#line 45 
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1);


#line 49 
static void ldv_mutex_lock_133(struct mutex *ldv_func_arg1);


#line 55 
void ldv_mutex_model_lock(struct mutex *, char *);


#line 57 
void ldv_mutex_model_unlock(struct mutex *, char *);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
void __mutex_init(struct mutex *, char const *, struct lock_class_key *);


#line 193 
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1);


#line 197 
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1);


#line 201 
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1);


#line 205 
static void ldv_mutex_unlock_134(struct mutex *ldv_func_arg1);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
void synchronize_sched(void);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void synchronize_rcu(void)
{
  
#line 280 
  synchronize_sched();
  
#line 281 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 463 
int rcu_read_lock_held(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_91(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_116(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_119(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_131(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_120(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_122(struct timer_list *ldv_func_arg1);


#line 240 
static int ldv_del_timer_sync_145(struct timer_list *ldv_func_arg1);


#line 244 
static int ldv_del_timer_sync_147(struct timer_list *ldv_func_arg1);


#line 248 
static int ldv_del_timer_sync_148(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_121(struct work_struct *work);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writew(unsigned short val, void volatile *addr)
{
  
#line 67 
  ldv_inline_asm();
  
#line 68 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
void pci_iounmap(struct pci_dev *, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
void synchronize_irq(unsigned int);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_117(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_118(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
void device_set_wakeup_capable(struct device *, bool);


#line 104 
int device_set_wakeup_enable(struct device *, bool);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_dev_put(struct pci_dev *);


#line 835 
int pci_find_capability(struct pci_dev *, int);


#line 843 
struct pci_dev *pci_get_device(unsigned int, unsigned int, struct pci_dev *);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1046 
int pci_wake_from_d3(struct pci_dev *, bool);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_149(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_150(struct pci_driver *ldv_func_arg1);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_46.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_42.__anonCompField___anonstruct_151_37.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 1212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1718  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_cap(struct pci_dev *dev)
{
  int __retres;
  
#line 1720 
  __retres = (int)dev->pcie_cap;
  
#line 1720 
  return __retres;
}


#line 1729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static bool pci_is_pcie(struct pci_dev *dev)
{
  bool __retres;
  int tmp;
  
#line 1731 
  tmp = pci_pcie_cap(dev);
  
#line 1731 
  __retres = (_Bool)(tmp != 0);
  
#line 1731 
  return __retres;
}


#line 1793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static u16 pci_vpd_lrdt_size(u8 const *lrdt)
{
  u16 __retres;
  
#line 1795 
  __retres = (unsigned short)((int)((unsigned short)*(lrdt + 1U)) + ((int)((unsigned short)*(lrdt + 2U)) << 8U));
  
#line 1795 
  return __retres;
}


#line 1815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static u8 pci_vpd_info_field_size(u8 const *info_field)
{
  u8 __retres;
  
#line 1817 
  __retres = *(info_field + 2U);
  
#line 1817 
  return __retres;
}


#line 1830 
int pci_vpd_find_tag(u8 const *, unsigned int, unsigned int, u8);


#line 1842 
int pci_vpd_find_info_keyword(u8 const *, unsigned int, unsigned int, char const *);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 47 
unsigned long msleep_interruptible(unsigned int);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static void dql_queued(struct dql *dql, unsigned int count)
{
  
#line 74 
  if ((long)(count > 268435455U) != 0L) {
    
#line 76 
    ldv_inline_asm();
    
#line 74 
    ;
  }
  else ;
  
#line 76 
  dql->last_obj_cnt = count;
  
#line 77 
  ldv_inline_asm();
  
#line 85 
  dql->num_queued += count;
  
#line 86 
  return;
}


#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_queue_limits.h"
__inline static int dql_avail(struct dql const *dql)
{
  int __retres;
  unsigned int const volatile *tmp;
  unsigned int const volatile *tmp_0;
  {
    
#line 91 
    unsigned int const __var = 0U;
    
#line 91 
    tmp = (unsigned int const volatile *)(& dql->adj_limit);
  }
  {
    
#line 91 
    unsigned int const __var_0 = 0U;
    
#line 91 
    tmp_0 = (unsigned int const volatile *)(& dql->num_queued);
  }
  
#line 91 
  ;
  
#line 91 
  __retres = (int)(*tmp - *tmp_0);
  
#line 91 
  return __retres;
}


#line 95 
void dql_completed(struct dql *, unsigned int);


#line 98 
void dql_reset(struct dql *);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_sub(skb_frag_t *frag, int delta)
{
  
#line 247 
  frag->size -= (unsigned int)delta;
  
#line 248 
  return;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 786 
struct sk_buff *build_skb(void *, unsigned int);


#line 926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_set_hash(struct sk_buff *skb, __u32 hash, enum pkt_hash_types type)
{
  
#line 928 
  skb->l4_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))(type == (unsigned int)PKT_HASH_TYPE_L4);
  
#line 929 
  skb->sw_hash = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 930 
  skb->hash = hash;
  
#line 931 
  return;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  
#line 1635 
  __skb_fill_page_desc(skb,i,page,off,size);
  
#line 1636 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1636 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 1637 
  return;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_frag_set_page(skb_frag_t *frag, struct page *page)
{
  
#line 2360 
  frag->page.p = page;
  
#line 2361 
  return;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 3295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static u16 skb_get_queue_mapping(struct sk_buff const *skb)
{
  u16 __retres;
  
#line 3297 
  __retres = skb->queue_mapping;
  
#line 3297 
  return __retres;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static u32 ethtool_adv_to_mii_adv_t(u32 ethadv)
{
  
#line 111 
  u32 result = 0U;
  
#line 113 
  if ((ethadv & 1U) != 0U) 
#line 114 
                           result |= 32U; else ;
  
#line 115 
  if ((ethadv & 2U) != 0U) 
#line 116 
                           result |= 64U; else ;
  
#line 117 
  if ((ethadv & 4U) != 0U) 
#line 118 
                           result |= 128U; else ;
  
#line 119 
  if ((ethadv & 8U) != 0U) 
#line 120 
                           result |= 256U; else ;
  
#line 121 
  if ((ethadv & 8192U) != 0U) 
#line 122 
                              result |= 1024U; else ;
  
#line 123 
  if ((ethadv & 16384U) != 0U) 
#line 124 
                               result |= 2048U; else ;
  
#line 126 
  return result;
}


#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static u32 ethtool_adv_to_mii_ctrl1000_t(u32 ethadv)
{
  
#line 166 
  u32 result = 0U;
  
#line 168 
  if ((ethadv & 16U) != 0U) 
#line 169 
                            result |= 256U; else ;
  
#line 170 
  if ((ethadv & 32U) != 0U) 
#line 171 
                            result |= 512U; else ;
  
#line 173 
  return result;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2183 
int dev_close(struct net_device *);


#line 2205 
static void ldv_free_netdev_143(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_146(struct net_device *ldv_func_arg1);


#line 2505 
void netif_schedule_queue(struct netdev_queue *);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_45236;
  ldv_45235: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_45236: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_45235; else 
#line 2540 
                                                   goto ldv_45237;
  ldv_45237: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_wake_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2559 
  i = 0U;
  
#line 2559 
  goto ldv_45249;
  ldv_45248: 
#line 2560 
  ;
  {
    
#line 2560 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2561 
    netif_tx_wake_queue(txq);
  }
  
#line 2559 
  i += 1U;
  ldv_45249: 
#line 2560 
  ;
  
#line 2559 
  if (dev->num_tx_queues > i) 
#line 2561 
                              goto ldv_45248; else 
#line 2564 
                                                   goto ldv_45250;
  ldv_45250: 
#line 2565 
  ;
  
#line 2566 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_sent_queue(struct netdev_queue *dev_queue, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2649 
  dql_queued(& dev_queue->dql,bytes);
  
#line 2651 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2651 
  if ((long)(tmp >= 0) != 0L) 
#line 2652 
                              goto return_label; else ;
  
#line 2654 
  set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2655 
  ldv_inline_asm();
  
#line 2664 
  tmp_0 = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2664 
  if ((long)(tmp_0 >= 0) != 0L) 
#line 2665 
                                set_bit(1L,(unsigned long volatile *)(& dev_queue->state)); else ;
  return_label: 
#line 2666 
                return;
}


#line 2683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_completed_queue(struct netdev_queue *dev_queue, unsigned int pkts, unsigned int bytes)
{
  int tmp;
  int tmp_0;
  
#line 2687 
  if ((long)(bytes == 0U) != 0L) 
#line 2688 
                                 goto return_label; else ;
  
#line 2690 
  dql_completed(& dev_queue->dql,bytes);
  
#line 2691 
  ldv_inline_asm();
  
#line 2699 
  tmp = dql_avail((struct dql const *)(& dev_queue->dql));
  
#line 2699 
  if (tmp < 0) 
#line 2700 
               goto return_label; else ;
  
#line 2702 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2702 
  if (tmp_0 != 0) 
#line 2703 
                  netif_schedule_queue(dev_queue); else ;
  return_label: 
#line 2704 
                return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netdev_tx_reset_queue(struct netdev_queue *q)
{
  
#line 2726 
  set_bit(1L,(unsigned long volatile *)(& q->state));
  
#line 2727 
  dql_reset(& q->dql);
  
#line 2728 
  return;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2867 
int netif_set_real_num_tx_queues(struct net_device *, unsigned int);


#line 2870 
int netif_set_real_num_rx_queues(struct net_device *, unsigned int);


#line 2892 
int netif_get_num_default_rss_queues(void);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45810;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45810;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45810;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45810;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45810: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_45816;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45820;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45820;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45820;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45820;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45820: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_45816;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45829;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45829;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45829;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45829;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45829: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_45816;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45838;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45838;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45838;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45838;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45838: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_45816;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_45816;
    }
    ldv_45816: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_45848;
  ldv_45847: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_start_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_45848: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_45847; else 
#line 3294 
                                                   goto ldv_45849;
  ldv_45849: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_142(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_144(struct net_device *ldv_func_arg1);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3830 
void netdev_warn(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_141(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_optlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 49 
  tmp = tcp_hdr(skb);
  
#line 49 
  ;
  
#line 49 
  __retres = (unsigned int)(((int)tmp->doff + -5) * 4);
  
#line 49 
  return __retres;
}


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crc32.h"
u32 crc32_le(u32, unsigned char const *, size_t);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/aer.h"
int pci_enable_pcie_error_reporting(struct pci_dev *);


#line 43 
int pci_disable_pcie_error_reporting(struct pci_dev *);


#line 44 
int pci_cleanup_aer_uncorrect_error_status(struct pci_dev *);


#line 6631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.h"
__inline static struct l2_fhdr *get_l2_fhdr(u8 *data)
{
  struct l2_fhdr *__retres;
  int tmp_0;
  {
    int tmp;
    
#line 6633 
    int _max1 = 32;
    
#line 6633 
    int _max2 = 64;
    
#line 6633 
    if (_max1 > _max2) 
#line 6633 
                       tmp = _max1; else 
#line 6633 
                                         tmp = _max2;
    
#line 6633 
    tmp_0 = tmp;
  }
  
#line 6633 
  ;
  
#line 6633 
  __retres = (struct l2_fhdr *)((unsigned long)tmp_0 + (((unsigned long)data + 15UL) & 18446744073709551600U));
  
#line 6633 
  return __retres;
}


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2_fw.h"
static struct cpu_reg const cpu_reg_com = {.mode = 1069056U, .mode_value_halt = 1024U, .mode_value_sstep = 2U, .state = 1069060U, .state_value_clear = 16777215U, .gpr0 = 1069568U, .evmask = 1069064U, .pc = 1069084U, .inst = 1069088U, .bp = 1069108U, .spad_base = 1179648U, .mips_view_base = 134217728U};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2_fw.h"
static struct cpu_reg const cpu_reg_cp = {.mode = 1593344U, .mode_value_halt = 1024U, .mode_value_sstep = 2U, .state = 1593348U, .state_value_clear = 16777215U, .gpr0 = 1593856U, .evmask = 1593352U, .pc = 1593372U, .inst = 1593376U, .bp = 1593396U, .spad_base = 1703936U, .mips_view_base = 134217728U};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2_fw.h"
static struct cpu_reg const cpu_reg_rxp = {.mode = 806912U, .mode_value_halt = 1024U, .mode_value_sstep = 2U, .state = 806916U, .state_value_clear = 16777215U, .gpr0 = 807424U, .evmask = 806920U, .pc = 806940U, .inst = 806944U, .bp = 806964U, .spad_base = 917504U, .mips_view_base = 134217728U};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2_fw.h"
static struct cpu_reg const cpu_reg_tpat = {.mode = 544768U, .mode_value_halt = 1024U, .mode_value_sstep = 2U, .state = 544772U, .state_value_clear = 16777215U, .gpr0 = 545280U, .evmask = 544776U, .pc = 544796U, .inst = 544800U, .bp = 544820U, .spad_base = 655360U, .mips_view_base = 134217728U};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2_fw.h"
static struct cpu_reg const cpu_reg_txp = {.mode = 282624U, .mode_value_halt = 1024U, .mode_value_sstep = 2U, .state = 282628U, .state_value_clear = 16777215U, .gpr0 = 283136U, .evmask = 282632U, .pc = 282652U, .inst = 282656U, .bp = 282676U, .spad_base = 393216U, .mips_view_base = 134217728U};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static char version[63U] = {(char)'Q', (char)'L', (char)'o', (char)'g', (char)'i', (char)'c', (char)' ', (char)'\000'};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int disable_msi = 0;

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct __anonstruct_board_info_392 board_info[11U] = {{.name = (char *)"Broadcom NetXtreme II BCM5706 1000Base-T"}, {.name = (char *)"HP NC370T Multifunction Gigabit Server Adapter"}, {.name = (char *)"HP NC370i Multifunction Gigabit Server Adapter"}, {.name = (char *)"Broadcom NetXtreme II BCM5706 1000Base-SX"}, {.name = (char *)"HP NC370F Multifunction Gigabit Server Adapter"}, {.name = (char *)"Broadcom NetXtreme II BCM5708 1000Base-T"}, {.name = (char *)"Broadcom NetXtreme II BCM5708 1000Base-SX"}, {.name = (char *)"Broadcom NetXtreme II BCM5709 1000Base-T"}, {.name = (char *)"Broadcom NetXtreme II BCM5709 1000Base-SX"}, {.name = (char *)"Broadcom NetXtreme II BCM5716 1000Base-T"}, {.name = (char *)"Broadcom NetXtreme II BCM5716 1000Base-SX"}};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct pci_device_id const bnx2_pci_tbl[12U] = {{.vendor = 5348U, .device = 5706U, .subvendor = 4156U, .subdevice = 12545U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 5348U, .device = 5706U, .subvendor = 4156U, .subdevice = 12550U, .class = 0U, .class_mask = 0U, .driver_data = 2UL}, {.vendor = 5348U, .device = 5706U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5348U, .device = 5708U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 5UL}, {.vendor = 5348U, .device = 5802U, .subvendor = 4156U, .subdevice = 12546U, .class = 0U, .class_mask = 0U, .driver_data = 4UL}, {.vendor = 5348U, .device = 5802U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 3UL}, {.vendor = 5348U, .device = 5804U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 6UL}, {.vendor = 5348U, .device = 5689U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 7UL}, {.vendor = 5348U, .device = 5690U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 8UL}, {.vendor = 5348U, .device = 5691U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 9UL}, {.vendor = 5348U, .device = 5692U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 10UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct flash_spec const flash_table[16U] = {{.strapping = 0U, .config1 = 1082327936U, .config2 = 10420353U, .config3 = 2709823571U, .write1 = 2936013824U, .flags = 3U, .page_bits = 2U, .page_size = 4U, .addr_mask = 3U, .total_size = 65536U, .name = (u8 *)"EEPROM - slow"}, {.strapping = 134217730U, .config1 = 1266713089U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 0U, .name = (u8 *)"Entry 0001"}, {.strapping = 67108865U, .config1 = 1199604225U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 131072U, .name = (u8 *)"Non-buffered flash (128kB)"}, {.strapping = 201326595U, .config1 = 1333821953U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 262144U, .name = (u8 *)"Non-buffered flash (256kB)"}, {.strapping = 285212672U, .config1 = 1400930817U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 0U, .name = (u8 *)"Entry 0100"}, {.strapping = 419430402U, .config1 = 1535148545U, .config2 = 327899U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 131072U, .name = (u8 *)"Entry 0101: ST M45PE10 (128kB non-bufferred)"}, {.strapping = 352321537U, .config1 = 1468039681U, .config2 = 327899U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 262144U, .name = (u8 *)"Entry 0110: ST M45PE20 (256kB non-bufferred)"}, {.strapping = 486539267U, .config1 = 1602257409U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 65536U, .name = (u8 *)"Non-buffered flash (64kB)"}, {.strapping = 570425344U, .config1 = 1652589440U, .config2 = 10420353U, .config3 = 2709823571U, .write1 = 2936013824U, .flags = 3U, .page_bits = 2U, .page_size = 4U, .addr_mask = 3U, .total_size = 65536U, .name = (u8 *)"EEPROM - fast"}, {.strapping = 704643074U, .config1 = 1803584001U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 0U, .name = (u8 *)"Entry 1001"}, {.strapping = 637534209U, .config1 = 1736475137U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 0U, .name = (u8 *)"Entry 1010"}, {.strapping = 771751939U, .config1 = 1853915763U, .config2 = 5701761U, .config3 = 1753514835U, .write1 = 2936013824U, .flags = 3U, .page_bits = 9U, .page_size = 264U, .addr_mask = 511U, .total_size = 135168U, .name = (u8 *)"Buffered flash (128kB)"}, {.strapping = 855638016U, .config1 = 1937801729U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 0U, .name = (u8 *)"Entry 1100"}, {.strapping = 989855746U, .config1 = 2072019457U, .config2 = 327809U, .config3 = 58982995U, .write1 = 2936144902U, .flags = 4U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 0U, .name = (u8 *)"Entry 1101"}, {.strapping = 922746881U, .config1 = 1988133491U, .config2 = 5701761U, .config3 = 1753514835U, .write1 = 2936013824U, .flags = 3U, .page_bits = 9U, .page_size = 264U, .addr_mask = 511U, .total_size = 0U, .name = (u8 *)"Entry 1110 (Atmel)"}, {.strapping = 1056964611U, .config1 = 2122351219U, .config2 = 5701761U, .config3 = 1753514835U, .write1 = 2936013824U, .flags = 3U, .page_bits = 9U, .page_size = 264U, .addr_mask = 511U, .total_size = 270336U, .name = (u8 *)"Buffered flash (256kB)"}};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct flash_spec const flash_5709 = {.strapping = 0U, .config1 = 0U, .config2 = 0U, .config3 = 0U, .write1 = 0U, .flags = 1U, .page_bits = 8U, .page_size = 256U, .addr_mask = 255U, .total_size = 270336U, .name = (u8 *)"5709 Buffered flash (256kB)"};

#line 247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
struct pci_device_id const __mod_pci__bnx2_pci_tbl_device_table[12U];

#line 249 
static void bnx2_init_napi(struct bnx2 *bp);


#line 250 
static void bnx2_del_napi(struct bnx2 *bp);


#line 252  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static u32 bnx2_tx_avail(struct bnx2 *bp, struct bnx2_tx_ring_info *txr)
{
  u32 __retres;
  u32 diff;
  
#line 255 
  ldv_inline_asm();
  
#line 262 
  diff = (unsigned int)((int)txr->tx_prod - (int)txr->tx_cons);
  
#line 263 
  if ((long)(diff > 255U) != 0L) {
    
#line 264 
    diff &= 65535U;
    
#line 265 
    if (diff == 256U) 
#line 266 
                      diff = 255U; else ;
  }
  else ;
  
#line 268 
  __retres = (unsigned int)bp->tx_ring_size - diff;
  
#line 268 
  return __retres;
}


#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u32 bnx2_reg_rd_ind(struct bnx2 *bp, u32 offset)
{
  u32 val;
  
#line 276 
  ldv_spin_lock_bh_73(& bp->indirect_lock);
  
#line 277 
  writel(offset,(void volatile *)(bp->regview + 120U));
  
#line 278 
  val = readl((void const volatile *)(bp->regview + 128U));
  
#line 279 
  ldv_spin_unlock_bh_74(& bp->indirect_lock);
  
#line 280 
  return val;
}


#line 284  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_reg_wr_ind(struct bnx2 *bp, u32 offset, u32 val)
{
  
#line 286 
  ldv_spin_lock_bh_75(& bp->indirect_lock);
  
#line 287 
  writel(offset,(void volatile *)(bp->regview + 120U));
  
#line 288 
  writel(val,(void volatile *)(bp->regview + 128U));
  
#line 289 
  ldv_spin_unlock_bh_76(& bp->indirect_lock);
  
#line 290 
  return;
}


#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_shmem_wr(struct bnx2 *bp, u32 offset, u32 val)
{
  
#line 295 
  bnx2_reg_wr_ind(bp,bp->shmem_base + offset,val);
  
#line 296 
  return;
}


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u32 bnx2_shmem_rd(struct bnx2 *bp, u32 offset)
{
  u32 tmp;
  
#line 301 
  tmp = bnx2_reg_rd_ind(bp,bp->shmem_base + offset);
  
#line 301 
  return tmp;
}


#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_ctx_wr(struct bnx2 *bp, u32 cid_addr, u32 offset, u32 val)
{
  
#line 307 
  offset += cid_addr;
  
#line 308 
  ldv_spin_lock_bh_77(& bp->indirect_lock);
  
#line 309 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    int i;
    
#line 312 
    writel(val,(void volatile *)(bp->regview + 4128U));
    
#line 313 
    writel(offset | 1073741824U,(void volatile *)(bp->regview + 4124U));
    
#line 315 
    i = 0;
    
#line 315 
    goto ldv_56806;
    ldv_56805: 
#line 316 
    ;
    
#line 316 
    val = readl((void const volatile *)(bp->regview + 4124U));
    
#line 317 
    if (((long)val & 1073741824L) == 0L) 
#line 318 
                                         goto ldv_56804; else ;
    
#line 319 
    __const_udelay(21475UL);
    
#line 315 
    i += 1;
    ldv_56806: 
#line 316 
    ;
    
#line 315 
    if (i <= 4) 
#line 317 
                goto ldv_56805; else 
#line 320 
                                     goto ldv_56804;
    ldv_56804: 
#line 321 
    ;
  }
  else {
    
#line 322 
    writel(offset,(void volatile *)(bp->regview + 4112U));
    
#line 323 
    writel(val,(void volatile *)(bp->regview + 4116U));
  }
  
#line 325 
  ldv_spin_unlock_bh_78(& bp->indirect_lock);
  
#line 326 
  return;
}


#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_drv_ctl(struct net_device *dev, struct drv_ctl_info *info)
{
  int __retres;
  
#line 332 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 333 
  struct drv_ctl_io *io = & info->data.io;
  
#line 335 
  switch (info->cmd) {
    case 257: 
#line 336 
    ;
    
#line 337 
    bnx2_reg_wr_ind(bp,io->offset,io->data);
    
#line 338 
    goto ldv_56814;
    case 258: 
#line 339 
    ;
    
#line 340 
    io->data = bnx2_reg_rd_ind(bp,io->offset);
    
#line 341 
    goto ldv_56814;
    case 259: 
#line 342 
    ;
    
#line 343 
    bnx2_ctx_wr(bp,io->cid_addr,io->offset,io->data);
    
#line 344 
    goto ldv_56814;
    default: 
#line 345 
    ;
    
#line 346 
    __retres = -22;
    
#line 346 
    goto return_label;
  }
  ldv_56814: 
#line 348 
  ;
  
#line 348 
  __retres = 0;
  return_label: 
#line 348 
                return __retres;
}


#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_setup_cnic_irq_info(struct bnx2 *bp)
{
  int sb_id;
  
#line 353 
  struct cnic_eth_dev *cp = & bp->cnic_eth_dev;
  
#line 354 
  struct bnx2_napi *bnapi = & bp->bnx2_napi[0];
  
#line 357 
  if ((bp->flags & 1024U) != 0U) {
    
#line 358 
    cp->drv_state |= 2U;
    
#line 359 
    bnapi->cnic_present = 0;
    
#line 360 
    sb_id = bp->irq_nvecs;
    
#line 361 
    cp->irq_arr[0].irq_flags |= 1U;
  }
  else {
    
#line 363 
    cp->drv_state &= 4294967293U;
    
#line 364 
    bnapi->cnic_tag = bnapi->last_status_idx;
    
#line 365 
    bnapi->cnic_present = 1;
    
#line 366 
    sb_id = 0;
    
#line 367 
    cp->irq_arr[0].irq_flags &= 4294967294U;
  }
  
#line 370 
  cp->irq_arr[0].vector = bp->irq_tbl[sb_id].vector;
  
#line 371 
  cp->irq_arr[0].status_blk = (void *)((unsigned long)bnapi->status_blk.msi + (unsigned long)(sb_id * 128));
  
#line 374 
  cp->irq_arr[0].status_blk_num = (unsigned int)sb_id;
  
#line 375 
  cp->num_irq = 1;
  
#line 376 
  return;
}


#line 394 
void __compiletime_assert_394(void);


#line 378  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_register_cnic(struct net_device *dev, struct cnic_ops *ops, void *data)
{
  int __retres;
  u32 tmp_0;
  struct cnic_ops * volatile *tmp_1;
  
#line 381 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 382 
  struct cnic_eth_dev *cp = & bp->cnic_eth_dev;
  
#line 384 
  if (ops == (struct cnic_ops *)0) {
    
#line 385 
    __retres = -22;
    
#line 385 
    goto return_label;
  }
  else ;
  
#line 387 
  if ((cp->drv_state & 1U) != 0U) {
    
#line 388 
    __retres = -16;
    
#line 388 
    goto return_label;
  }
  else ;
  
#line 390 
  tmp_0 = bnx2_reg_rd_ind(bp,1704064U);
  
#line 390 
  if (tmp_0 == 0U) {
    
#line 391 
    __retres = -19;
    
#line 391 
    goto return_label;
  }
  else ;
  
#line 393 
  bp->cnic_data = data;
  {
    
#line 394 
    bool __cond = (_Bool)0;
    
#line 394 
    if ((int)__cond != 0) 
#line 394 
                          __compiletime_assert_394(); else ;
  }
  
#line 396 
  ldv_inline_asm();
  {
    
#line 394 
    struct cnic_ops *__var = (struct cnic_ops *)0;
    
#line 394 
    tmp_1 = (struct cnic_ops * volatile *)(& bp->cnic_ops);
  }
  
#line 394 
  *tmp_1 = ops;
  
#line 396 
  cp->num_irq = 0;
  
#line 397 
  cp->drv_state = 1U;
  
#line 399 
  bnx2_setup_cnic_irq_info(bp);
  
#line 401 
  __retres = 0;
  return_label: 
#line 401 
                return __retres;
}


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_unregister_cnic(struct net_device *dev)
{
  int __retres;
  
#line 406 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 407 
  struct bnx2_napi *bnapi = & bp->bnx2_napi[0];
  
#line 408 
  struct cnic_eth_dev *cp = & bp->cnic_eth_dev;
  
#line 410 
  ldv_mutex_lock_79(& bp->cnic_lock);
  
#line 411 
  cp->drv_state = 0U;
  
#line 412 
  bnapi->cnic_present = 0;
  
#line 413 
  bp->cnic_ops = (struct cnic_ops *)0;
  
#line 414 
  ldv_mutex_unlock_80(& bp->cnic_lock);
  
#line 415 
  synchronize_rcu();
  
#line 416 
  __retres = 0;
  
#line 416 
  return __retres;
}


#line 419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct cnic_eth_dev *bnx2_cnic_probe(struct net_device *dev)
{
  struct cnic_eth_dev *__retres;
  
#line 421 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 422 
  struct cnic_eth_dev *cp = & bp->cnic_eth_dev;
  
#line 424 
  if (cp->max_iscsi_conn == 0U) {
    
#line 425 
    __retres = (struct cnic_eth_dev *)0;
    
#line 425 
    goto return_label;
  }
  else ;
  
#line 427 
  cp->drv_owner = & __this_module;
  
#line 428 
  cp->chip_id = bp->chip_id;
  
#line 429 
  cp->pdev = bp->pdev;
  
#line 430 
  cp->io_base = bp->regview;
  
#line 431 
  cp->drv_ctl = & bnx2_drv_ctl;
  
#line 432 
  cp->drv_register_cnic = & bnx2_register_cnic;
  
#line 433 
  cp->drv_unregister_cnic = & bnx2_unregister_cnic;
  
#line 435 
  __retres = cp;
  return_label: 
#line 435 
                return __retres;
}


#line 439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_cnic_stop(struct bnx2 *bp)
{
  struct cnic_ops *c_ops;
  struct cnic_ctl_info info;
  
#line 444 
  ldv_mutex_lock_81(& bp->cnic_lock);
  {
    bool __warned;
    int tmp;
    
#line 445 
    tmp = debug_lockdep_rcu_enabled();
    
#line 445 
    if (tmp != 0) {
      
#line 445 
      if (! __warned) {
        int tmp_0;
        
#line 445 
        tmp_0 = lock_is_held(& bp->cnic_lock.dep_map);
        
#line 445 
        if (tmp_0 == 0) {
          
#line 445 
          __warned = (_Bool)1;
          
#line 445 
          lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c",446,"suspicious rcu_dereference_protected() usage");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 445 
  c_ops = bp->cnic_ops;
  
#line 447 
  if (c_ops != (struct cnic_ops *)0) {
    
#line 448 
    info.cmd = 1;
    
#line 449 
    (*(c_ops->cnic_ctl))(bp->cnic_data,& info);
  }
  else ;
  
#line 451 
  ldv_mutex_unlock_82(& bp->cnic_lock);
  
#line 452 
  return;
}


#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_cnic_start(struct bnx2 *bp)
{
  struct cnic_ops *c_ops;
  struct cnic_ctl_info info;
  
#line 460 
  ldv_mutex_lock_83(& bp->cnic_lock);
  {
    bool __warned;
    int tmp;
    
#line 461 
    tmp = debug_lockdep_rcu_enabled();
    
#line 461 
    if (tmp != 0) {
      
#line 461 
      if (! __warned) {
        int tmp_0;
        
#line 461 
        tmp_0 = lock_is_held(& bp->cnic_lock.dep_map);
        
#line 461 
        if (tmp_0 == 0) {
          
#line 461 
          __warned = (_Bool)1;
          
#line 461 
          lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c",462,"suspicious rcu_dereference_protected() usage");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 461 
  c_ops = bp->cnic_ops;
  
#line 463 
  if (c_ops != (struct cnic_ops *)0) {
    
#line 464 
    if ((bp->flags & 1024U) == 0U) {
      
#line 465 
      struct bnx2_napi *bnapi = & bp->bnx2_napi[0];
      
#line 467 
      bnapi->cnic_tag = bnapi->last_status_idx;
    }
    else ;
    
#line 469 
    info.cmd = 2;
    
#line 470 
    (*(c_ops->cnic_ctl))(bp->cnic_data,& info);
  }
  else ;
  
#line 472 
  ldv_mutex_unlock_84(& bp->cnic_lock);
  
#line 473 
  return;
}


#line 490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_read_phy(struct bnx2 *bp, u32 reg, u32 *val)
{
  u32 val1;
  int i;
  int ret;
  
#line 495 
  if ((bp->phy_flags & 256U) != 0U) {
    
#line 496 
    val1 = readl((void const volatile *)(bp->regview + 5300U));
    
#line 497 
    val1 &= 4294967279U;
    
#line 499 
    writel(val1,(void volatile *)(bp->regview + 5300U));
    
#line 500 
    readl((void const volatile *)(bp->regview + 5300U));
    
#line 502 
    __const_udelay(171800UL);
  }
  else ;
  
#line 505 
  val1 = ((bp->phy_addr << 21) | (reg << 16)) | 1744830464U;
  
#line 508 
  writel(val1,(void volatile *)(bp->regview + 5292U));
  
#line 510 
  i = 0;
  
#line 510 
  goto ldv_56873;
  ldv_56872: 
#line 511 
  ;
  
#line 511 
  __const_udelay(42950UL);
  
#line 513 
  val1 = readl((void const volatile *)(bp->regview + 5292U));
  
#line 514 
  if (((long)val1 & 536870912L) == 0L) {
    
#line 515 
    __const_udelay(21475UL);
    
#line 517 
    val1 = readl((void const volatile *)(bp->regview + 5292U));
    
#line 518 
    val1 &= 65535U;
    
#line 520 
    goto ldv_56871;
  }
  else ;
  
#line 510 
  i += 1;
  ldv_56873: 
#line 511 
  ;
  
#line 510 
  if (i <= 49) 
#line 512 
               goto ldv_56872; else 
#line 515 
                                    goto ldv_56871;
  ldv_56871: 
#line 516 
  ;
  
#line 524 
  if (((long)val1 & 536870912L) != 0L) {
    
#line 525 
    *val = 0U;
    
#line 526 
    ret = -16;
  }
  else {
    
#line 529 
    *val = val1;
    
#line 530 
    ret = 0;
  }
  
#line 533 
  if ((bp->phy_flags & 256U) != 0U) {
    
#line 534 
    val1 = readl((void const volatile *)(bp->regview + 5300U));
    
#line 535 
    val1 |= 16U;
    
#line 537 
    writel(val1,(void volatile *)(bp->regview + 5300U));
    
#line 538 
    readl((void const volatile *)(bp->regview + 5300U));
    
#line 540 
    __const_udelay(171800UL);
  }
  else ;
  
#line 543 
  return ret;
}


#line 547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_write_phy(struct bnx2 *bp, u32 reg, u32 val)
{
  u32 val1;
  int i;
  int ret;
  
#line 552 
  if ((bp->phy_flags & 256U) != 0U) {
    
#line 553 
    val1 = readl((void const volatile *)(bp->regview + 5300U));
    
#line 554 
    val1 &= 4294967279U;
    
#line 556 
    writel(val1,(void volatile *)(bp->regview + 5300U));
    
#line 557 
    readl((void const volatile *)(bp->regview + 5300U));
    
#line 559 
    __const_udelay(171800UL);
  }
  else ;
  
#line 562 
  val1 = (((bp->phy_addr << 21) | (reg << 16)) | val) | 1677721600U;
  
#line 565 
  writel(val1,(void volatile *)(bp->regview + 5292U));
  
#line 567 
  i = 0;
  
#line 567 
  goto ldv_56884;
  ldv_56883: 
#line 568 
  ;
  
#line 568 
  __const_udelay(42950UL);
  
#line 570 
  val1 = readl((void const volatile *)(bp->regview + 5292U));
  
#line 571 
  if (((long)val1 & 536870912L) == 0L) {
    
#line 572 
    __const_udelay(21475UL);
    
#line 573 
    goto ldv_56882;
  }
  else ;
  
#line 567 
  i += 1;
  ldv_56884: 
#line 568 
  ;
  
#line 567 
  if (i <= 49) 
#line 569 
               goto ldv_56883; else 
#line 572 
                                    goto ldv_56882;
  ldv_56882: 
#line 573 
  ;
  
#line 577 
  if (((long)val1 & 536870912L) != 0L) 
#line 578 
                                       ret = -16; else 
#line 580 
                                                       ret = 0;
  
#line 582 
  if ((bp->phy_flags & 256U) != 0U) {
    
#line 583 
    val1 = readl((void const volatile *)(bp->regview + 5300U));
    
#line 584 
    val1 |= 16U;
    
#line 586 
    writel(val1,(void volatile *)(bp->regview + 5300U));
    
#line 587 
    readl((void const volatile *)(bp->regview + 5300U));
    
#line 589 
    __const_udelay(171800UL);
  }
  else ;
  
#line 592 
  return ret;
}


#line 596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_disable_int(struct bnx2 *bp)
{
  int i;
  struct bnx2_napi *bnapi;
  
#line 601 
  i = 0;
  
#line 601 
  goto ldv_56891;
  ldv_56890: 
#line 602 
  ;
  
#line 602 
  bnapi = & bp->bnx2_napi[i];
  
#line 603 
  writel(bnapi->int_num | 262144U,(void volatile *)(bp->regview + 132U));
  
#line 601 
  i += 1;
  ldv_56891: 
#line 602 
  ;
  
#line 601 
  if (bp->irq_nvecs > i) 
#line 603 
                         goto ldv_56890; else 
#line 606 
                                              goto ldv_56892;
  ldv_56892: 
#line 607 
  ;
  
#line 606 
  readl((void const volatile *)(bp->regview + 132U));
  
#line 607 
  return;
}


#line 610  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_enable_int(struct bnx2 *bp)
{
  int i;
  struct bnx2_napi *bnapi;
  
#line 615 
  i = 0;
  
#line 615 
  goto ldv_56899;
  ldv_56898: 
#line 616 
  ;
  
#line 616 
  bnapi = & bp->bnx2_napi[i];
  
#line 618 
  writel((bnapi->int_num | bnapi->last_status_idx) | 327680U,(void volatile *)(bp->regview + 132U));
  
#line 623 
  writel((bnapi->int_num | bnapi->last_status_idx) | 65536U,(void volatile *)(bp->regview + 132U));
  
#line 615 
  i += 1;
  ldv_56899: 
#line 616 
  ;
  
#line 615 
  if (bp->irq_nvecs > i) 
#line 617 
                         goto ldv_56898; else 
#line 620 
                                              goto ldv_56900;
  ldv_56900: 
#line 621 
  ;
  
#line 627 
  writel(bp->hc_cmd | 65536U,(void volatile *)(bp->regview + 26624U));
  
#line 628 
  return;
}


#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_disable_int_sync(struct bnx2 *bp)
{
  int i;
  int tmp_0;
  bool tmp;
  
#line 635 
  atomic_inc(& bp->intr_sem);
  
#line 636 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 636 
  if (tmp) 
#line 636 
           tmp_0 = 0; else 
#line 636 
                           tmp_0 = 1;
  
#line 636 
  if (tmp_0) 
#line 637 
             goto return_label; else ;
  
#line 639 
  bnx2_disable_int(bp);
  
#line 640 
  i = 0;
  
#line 640 
  goto ldv_56906;
  ldv_56905: 
#line 641 
  ;
  
#line 641 
  synchronize_irq(bp->irq_tbl[i].vector);
  
#line 640 
  i += 1;
  ldv_56906: 
#line 641 
  ;
  
#line 640 
  if (bp->irq_nvecs > i) 
#line 642 
                         goto ldv_56905; else 
#line 645 
                                              goto ldv_56907;
  ldv_56907: 
#line 646 
  ;
  return_label: 
#line 647 
                return;
}


#line 645  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_napi_disable(struct bnx2 *bp)
{
  int i;
  
#line 649 
  i = 0;
  
#line 649 
  goto ldv_56913;
  ldv_56912: 
#line 650 
  ;
  
#line 650 
  napi_disable(& bp->bnx2_napi[i].napi);
  
#line 649 
  i += 1;
  ldv_56913: 
#line 650 
  ;
  
#line 649 
  if (bp->irq_nvecs > i) 
#line 651 
                         goto ldv_56912; else 
#line 654 
                                              goto ldv_56914;
  ldv_56914: 
#line 655 
  ;
  
#line 656 
  return;
}


#line 654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_napi_enable(struct bnx2 *bp)
{
  int i;
  
#line 658 
  i = 0;
  
#line 658 
  goto ldv_56920;
  ldv_56919: 
#line 659 
  ;
  
#line 659 
  napi_enable(& bp->bnx2_napi[i].napi);
  
#line 658 
  i += 1;
  ldv_56920: 
#line 659 
  ;
  
#line 658 
  if (bp->irq_nvecs > i) 
#line 660 
                         goto ldv_56919; else 
#line 663 
                                              goto ldv_56921;
  ldv_56921: 
#line 664 
  ;
  
#line 665 
  return;
}


#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_netif_stop(struct bnx2 *bp, bool stop_cnic)
{
  bool tmp;
  
#line 665 
  if ((int)stop_cnic != 0) 
#line 666 
                           bnx2_cnic_stop(bp); else ;
  
#line 667 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 667 
  if ((int)tmp != 0) {
    
#line 668 
    bnx2_napi_disable(bp);
    
#line 669 
    netif_tx_disable(bp->dev);
  }
  else ;
  
#line 671 
  bnx2_disable_int_sync(bp);
  
#line 672 
  netif_carrier_off(bp->dev);
  
#line 673 
  return;
}


#line 676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_netif_start(struct bnx2 *bp, bool start_cnic)
{
  int tmp_0;
  
#line 678 
  tmp_0 = atomic_dec_and_test(& bp->intr_sem);
  
#line 678 
  if (tmp_0 != 0) {
    bool tmp;
    
#line 679 
    tmp = netif_running((struct net_device const *)bp->dev);
    
#line 679 
    if ((int)tmp != 0) {
      
#line 680 
      netif_tx_wake_all_queues(bp->dev);
      
#line 681 
      ldv_spin_lock_bh_85(& bp->phy_lock);
      
#line 682 
      if ((unsigned int)bp->link_up != 0U) 
#line 683 
                                           netif_carrier_on(bp->dev); else ;
      
#line 684 
      ldv_spin_unlock_bh_86(& bp->phy_lock);
      
#line 685 
      bnx2_napi_enable(bp);
      
#line 686 
      bnx2_enable_int(bp);
      
#line 687 
      if ((int)start_cnic != 0) 
#line 688 
                                bnx2_cnic_start(bp); else ;
    }
    else ;
  }
  else ;
  
#line 690 
  return;
}


#line 694  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_tx_mem(struct bnx2 *bp)
{
  int i;
  
#line 698 
  i = 0;
  
#line 698 
  goto ldv_56937;
  ldv_56936: 
#line 699 
  ;
  {
    
#line 699 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 700 
    struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
    
#line 702 
    if (txr->tx_desc_ring != (struct bnx2_tx_bd *)0) {
      
#line 703 
      dma_free_attrs(& (bp->pdev)->dev,4096UL,(void *)txr->tx_desc_ring,txr->tx_desc_mapping,(struct dma_attrs *)0);
      
#line 706 
      txr->tx_desc_ring = (struct bnx2_tx_bd *)0;
    }
    else ;
    
#line 708 
    kfree((void const *)txr->tx_buf_ring);
    
#line 709 
    txr->tx_buf_ring = (struct bnx2_sw_tx_bd *)0;
  }
  
#line 698 
  i += 1;
  ldv_56937: 
#line 699 
  ;
  
#line 698 
  if ((int)bp->num_tx_rings > i) 
#line 700 
                                 goto ldv_56936; else 
#line 703 
                                                      goto ldv_56938;
  ldv_56938: 
#line 704 
  ;
  
#line 705 
  return;
}


#line 714  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_rx_mem(struct bnx2 *bp)
{
  int i;
  
#line 718 
  i = 0;
  
#line 718 
  goto ldv_56953;
  ldv_56952: 
#line 719 
  ;
  {
    int j;
    
#line 719 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 720 
    struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
    
#line 723 
    j = 0;
    
#line 723 
    goto ldv_56947;
    ldv_56946: 
#line 724 
    ;
    
#line 724 
    if (rxr->rx_desc_ring[j] != (struct bnx2_rx_bd *)0) 
#line 725 
                                                        dma_free_attrs(& (bp->pdev)->dev,4096UL,(void *)rxr->rx_desc_ring[j],rxr->rx_desc_mapping[j],(struct dma_attrs *)0); else ;
    
#line 728 
    rxr->rx_desc_ring[j] = (struct bnx2_rx_bd *)0;
    
#line 723 
    j += 1;
    ldv_56947: 
#line 724 
    ;
    
#line 723 
    if (bp->rx_max_ring > j) 
#line 725 
                             goto ldv_56946; else 
#line 728 
                                                  goto ldv_56948;
    ldv_56948: 
#line 729 
    ;
    
#line 730 
    vfree((void const *)rxr->rx_buf_ring);
    
#line 731 
    rxr->rx_buf_ring = (struct bnx2_sw_bd *)0;
    
#line 733 
    j = 0;
    
#line 733 
    goto ldv_56950;
    ldv_56949: 
#line 734 
    ;
    
#line 734 
    if (rxr->rx_pg_desc_ring[j] != (struct bnx2_rx_bd *)0) 
#line 735 
                                                           dma_free_attrs(& (bp->pdev)->dev,4096UL,(void *)rxr->rx_pg_desc_ring[j],rxr->rx_pg_desc_mapping[j],(struct dma_attrs *)0); else ;
    
#line 738 
    rxr->rx_pg_desc_ring[j] = (struct bnx2_rx_bd *)0;
    
#line 733 
    j += 1;
    ldv_56950: 
#line 734 
    ;
    
#line 733 
    if (bp->rx_max_pg_ring > j) 
#line 735 
                                goto ldv_56949; else 
#line 738 
                                                     goto ldv_56951;
    ldv_56951: 
#line 739 
    ;
    
#line 740 
    vfree((void const *)rxr->rx_pg_ring);
    
#line 741 
    rxr->rx_pg_ring = (struct bnx2_sw_pg *)0;
  }
  
#line 718 
  i += 1;
  ldv_56953: 
#line 719 
  ;
  
#line 718 
  if ((int)bp->num_rx_rings > i) 
#line 720 
                                 goto ldv_56952; else 
#line 723 
                                                      goto ldv_56954;
  ldv_56954: 
#line 724 
  ;
  
#line 725 
  return;
}


#line 746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_alloc_tx_mem(struct bnx2 *bp)
{
  int __retres;
  int i;
  
#line 750 
  i = 0;
  
#line 750 
  goto ldv_56962;
  ldv_56961: 
#line 751 
  ;
  {
    
#line 751 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 752 
    struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
    
#line 754 
    txr->tx_buf_ring = (struct bnx2_sw_tx_bd *)kzalloc(6144UL,208U);
    
#line 755 
    if (txr->tx_buf_ring == (struct bnx2_sw_tx_bd *)0) {
      
#line 756 
      __retres = -12;
      
#line 756 
      goto return_label;
    }
    else ;
    
#line 759 
    txr->tx_desc_ring = (struct bnx2_tx_bd *)dma_alloc_attrs(& (bp->pdev)->dev,4096UL,& txr->tx_desc_mapping,208U,(struct dma_attrs *)0);
    
#line 761 
    if (txr->tx_desc_ring == (struct bnx2_tx_bd *)0) {
      
#line 762 
      __retres = -12;
      
#line 762 
      goto return_label;
    }
    else ;
  }
  
#line 750 
  i += 1;
  ldv_56962: 
#line 751 
  ;
  
#line 750 
  if ((int)bp->num_tx_rings > i) 
#line 752 
                                 goto ldv_56961; else 
#line 755 
                                                      goto ldv_56963;
  ldv_56963: 
#line 756 
  ;
  
#line 764 
  __retres = 0;
  return_label: 
#line 764 
                return __retres;
}


#line 768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_alloc_rx_mem(struct bnx2 *bp)
{
  int __retres;
  int i;
  
#line 772 
  i = 0;
  
#line 772 
  goto ldv_56978;
  ldv_56977: 
#line 773 
  ;
  {
    int j;
    
#line 773 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 774 
    struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
    
#line 778 
    rxr->rx_buf_ring = (struct bnx2_sw_bd *)vzalloc((unsigned long)bp->rx_max_ring * 4096UL);
    
#line 779 
    if (rxr->rx_buf_ring == (struct bnx2_sw_bd *)0) {
      
#line 780 
      __retres = -12;
      
#line 780 
      goto return_label;
    }
    else ;
    
#line 782 
    j = 0;
    
#line 782 
    goto ldv_56972;
    ldv_56971: 
#line 783 
    ;
    
#line 784 
    rxr->rx_desc_ring[j] = (struct bnx2_rx_bd *)dma_alloc_attrs(& (bp->pdev)->dev,4096UL,& rxr->rx_desc_mapping[j],208U,(struct dma_attrs *)0);
    
#line 788 
    if (rxr->rx_desc_ring[j] == (struct bnx2_rx_bd *)0) {
      
#line 789 
      __retres = -12;
      
#line 789 
      goto return_label;
    }
    else ;
    
#line 782 
    j += 1;
    ldv_56972: 
#line 783 
    ;
    
#line 782 
    if (bp->rx_max_ring > j) 
#line 784 
                             goto ldv_56971; else 
#line 787 
                                                  goto ldv_56973;
    ldv_56973: 
#line 788 
    ;
    
#line 793 
    if (bp->rx_pg_ring_size != 0) {
      
#line 794 
      rxr->rx_pg_ring = (struct bnx2_sw_pg *)vzalloc((unsigned long)bp->rx_max_pg_ring * 4096UL);
      
#line 796 
      if (rxr->rx_pg_ring == (struct bnx2_sw_pg *)0) {
        
#line 797 
        __retres = -12;
        
#line 797 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 801 
    j = 0;
    
#line 801 
    goto ldv_56975;
    ldv_56974: 
#line 802 
    ;
    
#line 803 
    rxr->rx_pg_desc_ring[j] = (struct bnx2_rx_bd *)dma_alloc_attrs(& (bp->pdev)->dev,4096UL,& rxr->rx_pg_desc_mapping[j],208U,(struct dma_attrs *)0);
    
#line 807 
    if (rxr->rx_pg_desc_ring[j] == (struct bnx2_rx_bd *)0) {
      
#line 808 
      __retres = -12;
      
#line 808 
      goto return_label;
    }
    else ;
    
#line 801 
    j += 1;
    ldv_56975: 
#line 802 
    ;
    
#line 801 
    if (bp->rx_max_pg_ring > j) 
#line 803 
                                goto ldv_56974; else 
#line 806 
                                                     goto ldv_56976;
    ldv_56976: 
#line 807 
    ;
  }
  
#line 772 
  i += 1;
  ldv_56978: 
#line 773 
  ;
  
#line 772 
  if ((int)bp->num_rx_rings > i) 
#line 774 
                                 goto ldv_56977; else 
#line 777 
                                                      goto ldv_56979;
  ldv_56979: 
#line 778 
  ;
  
#line 812 
  __retres = 0;
  return_label: 
#line 812 
                return __retres;
}


#line 816  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_mem(struct bnx2 *bp)
{
  int i;
  
#line 819 
  struct bnx2_napi *bnapi = & bp->bnx2_napi[0];
  
#line 821 
  bnx2_free_tx_mem(bp);
  
#line 822 
  bnx2_free_rx_mem(bp);
  
#line 824 
  i = 0;
  
#line 824 
  goto ldv_56986;
  ldv_56985: 
#line 825 
  ;
  
#line 825 
  if (bp->ctx_blk[i] != (void *)0) {
    
#line 826 
    dma_free_attrs(& (bp->pdev)->dev,4096UL,bp->ctx_blk[i],bp->ctx_blk_mapping[i],(struct dma_attrs *)0);
    
#line 829 
    bp->ctx_blk[i] = (void *)0;
  }
  else ;
  
#line 824 
  i += 1;
  ldv_56986: 
#line 825 
  ;
  
#line 824 
  if (bp->ctx_pages > i) 
#line 826 
                         goto ldv_56985; else 
#line 829 
                                              goto ldv_56987;
  ldv_56987: 
#line 830 
  ;
  
#line 832 
  if (bnapi->status_blk.msi != (struct status_block *)0) {
    
#line 833 
    dma_free_attrs(& (bp->pdev)->dev,(unsigned long)bp->status_stats_size,(void *)bnapi->status_blk.msi,bp->status_blk_mapping,(struct dma_attrs *)0);
    
#line 836 
    bnapi->status_blk.msi = (struct status_block *)0;
    
#line 837 
    bp->stats_blk = (struct statistics_block *)0;
  }
  else ;
  
#line 839 
  return;
}


#line 842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_alloc_mem(struct bnx2 *bp)
{
  int __retres;
  int i;
  int status_blk_size;
  int err;
  struct bnx2_napi *bnapi;
  void *status_blk;
  
#line 849 
  status_blk_size = 64;
  
#line 850 
  if ((bp->flags & 4U) != 0U) 
#line 851 
                              status_blk_size = 1152; else ;
  
#line 853 
  bp->status_stats_size = (int)((unsigned int)status_blk_size + 324U);
  
#line 856 
  status_blk = dma_zalloc_coherent(& (bp->pdev)->dev,(unsigned long)bp->status_stats_size,& bp->status_blk_mapping,208U);
  
#line 858 
  if (status_blk == (void *)0) 
#line 859 
                               goto alloc_mem_err; else ;
  
#line 861 
  bnapi = & bp->bnx2_napi[0];
  
#line 862 
  bnapi->status_blk.msi = (struct status_block *)status_blk;
  
#line 863 
  bnapi->hw_tx_cons_ptr = & (bnapi->status_blk.msi)->status_tx_quick_consumer_index0;
  
#line 865 
  bnapi->hw_rx_cons_ptr = & (bnapi->status_blk.msi)->status_rx_quick_consumer_index0;
  
#line 867 
  if ((bp->flags & 4U) != 0U) {
    
#line 868 
    i = 1;
    
#line 868 
    goto ldv_56999;
    ldv_56998: 
#line 869 
    ;
    {
      struct status_block_msix *sblk;
      
#line 871 
      bnapi = & bp->bnx2_napi[i];
      
#line 873 
      sblk = (struct status_block_msix *)(status_blk + i * 128);
      
#line 874 
      bnapi->status_blk.msix = sblk;
      
#line 875 
      bnapi->hw_tx_cons_ptr = & sblk->status_tx_quick_consumer_index;
      
#line 877 
      bnapi->hw_rx_cons_ptr = & sblk->status_rx_quick_consumer_index;
      
#line 879 
      bnapi->int_num = (unsigned int)(i << 24);
    }
    
#line 868 
    i += 1;
    ldv_56999: 
#line 869 
    ;
    
#line 868 
    if (bp->irq_nvecs > i) 
#line 870 
                           goto ldv_56998; else 
#line 873 
                                                goto ldv_57000;
    ldv_57000: 
#line 874 
    ;
  }
  else ;
  
#line 883 
  bp->stats_blk = (struct statistics_block *)(status_blk + status_blk_size);
  
#line 885 
  bp->stats_blk_mapping = bp->status_blk_mapping + (unsigned long long)status_blk_size;
  
#line 887 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 888 
    bp->ctx_pages = 2;
    
#line 889 
    if (bp->ctx_pages == 0) 
#line 890 
                            bp->ctx_pages = 1; else ;
    
#line 891 
    i = 0;
    
#line 891 
    goto ldv_57002;
    ldv_57001: 
#line 892 
    ;
    
#line 892 
    bp->ctx_blk[i] = dma_alloc_attrs(& (bp->pdev)->dev,4096UL,& bp->ctx_blk_mapping[i],208U,(struct dma_attrs *)0);
    
#line 896 
    if (bp->ctx_blk[i] == (void *)0) 
#line 897 
                                     goto alloc_mem_err; else ;
    
#line 891 
    i += 1;
    ldv_57002: 
#line 892 
    ;
    
#line 891 
    if (bp->ctx_pages > i) 
#line 893 
                           goto ldv_57001; else 
#line 896 
                                                goto ldv_57003;
    ldv_57003: 
#line 897 
    ;
  }
  else ;
  
#line 901 
  err = bnx2_alloc_rx_mem(bp);
  
#line 902 
  if (err != 0) 
#line 903 
                goto alloc_mem_err; else ;
  
#line 905 
  err = bnx2_alloc_tx_mem(bp);
  
#line 906 
  if (err != 0) 
#line 907 
                goto alloc_mem_err; else ;
  
#line 909 
  __retres = 0;
  
#line 909 
  goto return_label;
  alloc_mem_err: 
#line 911 
  ;
  
#line 912 
  bnx2_free_mem(bp);
  
#line 913 
  __retres = -12;
  return_label: 
#line 913 
                return __retres;
}


#line 917  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_report_fw_link(struct bnx2 *bp)
{
  
#line 919 
  u32 fw_link_status = 0U;
  
#line 921 
  if ((bp->phy_flags & 2048U) != 0U) 
#line 922 
                                     goto return_label; else ;
  
#line 924 
  if ((unsigned int)bp->link_up != 0U) {
    u32 bmsr;
    
#line 927 
    switch ((int)bp->line_speed) {
      case 10: 
#line 928 
      ;
      
#line 929 
      if ((unsigned int)bp->duplex == 0U) 
#line 930 
                                          fw_link_status = 2U; else 
#line 932 
                                                                    fw_link_status = 4U;
      
#line 933 
      goto ldv_57010;
      case 100: 
#line 934 
      ;
      
#line 935 
      if ((unsigned int)bp->duplex == 0U) 
#line 936 
                                          fw_link_status = 6U; else 
#line 938 
                                                                    fw_link_status = 10U;
      
#line 939 
      goto ldv_57010;
      case 1000: 
#line 940 
      ;
      
#line 941 
      if ((unsigned int)bp->duplex == 0U) 
#line 942 
                                          fw_link_status = 12U; else 
                                                                  
#line 944 
                                                                  fw_link_status = 14U;
      
#line 945 
      goto ldv_57010;
      case 2500: 
#line 946 
      ;
      
#line 947 
      if ((unsigned int)bp->duplex == 0U) 
#line 948 
                                          fw_link_status = 16U; else 
                                                                  
#line 950 
                                                                  fw_link_status = 18U;
      
#line 951 
      goto ldv_57010;
    }
    ldv_57010: 
#line 954 
    ;
    
#line 954 
    fw_link_status |= 1U;
    
#line 956 
    if ((unsigned int)bp->autoneg != 0U) {
      
#line 957 
      fw_link_status |= 32U;
      
#line 959 
      bnx2_read_phy(bp,bp->mii_bmsr,& bmsr);
      
#line 960 
      bnx2_read_phy(bp,bp->mii_bmsr,& bmsr);
      
#line 962 
      if ((bmsr & 32U) == 0U || (bp->phy_flags & 4U) != 0U) 
#line 964 
                                                            fw_link_status |= 128U; else 
                                                                    
#line 966 
                                                                    fw_link_status |= 64U;
    }
    else ;
  }
  else 
#line 970 
       fw_link_status = 0U;
  
#line 972 
  bnx2_shmem_wr(bp,12U,fw_link_status);
  return_label: 
#line 973 
                return;
}


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static char *bnx2_xceiver_str(struct bnx2 *bp)
{
  char *tmp_0;
  
#line 978 
  if ((unsigned int)bp->phy_port != 3U) {
    char *tmp;
    
#line 978 
    if ((bp->phy_flags & 1U) != 0U) 
#line 978 
                                    tmp = (char *)"Remote Copper"; else 
                                                                    
#line 978 
                                                                    tmp = (char *)"Copper";
    
#line 978 
    tmp_0 = tmp;
  }
  else 
#line 978 
       tmp_0 = (char *)"SerDes";
  
#line 978 
  return tmp_0;
}


#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_report_link(struct bnx2 *bp)
{
  
#line 986 
  if ((unsigned int)bp->link_up != 0U) {
    char *tmp;
    char *tmp_0;
    
#line 987 
    netif_carrier_on(bp->dev);
    
#line 990 
    if ((unsigned int)bp->duplex == 1U) 
#line 990 
                                        tmp = (char *)"full"; else 
#line 990 
                                                                   tmp = (char *)"half";
    
#line 988 
    ;
    
#line 988 
    tmp_0 = bnx2_xceiver_str(bp);
    
#line 988 
    ;
    
#line 988 
    netdev_info((struct net_device const *)bp->dev,"NIC %s Link is Up, %d Mbps %s duplex",tmp_0,(int)bp->line_speed,tmp);
    
#line 993 
    if ((unsigned int)bp->flow_ctrl != 0U) {
      
#line 994 
      if (((int)bp->flow_ctrl & 2) != 0) {
        
#line 995 
        printk("");
        
#line 996 
        if (((int)bp->flow_ctrl & 1) != 0) 
#line 997 
                                           printk(""); else ;
      }
      else 
#line 1000 
           printk("");
      
#line 1002 
      printk("");
    }
    else ;
    
#line 1004 
    printk("");
  }
  else {
    char *tmp_1;
    
#line 1006 
    netif_carrier_off(bp->dev);
    
#line 1007 
    tmp_1 = bnx2_xceiver_str(bp);
    
#line 1007 
    ;
    
#line 1007 
    netdev_err((struct net_device const *)bp->dev,"NIC %s Link is Down\n",tmp_1);
  }
  
#line 1011 
  bnx2_report_fw_link(bp);
  
#line 1012 
  return;
}


#line 1015  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_resolve_flow_ctrl(struct bnx2 *bp)
{
  u32 local_adv;
  u32 remote_adv;
  
#line 1019 
  bp->flow_ctrl = (unsigned char)0U;
  
#line 1020 
  if (((int)bp->autoneg & 3) != 3) {
    
#line 1023 
    if ((unsigned int)bp->duplex == 1U) 
#line 1024 
                                        bp->flow_ctrl = bp->req_flow_ctrl; else ;
    
#line 1026 
    goto return_label;
  }
  else ;
  
#line 1029 
  if ((unsigned int)bp->duplex != 1U) 
#line 1030 
                                      goto return_label; else ;
  
#line 1033 
  if ((bp->phy_flags & 1U) != 0U && (bp->chip_id & 4294901760U) == 1460142080U) {
    u32 val;
    
#line 1037 
    bnx2_read_phy(bp,20U,& val);
    
#line 1038 
    if ((val & 32U) != 0U) 
#line 1039 
                           bp->flow_ctrl = (unsigned char)((unsigned int)bp->flow_ctrl | 1U); else ;
    
#line 1040 
    if ((val & 64U) != 0U) 
#line 1041 
                           bp->flow_ctrl = (unsigned char)((unsigned int)bp->flow_ctrl | 2U); else ;
    
#line 1042 
    goto return_label;
  }
  else ;
  
#line 1045 
  bnx2_read_phy(bp,bp->mii_adv,& local_adv);
  
#line 1046 
  bnx2_read_phy(bp,bp->mii_lpa,& remote_adv);
  
#line 1048 
  if ((bp->phy_flags & 1U) != 0U) {
    
#line 1049 
    u32 new_local_adv = 0U;
    
#line 1050 
    u32 new_remote_adv = 0U;
    
#line 1052 
    if ((local_adv & 128U) != 0U) 
#line 1053 
                                  new_local_adv |= 1024U; else ;
    
#line 1054 
    if ((local_adv & 256U) != 0U) 
#line 1055 
                                  new_local_adv |= 2048U; else ;
    
#line 1056 
    if ((remote_adv & 128U) != 0U) 
#line 1057 
                                   new_remote_adv |= 1024U; else ;
    
#line 1058 
    if ((remote_adv & 256U) != 0U) 
#line 1059 
                                   new_remote_adv |= 2048U; else ;
    
#line 1061 
    local_adv = new_local_adv;
    
#line 1062 
    remote_adv = new_remote_adv;
  }
  else ;
  
#line 1066 
  if ((local_adv & 1024U) != 0U) {
    
#line 1067 
    if ((local_adv & 2048U) != 0U) {
      
#line 1068 
      if ((remote_adv & 1024U) != 0U) 
#line 1069 
                                      bp->flow_ctrl = (unsigned char)3U;
      else 
        
#line 1071 
        if ((remote_adv & 2048U) != 0U) 
#line 1072 
                                        bp->flow_ctrl = (unsigned char)2U; else ;
    }
    else 
      
#line 1076 
      if ((remote_adv & 1024U) != 0U) 
#line 1077 
                                      bp->flow_ctrl = (unsigned char)3U; else ;
  }
  else 
    
#line 1081 
    if ((local_adv & 2048U) != 0U) {
      
#line 1082 
      if ((remote_adv & 1024U) != 0U && (remote_adv & 2048U) != 0U) 
#line 1085 
                                                                    bp->flow_ctrl = (unsigned char)1U; else ;
    }
    else ;
  return_label: 
#line 1086 
                return;
}


#line 1091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_5709s_linkup(struct bnx2 *bp)
{
  int __retres;
  u32 val;
  u32 speed;
  
#line 1095 
  bp->link_up = (unsigned char)1U;
  
#line 1097 
  bnx2_write_phy(bp,31U,33056U);
  
#line 1098 
  bnx2_read_phy(bp,27U,& val);
  
#line 1099 
  bnx2_write_phy(bp,31U,65504U);
  
#line 1101 
  if (((int)bp->autoneg & 1) == 0) {
    
#line 1102 
    bp->line_speed = bp->req_line_speed;
    
#line 1103 
    bp->duplex = bp->req_duplex;
    
#line 1104 
    __retres = 0;
    
#line 1104 
    goto return_label;
  }
  else ;
  
#line 1106 
  speed = val & 16128U;
  
#line 1107 
  switch (speed) {
    case (u32)0: 
#line 1108 
    ;
    
#line 1109 
    bp->line_speed = (unsigned short)10U;
    
#line 1110 
    goto ldv_57034;
    case (u32)256: 
#line 1111 
    ;
    
#line 1112 
    bp->line_speed = (unsigned short)100U;
    
#line 1113 
    goto ldv_57034;
    case (u32)512: 
#line 1114 
    ;
    case (u32)3328: 
#line 1115 
    ;
    
#line 1116 
    bp->line_speed = (unsigned short)1000U;
    
#line 1117 
    goto ldv_57034;
    case (u32)768: 
#line 1118 
    ;
    
#line 1119 
    bp->line_speed = (unsigned short)2500U;
    
#line 1120 
    goto ldv_57034;
  }
  ldv_57034: 
#line 1122 
  ;
  
#line 1122 
  if ((val & 8U) != 0U) 
#line 1123 
                        bp->duplex = (unsigned char)1U; else 
#line 1125 
                                                             bp->duplex = (unsigned char)0U;
  
#line 1126 
  __retres = 0;
  return_label: 
#line 1126 
                return __retres;
}


#line 1130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_5708s_linkup(struct bnx2 *bp)
{
  int __retres;
  u32 val;
  
#line 1134 
  bp->link_up = (unsigned char)1U;
  
#line 1135 
  bnx2_read_phy(bp,20U,& val);
  
#line 1136 
  switch (val & 24U) {
    case (unsigned int)0: 
#line 1137 
    ;
    
#line 1138 
    bp->line_speed = (unsigned short)10U;
    
#line 1139 
    goto ldv_57044;
    case (unsigned int)8: 
#line 1140 
    ;
    
#line 1141 
    bp->line_speed = (unsigned short)100U;
    
#line 1142 
    goto ldv_57044;
    case (unsigned int)16: 
#line 1143 
    ;
    
#line 1144 
    bp->line_speed = (unsigned short)1000U;
    
#line 1145 
    goto ldv_57044;
    case (unsigned int)24: 
#line 1146 
    ;
    
#line 1147 
    bp->line_speed = (unsigned short)2500U;
    
#line 1148 
    goto ldv_57044;
  }
  ldv_57044: 
#line 1150 
  ;
  
#line 1150 
  if ((val & 4U) != 0U) 
#line 1151 
                        bp->duplex = (unsigned char)1U; else 
#line 1153 
                                                             bp->duplex = (unsigned char)0U;
  
#line 1155 
  __retres = 0;
  
#line 1155 
  return __retres;
}


#line 1159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_5706s_linkup(struct bnx2 *bp)
{
  int __retres;
  u32 bmcr;
  u32 local_adv;
  u32 remote_adv;
  u32 common;
  
#line 1163 
  bp->link_up = (unsigned char)1U;
  
#line 1164 
  bp->line_speed = (unsigned short)1000U;
  
#line 1166 
  bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  
#line 1167 
  if ((bmcr & 256U) != 0U) 
#line 1168 
                           bp->duplex = (unsigned char)1U; else 
#line 1171 
                                                                bp->duplex = (unsigned char)0U;
  
#line 1174 
  if ((bmcr & 4096U) == 0U) {
    
#line 1175 
    __retres = 0;
    
#line 1175 
    goto return_label;
  }
  else ;
  
#line 1178 
  bnx2_read_phy(bp,bp->mii_adv,& local_adv);
  
#line 1179 
  bnx2_read_phy(bp,bp->mii_lpa,& remote_adv);
  
#line 1181 
  common = local_adv & remote_adv;
  
#line 1182 
  if ((common & 96U) != 0U) 
    
#line 1184 
    if ((common & 32U) != 0U) 
#line 1185 
                              bp->duplex = (unsigned char)1U; else 
#line 1188 
                                                                   bp->duplex = (unsigned char)0U;
  else ;
  
#line 1192 
  __retres = 0;
  return_label: 
#line 1192 
                return __retres;
}


#line 1196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_copper_linkup(struct bnx2 *bp)
{
  int __retres;
  u32 bmcr;
  
#line 1200 
  bp->phy_flags &= 4294950911U;
  
#line 1202 
  bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  
#line 1203 
  if ((bmcr & 4096U) != 0U) {
    u32 local_adv;
    u32 remote_adv;
    u32 common;
    
#line 1206 
    bnx2_read_phy(bp,9U,& local_adv);
    
#line 1207 
    bnx2_read_phy(bp,10U,& remote_adv);
    
#line 1209 
    common = (remote_adv >> 2) & local_adv;
    
#line 1210 
    if ((common & 512U) != 0U) {
      
#line 1211 
      bp->line_speed = (unsigned short)1000U;
      
#line 1212 
      bp->duplex = (unsigned char)1U;
    }
    else 
      
#line 1214 
      if ((common & 256U) != 0U) {
        
#line 1215 
        bp->line_speed = (unsigned short)1000U;
        
#line 1216 
        bp->duplex = (unsigned char)0U;
      }
      else {
        
#line 1219 
        bnx2_read_phy(bp,bp->mii_adv,& local_adv);
        
#line 1220 
        bnx2_read_phy(bp,bp->mii_lpa,& remote_adv);
        
#line 1222 
        common = local_adv & remote_adv;
        
#line 1223 
        if ((common & 256U) != 0U) {
          
#line 1224 
          bp->line_speed = (unsigned short)100U;
          
#line 1225 
          bp->duplex = (unsigned char)1U;
        }
        else 
          
#line 1227 
          if ((common & 128U) != 0U) {
            
#line 1228 
            bp->line_speed = (unsigned short)100U;
            
#line 1229 
            bp->duplex = (unsigned char)0U;
          }
          else 
            
#line 1231 
            if ((common & 64U) != 0U) {
              
#line 1232 
              bp->line_speed = (unsigned short)10U;
              
#line 1233 
              bp->duplex = (unsigned char)1U;
            }
            else 
              
#line 1235 
              if ((common & 32U) != 0U) {
                
#line 1236 
                bp->line_speed = (unsigned short)10U;
                
#line 1237 
                bp->duplex = (unsigned char)0U;
              }
              else {
                
#line 1240 
                bp->line_speed = (unsigned short)0U;
                
#line 1241 
                bp->link_up = (unsigned char)0U;
              }
      }
  }
  else {
    
#line 1246 
    if ((bmcr & 8192U) != 0U) 
#line 1247 
                              bp->line_speed = (unsigned short)100U; else 
                                                                    
#line 1250 
                                                                    bp->line_speed = (unsigned short)10U;
    
#line 1252 
    if ((bmcr & 256U) != 0U) 
#line 1253 
                             bp->duplex = (unsigned char)1U; else 
#line 1256 
                                                                  bp->duplex = (unsigned char)0U;
  }
  
#line 1260 
  if ((unsigned int)bp->link_up != 0U) {
    u32 ext_status;
    
#line 1263 
    bnx2_read_phy(bp,17U,& ext_status);
    
#line 1264 
    if ((ext_status & 8192U) != 0U) 
#line 1265 
                                    bp->phy_flags |= 16384U; else ;
  }
  else ;
  
#line 1268 
  __retres = 0;
  
#line 1268 
  return __retres;
}


#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_rx_context(struct bnx2 *bp, u32 cid)
{
  u32 val;
  
#line 1274 
  u32 rx_cid_addr = cid << 7;
  
#line 1276 
  val = 268435456U;
  
#line 1277 
  val |= 65536U;
  
#line 1278 
  val |= 512U;
  
#line 1280 
  if (((int)bp->flow_ctrl & 1) != 0) 
#line 1281 
                                     val |= 255U; else ;
  
#line 1283 
  bnx2_ctx_wr(bp,rx_cid_addr,0U,val);
  
#line 1284 
  return;
}


#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_all_rx_contexts(struct bnx2 *bp)
{
  int i;
  u32 cid;
  
#line 1292 
  i = 0;
  
#line 1292 
  cid = 0U;
  
#line 1292 
  goto ldv_57075;
  ldv_57074: 
#line 1293 
  ;
  
#line 1293 
  if (i == 1) 
#line 1294 
              cid = 4U; else ;
  
#line 1295 
  bnx2_init_rx_context(bp,cid);
  
#line 1292 
  i += 1;
  
#line 1292 
  cid += 1U;
  ldv_57075: 
#line 1293 
  ;
  
#line 1292 
  if ((int)bp->num_rx_rings > i) 
#line 1294 
                                 goto ldv_57074; else 
#line 1297 
                                                      goto ldv_57076;
  ldv_57076: 
#line 1298 
  ;
  
#line 1299 
  return;
}


#line 1300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_set_mac_link(struct bnx2 *bp)
{
  u32 val;
  
#line 1304 
  writel(9760U,(void volatile *)(bp->regview + 5316U));
  
#line 1305 
  if (((unsigned int)bp->link_up != 0U && (unsigned int)bp->line_speed == 1000U) && (unsigned int)bp->duplex == 0U) 
    
#line 1307 
    writel(9983U,(void volatile *)(bp->regview + 5316U)); else ;
  
#line 1311 
  val = readl((void const volatile *)(bp->regview + 5120U));
  
#line 1313 
  val &= 4294965185U;
  
#line 1317 
  if ((unsigned int)bp->link_up != 0U) {
    
#line 1318 
    switch ((int)bp->line_speed) {
      case 10: 
#line 1319 
      ;
      
#line 1320 
      if ((bp->chip_id & 4294901760U) != 1460011008U) {
        
#line 1321 
        val |= 12U;
        
#line 1322 
        goto ldv_57082;
      }
      else ;
      case 100: 
#line 1325 
      ;
      
#line 1326 
      val |= 4U;
      
#line 1327 
      goto ldv_57082;
      case 2500: 
#line 1328 
      ;
      
#line 1329 
      val |= 32U;
      case 1000: 
#line 1331 
      ;
      
#line 1332 
      val |= 8U;
      
#line 1333 
      goto ldv_57082;
    }
    ldv_57082: 
#line 1335 
    ;
  }
  else 
#line 1337 
       val |= 8U;
  
#line 1341 
  if ((unsigned int)bp->duplex == 0U) 
#line 1342 
                                      val |= 2U; else ;
  
#line 1343 
  writel(val,(void volatile *)(bp->regview + 5120U));
  
#line 1346 
  bp->rx_mode &= 4294967291U;
  
#line 1348 
  if (((int)bp->flow_ctrl & 2) != 0) 
#line 1349 
                                     bp->rx_mode |= 4U; else ;
  
#line 1350 
  writel(bp->rx_mode,(void volatile *)(bp->regview + 5320U));
  
#line 1353 
  val = readl((void const volatile *)(bp->regview + 5308U));
  
#line 1354 
  val &= 4294967279U;
  
#line 1356 
  if (((int)bp->flow_ctrl & 1) != 0) 
#line 1357 
                                     val |= 16U; else ;
  
#line 1358 
  writel(val,(void volatile *)(bp->regview + 5308U));
  
#line 1361 
  writel(4096U,(void volatile *)(bp->regview + 5124U));
  
#line 1363 
  bnx2_init_all_rx_contexts(bp);
  
#line 1364 
  return;
}


#line 1367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_enable_bmsr1(struct bnx2 *bp)
{
  
#line 1369 
  if ((bp->phy_flags & 1U) != 0U && (bp->chip_id & 4294901760U) == 1460207616U) 
    
#line 1371 
    bnx2_write_phy(bp,31U,33056U); else ;
  
#line 1372 
  return;
}


#line 1376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_disable_bmsr1(struct bnx2 *bp)
{
  
#line 1378 
  if ((bp->phy_flags & 1U) != 0U && (bp->chip_id & 4294901760U) == 1460207616U) 
    
#line 1380 
    bnx2_write_phy(bp,31U,65504U); else ;
  
#line 1381 
  return;
}


#line 1385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_and_enable_2g5(struct bnx2 *bp)
{
  int __retres;
  u32 up1;
  
#line 1388 
  int ret = 1;
  
#line 1390 
  if ((bp->phy_flags & 8U) == 0U) {
    
#line 1391 
    __retres = 0;
    
#line 1391 
    goto return_label;
  }
  else ;
  
#line 1393 
  if (((int)bp->autoneg & 1) != 0) 
#line 1394 
                                   bp->advertising |= 32768U; else ;
  
#line 1396 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 1397 
                                                  bnx2_write_phy(bp,31U,33568U); else ;
  
#line 1399 
  bnx2_read_phy(bp,bp->mii_up1,& up1);
  
#line 1400 
  if ((up1 & 1U) == 0U) {
    
#line 1401 
    up1 |= 1U;
    
#line 1402 
    bnx2_write_phy(bp,bp->mii_up1,up1);
    
#line 1403 
    ret = 0;
  }
  else ;
  
#line 1406 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 1407 
                                                  bnx2_write_phy(bp,31U,65504U); else ;
  
#line 1410 
  __retres = ret;
  return_label: 
#line 1410 
                return __retres;
}


#line 1414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_and_disable_2g5(struct bnx2 *bp)
{
  int __retres;
  u32 up1;
  
#line 1417 
  int ret = 0;
  
#line 1419 
  if ((bp->phy_flags & 8U) == 0U) {
    
#line 1420 
    __retres = 0;
    
#line 1420 
    goto return_label;
  }
  else ;
  
#line 1422 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 1423 
                                                  bnx2_write_phy(bp,31U,33568U); else ;
  
#line 1425 
  bnx2_read_phy(bp,bp->mii_up1,& up1);
  
#line 1426 
  if ((up1 & 1U) != 0U) {
    
#line 1427 
    up1 &= 4294967294U;
    
#line 1428 
    bnx2_write_phy(bp,bp->mii_up1,up1);
    
#line 1429 
    ret = 1;
  }
  else ;
  
#line 1432 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 1433 
                                                  bnx2_write_phy(bp,31U,65504U); else ;
  
#line 1436 
  __retres = ret;
  return_label: 
#line 1436 
                return __retres;
}


#line 1440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_enable_forced_2g5(struct bnx2 *bp)
{
  int err;
  
#line 1442 
  u32 bmcr = bmcr;
  
#line 1445 
  if ((bp->phy_flags & 8U) == 0U) 
#line 1446 
                                  goto return_label; else ;
  
#line 1448 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    u32 val;
    int tmp;
    
#line 1451 
    bnx2_write_phy(bp,31U,33536U);
    
#line 1453 
    tmp = bnx2_read_phy(bp,24U,& val);
    
#line 1453 
    if (tmp == 0) {
      
#line 1454 
      val &= 4294967280U;
      
#line 1455 
      val |= 16U;
      
#line 1457 
      bnx2_write_phy(bp,24U,val);
    }
    else ;
    
#line 1460 
    bnx2_write_phy(bp,31U,65504U);
    
#line 1462 
    err = bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  }
  else 
    
#line 1464 
    if ((bp->chip_id & 4294901760U) == 1460142080U) {
      
#line 1465 
      err = bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
      
#line 1466 
      if (err == 0) 
#line 1467 
                    bmcr |= 32U; else ;
    }
    else 
#line 1469 
         goto return_label;
  
#line 1472 
  if (err != 0) 
#line 1473 
                goto return_label; else ;
  
#line 1475 
  if (((int)bp->autoneg & 1) != 0) {
    
#line 1476 
    bmcr &= 4294963199U;
    
#line 1477 
    if ((unsigned int)bp->req_duplex == 1U) 
#line 1478 
                                            bmcr |= 256U; else ;
  }
  else ;
  
#line 1480 
  bnx2_write_phy(bp,bp->mii_bmcr,bmcr);
  return_label: 
#line 1481 
                return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_disable_forced_2g5(struct bnx2 *bp)
{
  int err;
  
#line 1486 
  u32 bmcr = bmcr;
  
#line 1489 
  if ((bp->phy_flags & 8U) == 0U) 
#line 1490 
                                  goto return_label; else ;
  
#line 1492 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    u32 val;
    int tmp;
    
#line 1495 
    bnx2_write_phy(bp,31U,33536U);
    
#line 1497 
    tmp = bnx2_read_phy(bp,24U,& val);
    
#line 1497 
    if (tmp == 0) {
      
#line 1498 
      val &= 4294967279U;
      
#line 1499 
      bnx2_write_phy(bp,24U,val);
    }
    else ;
    
#line 1502 
    bnx2_write_phy(bp,31U,65504U);
    
#line 1504 
    err = bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  }
  else 
    
#line 1506 
    if ((bp->chip_id & 4294901760U) == 1460142080U) {
      
#line 1507 
      err = bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
      
#line 1508 
      if (err == 0) 
#line 1509 
                    bmcr &= 4294967263U; else ;
    }
    else 
#line 1511 
         goto return_label;
  
#line 1514 
  if (err != 0) 
#line 1515 
                goto return_label; else ;
  
#line 1517 
  if (((int)bp->autoneg & 1) != 0) 
#line 1518 
                                   bmcr |= 4672U; else ;
  
#line 1519 
  bnx2_write_phy(bp,bp->mii_bmcr,bmcr);
  return_label: 
#line 1520 
                return;
}


#line 1523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_5706s_force_link_dn(struct bnx2 *bp, int start)
{
  u32 val;
  
#line 1527 
  bnx2_write_phy(bp,23U,3843U);
  
#line 1528 
  bnx2_read_phy(bp,21U,& val);
  
#line 1529 
  if (start != 0) 
#line 1530 
                  bnx2_write_phy(bp,21U,val & 65295U); else 
#line 1532 
                                                            bnx2_write_phy(bp,21U,val | 192U);
  
#line 1533 
  return;
}


#line 1536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_link(struct bnx2 *bp)
{
  int __retres;
  u32 bmsr;
  u8 link_up;
  
#line 1541 
  if ((unsigned int)bp->loopback + 255U <= 1U) {
    
#line 1542 
    bp->link_up = (unsigned char)1U;
    
#line 1543 
    __retres = 0;
    
#line 1543 
    goto return_label;
  }
  else ;
  
#line 1546 
  if ((bp->phy_flags & 2048U) != 0U) {
    
#line 1547 
    __retres = 0;
    
#line 1547 
    goto return_label;
  }
  else ;
  
#line 1549 
  link_up = bp->link_up;
  
#line 1551 
  bnx2_enable_bmsr1(bp);
  
#line 1552 
  bnx2_read_phy(bp,bp->mii_bmsr1,& bmsr);
  
#line 1553 
  bnx2_read_phy(bp,bp->mii_bmsr1,& bmsr);
  
#line 1554 
  bnx2_disable_bmsr1(bp);
  
#line 1556 
  if ((bp->phy_flags & 1U) != 0U && (bp->chip_id & 4294901760U) == 1460011008U) {
    u32 val;
    u32 an_dbg;
    
#line 1560 
    if ((bp->phy_flags & 4096U) != 0U) {
      
#line 1561 
      bnx2_5706s_force_link_dn(bp,0);
      
#line 1562 
      bp->phy_flags &= 4294963199U;
    }
    else ;
    
#line 1564 
    val = readl((void const volatile *)(bp->regview + 5124U));
    
#line 1566 
    bnx2_write_phy(bp,28U,26624U);
    
#line 1567 
    bnx2_read_phy(bp,28U,& an_dbg);
    
#line 1568 
    bnx2_read_phy(bp,28U,& an_dbg);
    
#line 1570 
    if (((long)val & 2048L) != 0L && (an_dbg & 2U) == 0U) 
#line 1572 
                                                          bmsr |= 4U; else 
                                                                    
#line 1574 
                                                                    bmsr &= 4294967291U;
  }
  else ;
  
#line 1577 
  if ((bmsr & 4U) != 0U) {
    
#line 1578 
    bp->link_up = (unsigned char)1U;
    
#line 1580 
    if ((bp->phy_flags & 1U) != 0U) {
      
#line 1581 
      if ((bp->chip_id & 4294901760U) == 1460011008U) 
#line 1582 
                                                      bnx2_5706s_linkup(bp);
      else 
        
#line 1583 
        if ((bp->chip_id & 4294901760U) == 1460142080U) 
#line 1584 
                                                        bnx2_5708s_linkup(bp);
        else 
          
#line 1585 
          if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 1586 
                                                          bnx2_5709s_linkup(bp); else ;
    }
    else 
#line 1589 
         bnx2_copper_linkup(bp);
    
#line 1591 
    bnx2_resolve_flow_ctrl(bp);
  }
  else {
    
#line 1594 
    if ((bp->phy_flags & 1U) != 0U && ((int)bp->autoneg & 1) != 0) 
#line 1596 
                                                                   bnx2_disable_forced_2g5(bp); else ;
    
#line 1598 
    if ((bp->phy_flags & 4U) != 0U) {
      u32 bmcr;
      
#line 1601 
      bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
      
#line 1602 
      bmcr |= 4096U;
      
#line 1603 
      bnx2_write_phy(bp,bp->mii_bmcr,bmcr);
      
#line 1605 
      bp->phy_flags &= 4294967291U;
    }
    else ;
    
#line 1607 
    bp->link_up = (unsigned char)0U;
  }
  
#line 1610 
  if ((int)bp->link_up != (int)link_up) 
#line 1611 
                                        bnx2_report_link(bp); else ;
  
#line 1614 
  bnx2_set_mac_link(bp);
  
#line 1616 
  __retres = 0;
  return_label: 
#line 1616 
                return __retres;
}


#line 1620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_reset_phy(struct bnx2 *bp)
{
  int __retres;
  int i;
  u32 reg;
  
#line 1625 
  bnx2_write_phy(bp,bp->mii_bmcr,32768U);
  
#line 1628 
  i = 0;
  
#line 1628 
  goto ldv_57134;
  ldv_57133: 
#line 1629 
  ;
  
#line 1629 
  __const_udelay(42950UL);
  
#line 1631 
  bnx2_read_phy(bp,bp->mii_bmcr,& reg);
  
#line 1632 
  if ((reg & 32768U) == 0U) {
    
#line 1633 
    __const_udelay(85900UL);
    
#line 1634 
    goto ldv_57132;
  }
  else ;
  
#line 1628 
  i += 1;
  ldv_57134: 
#line 1629 
  ;
  
#line 1628 
  if (i <= 99) 
#line 1630 
               goto ldv_57133; else 
#line 1633 
                                    goto ldv_57132;
  ldv_57132: 
#line 1634 
  ;
  
#line 1637 
  if (i == 100) {
    
#line 1638 
    __retres = -16;
    
#line 1638 
    goto return_label;
  }
  else ;
  
#line 1640 
  __retres = 0;
  return_label: 
#line 1640 
                return __retres;
}


#line 1644  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u32 bnx2_phy_get_pause_adv(struct bnx2 *bp)
{
  
#line 1646 
  u32 adv = 0U;
  
#line 1648 
  if (((int)bp->req_flow_ctrl & 3) == 3) 
    
#line 1651 
    if ((bp->phy_flags & 1U) != 0U) 
#line 1652 
                                    adv = 128U; else 
#line 1655 
                                                     adv = 1024U;
  else 
    
#line 1658 
    if (((int)bp->req_flow_ctrl & 1) != 0) 
      
#line 1659 
      if ((bp->phy_flags & 1U) != 0U) 
#line 1660 
                                      adv = 256U; else 
#line 1663 
                                                       adv = 2048U;
    else 
      
#line 1666 
      if (((int)bp->req_flow_ctrl & 2) != 0) 
        
#line 1667 
        if ((bp->phy_flags & 1U) != 0U) 
#line 1668 
                                        adv = 384U; else 
#line 1671 
                                                         adv = 3072U;
      else ;
  
#line 1674 
  return adv;
}


#line 1677 
static int bnx2_fw_sync(struct bnx2 *bp, u32 msg_data, int ack, int silent);


#line 1680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_setup_remote_phy(struct bnx2 *bp, u8 port)
{
  int __retres;
  u32 pause_adv;
  
#line 1684 
  u32 speed_arg = 0U;
  
#line 1686 
  pause_adv = bnx2_phy_get_pause_adv(bp);
  
#line 1688 
  if (((int)bp->autoneg & 1) != 0) {
    
#line 1689 
    speed_arg |= 1024U;
    
#line 1690 
    if ((bp->advertising & 1U) != 0U) 
#line 1691 
                                      speed_arg |= 1U; else ;
    
#line 1692 
    if ((bp->advertising & 2U) != 0U) 
#line 1693 
                                      speed_arg |= 2U; else ;
    
#line 1694 
    if ((bp->advertising & 4U) != 0U) 
#line 1695 
                                      speed_arg |= 4U; else ;
    
#line 1696 
    if ((bp->advertising & 8U) != 0U) 
#line 1697 
                                      speed_arg |= 8U; else ;
    
#line 1698 
    if ((bp->advertising & 32U) != 0U) 
#line 1699 
                                       speed_arg |= 32U; else ;
    
#line 1700 
    if ((bp->advertising & 32768U) != 0U) 
#line 1701 
                                          speed_arg |= 128U; else ;
  }
  else 
    
#line 1703 
    if ((unsigned int)bp->req_line_speed == 2500U) 
#line 1704 
                                                   speed_arg = 128U;
    else 
      
#line 1705 
      if ((unsigned int)bp->req_line_speed == 1000U) 
#line 1706 
                                                     speed_arg = 32U;
      else 
        
#line 1707 
        if ((unsigned int)bp->req_line_speed == 100U) 
          
#line 1708 
          if ((unsigned int)bp->req_duplex == 1U) 
#line 1709 
                                                  speed_arg = 8U; else 
                                                                    
#line 1711 
                                                                    speed_arg = 4U;
        else 
          
#line 1712 
          if ((unsigned int)bp->req_line_speed == 10U) 
            
#line 1713 
            if ((unsigned int)bp->req_duplex == 1U) 
#line 1714 
                                                    speed_arg = 2U; else 
                                                                    
#line 1716 
                                                                    speed_arg = 1U;
          else ;
  
#line 1720 
  if ((pause_adv & 1152U) != 0U) 
#line 1721 
                                 speed_arg |= 4096U; else ;
  
#line 1722 
  if ((pause_adv & 2304U) != 0U) 
#line 1723 
                                 speed_arg |= 8192U; else ;
  
#line 1725 
  if ((unsigned int)port == 0U) 
#line 1726 
                                speed_arg |= 18432U; else ;
  
#line 1729 
  bnx2_shmem_wr(bp,20U,speed_arg);
  
#line 1731 
  ldv_spin_unlock_bh_87(& bp->phy_lock);
  
#line 1732 
  bnx2_fw_sync(bp,268435456U,1,0);
  
#line 1733 
  ldv_spin_lock_bh_88(& bp->phy_lock);
  
#line 1735 
  __retres = 0;
  
#line 1735 
  return __retres;
}


#line 1739  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_setup_serdes_phy(struct bnx2 *bp, u8 port)
{
  int __retres;
  u32 adv;
  u32 bmcr;
  u32 tmp_2;
  
#line 1744 
  u32 new_adv = 0U;
  
#line 1746 
  if ((bp->phy_flags & 2048U) != 0U) {
    int tmp;
    
#line 1747 
    tmp = bnx2_setup_remote_phy(bp,(unsigned char)((int)port));
    
#line 1747 
    __retres = tmp;
    
#line 1747 
    goto return_label;
  }
  else ;
  
#line 1749 
  if (((int)bp->autoneg & 1) == 0) {
    u32 new_bmcr;
    
#line 1751 
    int force_link_down = 0;
    
#line 1753 
    if ((unsigned int)bp->req_line_speed == 2500U) {
      int tmp_0;
      
#line 1754 
      tmp_0 = bnx2_test_and_enable_2g5(bp);
      
#line 1754 
      if (tmp_0 == 0) 
#line 1755 
                      force_link_down = 1; else ;
    }
    else 
      
#line 1756 
      if ((unsigned int)bp->req_line_speed == 1000U) {
        int tmp_1;
        
#line 1757 
        tmp_1 = bnx2_test_and_disable_2g5(bp);
        
#line 1757 
        if (tmp_1 != 0) 
#line 1758 
                        force_link_down = 1; else ;
      }
      else ;
    
#line 1760 
    bnx2_read_phy(bp,bp->mii_adv,& adv);
    
#line 1761 
    adv &= 4294967199U;
    
#line 1763 
    bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
    
#line 1764 
    new_bmcr = bmcr & 4294963199U;
    
#line 1765 
    new_bmcr |= 64U;
    
#line 1767 
    if ((bp->chip_id & 4294901760U) == 1460207616U) {
      
#line 1768 
      if ((unsigned int)bp->req_line_speed == 2500U) 
#line 1769 
                                                     bnx2_enable_forced_2g5(bp);
      else 
        
#line 1770 
        if ((unsigned int)bp->req_line_speed == 1000U) {
          
#line 1771 
          bnx2_disable_forced_2g5(bp);
          
#line 1772 
          new_bmcr &= 4294959103U;
        }
        else ;
    }
    else 
      
#line 1775 
      if ((bp->chip_id & 4294901760U) == 1460142080U) 
        
#line 1776 
        if ((unsigned int)bp->req_line_speed == 2500U) 
#line 1777 
                                                       new_bmcr |= 32U; else 
                                                                    
#line 1779 
                                                                    new_bmcr = bmcr & 4294967263U;
      else ;
    
#line 1782 
    if ((unsigned int)bp->req_duplex == 1U) {
      
#line 1783 
      adv |= 32U;
      
#line 1784 
      new_bmcr |= 256U;
    }
    else {
      
#line 1787 
      adv |= 64U;
      
#line 1788 
      new_bmcr &= 4294967039U;
    }
    
#line 1790 
    if (new_bmcr != bmcr || force_link_down != 0) {
      
#line 1792 
      if ((unsigned int)bp->link_up != 0U) {
        
#line 1793 
        bnx2_write_phy(bp,bp->mii_adv,adv & 4294967199U);
        
#line 1796 
        bnx2_write_phy(bp,bp->mii_bmcr,bmcr | 4608U);
        
#line 1799 
        bp->link_up = (unsigned char)0U;
        
#line 1800 
        netif_carrier_off(bp->dev);
        
#line 1801 
        bnx2_write_phy(bp,bp->mii_bmcr,new_bmcr);
        
#line 1802 
        bnx2_report_link(bp);
      }
      else ;
      
#line 1804 
      bnx2_write_phy(bp,bp->mii_adv,adv);
      
#line 1805 
      bnx2_write_phy(bp,bp->mii_bmcr,new_bmcr);
    }
    else {
      
#line 1807 
      bnx2_resolve_flow_ctrl(bp);
      
#line 1808 
      bnx2_set_mac_link(bp);
    }
    
#line 1810 
    __retres = 0;
    
#line 1810 
    goto return_label;
  }
  else ;
  
#line 1813 
  bnx2_test_and_enable_2g5(bp);
  
#line 1815 
  if ((bp->advertising & 32U) != 0U) 
#line 1816 
                                     new_adv |= 32U; else ;
  
#line 1818 
  tmp_2 = bnx2_phy_get_pause_adv(bp);
  
#line 1818 
  new_adv = tmp_2 | new_adv;
  
#line 1820 
  bnx2_read_phy(bp,bp->mii_adv,& adv);
  
#line 1821 
  bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  
#line 1823 
  bp->serdes_an_pending = (unsigned char)0U;
  
#line 1824 
  if (adv != new_adv || (bmcr & 4096U) == 0U) {
    
#line 1826 
    if ((unsigned int)bp->link_up != 0U) {
      
#line 1827 
      bnx2_write_phy(bp,bp->mii_bmcr,16384U);
      
#line 1828 
      ldv_spin_unlock_bh_89(& bp->phy_lock);
      
#line 1829 
      msleep(20U);
      
#line 1830 
      ldv_spin_lock_bh_90(& bp->phy_lock);
    }
    else ;
    
#line 1833 
    bnx2_write_phy(bp,bp->mii_adv,new_adv);
    
#line 1834 
    bnx2_write_phy(bp,bp->mii_bmcr,bmcr | 4608U);
    
#line 1844 
    bp->current_interval = 83U;
    
#line 1845 
    bp->serdes_an_pending = (unsigned char)1U;
    
#line 1846 
    ldv_mod_timer_91(& bp->timer,(unsigned long)bp->current_interval + jiffies);
  }
  else {
    
#line 1848 
    bnx2_resolve_flow_ctrl(bp);
    
#line 1849 
    bnx2_set_mac_link(bp);
  }
  
#line 1852 
  __retres = 0;
  return_label: 
#line 1852 
                return __retres;
}


#line 1871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_set_default_remote_link(struct bnx2 *bp)
{
  u32 link;
  
#line 1875 
  if ((unsigned int)bp->phy_port == 0U) 
#line 1876 
                                        link = bnx2_shmem_rd(bp,888U); else 
                                                                    
#line 1878 
                                                                    link = bnx2_shmem_rd(bp,884U);
  
#line 1880 
  if ((link & 1024U) != 0U) {
    
#line 1881 
    bp->req_line_speed = (unsigned short)0U;
    
#line 1882 
    bp->autoneg = (unsigned char)((unsigned int)bp->autoneg | 1U);
    
#line 1883 
    bp->advertising = 64U;
    
#line 1884 
    if ((link & 1U) != 0U) 
#line 1885 
                           bp->advertising |= 1U; else ;
    
#line 1886 
    if ((link & 2U) != 0U) 
#line 1887 
                           bp->advertising |= 2U; else ;
    
#line 1888 
    if ((link & 4U) != 0U) 
#line 1889 
                           bp->advertising |= 4U; else ;
    
#line 1890 
    if ((link & 8U) != 0U) 
#line 1891 
                           bp->advertising |= 8U; else ;
    
#line 1892 
    if ((link & 32U) != 0U) 
#line 1893 
                            bp->advertising |= 32U; else ;
    
#line 1894 
    if ((link & 128U) != 0U) 
#line 1895 
                             bp->advertising |= 32768U; else ;
  }
  else {
    
#line 1897 
    bp->autoneg = (unsigned char)0U;
    
#line 1898 
    bp->advertising = 0U;
    
#line 1899 
    bp->req_duplex = (unsigned char)1U;
    
#line 1900 
    if ((link & 3U) != 0U) {
      
#line 1901 
      bp->req_line_speed = (unsigned short)10U;
      
#line 1902 
      if ((link & 1U) != 0U) 
#line 1903 
                             bp->req_duplex = (unsigned char)0U; else ;
    }
    else ;
    
#line 1905 
    if ((link & 12U) != 0U) {
      
#line 1906 
      bp->req_line_speed = (unsigned short)100U;
      
#line 1907 
      if ((link & 4U) != 0U) 
#line 1908 
                             bp->req_duplex = (unsigned char)0U; else ;
    }
    else ;
    
#line 1910 
    if ((link & 32U) != 0U) 
#line 1911 
                            bp->req_line_speed = (unsigned short)1000U; else ;
    
#line 1912 
    if ((link & 128U) != 0U) 
#line 1913 
                             bp->req_line_speed = (unsigned short)2500U; else ;
  }
  
#line 1915 
  return;
}


#line 1918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_set_default_link(struct bnx2 *bp)
{
  
#line 1920 
  if ((bp->phy_flags & 2048U) != 0U) {
    
#line 1921 
    bnx2_set_default_remote_link(bp);
    
#line 1922 
    goto return_label;
  }
  else ;
  
#line 1925 
  bp->autoneg = (unsigned char)3U;
  
#line 1926 
  bp->req_line_speed = (unsigned short)0U;
  
#line 1927 
  if ((bp->phy_flags & 1U) != 0U) {
    u32 reg;
    int tmp;
    
#line 1930 
    if ((bp->phy_flags & 8U) != 0U) 
#line 1930 
                                    tmp = 32800; else 
#line 1930 
                                                      tmp = 96;
    
#line 1930 
    bp->advertising = (unsigned int)tmp;
    
#line 1932 
    reg = bnx2_shmem_rd(bp,88U);
    
#line 1933 
    reg &= 2031616U;
    
#line 1934 
    if (reg == 196608U) {
      u16 tmp_0;
      
#line 1935 
      bp->autoneg = (unsigned char)0U;
      
#line 1936 
      tmp_0 = (unsigned short)1000U;
      
#line 1936 
      bp->line_speed = tmp_0;
      
#line 1936 
      bp->req_line_speed = tmp_0;
      
#line 1937 
      bp->req_duplex = (unsigned char)1U;
    }
    else ;
  }
  else 
#line 1940 
       bp->advertising = 111U;
  return_label: 
#line 1941 
                return;
}


#line 1944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_send_heart_beat(struct bnx2 *bp)
{
  u32 msg;
  u32 addr;
  
#line 1949 
  ldv_spin_lock_92(& bp->indirect_lock);
  
#line 1950 
  bp->fw_drv_pulse_wr_seq = (u16)((int)bp->fw_drv_pulse_wr_seq + 1);
  
#line 1950 
  msg = (unsigned int)bp->fw_drv_pulse_wr_seq & 32767U;
  
#line 1951 
  addr = bp->shmem_base + 16U;
  
#line 1952 
  writel(addr,(void volatile *)(bp->regview + 120U));
  
#line 1953 
  writel(msg,(void volatile *)(bp->regview + 128U));
  
#line 1954 
  ldv_spin_unlock_93(& bp->indirect_lock);
  
#line 1955 
  return;
}


#line 1958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_remote_phy_event(struct bnx2 *bp)
{
  u32 msg;
  u8 old_port;
  
#line 1961 
  u8 link_up = bp->link_up;
  
#line 1964 
  msg = bnx2_shmem_rd(bp,12U);
  
#line 1966 
  if (msg < (u32)0) 
#line 1967 
                    bnx2_send_heart_beat(bp); else ;
  
#line 1969 
  msg &= 2147483647U;
  
#line 1971 
  if ((msg & 1U) == 0U) 
#line 1972 
                        bp->link_up = (unsigned char)0U;
  else {
    u32 speed;
    
#line 1976 
    bp->link_up = (unsigned char)1U;
    
#line 1977 
    speed = msg & 30U;
    
#line 1978 
    bp->duplex = (unsigned char)1U;
    
#line 1979 
    switch (speed) {
      case (u32)2: 
#line 1980 
      ;
      
#line 1981 
      bp->duplex = (unsigned char)0U;
      case (u32)4: 
#line 1983 
      ;
      
#line 1984 
      bp->line_speed = (unsigned short)10U;
      
#line 1985 
      goto ldv_57181;
      case (u32)6: 
#line 1986 
      ;
      
#line 1987 
      bp->duplex = (unsigned char)0U;
      case (u32)8: 
#line 1989 
      ;
      case (u32)10: 
#line 1990 
      ;
      
#line 1991 
      bp->line_speed = (unsigned short)100U;
      
#line 1992 
      goto ldv_57181;
      case (u32)12: 
#line 1993 
      ;
      
#line 1994 
      bp->duplex = (unsigned char)0U;
      case (u32)14: 
#line 1996 
      ;
      
#line 1997 
      bp->line_speed = (unsigned short)1000U;
      
#line 1998 
      goto ldv_57181;
      case (u32)16: 
#line 1999 
      ;
      
#line 2000 
      bp->duplex = (unsigned char)0U;
      case (u32)18: 
#line 2002 
      ;
      
#line 2003 
      bp->line_speed = (unsigned short)2500U;
      
#line 2004 
      goto ldv_57181;
      default: 
#line 2005 
      ;
      
#line 2006 
      bp->line_speed = (unsigned short)0U;
      
#line 2007 
      goto ldv_57181;
    }
    ldv_57181: 
#line 2010 
    ;
    
#line 2010 
    bp->flow_ctrl = (unsigned char)0U;
    
#line 2011 
    if (((int)bp->autoneg & 3) != 3) {
      
#line 2013 
      if ((unsigned int)bp->duplex == 1U) 
#line 2014 
                                          bp->flow_ctrl = bp->req_flow_ctrl; else ;
    }
    else {
      
#line 2016 
      if ((msg & 65536U) != 0U) 
#line 2017 
                                bp->flow_ctrl = (unsigned char)((unsigned int)bp->flow_ctrl | 1U); else ;
      
#line 2018 
      if ((msg & 131072U) != 0U) 
#line 2019 
                                 bp->flow_ctrl = (unsigned char)((unsigned int)bp->flow_ctrl | 2U); else ;
    }
    
#line 2022 
    old_port = bp->phy_port;
    
#line 2023 
    if ((msg & 1048576U) != 0U) 
#line 2024 
                                bp->phy_port = (unsigned char)3U; else 
                                                                    
#line 2026 
                                                                    bp->phy_port = (unsigned char)0U;
    
#line 2028 
    if ((int)bp->phy_port != (int)old_port) 
#line 2029 
                                            bnx2_set_default_link(bp); else ;
  }
  
#line 2032 
  if ((int)bp->link_up != (int)link_up) 
#line 2033 
                                        bnx2_report_link(bp); else ;
  
#line 2035 
  bnx2_set_mac_link(bp);
  
#line 2036 
  return;
}


#line 2039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_remote_link(struct bnx2 *bp)
{
  int __retres;
  u32 evt_code;
  
#line 2043 
  evt_code = bnx2_shmem_rd(bp,852U);
  
#line 2044 
  switch (evt_code) {
    case (u32)1: 
#line 2045 
    ;
    
#line 2046 
    bnx2_remote_phy_event(bp);
    
#line 2047 
    goto ldv_57195;
    case (u32)0: 
#line 2048 
    ;
    default: 
#line 2049 
    ;
    
#line 2050 
    bnx2_send_heart_beat(bp);
    
#line 2051 
    goto ldv_57195;
  }
  ldv_57195: 
#line 2053 
  ;
  
#line 2053 
  __retres = 0;
  
#line 2053 
  return __retres;
}


#line 2057  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_setup_copper_phy(struct bnx2 *bp)
{
  int __retres;
  u32 bmcr;
  u32 adv_reg;
  u32 new_bmcr;
  u32 tmp;
  
#line 2061 
  u32 new_adv = 0U;
  
#line 2064 
  bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  
#line 2066 
  bnx2_read_phy(bp,bp->mii_adv,& adv_reg);
  
#line 2067 
  adv_reg &= 3553U;
  
#line 2070 
  tmp = ethtool_adv_to_mii_adv_t(bp->advertising);
  
#line 2070 
  new_adv = tmp | 1U;
  
#line 2072 
  if (((int)bp->autoneg & 1) != 0) {
    u32 adv1000_reg;
    u32 tmp_0;
    u32 tmp_1;
    
#line 2074 
    u32 new_adv1000 = 0U;
    
#line 2076 
    tmp_0 = bnx2_phy_get_pause_adv(bp);
    
#line 2076 
    new_adv = tmp_0 | new_adv;
    
#line 2078 
    bnx2_read_phy(bp,9U,& adv1000_reg);
    
#line 2079 
    adv1000_reg &= 768U;
    
#line 2081 
    tmp_1 = ethtool_adv_to_mii_ctrl1000_t(bp->advertising);
    
#line 2081 
    new_adv1000 = tmp_1 | new_adv1000;
    
#line 2082 
    if ((adv1000_reg != new_adv1000 || adv_reg != new_adv) || (bmcr & 4096U) == 0U) {
      
#line 2086 
      bnx2_write_phy(bp,bp->mii_adv,new_adv);
      
#line 2087 
      bnx2_write_phy(bp,9U,new_adv1000);
      
#line 2088 
      bnx2_write_phy(bp,bp->mii_bmcr,4608U);
    }
    else 
      
#line 2091 
      if ((unsigned int)bp->link_up != 0U) {
        
#line 2095 
        bnx2_resolve_flow_ctrl(bp);
        
#line 2096 
        bnx2_set_mac_link(bp);
      }
      else ;
    
#line 2098 
    __retres = 0;
    
#line 2098 
    goto return_label;
  }
  else ;
  
#line 2102 
  if (adv_reg != new_adv) 
#line 2103 
                          bnx2_write_phy(bp,bp->mii_adv,new_adv); else ;
  
#line 2105 
  new_bmcr = 0U;
  
#line 2106 
  if ((unsigned int)bp->req_line_speed == 100U) 
#line 2107 
                                                new_bmcr |= 8192U; else ;
  
#line 2109 
  if ((unsigned int)bp->req_duplex == 1U) 
#line 2110 
                                          new_bmcr |= 256U; else ;
  
#line 2112 
  if (new_bmcr != bmcr) {
    u32 bmsr;
    
#line 2115 
    bnx2_read_phy(bp,bp->mii_bmsr,& bmsr);
    
#line 2116 
    bnx2_read_phy(bp,bp->mii_bmsr,& bmsr);
    
#line 2118 
    if ((bmsr & 4U) != 0U) {
      
#line 2120 
      bnx2_write_phy(bp,bp->mii_bmcr,16384U);
      
#line 2121 
      ldv_spin_unlock_bh_94(& bp->phy_lock);
      
#line 2122 
      msleep(50U);
      
#line 2123 
      ldv_spin_lock_bh_95(& bp->phy_lock);
      
#line 2125 
      bnx2_read_phy(bp,bp->mii_bmsr,& bmsr);
      
#line 2126 
      bnx2_read_phy(bp,bp->mii_bmsr,& bmsr);
    }
    else ;
    
#line 2129 
    bnx2_write_phy(bp,bp->mii_bmcr,new_bmcr);
    
#line 2135 
    if ((bmsr & 4U) != 0U) {
      
#line 2136 
      bp->line_speed = bp->req_line_speed;
      
#line 2137 
      bp->duplex = bp->req_duplex;
      
#line 2138 
      bnx2_resolve_flow_ctrl(bp);
      
#line 2139 
      bnx2_set_mac_link(bp);
    }
    else ;
  }
  else {
    
#line 2142 
    bnx2_resolve_flow_ctrl(bp);
    
#line 2143 
    bnx2_set_mac_link(bp);
  }
  
#line 2145 
  __retres = 0;
  return_label: 
#line 2145 
                return __retres;
}


#line 2149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_setup_phy(struct bnx2 *bp, u8 port)
{
  int __retres;
  
#line 2153 
  if ((unsigned int)bp->loopback == 1U) {
    
#line 2154 
    __retres = 0;
    
#line 2154 
    goto return_label;
  }
  else ;
  
#line 2156 
  if ((bp->phy_flags & 1U) != 0U) {
    int tmp;
    
#line 2157 
    tmp = bnx2_setup_serdes_phy(bp,(unsigned char)((int)port));
    
#line 2157 
    __retres = tmp;
    
#line 2157 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 2160 
    tmp_0 = bnx2_setup_copper_phy(bp);
    
#line 2160 
    __retres = tmp_0;
    
#line 2160 
    goto return_label;
  }
  return_label: 
#line 2156 
                return __retres;
}


#line 2165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_5709s_phy(struct bnx2 *bp, int reset_phy)
{
  int __retres;
  u32 val;
  
#line 2169 
  bp->mii_bmcr = 16U;
  
#line 2170 
  bp->mii_bmsr = 17U;
  
#line 2171 
  bp->mii_bmsr1 = 27U;
  
#line 2172 
  bp->mii_adv = 20U;
  
#line 2173 
  bp->mii_lpa = 21U;
  
#line 2174 
  bp->mii_up1 = 25U;
  
#line 2176 
  bnx2_write_phy(bp,31U,65488U);
  
#line 2177 
  bnx2_write_phy(bp,30U,14336U);
  
#line 2179 
  bnx2_write_phy(bp,31U,65504U);
  
#line 2180 
  if (reset_phy != 0) 
#line 2181 
                      bnx2_reset_phy(bp); else ;
  
#line 2183 
  bnx2_write_phy(bp,31U,33536U);
  
#line 2185 
  bnx2_read_phy(bp,16U,& val);
  
#line 2186 
  val &= 4294967279U;
  
#line 2187 
  val |= 1U;
  
#line 2188 
  bnx2_write_phy(bp,16U,val);
  
#line 2190 
  bnx2_write_phy(bp,31U,33568U);
  
#line 2191 
  bnx2_read_phy(bp,25U,& val);
  
#line 2192 
  if ((bp->phy_flags & 8U) != 0U) 
#line 2193 
                                  val |= 1U; else 
#line 2195 
                                                  val &= 4294967294U;
  
#line 2196 
  bnx2_write_phy(bp,25U,val);
  
#line 2198 
  bnx2_write_phy(bp,31U,33616U);
  
#line 2199 
  bnx2_read_phy(bp,16U,& val);
  
#line 2200 
  val |= 3U;
  
#line 2201 
  bnx2_write_phy(bp,16U,val);
  
#line 2203 
  bnx2_write_phy(bp,31U,33648U);
  
#line 2205 
  val = 57344U;
  
#line 2207 
  bnx2_write_phy(bp,18U,val);
  
#line 2209 
  bnx2_write_phy(bp,31U,65504U);
  
#line 2211 
  __retres = 0;
  
#line 2211 
  return __retres;
}


#line 2215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_5708s_phy(struct bnx2 *bp, int reset_phy)
{
  int __retres;
  u32 val;
  u32 tmp;
  
#line 2219 
  if (reset_phy != 0) 
#line 2220 
                      bnx2_reset_phy(bp); else ;
  
#line 2222 
  bp->mii_up1 = 11U;
  
#line 2224 
  bnx2_write_phy(bp,31U,2U);
  
#line 2225 
  bnx2_write_phy(bp,16U,1U);
  
#line 2226 
  bnx2_write_phy(bp,31U,0U);
  
#line 2228 
  bnx2_read_phy(bp,16U,& val);
  
#line 2229 
  val |= 17U;
  
#line 2230 
  bnx2_write_phy(bp,16U,val);
  
#line 2232 
  bnx2_read_phy(bp,17U,& val);
  
#line 2233 
  val |= 1U;
  
#line 2234 
  bnx2_write_phy(bp,17U,val);
  
#line 2236 
  if ((bp->phy_flags & 8U) != 0U) {
    
#line 2237 
    bnx2_read_phy(bp,11U,& val);
    
#line 2238 
    val |= 1U;
    
#line 2239 
    bnx2_write_phy(bp,11U,val);
  }
  else ;
  
#line 2242 
  if (((bp->chip_id & 4294967280U) == 1460142080U || (bp->chip_id & 4294967280U) == 1460146176U) || (bp->chip_id & 4294967280U) == 1460146192U) {
    
#line 2246 
    bnx2_write_phy(bp,31U,5U);
    
#line 2248 
    bnx2_read_phy(bp,21U,& val);
    
#line 2249 
    val &= 4294967247U;
    
#line 2250 
    bnx2_write_phy(bp,21U,val);
    
#line 2251 
    bnx2_write_phy(bp,31U,0U);
  }
  else ;
  
#line 2254 
  tmp = bnx2_shmem_rd(bp,88U);
  
#line 2254 
  val = tmp & 65535U;
  
#line 2257 
  if (val != 0U) {
    u32 is_backplane;
    
#line 2260 
    is_backplane = bnx2_shmem_rd(bp,60U);
    
#line 2261 
    if ((is_backplane & 64U) != 0U) {
      
#line 2262 
      bnx2_write_phy(bp,31U,5U);
      
#line 2264 
      bnx2_write_phy(bp,23U,val);
      
#line 2265 
      bnx2_write_phy(bp,31U,0U);
    }
    else ;
  }
  else ;
  
#line 2269 
  __retres = 0;
  
#line 2269 
  return __retres;
}


#line 2273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_5706s_phy(struct bnx2 *bp, int reset_phy)
{
  int __retres;
  
#line 2275 
  if (reset_phy != 0) 
#line 2276 
                      bnx2_reset_phy(bp); else ;
  
#line 2278 
  bp->phy_flags &= 4294967291U;
  
#line 2280 
  if ((bp->chip_id & 4294901760U) == 1460011008U) 
#line 2281 
                                                  writel(768U,(void volatile *)(bp->regview + 2236U)); else ;
  
#line 2283 
  if ((bp->dev)->mtu > 1500U) {
    u32 val;
    
#line 2287 
    bnx2_write_phy(bp,24U,7U);
    
#line 2288 
    bnx2_read_phy(bp,24U,& val);
    
#line 2289 
    bnx2_write_phy(bp,24U,(val & 49144U) | 16384U);
    
#line 2291 
    bnx2_write_phy(bp,28U,27648U);
    
#line 2292 
    bnx2_read_phy(bp,28U,& val);
    
#line 2293 
    bnx2_write_phy(bp,28U,(val & 1021U) | 60418U);
  }
  else {
    u32 val_0;
    
#line 2298 
    bnx2_write_phy(bp,24U,7U);
    
#line 2299 
    bnx2_read_phy(bp,24U,& val_0);
    
#line 2300 
    bnx2_write_phy(bp,24U,val_0 & 4294950904U);
    
#line 2302 
    bnx2_write_phy(bp,28U,27648U);
    
#line 2303 
    bnx2_read_phy(bp,28U,& val_0);
    
#line 2304 
    bnx2_write_phy(bp,28U,(val_0 & 1021U) | 60416U);
  }
  
#line 2307 
  __retres = 0;
  
#line 2307 
  return __retres;
}


#line 2311  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_copper_phy(struct bnx2 *bp, int reset_phy)
{
  int __retres;
  u32 val;
  
#line 2315 
  if (reset_phy != 0) 
#line 2316 
                      bnx2_reset_phy(bp); else ;
  
#line 2318 
  if ((bp->phy_flags & 2U) != 0U) {
    
#line 2319 
    bnx2_write_phy(bp,24U,3072U);
    
#line 2320 
    bnx2_write_phy(bp,23U,10U);
    
#line 2321 
    bnx2_write_phy(bp,21U,12555U);
    
#line 2322 
    bnx2_write_phy(bp,23U,8223U);
    
#line 2323 
    bnx2_write_phy(bp,21U,38150U);
    
#line 2324 
    bnx2_write_phy(bp,23U,16415U);
    
#line 2325 
    bnx2_write_phy(bp,21U,5346U);
    
#line 2326 
    bnx2_write_phy(bp,24U,1024U);
  }
  else ;
  
#line 2329 
  if ((bp->phy_flags & 1024U) != 0U) {
    
#line 2330 
    bnx2_write_phy(bp,23U,3848U);
    
#line 2332 
    bnx2_read_phy(bp,21U,& val);
    
#line 2333 
    val &= 4294967039U;
    
#line 2334 
    bnx2_write_phy(bp,21U,val);
  }
  else ;
  
#line 2337 
  if ((bp->dev)->mtu > 1500U) {
    
#line 2339 
    bnx2_write_phy(bp,24U,7U);
    
#line 2340 
    bnx2_read_phy(bp,24U,& val);
    
#line 2341 
    bnx2_write_phy(bp,24U,val | 16384U);
    
#line 2343 
    bnx2_read_phy(bp,16U,& val);
    
#line 2344 
    bnx2_write_phy(bp,16U,val | 1U);
  }
  else {
    
#line 2347 
    bnx2_write_phy(bp,24U,7U);
    
#line 2348 
    bnx2_read_phy(bp,24U,& val);
    
#line 2349 
    bnx2_write_phy(bp,24U,val & 4294950904U);
    
#line 2351 
    bnx2_read_phy(bp,16U,& val);
    
#line 2352 
    bnx2_write_phy(bp,16U,val & 4294967294U);
  }
  
#line 2356 
  bnx2_write_phy(bp,24U,28679U);
  
#line 2357 
  bnx2_read_phy(bp,24U,& val);
  
#line 2358 
  val |= 32784U;
  
#line 2361 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 2362 
                                                  val |= 512U; else ;
  
#line 2364 
  bnx2_write_phy(bp,24U,val);
  
#line 2365 
  __retres = 0;
  
#line 2365 
  return __retres;
}


#line 2370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_phy(struct bnx2 *bp, int reset_phy)
{
  u32 val;
  
#line 2375 
  int rc = 0;
  
#line 2377 
  bp->phy_flags &= 4294966527U;
  
#line 2378 
  bp->phy_flags |= 512U;
  
#line 2380 
  bp->mii_bmcr = 0U;
  
#line 2381 
  bp->mii_bmsr = 1U;
  
#line 2382 
  bp->mii_bmsr1 = 1U;
  
#line 2383 
  bp->mii_adv = 4U;
  
#line 2384 
  bp->mii_lpa = 5U;
  
#line 2386 
  writel(2048U,(void volatile *)(bp->regview + 5128U));
  
#line 2388 
  if ((bp->phy_flags & 2048U) != 0U) 
#line 2389 
                                     goto setup_phy; else ;
  
#line 2391 
  bnx2_read_phy(bp,2U,& val);
  
#line 2392 
  bp->phy_id = val << 16;
  
#line 2393 
  bnx2_read_phy(bp,3U,& val);
  
#line 2394 
  bp->phy_id |= val & 65535U;
  
#line 2396 
  if ((bp->phy_flags & 1U) != 0U) {
    
#line 2397 
    if ((bp->chip_id & 4294901760U) == 1460011008U) 
#line 2398 
                                                    rc = bnx2_init_5706s_phy(bp,reset_phy);
    else 
      
#line 2399 
      if ((bp->chip_id & 4294901760U) == 1460142080U) 
#line 2400 
                                                      rc = bnx2_init_5708s_phy(bp,reset_phy);
      else 
        
#line 2401 
        if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 2402 
                                                        rc = bnx2_init_5709s_phy(bp,reset_phy); else ;
  }
  else 
#line 2405 
       rc = bnx2_init_copper_phy(bp,reset_phy);
  setup_phy: 
#line 2408 
  ;
  
#line 2409 
  if (rc == 0) 
#line 2410 
               rc = bnx2_setup_phy(bp,(unsigned char)((int)bp->phy_port)); else ;
  
#line 2412 
  return rc;
}


#line 2416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_mac_loopback(struct bnx2 *bp)
{
  int __retres;
  u32 mac_mode;
  
#line 2420 
  mac_mode = readl((void const volatile *)(bp->regview + 5120U));
  
#line 2421 
  mac_mode &= 4294967283U;
  
#line 2422 
  mac_mode |= 2064U;
  
#line 2423 
  writel(mac_mode,(void volatile *)(bp->regview + 5120U));
  
#line 2424 
  bp->link_up = (unsigned char)1U;
  
#line 2425 
  __retres = 0;
  
#line 2425 
  return __retres;
}


#line 2428 
static int bnx2_test_link(struct bnx2 *bp);


#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_phy_loopback(struct bnx2 *bp)
{
  int __retres;
  u32 mac_mode;
  int rc;
  int i;
  int tmp;
  
#line 2436 
  ldv_spin_lock_bh_96(& bp->phy_lock);
  
#line 2437 
  rc = bnx2_write_phy(bp,bp->mii_bmcr,16704U);
  
#line 2439 
  ldv_spin_unlock_bh_97(& bp->phy_lock);
  
#line 2440 
  if (rc != 0) {
    
#line 2441 
    __retres = rc;
    
#line 2441 
    goto return_label;
  }
  else ;
  
#line 2443 
  i = 0;
  
#line 2443 
  goto ldv_57255;
  ldv_57254: 
#line 2444 
  ;
  
#line 2444 
  tmp = bnx2_test_link(bp);
  
#line 2444 
  if (tmp == 0) 
#line 2445 
                goto ldv_57253; else ;
  
#line 2446 
  msleep(100U);
  
#line 2443 
  i += 1;
  ldv_57255: 
#line 2444 
  ;
  
#line 2443 
  if (i <= 9) 
#line 2445 
              goto ldv_57254; else 
#line 2448 
                                   goto ldv_57253;
  ldv_57253: 
#line 2449 
  ;
  
#line 2449 
  mac_mode = readl((void const volatile *)(bp->regview + 5120U));
  
#line 2450 
  mac_mode &= 4294965185U;
  
#line 2454 
  mac_mode |= 8U;
  
#line 2455 
  writel(mac_mode,(void volatile *)(bp->regview + 5120U));
  
#line 2456 
  bp->link_up = (unsigned char)1U;
  
#line 2457 
  __retres = 0;
  return_label: 
#line 2457 
                return __retres;
}


#line 2461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_dump_mcp_state(struct bnx2 *bp)
{
  u32 mcp_p0;
  u32 mcp_p1;
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  u32 tmp_7;
  u32 tmp_8;
  u32 tmp_9;
  u32 tmp_10;
  u32 tmp_11;
  u32 tmp_12;
  u32 tmp_13;
  u32 tmp_14;
  u32 tmp_15;
  u32 tmp_16;
  u32 tmp_17;
  u32 tmp_18;
  u32 tmp_19;
  u32 tmp_20;
  u32 tmp_21;
  u32 tmp_22;
  u32 tmp_23;
  u32 tmp_24;
  u32 tmp_25;
  u32 tmp_26;
  u32 tmp_27;
  u32 tmp_28;
  u32 tmp_29;
  u32 tmp_30;
  
#line 2463 
  struct net_device *dev = bp->dev;
  
#line 2466 
  netdev_err((struct net_device const *)dev,"<--- start MCP states dump --->\n");
  
#line 2467 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 2468 
    mcp_p0 = 1506760U;
    
#line 2469 
    mcp_p1 = 1505736U;
  }
  else {
    
#line 2471 
    mcp_p0 = 1482184U;
    
#line 2472 
    mcp_p1 = 1481160U;
  }
  
#line 2475 
  tmp = bnx2_reg_rd_ind(bp,mcp_p1);
  
#line 2474 
  tmp_0 = bnx2_reg_rd_ind(bp,mcp_p0);
  
#line 2474 
  ;
  
#line 2474 
  netdev_err((struct net_device const *)dev,"DEBUG: MCP_STATE_P0[%08x] MCP_STATE_P1[%08x]\n",tmp_0,tmp);
  
#line 2478 
  tmp_1 = bnx2_reg_rd_ind(bp,1331208U);
  
#line 2477 
  tmp_2 = bnx2_reg_rd_ind(bp,1331204U);
  
#line 2476 
  tmp_3 = bnx2_reg_rd_ind(bp,1331200U);
  
#line 2476 
  ;
  
#line 2476 
  netdev_err((struct net_device const *)dev,"DEBUG: MCP mode[%08x] state[%08x] evt_mask[%08x]\n",tmp_3,tmp_2,tmp_1);
  
#line 2482 
  tmp_4 = bnx2_reg_rd_ind(bp,1331232U);
  
#line 2481 
  tmp_5 = bnx2_reg_rd_ind(bp,1331228U);
  
#line 2480 
  tmp_6 = bnx2_reg_rd_ind(bp,1331228U);
  
#line 2480 
  ;
  
#line 2480 
  netdev_err((struct net_device const *)dev,"DEBUG: pc[%08x] pc[%08x] instr[%08x]\n",tmp_6,tmp_5,tmp_4);
  
#line 2484 
  netdev_err((struct net_device const *)dev,"DEBUG: shmem states:\n");
  
#line 2487 
  tmp_7 = bnx2_shmem_rd(bp,12U);
  
#line 2486 
  tmp_8 = bnx2_shmem_rd(bp,8U);
  
#line 2485 
  tmp_9 = bnx2_shmem_rd(bp,4U);
  
#line 2485 
  ;
  
#line 2485 
  netdev_err((struct net_device const *)dev,"DEBUG: drv_mb[%08x] fw_mb[%08x] link_status[%08x]",tmp_9,tmp_8,tmp_7);
  
#line 2489 
  tmp_10 = bnx2_shmem_rd(bp,16U);
  
#line 2489 
  printk("",tmp_10);
  
#line 2491 
  tmp_11 = bnx2_shmem_rd(bp,448U);
  
#line 2490 
  tmp_12 = bnx2_shmem_rd(bp,32U);
  
#line 2490 
  ;
  
#line 2490 
  netdev_err((struct net_device const *)dev,"DEBUG: dev_info_signature[%08x] reset_type[%08x]",tmp_12,tmp_11);
  
#line 2493 
  tmp_13 = bnx2_shmem_rd(bp,456U);
  
#line 2493 
  printk("",tmp_13);
  
#line 2495 
  tmp_14 = bnx2_shmem_rd(bp,460U);
  
#line 2495 
  tmp_15 = bnx2_shmem_rd(bp,456U);
  
#line 2495 
  tmp_16 = bnx2_shmem_rd(bp,452U);
  
#line 2495 
  tmp_17 = bnx2_shmem_rd(bp,448U);
  
#line 2495 
  ;
  
#line 2495 
  netdev_err((struct net_device const *)bp->dev,"DEBUG: %08x: %08x %08x %08x %08x\n",448,tmp_17,tmp_16,tmp_15,tmp_14);
  
#line 2496 
  tmp_18 = bnx2_shmem_rd(bp,984U);
  
#line 2496 
  tmp_19 = bnx2_shmem_rd(bp,980U);
  
#line 2496 
  tmp_20 = bnx2_shmem_rd(bp,976U);
  
#line 2496 
  tmp_21 = bnx2_shmem_rd(bp,972U);
  
#line 2496 
  ;
  
#line 2496 
  netdev_err((struct net_device const *)bp->dev,"DEBUG: %08x: %08x %08x %08x %08x\n",972,tmp_21,tmp_20,tmp_19,tmp_18);
  
#line 2497 
  tmp_22 = bnx2_shmem_rd(bp,1000U);
  
#line 2497 
  tmp_23 = bnx2_shmem_rd(bp,996U);
  
#line 2497 
  tmp_24 = bnx2_shmem_rd(bp,992U);
  
#line 2497 
  tmp_25 = bnx2_shmem_rd(bp,988U);
  
#line 2497 
  ;
  
#line 2497 
  netdev_err((struct net_device const *)bp->dev,"DEBUG: %08x: %08x %08x %08x %08x\n",988,tmp_25,tmp_24,tmp_23,tmp_22);
  
#line 2498 
  tmp_26 = bnx2_shmem_rd(bp,1016U);
  
#line 2498 
  tmp_27 = bnx2_shmem_rd(bp,1012U);
  
#line 2498 
  tmp_28 = bnx2_shmem_rd(bp,1008U);
  
#line 2498 
  tmp_29 = bnx2_shmem_rd(bp,1004U);
  
#line 2498 
  ;
  
#line 2498 
  netdev_err((struct net_device const *)bp->dev,"DEBUG: %08x: %08x %08x %08x %08x\n",1004,tmp_29,tmp_28,tmp_27,tmp_26);
  
#line 2499 
  tmp_30 = bnx2_shmem_rd(bp,1020U);
  
#line 2499 
  ;
  
#line 2499 
  netdev_err((struct net_device const *)dev,"DEBUG: 0x3fc[%08x]\n",tmp_30);
  
#line 2500 
  netdev_err((struct net_device const *)dev,"<--- end MCP states dump --->\n");
  
#line 2501 
  return;
}


#line 2504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_fw_sync(struct bnx2 *bp, u32 msg_data, int ack, int silent)
{
  int __retres;
  int i;
  u32 val;
  
#line 2509 
  bp->fw_wr_seq = (u16)((int)bp->fw_wr_seq + 1);
  
#line 2510 
  msg_data = (unsigned int)bp->fw_wr_seq | msg_data;
  
#line 2511 
  bp->fw_last_msg = msg_data;
  
#line 2513 
  bnx2_shmem_wr(bp,4U,msg_data);
  
#line 2515 
  if (ack == 0) {
    
#line 2516 
    __retres = 0;
    
#line 2516 
    goto return_label;
  }
  else ;
  
#line 2519 
  i = 0;
  
#line 2519 
  goto ldv_57272;
  ldv_57271: 
#line 2520 
  ;
  
#line 2520 
  msleep(10U);
  
#line 2522 
  val = bnx2_shmem_rd(bp,8U);
  
#line 2524 
  if (((val ^ msg_data) & 65535U) == 0U) 
#line 2525 
                                         goto ldv_57270; else ;
  
#line 2519 
  i += 1;
  ldv_57272: 
#line 2520 
  ;
  
#line 2519 
  if (i <= 99) 
#line 2521 
               goto ldv_57271; else 
#line 2524 
                                    goto ldv_57270;
  ldv_57270: 
#line 2525 
  ;
  
#line 2527 
  if ((msg_data & 16711680U) == 65536U) {
    
#line 2528 
    __retres = 0;
    
#line 2528 
    goto return_label;
  }
  else ;
  
#line 2531 
  if (((val ^ msg_data) & 65535U) != 0U) {
    
#line 2532 
    msg_data &= 16777215U;
    
#line 2533 
    msg_data |= 83886080U;
    
#line 2535 
    bnx2_shmem_wr(bp,4U,msg_data);
    
#line 2536 
    if (silent == 0) {
      
#line 2537 
      printk("\001",msg_data);
      
#line 2538 
      bnx2_dump_mcp_state(bp);
    }
    else ;
    
#line 2541 
    __retres = -16;
    
#line 2541 
    goto return_label;
  }
  else ;
  
#line 2544 
  if ((val & 16711680U) != 0U) {
    
#line 2545 
    __retres = -5;
    
#line 2545 
    goto return_label;
  }
  else ;
  
#line 2547 
  __retres = 0;
  return_label: 
#line 2547 
                return __retres;
}


#line 2551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_5709_context(struct bnx2 *bp)
{
  int __retres;
  int i;
  u32 val;
  
#line 2553 
  int ret = 0;
  
#line 2556 
  val = 12289U;
  
#line 2557 
  val |= 262144U;
  
#line 2558 
  writel(val,(void volatile *)(bp->regview + 4096U));
  
#line 2559 
  i = 0;
  
#line 2559 
  goto ldv_57281;
  ldv_57280: 
#line 2560 
  ;
  
#line 2560 
  val = readl((void const volatile *)(bp->regview + 4096U));
  
#line 2561 
  if (((long)val & 8192L) == 0L) 
#line 2562 
                                 goto ldv_57279; else ;
  
#line 2563 
  __const_udelay(8590UL);
  
#line 2559 
  i += 1;
  ldv_57281: 
#line 2560 
  ;
  
#line 2559 
  if (i <= 9) 
#line 2561 
              goto ldv_57280; else 
#line 2564 
                                   goto ldv_57279;
  ldv_57279: 
#line 2565 
  ;
  
#line 2565 
  if (((long)val & 8192L) != 0L) {
    
#line 2566 
    __retres = -16;
    
#line 2566 
    goto return_label;
  }
  else ;
  
#line 2568 
  i = 0;
  
#line 2568 
  goto ldv_57288;
  ldv_57287: 
#line 2569 
  ;
  {
    int j;
    
#line 2571 
    if (bp->ctx_blk[i] != (void *)0) 
#line 2572 
                                     memset(bp->ctx_blk[i],0,4096UL);
    else {
      
#line 2574 
      __retres = -12;
      
#line 2574 
      goto return_label;
    }
    
#line 2576 
    writel((unsigned int)bp->ctx_blk_mapping[i] | 1U,(void volatile *)(bp->regview + 4300U));
    
#line 2579 
    writel((unsigned int)(bp->ctx_blk_mapping[i] >> 32),(void volatile *)(bp->regview + 4304U));
    
#line 2581 
    writel((unsigned int)(i | 1073741824),(void volatile *)(bp->regview + 4296U));
    
#line 2583 
    j = 0;
    
#line 2583 
    goto ldv_57285;
    ldv_57284: 
#line 2584 
    ;
    
#line 2585 
    val = readl((void const volatile *)(bp->regview + 4296U));
    
#line 2586 
    if (((long)val & 1073741824L) == 0L) 
#line 2587 
                                         goto ldv_57283; else ;
    
#line 2588 
    __const_udelay(21475UL);
    
#line 2583 
    j += 1;
    ldv_57285: 
#line 2584 
    ;
    
#line 2583 
    if (j <= 9) 
#line 2585 
                goto ldv_57284; else 
#line 2588 
                                     goto ldv_57283;
    ldv_57283: 
#line 2589 
    ;
    
#line 2590 
    if (((long)val & 1073741824L) != 0L) {
      
#line 2591 
      ret = -16;
      
#line 2592 
      goto ldv_57286;
    }
    else ;
  }
  
#line 2568 
  i += 1;
  ldv_57288: 
#line 2569 
  ;
  
#line 2568 
  if (bp->ctx_pages > i) 
#line 2570 
                         goto ldv_57287; else 
#line 2573 
                                              goto ldv_57286;
  ldv_57286: 
#line 2574 
  ;
  
#line 2595 
  __retres = ret;
  return_label: 
#line 2595 
                return __retres;
}


#line 2599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_context(struct bnx2 *bp)
{
  u32 vcid;
  
#line 2603 
  vcid = 96U;
  
#line 2604 
  goto ldv_57305;
  ldv_57304: 
#line 2605 
  ;
  {
    u32 vcid_addr;
    u32 pcid_addr;
    u32 offset;
    int i;
    
#line 2608 
    vcid -= 1U;
    
#line 2610 
    if ((bp->chip_id & 4294967280U) == 1460011008U) {
      u32 new_vcid;
      
#line 2613 
      vcid_addr = vcid << 6;
      
#line 2614 
      if ((vcid & 8U) != 0U) 
#line 2615 
                             new_vcid = (vcid & 247U) + 96U; else 
#line 2618 
                                                                  new_vcid = vcid;
      
#line 2620 
      pcid_addr = new_vcid << 6;
    }
    else {
      
#line 2623 
      vcid_addr = vcid << 7;
      
#line 2624 
      pcid_addr = vcid_addr;
    }
    
#line 2627 
    i = 0;
    
#line 2627 
    goto ldv_57302;
    ldv_57301: 
#line 2628 
    ;
    
#line 2628 
    vcid_addr = (unsigned int)(i << 6) + vcid_addr;
    
#line 2629 
    pcid_addr = (unsigned int)(i << 6) + pcid_addr;
    
#line 2631 
    writel(vcid_addr,(void volatile *)(bp->regview + 4104U));
    
#line 2632 
    writel(pcid_addr,(void volatile *)(bp->regview + 4108U));
    
#line 2635 
    offset = 0U;
    
#line 2635 
    goto ldv_57299;
    ldv_57298: 
#line 2636 
    ;
    
#line 2636 
    bnx2_ctx_wr(bp,vcid_addr,offset,0U);
    
#line 2635 
    offset += 4U;
    ldv_57299: 
#line 2636 
    ;
    
#line 2635 
    if (offset <= 63U) 
#line 2637 
                       goto ldv_57298; else 
#line 2640 
                                            goto ldv_57300;
    ldv_57300: 
#line 2641 
    ;
    
#line 2627 
    i += 1;
    ldv_57302: 
#line 2628 
    ;
    
#line 2627 
    if (i <= 1) 
#line 2629 
                goto ldv_57301; else 
#line 2632 
                                     goto ldv_57303;
    ldv_57303: 
#line 2633 
    ;
  }
  ldv_57305: 
#line 2635 
  ;
  
#line 2604 
  if (vcid != 0U) 
#line 2606 
                  goto ldv_57304; else 
#line 2609 
                                       goto ldv_57306;
  ldv_57306: 
#line 2610 
  ;
  
#line 2611 
  return;
}


#line 2642  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_alloc_bad_rbuf(struct bnx2 *bp)
{
  int __retres;
  u16 *good_mbuf;
  u32 good_mbuf_cnt;
  u32 val;
  
#line 2648 
  good_mbuf = (u16 *)kmalloc(1024UL,208U);
  
#line 2649 
  if (good_mbuf == (u16 *)0U) {
    
#line 2650 
    __retres = -12;
    
#line 2650 
    goto return_label;
  }
  else ;
  
#line 2652 
  writel(4096U,(void volatile *)(bp->regview + 2064U));
  
#line 2655 
  good_mbuf_cnt = 0U;
  
#line 2658 
  val = bnx2_reg_rd_ind(bp,2097156U);
  
#line 2659 
  goto ldv_57314;
  ldv_57313: 
#line 2660 
  ;
  
#line 2660 
  bnx2_reg_wr_ind(bp,2097152U,32U);
  
#line 2663 
  val = bnx2_reg_rd_ind(bp,2097168U);
  
#line 2665 
  val &= 65408U;
  
#line 2668 
  if ((val & 512U) == 0U) {
    
#line 2669 
    *(good_mbuf + good_mbuf_cnt) = (unsigned short)val;
    
#line 2670 
    good_mbuf_cnt += 1U;
  }
  else ;
  
#line 2673 
  val = bnx2_reg_rd_ind(bp,2097156U);
  ldv_57314: 
#line 2674 
  ;
  
#line 2659 
  if (((long)val & 1023L) != 0L) 
#line 2661 
                                 goto ldv_57313; else 
#line 2664 
                                                      goto ldv_57315;
  ldv_57315: 
#line 2665 
  ;
  
#line 2678 
  goto ldv_57317;
  ldv_57316: 
#line 2679 
  ;
  
#line 2679 
  good_mbuf_cnt -= 1U;
  
#line 2681 
  val = (unsigned int)*(good_mbuf + good_mbuf_cnt);
  
#line 2682 
  val = ((val << 9) | val) | 1U;
  
#line 2684 
  bnx2_reg_wr_ind(bp,2097172U,val);
  ldv_57317: 
#line 2685 
  ;
  
#line 2678 
  if (good_mbuf_cnt != 0U) 
#line 2680 
                           goto ldv_57316; else 
#line 2683 
                                                goto ldv_57318;
  ldv_57318: 
#line 2684 
  ;
  
#line 2686 
  kfree((void const *)good_mbuf);
  
#line 2687 
  __retres = 0;
  return_label: 
#line 2687 
                return __retres;
}


#line 2691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_set_mac_addr(struct bnx2 *bp, u8 *mac_addr, u32 pos)
{
  u32 val;
  
#line 2695 
  val = (unsigned int)(((int)*mac_addr << 8) | (int)*(mac_addr + 1U));
  
#line 2697 
  writel(val,(void volatile *)(bp->regview + (pos * 8U + 5136U)));
  
#line 2699 
  val = (unsigned int)(((((int)*(mac_addr + 2U) << 24) | ((int)*(mac_addr + 3U) << 16)) | ((int)*(mac_addr + 4U) << 8)) | (int)*(mac_addr + 5U));
  
#line 2702 
  writel(val,(void volatile *)(bp->regview + (pos * 8U + 5140U)));
  
#line 2703 
  return;
}


#line 2706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static int bnx2_alloc_rx_page(struct bnx2 *bp, struct bnx2_rx_ring_info *rxr, u16 index, gfp_t gfp)
{
  int __retres;
  dma_addr_t mapping;
  int tmp_0;
  
#line 2709 
  struct bnx2_sw_pg *rx_pg = rxr->rx_pg_ring + (int)index;
  
#line 2710 
  struct bnx2_rx_bd *rxbd = rxr->rx_pg_desc_ring[(unsigned long)index >> 8] + ((unsigned int)index & 255U);
  
#line 2712 
  struct page *page = alloc_pages(gfp,0U);
  
#line 2714 
  if (page == (struct page *)0) {
    
#line 2715 
    __retres = -12;
    
#line 2715 
    goto return_label;
  }
  else ;
  
#line 2716 
  mapping = dma_map_page(& (bp->pdev)->dev,page,0UL,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 2718 
  tmp_0 = dma_mapping_error(& (bp->pdev)->dev,mapping);
  
#line 2718 
  if (tmp_0 != 0) {
    
#line 2719 
    __free_pages(page,0U);
    
#line 2720 
    __retres = -5;
    
#line 2720 
    goto return_label;
  }
  else ;
  
#line 2723 
  rx_pg->page = page;
  
#line 2724 
  rx_pg->mapping = mapping;
  
#line 2725 
  rxbd->rx_bd_haddr_hi = (unsigned int)(mapping >> 32);
  
#line 2726 
  rxbd->rx_bd_haddr_lo = (unsigned int)mapping;
  
#line 2727 
  __retres = 0;
  return_label: 
#line 2727 
                return __retres;
}


#line 2731  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_rx_page(struct bnx2 *bp, struct bnx2_rx_ring_info *rxr, u16 index)
{
  
#line 2733 
  struct bnx2_sw_pg *rx_pg = rxr->rx_pg_ring + (int)index;
  
#line 2734 
  struct page *page = rx_pg->page;
  
#line 2736 
  if (page == (struct page *)0) 
#line 2737 
                                goto return_label; else ;
  
#line 2739 
  dma_unmap_page(& (bp->pdev)->dev,rx_pg->mapping,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 2742 
  __free_pages(page,0U);
  
#line 2743 
  rx_pg->page = (struct page *)0;
  return_label: 
#line 2744 
                return;
}


#line 2747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static int bnx2_alloc_rx_data(struct bnx2 *bp, struct bnx2_rx_ring_info *rxr, u16 index, gfp_t gfp)
{
  int __retres;
  u8 *data;
  dma_addr_t mapping;
  struct l2_fhdr *tmp_0;
  int tmp_1;
  
#line 2750 
  struct bnx2_sw_bd *rx_buf = rxr->rx_buf_ring + (int)index;
  
#line 2752 
  struct bnx2_rx_bd *rxbd = rxr->rx_desc_ring[(unsigned long)index >> 8] + ((unsigned int)index & 255U);
  
#line 2755 
  data = (u8 *)kmalloc((unsigned long)bp->rx_buf_size,gfp);
  
#line 2756 
  if (data == (u8 *)0U) {
    
#line 2757 
    __retres = -12;
    
#line 2757 
    goto return_label;
  }
  else ;
  
#line 2759 
  ;
  
#line 2759 
  tmp_0 = get_l2_fhdr(data);
  
#line 2759 
  ;
  
#line 2759 
  mapping = dma_map_single_attrs(& (bp->pdev)->dev,(void *)tmp_0,(unsigned long)bp->rx_buf_use_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 2763 
  tmp_1 = dma_mapping_error(& (bp->pdev)->dev,mapping);
  
#line 2763 
  if (tmp_1 != 0) {
    
#line 2764 
    kfree((void const *)data);
    
#line 2765 
    __retres = -5;
    
#line 2765 
    goto return_label;
  }
  else ;
  
#line 2768 
  rx_buf->data = data;
  
#line 2769 
  rx_buf->mapping = mapping;
  
#line 2771 
  rxbd->rx_bd_haddr_hi = (unsigned int)(mapping >> 32);
  
#line 2772 
  rxbd->rx_bd_haddr_lo = (unsigned int)mapping;
  
#line 2774 
  rxr->rx_prod_bseq += bp->rx_buf_use_size;
  
#line 2776 
  __retres = 0;
  return_label: 
#line 2776 
                return __retres;
}


#line 2780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_phy_event_is_set(struct bnx2 *bp, struct bnx2_napi *bnapi, u32 event)
{
  u32 new_link_state;
  u32 old_link_state;
  
#line 2782 
  struct status_block *sblk = bnapi->status_blk.msi;
  
#line 2784 
  int is_set = 1;
  
#line 2786 
  new_link_state = sblk->status_attn_bits & event;
  
#line 2787 
  old_link_state = sblk->status_attn_bits_ack & event;
  
#line 2788 
  if (new_link_state != old_link_state) 
    
#line 2789 
    if (new_link_state != 0U) 
#line 2790 
                              writel(event,(void volatile *)(bp->regview + 136U)); else 
                                                                    
#line 2792 
                                                                    writel(event,(void volatile *)(bp->regview + 140U));
  else 
#line 2794 
       is_set = 0;
  
#line 2796 
  return is_set;
}


#line 2800  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_phy_int(struct bnx2 *bp, struct bnx2_napi *bnapi)
{
  int tmp;
  int tmp_0;
  
#line 2802 
  ldv_spin_lock_98(& bp->phy_lock);
  
#line 2804 
  tmp = bnx2_phy_event_is_set(bp,bnapi,1U);
  
#line 2804 
  if (tmp != 0) 
#line 2805 
                bnx2_set_link(bp); else ;
  
#line 2806 
  tmp_0 = bnx2_phy_event_is_set(bp,bnapi,16777216U);
  
#line 2806 
  if (tmp_0 != 0) 
#line 2807 
                  bnx2_set_remote_link(bp); else ;
  
#line 2809 
  ldv_spin_unlock_99(& bp->phy_lock);
  
#line 2810 
  return;
}


#line 2814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static u16 bnx2_get_hw_tx_cons(struct bnx2_napi *bnapi)
{
  u16 cons;
  
#line 2817 
  ldv_inline_asm();
  
#line 2820 
  cons = *(bnapi->hw_tx_cons_ptr);
  
#line 2821 
  ldv_inline_asm();
  
#line 2822 
  if ((long)(((unsigned long)cons & 255UL) == 255UL) != 0L) 
#line 2823 
                                                            cons = (u16)((int)cons + 1); else ;
  
#line 2824 
  return cons;
}


#line 2828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_tx_int(struct bnx2 *bp, struct bnx2_napi *bnapi, int budget)
{
  u16 hw_cons;
  u16 sw_cons;
  u16 sw_ring_cons;
  int index;
  struct netdev_queue *txq;
  bool tmp_9;
  
#line 2830 
  struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
  
#line 2832 
  int tx_pkt = 0;
  
#line 2833 
  unsigned int tx_bytes = 0U;
  
#line 2836 
  index = (int)(((long)bnapi - (long)(& bp->bnx2_napi)) / 1088L);
  
#line 2837 
  txq = netdev_get_tx_queue((struct net_device const *)bp->dev,(unsigned int)index);
  
#line 2839 
  hw_cons = bnx2_get_hw_tx_cons(bnapi);
  
#line 2840 
  sw_cons = txr->tx_cons;
  
#line 2842 
  goto ldv_57394;
  ldv_57393: 
#line 2843 
  ;
  {
    struct bnx2_sw_tx_bd *tx_buf;
    struct sk_buff *skb;
    int i;
    int last;
    unsigned int tmp;
    
#line 2847 
    sw_ring_cons = (unsigned short)((unsigned int)sw_cons & 255U);
    
#line 2849 
    tx_buf = txr->tx_buf_ring + (int)sw_ring_cons;
    
#line 2850 
    skb = tx_buf->skb;
    
#line 2853 
    __builtin_prefetch((void const *)(& skb->end));
    
#line 2856 
    if ((unsigned int)tx_buf->is_gso != 0U) {
      u16 last_idx;
      u16 last_ring_idx;
      
#line 2859 
      last_idx = (unsigned short)((unsigned int)((int)tx_buf->nr_frags + (int)sw_cons) + 1U);
      
#line 2860 
      last_ring_idx = (unsigned short)((unsigned int)((int)tx_buf->nr_frags + (int)sw_ring_cons) + 1U);
      
#line 2861 
      if ((long)((unsigned int)last_ring_idx > 254U) != 0L) 
#line 2862 
                                                            last_idx = (u16)((int)last_idx + 1); else ;
      
#line 2864 
      if ((int)((short)((int)last_idx - (int)hw_cons)) > 0) 
#line 2865 
                                                            goto ldv_57388; else ;
    }
    else ;
    
#line 2869 
    tmp = skb_headlen((struct sk_buff const *)skb);
    
#line 2869 
    ;
    
#line 2869 
    ;
    
#line 2869 
    dma_unmap_single_attrs(& (bp->pdev)->dev,tx_buf->mapping,(unsigned long)tmp,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 2872 
    tx_buf->skb = (struct sk_buff *)0;
    
#line 2873 
    last = (int)tx_buf->nr_frags;
    
#line 2875 
    i = 0;
    
#line 2875 
    goto ldv_57391;
    ldv_57390: 
#line 2876 
    ;
    {
      struct bnx2_sw_tx_bd *tx_buf_0;
      unsigned int tmp_1;
      unsigned char *tmp_0;
      
#line 2878 
      if (((unsigned long)sw_cons & 254UL) == 254UL) 
#line 2878 
                                                     sw_cons = (unsigned short)((unsigned int)sw_cons + 2U); else 
                                                                    
#line 2878 
                                                                    sw_cons = (unsigned short)((unsigned int)sw_cons + 1U);
      
#line 2880 
      tx_buf_0 = txr->tx_buf_ring + ((unsigned int)sw_cons & 255U);
      
#line 2883 
      tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2883 
      tmp_1 = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_0)->frags[i]));
      
#line 2881 
      ;
      
#line 2881 
      ;
      
#line 2881 
      dma_unmap_page(& (bp->pdev)->dev,tx_buf_0->mapping,(unsigned long)tmp_1,(enum dma_data_direction)DMA_TO_DEVICE);
    }
    
#line 2875 
    i += 1;
    ldv_57391: 
#line 2876 
    ;
    
#line 2875 
    if (i < last) 
#line 2877 
                  goto ldv_57390; else 
#line 2880 
                                       goto ldv_57392;
    ldv_57392: 
#line 2881 
    ;
    
#line 2887 
    if (((unsigned long)sw_cons & 254UL) == 254UL) 
#line 2887 
                                                   sw_cons = (unsigned short)((unsigned int)sw_cons + 2U); else 
                                                                    
#line 2887 
                                                                    sw_cons = (unsigned short)((unsigned int)sw_cons + 1U);
    
#line 2889 
    tx_bytes = skb->len + tx_bytes;
    
#line 2890 
    dev_kfree_skb_any(skb);
    
#line 2891 
    tx_pkt += 1;
    
#line 2892 
    if (tx_pkt == budget) 
#line 2893 
                          goto ldv_57388; else ;
    
#line 2895 
    if ((int)hw_cons == (int)sw_cons) 
#line 2896 
                                      hw_cons = bnx2_get_hw_tx_cons(bnapi); else ;
  }
  ldv_57394: 
#line 2898 
  ;
  
#line 2842 
  if ((int)sw_cons != (int)hw_cons) 
#line 2844 
                                    goto ldv_57393; else 
#line 2847 
                                                         goto ldv_57388;
  ldv_57388: 
#line 2848 
  ;
  
#line 2899 
  netdev_tx_completed_queue(txq,(unsigned int)tx_pkt,tx_bytes);
  
#line 2900 
  txr->hw_tx_cons = hw_cons;
  
#line 2901 
  txr->tx_cons = sw_cons;
  
#line 2902 
  ldv_inline_asm();
  
#line 2910 
  tmp_9 = netif_tx_queue_stopped((struct netdev_queue const *)txq);
  
#line 2910 
  if ((long)((int)tmp_9 != 0) != 0L) {
    u32 tmp_10;
    
#line 2910 
    tmp_10 = bnx2_tx_avail(bp,txr);
    
#line 2910 
    ;
    
#line 2910 
    if (tmp_10 > bp->tx_wake_thresh) {
      int tmp_6;
      bool tmp_7;
      {
        int pscr_ret__;
        {
          
#line 2912 
          void const *__vpp_verify = (void const *)0;
          
#line 2912 
          void const *tmp_2 = __vpp_verify;
        }
        
#line 2912 
        switch (4UL) {
          int tmp_2_0;
          int tmp_3;
          int tmp_4;
          int tmp_5;
          case (unsigned long)1: 
#line 2912 
          ;
          {
            int pfo_ret__;
            
#line 2912 
            switch (4UL) {
              case (unsigned long)1: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57400;
              case (unsigned long)2: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57400;
              case (unsigned long)4: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57400;
              case (unsigned long)8: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57400;
              default: 
#line 2912 
              ;
              
#line 2912 
              __bad_percpu_size();
            }
            ldv_57400: 
#line 2912 
            ;
            
#line 2912 
            tmp_2_0 = pfo_ret__;
          }
          
#line 2912 
          pscr_ret__ = tmp_2_0;
          
#line 2912 
          goto ldv_57406;
          case (unsigned long)2: 
#line 2912 
          ;
          {
            int pfo_ret___0;
            
#line 2912 
            switch (4UL) {
              case (unsigned long)1: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57410;
              case (unsigned long)2: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57410;
              case (unsigned long)4: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57410;
              case (unsigned long)8: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57410;
              default: 
#line 2912 
              ;
              
#line 2912 
              __bad_percpu_size();
            }
            ldv_57410: 
#line 2912 
            ;
            
#line 2912 
            tmp_3 = pfo_ret___0;
          }
          
#line 2912 
          pscr_ret__ = tmp_3;
          
#line 2912 
          goto ldv_57406;
          case (unsigned long)4: 
#line 2912 
          ;
          {
            int pfo_ret___1;
            
#line 2912 
            switch (4UL) {
              case (unsigned long)1: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57419;
              case (unsigned long)2: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57419;
              case (unsigned long)4: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57419;
              case (unsigned long)8: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57419;
              default: 
#line 2912 
              ;
              
#line 2912 
              __bad_percpu_size();
            }
            ldv_57419: 
#line 2912 
            ;
            
#line 2912 
            tmp_4 = pfo_ret___1;
          }
          
#line 2912 
          pscr_ret__ = tmp_4;
          
#line 2912 
          goto ldv_57406;
          case (unsigned long)8: 
#line 2912 
          ;
          {
            int pfo_ret___2;
            
#line 2912 
            switch (4UL) {
              case (unsigned long)1: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57428;
              case (unsigned long)2: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57428;
              case (unsigned long)4: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57428;
              case (unsigned long)8: 
#line 2912 
              ;
              
#line 2913 
              ldv_inline_asm();
              
#line 2912 
              goto ldv_57428;
              default: 
#line 2912 
              ;
              
#line 2912 
              __bad_percpu_size();
            }
            ldv_57428: 
#line 2912 
            ;
            
#line 2912 
            tmp_5 = pfo_ret___2;
          }
          
#line 2912 
          pscr_ret__ = tmp_5;
          
#line 2912 
          goto ldv_57406;
          default: 
#line 2912 
          ;
          
#line 2912 
          __bad_size_call_parameter();
          
#line 2912 
          goto ldv_57406;
        }
        ldv_57406: 
#line 2912 
        ;
        
#line 2912 
        tmp_6 = pscr_ret__;
      }
      
#line 2912 
      ;
      
#line 2912 
      __netif_tx_lock(txq,tmp_6);
      
#line 2913 
      tmp_7 = netif_tx_queue_stopped((struct netdev_queue const *)txq);
      
#line 2913 
      if ((int)tmp_7 != 0) {
        u32 tmp_8;
        
#line 2913 
        tmp_8 = bnx2_tx_avail(bp,txr);
        
#line 2913 
        ;
        
#line 2913 
        if (tmp_8 > bp->tx_wake_thresh) 
#line 2915 
                                        netif_tx_wake_queue(txq); else ;
      }
      else ;
      
#line 2916 
      __netif_tx_unlock(txq);
    }
    else ;
  }
  else ;
  
#line 2919 
  return tx_pkt;
}


#line 2923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_reuse_rx_skb_pages(struct bnx2 *bp, struct bnx2_rx_ring_info *rxr, struct sk_buff *skb, int count)
{
  struct bnx2_sw_pg *cons_rx_pg;
  struct bnx2_sw_pg *prod_rx_pg;
  struct bnx2_rx_bd *cons_bd;
  struct bnx2_rx_bd *prod_bd;
  int i;
  u16 hw_prod;
  u16 prod;
  unsigned int tmp_0;
  
#line 2930 
  u16 cons = rxr->rx_pg_cons;
  
#line 2932 
  cons_rx_pg = rxr->rx_pg_ring + (int)cons;
  
#line 2938 
  if (skb != (struct sk_buff *)0) {
    struct page *page;
    struct skb_shared_info *shinfo;
    
#line 2942 
    shinfo = (struct skb_shared_info *)skb_end_pointer((struct sk_buff const *)skb);
    
#line 2943 
    shinfo->nr_frags = (unsigned char)((int)shinfo->nr_frags - 1);
    
#line 2944 
    page = skb_frag_page((skb_frag_t const *)(& shinfo->frags[(int)shinfo->nr_frags]));
    
#line 2945 
    __skb_frag_set_page(& shinfo->frags[(int)shinfo->nr_frags],(struct page *)0);
    
#line 2947 
    cons_rx_pg->page = page;
    
#line 2948 
    consume_skb(skb);
  }
  else ;
  
#line 2951 
  hw_prod = rxr->rx_pg_prod;
  
#line 2953 
  i = 0;
  
#line 2953 
  goto ldv_57453;
  ldv_57452: 
#line 2954 
  ;
  
#line 2954 
  prod = (unsigned short)((int)((unsigned short)bp->rx_max_pg_ring_idx) & (int)hw_prod);
  
#line 2956 
  prod_rx_pg = rxr->rx_pg_ring + (int)prod;
  
#line 2957 
  cons_rx_pg = rxr->rx_pg_ring + (int)cons;
  
#line 2958 
  cons_bd = rxr->rx_pg_desc_ring[(unsigned long)cons >> 8] + ((unsigned int)cons & 255U);
  
#line 2960 
  prod_bd = rxr->rx_pg_desc_ring[(unsigned long)prod >> 8] + ((unsigned int)prod & 255U);
  
#line 2963 
  if ((int)prod != (int)cons) {
    
#line 2964 
    prod_rx_pg->page = cons_rx_pg->page;
    
#line 2965 
    cons_rx_pg->page = (struct page *)0;
    
#line 2966 
    prod_rx_pg->mapping = cons_rx_pg->mapping;
    
#line 2969 
    prod_bd->rx_bd_haddr_hi = cons_bd->rx_bd_haddr_hi;
    
#line 2970 
    prod_bd->rx_bd_haddr_lo = cons_bd->rx_bd_haddr_lo;
  }
  else ;
  
#line 2973 
  if (((unsigned long)cons & 254UL) == 254UL) 
#line 2973 
                                              tmp_0 = (unsigned int)cons + 2U; else 
                                                                    
#line 2973 
                                                                    tmp_0 = (unsigned int)cons + 1U;
  
#line 2973 
  cons = (unsigned short)(tmp_0 & (unsigned int)((unsigned short)bp->rx_max_pg_ring_idx));
  
#line 2974 
  if (((unsigned long)hw_prod & 254UL) == 254UL) 
#line 2974 
                                                 hw_prod = (unsigned short)((unsigned int)hw_prod + 2U); else 
                                                                    
#line 2974 
                                                                    hw_prod = (unsigned short)((unsigned int)hw_prod + 1U);
  
#line 2953 
  i += 1;
  ldv_57453: 
#line 2954 
  ;
  
#line 2953 
  if (i < count) 
#line 2955 
                 goto ldv_57452; else 
#line 2958 
                                      goto ldv_57454;
  ldv_57454: 
#line 2959 
  ;
  
#line 2976 
  rxr->rx_pg_prod = hw_prod;
  
#line 2977 
  rxr->rx_pg_cons = cons;
  
#line 2978 
  return;
}


#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static void bnx2_reuse_rx_data(struct bnx2 *bp, struct bnx2_rx_ring_info *rxr, u8 *data, u16 cons, u16 prod)
{
  struct bnx2_sw_bd *cons_rx_buf;
  struct bnx2_sw_bd *prod_rx_buf;
  struct bnx2_rx_bd *cons_bd;
  struct bnx2_rx_bd *prod_bd;
  
#line 2987 
  cons_rx_buf = rxr->rx_buf_ring + (int)cons;
  
#line 2988 
  prod_rx_buf = rxr->rx_buf_ring + (int)prod;
  
#line 2990 
  dma_sync_single_for_device(& (bp->pdev)->dev,cons_rx_buf->mapping,146UL,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 2994 
  rxr->rx_prod_bseq += bp->rx_buf_use_size;
  
#line 2996 
  prod_rx_buf->data = data;
  
#line 2998 
  if ((int)cons == (int)prod) 
#line 2999 
                              goto return_label; else ;
  
#line 3001 
  prod_rx_buf->mapping = cons_rx_buf->mapping;
  
#line 3004 
  cons_bd = rxr->rx_desc_ring[(unsigned long)cons >> 8] + ((unsigned int)cons & 255U);
  
#line 3005 
  prod_bd = rxr->rx_desc_ring[(unsigned long)prod >> 8] + ((unsigned int)prod & 255U);
  
#line 3006 
  prod_bd->rx_bd_haddr_hi = cons_bd->rx_bd_haddr_hi;
  
#line 3007 
  prod_bd->rx_bd_haddr_lo = cons_bd->rx_bd_haddr_lo;
  return_label: 
#line 3008 
                return;
}


#line 3011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct sk_buff *bnx2_rx_skb(struct bnx2 *bp, struct bnx2_rx_ring_info *rxr, u8 *data, unsigned int len, unsigned int hdr_len, dma_addr_t dma_addr, u32 ring_idx)
{
  struct sk_buff *__retres;
  int err;
  struct sk_buff *skb;
  struct l2_fhdr *tmp;
  
#line 3016 
  u16 prod = (unsigned short)ring_idx;
  
#line 3019 
  err = bnx2_alloc_rx_data(bp,rxr,(unsigned short)((int)prod),32U);
  
#line 3020 
  if ((long)(err != 0) != 0L) {
    
#line 3021 
    bnx2_reuse_rx_data(bp,rxr,data,(unsigned short)((int)((unsigned short)(ring_idx >> 16))),(unsigned short)((int)prod));
    error: 
#line 3022 
    ;
    
#line 3023 
    if (hdr_len != 0U) {
      
#line 3024 
      unsigned int raw_len = len + 4U;
      
#line 3025 
      int pages = (int)(((raw_len - hdr_len) + 4095U) >> 12);
      
#line 3027 
      bnx2_reuse_rx_skb_pages(bp,rxr,(struct sk_buff *)0,pages);
    }
    else ;
    
#line 3029 
    __retres = (struct sk_buff *)0;
    
#line 3029 
    goto return_label;
  }
  else ;
  
#line 3032 
  dma_unmap_single_attrs(& (bp->pdev)->dev,dma_addr,(unsigned long)bp->rx_buf_use_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
  
#line 3034 
  skb = build_skb((void *)data,0U);
  
#line 3035 
  if (skb == (struct sk_buff *)0) {
    
#line 3036 
    kfree((void const *)data);
    
#line 3037 
    goto error;
  }
  else ;
  
#line 3039 
  tmp = get_l2_fhdr(data);
  
#line 3039 
  ;
  
#line 3039 
  ;
  
#line 3039 
  skb_reserve(skb,(int)(((long)tmp - (long)data) + (long)18U));
  
#line 3040 
  if (hdr_len == 0U) {
    
#line 3041 
    skb_put(skb,len);
    
#line 3042 
    __retres = skb;
    
#line 3042 
    goto return_label;
  }
  else {
    unsigned int i;
    unsigned int frag_len;
    unsigned int frag_size;
    unsigned int pages_0;
    struct bnx2_sw_pg *rx_pg;
    
#line 3046 
    u16 pg_cons = rxr->rx_pg_cons;
    
#line 3047 
    u16 pg_prod = rxr->rx_pg_prod;
    
#line 3049 
    frag_size = (len - hdr_len) + 4U;
    
#line 3050 
    pages_0 = (frag_size + 4095U) >> 12;
    
#line 3051 
    skb_put(skb,hdr_len);
    
#line 3053 
    i = 0U;
    
#line 3053 
    goto ldv_57495;
    ldv_57494: 
#line 3054 
    ;
    {
      dma_addr_t mapping_old;
      unsigned int tmp_1;
      unsigned int tmp_3;
      {
        unsigned int tmp_0;
        
#line 3056 
        unsigned int _min1 = frag_size;
        
#line 3056 
        unsigned int _min2 = 4096U;
        
#line 3056 
        if (_min1 < _min2) 
#line 3056 
                           tmp_0 = _min1; else 
#line 3056 
                                               tmp_0 = _min2;
        
#line 3056 
        tmp_1 = tmp_0;
      }
      
#line 3056 
      frag_len = tmp_1;
      
#line 3057 
      if ((long)(frag_len <= 4U) != 0L) {
        
#line 3058 
        unsigned int tail = 4U - frag_len;
        
#line 3060 
        rxr->rx_pg_cons = pg_cons;
        
#line 3061 
        rxr->rx_pg_prod = pg_prod;
        
#line 3062 
        bnx2_reuse_rx_skb_pages(bp,rxr,(struct sk_buff *)0,(int)(pages_0 - i));
        
#line 3064 
        skb->len -= tail;
        
#line 3065 
        if (i == 0U) 
#line 3066 
                     skb->tail -= tail;
        else {
          unsigned char *tmp_2;
          
#line 3069 
          tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
          
#line 3068 
          skb_frag_t *frag = & ((struct skb_shared_info *)tmp_2)->frags[i + 4294967295U];
          
#line 3070 
          skb_frag_size_sub(frag,(int)tail);
          
#line 3071 
          skb->data_len -= tail;
        }
        
#line 3073 
        __retres = skb;
        
#line 3073 
        goto return_label;
      }
      else ;
      
#line 3075 
      rx_pg = rxr->rx_pg_ring + (int)pg_cons;
      
#line 3080 
      mapping_old = rx_pg->mapping;
      
#line 3081 
      if (pages_0 + 4294967295U == i) 
#line 3082 
                                      frag_len += 4294967292U; else ;
      
#line 3084 
      skb_fill_page_desc(skb,(int)i,rx_pg->page,0,(int)frag_len);
      
#line 3085 
      rx_pg->page = (struct page *)0;
      
#line 3087 
      err = bnx2_alloc_rx_page(bp,rxr,(unsigned short)((int)((unsigned short)bp->rx_max_pg_ring_idx) & (int)pg_prod),32U);
      
#line 3090 
      if ((long)(err != 0) != 0L) {
        
#line 3091 
        rxr->rx_pg_cons = pg_cons;
        
#line 3092 
        rxr->rx_pg_prod = pg_prod;
        
#line 3093 
        bnx2_reuse_rx_skb_pages(bp,rxr,skb,(int)(pages_0 - i));
        
#line 3095 
        __retres = (struct sk_buff *)0;
        
#line 3095 
        goto return_label;
      }
      else ;
      
#line 3098 
      dma_unmap_page(& (bp->pdev)->dev,mapping_old,4096UL,(enum dma_data_direction)DMA_FROM_DEVICE);
      
#line 3101 
      frag_size -= frag_len;
      
#line 3102 
      skb->data_len += frag_len;
      
#line 3103 
      skb->truesize += 4096U;
      
#line 3104 
      skb->len += frag_len;
      
#line 3106 
      if (((unsigned long)pg_prod & 254UL) == 254UL) 
#line 3106 
                                                     pg_prod = (unsigned short)((unsigned int)pg_prod + 2U); else 
                                                                    
#line 3106 
                                                                    pg_prod = (unsigned short)((unsigned int)pg_prod + 1U);
      
#line 3107 
      if (((unsigned long)pg_cons & 254UL) == 254UL) 
#line 3107 
                                                     tmp_3 = (unsigned int)pg_cons + 2U; else 
                                                                    
#line 3107 
                                                                    tmp_3 = (unsigned int)pg_cons + 1U;
      
#line 3107 
      pg_cons = (unsigned short)(tmp_3 & (unsigned int)((unsigned short)bp->rx_max_pg_ring_idx));
    }
    
#line 3053 
    i += 1U;
    ldv_57495: 
#line 3054 
    ;
    
#line 3053 
    if (i < pages_0) 
#line 3055 
                     goto ldv_57494; else 
#line 3058 
                                          goto ldv_57496;
    ldv_57496: 
#line 3059 
    ;
    
#line 3109 
    rxr->rx_pg_prod = pg_prod;
    
#line 3110 
    rxr->rx_pg_cons = pg_cons;
  }
  
#line 3112 
  __retres = skb;
  return_label: 
#line 3112 
                return __retres;
}


#line 3116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static u16 bnx2_get_hw_rx_cons(struct bnx2_napi *bnapi)
{
  u16 cons;
  
#line 3119 
  ldv_inline_asm();
  
#line 3122 
  cons = *(bnapi->hw_rx_cons_ptr);
  
#line 3123 
  ldv_inline_asm();
  
#line 3124 
  if ((long)(((unsigned long)cons & 255UL) == 255UL) != 0L) 
#line 3125 
                                                            cons = (u16)((int)cons + 1); else ;
  
#line 3126 
  return cons;
}


#line 3130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_rx_int(struct bnx2 *bp, struct bnx2_napi *bnapi, int budget)
{
  int __retres;
  u16 hw_cons;
  u16 sw_cons;
  u16 sw_ring_cons;
  u16 sw_prod;
  u16 sw_ring_prod;
  struct l2_fhdr *rx_hdr;
  
#line 3132 
  struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
  
#line 3135 
  int rx_pkt = 0;
  
#line 3135 
  int pg_ring_used = 0;
  
#line 3137 
  if (budget <= 0) {
    
#line 3138 
    __retres = rx_pkt;
    
#line 3138 
    goto return_label;
  }
  else ;
  
#line 3140 
  hw_cons = bnx2_get_hw_rx_cons(bnapi);
  
#line 3141 
  sw_cons = rxr->rx_cons;
  
#line 3142 
  sw_prod = rxr->rx_prod;
  
#line 3143 
  ldv_inline_asm();
  
#line 3148 
  goto ldv_57528;
  ldv_57527: 
#line 3149 
  ;
  {
    unsigned int len;
    unsigned int hdr_len;
    u32 status;
    struct bnx2_sw_bd *rx_buf;
    struct bnx2_sw_bd *next_rx_buf;
    struct sk_buff *skb;
    dma_addr_t dma_addr;
    u8 *data;
    u16 next_ring_idx;
    unsigned int tmp;
    struct l2_fhdr *tmp_0;
    
#line 3157 
    sw_ring_cons = (unsigned short)((int)((unsigned short)bp->rx_max_ring_idx) & (int)sw_cons);
    
#line 3158 
    sw_ring_prod = (unsigned short)((int)((unsigned short)bp->rx_max_ring_idx) & (int)sw_prod);
    
#line 3160 
    rx_buf = rxr->rx_buf_ring + (int)sw_ring_cons;
    
#line 3161 
    data = rx_buf->data;
    
#line 3162 
    rx_buf->data = (u8 *)0U;
    
#line 3164 
    rx_hdr = get_l2_fhdr(data);
    
#line 3165 
    __builtin_prefetch((void const *)rx_hdr);
    
#line 3167 
    dma_addr = rx_buf->mapping;
    
#line 3169 
    dma_sync_single_for_cpu(& (bp->pdev)->dev,dma_addr,146UL,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 3173 
    if (((unsigned long)sw_cons & 254UL) == 254UL) 
#line 3173 
                                                   tmp = (unsigned int)sw_cons + 2U; else 
                                                                    
#line 3173 
                                                                    tmp = (unsigned int)sw_cons + 1U;
    
#line 3173 
    next_ring_idx = (unsigned short)(tmp & (unsigned int)((unsigned short)bp->rx_max_ring_idx));
    
#line 3174 
    next_rx_buf = rxr->rx_buf_ring + (int)next_ring_idx;
    
#line 3175 
    tmp_0 = get_l2_fhdr(next_rx_buf->data);
    
#line 3175 
    __builtin_prefetch((void const *)tmp_0);
    
#line 3177 
    len = (unsigned int)rx_hdr->l2_fhdr_pkt_len;
    
#line 3178 
    status = rx_hdr->l2_fhdr_status;
    
#line 3180 
    hdr_len = 0U;
    
#line 3181 
    if ((status & 65536U) != 0U) {
      
#line 3182 
      hdr_len = (unsigned int)rx_hdr->l2_fhdr_ip_xsum;
      
#line 3183 
      pg_ring_used = 1;
    }
    else 
      
#line 3184 
      if (bp->rx_jumbo_thresh < len) {
        
#line 3185 
        hdr_len = bp->rx_jumbo_thresh;
        
#line 3186 
        pg_ring_used = 1;
      }
      else ;
    
#line 3189 
    if ((long)((status & 4063232U) != 0U) != 0L) {
      
#line 3195 
      bnx2_reuse_rx_data(bp,rxr,data,(unsigned short)((int)sw_ring_cons),(unsigned short)((int)sw_ring_prod));
      
#line 3197 
      if (pg_ring_used != 0) {
        int pages;
        
#line 3200 
        pages = (int)(((len - hdr_len) + 4095U) >> 12);
        
#line 3202 
        bnx2_reuse_rx_skb_pages(bp,rxr,(struct sk_buff *)0,pages);
      }
      else ;
      
#line 3204 
      goto next_rx;
    }
    else ;
    
#line 3207 
    len += 4294967292U;
    
#line 3209 
    if (bp->rx_copy_thresh >= len) {
      
#line 3210 
      skb = netdev_alloc_skb(bp->dev,len + 6U);
      
#line 3211 
      if (skb == (struct sk_buff *)0) {
        
#line 3212 
        bnx2_reuse_rx_data(bp,rxr,data,(unsigned short)((int)sw_ring_cons),(unsigned short)((int)sw_ring_prod));
        
#line 3214 
        goto next_rx;
      }
      else ;
      
#line 3218 
      memcpy((void *)skb->data,(void const *)rx_hdr + 12U,(unsigned long)(len + 6U));
      
#line 3221 
      skb_reserve(skb,6);
      
#line 3222 
      skb_put(skb,len);
      
#line 3224 
      bnx2_reuse_rx_data(bp,rxr,data,(unsigned short)((int)sw_ring_cons),(unsigned short)((int)sw_ring_prod));
    }
    else {
      
#line 3228 
      skb = bnx2_rx_skb(bp,rxr,data,len,hdr_len,dma_addr,(unsigned int)(((int)sw_ring_cons << 16) | (int)sw_ring_prod));
      
#line 3230 
      if (skb == (struct sk_buff *)0) 
#line 3231 
                                      goto next_rx; else ;
    }
    
#line 3233 
    if ((status & 64U) != 0U && ((long)bp->rx_mode & 1024L) == 0L) 
#line 3235 
                                                                   __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)rx_hdr->l2_fhdr_vlan_tag)); else ;
    
#line 3237 
    skb->protocol = eth_type_trans(skb,bp->dev);
    
#line 3239 
    if (((bp->dev)->mtu + 14U < len && (unsigned int)skb->protocol != 129U) && (unsigned int)skb->protocol != 43144U) {
      
#line 3243 
      consume_skb(skb);
      
#line 3244 
      goto next_rx;
    }
    else ;
    
#line 3248 
    skb_checksum_none_assert((struct sk_buff const *)skb);
    
#line 3249 
    if (((bp->dev)->features & 17179869184ULL) != 0ULL && (status & 49152U) != 0U) {
      
#line 3253 
      if ((long)((status & 2415919104U) == 0U) != 0L) 
#line 3255 
                                                      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
    }
    else ;
    
#line 3257 
    if (((bp->dev)->features & 8589934592ULL) != 0ULL && (status & 16640U) == 16640U) 
      
#line 3260 
      skb_set_hash(skb,rx_hdr->l2_fhdr_hash,(enum pkt_hash_types)PKT_HASH_TYPE_L3); else ;
    
#line 3263 
    skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)(((long)bnapi - (long)(& bp->bnx2_napi[0])) / 1088L))));
    
#line 3264 
    napi_gro_receive(& bnapi->napi,skb);
    
#line 3265 
    rx_pkt += 1;
    next_rx: 
#line 3267 
    ;
    
#line 3268 
    if (((unsigned long)sw_cons & 254UL) == 254UL) 
#line 3268 
                                                   sw_cons = (unsigned short)((unsigned int)sw_cons + 2U); else 
                                                                    
#line 3268 
                                                                    sw_cons = (unsigned short)((unsigned int)sw_cons + 1U);
    
#line 3269 
    if (((unsigned long)sw_prod & 254UL) == 254UL) 
#line 3269 
                                                   sw_prod = (unsigned short)((unsigned int)sw_prod + 2U); else 
                                                                    
#line 3269 
                                                                    sw_prod = (unsigned short)((unsigned int)sw_prod + 1U);
    
#line 3271 
    if (rx_pkt == budget) 
#line 3272 
                          goto ldv_57526; else ;
    
#line 3275 
    if ((int)sw_cons == (int)hw_cons) {
      
#line 3276 
      hw_cons = bnx2_get_hw_rx_cons(bnapi);
      
#line 3277 
      ldv_inline_asm();
    }
    else ;
  }
  ldv_57528: 
#line 3280 
  ;
  
#line 3148 
  if ((int)sw_cons != (int)hw_cons) 
#line 3150 
                                    goto ldv_57527; else 
#line 3153 
                                                         goto ldv_57526;
  ldv_57526: 
#line 3154 
  ;
  
#line 3280 
  rxr->rx_cons = sw_cons;
  
#line 3281 
  rxr->rx_prod = sw_prod;
  
#line 3283 
  if (pg_ring_used != 0) 
#line 3284 
                         writew((unsigned short)((int)rxr->rx_pg_prod),(void volatile *)(bp->regview + rxr->rx_pg_bidx_addr)); else ;
  
#line 3286 
  writew((unsigned short)((int)sw_prod),(void volatile *)(bp->regview + rxr->rx_bidx_addr));
  
#line 3288 
  writel(rxr->rx_prod_bseq,(void volatile *)(bp->regview + rxr->rx_bseq_addr));
  
#line 3289 
  ldv_inline_asm();
  
#line 3292 
  __retres = rx_pkt;
  return_label: 
#line 3292 
                return __retres;
}


#line 3300  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static irqreturn_t bnx2_msi(int irq, void *dev_instance)
{
  irqreturn_t __retres;
  int tmp;
  
#line 3302 
  struct bnx2_napi *bnapi = (struct bnx2_napi *)dev_instance;
  
#line 3303 
  struct bnx2 *bp = bnapi->bp;
  
#line 3305 
  __builtin_prefetch((void const *)bnapi->status_blk.msi);
  
#line 3306 
  writel(393216U,(void volatile *)(bp->regview + 132U));
  
#line 3311 
  tmp = atomic_read((atomic_t const *)(& bp->intr_sem));
  
#line 3311 
  if ((long)(tmp != 0) != 0L) {
    
#line 3312 
    __retres = IRQ_HANDLED;
    
#line 3312 
    goto return_label;
  }
  else ;
  
#line 3314 
  napi_schedule(& bnapi->napi);
  
#line 3316 
  __retres = IRQ_HANDLED;
  return_label: 
#line 3316 
                return __retres;
}


#line 3320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static irqreturn_t bnx2_msi_1shot(int irq, void *dev_instance)
{
  irqreturn_t __retres;
  int tmp;
  
#line 3322 
  struct bnx2_napi *bnapi = (struct bnx2_napi *)dev_instance;
  
#line 3323 
  struct bnx2 *bp = bnapi->bp;
  
#line 3325 
  __builtin_prefetch((void const *)bnapi->status_blk.msi);
  
#line 3328 
  tmp = atomic_read((atomic_t const *)(& bp->intr_sem));
  
#line 3328 
  if ((long)(tmp != 0) != 0L) {
    
#line 3329 
    __retres = IRQ_HANDLED;
    
#line 3329 
    goto return_label;
  }
  else ;
  
#line 3331 
  napi_schedule(& bnapi->napi);
  
#line 3333 
  __retres = IRQ_HANDLED;
  return_label: 
#line 3333 
                return __retres;
}


#line 3337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static irqreturn_t bnx2_interrupt(int irq, void *dev_instance)
{
  irqreturn_t __retres;
  int tmp_0;
  bool tmp_1;
  
#line 3339 
  struct bnx2_napi *bnapi = (struct bnx2_napi *)dev_instance;
  
#line 3340 
  struct bnx2 *bp = bnapi->bp;
  
#line 3341 
  struct status_block *sblk = bnapi->status_blk.msi;
  
#line 3349 
  if ((unsigned int)sblk->status_idx == bnapi->last_status_idx) {
    unsigned int tmp;
    
#line 3349 
    tmp = readl((void const volatile *)(bp->regview + 108U));
    
#line 3349 
    if (((long)tmp & 1L) != 0L) {
      
#line 3352 
      __retres = IRQ_NONE;
      
#line 3352 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3354 
  writel(393216U,(void volatile *)(bp->regview + 132U));
  
#line 3361 
  readl((void const volatile *)(bp->regview + 132U));
  
#line 3364 
  tmp_0 = atomic_read((atomic_t const *)(& bp->intr_sem));
  
#line 3364 
  if ((long)(tmp_0 != 0) != 0L) {
    
#line 3365 
    __retres = IRQ_HANDLED;
    
#line 3365 
    goto return_label;
  }
  else ;
  
#line 3367 
  tmp_1 = napi_schedule_prep(& bnapi->napi);
  
#line 3367 
  if ((int)tmp_1 != 0) {
    
#line 3368 
    bnapi->last_status_idx = (unsigned int)sblk->status_idx;
    
#line 3369 
    __napi_schedule(& bnapi->napi);
  }
  else ;
  
#line 3372 
  __retres = IRQ_HANDLED;
  return_label: 
#line 3372 
                return __retres;
}


#line 3376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static int bnx2_has_fast_work(struct bnx2_napi *bnapi)
{
  int __retres;
  u16 tmp;
  
#line 3378 
  struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
  
#line 3379 
  struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
  
#line 3381 
  tmp = bnx2_get_hw_rx_cons(bnapi);
  
#line 3381 
  ;
  
#line 3381 
  if ((int)tmp != (int)rxr->rx_cons) {
    
#line 3383 
    __retres = 1;
    
#line 3383 
    goto return_label;
  }
  else {
    u16 tmp_0;
    
#line 3381 
    tmp_0 = bnx2_get_hw_tx_cons(bnapi);
    
#line 3381 
    ;
    
#line 3381 
    if ((int)tmp_0 != (int)txr->hw_tx_cons) {
      
#line 3383 
      __retres = 1;
      
#line 3383 
      goto return_label;
    }
    else ;
  }
  
#line 3384 
  __retres = 0;
  return_label: 
#line 3384 
                return __retres;
}


#line 3391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
__inline static int bnx2_has_work(struct bnx2_napi *bnapi)
{
  int __retres;
  int tmp;
  
#line 3393 
  struct status_block *sblk = bnapi->status_blk.msi;
  
#line 3395 
  tmp = bnx2_has_fast_work(bnapi);
  
#line 3395 
  if (tmp != 0) {
    
#line 3396 
    __retres = 1;
    
#line 3396 
    goto return_label;
  }
  else ;
  
#line 3399 
  if (bnapi->cnic_present != 0 && bnapi->cnic_tag != (unsigned int)sblk->status_idx) {
    
#line 3400 
    __retres = 1;
    
#line 3400 
    goto return_label;
  }
  else ;
  
#line 3403 
  if (((long)(sblk->status_attn_bits ^ sblk->status_attn_bits_ack) & 16777217L) != 0L) {
    
#line 3405 
    __retres = 1;
    
#line 3405 
    goto return_label;
  }
  else ;
  
#line 3407 
  __retres = 0;
  return_label: 
#line 3407 
                return __retres;
}


#line 3411  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_chk_missed_msi(struct bnx2 *bp)
{
  u32 msi_ctrl;
  int tmp;
  
#line 3413 
  struct bnx2_napi *bnapi = & bp->bnx2_napi[0];
  
#line 3416 
  tmp = bnx2_has_work(bnapi);
  
#line 3416 
  if (tmp != 0) {
    
#line 3417 
    msi_ctrl = readl((void const volatile *)(bp->regview + 88U));
    
#line 3418 
    if (((long)msi_ctrl & 65536L) == 0L) 
#line 3419 
                                         goto return_label; else ;
    
#line 3421 
    if (bnapi->last_status_idx == bp->idle_chk_status_idx) {
      
#line 3422 
      writel(msi_ctrl & 4294901759U,(void volatile *)(bp->regview + 88U));
      
#line 3424 
      writel(msi_ctrl,(void volatile *)(bp->regview + 88U));
      
#line 3425 
      bnx2_msi((int)bp->irq_tbl[0].vector,(void *)bnapi);
    }
    else ;
  }
  else ;
  
#line 3429 
  bp->idle_chk_status_idx = bnapi->last_status_idx;
  return_label: 
#line 3430 
                return;
}


#line 3433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_poll_cnic(struct bnx2 *bp, struct bnx2_napi *bnapi)
{
  struct cnic_ops *c_ops;
  struct cnic_ops *tmp_3;
  
#line 3437 
  if (bnapi->cnic_present == 0) 
#line 3438 
                                goto return_label; else ;
  
#line 3440 
  rcu_read_lock();
  {
    struct cnic_ops *tmp_0;
    {
      struct cnic_ops *tmp;
      {
        union __anonunion___u_394 __u;
        
#line 3441 
        __read_once_size((void const volatile *)(& bp->cnic_ops),(void *)(& __u.__c),8);
        
#line 3441 
        tmp = __u.__val;
      }
      
#line 3441 
      struct cnic_ops *_________p1 = tmp;
      
#line 3441 
      tmp_0 = _________p1;
    }
    
#line 3441 
    struct cnic_ops *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 3441 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 3441 
      if (tmp_1 != 0) {
        
#line 3441 
        if (! __warned) {
          int tmp_2;
          
#line 3441 
          tmp_2 = rcu_read_lock_held();
          
#line 3441 
          if (tmp_2 == 0) {
            
#line 3441 
            __warned = (_Bool)1;
            
#line 3441 
            lockdep_rcu_suspicious("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c",3441,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 3441 
    tmp_3 = ________p1;
  }
  
#line 3441 
  c_ops = tmp_3;
  
#line 3442 
  if (c_ops != (struct cnic_ops *)0) {
    int tmp_4;
    
#line 3443 
    tmp_4 = (*(c_ops->cnic_handler))(bp->cnic_data,(void *)bnapi->status_blk.msi);
    
#line 3443 
    bnapi->cnic_tag = (unsigned int)tmp_4;
  }
  else ;
  
#line 3445 
  rcu_read_unlock();
  return_label: 
#line 3446 
                return;
}


#line 3449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_poll_link(struct bnx2 *bp, struct bnx2_napi *bnapi)
{
  
#line 3451 
  struct status_block *sblk = bnapi->status_blk.msi;
  
#line 3452 
  u32 status_attn_bits = sblk->status_attn_bits;
  
#line 3453 
  u32 status_attn_bits_ack = sblk->status_attn_bits_ack;
  
#line 3455 
  if (((long)(status_attn_bits ^ status_attn_bits_ack) & 16777217L) != 0L) {
    
#line 3458 
    bnx2_phy_int(bp,bnapi);
    
#line 3463 
    writel(bp->hc_cmd | 131072U,(void volatile *)(bp->regview + 26624U));
    
#line 3465 
    readl((void const volatile *)(bp->regview + 26624U));
  }
  else ;
  
#line 3467 
  return;
}


#line 3469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_poll_work(struct bnx2 *bp, struct bnx2_napi *bnapi, int work_done, int budget)
{
  u16 tmp;
  u16 tmp_1;
  
#line 3472 
  struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
  
#line 3473 
  struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
  
#line 3475 
  tmp = bnx2_get_hw_tx_cons(bnapi);
  
#line 3475 
  ;
  
#line 3475 
  if ((int)tmp != (int)txr->hw_tx_cons) 
#line 3476 
                                        bnx2_tx_int(bp,bnapi,0); else ;
  
#line 3478 
  tmp_1 = bnx2_get_hw_rx_cons(bnapi);
  
#line 3478 
  ;
  
#line 3478 
  if ((int)tmp_1 != (int)rxr->rx_cons) {
    int tmp_0;
    
#line 3479 
    tmp_0 = bnx2_rx_int(bp,bnapi,budget - work_done);
    
#line 3479 
    work_done = tmp_0 + work_done;
  }
  else ;
  
#line 3481 
  return work_done;
}


#line 3484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_poll_msix(struct napi_struct *napi, int budget)
{
  struct bnx2_napi *tmp;
  int tmp_0;
  {
    
#line 3486 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 3486 
    tmp = (struct bnx2_napi *)__mptr;
  }
  
#line 3486 
  struct bnx2_napi *bnapi = tmp;
  
#line 3487 
  struct bnx2 *bp = bnapi->bp;
  
#line 3488 
  int work_done = 0;
  
#line 3489 
  struct status_block_msix *sblk = bnapi->status_blk.msix;
  ldv_57603: 
#line 3490 
  ;
  
#line 3492 
  work_done = bnx2_poll_work(bp,bnapi,work_done,budget);
  
#line 3493 
  if ((long)(work_done >= budget) != 0L) 
#line 3494 
                                         goto ldv_57602; else ;
  
#line 3496 
  bnapi->last_status_idx = (unsigned int)sblk->status_idx;
  
#line 3497 
  ldv_inline_asm();
  
#line 3499 
  tmp_0 = bnx2_has_fast_work(bnapi);
  
#line 3499 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 3501 
    napi_complete(napi);
    
#line 3502 
    writel((bnapi->int_num | bnapi->last_status_idx) | 65536U,(void volatile *)(bp->regview + 132U));
    
#line 3505 
    goto ldv_57602;
  }
  else ;
  
#line 3492 
  goto ldv_57603;
  ldv_57602: 
#line 3493 
  ;
  
#line 3508 
  return work_done;
}


#line 3511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_poll(struct napi_struct *napi, int budget)
{
  struct bnx2_napi *tmp;
  int tmp_0;
  {
    
#line 3513 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 3513 
    tmp = (struct bnx2_napi *)__mptr;
  }
  
#line 3513 
  struct bnx2_napi *bnapi = tmp;
  
#line 3514 
  struct bnx2 *bp = bnapi->bp;
  
#line 3515 
  int work_done = 0;
  
#line 3516 
  struct status_block *sblk = bnapi->status_blk.msi;
  ldv_57615: 
#line 3517 
  ;
  
#line 3519 
  bnx2_poll_link(bp,bnapi);
  
#line 3521 
  work_done = bnx2_poll_work(bp,bnapi,work_done,budget);
  
#line 3524 
  bnx2_poll_cnic(bp,bnapi);
  
#line 3531 
  bnapi->last_status_idx = (unsigned int)sblk->status_idx;
  
#line 3533 
  if ((long)(work_done >= budget) != 0L) 
#line 3534 
                                         goto ldv_57614; else ;
  
#line 3535 
  ldv_inline_asm();
  
#line 3537 
  tmp_0 = bnx2_has_work(bnapi);
  
#line 3537 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 3538 
    napi_complete(napi);
    
#line 3539 
    if ((long)((bp->flags & 1056U) != 0U) != 0L) {
      
#line 3540 
      writel(bnapi->last_status_idx | 65536U,(void volatile *)(bp->regview + 132U));
      
#line 3543 
      goto ldv_57614;
    }
    else ;
    
#line 3545 
    writel(bnapi->last_status_idx | 327680U,(void volatile *)(bp->regview + 132U));
    
#line 3550 
    writel(bnapi->last_status_idx | 65536U,(void volatile *)(bp->regview + 132U));
    
#line 3553 
    goto ldv_57614;
  }
  else ;
  
#line 3519 
  goto ldv_57615;
  ldv_57614: 
#line 3520 
  ;
  
#line 3557 
  return work_done;
}


#line 3564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_set_rx_mode(struct net_device *dev)
{
  u32 rx_mode;
  u32 sort_mode;
  struct netdev_hw_addr *ha;
  int i;
  int tmp_1;
  bool tmp_0;
  
#line 3566 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 3571 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 3571 
  if (tmp_0) 
#line 3571 
             tmp_1 = 0; else 
#line 3571 
                             tmp_1 = 1;
  
#line 3571 
  if (tmp_1) 
#line 3572 
             goto return_label; else ;
  
#line 3574 
  ldv_spin_lock_bh_100(& bp->phy_lock);
  
#line 3576 
  rx_mode = bp->rx_mode & 4294966015U;
  
#line 3578 
  sort_mode = 65537U;
  
#line 3579 
  if ((dev->features & 256ULL) == 0ULL && (bp->flags & 4096U) != 0U) 
    
#line 3581 
    rx_mode |= 1024U; else ;
  
#line 3582 
  if ((dev->flags & 256U) != 0U) {
    
#line 3584 
    rx_mode |= 256U;
    
#line 3585 
    sort_mode |= 17301504U;
  }
  else 
    
#line 3588 
    if ((dev->flags & 512U) != 0U) {
      
#line 3589 
      i = 0;
      
#line 3589 
      goto ldv_57625;
      ldv_57624: 
#line 3590 
      ;
      
#line 3590 
      writel(4294967295U,(void volatile *)(bp->regview + ((unsigned int)(i * 4) + 5328U)));
      
#line 3589 
      i += 1;
      ldv_57625: 
#line 3590 
      ;
      
#line 3589 
      if (i <= 7) 
#line 3591 
                  goto ldv_57624; else 
#line 3594 
                                       goto ldv_57626;
      ldv_57626: 
#line 3595 
      ;
      
#line 3593 
      sort_mode |= 131072U;
    }
    else {
      u32 mc_filter[8U];
      u32 regidx;
      u32 bit;
      u32 crc;
      struct netdev_hw_addr *tmp_2;
      struct netdev_hw_addr *tmp_3;
      
#line 3602 
      memset((void *)(& mc_filter),0,32UL);
      {
        
#line 3604 
        struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
        
#line 3604 
        tmp_2 = (struct netdev_hw_addr *)__mptr;
      }
      
#line 3604 
      ha = tmp_2;
      
#line 3604 
      goto ldv_57636;
      ldv_57635: 
#line 3605 
      ;
      
#line 3605 
      crc = crc32_le(4294967295U,(unsigned char const *)(& ha->addr),6UL);
      
#line 3606 
      bit = crc & 255U;
      
#line 3607 
      regidx = (bit >> 5) & 7U;
      
#line 3608 
      bit &= 31U;
      
#line 3609 
      mc_filter[regidx] |= (unsigned int)(1 << bit);
      {
        
#line 3604 
        struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
        
#line 3604 
        tmp_3 = (struct netdev_hw_addr *)__mptr_0;
      }
      
#line 3604 
      ha = tmp_3;
      ldv_57636: 
#line 3606 
      ;
      
#line 3604 
      if (& ha->list != & dev->mc.list) 
#line 3606 
                                        goto ldv_57635; else 
#line 3609 
                                                             goto ldv_57637;
      ldv_57637: 
#line 3610 
      ;
      
#line 3612 
      i = 0;
      
#line 3612 
      goto ldv_57639;
      ldv_57638: 
#line 3613 
      ;
      
#line 3613 
      writel(mc_filter[i],(void volatile *)(bp->regview + ((unsigned int)(i * 4) + 5328U)));
      
#line 3612 
      i += 1;
      ldv_57639: 
#line 3613 
      ;
      
#line 3612 
      if (i <= 7) 
#line 3614 
                  goto ldv_57638; else 
#line 3617 
                                       goto ldv_57640;
      ldv_57640: 
#line 3618 
      ;
      
#line 3617 
      sort_mode |= 262144U;
    }
  
#line 3620 
  if (dev->uc.count > 4) {
    
#line 3621 
    rx_mode |= 256U;
    
#line 3622 
    sort_mode |= 17301504U;
  }
  else 
    
#line 3624 
    if ((dev->flags & 256U) == 0U) {
      struct netdev_hw_addr *tmp_4;
      struct netdev_hw_addr *tmp_5;
      
#line 3626 
      i = 0;
      {
        
#line 3627 
        struct list_head const *__mptr_1 = (struct list_head const *)dev->uc.list.next;
        
#line 3627 
        tmp_4 = (struct netdev_hw_addr *)__mptr_1;
      }
      
#line 3627 
      ha = tmp_4;
      
#line 3627 
      goto ldv_57646;
      ldv_57645: 
#line 3628 
      ;
      
#line 3628 
      bnx2_set_mac_addr(bp,(u8 *)(& ha->addr),(unsigned int)(i + 4));
      
#line 3630 
      sort_mode = (unsigned int)(1 << (i + 4)) | sort_mode;
      
#line 3632 
      i += 1;
      {
        
#line 3627 
        struct list_head const *__mptr_2 = (struct list_head const *)ha->list.next;
        
#line 3627 
        tmp_5 = (struct netdev_hw_addr *)__mptr_2;
      }
      
#line 3627 
      ha = tmp_5;
      ldv_57646: 
#line 3629 
      ;
      
#line 3627 
      if (& ha->list != & dev->uc.list) 
#line 3629 
                                        goto ldv_57645; else 
#line 3632 
                                                             goto ldv_57647;
      ldv_57647: 
#line 3633 
      ;
    }
    else ;
  
#line 3637 
  if (bp->rx_mode != rx_mode) {
    
#line 3638 
    bp->rx_mode = rx_mode;
    
#line 3639 
    writel(rx_mode,(void volatile *)(bp->regview + 5320U));
  }
  else ;
  
#line 3642 
  writel(0U,(void volatile *)(bp->regview + 6176U));
  
#line 3643 
  writel(sort_mode,(void volatile *)(bp->regview + 6176U));
  
#line 3644 
  writel(sort_mode | 2147483648U,(void volatile *)(bp->regview + 6176U));
  
#line 3646 
  ldv_spin_unlock_bh_101(& bp->phy_lock);
  return_label: 
#line 3647 
                return;
}


#line 3650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int check_fw_section(struct firmware const *fw, struct bnx2_fw_file_section const *section, u32 alignment, bool non_empty)
{
  int __retres;
  unsigned int tmp_0;
  unsigned int tmp_2;
  
#line 3654 
  if (0 != 0) 
#line 3654 
              tmp_0 = (((section->offset << 24) | ((section->offset << 8) & 16711680U)) | ((section->offset >> 8) & 65280U)) | (section->offset >> 24); else 
                                                                    
#line 3654 
                                                                    tmp_0 = __fswab32(section->offset);
  
#line 3654 
  u32 offset = tmp_0;
  
#line 3655 
  if (0 != 0) 
#line 3655 
              tmp_2 = (((section->len << 24) | ((section->len << 8) & 16711680U)) | ((section->len >> 8) & 65280U)) | (section->len >> 24); else 
                                                                    
#line 3655 
                                                                    tmp_2 = __fswab32(section->len);
  
#line 3655 
  u32 len = tmp_2;
  
#line 3657 
  if (((offset == 0U && len != 0U) || (unsigned long)offset >= fw->size) || (offset & 3U) != 0U) {
    
#line 3658 
    __retres = -22;
    
#line 3658 
    goto return_label;
  }
  else ;
  
#line 3659 
  if ((((int)non_empty != 0 && len == 0U) || (unsigned long)len > fw->size - (unsigned long)offset) || ((alignment + 4294967295U) & len) != 0U) {
    
#line 3661 
    __retres = -22;
    
#line 3661 
    goto return_label;
  }
  else ;
  
#line 3662 
  __retres = 0;
  return_label: 
#line 3662 
                return __retres;
}


#line 3666  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int check_mips_fw_entry(struct firmware const *fw, struct bnx2_mips_fw_file_entry const *entry)
{
  int __retres;
  int tmp;
  
#line 3669 
  tmp = check_fw_section(fw,& entry->text,4U,(_Bool)1);
  
#line 3669 
  if (tmp != 0) {
    
#line 3672 
    __retres = -22;
    
#line 3672 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 3669 
    tmp_0 = check_fw_section(fw,& entry->data,4U,(_Bool)0);
    
#line 3669 
    if (tmp_0 != 0) {
      
#line 3672 
      __retres = -22;
      
#line 3672 
      goto return_label;
    }
    else {
      int tmp_1;
      
#line 3670 
      tmp_1 = check_fw_section(fw,& entry->rodata,4U,(_Bool)0);
      
#line 3670 
      if (tmp_1 != 0) {
        
#line 3672 
        __retres = -22;
        
#line 3672 
        goto return_label;
      }
      else ;
    }
  }
  
#line 3673 
  __retres = 0;
  return_label: 
#line 3673 
                return __retres;
}


#line 3676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_release_firmware(struct bnx2 *bp)
{
  
#line 3678 
  if (bp->rv2p_firmware != (struct firmware const *)0) {
    
#line 3679 
    release_firmware(bp->mips_firmware);
    
#line 3680 
    release_firmware(bp->rv2p_firmware);
    
#line 3681 
    bp->rv2p_firmware = (struct firmware const *)0;
  }
  else ;
  
#line 3683 
  return;
}


#line 3685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_request_uncached_firmware(struct bnx2 *bp)
{
  int __retres;
  char const *mips_fw_file;
  char const *rv2p_fw_file;
  struct bnx2_mips_fw_file const *mips_fw;
  struct bnx2_rv2p_fw_file const *rv2p_fw;
  int rc;
  
#line 3692 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 3693 
    mips_fw_file = "bnx2/bnx2-mips-09-6.2.1b.fw";
    
#line 3694 
    if ((bp->chip_id & 4294967280U) == 1460207616U || (bp->chip_id & 4294967280U) == 1460207632U) 
      
#line 3696 
      rv2p_fw_file = "bnx2/bnx2-rv2p-09ax-6.0.17.fw"; else 
#line 3698 
                                                           rv2p_fw_file = "bnx2/bnx2-rv2p-09-6.0.17.fw";
  }
  else {
    
#line 3700 
    mips_fw_file = "bnx2/bnx2-mips-06-6.2.3.fw";
    
#line 3701 
    rv2p_fw_file = "bnx2/bnx2-rv2p-06-6.0.15.fw";
  }
  
#line 3704 
  rc = request_firmware(& bp->mips_firmware,mips_fw_file,& (bp->pdev)->dev);
  
#line 3705 
  if (rc != 0) {
    
#line 3706 
    printk("\001",mips_fw_file);
    
#line 3707 
    goto out;
  }
  else ;
  
#line 3710 
  rc = request_firmware(& bp->rv2p_firmware,rv2p_fw_file,& (bp->pdev)->dev);
  
#line 3711 
  if (rc != 0) {
    
#line 3712 
    printk("\001",rv2p_fw_file);
    
#line 3713 
    goto err_release_mips_firmware;
  }
  else ;
  
#line 3715 
  mips_fw = (struct bnx2_mips_fw_file const *)(bp->mips_firmware)->data;
  
#line 3716 
  rv2p_fw = (struct bnx2_rv2p_fw_file const *)(bp->rv2p_firmware)->data;
  
#line 3717 
  if ((bp->mips_firmware)->size <= 199UL) 
#line 3717 
                                          goto _LOR;
  else {
    int tmp;
    
#line 3717 
    tmp = check_mips_fw_entry(bp->mips_firmware,& mips_fw->com);
    
#line 3717 
    if (tmp != 0) 
#line 3717 
                  goto _LOR;
    else {
      int tmp_0;
      
#line 3718 
      tmp_0 = check_mips_fw_entry(bp->mips_firmware,& mips_fw->cp);
      
#line 3718 
      if (tmp_0 != 0) 
#line 3717 
                      goto _LOR;
      else {
        int tmp_1;
        
#line 3719 
        tmp_1 = check_mips_fw_entry(bp->mips_firmware,& mips_fw->rxp);
        
#line 3719 
        if (tmp_1 != 0) 
#line 3717 
                        goto _LOR;
        else {
          int tmp_2;
          
#line 3720 
          tmp_2 = check_mips_fw_entry(bp->mips_firmware,& mips_fw->tpat);
          
#line 3720 
          if (tmp_2 != 0) 
#line 3717 
                          goto _LOR;
          else {
            int tmp_3;
            
#line 3721 
            tmp_3 = check_mips_fw_entry(bp->mips_firmware,& mips_fw->txp);
            
#line 3721 
            if (tmp_3 != 0) {
              _LOR: {
                      
#line 3723 
                      printk("\001",mips_fw_file);
                      
#line 3724 
                      rc = -22;
                      
#line 3725 
                      goto err_release_firmware;
                    }
            }
            else ;
          }
        }
      }
    }
  }
  
#line 3727 
  if ((bp->rv2p_firmware)->size <= 87UL) 
#line 3727 
                                         goto _LOR_0;
  else {
    int tmp_4;
    
#line 3727 
    tmp_4 = check_fw_section(bp->rv2p_firmware,& rv2p_fw->proc1.rv2p,8U,(_Bool)1);
    
#line 3727 
    if (tmp_4 != 0) 
#line 3727 
                    goto _LOR_0;
    else {
      int tmp_5;
      
#line 3728 
      tmp_5 = check_fw_section(bp->rv2p_firmware,& rv2p_fw->proc2.rv2p,8U,(_Bool)1);
      
#line 3728 
      if (tmp_5 != 0) {
        _LOR_0: {
                  
#line 3730 
                  printk("\001",rv2p_fw_file);
                  
#line 3731 
                  rc = -22;
                  
#line 3732 
                  goto err_release_firmware;
                }
      }
      else ;
    }
  }
  out: 
#line 3734 
  ;
  
#line 3735 
  __retres = rc;
  
#line 3735 
  goto return_label;
  err_release_firmware: 
#line 3737 
  ;
  
#line 3738 
  release_firmware(bp->rv2p_firmware);
  
#line 3739 
  bp->rv2p_firmware = (struct firmware const *)0;
  err_release_mips_firmware: 
#line 3740 
  ;
  
#line 3741 
  release_firmware(bp->mips_firmware);
  
#line 3742 
  goto out;
  return_label: 
#line 3742 
                return __retres;
}


#line 3745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_request_firmware(struct bnx2 *bp)
{
  int tmp_0;
  
#line 3747 
  if (bp->rv2p_firmware == (struct firmware const *)0) 
#line 3747 
                                                       tmp_0 = bnx2_request_uncached_firmware(bp); else 
                                                                    
#line 3747 
                                                                    tmp_0 = 0;
  
#line 3747 
  return tmp_0;
}


#line 3751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u32 rv2p_fw_fixup(u32 rv2p_proc, int idx, u32 loc, u32 rv2p_code)
{
  
#line 3753 
  switch (idx) {
    case 0: 
#line 3754 
    ;
    
#line 3755 
    rv2p_code &= 4294901760U;
    
#line 3756 
    rv2p_code |= 255U;
    
#line 3757 
    goto ldv_57684;
  }
  ldv_57684: 
#line 3759 
  ;
  
#line 3759 
  return rv2p_code;
}


#line 3763  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int load_rv2p_fw(struct bnx2 *bp, u32 rv2p_proc, struct bnx2_rv2p_fw_file_entry const *fw_entry)
{
  int __retres;
  u32 rv2p_code_len;
  u32 file_offset;
  __be32 *rv2p_code;
  int i;
  u32 val;
  u32 cmd;
  u32 addr;
  unsigned int tmp_2;
  unsigned int tmp_4;
  
#line 3771 
  if (0 != 0) 
#line 3771 
              rv2p_code_len = (((fw_entry->rv2p.len << 24) | ((fw_entry->rv2p.len << 8) & 16711680U)) | ((fw_entry->rv2p.len >> 8) & 65280U)) | (fw_entry->rv2p.len >> 24); else 
                                                                    
#line 3771 
                                                                    rv2p_code_len = __fswab32(fw_entry->rv2p.len);
  
#line 3772 
  if (0 != 0) 
#line 3772 
              file_offset = (((fw_entry->rv2p.offset << 24) | ((fw_entry->rv2p.offset << 8) & 16711680U)) | ((fw_entry->rv2p.offset >> 8) & 65280U)) | (fw_entry->rv2p.offset >> 24); else 
                                                                    
#line 3772 
                                                                    file_offset = __fswab32(fw_entry->rv2p.offset);
  
#line 3774 
  rv2p_code = (__be32 *)((bp->rv2p_firmware)->data + file_offset);
  
#line 3776 
  if (rv2p_proc == 0U) {
    
#line 3777 
    cmd = 2147483648U;
    
#line 3778 
    addr = 10296U;
  }
  else {
    
#line 3780 
    cmd = 2147483648U;
    
#line 3781 
    addr = 10300U;
  }
  
#line 3784 
  i = 0;
  
#line 3784 
  goto ldv_57698;
  ldv_57697: 
#line 3785 
  ;
  
#line 3785 
  ;
  
#line 3785 
  if (0 != 0) 
#line 3785 
              tmp_2 = (((*rv2p_code << 24) | ((*rv2p_code << 8) & 16711680U)) | ((*rv2p_code >> 8) & 65280U)) | (*rv2p_code >> 24); else 
                                                                    
#line 3785 
                                                                    tmp_2 = __fswab32(*rv2p_code);
  
#line 3785 
  writel(tmp_2,(void volatile *)(bp->regview + 10288U));
  
#line 3786 
  rv2p_code += 1;
  
#line 3787 
  ;
  
#line 3787 
  if (0 != 0) 
#line 3787 
              tmp_4 = (((*rv2p_code << 24) | ((*rv2p_code << 8) & 16711680U)) | ((*rv2p_code >> 8) & 65280U)) | (*rv2p_code >> 24); else 
                                                                    
#line 3787 
                                                                    tmp_4 = __fswab32(*rv2p_code);
  
#line 3787 
  writel(tmp_4,(void volatile *)(bp->regview + 10292U));
  
#line 3788 
  rv2p_code += 1;
  
#line 3790 
  val = (unsigned int)(i / 8) | cmd;
  
#line 3791 
  writel(val,(void volatile *)(bp->regview + addr));
  
#line 3784 
  i += 8;
  ldv_57698: 
#line 3785 
  ;
  
#line 3784 
  if ((unsigned int)i < rv2p_code_len) 
#line 3786 
                                       goto ldv_57697; else 
#line 3789 
                                                            goto ldv_57699;
  ldv_57699: 
#line 3790 
  ;
  
#line 3794 
  rv2p_code = (__be32 *)((bp->rv2p_firmware)->data + file_offset);
  
#line 3795 
  i = 0;
  
#line 3795 
  goto ldv_57703;
  ldv_57702: 
#line 3796 
  ;
  {
    u32 loc;
    u32 code;
    
#line 3798 
    if (0 != 0) 
#line 3798 
                loc = (((fw_entry->fixup[i] << 24) | ((fw_entry->fixup[i] << 8) & 16711680U)) | ((fw_entry->fixup[i] >> 8) & 65280U)) | (fw_entry->fixup[i] >> 24); else 
                                                                    
#line 3798 
                                                                    loc = __fswab32(fw_entry->fixup[i]);
    
#line 3799 
    if (loc != 0U && loc * 4U < rv2p_code_len) {
      
#line 3800 
      if (0 != 0) 
#line 3800 
                  code = (((*(rv2p_code + ((unsigned long)loc + 18446744073709551615U)) << 24) | ((*(rv2p_code + ((unsigned long)loc + 18446744073709551615U)) << 8) & 16711680U)) | ((*(rv2p_code + ((unsigned long)loc + 18446744073709551615U)) >> 8) & 65280U)) | (*(rv2p_code + ((unsigned long)loc + 18446744073709551615U)) >> 24); else 
                                                                    
#line 3800 
                                                                    code = __fswab32(*(rv2p_code + ((unsigned long)loc + 18446744073709551615U)));
      
#line 3801 
      writel(code,(void volatile *)(bp->regview + 10288U));
      
#line 3802 
      if (0 != 0) 
#line 3802 
                  code = (((*(rv2p_code + loc) << 24) | ((*(rv2p_code + loc) << 8) & 16711680U)) | ((*(rv2p_code + loc) >> 8) & 65280U)) | (*(rv2p_code + loc) >> 24); else 
                                                                    
#line 3802 
                                                                    code = __fswab32(*(rv2p_code + loc));
      
#line 3803 
      code = rv2p_fw_fixup(rv2p_proc,i,loc,code);
      
#line 3804 
      writel(code,(void volatile *)(bp->regview + 10292U));
      
#line 3806 
      val = loc / 2U | cmd;
      
#line 3807 
      writel(val,(void volatile *)(bp->regview + addr));
    }
    else ;
  }
  
#line 3795 
  i += 1;
  ldv_57703: 
#line 3796 
  ;
  
#line 3795 
  if (i <= 7) 
#line 3797 
              goto ldv_57702; else 
#line 3800 
                                   goto ldv_57704;
  ldv_57704: 
#line 3801 
  ;
  
#line 3812 
  if (rv2p_proc == 0U) 
#line 3813 
                       writel(65536U,(void volatile *)(bp->regview + 10240U)); else 
                                                                    
#line 3816 
                                                                    writel(131072U,(void volatile *)(bp->regview + 10240U));
  
#line 3819 
  __retres = 0;
  
#line 3819 
  return __retres;
}


#line 3823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int load_cpu_fw(struct bnx2 *bp, struct cpu_reg const *cpu_reg, struct bnx2_mips_fw_file_entry const *fw_entry)
{
  int __retres;
  u32 addr;
  u32 len;
  u32 file_offset;
  __be32 *data;
  u32 offset;
  u32 val;
  
#line 3832 
  val = bnx2_reg_rd_ind(bp,cpu_reg->mode);
  
#line 3833 
  val = cpu_reg->mode_value_halt | val;
  
#line 3834 
  bnx2_reg_wr_ind(bp,cpu_reg->mode,val);
  
#line 3835 
  bnx2_reg_wr_ind(bp,cpu_reg->state,cpu_reg->state_value_clear);
  
#line 3838 
  if (0 != 0) 
#line 3838 
              addr = (((fw_entry->text.addr << 24) | ((fw_entry->text.addr << 8) & 16711680U)) | ((fw_entry->text.addr >> 8) & 65280U)) | (fw_entry->text.addr >> 24); else 
                                                                    
#line 3838 
                                                                    addr = __fswab32(fw_entry->text.addr);
  
#line 3839 
  if (0 != 0) 
#line 3839 
              len = (((fw_entry->text.len << 24) | ((fw_entry->text.len << 8) & 16711680U)) | ((fw_entry->text.len >> 8) & 65280U)) | (fw_entry->text.len >> 24); else 
                                                                    
#line 3839 
                                                                    len = __fswab32(fw_entry->text.len);
  
#line 3840 
  if (0 != 0) 
#line 3840 
              file_offset = (((fw_entry->text.offset << 24) | ((fw_entry->text.offset << 8) & 16711680U)) | ((fw_entry->text.offset >> 8) & 65280U)) | (fw_entry->text.offset >> 24); else 
                                                                    
#line 3840 
                                                                    file_offset = __fswab32(fw_entry->text.offset);
  
#line 3841 
  data = (__be32 *)((bp->mips_firmware)->data + file_offset);
  
#line 3843 
  offset = cpu_reg->spad_base + (addr - cpu_reg->mips_view_base);
  
#line 3844 
  if (len != 0U) {
    int j;
    unsigned int tmp_3;
    
#line 3847 
    j = 0;
    
#line 3847 
    goto ldv_57718;
    ldv_57717: 
#line 3848 
    ;
    
#line 3848 
    if (0 != 0) 
#line 3848 
                tmp_3 = (((*(data + j) << 24) | ((*(data + j) << 8) & 16711680U)) | ((*(data + j) >> 8) & 65280U)) | (*(data + j) >> 24); else 
                                                                    
#line 3848 
                                                                    tmp_3 = __fswab32(*(data + j));
    
#line 3848 
    ;
    
#line 3848 
    ;
    
#line 3848 
    bnx2_reg_wr_ind(bp,offset,tmp_3);
    
#line 3847 
    j += 1;
    
#line 3847 
    offset += 4U;
    ldv_57718: 
#line 3848 
    ;
    
#line 3847 
    if (len / 4U > (unsigned int)j) 
#line 3849 
                                    goto ldv_57717; else 
#line 3852 
                                                         goto ldv_57719;
    ldv_57719: 
#line 3853 
    ;
  }
  else ;
  
#line 3852 
  if (0 != 0) 
#line 3852 
              addr = (((fw_entry->data.addr << 24) | ((fw_entry->data.addr << 8) & 16711680U)) | ((fw_entry->data.addr >> 8) & 65280U)) | (fw_entry->data.addr >> 24); else 
                                                                    
#line 3852 
                                                                    addr = __fswab32(fw_entry->data.addr);
  
#line 3853 
  if (0 != 0) 
#line 3853 
              len = (((fw_entry->data.len << 24) | ((fw_entry->data.len << 8) & 16711680U)) | ((fw_entry->data.len >> 8) & 65280U)) | (fw_entry->data.len >> 24); else 
                                                                    
#line 3853 
                                                                    len = __fswab32(fw_entry->data.len);
  
#line 3854 
  if (0 != 0) 
#line 3854 
              file_offset = (((fw_entry->data.offset << 24) | ((fw_entry->data.offset << 8) & 16711680U)) | ((fw_entry->data.offset >> 8) & 65280U)) | (fw_entry->data.offset >> 24); else 
                                                                    
#line 3854 
                                                                    file_offset = __fswab32(fw_entry->data.offset);
  
#line 3855 
  data = (__be32 *)((bp->mips_firmware)->data + file_offset);
  
#line 3857 
  offset = cpu_reg->spad_base + (addr - cpu_reg->mips_view_base);
  
#line 3858 
  if (len != 0U) {
    int j_0;
    unsigned int tmp_8;
    
#line 3861 
    j_0 = 0;
    
#line 3861 
    goto ldv_57722;
    ldv_57721: 
#line 3862 
    ;
    
#line 3862 
    if (0 != 0) 
#line 3862 
                tmp_8 = (((*(data + j_0) << 24) | ((*(data + j_0) << 8) & 16711680U)) | ((*(data + j_0) >> 8) & 65280U)) | (*(data + j_0) >> 24); else 
                                                                    
#line 3862 
                                                                    tmp_8 = __fswab32(*(data + j_0));
    
#line 3862 
    ;
    
#line 3862 
    ;
    
#line 3862 
    bnx2_reg_wr_ind(bp,offset,tmp_8);
    
#line 3861 
    j_0 += 1;
    
#line 3861 
    offset += 4U;
    ldv_57722: 
#line 3862 
    ;
    
#line 3861 
    if (len / 4U > (unsigned int)j_0) 
#line 3863 
                                      goto ldv_57721; else 
#line 3866 
                                                           goto ldv_57723;
    ldv_57723: 
#line 3867 
    ;
  }
  else ;
  
#line 3866 
  if (0 != 0) 
#line 3866 
              addr = (((fw_entry->rodata.addr << 24) | ((fw_entry->rodata.addr << 8) & 16711680U)) | ((fw_entry->rodata.addr >> 8) & 65280U)) | (fw_entry->rodata.addr >> 24); else 
                                                                    
#line 3866 
                                                                    addr = __fswab32(fw_entry->rodata.addr);
  
#line 3867 
  if (0 != 0) 
#line 3867 
              len = (((fw_entry->rodata.len << 24) | ((fw_entry->rodata.len << 8) & 16711680U)) | ((fw_entry->rodata.len >> 8) & 65280U)) | (fw_entry->rodata.len >> 24); else 
                                                                    
#line 3867 
                                                                    len = __fswab32(fw_entry->rodata.len);
  
#line 3868 
  if (0 != 0) 
#line 3868 
              file_offset = (((fw_entry->rodata.offset << 24) | ((fw_entry->rodata.offset << 8) & 16711680U)) | ((fw_entry->rodata.offset >> 8) & 65280U)) | (fw_entry->rodata.offset >> 24); else 
                                                                    
#line 3868 
                                                                    file_offset = __fswab32(fw_entry->rodata.offset);
  
#line 3869 
  data = (__be32 *)((bp->mips_firmware)->data + file_offset);
  
#line 3871 
  offset = cpu_reg->spad_base + (addr - cpu_reg->mips_view_base);
  
#line 3872 
  if (len != 0U) {
    int j_1;
    unsigned int tmp_13;
    
#line 3875 
    j_1 = 0;
    
#line 3875 
    goto ldv_57726;
    ldv_57725: 
#line 3876 
    ;
    
#line 3876 
    if (0 != 0) 
#line 3876 
                tmp_13 = (((*(data + j_1) << 24) | ((*(data + j_1) << 8) & 16711680U)) | ((*(data + j_1) >> 8) & 65280U)) | (*(data + j_1) >> 24); else 
                                                                    
#line 3876 
                                                                    tmp_13 = __fswab32(*(data + j_1));
    
#line 3876 
    ;
    
#line 3876 
    ;
    
#line 3876 
    bnx2_reg_wr_ind(bp,offset,tmp_13);
    
#line 3875 
    j_1 += 1;
    
#line 3875 
    offset += 4U;
    ldv_57726: 
#line 3876 
    ;
    
#line 3875 
    if (len / 4U > (unsigned int)j_1) 
#line 3877 
                                      goto ldv_57725; else 
#line 3880 
                                                           goto ldv_57727;
    ldv_57727: 
#line 3881 
    ;
  }
  else ;
  
#line 3880 
  bnx2_reg_wr_ind(bp,cpu_reg->inst,0U);
  
#line 3882 
  if (0 != 0) 
#line 3882 
              val = (((fw_entry->start_addr << 24) | ((fw_entry->start_addr << 8) & 16711680U)) | ((fw_entry->start_addr >> 8) & 65280U)) | (fw_entry->start_addr >> 24); else 
                                                                    
#line 3882 
                                                                    val = __fswab32(fw_entry->start_addr);
  
#line 3883 
  bnx2_reg_wr_ind(bp,cpu_reg->pc,val);
  
#line 3886 
  val = bnx2_reg_rd_ind(bp,cpu_reg->mode);
  
#line 3887 
  val = ~ cpu_reg->mode_value_halt & val;
  
#line 3888 
  bnx2_reg_wr_ind(bp,cpu_reg->state,cpu_reg->state_value_clear);
  
#line 3889 
  bnx2_reg_wr_ind(bp,cpu_reg->mode,val);
  
#line 3891 
  __retres = 0;
  
#line 3891 
  return __retres;
}


#line 3895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_cpus(struct bnx2 *bp)
{
  int rc;
  
#line 3897 
  struct bnx2_mips_fw_file const *mips_fw = (struct bnx2_mips_fw_file const *)(bp->mips_firmware)->data;
  
#line 3899 
  struct bnx2_rv2p_fw_file const *rv2p_fw = (struct bnx2_rv2p_fw_file const *)(bp->rv2p_firmware)->data;
  
#line 3904 
  load_rv2p_fw(bp,0U,& rv2p_fw->proc1);
  
#line 3905 
  load_rv2p_fw(bp,1U,& rv2p_fw->proc2);
  
#line 3908 
  rc = load_cpu_fw(bp,& cpu_reg_rxp,& mips_fw->rxp);
  
#line 3909 
  if (rc != 0) 
#line 3910 
               goto init_cpu_err; else ;
  
#line 3913 
  rc = load_cpu_fw(bp,& cpu_reg_txp,& mips_fw->txp);
  
#line 3914 
  if (rc != 0) 
#line 3915 
               goto init_cpu_err; else ;
  
#line 3918 
  rc = load_cpu_fw(bp,& cpu_reg_tpat,& mips_fw->tpat);
  
#line 3919 
  if (rc != 0) 
#line 3920 
               goto init_cpu_err; else ;
  
#line 3923 
  rc = load_cpu_fw(bp,& cpu_reg_com,& mips_fw->com);
  
#line 3924 
  if (rc != 0) 
#line 3925 
               goto init_cpu_err; else ;
  
#line 3928 
  rc = load_cpu_fw(bp,& cpu_reg_cp,& mips_fw->cp);
  init_cpu_err: 
#line 3930 
  ;
  
#line 3931 
  return rc;
}


#line 3935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_setup_wol(struct bnx2 *bp)
{
  int i;
  u32 val;
  u32 wol_msg;
  
#line 3940 
  if ((unsigned int)bp->wol != 0U) {
    u32 advertising;
    u8 autoneg;
    
#line 3944 
    autoneg = bp->autoneg;
    
#line 3945 
    advertising = bp->advertising;
    
#line 3947 
    if ((unsigned int)bp->phy_port == 0U) {
      
#line 3948 
      bp->autoneg = (unsigned char)1U;
      
#line 3949 
      bp->advertising = 79U;
    }
    else ;
    
#line 3956 
    ldv_spin_lock_bh_102(& bp->phy_lock);
    
#line 3957 
    bnx2_setup_phy(bp,(unsigned char)((int)bp->phy_port));
    
#line 3958 
    ldv_spin_unlock_bh_103(& bp->phy_lock);
    
#line 3960 
    bp->autoneg = autoneg;
    
#line 3961 
    bp->advertising = advertising;
    
#line 3963 
    bnx2_set_mac_addr(bp,(bp->dev)->dev_addr,0U);
    
#line 3965 
    val = readl((void const volatile *)(bp->regview + 5120U));
    
#line 3968 
    val &= 4294967283U;
    
#line 3969 
    val |= 1835008U;
    
#line 3972 
    if ((unsigned int)bp->phy_port == 0U) 
#line 3973 
                                          val |= 4U;
    else {
      
#line 3975 
      val |= 8U;
      
#line 3976 
      if ((unsigned int)bp->line_speed == 2500U) 
#line 3977 
                                                 val |= 32U; else ;
    }
    
#line 3980 
    writel(val,(void volatile *)(bp->regview + 5120U));
    
#line 3983 
    i = 0;
    
#line 3983 
    goto ldv_57744;
    ldv_57743: 
#line 3984 
    ;
    
#line 3984 
    writel(4294967295U,(void volatile *)(bp->regview + ((unsigned int)(i * 4) + 5328U)));
    
#line 3983 
    i += 1;
    ldv_57744: 
#line 3984 
    ;
    
#line 3983 
    if (i <= 7) 
#line 3985 
                goto ldv_57743; else 
#line 3988 
                                     goto ldv_57745;
    ldv_57745: 
#line 3989 
    ;
    
#line 3987 
    writel(4096U,(void volatile *)(bp->regview + 5320U));
    
#line 3989 
    val = 196609U;
    
#line 3990 
    writel(0U,(void volatile *)(bp->regview + 6176U));
    
#line 3991 
    writel(val,(void volatile *)(bp->regview + 6176U));
    
#line 3992 
    writel(val | 2147483648U,(void volatile *)(bp->regview + 6176U));
    
#line 3995 
    writel(1664U,(void volatile *)(bp->regview + 2064U));
    
#line 4000 
    val = readl((void const volatile *)(bp->regview + 6152U));
    
#line 4001 
    val &= 4294967293U;
    
#line 4002 
    writel(val,(void volatile *)(bp->regview + 6152U));
    
#line 4004 
    wol_msg = 67108864U;
  }
  else 
#line 4006 
       wol_msg = 150994944U;
  
#line 4009 
  if ((bp->flags & 8U) == 0U) {
    u32 val_0;
    
#line 4012 
    wol_msg |= 262144U;
    
#line 4013 
    if (bp->fw_last_msg != 0U || (bp->chip_id & 4294901760U) != 1460207616U) {
      
#line 4014 
      bnx2_fw_sync(bp,wol_msg,1,0);
      
#line 4015 
      goto return_label;
    }
    else ;
    
#line 4020 
    val_0 = bnx2_shmem_rd(bp,216U);
    
#line 4021 
    bnx2_shmem_wr(bp,216U,val_0 | 67108864U);
    
#line 4023 
    bnx2_fw_sync(bp,wol_msg,1,0);
    
#line 4024 
    bnx2_shmem_wr(bp,216U,val_0);
  }
  else ;
  return_label: 
#line 4026 
                return;
}


#line 4030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_power_state(struct bnx2 *bp, pci_power_t state)
{
  int __retres;
  
#line 4032 
  switch (state) {
    case 0: 
#line 4033 
    ;
    {
      u32 val;
      
#line 4036 
      pci_enable_wake(bp->pdev,0,(_Bool)0);
      
#line 4037 
      pci_set_power_state(bp->pdev,0);
      
#line 4039 
      val = readl((void const volatile *)(bp->regview + 5120U));
      
#line 4040 
      val |= 1572864U;
      
#line 4041 
      val &= 4294705151U;
      
#line 4042 
      writel(val,(void volatile *)(bp->regview + 5120U));
      
#line 4044 
      val = readl((void const volatile *)(bp->regview + 6152U));
      
#line 4045 
      val &= 4294967293U;
      
#line 4046 
      writel(val,(void volatile *)(bp->regview + 6152U));
      
#line 4047 
      goto ldv_57753;
    }
    case 3: 
#line 4049 
    ;
    
#line 4050 
    bnx2_setup_wol(bp);
    
#line 4051 
    pci_wake_from_d3(bp->pdev,(_Bool)((unsigned int)bp->wol != 0U));
    
#line 4052 
    if ((bp->chip_id & 4294967280U) == 1460011008U || (bp->chip_id & 4294967280U) == 1460011024U) {
      
#line 4055 
      if ((unsigned int)bp->wol != 0U) 
#line 4056 
                                       pci_set_power_state(bp->pdev,3); else ;
      
#line 4057 
      goto ldv_57753;
    }
    else ;
    
#line 4060 
    if (bp->fw_last_msg == 0U && (bp->chip_id & 4294901760U) == 1460207616U) {
      u32 val_0;
      
#line 4067 
      val_0 = bnx2_shmem_rd(bp,456U);
      
#line 4068 
      val_0 &= 4294770687U;
      
#line 4069 
      val_0 |= 65536U;
      
#line 4070 
      bnx2_shmem_wr(bp,456U,val_0);
    }
    else ;
    
#line 4072 
    pci_set_power_state(bp->pdev,3);
    
#line 4077 
    goto ldv_57753;
    default: 
#line 4079 
    ;
    
#line 4080 
    __retres = -22;
    
#line 4080 
    goto return_label;
  }
  ldv_57753: 
#line 4082 
  ;
  
#line 4082 
  __retres = 0;
  return_label: 
#line 4082 
                return __retres;
}


#line 4086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_acquire_nvram_lock(struct bnx2 *bp)
{
  int __retres;
  u32 val;
  int j;
  
#line 4092 
  writel(4U,(void volatile *)(bp->regview + 25632U));
  
#line 4093 
  j = 0;
  
#line 4093 
  goto ldv_57764;
  ldv_57763: 
#line 4094 
  ;
  
#line 4094 
  val = readl((void const volatile *)(bp->regview + 25632U));
  
#line 4095 
  if (((long)val & 1024L) != 0L) 
#line 4096 
                                 goto ldv_57762; else ;
  
#line 4098 
  __const_udelay(21475UL);
  
#line 4093 
  j += 1;
  ldv_57764: 
#line 4094 
  ;
  
#line 4093 
  if (j <= 29999) 
#line 4095 
                  goto ldv_57763; else 
#line 4098 
                                       goto ldv_57762;
  ldv_57762: 
#line 4099 
  ;
  
#line 4101 
  if (j > 29999) {
    
#line 4102 
    __retres = -16;
    
#line 4102 
    goto return_label;
  }
  else ;
  
#line 4104 
  __retres = 0;
  return_label: 
#line 4104 
                return __retres;
}


#line 4108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_release_nvram_lock(struct bnx2 *bp)
{
  int __retres;
  int j;
  u32 val;
  
#line 4114 
  writel(64U,(void volatile *)(bp->regview + 25632U));
  
#line 4116 
  j = 0;
  
#line 4116 
  goto ldv_57772;
  ldv_57771: 
#line 4117 
  ;
  
#line 4117 
  val = readl((void const volatile *)(bp->regview + 25632U));
  
#line 4118 
  if (((long)val & 1024L) == 0L) 
#line 4119 
                                 goto ldv_57770; else ;
  
#line 4121 
  __const_udelay(21475UL);
  
#line 4116 
  j += 1;
  ldv_57772: 
#line 4117 
  ;
  
#line 4116 
  if (j <= 29999) 
#line 4118 
                  goto ldv_57771; else 
#line 4121 
                                       goto ldv_57770;
  ldv_57770: 
#line 4122 
  ;
  
#line 4124 
  if (j > 29999) {
    
#line 4125 
    __retres = -16;
    
#line 4125 
    goto return_label;
  }
  else ;
  
#line 4127 
  __retres = 0;
  return_label: 
#line 4127 
                return __retres;
}


#line 4132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_enable_nvram_write(struct bnx2 *bp)
{
  int __retres;
  u32 val;
  
#line 4136 
  val = readl((void const volatile *)(bp->regview + 2052U));
  
#line 4137 
  writel(val | 2U,(void volatile *)(bp->regview + 2052U));
  
#line 4139 
  if (((bp->flash_info)->flags & 4U) != 0U) {
    int j;
    
#line 4142 
    writel(8U,(void volatile *)(bp->regview + 25600U));
    
#line 4143 
    writel(65552U,(void volatile *)(bp->regview + 25600U));
    
#line 4146 
    j = 0;
    
#line 4146 
    goto ldv_57780;
    ldv_57779: 
#line 4147 
    ;
    
#line 4147 
    __const_udelay(21475UL);
    
#line 4149 
    val = readl((void const volatile *)(bp->regview + 25600U));
    
#line 4150 
    if (((long)val & 8L) != 0L) 
#line 4151 
                                goto ldv_57778; else ;
    
#line 4146 
    j += 1;
    ldv_57780: 
#line 4147 
    ;
    
#line 4146 
    if (j <= 29999) 
#line 4148 
                    goto ldv_57779; else 
#line 4151 
                                         goto ldv_57778;
    ldv_57778: 
#line 4152 
    ;
    
#line 4154 
    if (j > 29999) {
      
#line 4155 
      __retres = -16;
      
#line 4155 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4157 
  __retres = 0;
  return_label: 
#line 4157 
                return __retres;
}


#line 4161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_disable_nvram_write(struct bnx2 *bp)
{
  u32 val;
  
#line 4165 
  val = readl((void const volatile *)(bp->regview + 2052U));
  
#line 4166 
  writel(val & 4294967289U,(void volatile *)(bp->regview + 2052U));
  
#line 4167 
  return;
}


#line 4171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_enable_nvram_access(struct bnx2 *bp)
{
  u32 val;
  
#line 4175 
  val = readl((void const volatile *)(bp->regview + 25636U));
  
#line 4177 
  writel(val | 3U,(void volatile *)(bp->regview + 25636U));
  
#line 4178 
  return;
}


#line 4182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_disable_nvram_access(struct bnx2 *bp)
{
  u32 val;
  
#line 4186 
  val = readl((void const volatile *)(bp->regview + 25636U));
  
#line 4188 
  writel(val & 4294967292U,(void volatile *)(bp->regview + 25636U));
  
#line 4189 
  return;
}


#line 4194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_nvram_erase_page(struct bnx2 *bp, u32 offset)
{
  int __retres;
  u32 cmd;
  int j;
  
#line 4199 
  if (((bp->flash_info)->flags & 1U) != 0U) {
    
#line 4201 
    __retres = 0;
    
#line 4201 
    goto return_label;
  }
  else ;
  
#line 4204 
  cmd = 112U;
  
#line 4208 
  writel(8U,(void volatile *)(bp->regview + 25600U));
  
#line 4211 
  writel(offset & 16777215U,(void volatile *)(bp->regview + 25612U));
  
#line 4214 
  writel(cmd,(void volatile *)(bp->regview + 25600U));
  
#line 4217 
  j = 0;
  
#line 4217 
  goto ldv_57802;
  ldv_57801: 
#line 4218 
  ;
  {
    u32 val;
    
#line 4220 
    __const_udelay(21475UL);
    
#line 4222 
    val = readl((void const volatile *)(bp->regview + 25600U));
    
#line 4223 
    if (((long)val & 8L) != 0L) 
#line 4224 
                                goto ldv_57800; else ;
  }
  
#line 4217 
  j += 1;
  ldv_57802: 
#line 4218 
  ;
  
#line 4217 
  if (j <= 29999) 
#line 4219 
                  goto ldv_57801; else 
#line 4222 
                                       goto ldv_57800;
  ldv_57800: 
#line 4223 
  ;
  
#line 4227 
  if (j > 29999) {
    
#line 4228 
    __retres = -16;
    
#line 4228 
    goto return_label;
  }
  else ;
  
#line 4230 
  __retres = 0;
  return_label: 
#line 4230 
                return __retres;
}


#line 4234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_nvram_read_dword(struct bnx2 *bp, u32 offset, u8 *ret_val, u32 cmd_flags)
{
  int __retres;
  u32 cmd;
  int j;
  
#line 4240 
  cmd = cmd_flags | 16U;
  
#line 4243 
  if (((bp->flash_info)->flags & 2U) != 0U) 
#line 4244 
                                            offset = (offset / (bp->flash_info)->page_size << (bp->flash_info)->page_bits) + offset % (bp->flash_info)->page_size; else ;
  
#line 4250 
  writel(8U,(void volatile *)(bp->regview + 25600U));
  
#line 4253 
  writel(offset & 16777215U,(void volatile *)(bp->regview + 25612U));
  
#line 4256 
  writel(cmd,(void volatile *)(bp->regview + 25600U));
  
#line 4259 
  j = 0;
  
#line 4259 
  goto ldv_57815;
  ldv_57814: 
#line 4260 
  ;
  {
    u32 val;
    
#line 4262 
    __const_udelay(21475UL);
    
#line 4264 
    val = readl((void const volatile *)(bp->regview + 25600U));
    
#line 4265 
    if (((long)val & 8L) != 0L) {
      unsigned int tmp_0;
      unsigned int tmp;
      
#line 4266 
      tmp = readl((void const volatile *)(bp->regview + 25616U));
      
#line 4266 
      tmp_0 = __fswab32(tmp);
      
#line 4266 
      __be32 v = tmp_0;
      
#line 4267 
      memcpy((void *)ret_val,(void const *)(& v),4UL);
      
#line 4268 
      goto ldv_57813;
    }
    else ;
  }
  
#line 4259 
  j += 1;
  ldv_57815: 
#line 4260 
  ;
  
#line 4259 
  if (j <= 29999) 
#line 4261 
                  goto ldv_57814; else 
#line 4264 
                                       goto ldv_57813;
  ldv_57813: 
#line 4265 
  ;
  
#line 4271 
  if (j > 29999) {
    
#line 4272 
    __retres = -16;
    
#line 4272 
    goto return_label;
  }
  else ;
  
#line 4274 
  __retres = 0;
  return_label: 
#line 4274 
                return __retres;
}


#line 4279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_nvram_write_dword(struct bnx2 *bp, u32 offset, u8 *val, u32 cmd_flags)
{
  int __retres;
  u32 cmd;
  __be32 val32;
  int j;
  unsigned int tmp_0;
  unsigned int tmp_1;
  
#line 4286 
  cmd = cmd_flags | 48U;
  
#line 4289 
  if (((bp->flash_info)->flags & 2U) != 0U) 
#line 4290 
                                            offset = (offset / (bp->flash_info)->page_size << (bp->flash_info)->page_bits) + offset % (bp->flash_info)->page_size; else ;
  
#line 4296 
  writel(8U,(void volatile *)(bp->regview + 25600U));
  
#line 4298 
  memcpy((void *)(& val32),(void const *)val,4UL);
  
#line 4301 
  ;
  
#line 4301 
  if (0 != 0) 
#line 4301 
              tmp_0 = (((val32 << 24) | ((val32 << 8) & 16711680U)) | ((val32 >> 8) & 65280U)) | (val32 >> 24); else 
                                                                    
#line 4301 
                                                                    tmp_0 = __fswab32(val32);
  
#line 4301 
  writel(tmp_0,(void volatile *)(bp->regview + 25608U));
  
#line 4304 
  writel(offset & 16777215U,(void volatile *)(bp->regview + 25612U));
  
#line 4307 
  writel(cmd,(void volatile *)(bp->regview + 25600U));
  
#line 4310 
  j = 0;
  
#line 4310 
  goto ldv_57827;
  ldv_57826: 
#line 4311 
  ;
  
#line 4311 
  __const_udelay(21475UL);
  
#line 4313 
  tmp_1 = readl((void const volatile *)(bp->regview + 25600U));
  
#line 4313 
  if (((long)tmp_1 & 8L) != 0L) 
#line 4314 
                                goto ldv_57825; else ;
  
#line 4310 
  j += 1;
  ldv_57827: 
#line 4311 
  ;
  
#line 4310 
  if (j <= 29999) 
#line 4312 
                  goto ldv_57826; else 
#line 4315 
                                       goto ldv_57825;
  ldv_57825: 
#line 4316 
  ;
  
#line 4316 
  if (j > 29999) {
    
#line 4317 
    __retres = -16;
    
#line 4317 
    goto return_label;
  }
  else ;
  
#line 4319 
  __retres = 0;
  return_label: 
#line 4319 
                return __retres;
}


#line 4323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_nvram(struct bnx2 *bp)
{
  int __retres;
  u32 val;
  int j;
  int entry_count;
  struct flash_spec const *flash;
  
#line 4326 
  int rc = 0;
  
#line 4329 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 4330 
    bp->flash_info = & flash_5709;
    
#line 4331 
    goto get_flash_size;
  }
  else ;
  
#line 4335 
  val = readl((void const volatile *)(bp->regview + 25620U));
  
#line 4337 
  entry_count = 16;
  
#line 4339 
  if ((val & 1073741824U) != 0U) {
    
#line 4342 
    j = 0;
    
#line 4342 
    flash = &(flash_table[0]);
    
#line 4342 
    goto ldv_57842;
    ldv_57841: 
#line 4343 
    ;
    
#line 4344 
    if (((flash->config1 ^ val) & 1006632960U) == 0U) {
      
#line 4346 
      bp->flash_info = flash;
      
#line 4347 
      goto ldv_57840;
    }
    else ;
    
#line 4343 
    j += 1;
    
#line 4343 
    flash += 1;
    ldv_57842: 
#line 4344 
    ;
    
#line 4342 
    if (j < entry_count) 
#line 4344 
                         goto ldv_57841; else 
#line 4347 
                                              goto ldv_57840;
    ldv_57840: 
#line 4348 
    ;
  }
  else {
    u32 mask;
    
#line 4355 
    if ((val & 8388608U) != 0U) 
#line 4356 
                                mask = 1006632960U; else 
#line 4358 
                                                         mask = 50331651U;
    
#line 4360 
    j = 0;
    
#line 4360 
    flash = &(flash_table[0]);
    
#line 4360 
    goto ldv_57846;
    ldv_57845: 
#line 4361 
    ;
    
#line 4363 
    if (((flash->strapping ^ val) & mask) == 0U) {
      
#line 4364 
      bp->flash_info = flash;
      
#line 4367 
      rc = bnx2_acquire_nvram_lock(bp);
      
#line 4367 
      if (rc != 0) {
        
#line 4368 
        __retres = rc;
        
#line 4368 
        goto return_label;
      }
      else ;
      
#line 4371 
      bnx2_enable_nvram_access(bp);
      
#line 4374 
      writel(flash->config1,(void volatile *)(bp->regview + 25620U));
      
#line 4375 
      writel(flash->config2,(void volatile *)(bp->regview + 25624U));
      
#line 4376 
      writel(flash->config3,(void volatile *)(bp->regview + 25628U));
      
#line 4377 
      writel(flash->write1,(void volatile *)(bp->regview + 25640U));
      
#line 4380 
      bnx2_disable_nvram_access(bp);
      
#line 4381 
      bnx2_release_nvram_lock(bp);
      
#line 4383 
      goto ldv_57844;
    }
    else ;
    
#line 4361 
    j += 1;
    
#line 4361 
    flash += 1;
    ldv_57846: 
#line 4362 
    ;
    
#line 4360 
    if (j < entry_count) 
#line 4362 
                         goto ldv_57845; else 
#line 4365 
                                              goto ldv_57844;
    ldv_57844: 
#line 4366 
    ;
  }
  
#line 4388 
  if (j == entry_count) {
    
#line 4389 
    bp->flash_info = (struct flash_spec const *)0;
    
#line 4390 
    printk("\001");
    
#line 4391 
    __retres = -19;
    
#line 4391 
    goto return_label;
  }
  else ;
  get_flash_size: 
#line 4394 
  ;
  
#line 4395 
  val = bnx2_shmem_rd(bp,64U);
  
#line 4396 
  val &= 16773120U;
  
#line 4397 
  if (val != 0U) 
#line 4398 
                 bp->flash_size = val; else 
#line 4400 
                                            bp->flash_size = (bp->flash_info)->total_size;
  
#line 4402 
  __retres = rc;
  return_label: 
#line 4402 
                return __retres;
}


#line 4406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_nvram_read(struct bnx2 *bp, u32 offset, u8 *ret_buf, int buf_size)
{
  int __retres;
  u32 cmd_flags;
  u32 offset32;
  u32 len32;
  u32 extra;
  
#line 4409 
  int rc = 0;
  
#line 4412 
  if (buf_size == 0) {
    
#line 4413 
    __retres = 0;
    
#line 4413 
    goto return_label;
  }
  else ;
  
#line 4416 
  rc = bnx2_acquire_nvram_lock(bp);
  
#line 4416 
  if (rc != 0) {
    
#line 4417 
    __retres = rc;
    
#line 4417 
    goto return_label;
  }
  else ;
  
#line 4420 
  bnx2_enable_nvram_access(bp);
  
#line 4422 
  len32 = (unsigned int)buf_size;
  
#line 4423 
  offset32 = offset;
  
#line 4424 
  extra = 0U;
  
#line 4426 
  cmd_flags = 0U;
  
#line 4428 
  if ((offset32 & 3U) != 0U) {
    u8 buf[4U];
    u32 pre_len;
    
#line 4432 
    offset32 &= 4294967292U;
    
#line 4433 
    pre_len = 4U - (offset & 3U);
    
#line 4435 
    if (pre_len >= len32) {
      
#line 4436 
      pre_len = len32;
      
#line 4437 
      cmd_flags = 384U;
    }
    else 
#line 4441 
         cmd_flags = 128U;
    
#line 4444 
    rc = bnx2_nvram_read_dword(bp,offset32,(u8 *)(& buf),cmd_flags);
    
#line 4446 
    if (rc != 0) {
      
#line 4447 
      __retres = rc;
      
#line 4447 
      goto return_label;
    }
    else ;
    
#line 4449 
    memcpy((void *)ret_buf,(void const *)(& buf) + (offset & 3U),(unsigned long)pre_len);
    
#line 4451 
    offset32 += 4U;
    
#line 4452 
    ret_buf += pre_len;
    
#line 4453 
    len32 -= pre_len;
  }
  else ;
  
#line 4455 
  if ((len32 & 3U) != 0U) {
    
#line 4456 
    extra = 4U - (len32 & 3U);
    
#line 4457 
    len32 = (len32 + 4U) & 4294967292U;
  }
  else ;
  
#line 4460 
  if (len32 == 4U) {
    u8 buf_0[4U];
    
#line 4463 
    if (cmd_flags != 0U) 
#line 4464 
                         cmd_flags = 256U; else 
#line 4466 
                                                cmd_flags = 384U;
    
#line 4469 
    rc = bnx2_nvram_read_dword(bp,offset32,(u8 *)(& buf_0),cmd_flags);
    
#line 4471 
    memcpy((void *)ret_buf,(void const *)(& buf_0),(unsigned long)(4U - extra));
  }
  else 
    
#line 4473 
    if (len32 != 0U) {
      u8 buf_1[4U];
      
#line 4477 
      if (cmd_flags != 0U) 
#line 4478 
                           cmd_flags = 0U; else 
#line 4480 
                                                cmd_flags = 128U;
      
#line 4482 
      rc = bnx2_nvram_read_dword(bp,offset32,ret_buf,cmd_flags);
      
#line 4485 
      offset32 += 4U;
      
#line 4486 
      ret_buf += 4U;
      
#line 4487 
      len32 += 4294967292U;
      
#line 4489 
      goto ldv_57863;
      ldv_57862: 
#line 4490 
      ;
      
#line 4490 
      rc = bnx2_nvram_read_dword(bp,offset32,ret_buf,0U);
      
#line 4493 
      offset32 += 4U;
      
#line 4494 
      ret_buf += 4U;
      
#line 4495 
      len32 += 4294967292U;
      ldv_57863: 
#line 4496 
      ;
      
#line 4489 
      if (len32 > 4U && rc == 0) 
#line 4491 
                                 goto ldv_57862; else 
#line 4494 
                                                      goto ldv_57864;
      ldv_57864: 
#line 4495 
      ;
      
#line 4498 
      if (rc != 0) {
        
#line 4499 
        __retres = rc;
        
#line 4499 
        goto return_label;
      }
      else ;
      
#line 4501 
      cmd_flags = 256U;
      
#line 4502 
      rc = bnx2_nvram_read_dword(bp,offset32,(u8 *)(& buf_1),cmd_flags);
      
#line 4504 
      memcpy((void *)ret_buf,(void const *)(& buf_1),(unsigned long)(4U - extra));
    }
    else ;
  
#line 4508 
  bnx2_disable_nvram_access(bp);
  
#line 4510 
  bnx2_release_nvram_lock(bp);
  
#line 4512 
  __retres = rc;
  return_label: 
#line 4512 
                return __retres;
}


#line 4516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_nvram_write(struct bnx2 *bp, u32 offset, u8 *data_buf, int buf_size)
{
  int __retres;
  u32 written;
  u32 offset32;
  u32 len32;
  u8 *buf;
  u8 start[4U];
  u8 end[4U];
  int align_start;
  int align_end;
  
#line 4520 
  u8 *align_buf = (u8 *)0U;
  
#line 4520 
  u8 *flash_buffer = (u8 *)0U;
  
#line 4521 
  int rc = 0;
  
#line 4524 
  buf = data_buf;
  
#line 4525 
  offset32 = offset;
  
#line 4526 
  len32 = (unsigned int)buf_size;
  
#line 4527 
  align_end = 0;
  
#line 4527 
  align_start = align_end;
  
#line 4529 
  align_start = (int)offset32 & 3;
  
#line 4529 
  if (align_start != 0) {
    
#line 4530 
    offset32 &= 4294967292U;
    
#line 4531 
    len32 += (unsigned int)align_start;
    
#line 4532 
    if (len32 <= 3U) 
#line 4533 
                     len32 = 4U; else ;
    
#line 4534 
    rc = bnx2_nvram_read(bp,offset32,(u8 *)(& start),4);
    
#line 4534 
    if (rc != 0) {
      
#line 4535 
      __retres = rc;
      
#line 4535 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4538 
  if ((len32 & 3U) != 0U) {
    
#line 4539 
    align_end = (int)(4U - (len32 & 3U));
    
#line 4540 
    len32 += (unsigned int)align_end;
    
#line 4541 
    rc = bnx2_nvram_read(bp,(offset32 + len32) + 4294967292U,(u8 *)(& end),4);
    
#line 4541 
    if (rc != 0) {
      
#line 4542 
      __retres = rc;
      
#line 4542 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4545 
  if (align_start != 0 || align_end != 0) {
    
#line 4546 
    align_buf = (u8 *)kmalloc((unsigned long)len32,208U);
    
#line 4547 
    if (align_buf == (u8 *)0U) {
      
#line 4548 
      __retres = -12;
      
#line 4548 
      goto return_label;
    }
    else ;
    
#line 4549 
    if (align_start != 0) 
#line 4550 
                          memcpy((void *)align_buf,(void const *)(& start),4UL); else ;
    
#line 4552 
    if (align_end != 0) 
#line 4553 
                        memcpy((void *)(align_buf + ((unsigned long)len32 + 18446744073709551612U)),(void const *)(& end),4UL); else ;
    
#line 4555 
    memcpy((void *)(align_buf + align_start),(void const *)data_buf,(unsigned long)buf_size);
    
#line 4556 
    buf = align_buf;
  }
  else ;
  
#line 4559 
  if (((bp->flash_info)->flags & 1U) == 0U) {
    
#line 4560 
    flash_buffer = (u8 *)kmalloc(264UL,208U);
    
#line 4561 
    if (flash_buffer == (u8 *)0U) {
      
#line 4562 
      rc = -12;
      
#line 4563 
      goto nvram_write_end;
    }
    else ;
  }
  else ;
  
#line 4567 
  written = 0U;
  
#line 4568 
  goto ldv_57904;
  ldv_57903: 
#line 4569 
  ;
  {
    u32 page_start;
    u32 page_end;
    u32 data_start;
    u32 data_end;
    u32 addr;
    u32 cmd_flags;
    int i;
    
#line 4574 
    page_start = offset32 + written;
    
#line 4575 
    page_start -= page_start % (bp->flash_info)->page_size;
    
#line 4577 
    page_end = (bp->flash_info)->page_size + page_start;
    
#line 4579 
    if (written == 0U) 
#line 4579 
                       data_start = offset32; else 
#line 4579 
                                                   data_start = page_start;
    
#line 4581 
    if (page_end < offset32 + len32) 
#line 4581 
                                     data_end = page_end; else 
#line 4581 
                                                               data_end = offset32 + len32;
    
#line 4585 
    rc = bnx2_acquire_nvram_lock(bp);
    
#line 4585 
    if (rc != 0) 
#line 4586 
                 goto nvram_write_end; else ;
    
#line 4589 
    bnx2_enable_nvram_access(bp);
    
#line 4591 
    cmd_flags = 128U;
    
#line 4592 
    if (((bp->flash_info)->flags & 1U) == 0U) {
      int j;
      
#line 4597 
      j = 0;
      
#line 4597 
      goto ldv_57892;
      ldv_57891: 
#line 4598 
      ;
      
#line 4598 
      if ((bp->flash_info)->page_size + 4294967292U == (unsigned int)j) 
        
#line 4599 
        cmd_flags |= 256U; else ;
      
#line 4601 
      rc = bnx2_nvram_read_dword(bp,page_start + (unsigned int)j,flash_buffer + j,cmd_flags);
      
#line 4606 
      if (rc != 0) 
#line 4607 
                   goto nvram_write_end; else ;
      
#line 4609 
      cmd_flags = 0U;
      
#line 4597 
      j += 4;
      ldv_57892: 
#line 4598 
      ;
      
#line 4597 
      if ((bp->flash_info)->page_size > (unsigned int)j) 
#line 4599 
                                                         goto ldv_57891; else 
                                                                    
#line 4602 
                                                                    goto ldv_57893;
      ldv_57893: 
#line 4603 
      ;
    }
    else ;
    
#line 4614 
    rc = bnx2_enable_nvram_write(bp);
    
#line 4614 
    if (rc != 0) 
#line 4615 
                 goto nvram_write_end; else ;
    
#line 4619 
    i = 0;
    
#line 4620 
    if (((bp->flash_info)->flags & 1U) == 0U) {
      
#line 4622 
      rc = bnx2_nvram_erase_page(bp,page_start);
      
#line 4622 
      if (rc != 0) 
#line 4623 
                   goto nvram_write_end; else ;
      
#line 4626 
      bnx2_enable_nvram_write(bp);
      
#line 4628 
      addr = page_start;
      
#line 4628 
      goto ldv_57895;
      ldv_57894: 
#line 4629 
      ;
      
#line 4631 
      rc = bnx2_nvram_write_dword(bp,addr,flash_buffer + i,cmd_flags);
      
#line 4634 
      if (rc != 0) 
#line 4635 
                   goto nvram_write_end; else ;
      
#line 4637 
      cmd_flags = 0U;
      
#line 4629 
      addr += 4U;
      
#line 4629 
      i += 4;
      ldv_57895: 
#line 4630 
      ;
      
#line 4628 
      if (addr < data_start) 
#line 4630 
                             goto ldv_57894; else 
#line 4633 
                                                  goto ldv_57896;
      ldv_57896: 
#line 4634 
      ;
    }
    else ;
    
#line 4642 
    addr = data_start;
    
#line 4642 
    goto ldv_57898;
    ldv_57897: 
#line 4643 
    ;
    
#line 4643 
    if (page_end + 4294967292U == addr || (((bp->flash_info)->flags & 1U) != 0U && data_end + 4294967292U == addr)) 
      
#line 4647 
      cmd_flags |= 256U; else ;
    
#line 4649 
    rc = bnx2_nvram_write_dword(bp,addr,buf,cmd_flags);
    
#line 4652 
    if (rc != 0) 
#line 4653 
                 goto nvram_write_end; else ;
    
#line 4655 
    cmd_flags = 0U;
    
#line 4656 
    buf += 4U;
    
#line 4642 
    addr += 4U;
    
#line 4642 
    i += 4;
    ldv_57898: 
#line 4643 
    ;
    
#line 4642 
    if (addr < data_end) 
#line 4644 
                         goto ldv_57897; else 
#line 4647 
                                              goto ldv_57899;
    ldv_57899: 
#line 4648 
    ;
    
#line 4661 
    if (((bp->flash_info)->flags & 1U) == 0U) {
      
#line 4662 
      addr = data_end;
      
#line 4662 
      goto ldv_57901;
      ldv_57900: 
#line 4663 
      ;
      
#line 4665 
      if (page_end + 4294967292U == addr) 
#line 4666 
                                          cmd_flags = 256U; else ;
      
#line 4668 
      rc = bnx2_nvram_write_dword(bp,addr,flash_buffer + i,cmd_flags);
      
#line 4671 
      if (rc != 0) 
#line 4672 
                   goto nvram_write_end; else ;
      
#line 4674 
      cmd_flags = 0U;
      
#line 4663 
      addr += 4U;
      
#line 4663 
      i += 4;
      ldv_57901: 
#line 4664 
      ;
      
#line 4662 
      if (addr < page_end) 
#line 4664 
                           goto ldv_57900; else 
#line 4667 
                                                goto ldv_57902;
      ldv_57902: 
#line 4668 
      ;
    }
    else ;
    
#line 4679 
    bnx2_disable_nvram_write(bp);
    
#line 4682 
    bnx2_disable_nvram_access(bp);
    
#line 4683 
    bnx2_release_nvram_lock(bp);
    
#line 4686 
    written = (data_end - data_start) + written;
  }
  ldv_57904: 
#line 4688 
  ;
  
#line 4568 
  if (written < len32 && rc == 0) 
#line 4570 
                                  goto ldv_57903; else 
#line 4573 
                                                       goto ldv_57905;
  ldv_57905: 
#line 4574 
  ;
  nvram_write_end: 
#line 4689 
  ;
  
#line 4690 
  kfree((void const *)flash_buffer);
  
#line 4691 
  kfree((void const *)align_buf);
  
#line 4692 
  __retres = rc;
  return_label: 
#line 4692 
                return __retres;
}


#line 4696  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_fw_cap(struct bnx2 *bp)
{
  u32 val;
  bool tmp;
  
#line 4698 
  u32 sig = 0U;
  
#line 4700 
  bp->phy_flags &= 4294965247U;
  
#line 4701 
  bp->flags &= 4294963199U;
  
#line 4703 
  if ((bp->flags & 64U) == 0U) 
#line 4704 
                               bp->flags |= 4096U; else ;
  
#line 4706 
  val = bnx2_shmem_rd(bp,872U);
  
#line 4707 
  if ((val & 4294901760U) != 2857697280U) 
#line 4708 
                                          goto return_label; else ;
  
#line 4710 
  if ((val & 24U) == 24U) {
    
#line 4711 
    bp->flags |= 4096U;
    
#line 4712 
    sig |= 893714456U;
  }
  else ;
  
#line 4715 
  if ((bp->phy_flags & 1U) != 0U && (val & 1U) != 0U) {
    u32 link;
    
#line 4719 
    bp->phy_flags |= 2048U;
    
#line 4721 
    link = bnx2_shmem_rd(bp,12U);
    
#line 4722 
    if ((link & 1048576U) != 0U) 
#line 4723 
                                 bp->phy_port = (unsigned char)3U; else 
                                                                    
#line 4725 
                                                                    bp->phy_port = (unsigned char)0U;
    
#line 4727 
    sig |= 893714433U;
  }
  else ;
  
#line 4731 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 4731 
  if ((int)tmp != 0) {
    
#line 4731 
    if (sig != 0U) 
#line 4732 
                   bnx2_shmem_wr(bp,868U,sig); else ;
  }
  else ;
  return_label: 
#line 4733 
                return;
}


#line 4736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_setup_msix_tbl(struct bnx2 *bp)
{
  
#line 4738 
  writel(2147483648U,(void volatile *)(bp->regview + 1024U));
  
#line 4740 
  writel(3244032U,(void volatile *)(bp->regview + 1556U));
  
#line 4741 
  writel(3260416U,(void volatile *)(bp->regview + 1560U));
  
#line 4742 
  return;
}


#line 4745  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_reset_chip(struct bnx2 *bp, u32 reset_code)
{
  int __retres;
  u32 val;
  int i;
  u8 old_port;
  
#line 4748 
  int rc = 0;
  
#line 4753 
  if ((bp->chip_id & 4294901760U) == 1460011008U || (bp->chip_id & 4294901760U) == 1460142080U) {
    
#line 4755 
    writel(67764240U,(void volatile *)(bp->regview + 2068U));
    
#line 4760 
    val = readl((void const volatile *)(bp->regview + 2068U));
    
#line 4761 
    __const_udelay(21475UL);
  }
  else {
    
#line 4763 
    val = readl((void const volatile *)(bp->regview + 2248U));
    
#line 4764 
    val &= 4294901759U;
    
#line 4765 
    writel(val,(void volatile *)(bp->regview + 2248U));
    
#line 4766 
    val = readl((void const volatile *)(bp->regview + 2248U));
    
#line 4768 
    i = 0;
    
#line 4768 
    goto ldv_57925;
    ldv_57924: 
#line 4769 
    ;
    
#line 4769 
    msleep(1U);
    
#line 4770 
    val = readl((void const volatile *)(bp->regview + 180U));
    
#line 4771 
    if (((long)val & 2097152L) == 0L) 
#line 4772 
                                      goto ldv_57923; else ;
    
#line 4768 
    i += 1;
    ldv_57925: 
#line 4769 
    ;
    
#line 4768 
    if (i <= 99) 
#line 4770 
                 goto ldv_57924; else 
#line 4773 
                                      goto ldv_57923;
    ldv_57923: 
#line 4774 
    ;
  }
  
#line 4777 
  bnx2_fw_sync(bp,reset_code | 65536U,1,1);
  
#line 4781 
  bnx2_shmem_wr(bp,0U,1212241483U);
  
#line 4786 
  val = readl((void const volatile *)(bp->regview + 2056U));
  
#line 4788 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 4789 
    writel(16U,(void volatile *)(bp->regview + 2048U));
    
#line 4790 
    readl((void const volatile *)(bp->regview + 2048U));
    
#line 4791 
    __const_udelay(21475UL);
    
#line 4793 
    val = 136U;
    
#line 4796 
    writel(val,(void volatile *)(bp->regview + 104U));
  }
  else {
    
#line 4799 
    val = 392U;
    
#line 4804 
    writel(val,(void volatile *)(bp->regview + 104U));
    
#line 4810 
    if ((bp->chip_id & 4294967280U) == 1460011008U || (bp->chip_id & 4294967280U) == 1460011024U) 
      
#line 4812 
      msleep(20U); else ;
    
#line 4815 
    i = 0;
    
#line 4815 
    goto ldv_57928;
    ldv_57927: 
#line 4816 
    ;
    
#line 4816 
    val = readl((void const volatile *)(bp->regview + 104U));
    
#line 4817 
    if (((long)val & 768L) == 0L) 
#line 4819 
                                  goto ldv_57926; else ;
    
#line 4820 
    __const_udelay(42950UL);
    
#line 4815 
    i += 1;
    ldv_57928: 
#line 4816 
    ;
    
#line 4815 
    if (i <= 9) 
#line 4817 
                goto ldv_57927; else 
#line 4820 
                                     goto ldv_57926;
    ldv_57926: 
#line 4821 
    ;
    
#line 4823 
    if (((long)val & 768L) != 0L) {
      
#line 4825 
      printk("\001");
      
#line 4826 
      __retres = -16;
      
#line 4826 
      goto return_label;
    }
    else ;
  }
  
#line 4831 
  val = readl((void const volatile *)(bp->regview + 1048U));
  
#line 4832 
  if (val != 16909060U) {
    
#line 4833 
    printk("\001");
    
#line 4834 
    __retres = -19;
    
#line 4834 
    goto return_label;
  }
  else ;
  
#line 4838 
  rc = bnx2_fw_sync(bp,reset_code | 131072U,1,0);
  
#line 4839 
  if (rc != 0) {
    
#line 4840 
    __retres = rc;
    
#line 4840 
    goto return_label;
  }
  else ;
  
#line 4842 
  ldv_spin_lock_bh_104(& bp->phy_lock);
  
#line 4843 
  old_port = bp->phy_port;
  
#line 4844 
  bnx2_init_fw_cap(bp);
  
#line 4845 
  if ((bp->phy_flags & 2048U) != 0U && (int)bp->phy_port != (int)old_port) 
    
#line 4847 
    bnx2_set_default_remote_link(bp); else ;
  
#line 4848 
  ldv_spin_unlock_bh_105(& bp->phy_lock);
  
#line 4850 
  if ((bp->chip_id & 4294967280U) == 1460011008U) {
    
#line 4853 
    writel(250U,(void volatile *)(bp->regview + 2228U));
    
#line 4856 
    rc = bnx2_alloc_bad_rbuf(bp);
  }
  else ;
  
#line 4859 
  if ((bp->flags & 1024U) != 0U) {
    
#line 4860 
    bnx2_setup_msix_tbl(bp);
    
#line 4862 
    writel(1U,(void volatile *)(bp->regview + 2252U));
  }
  else ;
  
#line 4866 
  __retres = rc;
  return_label: 
#line 4866 
                return __retres;
}


#line 4870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_chip(struct bnx2 *bp)
{
  int __retres;
  u32 val;
  u32 mtu;
  int rc;
  int i;
  
#line 4876 
  writel(262144U,(void volatile *)(bp->regview + 132U));
  
#line 4878 
  val = 217123U;
  
#line 4887 
  val |= 2099200U;
  
#line 4889 
  if ((bp->flags & 1U) != 0U && (unsigned int)bp->bus_speed_mhz == 133U) 
    
#line 4890 
    val |= 8388608U; else ;
  
#line 4892 
  if (((bp->chip_id & 4294901760U) == 1460011008U && (bp->chip_id & 4294967280U) != 1460011008U) && (bp->flags & 1U) == 0U) 
    
#line 4895 
    val |= 1024U; else ;
  
#line 4897 
  writel(val,(void volatile *)(bp->regview + 3080U));
  
#line 4899 
  if ((bp->chip_id & 4294967280U) == 1460011008U) {
    
#line 4900 
    val = readl((void const volatile *)(bp->regview + 23560U));
    
#line 4901 
    val |= 1U;
    
#line 4902 
    writel(val,(void volatile *)(bp->regview + 23560U));
  }
  else ;
  
#line 4905 
  if ((bp->flags & 1U) != 0U) {
    u16 val16;
    
#line 4908 
    pci_read_config_word((struct pci_dev const *)bp->pdev,bp->pcix_cap + 2,& val16);
    
#line 4910 
    pci_write_config_word((struct pci_dev const *)bp->pdev,bp->pcix_cap + 2,(unsigned short)((int)val16 & 65533));
  }
  else ;
  
#line 4914 
  writel(2654208U,(void volatile *)(bp->regview + 2064U));
  
#line 4921 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 4922 
    rc = bnx2_init_5709_context(bp);
    
#line 4923 
    if (rc != 0) {
      
#line 4924 
      __retres = rc;
      
#line 4924 
      goto return_label;
    }
    else ;
  }
  else 
#line 4926 
       bnx2_init_context(bp);
  
#line 4928 
  rc = bnx2_init_cpus(bp);
  
#line 4928 
  if (rc != 0) {
    
#line 4929 
    __retres = rc;
    
#line 4929 
    goto return_label;
  }
  else ;
  
#line 4931 
  bnx2_init_nvram(bp);
  
#line 4933 
  bnx2_set_mac_addr(bp,(bp->dev)->dev_addr,0U);
  
#line 4935 
  val = readl((void const volatile *)(bp->regview + 15368U));
  
#line 4936 
  val &= 4294967183U;
  
#line 4937 
  val = val;
  
#line 4938 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 4939 
    val |= 4U;
    
#line 4940 
    if ((bp->chip_id & 61440U) == 0U) 
#line 4941 
                                      val |= 2U; else ;
  }
  else ;
  
#line 4944 
  writel(val,(void volatile *)(bp->regview + 15368U));
  
#line 4946 
  val = 4259840U;
  
#line 4947 
  writel(val,(void volatile *)(bp->regview + 15388U));
  
#line 4948 
  writel(val,(void volatile *)(bp->regview + 15392U));
  
#line 4950 
  val = 67108864U;
  
#line 4951 
  writel(val,(void volatile *)(bp->regview + 10248U));
  
#line 4954 
  val = readl((void const volatile *)(bp->regview + 20488U));
  
#line 4955 
  val &= 4043309055U;
  
#line 4956 
  val |= 67108928U;
  
#line 4957 
  writel(val,(void volatile *)(bp->regview + 20488U));
  
#line 4959 
  val = (unsigned int)((((((int)bp->mac_addr[0] + ((int)bp->mac_addr[1] << 8)) + ((int)bp->mac_addr[2] << 16)) + (int)bp->mac_addr[3]) + ((int)bp->mac_addr[4] << 8)) + ((int)bp->mac_addr[5] << 16));
  
#line 4965 
  writel(val,(void volatile *)(bp->regview + 5272U));
  
#line 4968 
  mtu = (bp->dev)->mtu;
  
#line 4969 
  val = mtu + 18U;
  
#line 4970 
  if (val > 1518U) 
#line 4971 
                   val |= 2147483648U; else ;
  
#line 4972 
  writel(val,(void volatile *)(bp->regview + 5276U));
  
#line 4974 
  if (mtu <= 1499U) 
#line 4975 
                    mtu = 1500U; else ;
  
#line 4977 
  bnx2_reg_wr_ind(bp,2097164U,((mtu * 31U + 4294920796U) / 1000U + 54U) | (((mtu * 39U + 4294908796U) / 1000U + 66U) << 16));
  
#line 4978 
  bnx2_reg_wr_ind(bp,2097180U,(((mtu + 1073740324U) * 4U) / 1000U + 5U) | ((((mtu + 2147482148U) * 2U) / 100U + 30U) << 16));
  
#line 4979 
  bnx2_reg_wr_ind(bp,2097184U,((mtu * 12U + 4294949296U) / 1000U + 18U) | ((((mtu + 2147482148U) * 2U) / 100U + 30U) << 16));
  
#line 4981 
  memset((void *)bp->bnx2_napi[0].status_blk.msi,0,(unsigned long)bp->status_stats_size);
  
#line 4982 
  i = 0;
  
#line 4982 
  goto ldv_57938;
  ldv_57937: 
#line 4983 
  ;
  
#line 4983 
  bp->bnx2_napi[i].last_status_idx = 0U;
  
#line 4982 
  i += 1;
  ldv_57938: 
#line 4983 
  ;
  
#line 4982 
  if (i <= 8) 
#line 4984 
              goto ldv_57937; else 
#line 4987 
                                   goto ldv_57939;
  ldv_57939: 
#line 4988 
  ;
  
#line 4985 
  bp->idle_chk_status_idx = 65535U;
  
#line 4988 
  writel(2048U,(void volatile *)(bp->regview + 5128U));
  
#line 4990 
  writel((unsigned int)bp->status_blk_mapping,(void volatile *)(bp->regview + 26640U));
  
#line 4992 
  writel((unsigned int)(bp->status_blk_mapping >> 32),(void volatile *)(bp->regview + 26644U));
  
#line 4994 
  writel((unsigned int)bp->stats_blk_mapping,(void volatile *)(bp->regview + 26648U));
  
#line 4996 
  writel((unsigned int)(bp->stats_blk_mapping >> 32),(void volatile *)(bp->regview + 26652U));
  
#line 4999 
  writel((unsigned int)(((int)bp->tx_quick_cons_trip_int << 16) | (int)bp->tx_quick_cons_trip),(void volatile *)(bp->regview + 26656U));
  
#line 5002 
  writel((unsigned int)(((int)bp->rx_quick_cons_trip_int << 16) | (int)bp->rx_quick_cons_trip),(void volatile *)(bp->regview + 26664U));
  
#line 5005 
  writel((unsigned int)(((int)bp->comp_prod_trip_int << 16) | (int)bp->comp_prod_trip),(void volatile *)(bp->regview + 26660U));
  
#line 5008 
  writel((unsigned int)(((int)bp->tx_ticks_int << 16) | (int)bp->tx_ticks),(void volatile *)(bp->regview + 26672U));
  
#line 5010 
  writel((unsigned int)(((int)bp->rx_ticks_int << 16) | (int)bp->rx_ticks),(void volatile *)(bp->regview + 26668U));
  
#line 5012 
  writel((unsigned int)(((int)bp->com_ticks_int << 16) | (int)bp->com_ticks),(void volatile *)(bp->regview + 26676U));
  
#line 5015 
  writel((unsigned int)(((int)bp->cmd_ticks_int << 16) | (int)bp->cmd_ticks),(void volatile *)(bp->regview + 26680U));
  
#line 5018 
  if ((bp->flags & 8192U) != 0U) 
#line 5019 
                                 writel(0U,(void volatile *)(bp->regview + 26692U)); else 
                                                                    
#line 5021 
                                                                    writel(bp->stats_ticks,(void volatile *)(bp->regview + 26692U));
  
#line 5022 
  writel(3000U,(void volatile *)(bp->regview + 26688U));
  
#line 5024 
  if ((bp->chip_id & 4294967280U) == 1460011024U) 
#line 5025 
                                                  val = 1U; else 
#line 5027 
                                                                 val = 7U;
  
#line 5031 
  if ((bp->flags & 1024U) != 0U) {
    
#line 5032 
    writel(511U,(void volatile *)(bp->regview + 26904U));
    
#line 5035 
    val |= 16777216U;
  }
  else ;
  
#line 5038 
  if ((bp->flags & 256U) != 0U) 
#line 5039 
                                val |= 393216U; else ;
  
#line 5041 
  writel(val,(void volatile *)(bp->regview + 26632U));
  
#line 5043 
  if ((unsigned int)bp->rx_ticks <= 24U) 
#line 5044 
                                         bnx2_reg_wr_ind(bp,1179736U,1U); else 
                                                                    
#line 5046 
                                                                    bnx2_reg_wr_ind(bp,1179736U,0U);
  
#line 5048 
  i = 1;
  
#line 5048 
  goto ldv_57942;
  ldv_57941: 
#line 5049 
  ;
  {
    
#line 5049 
    u32 base = (unsigned int)((i + -1) * 36 + 27136);
    
#line 5052 
    writel(131078U,(void volatile *)(bp->regview + base));
    
#line 5057 
    writel((unsigned int)(((int)bp->tx_quick_cons_trip_int << 16) | (int)bp->tx_quick_cons_trip),(void volatile *)(bp->regview + (base + 4U)));
    
#line 5061 
    writel((unsigned int)(((int)bp->tx_ticks_int << 16) | (int)bp->tx_ticks),(void volatile *)(bp->regview + (base + 20U)));
    
#line 5064 
    writel((unsigned int)(((int)bp->rx_quick_cons_trip_int << 16) | (int)bp->rx_quick_cons_trip),(void volatile *)(bp->regview + (base + 12U)));
    
#line 5068 
    writel((unsigned int)(((int)bp->rx_ticks_int << 16) | (int)bp->rx_ticks),(void volatile *)(bp->regview + (base + 16U)));
  }
  
#line 5048 
  i += 1;
  ldv_57942: 
#line 5049 
  ;
  
#line 5048 
  if (bp->irq_nvecs > i) 
#line 5050 
                         goto ldv_57941; else 
#line 5053 
                                              goto ldv_57943;
  ldv_57943: 
#line 5054 
  ;
  
#line 5073 
  writel(2097152U,(void volatile *)(bp->regview + 26624U));
  
#line 5075 
  writel(16777217U,(void volatile *)(bp->regview + 26636U));
  
#line 5078 
  bnx2_set_rx_mode(bp->dev);
  
#line 5080 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 5081 
    val = readl((void const volatile *)(bp->regview + 2248U));
    
#line 5082 
    val |= 65536U;
    
#line 5083 
    writel(val,(void volatile *)(bp->regview + 2248U));
  }
  else ;
  
#line 5085 
  rc = bnx2_fw_sync(bp,16973824U,1,0);
  
#line 5088 
  writel(402653183U,(void volatile *)(bp->regview + 2064U));
  
#line 5089 
  readl((void const volatile *)(bp->regview + 2064U));
  
#line 5091 
  __const_udelay(85900UL);
  
#line 5093 
  bp->hc_cmd = readl((void const volatile *)(bp->regview + 26624U));
  
#line 5095 
  __retres = rc;
  return_label: 
#line 5095 
                return __retres;
}


#line 5099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_clear_ring_states(struct bnx2 *bp)
{
  struct bnx2_napi *bnapi;
  struct bnx2_tx_ring_info *txr;
  struct bnx2_rx_ring_info *rxr;
  int i;
  
#line 5106 
  i = 0;
  
#line 5106 
  goto ldv_57952;
  ldv_57951: 
#line 5107 
  ;
  
#line 5107 
  bnapi = & bp->bnx2_napi[i];
  
#line 5108 
  txr = & bnapi->tx_ring;
  
#line 5109 
  rxr = & bnapi->rx_ring;
  
#line 5111 
  txr->tx_cons = (unsigned short)0U;
  
#line 5112 
  txr->hw_tx_cons = (unsigned short)0U;
  
#line 5113 
  rxr->rx_prod_bseq = 0U;
  
#line 5114 
  rxr->rx_prod = (unsigned short)0U;
  
#line 5115 
  rxr->rx_cons = (unsigned short)0U;
  
#line 5116 
  rxr->rx_pg_prod = (unsigned short)0U;
  
#line 5117 
  rxr->rx_pg_cons = (unsigned short)0U;
  
#line 5106 
  i += 1;
  ldv_57952: 
#line 5107 
  ;
  
#line 5106 
  if (i <= 8) 
#line 5108 
              goto ldv_57951; else 
#line 5111 
                                   goto ldv_57953;
  ldv_57953: 
#line 5112 
  ;
  
#line 5113 
  return;
}


#line 5122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_tx_context(struct bnx2 *bp, u32 cid, struct bnx2_tx_ring_info *txr)
{
  u32 val;
  u32 offset0;
  u32 offset1;
  u32 offset2;
  u32 offset3;
  
#line 5125 
  u32 cid_addr = cid << 7;
  
#line 5127 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 5128 
    offset0 = 128U;
    
#line 5129 
    offset1 = 576U;
    
#line 5130 
    offset2 = 600U;
    
#line 5131 
    offset3 = 604U;
  }
  else {
    
#line 5133 
    offset0 = 0U;
    
#line 5134 
    offset1 = 136U;
    
#line 5135 
    offset2 = 160U;
    
#line 5136 
    offset3 = 164U;
  }
  
#line 5138 
  val = 268828672U;
  
#line 5139 
  bnx2_ctx_wr(bp,cid_addr,offset0,val);
  
#line 5141 
  val = 524288U;
  
#line 5142 
  bnx2_ctx_wr(bp,cid_addr,offset1,val);
  
#line 5144 
  val = (unsigned int)(txr->tx_desc_mapping >> 32);
  
#line 5145 
  bnx2_ctx_wr(bp,cid_addr,offset2,val);
  
#line 5147 
  val = (unsigned int)txr->tx_desc_mapping;
  
#line 5148 
  bnx2_ctx_wr(bp,cid_addr,offset3,val);
  
#line 5149 
  return;
}


#line 5152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_tx_ring(struct bnx2 *bp, int ring_num)
{
  struct bnx2_tx_bd *txbd;
  struct bnx2_napi *bnapi;
  struct bnx2_tx_ring_info *txr;
  
#line 5155 
  u32 cid = 16U;
  
#line 5159 
  bnapi = & bp->bnx2_napi[ring_num];
  
#line 5160 
  txr = & bnapi->tx_ring;
  
#line 5162 
  if (ring_num == 0) 
#line 5163 
                     cid = 16U; else 
#line 5165 
                                     cid = (unsigned int)(ring_num + 31);
  
#line 5167 
  bp->tx_wake_thresh = (unsigned int)(bp->tx_ring_size / 2);
  
#line 5169 
  txbd = txr->tx_desc_ring + 255U;
  
#line 5171 
  txbd->tx_bd_haddr_hi = (unsigned int)(txr->tx_desc_mapping >> 32);
  
#line 5172 
  txbd->tx_bd_haddr_lo = (unsigned int)txr->tx_desc_mapping;
  
#line 5174 
  txr->tx_prod = (unsigned short)0U;
  
#line 5175 
  txr->tx_prod_bseq = 0U;
  
#line 5177 
  txr->tx_bidx_addr = (cid << 8) + 65672U;
  
#line 5178 
  txr->tx_bseq_addr = (cid << 8) + 65680U;
  
#line 5180 
  bnx2_init_tx_context(bp,cid,txr);
  
#line 5181 
  return;
}


#line 5184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_rxbd_rings(struct bnx2_rx_bd **rx_ring, dma_addr_t *dma, u32 buf_size, int num_rings)
{
  int i;
  struct bnx2_rx_bd *rxbd;
  
#line 5190 
  i = 0;
  
#line 5190 
  goto ldv_57986;
  ldv_57985: 
#line 5191 
  ;
  {
    int j;
    
#line 5193 
    rxbd = *(rx_ring + i);
    
#line 5194 
    j = 0;
    
#line 5194 
    goto ldv_57983;
    ldv_57982: 
#line 5195 
    ;
    
#line 5195 
    rxbd->rx_bd_len = buf_size;
    
#line 5196 
    rxbd->rx_bd_flags = 12U;
    
#line 5194 
    j += 1;
    
#line 5194 
    rxbd += 1;
    ldv_57983: 
#line 5195 
    ;
    
#line 5194 
    if ((unsigned int)j <= 254U) 
#line 5196 
                                 goto ldv_57982; else 
#line 5199 
                                                      goto ldv_57984;
    ldv_57984: 
#line 5200 
    ;
    
#line 5198 
    if (num_rings + -1 == i) 
#line 5199 
                             j = 0; else 
#line 5201 
                                         j = i + 1;
    
#line 5202 
    rxbd->rx_bd_haddr_hi = (unsigned int)(*(dma + j) >> 32);
    
#line 5203 
    rxbd->rx_bd_haddr_lo = (unsigned int)*(dma + j);
  }
  
#line 5190 
  i += 1;
  ldv_57986: 
#line 5191 
  ;
  
#line 5190 
  if (i < num_rings) 
#line 5192 
                     goto ldv_57985; else 
#line 5195 
                                          goto ldv_57987;
  ldv_57987: 
#line 5196 
  ;
  
#line 5197 
  return;
}


#line 5208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_rx_ring(struct bnx2 *bp, int ring_num)
{
  int i;
  u16 prod;
  u16 ring_prod;
  u32 cid;
  u32 rx_cid_addr;
  u32 val;
  int tmp;
  int tmp_0;
  
#line 5213 
  struct bnx2_napi *bnapi = & bp->bnx2_napi[ring_num];
  
#line 5214 
  struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
  
#line 5216 
  if (ring_num == 0) 
#line 5217 
                     cid = 0U; else 
#line 5219 
                                    cid = (unsigned int)(ring_num + 3);
  
#line 5221 
  rx_cid_addr = cid << 7;
  
#line 5223 
  bnx2_init_rxbd_rings((struct bnx2_rx_bd **)(& rxr->rx_desc_ring),(dma_addr_t *)(& rxr->rx_desc_mapping),bp->rx_buf_use_size,bp->rx_max_ring);
  
#line 5226 
  bnx2_init_rx_context(bp,cid);
  
#line 5228 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    
#line 5229 
    val = readl((void const volatile *)(bp->regview + 15668U));
    
#line 5230 
    writel(val | 201326592U,(void volatile *)(bp->regview + 15668U));
  }
  else ;
  
#line 5233 
  bnx2_ctx_wr(bp,rx_cid_addr,72U,0U);
  
#line 5234 
  if (bp->rx_pg_ring_size != 0) {
    
#line 5235 
    bnx2_init_rxbd_rings((struct bnx2_rx_bd **)(& rxr->rx_pg_desc_ring),(dma_addr_t *)(& rxr->rx_pg_desc_mapping),4096U,bp->rx_max_pg_ring);
    
#line 5238 
    val = (bp->rx_buf_use_size << 16) | 4096U;
    
#line 5239 
    bnx2_ctx_wr(bp,rx_cid_addr,72U,val);
    
#line 5240 
    bnx2_ctx_wr(bp,rx_cid_addr,76U,(unsigned int)(16382 - ring_num));
    
#line 5243 
    val = (unsigned int)(rxr->rx_pg_desc_mapping[0] >> 32);
    
#line 5244 
    bnx2_ctx_wr(bp,rx_cid_addr,80U,val);
    
#line 5246 
    val = (unsigned int)rxr->rx_pg_desc_mapping[0];
    
#line 5247 
    bnx2_ctx_wr(bp,rx_cid_addr,84U,val);
    
#line 5249 
    if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 5250 
                                                    writel(2181056070U,(void volatile *)(bp->regview + 15660U)); else ;
  }
  else ;
  
#line 5253 
  val = (unsigned int)(rxr->rx_desc_mapping[0] >> 32);
  
#line 5254 
  bnx2_ctx_wr(bp,rx_cid_addr,16U,val);
  
#line 5256 
  val = (unsigned int)rxr->rx_desc_mapping[0];
  
#line 5257 
  bnx2_ctx_wr(bp,rx_cid_addr,20U,val);
  
#line 5259 
  prod = rxr->rx_pg_prod;
  
#line 5259 
  ring_prod = prod;
  
#line 5260 
  i = 0;
  
#line 5260 
  goto ldv_58002;
  ldv_58001: 
#line 5261 
  ;
  
#line 5261 
  tmp = bnx2_alloc_rx_page(bp,rxr,(unsigned short)((int)ring_prod),208U);
  
#line 5261 
  if (tmp < 0) {
    
#line 5262 
    netdev_warn((struct net_device const *)bp->dev,"init\'ed rx page ring %d with %d/%d pages only\n",ring_num,i,bp->rx_pg_ring_size);
    
#line 5264 
    goto ldv_58000;
  }
  else ;
  
#line 5266 
  if (((unsigned long)prod & 254UL) == 254UL) 
#line 5266 
                                              prod = (unsigned short)((unsigned int)prod + 2U); else 
                                                                    
#line 5266 
                                                                    prod = (unsigned short)((unsigned int)prod + 1U);
  
#line 5267 
  ring_prod = (unsigned short)((int)((unsigned short)bp->rx_max_pg_ring_idx) & (int)prod);
  
#line 5260 
  i += 1;
  ldv_58002: 
#line 5261 
  ;
  
#line 5260 
  if (bp->rx_pg_ring_size > i) 
#line 5262 
                               goto ldv_58001; else 
#line 5265 
                                                    goto ldv_58000;
  ldv_58000: 
#line 5266 
  ;
  
#line 5269 
  rxr->rx_pg_prod = prod;
  
#line 5271 
  prod = rxr->rx_prod;
  
#line 5271 
  ring_prod = prod;
  
#line 5272 
  i = 0;
  
#line 5272 
  goto ldv_58005;
  ldv_58004: 
#line 5273 
  ;
  
#line 5273 
  tmp_0 = bnx2_alloc_rx_data(bp,rxr,(unsigned short)((int)ring_prod),208U);
  
#line 5273 
  if (tmp_0 < 0) {
    
#line 5274 
    netdev_warn((struct net_device const *)bp->dev,"init\'ed rx ring %d with %d/%d skbs only\n",ring_num,i,bp->rx_ring_size);
    
#line 5276 
    goto ldv_58003;
  }
  else ;
  
#line 5278 
  if (((unsigned long)prod & 254UL) == 254UL) 
#line 5278 
                                              prod = (unsigned short)((unsigned int)prod + 2U); else 
                                                                    
#line 5278 
                                                                    prod = (unsigned short)((unsigned int)prod + 1U);
  
#line 5279 
  ring_prod = (unsigned short)((int)((unsigned short)bp->rx_max_ring_idx) & (int)prod);
  
#line 5272 
  i += 1;
  ldv_58005: 
#line 5273 
  ;
  
#line 5272 
  if (bp->rx_ring_size > i) 
#line 5274 
                            goto ldv_58004; else 
#line 5277 
                                                 goto ldv_58003;
  ldv_58003: 
#line 5278 
  ;
  
#line 5281 
  rxr->rx_prod = prod;
  
#line 5283 
  rxr->rx_bidx_addr = (cid << 8) + 65540U;
  
#line 5284 
  rxr->rx_bseq_addr = (cid << 8) + 65544U;
  
#line 5285 
  rxr->rx_pg_bidx_addr = (cid << 8) + 65604U;
  
#line 5287 
  writew((unsigned short)((int)rxr->rx_pg_prod),(void volatile *)(bp->regview + rxr->rx_pg_bidx_addr));
  
#line 5288 
  writew((unsigned short)((int)prod),(void volatile *)(bp->regview + rxr->rx_bidx_addr));
  
#line 5290 
  writel(rxr->rx_prod_bseq,(void volatile *)(bp->regview + rxr->rx_bseq_addr));
  
#line 5291 
  return;
}


#line 5294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_all_rings(struct bnx2 *bp)
{
  int i;
  u32 val;
  
#line 5299 
  bnx2_clear_ring_states(bp);
  
#line 5301 
  writel(0U,(void volatile *)(bp->regview + 19484U));
  
#line 5302 
  i = 0;
  
#line 5302 
  goto ldv_58012;
  ldv_58011: 
#line 5303 
  ;
  
#line 5303 
  bnx2_init_tx_ring(bp,i);
  
#line 5302 
  i += 1;
  ldv_58012: 
#line 5303 
  ;
  
#line 5302 
  if ((int)bp->num_tx_rings > i) 
#line 5304 
                                 goto ldv_58011; else 
#line 5307 
                                                      goto ldv_58013;
  ldv_58013: 
#line 5308 
  ;
  
#line 5305 
  if ((unsigned int)bp->num_tx_rings > 1U) 
#line 5306 
                                           writel((unsigned int)((((int)bp->num_tx_rings + -1) << 24) | 4096),(void volatile *)(bp->regview + 19484U)); else ;
  
#line 5309 
  writel(0U,(void volatile *)(bp->regview + 8220U));
  
#line 5310 
  bnx2_reg_wr_ind(bp,917560U,0U);
  
#line 5312 
  i = 0;
  
#line 5312 
  goto ldv_58015;
  ldv_58014: 
#line 5313 
  ;
  
#line 5313 
  bnx2_init_rx_ring(bp,i);
  
#line 5312 
  i += 1;
  ldv_58015: 
#line 5313 
  ;
  
#line 5312 
  if ((int)bp->num_rx_rings > i) 
#line 5314 
                                 goto ldv_58014; else 
#line 5317 
                                                      goto ldv_58016;
  ldv_58016: 
#line 5318 
  ;
  
#line 5315 
  if ((unsigned int)bp->num_rx_rings > 1U) {
    
#line 5316 
    u32 tbl_32 = 0U;
    
#line 5318 
    i = 0;
    
#line 5318 
    goto ldv_58020;
    ldv_58019: 
#line 5319 
    ;
    {
      
#line 5319 
      int shift = i % 8 << 2;
      
#line 5321 
      tbl_32 = (unsigned int)(i % ((int)bp->num_rx_rings + -1) << shift) | tbl_32;
      
#line 5322 
      if (i % 8 == 7) {
        
#line 5323 
        writel(tbl_32,(void volatile *)(bp->regview + 8268U));
        
#line 5324 
        writel((unsigned int)((i >> 3) | 122864),(void volatile *)(bp->regview + 8264U));
        
#line 5328 
        tbl_32 = 0U;
      }
      else ;
    }
    
#line 5318 
    i += 1;
    ldv_58020: 
#line 5319 
    ;
    
#line 5318 
    if (i <= 127) 
#line 5320 
                  goto ldv_58019; else 
#line 5323 
                                       goto ldv_58021;
    ldv_58021: 
#line 5324 
    ;
    
#line 5332 
    val = 5U;
    
#line 5335 
    writel(val,(void volatile *)(bp->regview + 8220U));
  }
  else ;
  
#line 5337 
  return;
}


#line 5340  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u32 bnx2_find_max_ring(u32 ring_size, u32 max_size)
{
  u32 max;
  
#line 5342 
  u32 num_rings = 1U;
  
#line 5344 
  goto ldv_58029;
  ldv_58028: 
#line 5345 
  ;
  
#line 5345 
  ring_size += 4294967041U;
  
#line 5346 
  num_rings += 1U;
  ldv_58029: 
#line 5347 
  ;
  
#line 5344 
  if (ring_size > 255U) 
#line 5346 
                        goto ldv_58028; else 
#line 5349 
                                             goto ldv_58030;
  ldv_58030: 
#line 5350 
  ;
  
#line 5349 
  max = max_size;
  
#line 5350 
  goto ldv_58032;
  ldv_58031: 
#line 5351 
  ;
  
#line 5351 
  max >>= 1;
  ldv_58032: 
#line 5352 
  ;
  
#line 5350 
  if ((max & num_rings) == 0U) 
#line 5352 
                               goto ldv_58031; else 
#line 5355 
                                                    goto ldv_58033;
  ldv_58033: 
#line 5356 
  ;
  
#line 5353 
  if (num_rings != max) 
#line 5354 
                        max <<= 1; else ;
  
#line 5356 
  return max;
}


#line 5360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_set_rx_ring_size(struct bnx2 *bp, u32 size)
{
  u32 rx_size;
  u32 rx_space;
  u32 jumbo_size;
  int tmp_0;
  int tmp_3;
  u32 tmp_4;
  
#line 5365 
  rx_size = (bp->dev)->mtu + 40U;
  {
    int tmp;
    
#line 5367 
    int _max1 = 32;
    
#line 5367 
    int _max2 = 64;
    
#line 5367 
    if (_max1 > _max2) 
#line 5367 
                       tmp = _max1; else 
#line 5367 
                                         tmp = _max2;
    
#line 5367 
    tmp_0 = tmp;
  }
  
#line 5367 
  rx_space = (((rx_size + 79U) & 4294967232U) + (unsigned int)tmp_0) + 320U;
  
#line 5370 
  bp->rx_copy_thresh = 128U;
  
#line 5371 
  bp->rx_pg_ring_size = 0;
  
#line 5372 
  bp->rx_max_pg_ring = 0;
  
#line 5373 
  bp->rx_max_pg_ring_idx = 0U;
  
#line 5374 
  if (rx_space > 4096U && (bp->flags & 2048U) == 0U) {
    u32 tmp_1;
    
#line 5375 
    int pages = (int)(((bp->dev)->mtu + 4055U) >> 12);
    
#line 5377 
    jumbo_size = size * (unsigned int)pages;
    
#line 5378 
    if (jumbo_size > 8160U) 
#line 5379 
                            jumbo_size = 8160U; else ;
    
#line 5381 
    bp->rx_pg_ring_size = (int)jumbo_size;
    
#line 5382 
    tmp_1 = bnx2_find_max_ring(jumbo_size,32U);
    
#line 5382 
    bp->rx_max_pg_ring = (int)tmp_1;
    
#line 5384 
    bp->rx_max_pg_ring_idx = (unsigned int)((unsigned long)bp->rx_max_pg_ring) * 256U + 4294967295U;
    
#line 5386 
    rx_size = 146U;
    
#line 5387 
    bp->rx_copy_thresh = 0U;
  }
  else ;
  
#line 5390 
  bp->rx_buf_use_size = rx_size;
  {
    int tmp_2;
    
#line 5393 
    int _max1_0 = 32;
    
#line 5393 
    int _max2_0 = 64;
    
#line 5393 
    if (_max1_0 > _max2_0) 
#line 5393 
                           tmp_2 = _max1_0; else 
#line 5393 
                                                 tmp_2 = _max2_0;
    
#line 5393 
    tmp_3 = tmp_2;
  }
  
#line 5392 
  bp->rx_buf_size = (((bp->rx_buf_use_size + 79U) & 4294967232U) + (unsigned int)tmp_3) + 320U;
  
#line 5394 
  bp->rx_jumbo_thresh = rx_size + 4294967278U;
  
#line 5395 
  bp->rx_ring_size = (int)size;
  
#line 5396 
  tmp_4 = bnx2_find_max_ring(size,8U);
  
#line 5396 
  bp->rx_max_ring = (int)tmp_4;
  
#line 5397 
  bp->rx_max_ring_idx = (unsigned int)((unsigned long)bp->rx_max_ring) * 256U + 4294967295U;
  
#line 5398 
  return;
}


#line 5401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_tx_skbs(struct bnx2 *bp)
{
  int i;
  
#line 5405 
  i = 0;
  
#line 5405 
  goto ldv_58067;
  ldv_58066: 
#line 5406 
  ;
  {
    int j;
    struct netdev_queue *tmp_2;
    
#line 5406 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 5407 
    struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
    
#line 5410 
    if (txr->tx_buf_ring == (struct bnx2_sw_tx_bd *)0) 
#line 5411 
                                                       goto ldv_58055; else ;
    
#line 5413 
    j = 0;
    
#line 5413 
    goto ldv_58060;
    ldv_58064: 
#line 5414 
    ;
    {
      int k;
      int last;
      unsigned int tmp;
      unsigned int tmp_1;
      unsigned char *tmp_0;
      
#line 5414 
      struct bnx2_sw_tx_bd *tx_buf = txr->tx_buf_ring + j;
      
#line 5415 
      struct sk_buff *skb = tx_buf->skb;
      
#line 5418 
      if (skb == (struct sk_buff *)0) {
        
#line 5419 
        if (((unsigned long)j & 254UL) == 254UL) 
#line 5419 
                                                 j += 2; else 
#line 5419 
                                                              j += 1;
        
#line 5420 
        goto ldv_58060;
      }
      else ;
      
#line 5423 
      tmp = skb_headlen((struct sk_buff const *)skb);
      
#line 5423 
      ;
      
#line 5423 
      ;
      
#line 5423 
      dma_unmap_single_attrs(& (bp->pdev)->dev,tx_buf->mapping,(unsigned long)tmp,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
      
#line 5428 
      tx_buf->skb = (struct sk_buff *)0;
      
#line 5430 
      last = (int)tx_buf->nr_frags;
      
#line 5431 
      if (((unsigned long)j & 254UL) == 254UL) 
#line 5431 
                                               j += 2; else 
#line 5431 
                                                            j += 1;
      
#line 5432 
      k = 0;
      
#line 5432 
      goto ldv_58062;
      ldv_58061: 
#line 5433 
      ;
      
#line 5433 
      tx_buf = txr->tx_buf_ring + ((unsigned int)j & 255U);
      
#line 5436 
      tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 5436 
      tmp_1 = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_0)->frags[k]));
      
#line 5434 
      ;
      
#line 5434 
      ;
      
#line 5434 
      dma_unmap_page(& (bp->pdev)->dev,tx_buf->mapping,(unsigned long)tmp_1,(enum dma_data_direction)DMA_TO_DEVICE);
      
#line 5432 
      k += 1;
      
#line 5432 
      if (((unsigned long)j & 254UL) == 254UL) 
#line 5432 
                                               j += 2; else 
#line 5432 
                                                            j += 1;
      ldv_58062: 
#line 5433 
      ;
      
#line 5432 
      if (k < last) 
#line 5434 
                    goto ldv_58061; else 
#line 5437 
                                         goto ldv_58063;
      ldv_58063: 
#line 5438 
      ;
      
#line 5439 
      consume_skb(skb);
    }
    ldv_58060: 
#line 5441 
    ;
    
#line 5413 
    if ((unsigned int)j <= 255U) 
#line 5415 
                                 goto ldv_58064; else 
#line 5418 
                                                      goto ldv_58065;
    ldv_58065: 
#line 5419 
    ;
    
#line 5441 
    tmp_2 = netdev_get_tx_queue((struct net_device const *)bp->dev,(unsigned int)i);
    
#line 5441 
    netdev_tx_reset_queue(tmp_2);
  }
  ldv_58055: 
#line 5443 
  ;
  
#line 5405 
  i += 1;
  ldv_58067: 
#line 5406 
  ;
  
#line 5405 
  if ((int)bp->num_tx_rings > i) 
#line 5407 
                                 goto ldv_58066; else 
#line 5410 
                                                      goto ldv_58068;
  ldv_58068: 
#line 5411 
  ;
  
#line 5412 
  return;
}


#line 5446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_rx_skbs(struct bnx2 *bp)
{
  int i;
  
#line 5450 
  i = 0;
  
#line 5450 
  goto ldv_58086;
  ldv_58085: 
#line 5451 
  ;
  {
    int j;
    
#line 5451 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 5452 
    struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
    
#line 5455 
    if (rxr->rx_buf_ring == (struct bnx2_sw_bd *)0) 
#line 5456 
                                                    goto return_label; else ;
    
#line 5458 
    j = 0;
    
#line 5458 
    goto ldv_58080;
    ldv_58079: 
#line 5459 
    ;
    {
      
#line 5459 
      struct bnx2_sw_bd *rx_buf = rxr->rx_buf_ring + j;
      
#line 5460 
      u8 *data = rx_buf->data;
      
#line 5462 
      if (data == (u8 *)0U) 
#line 5463 
                            goto ldv_58078; else ;
      
#line 5465 
      dma_unmap_single_attrs(& (bp->pdev)->dev,rx_buf->mapping,(unsigned long)bp->rx_buf_use_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
      
#line 5470 
      rx_buf->data = (u8 *)0U;
      
#line 5472 
      kfree((void const *)data);
    }
    ldv_58078: 
#line 5474 
    ;
    
#line 5458 
    j += 1;
    ldv_58080: 
#line 5459 
    ;
    
#line 5458 
    if (bp->rx_max_ring_idx > (unsigned int)j) 
#line 5460 
                                               goto ldv_58079; else 
#line 5463 
                                                                    goto ldv_58081;
    ldv_58081: 
#line 5464 
    ;
    
#line 5474 
    j = 0;
    
#line 5474 
    goto ldv_58083;
    ldv_58082: 
#line 5475 
    ;
    
#line 5475 
    bnx2_free_rx_page(bp,rxr,(unsigned short)((int)((unsigned short)j)));
    
#line 5474 
    j += 1;
    ldv_58083: 
#line 5475 
    ;
    
#line 5474 
    if (bp->rx_max_pg_ring_idx > (unsigned int)j) 
#line 5476 
                                                  goto ldv_58082; else 
                                                                    
#line 5479 
                                                                    goto ldv_58084;
    ldv_58084: 
#line 5480 
    ;
  }
  
#line 5450 
  i += 1;
  ldv_58086: 
#line 5451 
  ;
  
#line 5450 
  if ((int)bp->num_rx_rings > i) 
#line 5452 
                                 goto ldv_58085; else 
#line 5455 
                                                      goto ldv_58087;
  ldv_58087: 
#line 5456 
  ;
  return_label: 
#line 5457 
                return;
}


#line 5480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_skbs(struct bnx2 *bp)
{
  
#line 5482 
  bnx2_free_tx_skbs(bp);
  
#line 5483 
  bnx2_free_rx_skbs(bp);
  
#line 5484 
  return;
}


#line 5487  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_reset_nic(struct bnx2 *bp, u32 reset_code)
{
  int __retres;
  int rc;
  
#line 5491 
  rc = bnx2_reset_chip(bp,reset_code);
  
#line 5492 
  bnx2_free_skbs(bp);
  
#line 5493 
  if (rc != 0) {
    
#line 5494 
    __retres = rc;
    
#line 5494 
    goto return_label;
  }
  else ;
  
#line 5496 
  rc = bnx2_init_chip(bp);
  
#line 5496 
  if (rc != 0) {
    
#line 5497 
    __retres = rc;
    
#line 5497 
    goto return_label;
  }
  else ;
  
#line 5499 
  bnx2_init_all_rings(bp);
  
#line 5500 
  __retres = 0;
  return_label: 
#line 5500 
                return __retres;
}


#line 5504  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_nic(struct bnx2 *bp, int reset_phy)
{
  int __retres;
  int rc;
  
#line 5508 
  rc = bnx2_reset_nic(bp,16777216U);
  
#line 5508 
  if (rc != 0) {
    
#line 5509 
    __retres = rc;
    
#line 5509 
    goto return_label;
  }
  else ;
  
#line 5511 
  ldv_spin_lock_bh_106(& bp->phy_lock);
  
#line 5512 
  bnx2_init_phy(bp,reset_phy);
  
#line 5513 
  bnx2_set_link(bp);
  
#line 5514 
  if ((bp->phy_flags & 2048U) != 0U) 
#line 5515 
                                     bnx2_remote_phy_event(bp); else ;
  
#line 5516 
  ldv_spin_unlock_bh_107(& bp->phy_lock);
  
#line 5517 
  __retres = 0;
  return_label: 
#line 5517 
                return __retres;
}


#line 5521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_shutdown_chip(struct bnx2 *bp)
{
  u32 reset_code;
  int tmp;
  
#line 5525 
  if ((bp->flags & 8U) != 0U) 
#line 5526 
                              reset_code = 184549376U;
  else 
    
#line 5527 
    if ((unsigned int)bp->wol != 0U) 
#line 5528 
                                     reset_code = 67108864U; else 
#line 5530 
                                                                  reset_code = 150994944U;
  
#line 5532 
  tmp = bnx2_reset_chip(bp,reset_code);
  
#line 5532 
  return tmp;
}


#line 5536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_registers(struct bnx2 *bp)
{
  int ret;
  int i;
  int is_5709;
  
#line 5546 
  struct __anonstruct_reg_tbl_397 const reg_tbl[93U] = {{.offset = (unsigned short)108U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 63U}, {.offset = (unsigned short)144U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)148U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 0U}, {.offset = (unsigned short)1028U, .flags = (unsigned short)1U, .rw_mask = 16128U, .ro_mask = 0U}, {.offset = (unsigned short)1048U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)1052U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)1056U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 2164260863U}, {.offset = (unsigned short)1060U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 0U}, {.offset = (unsigned short)1064U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)1104U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 65535U}, {.offset = (unsigned short)1108U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)1112U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)2056U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)2132U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)2152U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 2004318071U}, {.offset = (unsigned short)2156U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 2004318071U}, {.offset = (unsigned short)2160U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 2004318071U}, {.offset = (unsigned short)2164U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 2004318071U}, {.offset = (unsigned short)3072U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)3076U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 67043329U}, {.offset = (unsigned short)3080U, .flags = (unsigned short)1U, .rw_mask = 252702835U, .ro_mask = 0U}, {.offset = (unsigned short)4096U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)4100U, .flags = (unsigned short)1U, .rw_mask = 0U, .ro_mask = 983041U}, {.offset = (unsigned short)5128U, .flags = (unsigned short)0U, .rw_mask = 29362176U, .ro_mask = 0U}, {.offset = (unsigned short)5276U, .flags = (unsigned short)0U, .rw_mask = 2147549183U, .ro_mask = 0U}, {.offset = (unsigned short)5288U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 511U}, {.offset = (unsigned short)5292U, .flags = (unsigned short)0U, .rw_mask = 268435455U, .ro_mask = 268435456U}, {.offset = (unsigned short)5296U, .flags = (unsigned short)0U, .rw_mask = 2U, .ro_mask = 1U}, {.offset = (unsigned short)5304U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 0U}, {.offset = (unsigned short)5312U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 9U}, {.offset = (unsigned short)5316U, .flags = (unsigned short)0U, .rw_mask = 16383U, .ro_mask = 0U}, {.offset = (unsigned short)5324U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)5328U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)6144U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)6148U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 3U}, {.offset = (unsigned short)10240U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)10244U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 16129U}, {.offset = (unsigned short)10248U, .flags = (unsigned short)0U, .rw_mask = 255803139U, .ro_mask = 0U}, {.offset = (unsigned short)10256U, .flags = (unsigned short)0U, .rw_mask = 4294901760U, .ro_mask = 0U}, {.offset = (unsigned short)10260U, .flags = (unsigned short)0U, .rw_mask = 4294901760U, .ro_mask = 0U}, {.offset = (unsigned short)10264U, .flags = (unsigned short)0U, .rw_mask = 4294901760U, .ro_mask = 0U}, {.offset = (unsigned short)10268U, .flags = (unsigned short)0U, .rw_mask = 4294901760U, .ro_mask = 0U}, {.offset = (unsigned short)10292U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)10304U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)10308U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)10312U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)10316U, .flags = (unsigned short)0U, .rw_mask = 4160813056U, .ro_mask = 134154239U}, {.offset = (unsigned short)11264U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 17U}, {.offset = (unsigned short)11268U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 196615U}, {.offset = (unsigned short)15360U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)15364U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 458752U}, {.offset = (unsigned short)15368U, .flags = (unsigned short)0U, .rw_mask = 32625U, .ro_mask = 133169152U}, {.offset = (unsigned short)15372U, .flags = (unsigned short)0U, .rw_mask = 524287996U, .ro_mask = 0U}, {.offset = (unsigned short)15376U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)15380U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)15384U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)15388U, .flags = (unsigned short)0U, .rw_mask = 4294963200U, .ro_mask = 0U}, {.offset = (unsigned short)15392U, .flags = (unsigned short)0U, .rw_mask = 4294967040U, .ro_mask = 0U}, {.offset = (unsigned short)20484U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 127U}, {.offset = (unsigned short)20488U, .flags = (unsigned short)0U, .rw_mask = 251660287U, .ro_mask = 0U}, {.offset = (unsigned short)23552U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 1U}, {.offset = (unsigned short)23556U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 196623U}, {.offset = (unsigned short)23560U, .flags = (unsigned short)0U, .rw_mask = 3U, .ro_mask = 0U}, {.offset = (unsigned short)23564U, .flags = (unsigned short)0U, .rw_mask = 65528U, .ro_mask = 0U}, {.offset = (unsigned short)23568U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 4294967295U}, {.offset = (unsigned short)23680U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 259068913U}, {.offset = (unsigned short)23684U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 62259U}, {.offset = (unsigned short)23688U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 488307U}, {.offset = (unsigned short)23692U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 522039U}, {.offset = (unsigned short)26632U, .flags = (unsigned short)0U, .rw_mask = 65407U, .ro_mask = 0U}, {.offset = (unsigned short)26636U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)26640U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)26644U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)26648U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)26652U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)26656U, .flags = (unsigned short)0U, .rw_mask = 16711935U, .ro_mask = 0U}, {.offset = (unsigned short)26660U, .flags = (unsigned short)0U, .rw_mask = 16711935U, .ro_mask = 0U}, {.offset = (unsigned short)26664U, .flags = (unsigned short)0U, .rw_mask = 16711935U, .ro_mask = 0U}, {.offset = (unsigned short)26668U, .flags = (unsigned short)0U, .rw_mask = 67044351U, .ro_mask = 0U}, {.offset = (unsigned short)26672U, .flags = (unsigned short)0U, .rw_mask = 67044351U, .ro_mask = 0U}, {.offset = (unsigned short)26676U, .flags = (unsigned short)0U, .rw_mask = 67044351U, .ro_mask = 0U}, {.offset = (unsigned short)26680U, .flags = (unsigned short)0U, .rw_mask = 67044351U, .ro_mask = 0U}, {.offset = (unsigned short)26684U, .flags = (unsigned short)0U, .rw_mask = 65535U, .ro_mask = 0U}, {.offset = (unsigned short)26688U, .flags = (unsigned short)0U, .rw_mask = 4080U, .ro_mask = 0U}, {.offset = (unsigned short)26692U, .flags = (unsigned short)0U, .rw_mask = 16776960U, .ro_mask = 0U}, {.offset = (unsigned short)26700U, .flags = (unsigned short)0U, .rw_mask = 4294967295U, .ro_mask = 0U}, {.offset = (unsigned short)26704U, .flags = (unsigned short)0U, .rw_mask = 2139062143U, .ro_mask = 0U}, {.offset = (unsigned short)26708U, .flags = (unsigned short)0U, .rw_mask = 2139062143U, .ro_mask = 0U}, {.offset = (unsigned short)26712U, .flags = (unsigned short)0U, .rw_mask = 2139062143U, .ro_mask = 0U}, {.offset = (unsigned short)26716U, .flags = (unsigned short)0U, .rw_mask = 2139062143U, .ro_mask = 0U}, {.offset = (unsigned short)26888U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 130831U}, {.offset = (unsigned short)26892U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 268304624U}, {.offset = (unsigned short)65535U, .flags = (unsigned short)0U, .rw_mask = 0U, .ro_mask = 0U}};
  
#line 5655 
  ret = 0;
  
#line 5656 
  is_5709 = 0;
  
#line 5657 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 5658 
                                                  is_5709 = 1; else ;
  
#line 5660 
  i = 0;
  
#line 5660 
  goto ldv_58127;
  ldv_58126: 
#line 5661 
  ;
  {
    u32 offset;
    u32 rw_mask;
    u32 ro_mask;
    u32 save_val;
    u32 val;
    
#line 5662 
    u16 flags = reg_tbl[i].flags;
    
#line 5664 
    if (is_5709 != 0 && ((int)flags & 1) != 0) 
#line 5665 
                                               goto ldv_58123; else ;
    
#line 5667 
    offset = (unsigned int)reg_tbl[i].offset;
    
#line 5668 
    rw_mask = reg_tbl[i].rw_mask;
    
#line 5669 
    ro_mask = reg_tbl[i].ro_mask;
    
#line 5671 
    save_val = readl((void const volatile *)(bp->regview + offset));
    
#line 5673 
    writel(0U,(void volatile *)(bp->regview + offset));
    
#line 5675 
    val = readl((void const volatile *)(bp->regview + offset));
    
#line 5676 
    if ((val & rw_mask) != 0U) 
#line 5677 
                               goto reg_test_err; else ;
    
#line 5680 
    if (((val ^ save_val) & ro_mask) != 0U) 
#line 5681 
                                            goto reg_test_err; else ;
    
#line 5684 
    writel(4294967295U,(void volatile *)(bp->regview + offset));
    
#line 5686 
    val = readl((void const volatile *)(bp->regview + offset));
    
#line 5687 
    if ((val & rw_mask) != rw_mask) 
#line 5688 
                                    goto reg_test_err; else ;
    
#line 5691 
    if (((val ^ save_val) & ro_mask) != 0U) 
#line 5692 
                                            goto reg_test_err; else ;
    
#line 5695 
    writel(save_val,(void volatile *)(bp->regview + offset));
    
#line 5696 
    goto ldv_58123;
    reg_test_err: 
#line 5698 
    ;
    
#line 5699 
    writel(save_val,(void volatile *)(bp->regview + offset));
    
#line 5700 
    ret = -19;
    
#line 5701 
    goto ldv_58125;
  }
  ldv_58123: 
#line 5703 
  ;
  
#line 5660 
  i += 1;
  ldv_58127: 
#line 5661 
  ;
  
#line 5660 
  if ((unsigned int)reg_tbl[i].offset != 65535U) 
#line 5662 
                                                 goto ldv_58126; else 
                                                                   
#line 5665 
                                                                   goto ldv_58125;
  ldv_58125: 
#line 5666 
  ;
  
#line 5703 
  return ret;
}


#line 5707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_do_mem_test(struct bnx2 *bp, u32 start, u32 size)
{
  int __retres;
  int i;
  
#line 5709 
  u32 const test_pattern[6U] = {0U, 4294967295U, 1431655765U, 2863311530U, 2857740885U, 1437226410U};
  
#line 5713 
  i = 0;
  
#line 5713 
  goto ldv_58140;
  ldv_58139: 
#line 5714 
  ;
  {
    u32 offset;
    u32 tmp;
    
#line 5716 
    offset = 0U;
    
#line 5716 
    goto ldv_58137;
    ldv_58136: 
#line 5717 
    ;
    
#line 5718 
    bnx2_reg_wr_ind(bp,start + offset,test_pattern[i]);
    
#line 5720 
    tmp = bnx2_reg_rd_ind(bp,start + offset);
    
#line 5720 
    ;
    
#line 5720 
    if (tmp != test_pattern[i]) {
      
#line 5722 
      __retres = -19;
      
#line 5722 
      goto return_label;
    }
    else ;
    
#line 5716 
    offset += 4U;
    ldv_58137: 
#line 5717 
    ;
    
#line 5716 
    if (offset < size) 
#line 5718 
                       goto ldv_58136; else 
#line 5721 
                                            goto ldv_58138;
    ldv_58138: 
#line 5722 
    ;
  }
  
#line 5713 
  i += 1;
  ldv_58140: 
#line 5714 
  ;
  
#line 5713 
  if ((unsigned int)i <= 5U) 
#line 5715 
                             goto ldv_58139; else 
#line 5718 
                                                  goto ldv_58141;
  ldv_58141: 
#line 5719 
  ;
  
#line 5726 
  __retres = 0;
  return_label: 
#line 5726 
                return __retres;
}


#line 5730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_memory(struct bnx2 *bp)
{
  int __retres;
  int i;
  struct mem_entry *mem_tbl;
  
#line 5732 
  int ret = 0;
  
#line 5737 
  struct mem_entry mem_tbl_5706[7U] = {{.offset = 393216U, .len = 16384U}, {.offset = 655360U, .len = 12288U}, {.offset = 917504U, .len = 16384U}, {.offset = 1179648U, .len = 16384U}, {.offset = 1703936U, .len = 16384U}, {.offset = 1441792U, .len = 16384U}, {.offset = 4294967295U, .len = 0U}};
  
#line 5746 
  struct mem_entry mem_tbl_5709[6U] = {{.offset = 393216U, .len = 16384U}, {.offset = 655360U, .len = 12288U}, {.offset = 917504U, .len = 16384U}, {.offset = 1179648U, .len = 16384U}, {.offset = 1703936U, .len = 16384U}, {.offset = 4294967295U, .len = 0U}};
  
#line 5756 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 5757 
                                                  mem_tbl = (struct mem_entry *)(& mem_tbl_5709); else 
                                                                    
#line 5759 
                                                                    mem_tbl = (struct mem_entry *)(& mem_tbl_5706);
  
#line 5761 
  i = 0;
  
#line 5761 
  goto ldv_58154;
  ldv_58153: 
#line 5762 
  ;
  
#line 5762 
  ret = bnx2_do_mem_test(bp,(mem_tbl + i)->offset,(mem_tbl + i)->len);
  
#line 5762 
  if (ret != 0) {
    
#line 5764 
    __retres = ret;
    
#line 5764 
    goto return_label;
  }
  else ;
  
#line 5761 
  i += 1;
  ldv_58154: 
#line 5762 
  ;
  
#line 5761 
  if ((mem_tbl + i)->offset != 4294967295U) 
#line 5763 
                                            goto ldv_58153; else 
#line 5766 
                                                                 goto ldv_58155;
  ldv_58155: 
#line 5767 
  ;
  
#line 5768 
  __retres = ret;
  return_label: 
#line 5768 
                return __retres;
}


#line 5775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_run_loopback(struct bnx2 *bp, int loopback_mode)
{
  int __retres;
  unsigned int pkt_size;
  unsigned int num_pkts;
  unsigned int i;
  struct sk_buff *skb;
  u8 *data;
  unsigned char *packet;
  u16 rx_start_idx;
  u16 rx_idx;
  dma_addr_t map;
  struct bnx2_tx_bd *txbd;
  struct bnx2_sw_bd *rx_buf;
  struct l2_fhdr *rx_hdr;
  struct bnx2_napi *tx_napi;
  unsigned int tmp_0;
  int tmp_1;
  u16 tmp_2;
  
#line 5786 
  int ret = -19;
  
#line 5787 
  struct bnx2_napi *bnapi = & bp->bnx2_napi[0];
  
#line 5788 
  struct bnx2_tx_ring_info *txr = & bnapi->tx_ring;
  
#line 5789 
  struct bnx2_rx_ring_info *rxr = & bnapi->rx_ring;
  
#line 5791 
  tx_napi = bnapi;
  
#line 5793 
  txr = & tx_napi->tx_ring;
  
#line 5794 
  rxr = & bnapi->rx_ring;
  
#line 5795 
  if (loopback_mode == 0) {
    
#line 5796 
    bp->loopback = (unsigned char)1U;
    
#line 5797 
    bnx2_set_mac_loopback(bp);
  }
  else 
    
#line 5799 
    if (loopback_mode == 1) {
      
#line 5800 
      if ((bp->phy_flags & 2048U) != 0U) {
        
#line 5801 
        __retres = 0;
        
#line 5801 
        goto return_label;
      }
      else ;
      
#line 5803 
      bp->loopback = (unsigned char)2U;
      
#line 5804 
      bnx2_set_phy_loopback(bp);
    }
    else {
      
#line 5807 
      __retres = -22;
      
#line 5807 
      goto return_label;
    }
  {
    unsigned int tmp;
    
#line 5809 
    unsigned int _min1 = (bp->dev)->mtu + 14U;
    
#line 5809 
    u32 _min2 = bp->rx_jumbo_thresh + 4294967292U;
    
#line 5809 
    if (_min1 < _min2) 
#line 5809 
                       tmp = _min1; else 
#line 5809 
                                         tmp = _min2;
    
#line 5809 
    tmp_0 = tmp;
  }
  
#line 5809 
  pkt_size = tmp_0;
  
#line 5810 
  skb = netdev_alloc_skb(bp->dev,pkt_size);
  
#line 5811 
  if (skb == (struct sk_buff *)0) {
    
#line 5812 
    __retres = -12;
    
#line 5812 
    goto return_label;
  }
  else ;
  
#line 5813 
  packet = skb_put(skb,pkt_size);
  
#line 5814 
  memcpy((void *)packet,(void const *)(bp->dev)->dev_addr,6UL);
  
#line 5815 
  memset((void *)(packet + 6U),0,8UL);
  
#line 5816 
  i = 14U;
  
#line 5816 
  goto ldv_58181;
  ldv_58180: 
#line 5817 
  ;
  
#line 5817 
  *(packet + i) = (unsigned char)i;
  
#line 5816 
  i += 1U;
  ldv_58181: 
#line 5817 
  ;
  
#line 5816 
  if (i < pkt_size) 
#line 5818 
                    goto ldv_58180; else 
#line 5821 
                                         goto ldv_58182;
  ldv_58182: 
#line 5822 
  ;
  
#line 5819 
  map = dma_map_single_attrs(& (bp->pdev)->dev,(void *)skb->data,(unsigned long)pkt_size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 5821 
  tmp_1 = dma_mapping_error(& (bp->pdev)->dev,map);
  
#line 5821 
  if (tmp_1 != 0) {
    
#line 5822 
    consume_skb(skb);
    
#line 5823 
    __retres = -5;
    
#line 5823 
    goto return_label;
  }
  else ;
  
#line 5826 
  writel(bp->hc_cmd | 131072U,(void volatile *)(bp->regview + 26624U));
  
#line 5829 
  readl((void const volatile *)(bp->regview + 26624U));
  
#line 5831 
  __const_udelay(21475UL);
  
#line 5832 
  rx_start_idx = bnx2_get_hw_rx_cons(bnapi);
  
#line 5834 
  num_pkts = 0U;
  
#line 5836 
  txbd = txr->tx_desc_ring + ((unsigned int)txr->tx_prod & 255U);
  
#line 5838 
  txbd->tx_bd_haddr_hi = (unsigned int)(map >> 32);
  
#line 5839 
  txbd->tx_bd_haddr_lo = (unsigned int)map;
  
#line 5840 
  txbd->tx_bd_mss_nbytes = pkt_size;
  
#line 5841 
  txbd->tx_bd_vlan_tag_flags = 192U;
  
#line 5843 
  num_pkts += 1U;
  
#line 5844 
  if (((unsigned long)txr->tx_prod & 254UL) == 254UL) 
#line 5844 
                                                      txr->tx_prod = (unsigned short)((unsigned int)txr->tx_prod + 2U); else 
                                                                    
#line 5844 
                                                                    txr->tx_prod = (unsigned short)((unsigned int)txr->tx_prod + 1U);
  
#line 5845 
  txr->tx_prod_bseq += pkt_size;
  
#line 5847 
  writew((unsigned short)((int)txr->tx_prod),(void volatile *)(bp->regview + txr->tx_bidx_addr));
  
#line 5848 
  writel(txr->tx_prod_bseq,(void volatile *)(bp->regview + txr->tx_bseq_addr));
  
#line 5850 
  __const_udelay(429500UL);
  
#line 5852 
  writel(bp->hc_cmd | 131072U,(void volatile *)(bp->regview + 26624U));
  
#line 5855 
  readl((void const volatile *)(bp->regview + 26624U));
  
#line 5857 
  __const_udelay(21475UL);
  
#line 5859 
  dma_unmap_single_attrs(& (bp->pdev)->dev,map,(unsigned long)pkt_size,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 5860 
  consume_skb(skb);
  
#line 5862 
  tmp_2 = bnx2_get_hw_tx_cons(tx_napi);
  
#line 5862 
  ;
  
#line 5862 
  if ((int)tmp_2 != (int)txr->tx_prod) 
#line 5863 
                                       goto loopback_test_done; else ;
  
#line 5865 
  rx_idx = bnx2_get_hw_rx_cons(bnapi);
  
#line 5866 
  if ((unsigned int)rx_idx != (unsigned int)rx_start_idx + num_pkts) 
    
#line 5867 
    goto loopback_test_done; else ;
  
#line 5870 
  rx_buf = rxr->rx_buf_ring + (int)rx_start_idx;
  
#line 5871 
  data = rx_buf->data;
  
#line 5873 
  rx_hdr = get_l2_fhdr(data);
  
#line 5874 
  data = (u8 *)rx_hdr + 18U;
  
#line 5876 
  dma_sync_single_for_cpu(& (bp->pdev)->dev,rx_buf->mapping,(unsigned long)bp->rx_buf_use_size,(enum dma_data_direction)DMA_FROM_DEVICE);
  
#line 5880 
  if ((rx_hdr->l2_fhdr_status & 4063232U) != 0U) 
#line 5887 
                                                 goto loopback_test_done; else ;
  
#line 5890 
  if ((unsigned int)((int)rx_hdr->l2_fhdr_pkt_len + -4) != pkt_size) 
    
#line 5891 
    goto loopback_test_done; else ;
  
#line 5894 
  i = 14U;
  
#line 5894 
  goto ldv_58185;
  ldv_58184: 
#line 5895 
  ;
  
#line 5895 
  if ((int)*(data + i) != (int)((unsigned char)i)) 
#line 5896 
                                                   goto loopback_test_done; else ;
  
#line 5894 
  i += 1U;
  ldv_58185: 
#line 5895 
  ;
  
#line 5894 
  if (i < pkt_size) 
#line 5896 
                    goto ldv_58184; else 
#line 5899 
                                         goto ldv_58186;
  ldv_58186: 
#line 5900 
  ;
  
#line 5900 
  ret = 0;
  loopback_test_done: 
#line 5902 
  ;
  
#line 5903 
  bp->loopback = (unsigned char)0U;
  
#line 5904 
  __retres = ret;
  return_label: 
#line 5904 
                return __retres;
}


#line 5913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_loopback(struct bnx2 *bp)
{
  int __retres;
  int tmp_0;
  bool tmp;
  int tmp_1;
  int tmp_2;
  
#line 5915 
  int rc = 0;
  
#line 5917 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 5917 
  if (tmp) 
#line 5917 
           tmp_0 = 0; else 
#line 5917 
                           tmp_0 = 1;
  
#line 5917 
  if (tmp_0) {
    
#line 5918 
    __retres = 3;
    
#line 5918 
    goto return_label;
  }
  else ;
  
#line 5920 
  bnx2_reset_nic(bp,16777216U);
  
#line 5921 
  ldv_spin_lock_bh_108(& bp->phy_lock);
  
#line 5922 
  bnx2_init_phy(bp,1);
  
#line 5923 
  ldv_spin_unlock_bh_109(& bp->phy_lock);
  
#line 5924 
  tmp_1 = bnx2_run_loopback(bp,0);
  
#line 5924 
  if (tmp_1 != 0) 
#line 5925 
                  rc |= 1; else ;
  
#line 5926 
  tmp_2 = bnx2_run_loopback(bp,1);
  
#line 5926 
  if (tmp_2 != 0) 
#line 5927 
                  rc |= 2; else ;
  
#line 5928 
  __retres = rc;
  return_label: 
#line 5928 
                return __retres;
}


#line 5935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_nvram(struct bnx2 *bp)
{
  __be32 buf[128U];
  u32 magic;
  u32 csum;
  
#line 5938 
  u8 *data = (u8 *)(& buf);
  
#line 5939 
  int rc = 0;
  
#line 5942 
  rc = bnx2_nvram_read(bp,0U,data,4);
  
#line 5942 
  if (rc != 0) 
#line 5943 
               goto test_nvram_done; else ;
  
#line 5945 
  if (0 != 0) 
#line 5945 
              magic = (((buf[0] << 24) | ((buf[0] << 8) & 16711680U)) | ((buf[0] >> 8) & 65280U)) | (buf[0] >> 24); else 
                                                                    
#line 5945 
                                                                    magic = __fswab32(buf[0]);
  
#line 5946 
  if (magic != 1721324970U) {
    
#line 5947 
    rc = -19;
    
#line 5948 
    goto test_nvram_done;
  }
  else ;
  
#line 5951 
  rc = bnx2_nvram_read(bp,256U,data,512);
  
#line 5951 
  if (rc != 0) 
#line 5952 
               goto test_nvram_done; else ;
  
#line 5954 
  csum = crc32_le(4294967295U,(unsigned char const *)data,256UL);
  
#line 5955 
  if (csum != 3736805603U) {
    
#line 5956 
    rc = -19;
    
#line 5957 
    goto test_nvram_done;
  }
  else ;
  
#line 5960 
  csum = crc32_le(4294967295U,(unsigned char const *)(data + 256U),256UL);
  
#line 5961 
  if (csum != 3736805603U) 
#line 5962 
                           rc = -19; else ;
  test_nvram_done: 
#line 5965 
  ;
  
#line 5966 
  return rc;
}


#line 5970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_link(struct bnx2 *bp)
{
  int __retres;
  u32 bmsr;
  int tmp_0;
  bool tmp;
  
#line 5974 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 5974 
  if (tmp) 
#line 5974 
           tmp_0 = 0; else 
#line 5974 
                           tmp_0 = 1;
  
#line 5974 
  if (tmp_0) {
    
#line 5975 
    __retres = -19;
    
#line 5975 
    goto return_label;
  }
  else ;
  
#line 5977 
  if ((bp->phy_flags & 2048U) != 0U) {
    
#line 5978 
    if ((unsigned int)bp->link_up != 0U) {
      
#line 5979 
      __retres = 0;
      
#line 5979 
      goto return_label;
    }
    else ;
    
#line 5980 
    __retres = -19;
    
#line 5980 
    goto return_label;
  }
  else ;
  
#line 5982 
  ldv_spin_lock_bh_110(& bp->phy_lock);
  
#line 5983 
  bnx2_enable_bmsr1(bp);
  
#line 5984 
  bnx2_read_phy(bp,bp->mii_bmsr1,& bmsr);
  
#line 5985 
  bnx2_read_phy(bp,bp->mii_bmsr1,& bmsr);
  
#line 5986 
  bnx2_disable_bmsr1(bp);
  
#line 5987 
  ldv_spin_unlock_bh_111(& bp->phy_lock);
  
#line 5989 
  if ((bmsr & 4U) != 0U) {
    
#line 5990 
    __retres = 0;
    
#line 5990 
    goto return_label;
  }
  else ;
  
#line 5992 
  __retres = -19;
  return_label: 
#line 5992 
                return __retres;
}


#line 5996  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_test_intr(struct bnx2 *bp)
{
  int __retres;
  int i;
  u16 status_idx;
  int tmp_0;
  bool tmp;
  unsigned int tmp_1;
  unsigned int tmp_2;
  
#line 6001 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 6001 
  if (tmp) 
#line 6001 
           tmp_0 = 0; else 
#line 6001 
                           tmp_0 = 1;
  
#line 6001 
  if (tmp_0) {
    
#line 6002 
    __retres = -19;
    
#line 6002 
    goto return_label;
  }
  else ;
  
#line 6004 
  tmp_1 = readl((void const volatile *)(bp->regview + 132U));
  
#line 6004 
  status_idx = (unsigned short)tmp_1;
  
#line 6007 
  writel(bp->hc_cmd | 65536U,(void volatile *)(bp->regview + 26624U));
  
#line 6008 
  readl((void const volatile *)(bp->regview + 26624U));
  
#line 6010 
  i = 0;
  
#line 6010 
  goto ldv_58211;
  ldv_58210: 
#line 6011 
  ;
  
#line 6011 
  tmp_2 = readl((void const volatile *)(bp->regview + 132U));
  
#line 6011 
  ;
  
#line 6011 
  if ((tmp_2 & 65535U) != (unsigned int)status_idx) 
#line 6014 
                                                    goto ldv_58209; else ;
  
#line 6017 
  msleep_interruptible(10U);
  
#line 6010 
  i += 1;
  ldv_58211: 
#line 6011 
  ;
  
#line 6010 
  if (i <= 9) 
#line 6012 
              goto ldv_58210; else 
#line 6015 
                                   goto ldv_58209;
  ldv_58209: 
#line 6016 
  ;
  
#line 6019 
  if (i <= 9) {
    
#line 6020 
    __retres = 0;
    
#line 6020 
    goto return_label;
  }
  else ;
  
#line 6022 
  __retres = -19;
  return_label: 
#line 6022 
                return __retres;
}


#line 6027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_5706_serdes_has_link(struct bnx2 *bp)
{
  int __retres;
  u32 mode_ctl;
  u32 an_dbg;
  u32 exp;
  
#line 6031 
  if ((bp->phy_flags & 8192U) != 0U) {
    
#line 6032 
    __retres = 0;
    
#line 6032 
    goto return_label;
  }
  else ;
  
#line 6034 
  bnx2_write_phy(bp,28U,31744U);
  
#line 6035 
  bnx2_read_phy(bp,28U,& mode_ctl);
  
#line 6037 
  if ((mode_ctl & 16U) == 0U) {
    
#line 6038 
    __retres = 0;
    
#line 6038 
    goto return_label;
  }
  else ;
  
#line 6040 
  bnx2_write_phy(bp,28U,26624U);
  
#line 6041 
  bnx2_read_phy(bp,28U,& an_dbg);
  
#line 6042 
  bnx2_read_phy(bp,28U,& an_dbg);
  
#line 6044 
  if ((an_dbg & 258U) != 0U) {
    
#line 6045 
    __retres = 0;
    
#line 6045 
    goto return_label;
  }
  else ;
  
#line 6047 
  bnx2_write_phy(bp,23U,3841U);
  
#line 6048 
  bnx2_read_phy(bp,21U,& exp);
  
#line 6049 
  bnx2_read_phy(bp,21U,& exp);
  
#line 6051 
  if ((exp & 32U) != 0U) {
    
#line 6052 
    __retres = 0;
    
#line 6052 
    goto return_label;
  }
  else ;
  
#line 6054 
  __retres = 1;
  return_label: 
#line 6054 
                return __retres;
}


#line 6058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_5706_serdes_timer(struct bnx2 *bp)
{
  
#line 6060 
  int check_link = 1;
  
#line 6062 
  ldv_spin_lock_112(& bp->phy_lock);
  
#line 6063 
  if ((unsigned int)bp->serdes_an_pending != 0U) {
    
#line 6064 
    bp->serdes_an_pending = (u8)((int)bp->serdes_an_pending - 1);
    
#line 6065 
    check_link = 0;
  }
  else 
    
#line 6066 
    if ((unsigned int)bp->link_up == 0U && ((int)bp->autoneg & 1) != 0) {
      u32 bmcr;
      
#line 6069 
      bp->current_interval = 250U;
      
#line 6071 
      bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
      
#line 6073 
      if ((bmcr & 4096U) != 0U) {
        int tmp;
        
#line 6074 
        tmp = bnx2_5706_serdes_has_link(bp);
        
#line 6074 
        if (tmp != 0) {
          
#line 6075 
          bmcr &= 4294963199U;
          
#line 6076 
          bmcr |= 320U;
          
#line 6077 
          bnx2_write_phy(bp,bp->mii_bmcr,bmcr);
          
#line 6078 
          bp->phy_flags |= 4U;
        }
        else ;
      }
      else ;
    }
    else 
      
#line 6082 
      if (((unsigned int)bp->link_up != 0U && ((int)bp->autoneg & 1) != 0) && (bp->phy_flags & 4U) != 0U) {
        u32 phy2;
        
#line 6086 
        bnx2_write_phy(bp,23U,3841U);
        
#line 6087 
        bnx2_read_phy(bp,21U,& phy2);
        
#line 6088 
        if ((phy2 & 32U) != 0U) {
          u32 bmcr_0;
          
#line 6091 
          bnx2_read_phy(bp,bp->mii_bmcr,& bmcr_0);
          
#line 6092 
          bmcr_0 |= 4096U;
          
#line 6093 
          bnx2_write_phy(bp,bp->mii_bmcr,bmcr_0);
          
#line 6095 
          bp->phy_flags &= 4294967291U;
        }
        else ;
      }
      else 
#line 6098 
           bp->current_interval = 250U;
  
#line 6100 
  if (check_link != 0) {
    u32 val;
    
#line 6103 
    bnx2_write_phy(bp,28U,26624U);
    
#line 6104 
    bnx2_read_phy(bp,28U,& val);
    
#line 6105 
    bnx2_read_phy(bp,28U,& val);
    
#line 6107 
    if ((unsigned int)bp->link_up != 0U && (val & 2U) != 0U) 
      
#line 6108 
      if ((bp->phy_flags & 4096U) == 0U) {
        
#line 6109 
        bnx2_5706s_force_link_dn(bp,1);
        
#line 6110 
        bp->phy_flags |= 4096U;
      }
      else 
#line 6112 
           bnx2_set_link(bp);
    else 
      
#line 6113 
      if ((unsigned int)bp->link_up == 0U && (val & 2U) == 0U) 
#line 6114 
                                                               bnx2_set_link(bp); else ;
  }
  else ;
  
#line 6116 
  ldv_spin_unlock_113(& bp->phy_lock);
  
#line 6117 
  return;
}


#line 6120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_5708_serdes_timer(struct bnx2 *bp)
{
  
#line 6122 
  if ((bp->phy_flags & 2048U) != 0U) 
#line 6123 
                                     goto return_label; else ;
  
#line 6125 
  if ((bp->phy_flags & 8U) == 0U) {
    
#line 6126 
    bp->serdes_an_pending = (unsigned char)0U;
    
#line 6127 
    goto return_label;
  }
  else ;
  
#line 6130 
  ldv_spin_lock_114(& bp->phy_lock);
  
#line 6131 
  if ((unsigned int)bp->serdes_an_pending != 0U) 
#line 6132 
                                                 bp->serdes_an_pending = (u8)((int)bp->serdes_an_pending - 1);
  else 
    
#line 6133 
    if ((unsigned int)bp->link_up == 0U && ((int)bp->autoneg & 1) != 0) {
      u32 bmcr;
      
#line 6136 
      bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
      
#line 6137 
      if ((bmcr & 4096U) != 0U) {
        
#line 6138 
        bnx2_enable_forced_2g5(bp);
        
#line 6139 
        bp->current_interval = 25U;
      }
      else {
        
#line 6141 
        bnx2_disable_forced_2g5(bp);
        
#line 6142 
        bp->serdes_an_pending = (unsigned char)2U;
        
#line 6143 
        bp->current_interval = 250U;
      }
    }
    else 
#line 6147 
         bp->current_interval = 250U;
  
#line 6149 
  ldv_spin_unlock_115(& bp->phy_lock);
  return_label: 
#line 6150 
                return;
}


#line 6153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_timer(unsigned long data)
{
  int tmp_0;
  bool tmp;
  int tmp_1;
  
#line 6155 
  struct bnx2 *bp = (struct bnx2 *)data;
  
#line 6157 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 6157 
  if (tmp) 
#line 6157 
           tmp_0 = 0; else 
#line 6157 
                           tmp_0 = 1;
  
#line 6157 
  if (tmp_0) 
#line 6158 
             goto return_label; else ;
  
#line 6160 
  tmp_1 = atomic_read((atomic_t const *)(& bp->intr_sem));
  
#line 6160 
  if (tmp_1 != 0) 
#line 6161 
                  goto bnx2_restart_timer; else ;
  
#line 6163 
  if ((bp->flags & 288U) == 32U) 
#line 6165 
                                 bnx2_chk_missed_msi(bp); else ;
  
#line 6167 
  bnx2_send_heart_beat(bp);
  
#line 6169 
  (bp->stats_blk)->stat_FwRxDrop = bnx2_reg_rd_ind(bp,1179780U);
  
#line 6173 
  if ((bp->flags & 8192U) != 0U && bp->stats_ticks != 0U) 
#line 6174 
                                                          writel(bp->hc_cmd | 262144U,(void volatile *)(bp->regview + 26624U)); else ;
  
#line 6177 
  if ((bp->phy_flags & 1U) != 0U) 
    
#line 6178 
    if ((bp->chip_id & 4294901760U) == 1460011008U) 
#line 6179 
                                                    bnx2_5706_serdes_timer(bp); else 
                                                                    
#line 6181 
                                                                    bnx2_5708_serdes_timer(bp);
  else ;
  bnx2_restart_timer: 
#line 6184 
  ;
  
#line 6185 
  ldv_mod_timer_116(& bp->timer,(unsigned long)bp->current_interval + jiffies);
  return_label: 
#line 6186 
                return;
}


#line 6189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_request_irq(struct bnx2 *bp)
{
  unsigned long flags;
  struct bnx2_irq *irq;
  int i;
  
#line 6193 
  int rc = 0;
  
#line 6195 
  if ((bp->flags & 1056U) != 0U) 
#line 6196 
                                 flags = 0UL; else 
#line 6198 
                                                   flags = 128UL;
  
#line 6200 
  i = 0;
  
#line 6200 
  goto ldv_58244;
  ldv_58243: 
#line 6201 
  ;
  
#line 6201 
  irq = & bp->irq_tbl[i];
  
#line 6202 
  rc = ldv_request_irq_117(irq->vector,irq->handler,flags,(char const *)(& irq->name),(void *)(& bp->bnx2_napi[i]));
  
#line 6204 
  if (rc != 0) 
#line 6205 
               goto ldv_58242; else ;
  
#line 6206 
  irq->requested = (unsigned char)1U;
  
#line 6200 
  i += 1;
  ldv_58244: 
#line 6201 
  ;
  
#line 6200 
  if (bp->irq_nvecs > i) 
#line 6202 
                         goto ldv_58243; else 
#line 6205 
                                              goto ldv_58242;
  ldv_58242: 
#line 6206 
  ;
  
#line 6208 
  return rc;
}


#line 6212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void __bnx2_free_irq(struct bnx2 *bp)
{
  struct bnx2_irq *irq;
  int i;
  
#line 6217 
  i = 0;
  
#line 6217 
  goto ldv_58251;
  ldv_58250: 
#line 6218 
  ;
  
#line 6218 
  irq = & bp->irq_tbl[i];
  
#line 6219 
  if ((unsigned int)irq->requested != 0U) 
#line 6220 
                                          ldv_free_irq_118(irq->vector,(void *)(& bp->bnx2_napi[i])); else ;
  
#line 6221 
  irq->requested = (unsigned char)0U;
  
#line 6217 
  i += 1;
  ldv_58251: 
#line 6218 
  ;
  
#line 6217 
  if (bp->irq_nvecs > i) 
#line 6219 
                         goto ldv_58250; else 
#line 6222 
                                              goto ldv_58252;
  ldv_58252: 
#line 6223 
  ;
  
#line 6224 
  return;
}


#line 6226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_free_irq(struct bnx2 *bp)
{
  
#line 6229 
  __bnx2_free_irq(bp);
  
#line 6230 
  if ((bp->flags & 32U) != 0U) 
#line 6231 
                               pci_disable_msi(bp->pdev);
  else 
    
#line 6232 
    if ((bp->flags & 1024U) != 0U) 
#line 6233 
                                   pci_disable_msix(bp->pdev); else ;
  
#line 6235 
  bp->flags &= 4294965983U;
  
#line 6236 
  return;
}


#line 6239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_enable_msix(struct bnx2 *bp, int msix_vecs)
{
  int i;
  int total_vecs;
  struct msix_entry msix_ent[9U];
  
#line 6243 
  struct net_device *dev = bp->dev;
  
#line 6244 
  int const len = 18;
  
#line 6246 
  bnx2_setup_msix_tbl(bp);
  
#line 6247 
  writel(8U,(void volatile *)(bp->regview + 1216U));
  
#line 6248 
  writel(49152U,(void volatile *)(bp->regview + 1220U));
  
#line 6249 
  writel(57344U,(void volatile *)(bp->regview + 1224U));
  
#line 6253 
  readl((void const volatile *)(bp->regview + 1216U));
  
#line 6255 
  i = 0;
  
#line 6255 
  goto ldv_58266;
  ldv_58265: 
#line 6256 
  ;
  
#line 6256 
  msix_ent[i].entry = (unsigned short)i;
  
#line 6257 
  msix_ent[i].vector = 0U;
  
#line 6255 
  i += 1;
  ldv_58266: 
#line 6256 
  ;
  
#line 6255 
  if (i <= 8) 
#line 6257 
              goto ldv_58265; else 
#line 6260 
                                   goto ldv_58267;
  ldv_58267: 
#line 6261 
  ;
  
#line 6260 
  total_vecs = msix_vecs;
  
#line 6262 
  total_vecs += 1;
  
#line 6264 
  total_vecs = pci_enable_msix_range(bp->pdev,(struct msix_entry *)(& msix_ent),2,total_vecs);
  
#line 6266 
  if (total_vecs < 0) 
#line 6267 
                      goto return_label; else ;
  
#line 6269 
  msix_vecs = total_vecs;
  
#line 6271 
  msix_vecs -= 1;
  
#line 6273 
  bp->irq_nvecs = msix_vecs;
  
#line 6274 
  bp->flags |= 1280U;
  
#line 6275 
  i = 0;
  
#line 6275 
  goto ldv_58269;
  ldv_58268: 
#line 6276 
  ;
  
#line 6276 
  bp->irq_tbl[i].vector = msix_ent[i].vector;
  
#line 6277 
  snprintf((char *)(& bp->irq_tbl[i].name),(unsigned long)len,"%s-%d",(char *)(& dev->name),i);
  
#line 6278 
  bp->irq_tbl[i].handler = & bnx2_msi_1shot;
  
#line 6275 
  i += 1;
  ldv_58269: 
#line 6276 
  ;
  
#line 6275 
  if (i < total_vecs) 
#line 6277 
                      goto ldv_58268; else 
#line 6280 
                                           goto ldv_58270;
  ldv_58270: 
#line 6281 
  ;
  return_label: 
#line 6282 
                return;
}


#line 6283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_setup_int_mode(struct bnx2 *bp, int dis_msi)
{
  int msix_vecs;
  int tmp_7;
  int tmp_83;
  
#line 6285 
  int cpus = netif_get_num_default_rss_queues();
  
#line 6288 
  if (bp->num_req_rx_rings == 0) {
    int tmp_1;
    {
      int tmp_0;
      
#line 6289 
      int _max1 = cpus + 1;
      
#line 6289 
      int _max2 = bp->num_req_tx_rings;
      
#line 6289 
      if (_max1 > _max2) 
#line 6289 
                         tmp_0 = _max1; else 
#line 6289 
                                             tmp_0 = _max2;
      
#line 6289 
      tmp_1 = tmp_0;
    }
    
#line 6289 
    msix_vecs = tmp_1;
  }
  else 
    
#line 6290 
    if (bp->num_req_tx_rings == 0) {
      int tmp_3;
      {
        int tmp_2;
        
#line 6291 
        int _max1_0 = cpus;
        
#line 6291 
        int _max2_0 = bp->num_req_rx_rings;
        
#line 6291 
        if (_max1_0 > _max2_0) 
#line 6291 
                               tmp_2 = _max1_0; else 
#line 6291 
                                                     tmp_2 = _max2_0;
        
#line 6291 
        tmp_3 = tmp_2;
      }
      
#line 6291 
      msix_vecs = tmp_3;
    }
    else {
      int tmp_5;
      {
        int tmp_4;
        
#line 6293 
        int _max1_1 = bp->num_req_rx_rings;
        
#line 6293 
        int _max2_1 = bp->num_req_tx_rings;
        
#line 6293 
        if (_max1_1 > _max2_1) 
#line 6293 
                               tmp_4 = _max1_1; else 
#line 6293 
                                                     tmp_4 = _max2_1;
        
#line 6293 
        tmp_5 = tmp_4;
      }
      
#line 6293 
      msix_vecs = tmp_5;
    }
  {
    int tmp_6;
    
#line 6295 
    int _min1 = msix_vecs;
    
#line 6295 
    int _min2 = 8;
    
#line 6295 
    if (_min1 < _min2) 
#line 6295 
                       tmp_6 = _min1; else 
#line 6295 
                                           tmp_6 = _min2;
    
#line 6295 
    tmp_7 = tmp_6;
  }
  
#line 6295 
  msix_vecs = tmp_7;
  
#line 6297 
  bp->irq_tbl[0].handler = & bnx2_interrupt;
  
#line 6298 
  strcpy((char *)(& bp->irq_tbl[0].name),(char const *)(& (bp->dev)->name));
  
#line 6299 
  bp->irq_nvecs = 1;
  
#line 6300 
  bp->irq_tbl[0].vector = (bp->pdev)->irq;
  
#line 6302 
  if ((bp->flags & 4U) != 0U && dis_msi == 0) 
#line 6303 
                                              bnx2_enable_msix(bp,msix_vecs); else ;
  
#line 6305 
  if (((bp->flags & 128U) != 0U && dis_msi == 0) && (bp->flags & 1024U) == 0U) {
    int tmp_8;
    
#line 6307 
    tmp_8 = pci_enable_msi_exact(bp->pdev,1);
    
#line 6307 
    if (tmp_8 == 0) {
      
#line 6308 
      bp->flags |= 32U;
      
#line 6309 
      if ((bp->chip_id & 4294901760U) == 1460207616U) {
        
#line 6310 
        bp->flags |= 256U;
        
#line 6311 
        bp->irq_tbl[0].handler = & bnx2_msi_1shot;
      }
      else 
#line 6313 
           bp->irq_tbl[0].handler = & bnx2_msi;
      
#line 6315 
      bp->irq_tbl[0].vector = (bp->pdev)->irq;
    }
    else ;
  }
  else ;
  
#line 6319 
  if (bp->num_req_tx_rings == 0) 
    
#line 6320 
    if (0 != 0) {
      unsigned int tmp_77;
      
#line 6320 
      if (0 != 0) {
        unsigned int tmp_75;
        
#line 6320 
        if (bp->irq_nvecs <= 0) {
          int tmp_9;
          
#line 6320 
          tmp_9 = ____ilog2_NaN();
          
#line 6320 
          tmp_75 = (unsigned int)((unsigned char)(1UL << tmp_9));
        }
        else {
          unsigned int tmp_74;
          
#line 6320 
          if (bp->irq_nvecs >= 0) {
            unsigned int tmp_73;
            
#line 6320 
            if (((unsigned long long)bp->irq_nvecs & 4611686018427387904ULL) == 0ULL) {
              unsigned int tmp_72;
              
#line 6320 
              if (((unsigned long long)bp->irq_nvecs & 2305843009213693952ULL) == 0ULL) {
                unsigned int tmp_71;
                
#line 6320 
                if (((unsigned long long)bp->irq_nvecs & 1152921504606846976ULL) == 0ULL) {
                  unsigned int tmp_70;
                  
#line 6320 
                  if (((unsigned long long)bp->irq_nvecs & 576460752303423488ULL) == 0ULL) {
                    unsigned int tmp_69;
                    
#line 6320 
                    if (((unsigned long long)bp->irq_nvecs & 288230376151711744ULL) == 0ULL) {
                      unsigned int tmp_68;
                      
#line 6320 
                      if (((unsigned long long)bp->irq_nvecs & 144115188075855872ULL) == 0ULL) {
                        unsigned int tmp_67;
                        
#line 6320 
                        if (((unsigned long long)bp->irq_nvecs & 72057594037927936ULL) == 0ULL) {
                          unsigned int tmp_66;
                          
#line 6320 
                          if (((unsigned long long)bp->irq_nvecs & 36028797018963968ULL) == 0ULL) {
                            unsigned int tmp_65;
                            
#line 6320 
                            if (((unsigned long long)bp->irq_nvecs & 18014398509481984ULL) == 0ULL) {
                              unsigned int tmp_64;
                              
#line 6320 
                              if (((unsigned long long)bp->irq_nvecs & 9007199254740992ULL) == 0ULL) {
                                unsigned int tmp_63;
                                
#line 6320 
                                if (((unsigned long long)bp->irq_nvecs & 4503599627370496ULL) == 0ULL) {
                                  unsigned int tmp_62;
                                  
#line 6320 
                                  if (((unsigned long long)bp->irq_nvecs & 2251799813685248ULL) == 0ULL) {
                                    unsigned int tmp_61;
                                    
#line 6320 
                                    if (((unsigned long long)bp->irq_nvecs & 1125899906842624ULL) == 0ULL) {
                                      unsigned int tmp_60;
                                      
#line 6320 
                                      if (((unsigned long long)bp->irq_nvecs & 562949953421312ULL) == 0ULL) {
                                        unsigned int tmp_59;
                                        
#line 6320 
                                        if (((unsigned long long)bp->irq_nvecs & 281474976710656ULL) == 0ULL) {
                                          unsigned int tmp_58;
                                          
#line 6320 
                                          if (((unsigned long long)bp->irq_nvecs & 140737488355328ULL) == 0ULL) {
                                            unsigned int tmp_57;
                                            
#line 6320 
                                            if (((unsigned long long)bp->irq_nvecs & 70368744177664ULL) == 0ULL) {
                                              unsigned int tmp_56;
                                              
#line 6320 
                                              if (((unsigned long long)bp->irq_nvecs & 35184372088832ULL) == 0ULL) {
                                                unsigned int tmp_55;
                                                
#line 6320 
                                                if (((unsigned long long)bp->irq_nvecs & 17592186044416ULL) == 0ULL) {
                                                  unsigned int tmp_54;
                                                  
#line 6320 
                                                  if (((unsigned long long)bp->irq_nvecs & 8796093022208ULL) == 0ULL) {
                                                    unsigned int tmp_53;
                                                    
#line 6320 
                                                    if (((unsigned long long)bp->irq_nvecs & 4398046511104ULL) == 0ULL) {
                                                      unsigned int tmp_52;
                                                      
#line 6320 
                                                      if (((unsigned long long)bp->irq_nvecs & 2199023255552ULL) == 0ULL) {
                                                        unsigned int tmp_51;
                                                        
#line 6320 
                                                        if (((unsigned long long)bp->irq_nvecs & 1099511627776ULL) == 0ULL) {
                                                          unsigned int tmp_50;
                                                          
#line 6320 
                                                          if (((unsigned long long)bp->irq_nvecs & 549755813888ULL) == 0ULL) {
                                                            unsigned int tmp_49;
                                                            
#line 6320 
                                                            if (((unsigned long long)bp->irq_nvecs & 274877906944ULL) == 0ULL) {
                                                              unsigned int tmp_48;
                                                              
#line 6320 
                                                              if (((unsigned long long)bp->irq_nvecs & 137438953472ULL) == 0ULL) {
                                                                unsigned int tmp_47;
                                                                
#line 6320 
                                                                if (((unsigned long long)bp->irq_nvecs & 68719476736ULL) == 0ULL) {
                                                                  unsigned int tmp_46;
                                                                  
#line 6320 
                                                                  if (
                                                                    ((unsigned long long)bp->irq_nvecs & 34359738368ULL) == 0ULL) {
                                                                    unsigned int tmp_45;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_44;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_43;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_42;
                                                                    
#line 6320 
                                                                    if (
                                                                    bp->irq_nvecs >= 0) {
                                                                    unsigned int tmp_41;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_40;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_39;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_38;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_37;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_36;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_35;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 6320 
                                                                    if (
                                                                    ((unsigned long long)bp->irq_nvecs & 1ULL) == 0ULL) {
                                                                    int tmp_10;
                                                                    
#line 6320 
                                                                    tmp_10 = ____ilog2_NaN();
                                                                    
#line 6320 
                                                                    tmp_11 = (unsigned int)((unsigned char)(1UL << tmp_10));
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_11 = 1U;
                                                                    
#line 6320 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_12 = 2U;
                                                                    
#line 6320 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_13 = 4U;
                                                                    
#line 6320 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_14 = 8U;
                                                                    
#line 6320 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_15 = 16U;
                                                                    
#line 6320 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_16 = 32U;
                                                                    
#line 6320 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_17 = 64U;
                                                                    
#line 6320 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_18 = 128U;
                                                                    
#line 6320 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_19 = 0U;
                                                                    
#line 6320 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_20 = 0U;
                                                                    
#line 6320 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_21 = 0U;
                                                                    
#line 6320 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_22 = 0U;
                                                                    
#line 6320 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_23 = 0U;
                                                                    
#line 6320 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_24 = 0U;
                                                                    
#line 6320 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_25 = 0U;
                                                                    
#line 6320 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_26 = 0U;
                                                                    
#line 6320 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_27 = 0U;
                                                                    
#line 6320 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_28 = 0U;
                                                                    
#line 6320 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_29 = 0U;
                                                                    
#line 6320 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_30 = 0U;
                                                                    
#line 6320 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_31 = 0U;
                                                                    
#line 6320 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_32 = 0U;
                                                                    
#line 6320 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_33 = 0U;
                                                                    
#line 6320 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_34 = 0U;
                                                                    
#line 6320 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_35 = 0U;
                                                                    
#line 6320 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_36 = 0U;
                                                                    
#line 6320 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_37 = 0U;
                                                                    
#line 6320 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_38 = 0U;
                                                                    
#line 6320 
                                                                    tmp_39 = tmp_38;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_39 = 0U;
                                                                    
#line 6320 
                                                                    tmp_40 = tmp_39;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_40 = 0U;
                                                                    
#line 6320 
                                                                    tmp_41 = tmp_40;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_41 = 0U;
                                                                    
#line 6320 
                                                                    tmp_42 = tmp_41;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_42 = 0U;
                                                                    
#line 6320 
                                                                    tmp_43 = tmp_42;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_43 = 0U;
                                                                    
#line 6320 
                                                                    tmp_44 = tmp_43;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_44 = 0U;
                                                                    
#line 6320 
                                                                    tmp_45 = tmp_44;
                                                                    }
                                                                    else 
                                                                    
#line 6320 
                                                                    tmp_45 = 0U;
                                                                    
#line 6320 
                                                                    tmp_46 = tmp_45;
                                                                  }
                                                                  else 
                                                                    
#line 6320 
                                                                    tmp_46 = 0U;
                                                                  
#line 6320 
                                                                  tmp_47 = tmp_46;
                                                                }
                                                                else 
                                                                  
#line 6320 
                                                                  tmp_47 = 0U;
                                                                
#line 6320 
                                                                tmp_48 = tmp_47;
                                                              }
                                                              else 
#line 6320 
                                                                   tmp_48 = 0U;
                                                              
#line 6320 
                                                              tmp_49 = tmp_48;
                                                            }
                                                            else 
#line 6320 
                                                                 tmp_49 = 0U;
                                                            
#line 6320 
                                                            tmp_50 = tmp_49;
                                                          }
                                                          else 
#line 6320 
                                                               tmp_50 = 0U;
                                                          
#line 6320 
                                                          tmp_51 = tmp_50;
                                                        }
                                                        else 
#line 6320 
                                                             tmp_51 = 0U;
                                                        
#line 6320 
                                                        tmp_52 = tmp_51;
                                                      }
                                                      else 
#line 6320 
                                                           tmp_52 = 0U;
                                                      
#line 6320 
                                                      tmp_53 = tmp_52;
                                                    }
                                                    else 
#line 6320 
                                                         tmp_53 = 0U;
                                                    
#line 6320 
                                                    tmp_54 = tmp_53;
                                                  }
                                                  else 
#line 6320 
                                                       tmp_54 = 0U;
                                                  
#line 6320 
                                                  tmp_55 = tmp_54;
                                                }
                                                else 
#line 6320 
                                                     tmp_55 = 0U;
                                                
#line 6320 
                                                tmp_56 = tmp_55;
                                              }
                                              else 
#line 6320 
                                                   tmp_56 = 0U;
                                              
#line 6320 
                                              tmp_57 = tmp_56;
                                            }
                                            else 
#line 6320 
                                                 tmp_57 = 0U;
                                            
#line 6320 
                                            tmp_58 = tmp_57;
                                          }
                                          else 
#line 6320 
                                               tmp_58 = 0U;
                                          
#line 6320 
                                          tmp_59 = tmp_58;
                                        }
                                        else 
#line 6320 
                                             tmp_59 = 0U;
                                        
#line 6320 
                                        tmp_60 = tmp_59;
                                      }
                                      else 
#line 6320 
                                           tmp_60 = 0U;
                                      
#line 6320 
                                      tmp_61 = tmp_60;
                                    }
                                    else 
#line 6320 
                                         tmp_61 = 0U;
                                    
#line 6320 
                                    tmp_62 = tmp_61;
                                  }
                                  else 
#line 6320 
                                       tmp_62 = 0U;
                                  
#line 6320 
                                  tmp_63 = tmp_62;
                                }
                                else 
#line 6320 
                                     tmp_63 = 0U;
                                
#line 6320 
                                tmp_64 = tmp_63;
                              }
                              else 
#line 6320 
                                   tmp_64 = 0U;
                              
#line 6320 
                              tmp_65 = tmp_64;
                            }
                            else 
#line 6320 
                                 tmp_65 = 0U;
                            
#line 6320 
                            tmp_66 = tmp_65;
                          }
                          else 
#line 6320 
                               tmp_66 = 0U;
                          
#line 6320 
                          tmp_67 = tmp_66;
                        }
                        else 
#line 6320 
                             tmp_67 = 0U;
                        
#line 6320 
                        tmp_68 = tmp_67;
                      }
                      else 
#line 6320 
                           tmp_68 = 0U;
                      
#line 6320 
                      tmp_69 = tmp_68;
                    }
                    else 
#line 6320 
                         tmp_69 = 0U;
                    
#line 6320 
                    tmp_70 = tmp_69;
                  }
                  else 
#line 6320 
                       tmp_70 = 0U;
                  
#line 6320 
                  tmp_71 = tmp_70;
                }
                else 
#line 6320 
                     tmp_71 = 0U;
                
#line 6320 
                tmp_72 = tmp_71;
              }
              else 
#line 6320 
                   tmp_72 = 0U;
              
#line 6320 
              tmp_73 = tmp_72;
            }
            else 
#line 6320 
                 tmp_73 = 0U;
            
#line 6320 
            tmp_74 = tmp_73;
          }
          else 
#line 6320 
               tmp_74 = 0U;
          
#line 6320 
          tmp_75 = tmp_74;
        }
        
#line 6320 
        tmp_77 = tmp_75;
      }
      else {
        int tmp_76;
        
#line 6320 
        tmp_76 = __ilog2_u32((unsigned int)bp->irq_nvecs);
        
#line 6320 
        tmp_77 = (unsigned int)((unsigned char)(1UL << tmp_76));
      }
      
#line 6320 
      bp->num_tx_rings = (unsigned char)tmp_77;
    }
    else {
      unsigned long tmp_78;
      
#line 6320 
      tmp_78 = __rounddown_pow_of_two((unsigned long)bp->irq_nvecs);
      
#line 6320 
      bp->num_tx_rings = (unsigned char)tmp_78;
    }
  else {
    int tmp_80;
    {
      int tmp_79;
      
#line 6322 
      int _min1_0 = bp->irq_nvecs;
      
#line 6322 
      int _min2_0 = bp->num_req_tx_rings;
      
#line 6322 
      if (_min1_0 < _min2_0) 
#line 6322 
                             tmp_79 = _min1_0; else 
#line 6322 
                                                    tmp_79 = _min2_0;
      
#line 6322 
      tmp_80 = tmp_79;
    }
    
#line 6322 
    bp->num_tx_rings = (unsigned char)tmp_80;
  }
  
#line 6324 
  if (bp->num_req_rx_rings == 0) 
#line 6325 
                                 bp->num_rx_rings = (unsigned char)bp->irq_nvecs;
  else {
    int tmp_82;
    {
      int tmp_81;
      
#line 6327 
      int _min1_1 = bp->irq_nvecs;
      
#line 6327 
      int _min2_1 = bp->num_req_rx_rings;
      
#line 6327 
      if (_min1_1 < _min2_1) 
#line 6327 
                             tmp_81 = _min1_1; else 
#line 6327 
                                                    tmp_81 = _min2_1;
      
#line 6327 
      tmp_82 = tmp_81;
    }
    
#line 6327 
    bp->num_rx_rings = (unsigned char)tmp_82;
  }
  
#line 6329 
  netif_set_real_num_tx_queues(bp->dev,(unsigned int)bp->num_tx_rings);
  
#line 6331 
  tmp_83 = netif_set_real_num_rx_queues(bp->dev,(unsigned int)bp->num_rx_rings);
  
#line 6331 
  return tmp_83;
}


#line 6336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_open(struct net_device *dev)
{
  int __retres;
  int rc;
  
#line 6338 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6341 
  rc = bnx2_request_firmware(bp);
  
#line 6342 
  if (rc < 0) 
#line 6343 
              goto out; else ;
  
#line 6345 
  netif_carrier_off(dev);
  
#line 6347 
  bnx2_disable_int(bp);
  
#line 6349 
  rc = bnx2_setup_int_mode(bp,disable_msi);
  
#line 6350 
  if (rc != 0) 
#line 6351 
               goto open_err; else ;
  
#line 6352 
  bnx2_init_napi(bp);
  
#line 6353 
  bnx2_napi_enable(bp);
  
#line 6354 
  rc = bnx2_alloc_mem(bp);
  
#line 6355 
  if (rc != 0) 
#line 6356 
               goto open_err; else ;
  
#line 6358 
  rc = bnx2_request_irq(bp);
  
#line 6359 
  if (rc != 0) 
#line 6360 
               goto open_err; else ;
  
#line 6362 
  rc = bnx2_init_nic(bp,1);
  
#line 6363 
  if (rc != 0) 
#line 6364 
               goto open_err; else ;
  
#line 6366 
  ldv_mod_timer_119(& bp->timer,(unsigned long)bp->current_interval + jiffies);
  
#line 6368 
  atomic_set(& bp->intr_sem,0);
  
#line 6370 
  memset((void *)bp->temp_stats_blk,0,324UL);
  
#line 6372 
  bnx2_enable_int(bp);
  
#line 6374 
  if ((bp->flags & 32U) != 0U) {
    int tmp_0;
    
#line 6378 
    tmp_0 = bnx2_test_intr(bp);
    
#line 6378 
    if (tmp_0 != 0) {
      
#line 6379 
      netdev_warn((struct net_device const *)bp->dev,"No interrupt was generated using MSI, switching to INTx mode. Please report this failure to the PCI maintainer and include system chipset information.\n");
      
#line 6381 
      bnx2_disable_int(bp);
      
#line 6382 
      bnx2_free_irq(bp);
      
#line 6384 
      bnx2_setup_int_mode(bp,1);
      
#line 6386 
      rc = bnx2_init_nic(bp,0);
      
#line 6388 
      if (rc == 0) 
#line 6389 
                   rc = bnx2_request_irq(bp); else ;
      
#line 6391 
      if (rc != 0) {
        
#line 6392 
        ldv_del_timer_sync_120(& bp->timer);
        
#line 6393 
        goto open_err;
      }
      else ;
      
#line 6395 
      bnx2_enable_int(bp);
    }
    else ;
  }
  else ;
  
#line 6398 
  if ((bp->flags & 32U) != 0U) 
#line 6399 
                               netdev_info((struct net_device const *)dev,"using MSI\n");
  else 
    
#line 6400 
    if ((bp->flags & 1024U) != 0U) 
#line 6401 
                                   netdev_info((struct net_device const *)dev,"using MSIX\n"); else ;
  
#line 6403 
  netif_tx_start_all_queues(dev);
  out: 
#line 6404 
  ;
  
#line 6405 
  __retres = rc;
  
#line 6405 
  goto return_label;
  open_err: 
#line 6407 
  ;
  
#line 6408 
  bnx2_napi_disable(bp);
  
#line 6409 
  bnx2_free_skbs(bp);
  
#line 6410 
  bnx2_free_irq(bp);
  
#line 6411 
  bnx2_free_mem(bp);
  
#line 6412 
  bnx2_del_napi(bp);
  
#line 6413 
  bnx2_release_firmware(bp);
  
#line 6414 
  goto out;
  return_label: 
#line 6414 
                return __retres;
}


#line 6418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_reset_task(struct work_struct *work)
{
  struct bnx2 *tmp;
  int rc;
  u16 pcicmd;
  int tmp_1;
  bool tmp_0;
  {
    
#line 6420 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6420 
    tmp = (struct bnx2 *)__mptr + 18446744073709541576U;
  }
  
#line 6420 
  struct bnx2 *bp = tmp;
  
#line 6424 
  rtnl_lock();
  
#line 6425 
  tmp_0 = netif_running((struct net_device const *)bp->dev);
  
#line 6425 
  if (tmp_0) 
#line 6425 
             tmp_1 = 0; else 
#line 6425 
                             tmp_1 = 1;
  
#line 6425 
  if (tmp_1) {
    
#line 6426 
    rtnl_unlock();
    
#line 6427 
    goto return_label;
  }
  else ;
  
#line 6430 
  bnx2_netif_stop(bp,(_Bool)1);
  
#line 6432 
  pci_read_config_word((struct pci_dev const *)bp->pdev,4,& pcicmd);
  
#line 6433 
  if (((int)pcicmd & 2) == 0) {
    
#line 6435 
    pci_restore_state(bp->pdev);
    
#line 6436 
    pci_save_state(bp->pdev);
  }
  else ;
  
#line 6438 
  rc = bnx2_init_nic(bp,1);
  
#line 6439 
  if (rc != 0) {
    
#line 6440 
    netdev_err((struct net_device const *)bp->dev,"failed to reset NIC, closing\n");
    
#line 6441 
    bnx2_napi_enable(bp);
    
#line 6442 
    dev_close(bp->dev);
    
#line 6443 
    rtnl_unlock();
    
#line 6444 
    goto return_label;
  }
  else ;
  
#line 6447 
  atomic_set(& bp->intr_sem,1);
  
#line 6448 
  bnx2_netif_start(bp,(_Bool)1);
  
#line 6449 
  rtnl_unlock();
  return_label: 
#line 6450 
                return;
}


#line 6455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_dump_ftq(struct bnx2 *bp)
{
  int i;
  u32 reg;
  u32 bdidx;
  u32 cid;
  u32 valid;
  u32 tmp;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  unsigned int tmp_6;
  
#line 6459 
  struct net_device *dev = bp->dev;
  
#line 6463 
  struct ftq_reg const ftq_arr[14U] = {{.name = (char *)"RV2P_PFTQ_CTL", .off = 11132U}, {.name = (char *)"RV2P_TFTQ_CTL", .off = 11196U}, {.name = (char *)"RV2P_MFTQ_CTL", .off = 11260U}, {.name = (char *)"TBDR_FTQ_CTL", .off = 21500U}, {.name = (char *)"TDMA_FTQ_CTL", .off = 24572U}, {.name = (char *)"TXP_FTQ_CTL", .off = 283644U}, {.name = (char *)"TXP_FTQ_CTL", .off = 283644U}, {.name = (char *)"TPAT_FTQ_CTL", .off = 545788U}, {.name = (char *)"RXP_CFTQ_CTL", .off = 807868U}, {.name = (char *)"RXP_FTQ_CTL", .off = 807932U}, {.name = (char *)"COM_COMXQ_FTQ_CTL", .off = 1069948U}, {.name = (char *)"COM_COMTQ_FTQ_CTL", .off = 1070012U}, {.name = (char *)"COM_COMQ_FTQ_CTL", .off = 1070076U}, {.name = (char *)"CP_CPQ_FTQ_CTL", .off = 1594364U}};
  
#line 6480 
  netdev_err((struct net_device const *)dev,"<--- start FTQ dump --->\n");
  
#line 6481 
  i = 0;
  
#line 6481 
  goto ldv_58327;
  ldv_58326: 
#line 6482 
  ;
  
#line 6482 
  tmp = bnx2_reg_rd_ind(bp,ftq_arr[i].off);
  
#line 6482 
  ;
  
#line 6482 
  ;
  
#line 6482 
  netdev_err((struct net_device const *)dev,"%s %08x\n",ftq_arr[i].name,tmp);
  
#line 6481 
  i += 1;
  ldv_58327: 
#line 6482 
  ;
  
#line 6481 
  if ((unsigned int)i <= 13U) 
#line 6483 
                              goto ldv_58326; else 
#line 6486 
                                                   goto ldv_58328;
  ldv_58328: 
#line 6487 
  ;
  
#line 6485 
  netdev_err((struct net_device const *)dev,"CPU states:\n");
  
#line 6486 
  reg = 282624U;
  
#line 6486 
  goto ldv_58330;
  ldv_58329: 
#line 6487 
  ;
  
#line 6492 
  tmp_0 = bnx2_reg_rd_ind(bp,reg + 32U);
  
#line 6491 
  tmp_1 = bnx2_reg_rd_ind(bp,reg + 28U);
  
#line 6490 
  tmp_2 = bnx2_reg_rd_ind(bp,reg + 28U);
  
#line 6489 
  tmp_3 = bnx2_reg_rd_ind(bp,reg + 8U);
  
#line 6488 
  tmp_4 = bnx2_reg_rd_ind(bp,reg + 4U);
  
#line 6487 
  tmp_5 = bnx2_reg_rd_ind(bp,reg);
  
#line 6487 
  ;
  
#line 6487 
  ;
  
#line 6487 
  netdev_err((struct net_device const *)dev,"%06x mode %x state %x evt_mask %x pc %x pc %x instr %x\n",reg,tmp_5,tmp_4,tmp_3,tmp_2,tmp_1,tmp_0);
  
#line 6486 
  reg += 262144U;
  ldv_58330: 
#line 6487 
  ;
  
#line 6486 
  if (reg <= 1593344U) 
#line 6488 
                       goto ldv_58329; else 
#line 6491 
                                            goto ldv_58331;
  ldv_58331: 
#line 6492 
  ;
  
#line 6495 
  netdev_err((struct net_device const *)dev,"<--- end FTQ dump --->\n");
  
#line 6496 
  netdev_err((struct net_device const *)dev,"<--- start TBDC dump --->\n");
  
#line 6497 
  tmp_6 = readl((void const volatile *)(bp->regview + 21508U));
  
#line 6497 
  ;
  
#line 6497 
  netdev_err((struct net_device const *)dev,"TBDC free cnt: %ld\n",(unsigned long)tmp_6 & 63UL);
  
#line 6499 
  netdev_err((struct net_device const *)dev,"LINE     CID  BIDX   CMD  VALIDS\n");
  
#line 6500 
  i = 0;
  
#line 6500 
  goto ldv_58337;
  ldv_58336: 
#line 6501 
  ;
  {
    unsigned int tmp_7;
    
#line 6501 
    int j = 0;
    
#line 6503 
    writel((unsigned int)i,(void volatile *)(bp->regview + 21540U));
    
#line 6504 
    writel(5U,(void volatile *)(bp->regview + 21556U));
    
#line 6506 
    writel(8U,(void volatile *)(bp->regview + 21504U));
    
#line 6507 
    goto ldv_58334;
    ldv_58333: 
#line 6508 
    ;
    
#line 6509 
    j += 1;
    ldv_58334: 
#line 6510 
    ;
    
#line 6507 
    tmp_7 = readl((void const volatile *)(bp->regview + 21504U));
    
#line 6507 
    if (((unsigned long)tmp_7 & 8UL) != 0UL) {
      
#line 6508 
      if (j <= 99) 
#line 6510 
                   goto ldv_58333; else 
#line 6513 
                                        goto ldv_58335;
    }
    else 
#line 6513 
         goto ldv_58335;
    ldv_58335: 
#line 6514 
    ;
    
#line 6511 
    cid = readl((void const volatile *)(bp->regview + 21552U));
    
#line 6512 
    bdidx = readl((void const volatile *)(bp->regview + 21548U));
    
#line 6513 
    valid = readl((void const volatile *)(bp->regview + 21556U));
    
#line 6514 
    netdev_err((struct net_device const *)dev,"%02x    %06x  %04lx   %02x    [%x]\n",i,cid,(unsigned long)bdidx & 65535UL,bdidx >> 24,(valid >> 8) & 255U);
  }
  
#line 6500 
  i += 1;
  ldv_58337: 
#line 6501 
  ;
  
#line 6500 
  if (i <= 31) 
#line 6502 
               goto ldv_58336; else 
#line 6505 
                                    goto ldv_58338;
  ldv_58338: 
#line 6506 
  ;
  
#line 6518 
  netdev_err((struct net_device const *)dev,"<--- end TBDC dump --->\n");
  
#line 6519 
  return;
}


#line 6522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_dump_state(struct bnx2 *bp)
{
  u32 val1;
  u32 val2;
  int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  
#line 6524 
  struct net_device *dev = bp->dev;
  
#line 6527 
  pci_read_config_dword((struct pci_dev const *)bp->pdev,4,& val1);
  
#line 6528 
  ;
  
#line 6528 
  tmp = atomic_read((atomic_t const *)(& bp->intr_sem));
  
#line 6528 
  ;
  
#line 6528 
  netdev_err((struct net_device const *)dev,"DEBUG: intr_sem[%x] PCI_CMD[%08x]\n",tmp,val1);
  
#line 6530 
  pci_read_config_dword((struct pci_dev const *)bp->pdev,bp->pm_cap + 4,& val1);
  
#line 6531 
  pci_read_config_dword((struct pci_dev const *)bp->pdev,104,& val2);
  
#line 6532 
  netdev_err((struct net_device const *)dev,"DEBUG: PCI_PM[%08x] PCI_MISC_CFG[%08x]\n",val1,val2);
  
#line 6534 
  tmp_0 = readl((void const volatile *)(bp->regview + 5324U));
  
#line 6533 
  tmp_1 = readl((void const volatile *)(bp->regview + 5312U));
  
#line 6533 
  ;
  
#line 6533 
  netdev_err((struct net_device const *)dev,"DEBUG: EMAC_TX_STATUS[%08x] EMAC_RX_STATUS[%08x]\n",tmp_1,tmp_0);
  
#line 6536 
  tmp_2 = readl((void const volatile *)(bp->regview + 6156U));
  
#line 6536 
  ;
  
#line 6536 
  netdev_err((struct net_device const *)dev,"DEBUG: RPM_MGMT_PKT_CTRL[%08x]\n",tmp_2);
  
#line 6538 
  tmp_3 = readl((void const volatile *)(bp->regview + 26696U));
  
#line 6538 
  ;
  
#line 6538 
  netdev_err((struct net_device const *)dev,"DEBUG: HC_STATS_INTERRUPT_STATUS[%08x]\n",tmp_3);
  
#line 6540 
  if ((bp->flags & 1024U) != 0U) {
    unsigned int tmp_4;
    
#line 6541 
    tmp_4 = readl((void const volatile *)(bp->regview + 57344U));
    
#line 6541 
    ;
    
#line 6541 
    netdev_err((struct net_device const *)dev,"DEBUG: PBA[%08x]\n",tmp_4);
  }
  else ;
  
#line 6543 
  return;
}


#line 6546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_tx_timeout(struct net_device *dev)
{
  
#line 6548 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6550 
  bnx2_dump_ftq(bp);
  
#line 6551 
  bnx2_dump_state(bp);
  
#line 6552 
  bnx2_dump_mcp_state(bp);
  
#line 6555 
  ldv_schedule_work_121(& bp->reset_task);
  
#line 6556 
  return;
}


#line 6563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static netdev_tx_t bnx2_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  dma_addr_t mapping;
  struct bnx2_tx_bd *txbd;
  struct bnx2_sw_tx_bd *tx_buf;
  u32 len;
  u32 vlan_tag_flags;
  u32 last_frag;
  u32 mss;
  u16 prod;
  u16 ring_prod;
  int i;
  struct bnx2_napi *bnapi;
  struct bnx2_tx_ring_info *txr;
  struct netdev_queue *txq;
  u16 tmp_0;
  u32 tmp_1;
  unsigned char *tmp_2;
  unsigned char *tmp_5;
  int tmp_6;
  unsigned char *tmp_7;
  bool tmp_8;
  u32 tmp_12;
  unsigned int tmp_13;
  unsigned int tmp_15;
  unsigned char *tmp_14;
  
#line 6565 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6577 
  tmp_0 = skb_get_queue_mapping((struct sk_buff const *)skb);
  
#line 6577 
  i = (int)tmp_0;
  
#line 6578 
  bnapi = & bp->bnx2_napi[i];
  
#line 6579 
  txr = & bnapi->tx_ring;
  
#line 6580 
  txq = netdev_get_tx_queue((struct net_device const *)dev,(unsigned int)i);
  
#line 6582 
  tmp_1 = bnx2_tx_avail(bp,txr);
  
#line 6582 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 6582 
  ;
  
#line 6582 
  if ((long)(tmp_1 < (unsigned int)((int)((struct skb_shared_info *)tmp_2)->nr_frags + 1)) != 0L) {
    
#line 6584 
    netif_tx_start_queue(txq);
    
#line 6585 
    netdev_err((struct net_device const *)dev,"BUG! Tx ring full when queue awake!\n");
    
#line 6587 
    __retres = NETDEV_TX_BUSY;
    
#line 6587 
    goto return_label;
  }
  else ;
  
#line 6589 
  len = skb_headlen((struct sk_buff const *)skb);
  
#line 6590 
  prod = txr->tx_prod;
  
#line 6591 
  ring_prod = (unsigned short)((unsigned int)prod & 255U);
  
#line 6593 
  vlan_tag_flags = 0U;
  
#line 6594 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
#line 6595 
                                                           vlan_tag_flags |= 2U; else ;
  
#line 6598 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 6599 
                                        vlan_tag_flags = (((unsigned int)((int)skb->vlan_tci << 16) & 4026466304U) | vlan_tag_flags) | 8U; else ;
  
#line 6603 
  tmp_5 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 6603 
  mss = (unsigned int)((struct skb_shared_info *)tmp_5)->gso_size;
  
#line 6603 
  if (mss != 0U) {
    u32 tcp_opt_len;
    struct iphdr *iph;
    unsigned char *tmp_4;
    
#line 6607 
    vlan_tag_flags |= 32768U;
    
#line 6609 
    tcp_opt_len = tcp_optlen((struct sk_buff const *)skb);
    
#line 6611 
    tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 6611 
    ;
    
#line 6611 
    if (((int)((struct skb_shared_info *)tmp_4)->gso_type & 16) != 0) {
      int tmp_3;
      
#line 6612 
      tmp_3 = skb_transport_offset((struct sk_buff const *)skb);
      
#line 6612 
      u32 tcp_off = (unsigned int)tmp_3 + 4294967242U;
      
#line 6615 
      vlan_tag_flags = (((tcp_opt_len >> 2) << 8) | vlan_tag_flags) | 8192U;
      
#line 6617 
      if ((long)(tcp_off == 0U) != 0L) 
#line 6618 
                                       vlan_tag_flags &= 4294967289U;
      else {
        
#line 6620 
        tcp_off >>= 3;
        
#line 6621 
        vlan_tag_flags = (((tcp_off << 1) & 6U) | ((tcp_off << 12) & 65536U)) | vlan_tag_flags;
        
#line 6625 
        mss = ((tcp_off << 14) & 196608U) | mss;
      }
    }
    else {
      
#line 6628 
      iph = ip_hdr((struct sk_buff const *)skb);
      
#line 6629 
      if (tcp_opt_len != 0U || (unsigned int)iph->ihl > 5U) 
#line 6630 
                                                            vlan_tag_flags = ((((unsigned int)iph->ihl + (tcp_opt_len >> 2)) + 4294967291U) << 8) | vlan_tag_flags; else ;
    }
  }
  else 
#line 6635 
       mss = 0U;
  
#line 6637 
  mapping = dma_map_single_attrs(& (bp->pdev)->dev,(void *)skb->data,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 6638 
  tmp_6 = dma_mapping_error(& (bp->pdev)->dev,mapping);
  
#line 6638 
  if (tmp_6 != 0) {
    
#line 6639 
    dev_kfree_skb_any(skb);
    
#line 6640 
    __retres = NETDEV_TX_OK;
    
#line 6640 
    goto return_label;
  }
  else ;
  
#line 6643 
  tx_buf = txr->tx_buf_ring + (int)ring_prod;
  
#line 6644 
  tx_buf->skb = skb;
  
#line 6645 
  tx_buf->mapping = mapping;
  
#line 6647 
  txbd = txr->tx_desc_ring + (int)ring_prod;
  
#line 6649 
  txbd->tx_bd_haddr_hi = (unsigned int)(mapping >> 32);
  
#line 6650 
  txbd->tx_bd_haddr_lo = (unsigned int)mapping;
  
#line 6651 
  txbd->tx_bd_mss_nbytes = (mss << 16) | len;
  
#line 6652 
  txbd->tx_bd_vlan_tag_flags = vlan_tag_flags | 128U;
  
#line 6654 
  tmp_7 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 6654 
  last_frag = (unsigned int)((struct skb_shared_info *)tmp_7)->nr_frags;
  
#line 6655 
  tx_buf->nr_frags = (unsigned short)last_frag;
  
#line 6656 
  tmp_8 = skb_is_gso((struct sk_buff const *)skb);
  
#line 6656 
  tx_buf->is_gso = (unsigned short)tmp_8;
  
#line 6658 
  i = 0;
  
#line 6658 
  goto ldv_58373;
  ldv_58372: 
#line 6659 
  ;
  {
    unsigned char *tmp_9;
    int tmp_10;
    
#line 6659 
    tmp_9 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 6659 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_9)->frags[i]);
    
#line 6661 
    if (((unsigned long)prod & 254UL) == 254UL) 
#line 6661 
                                                prod = (unsigned short)((unsigned int)prod + 2U); else 
                                                                    
#line 6661 
                                                                    prod = (unsigned short)((unsigned int)prod + 1U);
    
#line 6662 
    ring_prod = (unsigned short)((unsigned int)prod & 255U);
    
#line 6663 
    txbd = txr->tx_desc_ring + (int)ring_prod;
    
#line 6665 
    len = skb_frag_size(frag);
    
#line 6666 
    mapping = skb_frag_dma_map(& (bp->pdev)->dev,frag,0UL,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 6668 
    tmp_10 = dma_mapping_error(& (bp->pdev)->dev,mapping);
    
#line 6668 
    if (tmp_10 != 0) 
#line 6669 
                     goto dma_error; else ;
    
#line 6670 
    (txr->tx_buf_ring + (int)ring_prod)->mapping = mapping;
    
#line 6673 
    txbd->tx_bd_haddr_hi = (unsigned int)(mapping >> 32);
    
#line 6674 
    txbd->tx_bd_haddr_lo = (unsigned int)mapping;
    
#line 6675 
    txbd->tx_bd_mss_nbytes = (mss << 16) | len;
    
#line 6676 
    txbd->tx_bd_vlan_tag_flags = vlan_tag_flags;
  }
  
#line 6658 
  i += 1;
  ldv_58373: 
#line 6659 
  ;
  
#line 6658 
  if ((unsigned int)i < last_frag) 
#line 6660 
                                   goto ldv_58372; else 
#line 6663 
                                                        goto ldv_58374;
  ldv_58374: 
#line 6664 
  ;
  
#line 6679 
  txbd->tx_bd_vlan_tag_flags |= 64U;
  
#line 6680 
  ldv_inline_asm();
  
#line 6684 
  netdev_tx_sent_queue(txq,skb->len);
  
#line 6686 
  if (((unsigned long)prod & 254UL) == 254UL) 
#line 6686 
                                              prod = (unsigned short)((unsigned int)prod + 2U); else 
                                                                    
#line 6686 
                                                                    prod = (unsigned short)((unsigned int)prod + 1U);
  
#line 6687 
  txr->tx_prod_bseq += skb->len;
  
#line 6689 
  writew((unsigned short)((int)prod),(void volatile *)(bp->regview + txr->tx_bidx_addr));
  
#line 6690 
  writel(txr->tx_prod_bseq,(void volatile *)(bp->regview + txr->tx_bseq_addr));
  
#line 6691 
  ldv_inline_asm();
  
#line 6694 
  txr->tx_prod = prod;
  
#line 6696 
  tmp_12 = bnx2_tx_avail(bp,txr);
  
#line 6696 
  if ((long)(tmp_12 <= 17U) != 0L) {
    u32 tmp_11;
    
#line 6697 
    netif_tx_start_queue(txq);
    
#line 6698 
    ldv_inline_asm();
    
#line 6705 
    tmp_11 = bnx2_tx_avail(bp,txr);
    
#line 6705 
    ;
    
#line 6705 
    if (tmp_11 > bp->tx_wake_thresh) 
#line 6706 
                                     netif_tx_wake_queue(txq); else ;
  }
  else ;
  
#line 6709 
  __retres = NETDEV_TX_OK;
  
#line 6709 
  goto return_label;
  dma_error: 
#line 6710 
  ;
  
#line 6712 
  last_frag = (unsigned int)i;
  
#line 6715 
  prod = txr->tx_prod;
  
#line 6716 
  ring_prod = (unsigned short)((unsigned int)prod & 255U);
  
#line 6717 
  tx_buf = txr->tx_buf_ring + (int)ring_prod;
  
#line 6718 
  tx_buf->skb = (struct sk_buff *)0;
  
#line 6719 
  tmp_13 = skb_headlen((struct sk_buff const *)skb);
  
#line 6719 
  ;
  
#line 6719 
  ;
  
#line 6719 
  dma_unmap_single_attrs(& (bp->pdev)->dev,tx_buf->mapping,(unsigned long)tmp_13,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 6723 
  i = 0;
  
#line 6723 
  goto ldv_58376;
  ldv_58375: 
#line 6724 
  ;
  
#line 6724 
  if (((unsigned long)prod & 254UL) == 254UL) 
#line 6724 
                                              prod = (unsigned short)((unsigned int)prod + 2U); else 
                                                                    
#line 6724 
                                                                    prod = (unsigned short)((unsigned int)prod + 1U);
  
#line 6725 
  ring_prod = (unsigned short)((unsigned int)prod & 255U);
  
#line 6726 
  tx_buf = txr->tx_buf_ring + (int)ring_prod;
  
#line 6728 
  tmp_14 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 6728 
  tmp_15 = skb_frag_size((skb_frag_t const *)(& ((struct skb_shared_info *)tmp_14)->frags[i]));
  
#line 6727 
  ;
  
#line 6727 
  ;
  
#line 6727 
  dma_unmap_page(& (bp->pdev)->dev,tx_buf->mapping,(unsigned long)tmp_15,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 6723 
  i += 1;
  ldv_58376: 
#line 6724 
  ;
  
#line 6723 
  if ((unsigned int)i < last_frag) 
#line 6725 
                                   goto ldv_58375; else 
#line 6728 
                                                        goto ldv_58377;
  ldv_58377: 
#line 6729 
  ;
  
#line 6732 
  dev_kfree_skb_any(skb);
  
#line 6733 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 6733 
                return __retres;
}


#line 6738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_close(struct net_device *dev)
{
  int __retres;
  
#line 6740 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6742 
  bnx2_disable_int_sync(bp);
  
#line 6743 
  bnx2_napi_disable(bp);
  
#line 6744 
  netif_tx_disable(dev);
  
#line 6745 
  ldv_del_timer_sync_122(& bp->timer);
  
#line 6746 
  bnx2_shutdown_chip(bp);
  
#line 6747 
  bnx2_free_irq(bp);
  
#line 6748 
  bnx2_free_skbs(bp);
  
#line 6749 
  bnx2_free_mem(bp);
  
#line 6750 
  bnx2_del_napi(bp);
  
#line 6751 
  bp->link_up = (unsigned char)0U;
  
#line 6752 
  netif_carrier_off(bp->dev);
  
#line 6753 
  __retres = 0;
  
#line 6753 
  return __retres;
}


#line 6757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_save_stats(struct bnx2 *bp)
{
  int i;
  
#line 6759 
  u32 *hw_stats = (u32 *)bp->stats_blk;
  
#line 6760 
  u32 *temp_stats = (u32 *)bp->temp_stats_blk;
  
#line 6764 
  i = 0;
  
#line 6764 
  goto ldv_58391;
  ldv_58390: 
#line 6765 
  ;
  {
    u32 hi;
    u64 lo;
    
#line 6768 
    hi = *(temp_stats + i) + *(hw_stats + i);
    
#line 6769 
    lo = (unsigned long long)*(temp_stats + ((unsigned int)i + 1U)) + (unsigned long long)*(hw_stats + ((unsigned int)i + 1U));
    
#line 6770 
    if (lo > 4294967295ULL) 
#line 6771 
                            hi += 1U; else ;
    
#line 6772 
    *(temp_stats + i) = hi;
    
#line 6773 
    *(temp_stats + ((unsigned int)i + 1U)) = (unsigned int)lo;
  }
  
#line 6764 
  i += 2;
  ldv_58391: 
#line 6765 
  ;
  
#line 6764 
  if (i <= 19) 
#line 6766 
               goto ldv_58390; else 
#line 6769 
                                    goto ldv_58392;
  ldv_58392: 
#line 6770 
  ;
  
#line 6776 
  goto ldv_58394;
  ldv_58393: 
#line 6777 
  ;
  
#line 6777 
  *(temp_stats + i) += *(hw_stats + i);
  
#line 6776 
  i += 1;
  ldv_58394: 
#line 6777 
  ;
  
#line 6776 
  if ((unsigned int)i <= 80U) 
#line 6778 
                              goto ldv_58393; else 
#line 6781 
                                                   goto ldv_58395;
  ldv_58395: 
#line 6782 
  ;
  
#line 6783 
  return;
}


#line 6792  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct rtnl_link_stats64 *bnx2_get_stats64(struct net_device *dev, struct rtnl_link_stats64 *net_stats)
{
  struct rtnl_link_stats64 *__retres;
  
#line 6794 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6796 
  if (bp->stats_blk == (struct statistics_block *)0) {
    
#line 6797 
    __retres = net_stats;
    
#line 6797 
    goto return_label;
  }
  else ;
  
#line 6799 
  net_stats->rx_packets = (((((((unsigned long long)(bp->stats_blk)->stat_IfHCInUcastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCInUcastPkts_lo) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCInUcastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCInUcastPkts_lo)) + (((unsigned long long)(bp->stats_blk)->stat_IfHCInMulticastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCInMulticastPkts_lo)) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCInMulticastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCInMulticastPkts_lo)) + (((unsigned long long)(bp->stats_blk)->stat_IfHCInBroadcastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCInBroadcastPkts_lo)) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCInBroadcastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCInBroadcastPkts_lo);
  
#line 6804 
  net_stats->tx_packets = (((((((unsigned long long)(bp->stats_blk)->stat_IfHCOutUcastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCOutUcastPkts_lo) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutUcastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutUcastPkts_lo)) + (((unsigned long long)(bp->stats_blk)->stat_IfHCOutMulticastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCOutMulticastPkts_lo)) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutMulticastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutMulticastPkts_lo)) + (((unsigned long long)(bp->stats_blk)->stat_IfHCOutBroadcastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCOutBroadcastPkts_lo)) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutBroadcastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutBroadcastPkts_lo);
  
#line 6809 
  net_stats->rx_bytes = (((unsigned long long)(bp->stats_blk)->stat_IfHCInOctets_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCInOctets_lo) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCInOctets_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCInOctets_lo);
  
#line 6812 
  net_stats->tx_bytes = (((unsigned long long)(bp->stats_blk)->stat_IfHCOutOctets_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCOutOctets_lo) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutOctets_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCOutOctets_lo);
  
#line 6815 
  net_stats->multicast = (((unsigned long long)(bp->stats_blk)->stat_IfHCInMulticastPkts_hi << 32) + (unsigned long long)(bp->stats_blk)->stat_IfHCInMulticastPkts_lo) + (((unsigned long long)(bp->temp_stats_blk)->stat_IfHCInMulticastPkts_hi << 32) + (unsigned long long)(bp->temp_stats_blk)->stat_IfHCInMulticastPkts_lo);
  
#line 6818 
  net_stats->collisions = (unsigned long long)((bp->stats_blk)->stat_EtherStatsCollisions + (bp->temp_stats_blk)->stat_EtherStatsCollisions);
  
#line 6821 
  net_stats->rx_length_errors = (unsigned long long)((unsigned long)((bp->stats_blk)->stat_EtherStatsUndersizePkts + (bp->temp_stats_blk)->stat_EtherStatsUndersizePkts) + (unsigned long)((bp->stats_blk)->stat_EtherStatsOverrsizePkts + (bp->temp_stats_blk)->stat_EtherStatsOverrsizePkts));
  
#line 6825 
  net_stats->rx_over_errors = (unsigned long long)((unsigned long)((bp->stats_blk)->stat_IfInFTQDiscards + (bp->temp_stats_blk)->stat_IfInFTQDiscards) + (unsigned long)((bp->stats_blk)->stat_IfInMBUFDiscards + (bp->temp_stats_blk)->stat_IfInMBUFDiscards));
  
#line 6829 
  net_stats->rx_frame_errors = (unsigned long long)((bp->stats_blk)->stat_Dot3StatsAlignmentErrors + (bp->temp_stats_blk)->stat_Dot3StatsAlignmentErrors);
  
#line 6832 
  net_stats->rx_crc_errors = (unsigned long long)((bp->stats_blk)->stat_Dot3StatsFCSErrors + (bp->temp_stats_blk)->stat_Dot3StatsFCSErrors);
  
#line 6835 
  net_stats->rx_errors = ((net_stats->rx_length_errors + net_stats->rx_over_errors) + net_stats->rx_frame_errors) + net_stats->rx_crc_errors;
  
#line 6839 
  net_stats->tx_aborted_errors = (unsigned long long)((unsigned long)((bp->stats_blk)->stat_Dot3StatsExcessiveCollisions + (bp->temp_stats_blk)->stat_Dot3StatsExcessiveCollisions) + (unsigned long)((bp->stats_blk)->stat_Dot3StatsLateCollisions + (bp->temp_stats_blk)->stat_Dot3StatsLateCollisions));
  
#line 6843 
  if ((bp->chip_id & 4294901760U) == 1460011008U || (bp->chip_id & 4294967280U) == 1460142080U) 
    
#line 6845 
    net_stats->tx_carrier_errors = 0ULL; else 
#line 6847 
                                              net_stats->tx_carrier_errors = (unsigned long long)((bp->stats_blk)->stat_Dot3StatsCarrierSenseErrors + (bp->temp_stats_blk)->stat_Dot3StatsCarrierSenseErrors);
  
#line 6851 
  net_stats->tx_errors = ((unsigned long long)((bp->stats_blk)->stat_emac_tx_stat_dot3statsinternalmactransmiterrors + (bp->temp_stats_blk)->stat_emac_tx_stat_dot3statsinternalmactransmiterrors) + net_stats->tx_aborted_errors) + net_stats->tx_carrier_errors;
  
#line 6856 
  net_stats->rx_missed_errors = (unsigned long long)(((unsigned long)((bp->stats_blk)->stat_IfInFTQDiscards + (bp->temp_stats_blk)->stat_IfInFTQDiscards) + (unsigned long)((bp->stats_blk)->stat_IfInMBUFDiscards + (bp->temp_stats_blk)->stat_IfInMBUFDiscards)) + (unsigned long)((bp->stats_blk)->stat_FwRxDrop + (bp->temp_stats_blk)->stat_FwRxDrop));
  
#line 6861 
  __retres = net_stats;
  return_label: 
#line 6861 
                return __retres;
}


#line 6867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_get_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int __retres;
  bool tmp_0;
  
#line 6869 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6870 
  int support_serdes = 0;
  
#line 6870 
  int support_copper = 0;
  
#line 6872 
  cmd->supported = 64U;
  
#line 6873 
  if ((bp->phy_flags & 2048U) != 0U) {
    
#line 6874 
    support_serdes = 1;
    
#line 6875 
    support_copper = 1;
  }
  else 
    
#line 6876 
    if ((unsigned int)bp->phy_port == 3U) 
#line 6877 
                                          support_serdes = 1; else 
#line 6879 
                                                                   support_copper = 1;
  
#line 6881 
  if (support_serdes != 0) {
    
#line 6882 
    cmd->supported |= 1056U;
    
#line 6884 
    if ((bp->phy_flags & 8U) != 0U) 
#line 6885 
                                    cmd->supported |= 32768U; else ;
  }
  else ;
  
#line 6888 
  if (support_copper != 0) 
#line 6889 
                           cmd->supported |= 175U; else ;
  
#line 6898 
  ldv_spin_lock_bh_123(& bp->phy_lock);
  
#line 6899 
  cmd->port = bp->phy_port;
  
#line 6900 
  cmd->advertising = bp->advertising;
  
#line 6902 
  if (((int)bp->autoneg & 1) != 0) 
#line 6903 
                                   cmd->autoneg = (unsigned char)1U; else 
                                                                    
#line 6905 
                                                                    cmd->autoneg = (unsigned char)0U;
  
#line 6908 
  tmp_0 = netif_carrier_ok((struct net_device const *)dev);
  
#line 6908 
  if ((int)tmp_0 != 0) {
    
#line 6909 
    ethtool_cmd_speed_set(cmd,(unsigned int)bp->line_speed);
    
#line 6910 
    cmd->duplex = bp->duplex;
    
#line 6911 
    if ((bp->phy_flags & 1U) == 0U) 
      
#line 6912 
      if ((bp->phy_flags & 16384U) != 0U) 
#line 6913 
                                          cmd->eth_tp_mdix = (unsigned char)2U; else 
                                                                    
#line 6915 
                                                                    cmd->eth_tp_mdix = (unsigned char)1U;
    else ;
  }
  else {
    
#line 6919 
    ethtool_cmd_speed_set(cmd,4294967295U);
    
#line 6920 
    cmd->duplex = (unsigned char)255U;
  }
  
#line 6922 
  ldv_spin_unlock_bh_124(& bp->phy_lock);
  
#line 6924 
  cmd->transceiver = (unsigned char)0U;
  
#line 6925 
  cmd->phy_address = (unsigned char)bp->phy_addr;
  
#line 6927 
  __retres = 0;
  
#line 6927 
  return __retres;
}


#line 6931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_settings(struct net_device *dev, struct ethtool_cmd *cmd)
{
  int tmp_1;
  bool tmp_0;
  bool tmp_5;
  
#line 6933 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 6934 
  u8 autoneg = bp->autoneg;
  
#line 6935 
  u8 req_duplex = bp->req_duplex;
  
#line 6936 
  u16 req_line_speed = bp->req_line_speed;
  
#line 6937 
  u32 advertising = bp->advertising;
  
#line 6938 
  int err = -22;
  
#line 6940 
  ldv_spin_lock_bh_125(& bp->phy_lock);
  
#line 6942 
  if ((unsigned int)cmd->port != 0U && (unsigned int)cmd->port != 3U) 
    
#line 6943 
    goto err_out_unlock; else ;
  
#line 6945 
  if ((int)cmd->port != (int)bp->phy_port && (bp->phy_flags & 2048U) == 0U) 
    
#line 6947 
    goto err_out_unlock; else ;
  
#line 6952 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 6952 
  if (tmp_0) 
#line 6952 
             tmp_1 = 0; else 
#line 6952 
                             tmp_1 = 1;
  
#line 6952 
  if (tmp_1) {
    
#line 6952 
    if ((int)cmd->port != (int)bp->phy_port) 
#line 6953 
                                             goto err_out_unlock; else ;
  }
  else ;
  
#line 6955 
  if ((unsigned int)cmd->autoneg == 1U) {
    
#line 6956 
    autoneg = (unsigned char)((unsigned int)autoneg | 1U);
    
#line 6958 
    advertising = cmd->advertising;
    
#line 6959 
    if ((unsigned int)cmd->port == 0U) {
      
#line 6960 
      advertising &= 47U;
      
#line 6961 
      if (advertising == 0U) 
#line 6962 
                             advertising = 47U; else ;
    }
    else {
      int tmp_2;
      
#line 6964 
      if ((bp->phy_flags & 8U) != 0U) 
#line 6964 
                                      tmp_2 = 32800; else 
#line 6964 
                                                          tmp_2 = 32;
      
#line 6964 
      advertising = (unsigned int)tmp_2 & advertising;
      
#line 6965 
      if (advertising == 0U) {
        int tmp_3;
        
#line 6966 
        if ((bp->phy_flags & 8U) != 0U) 
#line 6966 
                                        tmp_3 = 32800; else 
#line 6966 
                                                            tmp_3 = 32;
        
#line 6966 
        advertising = (unsigned int)tmp_3;
      }
      else ;
    }
    
#line 6968 
    advertising |= 64U;
  }
  else {
    
#line 6971 
    u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)cmd);
    
#line 6972 
    if ((unsigned int)cmd->port == 3U) {
      
#line 6973 
      if ((speed != 1000U && speed != 2500U) || (unsigned int)cmd->duplex != 1U) 
        
#line 6976 
        goto err_out_unlock; else ;
      
#line 6978 
      if (speed == 2500U && (bp->phy_flags & 8U) == 0U) 
#line 6980 
                                                        goto err_out_unlock; else ;
    }
    else 
      
#line 6981 
      if (speed == 1000U || speed == 2500U) 
#line 6982 
                                            goto err_out_unlock; else ;
    
#line 6984 
    autoneg = (unsigned char)((unsigned int)autoneg & 254U);
    
#line 6985 
    req_line_speed = (unsigned short)speed;
    
#line 6986 
    req_duplex = cmd->duplex;
    
#line 6987 
    advertising = 0U;
  }
  
#line 6990 
  bp->autoneg = autoneg;
  
#line 6991 
  bp->advertising = advertising;
  
#line 6992 
  bp->req_line_speed = req_line_speed;
  
#line 6993 
  bp->req_duplex = req_duplex;
  
#line 6995 
  err = 0;
  
#line 6999 
  tmp_5 = netif_running((struct net_device const *)dev);
  
#line 6999 
  if ((int)tmp_5 != 0) 
#line 7000 
                       err = bnx2_setup_phy(bp,(unsigned char)((int)cmd->port)); else ;
  err_out_unlock: 
#line 7002 
  ;
  
#line 7003 
  ldv_spin_unlock_bh_126(& bp->phy_lock);
  
#line 7005 
  return err;
}


#line 7009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 7011 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7013 
  strlcpy((char *)(& info->driver),"bnx2",32UL);
  
#line 7014 
  strlcpy((char *)(& info->version),"2.2.6",32UL);
  
#line 7015 
  tmp_0 = pci_name((struct pci_dev const *)bp->pdev);
  
#line 7015 
  ;
  
#line 7015 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 7016 
  strlcpy((char *)(& info->fw_version),(char const *)(& bp->fw_version),32UL);
  
#line 7017 
  return;
}


#line 7022  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 7024 
  __retres = 32768;
  
#line 7024 
  return __retres;
}


#line 7028  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *_p)
{
  u32 i;
  u32 offset;
  int tmp_1;
  bool tmp_0;
  u32 *tmp_2;
  
#line 7030 
  u32 *p = (u32 *)_p;
  
#line 7031 
  u8 *orig_p = (u8 *)_p;
  
#line 7032 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7033 
  u32 const reg_boundaries[87U] = {0U, 152U, 1024U, 1116U, 2048U, 2176U, 3072U, 3088U, 3120U, 3336U, 4096U, 4124U, 4160U, 4168U, 4224U, 4260U, 5120U, 5264U, 5272U, 5360U, 5376U, 5468U, 5504U, 5596U, 5632U, 5720U, 5760U, 5848U, 6144U, 6176U, 6208U, 6228U, 6272U, 6292U, 6400U, 6532U, 7168U, 7180U, 7232U, 7252U, 7296U, 7316U, 7424U, 7556U, 8192U, 8240U, 9152U, 9216U, 10240U, 10272U, 10288U, 10320U, 11072U, 11280U, 12224U, 12376U, 15360U, 15508U, 16384U, 16400U, 16512U, 16528U, 17344U, 17496U, 19456U, 19480U, 19520U, 19540U, 20416U, 20496U, 21440U, 21572U, 23552U, 23576U, 23680U, 23696U, 24512U, 24576U, 25600U, 25640U, 26624U, 26696U, 26700U, 26720U, 26760U, 26896U, 32768U};
  
#line 7058 
  regs->version = 0U;
  
#line 7060 
  memset((void *)p,0,32768UL);
  
#line 7062 
  tmp_0 = netif_running((struct net_device const *)bp->dev);
  
#line 7062 
  if (tmp_0) 
#line 7062 
             tmp_1 = 0; else 
#line 7062 
                             tmp_1 = 1;
  
#line 7062 
  if (tmp_1) 
#line 7063 
             goto return_label; else ;
  
#line 7065 
  i = 0U;
  
#line 7066 
  offset = reg_boundaries[0];
  
#line 7067 
  p += offset;
  
#line 7068 
  goto ldv_58440;
  ldv_58439: 
#line 7069 
  ;
  
#line 7069 
  tmp_2 = p;
  
#line 7069 
  p += 1;
  
#line 7069 
  *tmp_2 = readl((void const volatile *)(bp->regview + offset));
  
#line 7070 
  offset += 4U;
  
#line 7071 
  if (reg_boundaries[i + 1U] == offset) {
    
#line 7072 
    offset = reg_boundaries[i + 2U];
    
#line 7073 
    p = (u32 *)(orig_p + offset);
    
#line 7074 
    i += 2U;
  }
  else ;
  ldv_58440: 
#line 7076 
  ;
  
#line 7068 
  if (offset <= 32767U) 
#line 7070 
                        goto ldv_58439; else 
#line 7073 
                                             goto ldv_58441;
  ldv_58441: 
#line 7074 
  ;
  return_label: 
#line 7075 
                return;
}


#line 7080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  
#line 7082 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7084 
  if ((bp->flags & 8U) != 0U) {
    
#line 7085 
    wol->supported = 0U;
    
#line 7086 
    wol->wolopts = 0U;
  }
  else {
    
#line 7089 
    wol->supported = 32U;
    
#line 7090 
    if ((unsigned int)bp->wol != 0U) 
#line 7091 
                                     wol->wolopts = 32U; else 
#line 7093 
                                                              wol->wolopts = 0U;
  }
  
#line 7095 
  memset((void *)(& wol->sopass),0,6UL);
  
#line 7096 
  return;
}


#line 7099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 7101 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7103 
  if ((wol->wolopts & 4294967263U) != 0U) {
    
#line 7104 
    __retres = -22;
    
#line 7104 
    goto return_label;
  }
  else ;
  
#line 7106 
  if ((wol->wolopts & 32U) != 0U) {
    
#line 7107 
    if ((bp->flags & 8U) != 0U) {
      
#line 7108 
      __retres = -22;
      
#line 7108 
      goto return_label;
    }
    else ;
    
#line 7110 
    bp->wol = (unsigned char)1U;
  }
  else 
#line 7113 
       bp->wol = (unsigned char)0U;
  
#line 7116 
  device_set_wakeup_enable(& (bp->pdev)->dev,(_Bool)((unsigned int)bp->wol != 0U));
  
#line 7118 
  __retres = 0;
  return_label: 
#line 7118 
                return __retres;
}


#line 7122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_nway_reset(struct net_device *dev)
{
  int __retres;
  u32 bmcr;
  int tmp_1;
  bool tmp_0;
  
#line 7124 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7127 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 7127 
  if (tmp_0) 
#line 7127 
             tmp_1 = 0; else 
#line 7127 
                             tmp_1 = 1;
  
#line 7127 
  if (tmp_1) {
    
#line 7128 
    __retres = -11;
    
#line 7128 
    goto return_label;
  }
  else ;
  
#line 7130 
  if (((int)bp->autoneg & 1) == 0) {
    
#line 7131 
    __retres = -22;
    
#line 7131 
    goto return_label;
  }
  else ;
  
#line 7134 
  ldv_spin_lock_bh_127(& bp->phy_lock);
  
#line 7136 
  if ((bp->phy_flags & 2048U) != 0U) {
    int rc;
    
#line 7139 
    rc = bnx2_setup_remote_phy(bp,(unsigned char)((int)bp->phy_port));
    
#line 7140 
    ldv_spin_unlock_bh_128(& bp->phy_lock);
    
#line 7141 
    __retres = rc;
    
#line 7141 
    goto return_label;
  }
  else ;
  
#line 7145 
  if ((bp->phy_flags & 1U) != 0U) {
    
#line 7146 
    bnx2_write_phy(bp,bp->mii_bmcr,16384U);
    
#line 7147 
    ldv_spin_unlock_bh_129(& bp->phy_lock);
    
#line 7149 
    msleep(20U);
    
#line 7151 
    ldv_spin_lock_bh_130(& bp->phy_lock);
    
#line 7153 
    bp->current_interval = 83U;
    
#line 7154 
    bp->serdes_an_pending = (unsigned char)1U;
    
#line 7155 
    ldv_mod_timer_131(& bp->timer,(unsigned long)bp->current_interval + jiffies);
  }
  else ;
  
#line 7158 
  bnx2_read_phy(bp,bp->mii_bmcr,& bmcr);
  
#line 7159 
  bmcr &= 4294950911U;
  
#line 7160 
  bnx2_write_phy(bp,bp->mii_bmcr,bmcr | 4608U);
  
#line 7162 
  ldv_spin_unlock_bh_132(& bp->phy_lock);
  
#line 7164 
  __retres = 0;
  return_label: 
#line 7164 
                return __retres;
}


#line 7168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u32 bnx2_get_link(struct net_device *dev)
{
  u32 __retres;
  
#line 7170 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7172 
  __retres = (unsigned int)bp->link_up;
  
#line 7172 
  return __retres;
}


#line 7176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_get_eeprom_len(struct net_device *dev)
{
  int __retres;
  
#line 7178 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7180 
  if (bp->flash_info == (struct flash_spec const *)0) {
    
#line 7181 
    __retres = 0;
    
#line 7181 
    goto return_label;
  }
  else ;
  
#line 7183 
  __retres = (int)bp->flash_size;
  return_label: 
#line 7183 
                return __retres;
}


#line 7187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *eebuf)
{
  int rc;
  
#line 7190 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7195 
  rc = bnx2_nvram_read(bp,eeprom->offset,eebuf,(int)eeprom->len);
  
#line 7197 
  return rc;
}


#line 7201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *eebuf)
{
  int rc;
  
#line 7204 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7209 
  rc = bnx2_nvram_write(bp,eeprom->offset,eebuf,(int)eeprom->len);
  
#line 7211 
  return rc;
}


#line 7215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_get_coalesce(struct net_device *dev, struct ethtool_coalesce *coal)
{
  int __retres;
  
#line 7217 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7219 
  memset((void *)coal,0,92UL);
  
#line 7221 
  coal->rx_coalesce_usecs = (unsigned int)bp->rx_ticks;
  
#line 7222 
  coal->rx_max_coalesced_frames = (unsigned int)bp->rx_quick_cons_trip;
  
#line 7223 
  coal->rx_coalesce_usecs_irq = (unsigned int)bp->rx_ticks_int;
  
#line 7224 
  coal->rx_max_coalesced_frames_irq = (unsigned int)bp->rx_quick_cons_trip_int;
  
#line 7226 
  coal->tx_coalesce_usecs = (unsigned int)bp->tx_ticks;
  
#line 7227 
  coal->tx_max_coalesced_frames = (unsigned int)bp->tx_quick_cons_trip;
  
#line 7228 
  coal->tx_coalesce_usecs_irq = (unsigned int)bp->tx_ticks_int;
  
#line 7229 
  coal->tx_max_coalesced_frames_irq = (unsigned int)bp->tx_quick_cons_trip_int;
  
#line 7231 
  coal->stats_block_coalesce_usecs = bp->stats_ticks;
  
#line 7233 
  __retres = 0;
  
#line 7233 
  return __retres;
}


#line 7237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_coalesce(struct net_device *dev, struct ethtool_coalesce *coal)
{
  int __retres;
  bool tmp_0;
  
#line 7239 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7241 
  bp->rx_ticks = (unsigned short)coal->rx_coalesce_usecs;
  
#line 7242 
  if ((unsigned int)bp->rx_ticks > 1023U) 
#line 7242 
                                          bp->rx_ticks = (unsigned short)1023U; else ;
  
#line 7244 
  bp->rx_quick_cons_trip = (unsigned short)coal->rx_max_coalesced_frames;
  
#line 7245 
  if ((unsigned int)bp->rx_quick_cons_trip > 255U) 
#line 7245 
                                                   bp->rx_quick_cons_trip = (unsigned short)255U; else ;
  
#line 7247 
  bp->rx_ticks_int = (unsigned short)coal->rx_coalesce_usecs_irq;
  
#line 7248 
  if ((unsigned int)bp->rx_ticks_int > 1023U) 
#line 7248 
                                              bp->rx_ticks_int = (unsigned short)1023U; else ;
  
#line 7250 
  bp->rx_quick_cons_trip_int = (unsigned short)coal->rx_max_coalesced_frames_irq;
  
#line 7251 
  if ((unsigned int)bp->rx_quick_cons_trip_int > 255U) 
#line 7252 
                                                       bp->rx_quick_cons_trip_int = (unsigned short)255U; else ;
  
#line 7254 
  bp->tx_ticks = (unsigned short)coal->tx_coalesce_usecs;
  
#line 7255 
  if ((unsigned int)bp->tx_ticks > 1023U) 
#line 7255 
                                          bp->tx_ticks = (unsigned short)1023U; else ;
  
#line 7257 
  bp->tx_quick_cons_trip = (unsigned short)coal->tx_max_coalesced_frames;
  
#line 7258 
  if ((unsigned int)bp->tx_quick_cons_trip > 255U) 
#line 7258 
                                                   bp->tx_quick_cons_trip = (unsigned short)255U; else ;
  
#line 7260 
  bp->tx_ticks_int = (unsigned short)coal->tx_coalesce_usecs_irq;
  
#line 7261 
  if ((unsigned int)bp->tx_ticks_int > 1023U) 
#line 7261 
                                              bp->tx_ticks_int = (unsigned short)1023U; else ;
  
#line 7263 
  bp->tx_quick_cons_trip_int = (unsigned short)coal->tx_max_coalesced_frames_irq;
  
#line 7264 
  if ((unsigned int)bp->tx_quick_cons_trip_int > 255U) 
#line 7264 
                                                       bp->tx_quick_cons_trip_int = (unsigned short)255U; else ;
  
#line 7267 
  bp->stats_ticks = coal->stats_block_coalesce_usecs;
  
#line 7268 
  if ((bp->flags & 8192U) != 0U) {
    
#line 7269 
    if (bp->stats_ticks != 0U && bp->stats_ticks != 1000000U) 
#line 7270 
                                                              bp->stats_ticks = 1000000U; else ;
  }
  else ;
  
#line 7272 
  if (bp->stats_ticks > 16776960U) 
#line 7273 
                                   bp->stats_ticks = 16776960U; else ;
  
#line 7274 
  bp->stats_ticks &= 16776960U;
  
#line 7276 
  tmp_0 = netif_running((struct net_device const *)bp->dev);
  
#line 7276 
  if ((int)tmp_0 != 0) {
    
#line 7277 
    bnx2_netif_stop(bp,(_Bool)1);
    
#line 7278 
    bnx2_init_nic(bp,0);
    
#line 7279 
    bnx2_netif_start(bp,(_Bool)1);
  }
  else ;
  
#line 7282 
  __retres = 0;
  
#line 7282 
  return __retres;
}


#line 7286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  
#line 7288 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7290 
  ering->rx_max_pending = 2040U;
  
#line 7291 
  ering->rx_jumbo_max_pending = 8160U;
  
#line 7293 
  ering->rx_pending = (unsigned int)bp->rx_ring_size;
  
#line 7294 
  ering->rx_jumbo_pending = (unsigned int)bp->rx_pg_ring_size;
  
#line 7296 
  ering->tx_max_pending = 255U;
  
#line 7297 
  ering->tx_pending = (unsigned int)bp->tx_ring_size;
  
#line 7298 
  return;
}


#line 7301  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_change_ring_size(struct bnx2 *bp, u32 rx, u32 tx, bool reset_irq)
{
  int __retres;
  bool tmp;
  bool tmp_0;
  
#line 7303 
  tmp = netif_running((struct net_device const *)bp->dev);
  
#line 7303 
  if ((int)tmp != 0) {
    
#line 7305 
    bnx2_save_stats(bp);
    
#line 7307 
    bnx2_netif_stop(bp,(_Bool)1);
    
#line 7308 
    bnx2_reset_chip(bp,16777216U);
    
#line 7309 
    if ((int)reset_irq != 0) {
      
#line 7310 
      bnx2_free_irq(bp);
      
#line 7311 
      bnx2_del_napi(bp);
    }
    else 
#line 7313 
         __bnx2_free_irq(bp);
    
#line 7315 
    bnx2_free_skbs(bp);
    
#line 7316 
    bnx2_free_mem(bp);
  }
  else ;
  
#line 7319 
  bnx2_set_rx_ring_size(bp,rx);
  
#line 7320 
  bp->tx_ring_size = (int)tx;
  
#line 7322 
  tmp_0 = netif_running((struct net_device const *)bp->dev);
  
#line 7322 
  if ((int)tmp_0 != 0) {
    
#line 7323 
    int rc = 0;
    
#line 7325 
    if ((int)reset_irq != 0) {
      
#line 7326 
      rc = bnx2_setup_int_mode(bp,disable_msi);
      
#line 7327 
      bnx2_init_napi(bp);
    }
    else ;
    
#line 7330 
    if (rc == 0) 
#line 7331 
                 rc = bnx2_alloc_mem(bp); else ;
    
#line 7333 
    if (rc == 0) 
#line 7334 
                 rc = bnx2_request_irq(bp); else ;
    
#line 7336 
    if (rc == 0) 
#line 7337 
                 rc = bnx2_init_nic(bp,0); else ;
    
#line 7339 
    if (rc != 0) {
      
#line 7340 
      bnx2_napi_enable(bp);
      
#line 7341 
      dev_close(bp->dev);
      
#line 7342 
      __retres = rc;
      
#line 7342 
      goto return_label;
    }
    else ;
    
#line 7345 
    ldv_mutex_lock_133(& bp->cnic_lock);
    
#line 7347 
    if ((bp->cnic_eth_dev.drv_state & 1U) != 0U) 
#line 7348 
                                                 bnx2_setup_cnic_irq_info(bp); else ;
    
#line 7349 
    ldv_mutex_unlock_134(& bp->cnic_lock);
    
#line 7351 
    bnx2_netif_start(bp,(_Bool)1);
  }
  else ;
  
#line 7353 
  __retres = 0;
  return_label: 
#line 7353 
                return __retres;
}


#line 7357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_ringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  int __retres;
  int rc;
  
#line 7359 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7362 
  if ((ering->rx_pending > 2040U || ering->tx_pending > 255U) || ering->tx_pending <= 17U) {
    
#line 7366 
    __retres = -22;
    
#line 7366 
    goto return_label;
  }
  else ;
  
#line 7368 
  rc = bnx2_change_ring_size(bp,ering->rx_pending,ering->tx_pending,(_Bool)0);
  
#line 7370 
  __retres = rc;
  return_label: 
#line 7370 
                return __retres;
}


#line 7374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)
{
  
#line 7376 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7378 
  epause->autoneg = (unsigned int)(((int)bp->autoneg & 2) != 0);
  
#line 7379 
  epause->rx_pause = (unsigned int)(((int)bp->flow_ctrl & 2) != 0);
  
#line 7380 
  epause->tx_pause = (unsigned int)(((int)bp->flow_ctrl & 1) != 0);
  
#line 7381 
  return;
}


#line 7384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *epause)
{
  int __retres;
  bool tmp_0;
  
#line 7386 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7388 
  bp->req_flow_ctrl = (unsigned char)0U;
  
#line 7389 
  if (epause->rx_pause != 0U) 
#line 7390 
                              bp->req_flow_ctrl = (unsigned char)((unsigned int)bp->req_flow_ctrl | 2U); else ;
  
#line 7391 
  if (epause->tx_pause != 0U) 
#line 7392 
                              bp->req_flow_ctrl = (unsigned char)((unsigned int)bp->req_flow_ctrl | 1U); else ;
  
#line 7394 
  if (epause->autoneg != 0U) 
#line 7395 
                             bp->autoneg = (unsigned char)((unsigned int)bp->autoneg | 2U); else 
                                                                    
#line 7398 
                                                                    bp->autoneg = (unsigned char)((unsigned int)bp->autoneg & 253U);
  
#line 7401 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 7401 
  if ((int)tmp_0 != 0) {
    
#line 7402 
    ldv_spin_lock_bh_135(& bp->phy_lock);
    
#line 7403 
    bnx2_setup_phy(bp,(unsigned char)((int)bp->phy_port));
    
#line 7404 
    ldv_spin_unlock_bh_136(& bp->phy_lock);
  }
  else ;
  
#line 7407 
  __retres = 0;
  
#line 7407 
  return __retres;
}


#line 7412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct __anonstruct_bnx2_stats_str_arr_399 bnx2_stats_str_arr[47U] = {{.string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'u', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'c', (char)'a', (char)'s', (char)'t', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'a', (char)'l', (char)'i', (char)'g', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'e', (char)'x', (char)'c', (char)'e', (char)'s', (char)'s', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'l', (char)'a', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'t', (char)'o', (char)'t', (char)'a', (char)'l', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'g', (char)'m', (char)'e', (char)'n', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'u', (char)'n', (char)'d', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'2', (char)'2', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'1', (char)'5', (char)'2', (char)'3', (char)'_', (char)'t', (char)'o', (char)'_', (char)'9', (char)'0', (char)'2', (char)'2', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'4', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'6', (char)'5', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'t', (char)'o', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'t', (char)'o', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'t', (char)'o', (char)'_', (char)'1', (char)'5', (char)'2', (char)'2', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'1', (char)'5', (char)'2', (char)'3', (char)'_', (char)'t', (char)'o', (char)'_', (char)'9', (char)'0', (char)'2', (char)'2', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'x', (char)'o', (char)'n', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'x', (char)'o', (char)'f', (char)'f', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'x', (char)'o', (char)'n', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'t', (char)'x', (char)'_', (char)'x', (char)'o', (char)'f', (char)'f', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'m', (char)'a', (char)'c', (char)'_', (char)'c', (char)'t', (char)'r', (char)'l', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'l', (char)'t', (char)'e', (char)'r', (char)'e', (char)'d', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'t', (char)'q', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'s', (char)'\000'}}, {.string = {(char)'r', (char)'x', (char)'_', (char)'f', (char)'w', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'s', (char)'\000'}}};

#line 7466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static unsigned long const bnx2_stats_offset_arr[47U] = {0UL, 2UL, 4UL, 6UL, 8UL, 10UL, 12UL, 14UL, 16UL, 18UL, 20UL, 21UL, 22UL, 23UL, 24UL, 25UL, 26UL, 27UL, 28UL, 29UL, 30UL, 31UL, 32UL, 33UL, 34UL, 35UL, 36UL, 37UL, 38UL, 39UL, 40UL, 41UL, 42UL, 43UL, 44UL, 45UL, 46UL, 47UL, 48UL, 49UL, 50UL, 51UL, 53UL, 55UL, 57UL, 58UL, 80UL};

#line 7519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u8 bnx2_5706_stats_len_arr[47U] = {(unsigned char)8U, (unsigned char)0U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)4U, (unsigned char)0U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U};

#line 7527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static u8 bnx2_5708_stats_len_arr[47U] = {(unsigned char)8U, (unsigned char)0U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)8U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U, (unsigned char)4U};

#line 7539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct __anonstruct_bnx2_tests_str_arr_400 bnx2_tests_str_arr[6U] = {{.string = {(char)'r', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}}, {.string = {(char)'m', (char)'e', (char)'m', (char)'o', (char)'r', (char)'y', (char)'_', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}}, {.string = {(char)'l', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k', (char)'_', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}}, {.string = {(char)'n', (char)'v', (char)'r', (char)'a', (char)'m', (char)'_', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)'(', (char)'o', (char)'n', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}}, {.string = {(char)'i', (char)'n', (char)'t', (char)'e', (char)'r', (char)'r', (char)'u', (char)'p', (char)'t', (char)'_', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)'(', (char)'o', (char)'n', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}}, {.string = {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)'(', (char)'o', (char)'n', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}}};

#line 7549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 7551 
  switch (sset) {
    case 0: 
#line 7552 
    ;
    
#line 7553 
    __retres = 6;
    
#line 7553 
    goto return_label;
    case 1: 
#line 7554 
    ;
    
#line 7555 
    __retres = 47;
    
#line 7555 
    goto return_label;
    default: 
#line 7556 
    ;
    
#line 7557 
    __retres = -95;
    
#line 7557 
    goto return_label;
  }
  return_label: 
#line 7551 
                return __retres;
}


#line 7562  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_self_test(struct net_device *dev, struct ethtool_test *etest, u64 *buf)
{
  int tmp_6;
  int tmp_7;
  int tmp_8;
  
#line 7564 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7566 
  memset((void *)buf,0,48UL);
  
#line 7567 
  if ((etest->flags & 1U) != 0U) {
    int i;
    int tmp_0;
    int tmp_1;
    int tmp_3;
    u64 tmp_2;
    int tmp_5;
    bool tmp_4;
    
#line 7570 
    bnx2_netif_stop(bp,(_Bool)1);
    
#line 7571 
    bnx2_reset_chip(bp,117440512U);
    
#line 7572 
    bnx2_free_skbs(bp);
    
#line 7574 
    tmp_0 = bnx2_test_registers(bp);
    
#line 7574 
    if (tmp_0 != 0) {
      
#line 7575 
      *buf = 1ULL;
      
#line 7576 
      etest->flags |= 2U;
    }
    else ;
    
#line 7578 
    tmp_1 = bnx2_test_memory(bp);
    
#line 7578 
    if (tmp_1 != 0) {
      
#line 7579 
      *(buf + 1U) = 1ULL;
      
#line 7580 
      etest->flags |= 2U;
    }
    else ;
    
#line 7582 
    tmp_3 = bnx2_test_loopback(bp);
    
#line 7582 
    tmp_2 = (unsigned long long)tmp_3;
    
#line 7582 
    *(buf + 2U) = tmp_2;
    
#line 7582 
    if (tmp_2 != 0ULL) 
#line 7583 
                       etest->flags |= 2U; else ;
    
#line 7585 
    tmp_4 = netif_running((struct net_device const *)bp->dev);
    
#line 7585 
    if (tmp_4) 
#line 7585 
               tmp_5 = 0; else 
#line 7585 
                               tmp_5 = 1;
    
#line 7585 
    if (tmp_5) 
#line 7586 
               bnx2_shutdown_chip(bp);
    else {
      
#line 7588 
      bnx2_init_nic(bp,1);
      
#line 7589 
      bnx2_netif_start(bp,(_Bool)1);
    }
    
#line 7593 
    i = 0;
    
#line 7593 
    goto ldv_58555;
    ldv_58554: 
#line 7594 
    ;
    
#line 7594 
    if ((unsigned int)bp->link_up != 0U) 
#line 7595 
                                         goto ldv_58553; else ;
    
#line 7596 
    msleep_interruptible(1000U);
    
#line 7593 
    i += 1;
    ldv_58555: 
#line 7594 
    ;
    
#line 7593 
    if (i <= 6) 
#line 7595 
                goto ldv_58554; else 
#line 7598 
                                     goto ldv_58553;
    ldv_58553: 
#line 7599 
    ;
  }
  else ;
  
#line 7600 
  tmp_6 = bnx2_test_nvram(bp);
  
#line 7600 
  if (tmp_6 != 0) {
    
#line 7601 
    *(buf + 3U) = 1ULL;
    
#line 7602 
    etest->flags |= 2U;
  }
  else ;
  
#line 7604 
  tmp_7 = bnx2_test_intr(bp);
  
#line 7604 
  if (tmp_7 != 0) {
    
#line 7605 
    *(buf + 4U) = 1ULL;
    
#line 7606 
    etest->flags |= 2U;
  }
  else ;
  
#line 7609 
  tmp_8 = bnx2_test_link(bp);
  
#line 7609 
  if (tmp_8 != 0) {
    
#line 7610 
    *(buf + 5U) = 1ULL;
    
#line 7611 
    etest->flags |= 2U;
  }
  else ;
  
#line 7613 
  return;
}


#line 7617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_strings(struct net_device *dev, u32 stringset, u8 *buf)
{
  
#line 7619 
  switch (stringset) {
    case (u32)1: 
#line 7620 
    ;
    
#line 7621 
    memcpy((void *)buf,(void const *)(& bnx2_stats_str_arr),1504UL);
    
#line 7623 
    goto ldv_58562;
    case (u32)0: 
#line 7624 
    ;
    
#line 7625 
    memcpy((void *)buf,(void const *)(& bnx2_tests_str_arr),192UL);
    
#line 7627 
    goto ldv_58562;
  }
  ldv_58562: 
#line 7629 
  ;
  
#line 7630 
  return;
}


#line 7632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *buf)
{
  int i;
  
#line 7635 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7637 
  u32 *hw_stats = (u32 *)bp->stats_blk;
  
#line 7638 
  u32 *temp_stats = (u32 *)bp->temp_stats_blk;
  
#line 7639 
  u8 *stats_len_arr = (u8 *)0U;
  
#line 7641 
  if (hw_stats == (u32 *)0U) {
    
#line 7642 
    memset((void *)buf,0,376UL);
    
#line 7643 
    goto return_label;
  }
  else ;
  
#line 7646 
  if ((((bp->chip_id & 4294967280U) == 1460011008U || (bp->chip_id & 4294967280U) == 1460011024U) || (bp->chip_id & 4294967280U) == 1460011040U) || (bp->chip_id & 4294967280U) == 1460142080U) 
    
#line 7650 
    stats_len_arr = (u8 *)(& bnx2_5706_stats_len_arr); else 
#line 7652 
                                                            stats_len_arr = (u8 *)(& bnx2_5708_stats_len_arr);
  
#line 7654 
  i = 0;
  
#line 7654 
  goto ldv_58583;
  ldv_58582: 
#line 7655 
  ;
  {
    unsigned long offset;
    
#line 7657 
    if ((unsigned int)*(stats_len_arr + i) == 0U) {
      
#line 7659 
      *(buf + i) = 0ULL;
      
#line 7660 
      goto ldv_58581;
    }
    else ;
    
#line 7663 
    offset = bnx2_stats_offset_arr[i];
    
#line 7664 
    if ((unsigned int)*(stats_len_arr + i) == 4U) {
      
#line 7666 
      *(buf + i) = (unsigned long long)*(hw_stats + offset) + (unsigned long long)*(temp_stats + offset);
      
#line 7668 
      goto ldv_58581;
    }
    else ;
    
#line 7671 
    *(buf + i) = ((((unsigned long long)*(hw_stats + offset) << 32) + (unsigned long long)*(hw_stats + (offset + (unsigned long)1U))) + ((unsigned long long)*(temp_stats + offset) << 32)) + (unsigned long long)*(temp_stats + (offset + (unsigned long)1U));
  }
  ldv_58581: 
#line 7676 
  ;
  
#line 7654 
  i += 1;
  ldv_58583: 
#line 7655 
  ;
  
#line 7654 
  if ((unsigned int)i <= 46U) 
#line 7656 
                              goto ldv_58582; else 
#line 7659 
                                                   goto ldv_58584;
  ldv_58584: 
#line 7660 
  ;
  return_label: 
#line 7661 
                return;
}


#line 7679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_phys_id(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  
#line 7681 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7683 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 7684 
    ;
    
#line 7685 
    bp->leds_save = readl((void const volatile *)(bp->regview + 2052U));
    
#line 7686 
    writel(0U,(void volatile *)(bp->regview + 2052U));
    
#line 7687 
    __retres = 1;
    
#line 7687 
    goto return_label;
    case (unsigned int)2: 
#line 7689 
    ;
    
#line 7690 
    writel(95U,(void volatile *)(bp->regview + 5132U));
    
#line 7696 
    goto ldv_58592;
    case (unsigned int)3: 
#line 7698 
    ;
    
#line 7699 
    writel(1U,(void volatile *)(bp->regview + 5132U));
    
#line 7700 
    goto ldv_58592;
    case (unsigned int)0: 
#line 7702 
    ;
    
#line 7703 
    writel(0U,(void volatile *)(bp->regview + 5132U));
    
#line 7704 
    writel(bp->leds_save,(void volatile *)(bp->regview + 2052U));
    
#line 7705 
    goto ldv_58592;
  }
  ldv_58592: 
#line 7708 
  ;
  
#line 7708 
  __retres = 0;
  return_label: 
#line 7708 
                return __retres;
}


#line 7712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 7714 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7717 
  if ((features & 128ULL) != 0ULL) 
#line 7718 
                                   dev->vlan_features |= dev->hw_features & 1638400ULL; else 
                                                                    
#line 7720 
                                                                    dev->vlan_features &= 18446744073707913215ULL;
  
#line 7722 
  if (((features & 256ULL) != 0ULL) ^ (((long)bp->rx_mode & 1024L) != 0L)) {
    bool tmp_0;
    
#line 7723 
    tmp_0 = netif_running((struct net_device const *)dev);
    
#line 7723 
    if ((int)tmp_0 != 0) {
      
#line 7725 
      bnx2_netif_stop(bp,(_Bool)0);
      
#line 7726 
      dev->features = features;
      
#line 7727 
      bnx2_set_rx_mode(dev);
      
#line 7728 
      bnx2_fw_sync(bp,218103808U,0,1);
      
#line 7729 
      bnx2_netif_start(bp,(_Bool)0);
      
#line 7730 
      __retres = 1;
      
#line 7730 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 7733 
  __retres = 0;
  return_label: 
#line 7733 
                return __retres;
}


#line 7736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_channels(struct net_device *dev, struct ethtool_channels *channels)
{
  
#line 7739 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7740 
  u32 max_rx_rings = 1U;
  
#line 7741 
  u32 max_tx_rings = 1U;
  
#line 7743 
  if ((bp->flags & 4U) != 0U && disable_msi == 0) {
    
#line 7744 
    max_rx_rings = 8U;
    
#line 7745 
    max_tx_rings = 8U;
  }
  else ;
  
#line 7748 
  channels->max_rx = max_rx_rings;
  
#line 7749 
  channels->max_tx = max_tx_rings;
  
#line 7750 
  channels->max_other = 0U;
  
#line 7751 
  channels->max_combined = 0U;
  
#line 7752 
  channels->rx_count = (unsigned int)bp->num_rx_rings;
  
#line 7753 
  channels->tx_count = (unsigned int)bp->num_tx_rings;
  
#line 7754 
  channels->other_count = 0U;
  
#line 7755 
  channels->combined_count = 0U;
  
#line 7756 
  return;
}


#line 7758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_set_channels(struct net_device *dev, struct ethtool_channels *channels)
{
  int __retres;
  bool tmp_0;
  
#line 7761 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7762 
  u32 max_rx_rings = 1U;
  
#line 7763 
  u32 max_tx_rings = 1U;
  
#line 7764 
  int rc = 0;
  
#line 7766 
  if ((bp->flags & 4U) != 0U && disable_msi == 0) {
    
#line 7767 
    max_rx_rings = 8U;
    
#line 7768 
    max_tx_rings = 8U;
  }
  else ;
  
#line 7770 
  if (channels->rx_count > max_rx_rings || channels->tx_count > max_tx_rings) {
    
#line 7772 
    __retres = -22;
    
#line 7772 
    goto return_label;
  }
  else ;
  
#line 7774 
  bp->num_req_rx_rings = (int)channels->rx_count;
  
#line 7775 
  bp->num_req_tx_rings = (int)channels->tx_count;
  
#line 7777 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 7777 
  if ((int)tmp_0 != 0) 
#line 7778 
                       rc = bnx2_change_ring_size(bp,(unsigned int)bp->rx_ring_size,(unsigned int)bp->tx_ring_size,(_Bool)1); else ;
  
#line 7781 
  __retres = rc;
  return_label: 
#line 7781 
                return __retres;
}


#line 7784  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct ethtool_ops const bnx2_ethtool_ops = {.get_settings = & bnx2_get_settings, .set_settings = & bnx2_set_settings, .get_drvinfo = & bnx2_get_drvinfo, .get_regs_len = & bnx2_get_regs_len, .get_regs = & bnx2_get_regs, .get_wol = & bnx2_get_wol, .set_wol = & bnx2_set_wol, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = & bnx2_nway_reset, .get_link = & bnx2_get_link, .get_eeprom_len = & bnx2_get_eeprom_len, .get_eeprom = & bnx2_get_eeprom, .set_eeprom = & bnx2_set_eeprom, .get_coalesce = & bnx2_get_coalesce, .set_coalesce = & bnx2_set_coalesce, .get_ringparam = & bnx2_get_ringparam, .set_ringparam = & bnx2_set_ringparam, .get_pauseparam = & bnx2_get_pauseparam, .set_pauseparam = & bnx2_set_pauseparam, .self_test = & bnx2_self_test, .get_strings = & bnx2_get_strings, .set_phys_id = & bnx2_set_phys_id, .get_ethtool_stats = & bnx2_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & bnx2_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = & bnx2_get_channels, .set_channels = & bnx2_set_channels, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 7814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
{
  int __retres;
  int err;
  
#line 7816 
  struct mii_ioctl_data *data = if_mii(ifr);
  
#line 7817 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7820 
  switch (cmd) {
    int tmp_4;
    bool tmp_3;
    case 35143: 
#line 7821 
    ;
    
#line 7822 
    data->phy_id = (unsigned short)bp->phy_addr;
    case 35144: 
#line 7825 
    ;
    {
      u32 mii_regval;
      int tmp_2;
      bool tmp_1;
      
#line 7828 
      if ((bp->phy_flags & 2048U) != 0U) {
        
#line 7829 
        __retres = -95;
        
#line 7829 
        goto return_label;
      }
      else ;
      
#line 7831 
      tmp_1 = netif_running((struct net_device const *)dev);
      
#line 7831 
      if (tmp_1) 
#line 7831 
                 tmp_2 = 0; else 
#line 7831 
                                 tmp_2 = 1;
      
#line 7831 
      if (tmp_2) {
        
#line 7832 
        __retres = -11;
        
#line 7832 
        goto return_label;
      }
      else ;
      
#line 7834 
      ldv_spin_lock_bh_137(& bp->phy_lock);
      
#line 7835 
      err = bnx2_read_phy(bp,(unsigned int)data->reg_num & 31U,& mii_regval);
      
#line 7836 
      ldv_spin_unlock_bh_138(& bp->phy_lock);
      
#line 7838 
      data->val_out = (unsigned short)mii_regval;
      
#line 7840 
      __retres = err;
      
#line 7840 
      goto return_label;
    }
    case 35145: 
#line 7843 
    ;
    
#line 7844 
    if ((bp->phy_flags & 2048U) != 0U) {
      
#line 7845 
      __retres = -95;
      
#line 7845 
      goto return_label;
    }
    else ;
    
#line 7847 
    tmp_3 = netif_running((struct net_device const *)dev);
    
#line 7847 
    if (tmp_3) 
#line 7847 
               tmp_4 = 0; else 
#line 7847 
                               tmp_4 = 1;
    
#line 7847 
    if (tmp_4) {
      
#line 7848 
      __retres = -11;
      
#line 7848 
      goto return_label;
    }
    else ;
    
#line 7850 
    ldv_spin_lock_bh_139(& bp->phy_lock);
    
#line 7851 
    err = bnx2_write_phy(bp,(unsigned int)data->reg_num & 31U,(unsigned int)data->val_in);
    
#line 7852 
    ldv_spin_unlock_bh_140(& bp->phy_lock);
    
#line 7854 
    __retres = err;
    
#line 7854 
    goto return_label;
    default: 
#line 7856 
    ;
    
#line 7858 
    goto ldv_58629;
  }
  ldv_58629: 
#line 7860 
  ;
  
#line 7860 
  __retres = -95;
  return_label: 
#line 7860 
                return __retres;
}


#line 7865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_change_mac_addr(struct net_device *dev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  bool tmp_2;
  
#line 7867 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 7868 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7870 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 7870 
  if (tmp_0) 
#line 7870 
             tmp_1 = 0; else 
#line 7870 
                             tmp_1 = 1;
  
#line 7870 
  if (tmp_1) {
    
#line 7871 
    __retres = -99;
    
#line 7871 
    goto return_label;
  }
  else ;
  
#line 7873 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 7874 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 7874 
  if ((int)tmp_2 != 0) 
#line 7875 
                       bnx2_set_mac_addr(bp,(bp->dev)->dev_addr,0U); else ;
  
#line 7877 
  __retres = 0;
  return_label: 
#line 7877 
                return __retres;
}


#line 7882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  int tmp_0;
  
#line 7884 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7886 
  if ((unsigned int)new_mtu + 4294967250U > 8954U) {
    
#line 7888 
    __retres = -22;
    
#line 7888 
    goto return_label;
  }
  else ;
  
#line 7890 
  dev->mtu = (unsigned int)new_mtu;
  
#line 7891 
  tmp_0 = bnx2_change_ring_size(bp,(unsigned int)bp->rx_ring_size,(unsigned int)bp->tx_ring_size,(_Bool)0);
  
#line 7891 
  __retres = tmp_0;
  return_label: 
#line 7891 
                return __retres;
}


#line 7897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void poll_bnx2(struct net_device *dev)
{
  int i;
  
#line 7899 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 7902 
  i = 0;
  
#line 7902 
  goto ldv_58648;
  ldv_58647: 
#line 7903 
  ;
  {
    
#line 7903 
    struct bnx2_irq *irq = & bp->irq_tbl[i];
    
#line 7905 
    disable_irq(irq->vector);
    
#line 7906 
    (*(irq->handler))((int)irq->vector,(void *)(& bp->bnx2_napi[i]));
    
#line 7907 
    enable_irq(irq->vector);
  }
  
#line 7902 
  i += 1;
  ldv_58648: 
#line 7903 
  ;
  
#line 7902 
  if (bp->irq_nvecs > i) 
#line 7904 
                         goto ldv_58647; else 
#line 7907 
                                              goto ldv_58649;
  ldv_58649: 
#line 7908 
  ;
  
#line 7909 
  return;
}


#line 7913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_5709_media(struct bnx2 *bp)
{
  u32 strap;
  
#line 7915 
  u32 val = readl((void const volatile *)(bp->regview + 2284U));
  
#line 7916 
  u32 bond_id = val & 255U;
  
#line 7919 
  if (bond_id == 3U) 
#line 7920 
                     goto return_label;
  else 
    
#line 7921 
    if (bond_id == 12U) {
      
#line 7922 
      bp->phy_flags |= 1U;
      
#line 7923 
      goto return_label;
    }
    else ;
  
#line 7926 
  if (((long)val & 33554432L) != 0L) 
#line 7927 
                                     strap = (unsigned int)((long)val >> 21) & 7U; else 
                                                                    
#line 7929 
                                                                    strap = (unsigned int)((long)val >> 8) & 7U;
  
#line 7931 
  if ((unsigned int)bp->func == 0U) 
    
#line 7932 
    switch (strap) {
      case (u32)4: 
#line 7933 
      ;
      case (u32)5: 
#line 7934 
      ;
      case (u32)6: 
#line 7935 
      ;
      
#line 7936 
      bp->phy_flags |= 1U;
      
#line 7937 
      goto return_label;
    }
  else 
    
#line 7940 
    switch (strap) {
      case (u32)1: 
#line 7941 
      ;
      case (u32)2: 
#line 7942 
      ;
      case (u32)4: 
#line 7943 
      ;
      
#line 7944 
      bp->phy_flags |= 1U;
      
#line 7945 
      goto return_label;
    }
  return_label: 
#line 7947 
                return;
}


#line 7951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_get_pci_speed(struct bnx2 *bp)
{
  u32 reg;
  
#line 7955 
  reg = readl((void const volatile *)(bp->regview + 108U));
  
#line 7956 
  if (((long)reg & 8L) != 0L) {
    u32 clkreg;
    
#line 7959 
    bp->flags |= 1U;
    
#line 7961 
    clkreg = readl((void const volatile *)(bp->regview + 112U));
    
#line 7963 
    clkreg &= 15U;
    
#line 7964 
    switch (clkreg) {
      case (u32)7: 
#line 7965 
      ;
      
#line 7966 
      bp->bus_speed_mhz = (unsigned short)133U;
      
#line 7967 
      goto ldv_58668;
      case (u32)6: 
#line 7969 
      ;
      
#line 7970 
      bp->bus_speed_mhz = (unsigned short)100U;
      
#line 7971 
      goto ldv_58668;
      case (u32)4: 
#line 7973 
      ;
      case (u32)5: 
#line 7974 
      ;
      
#line 7975 
      bp->bus_speed_mhz = (unsigned short)66U;
      
#line 7976 
      goto ldv_58668;
      case (u32)2: 
#line 7978 
      ;
      case (u32)3: 
#line 7979 
      ;
      
#line 7980 
      bp->bus_speed_mhz = (unsigned short)50U;
      
#line 7981 
      goto ldv_58668;
      case (u32)15: 
#line 7983 
      ;
      case (u32)0: 
#line 7984 
      ;
      case (u32)1: 
#line 7985 
      ;
      
#line 7986 
      bp->bus_speed_mhz = (unsigned short)33U;
      
#line 7987 
      goto ldv_58668;
    }
    ldv_58668: 
#line 7989 
    ;
  }
  else 
    
#line 7991 
    if (((long)reg & 4L) != 0L) 
#line 7992 
                                bp->bus_speed_mhz = (unsigned short)66U; else 
                                                                    
#line 7994 
                                                                    bp->bus_speed_mhz = (unsigned short)33U;
  
#line 7997 
  if (((long)reg & 2L) != 0L) 
#line 7998 
                              bp->flags |= 2U; else ;
  
#line 7999 
  return;
}


#line 8003  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_read_vpd_fw_ver(struct bnx2 *bp)
{
  int rc;
  int i;
  int j;
  u8 *data;
  unsigned int block_end;
  unsigned int rosize;
  unsigned int len;
  u16 tmp_0;
  u8 tmp_1;
  u8 tmp_3;
  
#line 8013 
  data = (u8 *)kmalloc(256UL,208U);
  
#line 8014 
  if (data == (u8 *)0U) 
#line 8015 
                        goto return_label; else ;
  
#line 8017 
  rc = bnx2_nvram_read(bp,768U,data + 128U,128);
  
#line 8019 
  if (rc != 0) 
#line 8020 
               goto vpd_done; else ;
  
#line 8022 
  i = 0;
  
#line 8022 
  goto ldv_58689;
  ldv_58688: 
#line 8023 
  ;
  
#line 8023 
  *(data + i) = *(data + ((unsigned int)(i + 128) + 3U));
  
#line 8024 
  *(data + ((unsigned int)i + 1U)) = *(data + ((unsigned int)(i + 128) + 2U));
  
#line 8025 
  *(data + ((unsigned int)i + 2U)) = *(data + ((unsigned int)(i + 128) + 1U));
  
#line 8026 
  *(data + ((unsigned int)i + 3U)) = *(data + ((unsigned int)i + 128U));
  
#line 8022 
  i += 4;
  ldv_58689: 
#line 8023 
  ;
  
#line 8022 
  if (i <= 127) 
#line 8024 
                goto ldv_58688; else 
#line 8027 
                                     goto ldv_58690;
  ldv_58690: 
#line 8028 
  ;
  
#line 8029 
  i = pci_vpd_find_tag((u8 const *)data,0U,128U,(unsigned char)144);
  
#line 8030 
  if (i < 0) 
#line 8031 
             goto vpd_done; else ;
  
#line 8033 
  tmp_0 = pci_vpd_lrdt_size((u8 const *)(data + i));
  
#line 8033 
  rosize = (unsigned int)tmp_0;
  
#line 8034 
  i += 3;
  
#line 8035 
  block_end = (unsigned int)i + rosize;
  
#line 8037 
  if (block_end > 128U) 
#line 8038 
                        goto vpd_done; else ;
  
#line 8040 
  j = pci_vpd_find_info_keyword((u8 const *)data,(unsigned int)i,rosize,"MN");
  
#line 8042 
  if (j < 0) 
#line 8043 
             goto vpd_done; else ;
  
#line 8045 
  tmp_1 = pci_vpd_info_field_size((u8 const *)(data + j));
  
#line 8045 
  len = (unsigned int)tmp_1;
  
#line 8047 
  j += 3;
  
#line 8048 
  if ((unsigned int)j + len > block_end || len != 4U) 
#line 8050 
                                                      goto vpd_done;
  else {
    int tmp_2;
    
#line 8048 
    tmp_2 = memcmp((void const *)(data + j),(void const *)"1028",4UL);
    
#line 8048 
    if (tmp_2 != 0) 
#line 8050 
                    goto vpd_done; else ;
  }
  
#line 8052 
  j = pci_vpd_find_info_keyword((u8 const *)data,(unsigned int)i,rosize,"V0");
  
#line 8054 
  if (j < 0) 
#line 8055 
             goto vpd_done; else ;
  
#line 8057 
  tmp_3 = pci_vpd_info_field_size((u8 const *)(data + j));
  
#line 8057 
  len = (unsigned int)tmp_3;
  
#line 8059 
  j += 3;
  
#line 8060 
  if ((unsigned int)j + len > block_end || len > 30U) 
#line 8061 
                                                      goto vpd_done; else ;
  
#line 8063 
  memcpy((void *)(& bp->fw_version),(void const *)(data + j),(unsigned long)len);
  
#line 8064 
  bp->fw_version[len] = (char)32;
  vpd_done: 
#line 8066 
  ;
  
#line 8067 
  kfree((void const *)data);
  return_label: 
#line 8068 
                return;
}


#line 8071  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_board(struct pci_dev *pdev, struct net_device *dev)
{
  int __retres;
  struct bnx2 *bp;
  int rc;
  int i;
  int j;
  u32 reg;
  u64 dma_mask;
  u64 persist_dma_mask;
  int err;
  int tmp_3;
  u32 tmp_4;
  size_t tmp_5;
  u32 tmp_16;
  
#line 8079 
  dev->dev.parent = & pdev->dev;
  
#line 8080 
  bp = (struct bnx2 *)netdev_priv((struct net_device const *)dev);
  
#line 8082 
  bp->flags = 0U;
  
#line 8083 
  bp->phy_flags = 0U;
  
#line 8086 
  bp->temp_stats_blk = (struct statistics_block *)kzalloc(324UL,208U);
  
#line 8088 
  if (bp->temp_stats_blk == (struct statistics_block *)0) {
    
#line 8089 
    rc = -12;
    
#line 8090 
    goto err_out;
  }
  else ;
  
#line 8094 
  rc = pci_enable_device(pdev);
  
#line 8095 
  if (rc != 0) {
    
#line 8096 
    dev_err((struct device const *)(& pdev->dev),"Cannot enable PCI device, aborting\n");
    
#line 8097 
    goto err_out;
  }
  else ;
  
#line 8100 
  if ((pdev->resource[0].flags & 512UL) == 0UL) {
    
#line 8101 
    dev_err((struct device const *)(& pdev->dev),"Cannot find PCI device base address, aborting\n");
    
#line 8103 
    rc = -19;
    
#line 8104 
    goto err_out_disable;
  }
  else ;
  
#line 8107 
  rc = pci_request_regions(pdev,"bnx2");
  
#line 8108 
  if (rc != 0) {
    
#line 8109 
    dev_err((struct device const *)(& pdev->dev),"Cannot obtain PCI resources, aborting\n");
    
#line 8110 
    goto err_out_disable;
  }
  else ;
  
#line 8113 
  pci_set_master(pdev);
  
#line 8115 
  bp->pm_cap = (int)pdev->pm_cap;
  
#line 8116 
  if (bp->pm_cap == 0) {
    
#line 8117 
    dev_err((struct device const *)(& pdev->dev),"Cannot find power management capability, aborting\n");
    
#line 8119 
    rc = -5;
    
#line 8120 
    goto err_out_release;
  }
  else ;
  
#line 8123 
  bp->dev = dev;
  
#line 8124 
  bp->pdev = pdev;
  
#line 8126 
  spinlock_check(& bp->phy_lock);
  {
    struct lock_class_key __key;
    
#line 8126 
    __raw_spin_lock_init(& bp->phy_lock.__anonCompField_spinlock_18.rlock,"&(&bp->phy_lock)->rlock",& __key);
  }
  
#line 8127 
  spinlock_check(& bp->indirect_lock);
  {
    struct lock_class_key __key_0;
    
#line 8127 
    __raw_spin_lock_init(& bp->indirect_lock.__anonCompField_spinlock_18.rlock,"&(&bp->indirect_lock)->rlock",& __key_0);
  }
  {
    struct lock_class_key __key_1;
    
#line 8129 
    __mutex_init(& bp->cnic_lock,"&bp->cnic_lock",& __key_1);
  }
  {
    struct lock_class_key __key_2;
    
#line 8131 
    __init_work(& bp->reset_task,0);
    
#line 8131 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 8131 
    bp->reset_task.data = __constr_expr_37;
    
#line 8131 
    lockdep_init_map(& bp->reset_task.lockdep_map,"(&bp->reset_task)",& __key_2,0);
    
#line 8131 
    INIT_LIST_HEAD(& bp->reset_task.entry);
    
#line 8131 
    bp->reset_task.func = & bnx2_reset_task;
  }
  
#line 8133 
  bp->regview = pci_iomap(pdev,0,75776UL);
  
#line 8135 
  if (bp->regview == (void *)0) {
    
#line 8136 
    dev_err((struct device const *)(& pdev->dev),"Cannot map register space, aborting\n");
    
#line 8137 
    rc = -12;
    
#line 8138 
    goto err_out_release;
  }
  else ;
  
#line 8145 
  writel(136U,(void volatile *)(bp->regview + 104U));
  
#line 8149 
  bp->chip_id = readl((void const volatile *)(bp->regview + 2056U));
  
#line 8151 
  if ((bp->chip_id & 4294901760U) == 1460207616U) {
    int tmp_2;
    bool tmp_1;
    
#line 8152 
    tmp_1 = pci_is_pcie(pdev);
    
#line 8152 
    if (tmp_1) 
#line 8152 
               tmp_2 = 0; else 
#line 8152 
                               tmp_2 = 1;
    
#line 8152 
    if (tmp_2) {
      
#line 8153 
      dev_err((struct device const *)(& pdev->dev),"Not PCIE, aborting\n");
      
#line 8154 
      rc = -5;
      
#line 8155 
      goto err_out_unmap;
    }
    else ;
    
#line 8157 
    bp->flags |= 512U;
    
#line 8158 
    if ((bp->chip_id & 61440U) == 0U) 
#line 8159 
                                      bp->flags |= 2048U; else ;
    
#line 8162 
    err = pci_enable_pcie_error_reporting(pdev);
    
#line 8163 
    if (err == 0) 
#line 8164 
                  bp->flags |= 16384U; else ;
  }
  else {
    
#line 8167 
    bp->pcix_cap = pci_find_capability(pdev,7);
    
#line 8168 
    if (bp->pcix_cap == 0) {
      
#line 8169 
      dev_err((struct device const *)(& pdev->dev),"Cannot find PCIX capability, aborting\n");
      
#line 8171 
      rc = -5;
      
#line 8172 
      goto err_out_unmap;
    }
    else ;
    
#line 8174 
    bp->flags |= 8192U;
  }
  
#line 8177 
  if ((bp->chip_id & 4294901760U) == 1460207616U && (bp->chip_id & 61440U) != 0U) {
    
#line 8179 
    if ((unsigned int)pdev->msix_cap != 0U) 
#line 8180 
                                            bp->flags |= 4U; else ;
  }
  else ;
  
#line 8183 
  if ((bp->chip_id & 4294967280U) != 1460011008U && (bp->chip_id & 4294967280U) != 1460011024U) {
    
#line 8185 
    if ((unsigned int)pdev->msi_cap != 0U) 
#line 8186 
                                           bp->flags |= 128U; else ;
  }
  else ;
  
#line 8190 
  if ((bp->chip_id & 4294901760U) == 1460142080U) {
    
#line 8191 
    dma_mask = 1099511627775ULL;
    
#line 8191 
    persist_dma_mask = dma_mask;
  }
  else {
    
#line 8193 
    dma_mask = 18446744073709551615ULL;
    
#line 8193 
    persist_dma_mask = dma_mask;
  }
  
#line 8196 
  tmp_3 = pci_set_dma_mask(pdev,dma_mask);
  
#line 8196 
  if (tmp_3 == 0) {
    
#line 8197 
    dev->features |= 32ULL;
    
#line 8198 
    rc = pci_set_consistent_dma_mask(pdev,persist_dma_mask);
    
#line 8199 
    if (rc != 0) {
      
#line 8200 
      dev_err((struct device const *)(& pdev->dev),"pci_set_consistent_dma_mask failed, aborting\n");
      
#line 8202 
      goto err_out_unmap;
    }
    else ;
  }
  else {
    
#line 8204 
    rc = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 8204 
    if (rc != 0) {
      
#line 8205 
      dev_err((struct device const *)(& pdev->dev),"System does not support DMA, aborting\n");
      
#line 8206 
      goto err_out_unmap;
    }
    else ;
  }
  
#line 8209 
  if ((bp->flags & 512U) == 0U) 
#line 8210 
                                bnx2_get_pci_speed(bp); else ;
  
#line 8213 
  if ((bp->chip_id & 4294967280U) == 1460011008U) {
    
#line 8214 
    reg = readl((void const volatile *)(bp->regview + 4U));
    
#line 8215 
    reg &= 4294966975U;
    
#line 8216 
    writel(reg,(void volatile *)(bp->regview + 4U));
  }
  else 
    
#line 8217 
    if ((bp->chip_id & 4294967280U) == 1460011024U && (bp->flags & 1U) == 0U) {
      
#line 8220 
      dev_err((struct device const *)(& pdev->dev),"5706 A1 can only be used in a PCIX bus, aborting\n");
      
#line 8222 
      goto err_out_unmap;
    }
    else ;
  
#line 8225 
  bnx2_init_nvram(bp);
  
#line 8227 
  reg = bnx2_reg_rd_ind(bp,1441792U);
  
#line 8229 
  tmp_4 = bnx2_reg_rd_ind(bp,1310880U);
  
#line 8229 
  if (tmp_4 < (u32)0) 
#line 8230 
                      bp->func = (unsigned char)1U; else ;
  
#line 8232 
  if ((reg & 4294901760U) == 1397948416U) {
    
#line 8234 
    u32 off = (unsigned int)((int)bp->func << 2);
    
#line 8236 
    bp->shmem_base = bnx2_reg_rd_ind(bp,off + 1441796U);
  }
  else 
#line 8238 
       bp->shmem_base = 1473536U;
  
#line 8243 
  reg = bnx2_shmem_rd(bp,32U);
  
#line 8245 
  if ((reg & 4294967040U) != 1146505472U) {
    
#line 8247 
    dev_err((struct device const *)(& pdev->dev),"Firmware not running, aborting\n");
    
#line 8248 
    rc = -19;
    
#line 8249 
    goto err_out_unmap;
  }
  else ;
  
#line 8252 
  bnx2_read_vpd_fw_ver(bp);
  
#line 8254 
  tmp_5 = strlen((char const *)(& bp->fw_version));
  
#line 8254 
  j = (int)tmp_5;
  
#line 8255 
  reg = bnx2_shmem_rd(bp,76U);
  
#line 8256 
  i = 0;
  
#line 8256 
  goto ldv_58720;
  ldv_58719: 
#line 8257 
  ;
  {
    u8 num;
    u8 k;
    u8 skip0;
    
#line 8259 
    if (i == 0) {
      int tmp_6;
      int tmp_7;
      int tmp_8;
      
#line 8260 
      tmp_6 = j;
      
#line 8260 
      j += 1;
      
#line 8260 
      bp->fw_version[tmp_6] = (char)98;
      
#line 8261 
      tmp_7 = j;
      
#line 8261 
      j += 1;
      
#line 8261 
      bp->fw_version[tmp_7] = (char)99;
      
#line 8262 
      tmp_8 = j;
      
#line 8262 
      j += 1;
      
#line 8262 
      bp->fw_version[tmp_8] = (char)32;
    }
    else ;
    
#line 8264 
    num = (unsigned char)(reg >> (3 - i) * 8);
    
#line 8265 
    k = (unsigned char)100U;
    
#line 8265 
    skip0 = (unsigned char)1U;
    
#line 8265 
    goto ldv_58717;
    ldv_58716: 
#line 8266 
    ;
    
#line 8266 
    if (((int)num >= (int)k || (unsigned int)skip0 == 0U) || (unsigned int)k == 1U) {
      int tmp_9;
      
#line 8267 
      tmp_9 = j;
      
#line 8267 
      j += 1;
      
#line 8267 
      bp->fw_version[tmp_9] = (char)((unsigned int)((int)num / (int)k) + 48U);
      
#line 8268 
      skip0 = (unsigned char)0U;
    }
    else ;
    
#line 8265 
    num = (unsigned char)((int)num % (int)k);
    
#line 8265 
    k = (unsigned char)((unsigned int)k / 10U);
    ldv_58717: 
#line 8266 
    ;
    
#line 8265 
    if ((unsigned int)k != 0U) 
#line 8267 
                               goto ldv_58716; else 
#line 8270 
                                                    goto ldv_58718;
    ldv_58718: 
#line 8271 
    ;
    
#line 8271 
    if (i != 2) {
      int tmp_10;
      
#line 8272 
      tmp_10 = j;
      
#line 8272 
      j += 1;
      
#line 8272 
      bp->fw_version[tmp_10] = (char)46;
    }
    else ;
  }
  
#line 8256 
  i += 1;
  ldv_58720: 
#line 8257 
  ;
  
#line 8256 
  if (i <= 2 && j <= 23) 
#line 8258 
                         goto ldv_58719; else 
#line 8261 
                                              goto ldv_58721;
  ldv_58721: 
#line 8262 
  ;
  
#line 8274 
  reg = bnx2_shmem_rd(bp,216U);
  
#line 8275 
  if ((reg & 16777216U) != 0U) 
#line 8276 
                               bp->wol = (unsigned char)1U; else ;
  
#line 8278 
  if ((reg & 67108864U) != 0U) {
    
#line 8279 
    bp->flags |= 64U;
    
#line 8281 
    i = 0;
    
#line 8281 
    goto ldv_58724;
    ldv_58723: 
#line 8282 
    ;
    
#line 8282 
    reg = bnx2_shmem_rd(bp,456U);
    
#line 8283 
    if ((reg & 57344U) != 0U) 
#line 8284 
                              goto ldv_58722; else ;
    
#line 8285 
    msleep(10U);
    
#line 8281 
    i += 1;
    ldv_58724: 
#line 8282 
    ;
    
#line 8281 
    if (i <= 29) 
#line 8283 
                 goto ldv_58723; else 
#line 8286 
                                      goto ldv_58722;
    ldv_58722: 
#line 8287 
    ;
  }
  else ;
  
#line 8288 
  reg = bnx2_shmem_rd(bp,456U);
  
#line 8289 
  reg &= 57344U;
  
#line 8290 
  if (reg != 0U && reg != 57344U) {
    
#line 8292 
    u32 addr = bnx2_shmem_rd(bp,332U);
    
#line 8294 
    if (j <= 31) {
      int tmp_12;
      
#line 8295 
      tmp_12 = j;
      
#line 8295 
      j += 1;
      
#line 8295 
      bp->fw_version[tmp_12] = (char)32;
    }
    else ;
    
#line 8296 
    i = 0;
    
#line 8296 
    goto ldv_58727;
    ldv_58726: 
#line 8297 
    ;
    
#line 8297 
    reg = bnx2_reg_rd_ind(bp,(unsigned int)(i * 4) + addr);
    
#line 8298 
    if (0 != 0) 
#line 8298 
                reg = (((reg << 24) | ((reg << 8) & 16711680U)) | ((reg >> 8) & 65280U)) | (reg >> 24); else 
                                                                    
#line 8298 
                                                                    reg = __fswab32(reg);
    
#line 8299 
    memcpy((void *)(& bp->fw_version[j]),(void const *)(& reg),4UL);
    
#line 8300 
    j += 4;
    
#line 8296 
    i += 1;
    ldv_58727: 
#line 8297 
    ;
    
#line 8296 
    if (i <= 2 && j <= 27) 
#line 8298 
                           goto ldv_58726; else 
#line 8301 
                                                goto ldv_58728;
    ldv_58728: 
#line 8302 
    ;
  }
  else ;
  
#line 8304 
  reg = bnx2_shmem_rd(bp,80U);
  
#line 8305 
  bp->mac_addr[0] = (unsigned char)(reg >> 8);
  
#line 8306 
  bp->mac_addr[1] = (unsigned char)reg;
  
#line 8308 
  reg = bnx2_shmem_rd(bp,84U);
  
#line 8309 
  bp->mac_addr[2] = (unsigned char)(reg >> 24);
  
#line 8310 
  bp->mac_addr[3] = (unsigned char)(reg >> 16);
  
#line 8311 
  bp->mac_addr[4] = (unsigned char)(reg >> 8);
  
#line 8312 
  bp->mac_addr[5] = (unsigned char)reg;
  
#line 8314 
  bp->tx_ring_size = 255;
  
#line 8315 
  bnx2_set_rx_ring_size(bp,255U);
  
#line 8317 
  bp->tx_quick_cons_trip_int = (unsigned short)2U;
  
#line 8318 
  bp->tx_quick_cons_trip = (unsigned short)20U;
  
#line 8319 
  bp->tx_ticks_int = (unsigned short)18U;
  
#line 8320 
  bp->tx_ticks = (unsigned short)80U;
  
#line 8322 
  bp->rx_quick_cons_trip_int = (unsigned short)2U;
  
#line 8323 
  bp->rx_quick_cons_trip = (unsigned short)12U;
  
#line 8324 
  bp->rx_ticks_int = (unsigned short)18U;
  
#line 8325 
  bp->rx_ticks = (unsigned short)18U;
  
#line 8327 
  bp->stats_ticks = 999936U;
  
#line 8329 
  bp->current_interval = 250U;
  
#line 8331 
  bp->phy_addr = 1U;
  
#line 8334 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 8335 
                                                  bnx2_get_5709_media(bp);
  else 
    
#line 8336 
    if ((bp->chip_id & 1U) != 0U) 
#line 8337 
                                  bp->phy_flags |= 1U; else ;
  
#line 8339 
  bp->phy_port = (unsigned char)0U;
  
#line 8340 
  if ((bp->phy_flags & 1U) != 0U) {
    
#line 8341 
    bp->phy_port = (unsigned char)3U;
    
#line 8342 
    reg = bnx2_shmem_rd(bp,60U);
    
#line 8343 
    if ((reg & 32768U) == 0U) {
      
#line 8344 
      bp->flags |= 8U;
      
#line 8345 
      bp->wol = (unsigned char)0U;
    }
    else ;
    
#line 8347 
    if ((bp->chip_id & 4294901760U) == 1460011008U) {
      
#line 8352 
      if ((unsigned int)pdev->subsystem_vendor == 4156U && (unsigned int)pdev->subsystem_device == 12556U) 
        
#line 8354 
        bp->phy_flags |= 8192U; else ;
    }
    else {
      
#line 8356 
      bp->phy_addr = 2U;
      
#line 8357 
      if ((reg & 32U) != 0U) 
#line 8358 
                             bp->phy_flags |= 8U; else ;
    }
  }
  else 
    
#line 8360 
    if ((bp->chip_id & 4294901760U) == 1460011008U || (bp->chip_id & 4294901760U) == 1460142080U) 
      
#line 8362 
      bp->phy_flags |= 2U;
    else 
      
#line 8363 
      if ((bp->chip_id & 4294901760U) == 1460207616U && ((bp->chip_id & 61440U) == 0U || (bp->chip_id & 61440U) == 4096U)) 
        
#line 8366 
        bp->phy_flags |= 1024U; else ;
  
#line 8368 
  bnx2_init_fw_cap(bp);
  
#line 8370 
  if (((bp->chip_id & 4294967280U) == 1460142080U || (bp->chip_id & 4294967280U) == 1460146176U) || (bp->chip_id & 4294967280U) == 1460146192U) 
    
#line 8370 
    goto _LOR;
  else {
    unsigned int tmp_14;
    
#line 8372 
    tmp_14 = readl((void const volatile *)(bp->regview + 1036U));
    
#line 8372 
    if (((long)tmp_14 & 1073741824L) == 0L) {
      _LOR: {
              
#line 8374 
              bp->flags |= 8U;
              
#line 8375 
              bp->wol = (unsigned char)0U;
            }
    }
    else ;
  }
  
#line 8378 
  if ((bp->flags & 8U) != 0U) 
#line 8379 
                              device_set_wakeup_capable(& (bp->pdev)->dev,(_Bool)0); else 
                                                                    
#line 8381 
                                                                    device_set_wakeup_enable(& (bp->pdev)->dev,(_Bool)((unsigned int)bp->wol != 0U));
  
#line 8383 
  if ((bp->chip_id & 4294967280U) == 1460011008U) {
    
#line 8384 
    bp->tx_quick_cons_trip_int = bp->tx_quick_cons_trip;
    
#line 8386 
    bp->tx_ticks_int = bp->tx_ticks;
    
#line 8387 
    bp->rx_quick_cons_trip_int = bp->rx_quick_cons_trip;
    
#line 8389 
    bp->rx_ticks_int = bp->rx_ticks;
    
#line 8390 
    bp->comp_prod_trip_int = bp->comp_prod_trip;
    
#line 8391 
    bp->com_ticks_int = bp->com_ticks;
    
#line 8392 
    bp->cmd_ticks_int = bp->cmd_ticks;
  }
  else ;
  
#line 8405 
  if ((bp->chip_id & 4294901760U) == 1460011008U && disable_msi == 0) {
    
#line 8406 
    struct pci_dev *amd_8132 = (struct pci_dev *)0;
    
#line 8408 
    goto ldv_58732;
    ldv_58731: 
#line 8409 
    ;
    
#line 8412 
    if ((unsigned int)amd_8132->revision + 240U <= 3U) {
      
#line 8414 
      disable_msi = 1;
      
#line 8415 
      pci_dev_put(amd_8132);
      
#line 8416 
      goto ldv_58730;
    }
    else ;
    ldv_58732: 
#line 8418 
    ;
    
#line 8408 
    amd_8132 = pci_get_device(4130U,29784U,amd_8132);
    
#line 8408 
    if (amd_8132 != (struct pci_dev *)0) 
#line 8410 
                                         goto ldv_58731; else 
#line 8413 
                                                              goto ldv_58730;
    ldv_58730: 
#line 8414 
    ;
  }
  else ;
  
#line 8421 
  bnx2_set_default_link(bp);
  
#line 8422 
  bp->req_flow_ctrl = (unsigned char)3U;
  {
    struct lock_class_key __key_3;
    
#line 8424 
    init_timer_key(& bp->timer,0U,"(&bp->timer)",& __key_3);
  }
  
#line 8425 
  bp->timer.expires = jiffies + 250UL;
  
#line 8426 
  bp->timer.data = (unsigned long)bp;
  
#line 8427 
  bp->timer.function = & bnx2_timer;
  
#line 8430 
  tmp_16 = bnx2_shmem_rd(bp,988U);
  
#line 8430 
  if ((tmp_16 & 524288U) != 0U) {
    u32 tmp_15;
    
#line 8431 
    tmp_15 = bnx2_shmem_rd(bp,996U);
    
#line 8431 
    bp->cnic_eth_dev.max_iscsi_conn = (tmp_15 >> 16) & 65535U;
  }
  else ;
  
#line 8434 
  bp->cnic_probe = & bnx2_cnic_probe;
  
#line 8436 
  pci_save_state(pdev);
  
#line 8438 
  __retres = 0;
  
#line 8438 
  goto return_label;
  err_out_unmap: 
#line 8440 
  ;
  
#line 8441 
  if ((bp->flags & 16384U) != 0U) {
    
#line 8442 
    pci_disable_pcie_error_reporting(pdev);
    
#line 8443 
    bp->flags &= 4294950911U;
  }
  else ;
  
#line 8446 
  pci_iounmap(pdev,bp->regview);
  
#line 8447 
  bp->regview = (void *)0;
  err_out_release: 
#line 8449 
  ;
  
#line 8450 
  pci_release_regions(pdev);
  err_out_disable: 
#line 8452 
  ;
  
#line 8453 
  pci_disable_device(pdev);
  err_out: 
#line 8455 
  ;
  
#line 8456 
  __retres = rc;
  return_label: 
#line 8456 
                return __retres;
}


#line 8460  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static char *bnx2_bus_string(struct bnx2 *bp, char *str)
{
  
#line 8462 
  char *s = str;
  
#line 8464 
  if ((bp->flags & 512U) != 0U) {
    int tmp;
    
#line 8465 
    tmp = sprintf(s,"PCI Express");
    
#line 8465 
    s += tmp;
  }
  else {
    int tmp_0;
    int tmp_4;
    
#line 8467 
    tmp_0 = sprintf(s,"PCI");
    
#line 8467 
    s += tmp_0;
    
#line 8468 
    if ((bp->flags & 1U) != 0U) {
      int tmp_1;
      
#line 8469 
      tmp_1 = sprintf(s,"-X");
      
#line 8469 
      s += tmp_1;
    }
    else ;
    
#line 8470 
    if ((bp->flags & 2U) != 0U) {
      int tmp_2;
      
#line 8471 
      tmp_2 = sprintf(s," 32-bit");
      
#line 8471 
      s += tmp_2;
    }
    else {
      int tmp_3;
      
#line 8473 
      tmp_3 = sprintf(s," 64-bit");
      
#line 8473 
      s += tmp_3;
    }
    
#line 8474 
    tmp_4 = sprintf(s," %dMHz",(int)bp->bus_speed_mhz);
    
#line 8474 
    s += tmp_4;
  }
  
#line 8476 
  return str;
}


#line 8480  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_del_napi(struct bnx2 *bp)
{
  int i;
  
#line 8484 
  i = 0;
  
#line 8484 
  goto ldv_58744;
  ldv_58743: 
#line 8485 
  ;
  
#line 8485 
  netif_napi_del(& bp->bnx2_napi[i].napi);
  
#line 8484 
  i += 1;
  ldv_58744: 
#line 8485 
  ;
  
#line 8484 
  if (bp->irq_nvecs > i) 
#line 8486 
                         goto ldv_58743; else 
#line 8489 
                                              goto ldv_58745;
  ldv_58745: 
#line 8490 
  ;
  
#line 8491 
  return;
}


#line 8489  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_init_napi(struct bnx2 *bp)
{
  int i;
  
#line 8493 
  i = 0;
  
#line 8493 
  goto ldv_58755;
  ldv_58754: 
#line 8494 
  ;
  {
    int (*poll)(struct napi_struct *, int );
    
#line 8494 
    struct bnx2_napi *bnapi = & bp->bnx2_napi[i];
    
#line 8497 
    if (i == 0) 
#line 8498 
                poll = & bnx2_poll; else 
#line 8500 
                                         poll = & bnx2_poll_msix;
    
#line 8502 
    netif_napi_add(bp->dev,& bp->bnx2_napi[i].napi,poll,64);
    
#line 8503 
    bnapi->bp = bp;
  }
  
#line 8493 
  i += 1;
  ldv_58755: 
#line 8494 
  ;
  
#line 8493 
  if (bp->irq_nvecs > i) 
#line 8495 
                         goto ldv_58754; else 
#line 8498 
                                              goto ldv_58756;
  ldv_58756: 
#line 8499 
  ;
  
#line 8500 
  return;
}


#line 8507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct net_device_ops const bnx2_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & bnx2_open, .ndo_stop = & bnx2_close, .ndo_start_xmit = & bnx2_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & bnx2_set_rx_mode, .ndo_set_mac_address = & bnx2_change_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & bnx2_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & bnx2_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & bnx2_tx_timeout, .ndo_get_stats64 = & bnx2_get_stats64, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & poll_bnx2, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & bnx2_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 8525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_init_one(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *dev;
  struct bnx2 *bp;
  int rc;
  char str[40U];
  int tmp;
  char *tmp_1;
  
#line 8527 
  int version_printed = 0;
  
#line 8533 
  tmp = version_printed;
  
#line 8533 
  version_printed += 1;
  
#line 8533 
  ;
  
#line 8533 
  if (tmp == 0) 
#line 8534 
                printk("\001",(char *)(& version)); else ;
  
#line 8537 
  dev = ldv_alloc_etherdev_mqs_141(11520,8U,8U);
  
#line 8538 
  if (dev == (struct net_device *)0) {
    
#line 8539 
    __retres = -12;
    
#line 8539 
    goto return_label;
  }
  else ;
  
#line 8541 
  rc = bnx2_init_board(pdev,dev);
  
#line 8542 
  if (rc < 0) 
#line 8543 
              goto err_free; else ;
  
#line 8545 
  dev->netdev_ops = & bnx2_netdev_ops;
  
#line 8546 
  dev->watchdog_timeo = 1250;
  
#line 8547 
  dev->ethtool_ops = & bnx2_ethtool_ops;
  
#line 8549 
  bp = (struct bnx2 *)netdev_priv((struct net_device const *)dev);
  
#line 8551 
  pci_set_drvdata(pdev,(void *)dev);
  
#line 8553 
  memcpy((void *)dev->dev_addr,(void const *)(& bp->mac_addr),6UL);
  
#line 8555 
  dev->hw_features = 25770393603ULL;
  
#line 8559 
  if ((bp->chip_id & 4294901760U) == 1460207616U) 
#line 8560 
                                                  dev->hw_features |= 1048592ULL; else ;
  
#line 8562 
  dev->vlan_features = dev->hw_features;
  
#line 8563 
  dev->hw_features |= 384ULL;
  
#line 8564 
  dev->features |= dev->hw_features;
  
#line 8565 
  dev->priv_flags |= 131072U;
  
#line 8567 
  if ((bp->flags & 4096U) == 0U) 
#line 8568 
                                 dev->hw_features &= 18446744073709551359ULL; else ;
  
#line 8570 
  rc = ldv_register_netdev_142(dev);
  
#line 8570 
  if (rc != 0) {
    
#line 8571 
    dev_err((struct device const *)(& pdev->dev),"Cannot register net device\n");
    
#line 8572 
    goto error;
  }
  else ;
  
#line 8575 
  ;
  
#line 8575 
  ;
  
#line 8575 
  ;
  
#line 8578 
  tmp_1 = bnx2_bus_string(bp,(char *)(& str));
  
#line 8575 
  ;
  
#line 8575 
  ;
  
#line 8575 
  ;
  
#line 8575 
  ;
  
#line 8575 
  netdev_info((struct net_device const *)dev,"%s (%c%d) %s found at mem %lx, IRQ %d, ",board_info[ent->driver_data].name,((bp->chip_id >> 12) & 15U) + 65U,(bp->chip_id >> 4) & 255U,tmp_1,(long)pdev->resource[0].start,pdev->irq,dev->dev_addr);
  
#line 8582 
  __retres = 0;
  
#line 8582 
  goto return_label;
  error: 
#line 8584 
  ;
  
#line 8585 
  pci_iounmap(pdev,bp->regview);
  
#line 8586 
  pci_release_regions(pdev);
  
#line 8587 
  pci_disable_device(pdev);
  err_free: 
#line 8588 
  ;
  
#line 8589 
  ldv_free_netdev_143(dev);
  
#line 8590 
  __retres = rc;
  return_label: 
#line 8590 
                return __retres;
}


#line 8594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_remove_one(struct pci_dev *pdev)
{
  
#line 8596 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8597 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 8599 
  ldv_unregister_netdev_144(dev);
  
#line 8601 
  ldv_del_timer_sync_145(& bp->timer);
  
#line 8602 
  cancel_work_sync(& bp->reset_task);
  
#line 8604 
  pci_iounmap(bp->pdev,bp->regview);
  
#line 8606 
  kfree((void const *)bp->temp_stats_blk);
  
#line 8608 
  if ((bp->flags & 16384U) != 0U) {
    
#line 8609 
    pci_disable_pcie_error_reporting(pdev);
    
#line 8610 
    bp->flags &= 4294950911U;
  }
  else ;
  
#line 8613 
  bnx2_release_firmware(bp);
  
#line 8615 
  ldv_free_netdev_146(dev);
  
#line 8617 
  pci_release_regions(pdev);
  
#line 8618 
  pci_disable_device(pdev);
  
#line 8619 
  return;
}


#line 8623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_suspend(struct device *device)
{
  int __retres;
  struct pci_dev *tmp;
  bool tmp_2;
  {
    
#line 8625 
    struct device const *__mptr = (struct device const *)device;
    
#line 8625 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 8625 
  struct pci_dev *pdev = tmp;
  
#line 8626 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8627 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 8629 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 8629 
  if ((int)tmp_2 != 0) {
    
#line 8630 
    cancel_work_sync(& bp->reset_task);
    
#line 8631 
    bnx2_netif_stop(bp,(_Bool)1);
    
#line 8632 
    netif_device_detach(dev);
    
#line 8633 
    ldv_del_timer_sync_147(& bp->timer);
    
#line 8634 
    bnx2_shutdown_chip(bp);
    
#line 8635 
    __bnx2_free_irq(bp);
    
#line 8636 
    bnx2_free_skbs(bp);
  }
  else ;
  
#line 8638 
  bnx2_setup_wol(bp);
  
#line 8639 
  __retres = 0;
  
#line 8639 
  return __retres;
}


#line 8643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_resume(struct device *device)
{
  int __retres;
  struct pci_dev *tmp;
  int tmp_3;
  bool tmp_2;
  {
    
#line 8645 
    struct device const *__mptr = (struct device const *)device;
    
#line 8645 
    tmp = (struct pci_dev *)__mptr + 18446744073709551464U;
  }
  
#line 8645 
  struct pci_dev *pdev = tmp;
  
#line 8646 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8647 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 8649 
  tmp_2 = netif_running((struct net_device const *)dev);
  
#line 8649 
  if (tmp_2) 
#line 8649 
             tmp_3 = 0; else 
#line 8649 
                             tmp_3 = 1;
  
#line 8649 
  if (tmp_3) {
    
#line 8650 
    __retres = 0;
    
#line 8650 
    goto return_label;
  }
  else ;
  
#line 8652 
  bnx2_set_power_state(bp,0);
  
#line 8653 
  netif_device_attach(dev);
  
#line 8654 
  bnx2_request_irq(bp);
  
#line 8655 
  bnx2_init_nic(bp,1);
  
#line 8656 
  bnx2_netif_start(bp,(_Bool)1);
  
#line 8657 
  __retres = 0;
  return_label: 
#line 8657 
                return __retres;
}


#line 8660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct dev_pm_ops const bnx2_pm_ops = {.prepare = (int (*)(struct device *))0, .complete = (void (*)(struct device *))0, .suspend = & bnx2_suspend, .resume = & bnx2_resume, .freeze = & bnx2_suspend, .thaw = & bnx2_resume, .poweroff = & bnx2_suspend, .restore = & bnx2_resume, .suspend_late = (int (*)(struct device *))0, .resume_early = (int (*)(struct device *))0, .freeze_late = (int (*)(struct device *))0, .thaw_early = (int (*)(struct device *))0, .poweroff_late = (int (*)(struct device *))0, .restore_early = (int (*)(struct device *))0, .suspend_noirq = (int (*)(struct device *))0, .resume_noirq = (int (*)(struct device *))0, .freeze_noirq = (int (*)(struct device *))0, .thaw_noirq = (int (*)(struct device *))0, .poweroff_noirq = (int (*)(struct device *))0, .restore_noirq = (int (*)(struct device *))0, .runtime_suspend = (int (*)(struct device *))0, .runtime_resume = (int (*)(struct device *))0, .runtime_idle = (int (*)(struct device *))0};

#line 8676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static pci_ers_result_t bnx2_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  bool tmp_1;
  
#line 8679 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8680 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 8682 
  rtnl_lock();
  
#line 8683 
  netif_device_detach(dev);
  
#line 8685 
  if (state == 3U) {
    
#line 8686 
    rtnl_unlock();
    
#line 8687 
    __retres = 4U;
    
#line 8687 
    goto return_label;
  }
  else ;
  
#line 8690 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 8690 
  if ((int)tmp_1 != 0) {
    
#line 8691 
    bnx2_netif_stop(bp,(_Bool)1);
    
#line 8692 
    ldv_del_timer_sync_148(& bp->timer);
    
#line 8693 
    bnx2_reset_nic(bp,16777216U);
  }
  else ;
  
#line 8696 
  pci_disable_device(pdev);
  
#line 8697 
  rtnl_unlock();
  
#line 8700 
  __retres = 3U;
  return_label: 
#line 8700 
                return __retres;
}


#line 8709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static pci_ers_result_t bnx2_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_2;
  
#line 8711 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8712 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 8713 
  pci_ers_result_t result = 4U;
  
#line 8714 
  int err = 0;
  
#line 8716 
  rtnl_lock();
  
#line 8717 
  tmp_2 = pci_enable_device(pdev);
  
#line 8717 
  if (tmp_2 != 0) 
#line 8718 
                  dev_err((struct device const *)(& pdev->dev),"Cannot re-enable PCI device after reset\n");
  else {
    bool tmp_1;
    
#line 8721 
    pci_set_master(pdev);
    
#line 8722 
    pci_restore_state(pdev);
    
#line 8723 
    pci_save_state(pdev);
    
#line 8725 
    tmp_1 = netif_running((struct net_device const *)dev);
    
#line 8725 
    if ((int)tmp_1 != 0) 
#line 8726 
                         err = bnx2_init_nic(bp,1); else ;
    
#line 8728 
    if (err == 0) 
#line 8729 
                  result = 5U; else ;
  }
  
#line 8732 
  if (result != 5U) {
    bool tmp_3;
    
#line 8732 
    tmp_3 = netif_running((struct net_device const *)dev);
    
#line 8732 
    if ((int)tmp_3 != 0) {
      
#line 8733 
      bnx2_napi_enable(bp);
      
#line 8734 
      dev_close(dev);
    }
    else ;
  }
  else ;
  
#line 8736 
  rtnl_unlock();
  
#line 8738 
  if ((bp->flags & 16384U) == 0U) {
    
#line 8739 
    __retres = result;
    
#line 8739 
    goto return_label;
  }
  else ;
  
#line 8741 
  err = pci_cleanup_aer_uncorrect_error_status(pdev);
  
#line 8742 
  if (err != 0) 
#line 8743 
                dev_err((struct device const *)(& pdev->dev),"pci_cleanup_aer_uncorrect_error_status failed 0x%0x\n",err); else ;
  
#line 8748 
  __retres = result;
  return_label: 
#line 8748 
                return __retres;
}


#line 8758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_io_resume(struct pci_dev *pdev)
{
  bool tmp_1;
  
#line 8760 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8761 
  struct bnx2 *bp = netdev_priv((struct net_device const *)dev);
  
#line 8763 
  rtnl_lock();
  
#line 8764 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 8764 
  if ((int)tmp_1 != 0) 
#line 8765 
                       bnx2_netif_start(bp,(_Bool)1); else ;
  
#line 8767 
  netif_device_attach(dev);
  
#line 8768 
  rtnl_unlock();
  
#line 8769 
  return;
}


#line 8771  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_shutdown(struct pci_dev *pdev)
{
  struct bnx2 *bp;
  bool tmp_1;
  
#line 8773 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8776 
  if (dev == (struct net_device *)0) 
#line 8777 
                                     goto return_label; else ;
  
#line 8779 
  bp = (struct bnx2 *)netdev_priv((struct net_device const *)dev);
  
#line 8780 
  if (bp == (struct bnx2 *)0) 
#line 8781 
                              goto return_label; else ;
  
#line 8783 
  rtnl_lock();
  
#line 8784 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 8784 
  if ((int)tmp_1 != 0) 
#line 8785 
                       dev_close(bp->dev); else ;
  
#line 8787 
  if (system_state == (unsigned int)SYSTEM_POWER_OFF) 
#line 8788 
                                                      bnx2_set_power_state(bp,3); else ;
  
#line 8790 
  rtnl_unlock();
  return_label: 
#line 8791 
                return;
}


#line 8793  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct pci_error_handlers const bnx2_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& bnx2_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & bnx2_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & bnx2_io_resume};

#line 8799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static struct pci_driver bnx2_pci_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "bnx2", .id_table = (struct pci_device_id const *)(& bnx2_pci_tbl), .probe = & bnx2_init_one, .remove = & bnx2_remove_one, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = & bnx2_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & bnx2_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = & bnx2_pm_ops, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 8809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static int bnx2_pci_driver_init(void)
{
  int tmp;
  
#line 8809 
  tmp = ldv___pci_register_driver_149(& bnx2_pci_driver,& __this_module,"bnx2");
  
#line 8809 
  return tmp;
}


#line 8809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/broadcom/bnx2.c"
static void bnx2_pci_driver_exit(void)
{
  
#line 8809 
  ldv_pci_unregister_driver_150(& bnx2_pci_driver);
  
#line 8810 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int (*ldv_emg_alias_eth_validate_addr_8)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
struct dev_pm_ops *ldv_emg_alias_bnx2_pm_ops_3 = (struct dev_pm_ops *)(& bnx2_pm_ops);

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
struct pci_driver *ldv_emg_alias_bnx2_pci_driver_2 = & bnx2_pci_driver;

#line 61 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 62 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 63 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 66 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 67 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 68 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_suspend_2(struct device *arg0)
{
  int tmp;
  
#line 76 
  tmp = bnx2_suspend(arg0);
  
#line 76 
  return tmp;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_strings_30(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 81 
  bnx2_get_strings(arg0,arg1,arg2);
  
#line 82 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 86 
  bnx2_get_pauseparam(arg0,arg1);
  
#line 87 
  return;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_bnx2_pci_driver_init(void)
{
  int tmp;
  
#line 91 
  tmp = bnx2_pci_driver_init();
  
#line 91 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_shutdown_2(struct pci_dev *arg0)
{
  
#line 95 
  bnx2_shutdown(arg0);
  
#line 96 
  return;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_ringparam_12(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 100 
  bnx2_get_ringparam(arg0,arg1);
  
#line 101 
  return;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_channels_28(struct net_device *arg0, struct ethtool_channels *arg1)
{
  
#line 105 
  bnx2_get_channels(arg0,arg1);
  
#line 106 
  return;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_poll_bnx2_35(struct net_device *arg0)
{
  
#line 110 
  poll_bnx2(arg0);
  
#line 111 
  return;
}


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_eeprom_16(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 115 
  tmp = bnx2_set_eeprom(arg0,arg1,arg2);
  
#line 115 
  return tmp;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 120 
  tmp = bnx2_open(arg0);
  
#line 120 
  return tmp;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 125 
  tmp = bnx2_set_settings(arg0,arg1);
  
#line 125 
  return tmp;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_nway_reset_29(struct net_device *arg0)
{
  int tmp;
  
#line 130 
  tmp = bnx2_nway_reset(arg0);
  
#line 130 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_get_settings_20(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 135 
  tmp = bnx2_get_settings(arg0,arg1);
  
#line 135 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_get_eeprom_len_36(struct net_device *arg0)
{
  int tmp;
  
#line 140 
  tmp = bnx2_get_eeprom_len(arg0);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_pauseparam_34(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 145 
  tmp = bnx2_set_pauseparam(arg0,arg1);
  
#line 145 
  return tmp;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_ethtool_stats_9(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 150 
  bnx2_get_ethtool_stats(arg0,arg1,arg2);
  
#line 151 
  return;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_change_mac_addr_19(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 155 
  tmp = bnx2_change_mac_addr(arg0,arg1);
  
#line 155 
  return tmp;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_init_one_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 160 
  tmp = bnx2_init_one(arg0,(struct pci_device_id const *)arg1);
  
#line 160 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_set_rx_mode_6(struct net_device *arg0)
{
  
#line 165 
  bnx2_set_rx_mode(arg0);
  
#line 166 
  return;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_features_13(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 170 
  tmp = bnx2_set_features(arg0,arg1);
  
#line 170 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_ioctl_24(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 175 
  tmp = bnx2_ioctl(arg0,arg1,arg2);
  
#line 175 
  return tmp;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_change_mtu_10(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 180 
  tmp = bnx2_change_mtu(arg0,arg1);
  
#line 180 
  return tmp;
}


#line 184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_tx_timeout_21(struct net_device *arg0)
{
  
#line 185 
  bnx2_tx_timeout(arg0);
  
#line 186 
  return;
}


#line 189  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_get_coalesce_31(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 190 
  tmp = bnx2_get_coalesce(arg0,arg1);
  
#line 190 
  return tmp;
}


#line 194  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_remove_one_4(struct pci_dev *arg0)
{
  
#line 195 
  bnx2_remove_one(arg0);
  
#line 196 
  return;
}


#line 199  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_self_test_22(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 200 
  bnx2_self_test(arg0,arg1,arg2);
  
#line 201 
  return;
}


#line 204  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_bnx2_get_stats64_7(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 205 
  tmp = bnx2_get_stats64(arg0,arg1);
  
#line 205 
  return tmp;
}


#line 209  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_channels_15(struct net_device *arg0, struct ethtool_channels *arg1)
{
  int tmp;
  
#line 210 
  tmp = bnx2_set_channels(arg0,arg1);
  
#line 210 
  return tmp;
}


#line 214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
unsigned int ldv_emg_wrapper_bnx2_get_link_11(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 215 
  tmp = bnx2_get_link(arg0);
  
#line 215 
  return tmp;
}


#line 219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_wol_23(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 220 
  bnx2_get_wol(arg0,arg1);
  
#line 221 
  return;
}


#line 224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_regs_26(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 225 
  bnx2_get_regs(arg0,arg1,arg2);
  
#line 226 
  return;
}


#line 229  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_coalesce_33(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 230 
  tmp = bnx2_set_coalesce(arg0,arg1);
  
#line 230 
  return tmp;
}


#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
enum netdev_tx ldv_emg_wrapper_bnx2_start_xmit_18(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 235 
  tmp = bnx2_start_xmit(arg0,arg1);
  
#line 235 
  return tmp;
}


#line 239  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_wol_25(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 240 
  tmp = bnx2_set_wol(arg0,arg1);
  
#line 240 
  return tmp;
}


#line 244  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_wrapper_bnx2_get_drvinfo_14(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 245 
  bnx2_get_drvinfo(arg0,arg1);
  
#line 246 
  return;
}


#line 249  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 250 
  tmp = bnx2_get_eeprom(arg0,arg1,arg2);
  
#line 250 
  return tmp;
}


#line 254  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_get_sset_count_27(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 255 
  tmp = bnx2_get_sset_count(arg0,arg1);
  
#line 255 
  return tmp;
}


#line 259  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_phys_id_5(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 260 
  tmp = bnx2_set_phys_id(arg0,arg1);
  
#line 260 
  return tmp;
}


#line 264  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_resume_4(struct device *arg0)
{
  int tmp;
  
#line 265 
  tmp = bnx2_resume(arg0);
  
#line 265 
  return tmp;
}


#line 269  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_set_ringparam_17(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 270 
  tmp = bnx2_set_ringparam(arg0,arg1);
  
#line 270 
  return tmp;
}


#line 274  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
void ldv_emg_bnx2_pci_driver_exit(void)
{
  
#line 275 
  bnx2_pci_driver_exit();
  
#line 276 
  return;
}


#line 278  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 279 
  tmp = bnx2_close(arg0);
  
#line 279 
  return tmp;
}


#line 283  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
int ldv_emg_wrapper_bnx2_get_regs_len_32(struct net_device *arg0)
{
  int tmp;
  
#line 284 
  tmp = bnx2_get_regs_len(arg0);
  
#line 284 
  return tmp;
}


#line 342  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 345 
  ldv_atomic_inc(v);
  
#line 346 
  return;
}


#line 356  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int atomic_dec_and_test(atomic_t *v)
{
  int tmp;
  
#line 359 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 359 
  return tmp;
}


#line 657  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 660 
  tmp = ldv_kmalloc(size,flags);
  
#line 660 
  return tmp;
}


#line 678  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 681 
  tmp = ldv_kzalloc(size,flags);
  
#line 681 
  return tmp;
}


#line 826  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 830 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 832 
  spin_lock(lock);
  
#line 833 
  return;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 873 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 875 
  spin_unlock(lock);
  
#line 876 
  return;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 973 
  ldv_spin_model_lock((char *)"indirect_lock_of_bnx2");
  
#line 975 
  spin_lock_bh(lock);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 983 
  ldv_spin_model_unlock((char *)"indirect_lock_of_bnx2");
  
#line 985 
  spin_unlock_bh(lock);
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_75(spinlock_t *lock)
{
  
#line 993 
  ldv_spin_model_lock((char *)"indirect_lock_of_bnx2");
  
#line 995 
  spin_lock_bh(lock);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_76(spinlock_t *lock)
{
  
#line 1003 
  ldv_spin_model_unlock((char *)"indirect_lock_of_bnx2");
  
#line 1005 
  spin_unlock_bh(lock);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_77(spinlock_t *lock)
{
  
#line 1013 
  ldv_spin_model_lock((char *)"indirect_lock_of_bnx2");
  
#line 1015 
  spin_lock_bh(lock);
  
#line 1016 
  return;
}


#line 1019  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 1023 
  ldv_spin_model_unlock((char *)"indirect_lock_of_bnx2");
  
#line 1025 
  spin_unlock_bh(lock);
  
#line 1026 
  return;
}


#line 1029  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_lock_79(struct mutex *ldv_func_arg1)
{
  
#line 1033 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1034 
  return;
}


#line 1037  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1)
{
  
#line 1041 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1042 
  return;
}


#line 1045  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1)
{
  
#line 1049 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1050 
  return;
}


#line 1053  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1)
{
  
#line 1057 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1058 
  return;
}


#line 1061  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1)
{
  
#line 1065 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1066 
  return;
}


#line 1069  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1)
{
  
#line 1073 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1074 
  return;
}


#line 1077  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_85(spinlock_t *lock)
{
  
#line 1081 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1083 
  spin_lock_bh(lock);
  
#line 1084 
  return;
}


#line 1087  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_86(spinlock_t *lock)
{
  
#line 1091 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1093 
  spin_unlock_bh(lock);
  
#line 1094 
  return;
}


#line 1097  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_87(spinlock_t *lock)
{
  
#line 1101 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1103 
  spin_unlock_bh(lock);
  
#line 1104 
  return;
}


#line 1107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_88(spinlock_t *lock)
{
  
#line 1111 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1113 
  spin_lock_bh(lock);
  
#line 1114 
  return;
}


#line 1117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_89(spinlock_t *lock)
{
  
#line 1121 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1123 
  spin_unlock_bh(lock);
  
#line 1124 
  return;
}


#line 1127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_90(spinlock_t *lock)
{
  
#line 1131 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1133 
  spin_lock_bh(lock);
  
#line 1134 
  return;
}


#line 1137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_mod_timer_91(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1141 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1141 
  return tmp;
}


#line 1145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_92(spinlock_t *lock)
{
  
#line 1149 
  ldv_spin_model_lock((char *)"indirect_lock_of_bnx2");
  
#line 1151 
  spin_lock(lock);
  
#line 1152 
  return;
}


#line 1155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_93(spinlock_t *lock)
{
  
#line 1159 
  ldv_spin_model_unlock((char *)"indirect_lock_of_bnx2");
  
#line 1161 
  spin_unlock(lock);
  
#line 1162 
  return;
}


#line 1165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_94(spinlock_t *lock)
{
  
#line 1169 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1171 
  spin_unlock_bh(lock);
  
#line 1172 
  return;
}


#line 1175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_95(spinlock_t *lock)
{
  
#line 1179 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1181 
  spin_lock_bh(lock);
  
#line 1182 
  return;
}


#line 1185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_96(spinlock_t *lock)
{
  
#line 1189 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1191 
  spin_lock_bh(lock);
  
#line 1192 
  return;
}


#line 1195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_97(spinlock_t *lock)
{
  
#line 1199 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1201 
  spin_unlock_bh(lock);
  
#line 1202 
  return;
}


#line 1205  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_98(spinlock_t *lock)
{
  
#line 1209 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1211 
  spin_lock(lock);
  
#line 1212 
  return;
}


#line 1215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_99(spinlock_t *lock)
{
  
#line 1219 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1221 
  spin_unlock(lock);
  
#line 1222 
  return;
}


#line 1225  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_100(spinlock_t *lock)
{
  
#line 1229 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1231 
  spin_lock_bh(lock);
  
#line 1232 
  return;
}


#line 1235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_101(spinlock_t *lock)
{
  
#line 1239 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1241 
  spin_unlock_bh(lock);
  
#line 1242 
  return;
}


#line 1245  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_102(spinlock_t *lock)
{
  
#line 1249 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1251 
  spin_lock_bh(lock);
  
#line 1252 
  return;
}


#line 1255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_103(spinlock_t *lock)
{
  
#line 1259 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1261 
  spin_unlock_bh(lock);
  
#line 1262 
  return;
}


#line 1265  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_104(spinlock_t *lock)
{
  
#line 1269 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1271 
  spin_lock_bh(lock);
  
#line 1272 
  return;
}


#line 1275  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_105(spinlock_t *lock)
{
  
#line 1279 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1281 
  spin_unlock_bh(lock);
  
#line 1282 
  return;
}


#line 1285  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_106(spinlock_t *lock)
{
  
#line 1289 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1291 
  spin_lock_bh(lock);
  
#line 1292 
  return;
}


#line 1295  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_107(spinlock_t *lock)
{
  
#line 1299 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1301 
  spin_unlock_bh(lock);
  
#line 1302 
  return;
}


#line 1305  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_108(spinlock_t *lock)
{
  
#line 1309 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1311 
  spin_lock_bh(lock);
  
#line 1312 
  return;
}


#line 1315  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_109(spinlock_t *lock)
{
  
#line 1319 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1321 
  spin_unlock_bh(lock);
  
#line 1322 
  return;
}


#line 1325  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_110(spinlock_t *lock)
{
  
#line 1329 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1331 
  spin_lock_bh(lock);
  
#line 1332 
  return;
}


#line 1335  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_111(spinlock_t *lock)
{
  
#line 1339 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1341 
  spin_unlock_bh(lock);
  
#line 1342 
  return;
}


#line 1345  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_112(spinlock_t *lock)
{
  
#line 1349 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1351 
  spin_lock(lock);
  
#line 1352 
  return;
}


#line 1355  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_113(spinlock_t *lock)
{
  
#line 1359 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1361 
  spin_unlock(lock);
  
#line 1362 
  return;
}


#line 1365  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_114(spinlock_t *lock)
{
  
#line 1369 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1371 
  spin_lock(lock);
  
#line 1372 
  return;
}


#line 1375  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_115(spinlock_t *lock)
{
  
#line 1379 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1381 
  spin_unlock(lock);
  
#line 1382 
  return;
}


#line 1385  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_mod_timer_116(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1389 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1389 
  return tmp;
}


#line 1393  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_request_irq_117(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1397 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1397 
  return tmp;
}


#line 1401  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_free_irq_118(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1405 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1406 
  return;
}


#line 1409  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_mod_timer_119(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1413 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1413 
  return tmp;
}


#line 1417  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_del_timer_sync_120(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1421 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1421 
  return tmp;
}


#line 1425  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static bool ldv_schedule_work_121(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1429 
  tmp = ldv_emg_schedule_work(work);
  
#line 1429 
  __retres = tmp != 0;
  
#line 1429 
  return __retres;
}


#line 1433  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_del_timer_sync_122(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1437 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1437 
  return tmp;
}


#line 1441  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_123(spinlock_t *lock)
{
  
#line 1445 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1447 
  spin_lock_bh(lock);
  
#line 1448 
  return;
}


#line 1451  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_124(spinlock_t *lock)
{
  
#line 1455 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1457 
  spin_unlock_bh(lock);
  
#line 1458 
  return;
}


#line 1461  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_125(spinlock_t *lock)
{
  
#line 1465 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1467 
  spin_lock_bh(lock);
  
#line 1468 
  return;
}


#line 1471  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_126(spinlock_t *lock)
{
  
#line 1475 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1477 
  spin_unlock_bh(lock);
  
#line 1478 
  return;
}


#line 1481  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_127(spinlock_t *lock)
{
  
#line 1485 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1487 
  spin_lock_bh(lock);
  
#line 1488 
  return;
}


#line 1491  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_128(spinlock_t *lock)
{
  
#line 1495 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1497 
  spin_unlock_bh(lock);
  
#line 1498 
  return;
}


#line 1501  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_129(spinlock_t *lock)
{
  
#line 1505 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1507 
  spin_unlock_bh(lock);
  
#line 1508 
  return;
}


#line 1511  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_130(spinlock_t *lock)
{
  
#line 1515 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1517 
  spin_lock_bh(lock);
  
#line 1518 
  return;
}


#line 1521  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_mod_timer_131(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1525 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1525 
  return tmp;
}


#line 1529  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_132(spinlock_t *lock)
{
  
#line 1533 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1535 
  spin_unlock_bh(lock);
  
#line 1536 
  return;
}


#line 1539  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_lock_133(struct mutex *ldv_func_arg1)
{
  
#line 1543 
  ldv_mutex_model_lock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1544 
  return;
}


#line 1547  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_mutex_unlock_134(struct mutex *ldv_func_arg1)
{
  
#line 1551 
  ldv_mutex_model_unlock(ldv_func_arg1,(char *)"cnic_lock_of_bnx2");
  
#line 1552 
  return;
}


#line 1555  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_135(spinlock_t *lock)
{
  
#line 1559 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1561 
  spin_lock_bh(lock);
  
#line 1562 
  return;
}


#line 1565  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_136(spinlock_t *lock)
{
  
#line 1569 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1571 
  spin_unlock_bh(lock);
  
#line 1572 
  return;
}


#line 1575  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_137(spinlock_t *lock)
{
  
#line 1579 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1581 
  spin_lock_bh(lock);
  
#line 1582 
  return;
}


#line 1585  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_138(spinlock_t *lock)
{
  
#line 1589 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1591 
  spin_unlock_bh(lock);
  
#line 1592 
  return;
}


#line 1595  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_lock_bh_139(spinlock_t *lock)
{
  
#line 1599 
  ldv_spin_model_lock((char *)"phy_lock_of_bnx2");
  
#line 1601 
  spin_lock_bh(lock);
  
#line 1602 
  return;
}


#line 1605  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_spin_unlock_bh_140(spinlock_t *lock)
{
  
#line 1609 
  ldv_spin_model_unlock((char *)"phy_lock_of_bnx2");
  
#line 1611 
  spin_unlock_bh(lock);
  
#line 1612 
  return;
}


#line 1615  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_141(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1619 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1619 
  return tmp;
}


#line 1623  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_register_netdev_142(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1627 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1627 
  return tmp;
}


#line 1631  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_free_netdev_143(struct net_device *ldv_func_arg1)
{
  
#line 1635 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1636 
  return;
}


#line 1639  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_unregister_netdev_144(struct net_device *ldv_func_arg1)
{
  
#line 1643 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1644 
  return;
}


#line 1647  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_del_timer_sync_145(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1651 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1651 
  return tmp;
}


#line 1655  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_free_netdev_146(struct net_device *ldv_func_arg1)
{
  
#line 1659 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1660 
  return;
}


#line 1663  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_del_timer_sync_147(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1667 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1667 
  return tmp;
}


#line 1671  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv_del_timer_sync_148(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1675 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1675 
  return tmp;
}


#line 1679  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static int ldv___pci_register_driver_149(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1683 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1683 
  return tmp;
}


#line 1687  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/weaver/.tmp_bnx2.c.aux"
static void ldv_pci_unregister_driver_150(struct pci_driver *ldv_func_arg1)
{
  
#line 1691 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1692 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 97 
int main(void);


#line 98 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 99 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 101 
void *ldv_interrupt_scenario_17(void *arg0);


#line 102 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 105 
void *ldv_initialization_1(void *arg0);


#line 106 
void *ldv_random_allocationless_scenario_14(void *arg0);


#line 107 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 108 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 109 
void *ldv_pci_scenario_15(void *arg0);


#line 110 
void *ldv_timer_scenario_16(void *arg0);


#line 114 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 115 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 117 
void *ldv_pm_ops_scenario_13(void *arg0);


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 122  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 132 
  tmp = ldv_undef_int();
  
#line 132 
  switch (tmp) {
    case 0: 
#line 133 
    ;
    
#line 134 
    cf_arg_14 = (struct ldv_struct_random_allocationless_scenario_14 *)ldv_xmalloc(16UL);
    
#line 135 
    cf_arg_14->arg0 = arg0;
    
#line 136 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_14,(void *)cf_arg_14);
    
#line 137 
    __VERIFIER_assume(ret == 0);
    
#line 138 
    goto ldv_44761;
    default: 
#line 140 
    ;
    
#line 140 
    __VERIFIER_assume(0);
  }
  ldv_44761: 
#line 141 
  ;
  
#line 142 
  return;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 152 
  ldv_9_timer_list = arg0;
  
#line 156 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 157 
  ;
  
#line 157 
  __retres = 0;
  
#line 157 
  return __retres;
}


#line 165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 168 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_bnx2_pci_driver_2;
  
#line 171 
  ldv_10_pci_driver = arg0;
  
#line 175 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 179 
  goto return_label;
  return_label: 
#line 181 
                return;
}


#line 186  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 189 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_bnx2_pci_driver_2;
  
#line 193 
  tmp_0 = ldv_undef_int();
  
#line 193 
  if (tmp_0 != 0) {
    
#line 195 
    ldv_7_pci_driver = arg0;
    
#line 199 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 203 
    __retres = 0;
    
#line 203 
    goto return_label;
  }
  else {
    int tmp;
    
#line 210 
    tmp = ldv_undef_int_negative();
    
#line 210 
    __retres = tmp;
    
#line 210 
    goto return_label;
  }
  return_label: 
#line 193 
                return __retres;
}


#line 220  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 223 
  ldv_initialize();
  
#line 226 
  ldv_initialization_1((void *)0);
  
#line 228 
  __retres = 0;
  
#line 228 
  return __retres;
}


#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_17 *cf_arg_17;
  int tmp;
  
#line 236 
  tmp = ldv_undef_int();
  
#line 236 
  switch (tmp) {
    case 0: 
#line 237 
    ;
    
#line 238 
    cf_arg_17 = (struct ldv_struct_interrupt_scenario_17 *)ldv_xmalloc(32UL);
    
#line 239 
    cf_arg_17->arg0 = arg0;
    
#line 240 
    cf_arg_17->arg1 = arg1;
    
#line 241 
    cf_arg_17->arg2 = arg2;
    
#line 242 
    cf_arg_17->arg3 = arg3;
    
#line 243 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_interrupt_scenario_17,(void *)cf_arg_17);
    
#line 244 
    __VERIFIER_assume(ret == 0);
    
#line 245 
    goto ldv_44793;
    default: 
#line 247 
    ;
    
#line 247 
    __VERIFIER_assume(0);
  }
  ldv_44793: 
#line 248 
  ;
  
#line 249 
  return;
}


#line 253  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_17;
  int tmp;
  
#line 256 
  tmp = ldv_undef_int();
  
#line 256 
  switch (tmp) {
    case 0: 
#line 257 
    ;
    
#line 258 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 259 
    __VERIFIER_assume(ret == 0);
    
#line 260 
    goto ldv_44801;
    default: 
#line 262 
    ;
    
#line 262 
    __VERIFIER_assume(0);
  }
  ldv_44801: 
#line 263 
  ;
  
#line 264 
  return;
}


#line 268  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 275 
  tmp_0 = ldv_undef_int();
  
#line 275 
  if (tmp_0 != 0) {
    
#line 277 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 281 
    __retres = ldv_5_netdev;
    
#line 281 
    goto return_label;
  }
  else {
    
#line 288 
    __retres = (struct net_device *)0;
    
#line 288 
    goto return_label;
  }
  return_label: 
#line 275 
                return __retres;
}


#line 298  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_17(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_17_ret_val;
  int ldv_17_line;
  void *ldv_17_data;
  enum irqreturn (*ldv_17_callback)(int , void *);
  enum irqreturn (*ldv_17_thread)(int , void *);
  int tmp_0;
  
#line 307 
  struct ldv_struct_interrupt_scenario_17 *data = (struct ldv_struct_interrupt_scenario_17 *)arg0;
  
#line 312 
  if (data != (struct ldv_struct_interrupt_scenario_17 *)0) {
    
#line 313 
    ldv_17_line = data->arg0;
    
#line 314 
    ldv_17_callback = data->arg1;
    
#line 315 
    ldv_17_thread = data->arg2;
    
#line 316 
    ldv_17_data = data->arg3;
    
#line 317 
    ldv_free((void *)data);
  }
  else ;
  
#line 322 
  if (ldv_17_callback != (enum irqreturn (*)(int , void *))0) {
    
#line 324 
    ldv_switch_to_interrupt_context();
    
#line 326 
    ldv_17_ret_val = (*ldv_17_callback)(ldv_17_line,ldv_17_data);
    
#line 328 
    ldv_switch_to_process_context();
  }
  else {
    int tmp;
    
#line 330 
    tmp = ldv_undef_int();
    
#line 330 
    ldv_17_ret_val = (enum irqreturn)tmp;
  }
  
#line 334 
  tmp_0 = ldv_undef_int();
  
#line 334 
  if (tmp_0 != 0) {
    
#line 336 
    __VERIFIER_assume(ldv_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 340 
    if (ldv_17_thread != (enum irqreturn (*)(int , void *))0) 
#line 342 
                                                              (*ldv_17_thread)(ldv_17_line,ldv_17_data); else ;
  }
  else 
#line 349 
       __VERIFIER_assume(ldv_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 358 
  __retres = (void *)0;
  
#line 358 
  goto return_label;
  
#line 360 
  __retres = (void *)0;
  return_label: 
#line 360 
                return __retres;
}


#line 365  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_15 *cf_arg_15;
  int tmp;
  
#line 368 
  tmp = ldv_undef_int();
  
#line 368 
  switch (tmp) {
    case 0: 
#line 369 
    ;
    
#line 370 
    cf_arg_15 = (struct ldv_struct_pci_scenario_15 *)ldv_xmalloc(16UL);
    
#line 371 
    cf_arg_15->arg0 = arg0;
    
#line 372 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_pci_scenario_15,(void *)cf_arg_15);
    
#line 373 
    __VERIFIER_assume(ret == 0);
    
#line 374 
    goto ldv_44828;
    default: 
#line 376 
    ;
    
#line 376 
    __VERIFIER_assume(0);
  }
  ldv_44828: 
#line 377 
  ;
  
#line 378 
  return;
}


#line 382  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_callback)(int , void *);
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 392 
  tmp_0 = ldv_undef_int();
  
#line 392 
  if (tmp_0 != 0) {
    
#line 394 
    ldv_12_line = (int)arg0;
    
#line 395 
    ldv_12_callback = arg1;
    
#line 396 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 397 
    ldv_12_data = arg4;
    
#line 401 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 405 
    __retres = 0;
    
#line 405 
    goto return_label;
  }
  else {
    int tmp;
    
#line 412 
    tmp = ldv_undef_int_negative();
    
#line 412 
    __retres = tmp;
    
#line 412 
    goto return_label;
  }
  return_label: 
#line 392 
                return __retres;
}


#line 422  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 429 
  tmp = ldv_undef_int();
  
#line 429 
  if (tmp != 0) {
    
#line 431 
    ldv_8_work_struct = arg0;
    
#line 435 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 437 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 442 
    __retres = (_Bool)1;
    
#line 442 
    goto return_label;
  }
  else {
    
#line 449 
    __retres = (_Bool)0;
    
#line 449 
    goto return_label;
  }
  return_label: 
#line 429 
                return __retres;
}


#line 459  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 466 
  ldv_1_ret = ldv_emg_bnx2_pci_driver_init();
  
#line 467 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 470 
  tmp = ldv_undef_int();
  
#line 470 
  if (tmp != 0) {
    
#line 472 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 476 
    __retres = (void *)0;
    
#line 476 
    goto return_label;
  }
  else {
    
#line 480 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 485 
    ldv_emg_bnx2_pci_driver_exit();
    
#line 489 
    __retres = (void *)0;
    
#line 489 
    goto return_label;
  }
  
#line 492 
  __retres = (void *)0;
  return_label: 
#line 492 
                return __retres;
}


#line 497  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_14(void *arg0)
{
  void *__retres;
  struct ethtool_regs *ldv_14_ldv_param_1_28;
  struct ethtool_cmd *ldv_14_ldv_param_1_3;
  unsigned long long ldv_14_ldv_param_1_10;
  struct ethtool_eeprom *ldv_14_ldv_param_1_13;
  struct ethtool_ringparam *ldv_14_ldv_param_1_15;
  struct ethtool_coalesce *ldv_14_ldv_param_1_34;
  struct ethtool_pauseparam *ldv_14_ldv_param_1_35;
  struct ethtool_stats *ldv_14_ldv_param_1_8;
  struct ethtool_pauseparam *ldv_14_ldv_param_1_2;
  struct ethtool_cmd *ldv_14_ldv_param_1_4;
  int ldv_14_ldv_param_2_25;
  struct ethtool_drvinfo *ldv_14_ldv_param_1_11;
  struct sk_buff *ldv_14_ldv_param_0_16;
  unsigned long long *ldv_14_ldv_param_2_22;
  struct ethtool_coalesce *ldv_14_ldv_param_1_26;
  struct ethtool_wolinfo *ldv_14_ldv_param_1_27;
  void *ldv_14_ldv_param_2_29;
  struct ethtool_wolinfo *ldv_14_ldv_param_1_23;
  struct ethtool_eeprom *ldv_14_ldv_param_1_18;
  int ldv_14_ldv_param_1_20;
  struct ethtool_channels *ldv_14_ldv_param_1_12;
  unsigned char *ldv_14_ldv_param_2_19;
  struct ethtool_ringparam *ldv_14_ldv_param_1_33;
  struct ethtool_test *ldv_14_ldv_param_1_21;
  struct rtnl_link_stats64 *ldv_14_ldv_param_1_6;
  unsigned int ldv_14_ldv_param_1_31;
  void *ldv_14_ldv_param_1_17;
  struct ifreq *ldv_14_ldv_param_1_24;
  unsigned char *ldv_14_ldv_param_2_32;
  unsigned char *ldv_14_ldv_param_2_14;
  enum ethtool_phys_id_state *ldv_14_ldv_param_1_5;
  struct net_device *ldv_14_container;
  unsigned long long *ldv_14_ldv_param_2_9;
  struct ethtool_channels *ldv_14_ldv_param_1_30;
  int ldv_14_ldv_param_1_7;
  int tmp_27;
  
#line 536 
  struct ldv_struct_random_allocationless_scenario_14 *data = (struct ldv_struct_random_allocationless_scenario_14 *)arg0;
  
#line 541 
  if (data != (struct ldv_struct_random_allocationless_scenario_14 *)0) {
    
#line 542 
    ldv_14_container = data->arg0;
    
#line 543 
    ldv_free((void *)data);
  }
  else ;
  
#line 551 
  goto ldv_call_14;
  
#line 553 
  __retres = (void *)0;
  
#line 553 
  goto return_label;
  ldv_call_14: 
#line 556 
  ;
  
#line 559 
  tmp_27 = ldv_undef_int();
  
#line 559 
  if (tmp_27 != 0) {
    int tmp_0;
    
#line 561 
    ldv_14_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 564 
    tmp_0 = ldv_undef_int();
    
#line 564 
    switch (tmp_0) {
      case 1: 
#line 565 
      ;
      
#line 568 
      ldv_emg_wrapper_bnx2_get_pauseparam_2(ldv_14_container,ldv_14_ldv_param_1_2);
      
#line 571 
      goto ldv_44896;
      case 2: 
#line 573 
      ;
      
#line 576 
      ldv_emg_wrapper_bnx2_set_rx_mode_6(ldv_14_container);
      
#line 579 
      goto ldv_44896;
      case 3: 
#line 581 
      ;
      
#line 584 
      ldv_emg_wrapper_bnx2_nway_reset_29(ldv_14_container);
      
#line 587 
      goto ldv_44896;
      case 4: 
#line 589 
      ;
      
#line 591 
      ldv_14_ldv_param_1_35 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 596 
      ldv_emg_wrapper_bnx2_set_pauseparam_34(ldv_14_container,ldv_14_ldv_param_1_35);
      
#line 600 
      ldv_free((void *)ldv_14_ldv_param_1_35);
      
#line 603 
      goto ldv_44896;
      case 5: 
#line 605 
      ;
      
#line 607 
      ldv_14_ldv_param_1_34 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 612 
      ldv_emg_wrapper_bnx2_set_coalesce_33(ldv_14_container,ldv_14_ldv_param_1_34);
      
#line 616 
      ldv_free((void *)ldv_14_ldv_param_1_34);
      
#line 619 
      goto ldv_44896;
      case 6: 
#line 621 
      ;
      
#line 624 
      ldv_emg_wrapper_bnx2_get_regs_len_32(ldv_14_container);
      
#line 627 
      goto ldv_44896;
      case 7: 
#line 629 
      ;
      
#line 631 
      ldv_14_ldv_param_1_33 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 636 
      ldv_emg_wrapper_bnx2_get_ringparam_12(ldv_14_container,ldv_14_ldv_param_1_33);
      
#line 640 
      ldv_free((void *)ldv_14_ldv_param_1_33);
      
#line 643 
      goto ldv_44896;
      case 8: 
#line 645 
      ;
      
#line 647 
      ldv_14_ldv_param_2_32 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 652 
      ldv_emg_wrapper_bnx2_get_strings_30(ldv_14_container,ldv_14_ldv_param_1_31,ldv_14_ldv_param_2_32);
      
#line 656 
      ldv_free((void *)ldv_14_ldv_param_2_32);
      
#line 659 
      goto ldv_44896;
      case 9: 
#line 661 
      ;
      
#line 664 
      ldv_emg_wrapper_poll_bnx2_35(ldv_14_container);
      
#line 667 
      goto ldv_44896;
      case 10: 
#line 669 
      ;
      
#line 671 
      ldv_14_ldv_param_1_30 = (struct ethtool_channels *)ldv_xmalloc_unknown_size(0UL);
      
#line 676 
      ldv_emg_wrapper_bnx2_get_channels_28(ldv_14_container,ldv_14_ldv_param_1_30);
      
#line 680 
      ldv_free((void *)ldv_14_ldv_param_1_30);
      
#line 683 
      goto ldv_44896;
      case 11: 
#line 685 
      ;
      
#line 688 
      ldv_emg_wrapper_bnx2_tx_timeout_21(ldv_14_container);
      
#line 691 
      goto ldv_44896;
      case 12: 
#line 693 
      ;
      
#line 695 
      ldv_14_ldv_param_2_29 = ldv_xmalloc_unknown_size(0UL);
      
#line 696 
      ldv_14_ldv_param_1_28 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 701 
      ldv_emg_wrapper_bnx2_get_regs_26(ldv_14_container,ldv_14_ldv_param_1_28,ldv_14_ldv_param_2_29);
      
#line 705 
      ldv_free(ldv_14_ldv_param_2_29);
      
#line 706 
      ldv_free((void *)ldv_14_ldv_param_1_28);
      
#line 709 
      goto ldv_44896;
      case 13: 
#line 711 
      ;
      
#line 713 
      ldv_14_ldv_param_1_27 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 718 
      ldv_emg_wrapper_bnx2_set_wol_25(ldv_14_container,ldv_14_ldv_param_1_27);
      
#line 722 
      ldv_free((void *)ldv_14_ldv_param_1_27);
      
#line 725 
      goto ldv_44896;
      case 14: 
#line 727 
      ;
      
#line 729 
      ldv_14_ldv_param_1_26 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 734 
      ldv_emg_wrapper_bnx2_get_coalesce_31(ldv_14_container,ldv_14_ldv_param_1_26);
      
#line 738 
      ldv_free((void *)ldv_14_ldv_param_1_26);
      
#line 741 
      goto ldv_44896;
      case 15: 
#line 743 
      ;
      
#line 745 
      ldv_14_ldv_param_1_24 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 750 
      ldv_emg_wrapper_bnx2_ioctl_24(ldv_14_container,ldv_14_ldv_param_1_24,ldv_14_ldv_param_2_25);
      
#line 754 
      ldv_free((void *)ldv_14_ldv_param_1_24);
      
#line 757 
      goto ldv_44896;
      case 16: 
#line 759 
      ;
      
#line 761 
      ldv_14_ldv_param_1_23 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 766 
      ldv_emg_wrapper_bnx2_get_wol_23(ldv_14_container,ldv_14_ldv_param_1_23);
      
#line 770 
      ldv_free((void *)ldv_14_ldv_param_1_23);
      
#line 773 
      goto ldv_44896;
      case 17: 
#line 775 
      ;
      
#line 777 
      ldv_14_ldv_param_1_21 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 778 
      ldv_14_ldv_param_2_22 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 783 
      ldv_emg_wrapper_bnx2_self_test_22(ldv_14_container,ldv_14_ldv_param_1_21,ldv_14_ldv_param_2_22);
      
#line 787 
      ldv_free((void *)ldv_14_ldv_param_1_21);
      
#line 788 
      ldv_free((void *)ldv_14_ldv_param_2_22);
      
#line 791 
      goto ldv_44896;
      case 18: 
#line 793 
      ;
      
#line 799 
      ldv_emg_wrapper_bnx2_get_sset_count_27(ldv_14_container,ldv_14_ldv_param_1_20);
      
#line 805 
      goto ldv_44896;
      case 19: 
#line 807 
      ;
      
#line 809 
      ldv_14_ldv_param_1_18 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 810 
      ldv_14_ldv_param_2_19 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 815 
      ldv_emg_wrapper_bnx2_get_eeprom_3(ldv_14_container,ldv_14_ldv_param_1_18,ldv_14_ldv_param_2_19);
      
#line 819 
      ldv_free((void *)ldv_14_ldv_param_1_18);
      
#line 820 
      ldv_free((void *)ldv_14_ldv_param_2_19);
      
#line 823 
      goto ldv_44896;
      case 20: 
#line 825 
      ;
      
#line 827 
      ldv_14_ldv_param_1_17 = ldv_xmalloc_unknown_size(0UL);
      
#line 832 
      ldv_emg_wrapper_bnx2_change_mac_addr_19(ldv_14_container,ldv_14_ldv_param_1_17);
      
#line 836 
      ldv_free(ldv_14_ldv_param_1_17);
      
#line 839 
      goto ldv_44896;
      case 21: 
#line 841 
      ;
      
#line 843 
      ldv_14_ldv_param_0_16 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 848 
      ldv_emg_wrapper_bnx2_start_xmit_18(ldv_14_ldv_param_0_16,ldv_14_container);
      
#line 852 
      ldv_free((void *)ldv_14_ldv_param_0_16);
      
#line 855 
      goto ldv_44896;
      case 22: 
#line 857 
      ;
      
#line 859 
      ldv_14_ldv_param_1_15 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 864 
      ldv_emg_wrapper_bnx2_set_ringparam_17(ldv_14_container,ldv_14_ldv_param_1_15);
      
#line 868 
      ldv_free((void *)ldv_14_ldv_param_1_15);
      
#line 871 
      goto ldv_44896;
      case 23: 
#line 873 
      ;
      
#line 875 
      ldv_14_ldv_param_2_14 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 876 
      ldv_14_ldv_param_1_13 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 881 
      ldv_emg_wrapper_bnx2_set_eeprom_16(ldv_14_container,ldv_14_ldv_param_1_13,ldv_14_ldv_param_2_14);
      
#line 885 
      ldv_free((void *)ldv_14_ldv_param_2_14);
      
#line 886 
      ldv_free((void *)ldv_14_ldv_param_1_13);
      
#line 889 
      goto ldv_44896;
      case 24: 
#line 891 
      ;
      
#line 894 
      ldv_emg_wrapper_bnx2_get_eeprom_len_36(ldv_14_container);
      
#line 897 
      goto ldv_44896;
      case 25: 
#line 899 
      ;
      
#line 901 
      ldv_14_ldv_param_1_12 = (struct ethtool_channels *)ldv_xmalloc_unknown_size(0UL);
      
#line 906 
      ldv_emg_wrapper_bnx2_set_channels_15(ldv_14_container,ldv_14_ldv_param_1_12);
      
#line 910 
      ldv_free((void *)ldv_14_ldv_param_1_12);
      
#line 913 
      goto ldv_44896;
      case 26: 
#line 915 
      ;
      
#line 917 
      ldv_14_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 922 
      ldv_emg_wrapper_bnx2_get_drvinfo_14(ldv_14_container,ldv_14_ldv_param_1_11);
      
#line 926 
      ldv_free((void *)ldv_14_ldv_param_1_11);
      
#line 929 
      goto ldv_44896;
      case 27: 
#line 931 
      ;
      
#line 937 
      ldv_emg_wrapper_bnx2_set_features_13(ldv_14_container,ldv_14_ldv_param_1_10);
      
#line 943 
      goto ldv_44896;
      case 28: 
#line 945 
      ;
      
#line 948 
      ldv_emg_wrapper_bnx2_get_link_11(ldv_14_container);
      
#line 951 
      goto ldv_44896;
      case 29: 
#line 953 
      ;
      
#line 956 
      (*ldv_emg_alias_eth_validate_addr_8)(ldv_14_container);
      
#line 959 
      goto ldv_44896;
      case 30: 
#line 961 
      ;
      
#line 963 
      ldv_14_ldv_param_1_8 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 964 
      ldv_14_ldv_param_2_9 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 969 
      ldv_emg_wrapper_bnx2_get_ethtool_stats_9(ldv_14_container,ldv_14_ldv_param_1_8,ldv_14_ldv_param_2_9);
      
#line 973 
      ldv_free((void *)ldv_14_ldv_param_1_8);
      
#line 974 
      ldv_free((void *)ldv_14_ldv_param_2_9);
      
#line 977 
      goto ldv_44896;
      case 31: 
#line 979 
      ;
      
#line 985 
      ldv_emg_wrapper_bnx2_change_mtu_10(ldv_14_container,ldv_14_ldv_param_1_7);
      
#line 991 
      goto ldv_44896;
      case 32: 
#line 993 
      ;
      
#line 995 
      ldv_14_ldv_param_1_6 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 1000 
      ldv_emg_wrapper_bnx2_get_stats64_7(ldv_14_container,ldv_14_ldv_param_1_6);
      
#line 1004 
      ldv_free((void *)ldv_14_ldv_param_1_6);
      
#line 1007 
      goto ldv_44896;
      case 33: 
#line 1009 
      ;
      
#line 1011 
      ldv_14_ldv_param_1_5 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1016 
      ldv_emg_wrapper_bnx2_set_phys_id_5(ldv_14_container,*ldv_14_ldv_param_1_5);
      
#line 1020 
      ldv_free((void *)ldv_14_ldv_param_1_5);
      
#line 1023 
      goto ldv_44896;
      case 34: 
#line 1025 
      ;
      
#line 1027 
      ldv_14_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1032 
      ldv_emg_wrapper_bnx2_set_settings_4(ldv_14_container,ldv_14_ldv_param_1_4);
      
#line 1036 
      ldv_free((void *)ldv_14_ldv_param_1_4);
      
#line 1039 
      goto ldv_44896;
      case 35: 
#line 1041 
      ;
      
#line 1043 
      ldv_14_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1048 
      ldv_emg_wrapper_bnx2_get_settings_20(ldv_14_container,ldv_14_ldv_param_1_3);
      
#line 1052 
      ldv_free((void *)ldv_14_ldv_param_1_3);
      
#line 1055 
      goto ldv_44896;
      default: 
#line 1057 
      ;
      
#line 1057 
      __VERIFIER_assume(0);
    }
    ldv_44896: 
#line 1060 
    ;
    
#line 1060 
    ldv_free((void *)ldv_14_ldv_param_1_2);
    
#line 1067 
    goto ldv_call_14;
  }
  else {
    
#line 1075 
    __retres = (void *)0;
    
#line 1075 
    goto return_label;
  }
  
#line 1078 
  __retres = (void *)0;
  return_label: 
#line 1078 
                return __retres;
}


#line 1083  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_16 *cf_arg_16;
  int tmp;
  
#line 1086 
  tmp = ldv_undef_int();
  
#line 1086 
  switch (tmp) {
    case 0: 
#line 1087 
    ;
    
#line 1088 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 1089 
    __VERIFIER_assume(ret == 0);
    
#line 1090 
    goto ldv_44938;
    default: 
#line 1092 
    ;
    
#line 1092 
    __VERIFIER_assume(0);
  }
  ldv_44938: 
#line 1093 
  ;
  
#line 1094 
  return;
}


#line 1098  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_16(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_16_container;
  
#line 1103 
  struct ldv_struct_timer_scenario_16 *data = (struct ldv_struct_timer_scenario_16 *)arg0;
  
#line 1108 
  if (data != (struct ldv_struct_timer_scenario_16 *)0) {
    
#line 1109 
    ldv_16_container = data->arg0;
    
#line 1110 
    ldv_free((void *)data);
  }
  else ;
  
#line 1115 
  if (ldv_16_container->function != (void (*)(unsigned long ))0) {
    
#line 1117 
    ldv_switch_to_interrupt_context();
    
#line 1119 
    (*(ldv_16_container->function))(ldv_16_container->data);
    
#line 1121 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 1130 
  __retres = (void *)0;
  
#line 1130 
  goto return_label;
  
#line 1132 
  __retres = (void *)0;
  return_label: 
#line 1132 
                return __retres;
}


#line 1137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_15(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_15_resource_1;
  struct pci_device_id *ldv_15_ldv_param_1_2;
  struct pm_message ldv_15_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1142 
  struct pci_driver *ldv_15_container = ldv_emg_alias_bnx2_pci_driver_2;
  
#line 1143 
  int ldv_15_ret = ldv_undef_int();
  
#line 1146 
  struct ldv_struct_pci_scenario_15 *data = (struct ldv_struct_pci_scenario_15 *)arg0;
  
#line 1150 
  ldv_15_ret = ldv_undef_int();
  
#line 1153 
  if (data != (struct ldv_struct_pci_scenario_15 *)0) {
    
#line 1154 
    ldv_15_container = data->arg0;
    
#line 1155 
    ldv_free((void *)data);
  }
  else ;
  
#line 1166 
  goto ldv_main_15;
  
#line 1168 
  __retres = (void *)0;
  
#line 1168 
  goto return_label;
  ldv_main_15: 
#line 1171 
  ;
  
#line 1174 
  tmp_2 = ldv_undef_int();
  
#line 1174 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1176 
    ldv_15_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1181 
    ldv_pre_probe();
    
#line 1183 
    ldv_15_ret = ldv_emg_wrapper_bnx2_init_one_3(ldv_15_resource_1,ldv_15_ldv_param_1_2);
    
#line 1185 
    ldv_15_ret = ldv_post_probe(ldv_15_ret);
    
#line 1189 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1192 
    tmp_1 = ldv_undef_int();
    
#line 1192 
    if (tmp_1 != 0) {
      
#line 1194 
      __VERIFIER_assume(ldv_15_ret == 0);
      
#line 1201 
      goto ldv_call_15;
    }
    else {
      
#line 1205 
      __VERIFIER_assume(ldv_15_ret != 0);
      
#line 1212 
      goto ldv_main_15;
    }
  }
  else {
    
#line 1224 
    __retres = (void *)0;
    
#line 1224 
    goto return_label;
  }
  
#line 1227 
  __retres = (void *)0;
  
#line 1227 
  goto return_label;
  ldv_call_15: 
#line 1230 
  ;
  
#line 1233 
  tmp_3 = ldv_undef_int();
  
#line 1233 
  switch (tmp_3) {
    case 1: 
#line 1234 
    ;
    
#line 1243 
    goto ldv_call_15;
    case 2: 
#line 1246 
    ;
    
#line 1248 
    if (ldv_15_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1250 
      ldv_15_ret = (*(ldv_15_container->suspend))(ldv_15_resource_1,ldv_15_resource_0);
      
#line 1252 
      ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    }
    else 
#line 1254 
         ldv_15_ret = ldv_undef_int();
    
#line 1259 
    if (ldv_15_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1261 
      ldv_15_ret = (*(ldv_15_container->suspend_late))(ldv_15_resource_1,ldv_15_resource_0);
      
#line 1263 
      ldv_15_ret = ldv_filter_err_code(ldv_15_ret);
    }
    else 
#line 1265 
         ldv_15_ret = ldv_undef_int();
    
#line 1270 
    if (ldv_15_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1272 
      (*(ldv_15_container->resume_early))(ldv_15_resource_1); else ;
    
#line 1277 
    if (ldv_15_container->resume != (int (*)(struct pci_dev *))0) 
#line 1279 
                                                                  (*(ldv_15_container->resume))(ldv_15_resource_1); else ;
    
#line 1287 
    goto ldv_call_15;
    case 3: 
#line 1290 
    ;
    
#line 1293 
    ldv_emg_wrapper_bnx2_shutdown_2(ldv_15_resource_1);
    
#line 1298 
    ldv_emg_wrapper_bnx2_remove_one_4(ldv_15_resource_1);
    
#line 1305 
    goto ldv_main_15;
    default: 
#line 1308 
    ;
    
#line 1308 
    __VERIFIER_assume(0);
  }
  
#line 1311 
  __retres = (void *)0;
  return_label: 
#line 1311 
                return __retres;
}


#line 1316  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1319 
  tmp = ldv_undef_int();
  
#line 1319 
  switch (tmp) {
    case 0: 
#line 1320 
    ;
    
#line 1321 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1322 
    __VERIFIER_assume(ret == 0);
    
#line 1323 
    goto ldv_44966;
    default: 
#line 1325 
    ;
    
#line 1325 
    __VERIFIER_assume(0);
  }
  ldv_44966: 
#line 1326 
  ;
  
#line 1327 
  return;
}


#line 1331  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 1335 
  int ldv_11_ret = ldv_undef_int();
  
#line 1338 
  ldv_11_ret = ldv_undef_int();
  
#line 1341 
  tmp_3 = ldv_undef_int();
  
#line 1341 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1343 
    ldv_11_netdev = arg0;
    
#line 1348 
    ldv_11_ret = ldv_emg_wrapper_bnx2_open_2(ldv_11_netdev);
    
#line 1351 
    tmp_1 = ldv_undef_int();
    
#line 1351 
    if (tmp_1 != 0) {
      
#line 1353 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1357 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 1361 
      __retres = 0;
      
#line 1361 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1368 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1369 
      ldv_failed_register_netdev();
      
#line 1370 
      tmp_0 = ldv_undef_int_negative();
      
#line 1370 
      __retres = tmp_0;
      
#line 1370 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1378 
    ldv_failed_register_netdev();
    
#line 1379 
    tmp_2 = ldv_undef_int_negative();
    
#line 1379 
    __retres = tmp_2;
    
#line 1379 
    goto return_label;
  }
  return_label: 
#line 1341 
                return __retres;
}


#line 1389  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1395 
  ldv_6_netdev = arg0;
  
#line 1400 
  ldv_emg_wrapper_bnx2_close_2(ldv_6_netdev);
  
#line 1404 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1408 
  goto return_label;
  return_label: 
#line 1410 
                return;
}


#line 1415  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1421 
  ldv_3_line = (int)arg0;
  
#line 1425 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1429 
  goto return_label;
  return_label: 
#line 1431 
                return;
}


#line 1436  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_16 *cf_arg_16;
  int tmp;
  
#line 1439 
  tmp = ldv_undef_int();
  
#line 1439 
  switch (tmp) {
    case 0: 
#line 1440 
    ;
    
#line 1441 
    cf_arg_16 = (struct ldv_struct_timer_scenario_16 *)ldv_xmalloc(16UL);
    
#line 1442 
    cf_arg_16->arg0 = arg0;
    
#line 1443 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_timer_scenario_16,(void *)cf_arg_16);
    
#line 1444 
    __VERIFIER_assume(ret == 0);
    
#line 1445 
    goto ldv_44988;
    default: 
#line 1447 
    ;
    
#line 1447 
    __VERIFIER_assume(0);
  }
  ldv_44988: 
#line 1448 
  ;
  
#line 1449 
  return;
}


#line 1453  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 1456 
  tmp = ldv_undef_int();
  
#line 1456 
  switch (tmp) {
    case 0: 
#line 1457 
    ;
    
#line 1458 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 1459 
    __VERIFIER_assume(ret == 0);
    
#line 1460 
    goto ldv_44996;
    default: 
#line 1462 
    ;
    
#line 1462 
    __VERIFIER_assume(0);
  }
  ldv_44996: 
#line 1463 
  ;
  
#line 1464 
  return;
}


#line 1468  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1474 
  ldv_2_netdev = arg0;
  
#line 1475 
  ldv_free((void *)ldv_2_netdev);
  
#line 1479 
  goto return_label;
  return_label: 
#line 1481 
                return;
}


#line 1486  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pm_ops_scenario_13(void *arg0)
{
  void *__retres;
  struct device *ldv_13_device;
  int tmp;
  
#line 1489 
  struct dev_pm_ops *ldv_13_pm_ops = ldv_emg_alias_bnx2_pm_ops_3;
  
#line 1500 
  goto ldv_do_13;
  
#line 1502 
  __retres = (void *)0;
  
#line 1502 
  goto return_label;
  ldv_do_13: 
#line 1505 
  ;
  
#line 1508 
  tmp = ldv_undef_int();
  
#line 1508 
  switch (tmp) {
    int tmp_0;
    case 1: 
#line 1509 
    ;
    
#line 1511 
    if (ldv_13_pm_ops->runtime_idle != (int (*)(struct device *))0) 
#line 1513 
                                                                    (*(ldv_13_pm_ops->runtime_idle))(ldv_13_device); else ;
    
#line 1521 
    goto ldv_do_13;
    case 2: 
#line 1524 
    ;
    
#line 1526 
    if (ldv_13_pm_ops->runtime_suspend != (int (*)(struct device *))0) 
      
#line 1528 
      (*(ldv_13_pm_ops->runtime_suspend))(ldv_13_device); else ;
    
#line 1533 
    if (ldv_13_pm_ops->runtime_resume != (int (*)(struct device *))0) 
      
#line 1535 
      (*(ldv_13_pm_ops->runtime_resume))(ldv_13_device); else ;
    
#line 1543 
    goto ldv_do_13;
    case 3: 
#line 1546 
    ;
    
#line 1548 
    if (ldv_13_pm_ops->prepare != (int (*)(struct device *))0) 
#line 1550 
                                                               (*(ldv_13_pm_ops->prepare))(ldv_13_device); else ;
    
#line 1554 
    tmp_0 = ldv_undef_int();
    
#line 1554 
    switch (tmp_0) {
      int tmp_1;
      int tmp_2;
      int tmp_3;
      case 1: 
#line 1555 
      ;
      
#line 1558 
      ldv_emg_wrapper_bnx2_suspend_2(ldv_13_device);
      
#line 1561 
      tmp_1 = ldv_undef_int();
      
#line 1561 
      if (tmp_1 != 0) {
        
#line 1563 
        if (ldv_13_pm_ops->suspend_noirq != (int (*)(struct device *))0) 
          
#line 1565 
          (*(ldv_13_pm_ops->suspend_noirq))(ldv_13_device); else ;
        
#line 1570 
        if (ldv_13_pm_ops->resume_noirq != (int (*)(struct device *))0) 
          
#line 1572 
          (*(ldv_13_pm_ops->resume_noirq))(ldv_13_device); else ;
      }
      else {
        
#line 1579 
        if (ldv_13_pm_ops->suspend_late != (int (*)(struct device *))0) 
          
#line 1581 
          (*(ldv_13_pm_ops->suspend_late))(ldv_13_device); else ;
        
#line 1586 
        if (ldv_13_pm_ops->resume_early != (int (*)(struct device *))0) 
          
#line 1588 
          (*(ldv_13_pm_ops->resume_early))(ldv_13_device); else ;
      }
      
#line 1595 
      ldv_emg_wrapper_bnx2_resume_4(ldv_13_device);
      
#line 1598 
      goto ldv_45012;
      case 2: 
#line 1600 
      ;
      
#line 1603 
      ldv_emg_wrapper_bnx2_suspend_2(ldv_13_device);
      
#line 1606 
      tmp_2 = ldv_undef_int();
      
#line 1606 
      if (tmp_2 != 0) {
        
#line 1608 
        if (ldv_13_pm_ops->freeze_late != (int (*)(struct device *))0) 
          
#line 1610 
          (*(ldv_13_pm_ops->freeze_late))(ldv_13_device); else ;
        
#line 1615 
        if (ldv_13_pm_ops->thaw_early != (int (*)(struct device *))0) 
          
#line 1617 
          (*(ldv_13_pm_ops->thaw_early))(ldv_13_device); else ;
      }
      else {
        
#line 1624 
        if (ldv_13_pm_ops->freeze_noirq != (int (*)(struct device *))0) 
          
#line 1626 
          (*(ldv_13_pm_ops->freeze_noirq))(ldv_13_device); else ;
        
#line 1631 
        if (ldv_13_pm_ops->thaw_noirq != (int (*)(struct device *))0) 
          
#line 1633 
          (*(ldv_13_pm_ops->thaw_noirq))(ldv_13_device); else ;
      }
      
#line 1640 
      ldv_emg_wrapper_bnx2_resume_4(ldv_13_device);
      
#line 1643 
      goto ldv_45012;
      case 3: 
#line 1645 
      ;
      
#line 1648 
      ldv_emg_wrapper_bnx2_suspend_2(ldv_13_device);
      
#line 1651 
      tmp_3 = ldv_undef_int();
      
#line 1651 
      if (tmp_3 != 0) {
        
#line 1653 
        if (ldv_13_pm_ops->poweroff_late != (int (*)(struct device *))0) 
          
#line 1655 
          (*(ldv_13_pm_ops->poweroff_late))(ldv_13_device); else ;
        
#line 1660 
        if (ldv_13_pm_ops->restore_early != (int (*)(struct device *))0) 
          
#line 1662 
          (*(ldv_13_pm_ops->restore_early))(ldv_13_device); else ;
      }
      else {
        
#line 1669 
        if (ldv_13_pm_ops->poweroff_noirq != (int (*)(struct device *))0) 
          
#line 1671 
          (*(ldv_13_pm_ops->poweroff_noirq))(ldv_13_device); else ;
        
#line 1676 
        if (ldv_13_pm_ops->restore_noirq != (int (*)(struct device *))0) 
          
#line 1678 
          (*(ldv_13_pm_ops->restore_noirq))(ldv_13_device); else ;
      }
      
#line 1685 
      ldv_emg_wrapper_bnx2_resume_4(ldv_13_device);
      
#line 1688 
      goto ldv_45012;
      default: 
#line 1690 
      ;
      
#line 1690 
      __VERIFIER_assume(0);
    }
    ldv_45012: 
#line 1693 
    ;
    
#line 1693 
    if (ldv_13_pm_ops->complete != (void (*)(struct device *))0) 
#line 1695 
                                                                 (*(ldv_13_pm_ops->complete))(ldv_13_device); else ;
    
#line 1703 
    goto ldv_do_13;
    case 4: 
#line 1706 
    ;
    
#line 1712 
    __retres = (void *)0;
    
#line 1712 
    goto return_label;
    default: 
#line 1715 
    ;
    
#line 1715 
    __VERIFIER_assume(0);
  }
  
#line 1718 
  __retres = (void *)0;
  return_label: 
#line 1718 
                return __retres;
}


#line 1723  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/broadcom/bnx2.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1730 
  tmp_0 = ldv_undef_int();
  
#line 1730 
  if (tmp_0 != 0) {
    
#line 1732 
    ldv_4_timer_list = arg0;
    
#line 1736 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1740 
    __retres = 0;
    
#line 1740 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1747 
    tmp = ldv_undef_int_negative();
    
#line 1747 
    __retres = tmp;
    
#line 1747 
    goto return_label;
  }
  return_label: 
#line 1730 
                return __retres;
}


