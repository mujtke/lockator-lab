/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long ulong;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u16 uint16_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct vm_area_struct;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_46 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_46 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_48 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_47 {
   struct __anonstruct_48 __anonCompField___anonunion_47_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_47 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemleak.h"
struct kmem_cache;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 33 
struct inode;

#line 34 
struct dentry;

#line 35 
struct user_namespace;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_146 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_147 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_145 {
   struct __anonstruct_146 __anonCompField___anonunion_145_33 ;
   struct __anonstruct_147 __anonCompField___anonunion_145_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_145 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_148 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   atomic_t _mapcount ;
   struct __anonstruct_154 __anonCompField___anonunion_153_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_152 {
   union __anonunion_153 __anonCompField___anonstruct_152_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_151 {
   unsigned long counters ;
   struct __anonstruct_152 __anonCompField___anonunion_151_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_149 {
   union __anonunion_150 __anonCompField___anonstruct_149_37 ;
   union __anonunion_151 __anonCompField___anonstruct_149_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_157 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   struct list_head lru ;
   struct __anonstruct_156 __anonCompField___anonunion_155_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_157 __anonCompField___anonunion_155_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_158 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_148 __anonCompField_page_36 ;
   struct __anonstruct_149 __anonCompField_page_42 ;
   union __anonunion_155 __anonCompField_page_45 ;
   union __anonunion_158 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_159 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_159 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_161 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_161 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_162 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_162 kgid_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_163 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_163 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_165 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_166 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_167 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_170 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_169 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_170 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_171 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_172 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_164 {
   int _pad[28U] ;
   struct __anonstruct__kill_165 _kill ;
   struct __anonstruct__timer_166 _timer ;
   struct __anonstruct__rt_167 _rt ;
   struct __anonstruct__sigchld_168 _sigchld ;
   struct __anonstruct__sigfault_169 _sigfault ;
   struct __anonstruct__sigpoll_171 _sigpoll ;
   struct __anonstruct__sigsys_172 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_164 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct cred;

#line 38 
struct key_type;

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_179 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_180 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_182 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_181 {
   struct keyring_index_key index_key ;
   struct __anonstruct_182 __anonCompField___anonunion_181_49 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_183 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_185 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_184 {
   union __anonunion_payload_185 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_179 __anonCompField_key_47 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_180 __anonCompField_key_48 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_181 __anonCompField_key_50 ;
   union __anonunion_type_data_183 type_data ;
   union __anonunion_184 __anonCompField_key_51 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
union __anonunion_186 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 369  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_186 __anonCompField_idr_layer_52 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 31 
struct kernfs_node;

#line 32 
struct kernfs_ops;

#line 33 
struct kernfs_open_file;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270 
struct kernfs_root;

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct iattr;

#line 54 
struct super_block;

#line 55 
struct file_system_type;

#line 56 
struct kernfs_open_node;

#line 57 
struct kernfs_iattrs;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_209 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_209 __anonCompField_kernfs_node_56 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_210 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_210 __anonCompField_kernel_param_57 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_220 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_220 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_221 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_221 __anonCompField_iov_iter_59 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_223 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_223 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_224 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_224 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_225 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_225 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_226 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_226 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_227 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_227 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_228 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_228 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_229 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_229 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_230 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_230 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_231 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_232 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_231 ifr_ifrn ;
   union __anonunion_ifr_ifru_232 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_237 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_60 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_236 __anonCompField_lockref_61 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_239 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_62 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_238 __anonCompField_qstr_63 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_240 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_240 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_244 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_64 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_243 __anonCompField_radix_tree_node_65 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_248 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_248 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_249 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_249 __anonCompField_kqid_67 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_252 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_253 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_254 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_252 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_253 __anonCompField_inode_69 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_254 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_255 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_255 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_257 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_256 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_257 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_256 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_25522 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_25522 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_272 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_272 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_26368 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_277 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_26368 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_277 __anonCompField_nf_bridge_info_74 ;
   union __anonunion_278 __anonCompField_nf_bridge_info_75 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_281 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   u64 v64 ;
   struct __anonstruct_281 __anonCompField___anonunion_280_76 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_280 __anonCompField_skb_mstamp_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_283 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_284 __anonCompField___anonstruct_283_78 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_282 {
   struct __anonstruct_283 __anonCompField___anonunion_282_79 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_286 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __wsum csum ;
   struct __anonstruct_286 __anonCompField___anonunion_285_81 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_282 __anonCompField_sk_buff_80 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_285 __anonCompField_sk_buff_82 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_287 __anonCompField_sk_buff_83 ;
   __u32 secmark ;
   union __anonunion_288 __anonCompField_sk_buff_84 ;
   union __anonunion_289 __anonCompField_sk_buff_85 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29129 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29129 phy_interface_t;

#line 126 
enum ldv_29182 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29182 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30892 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30893 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30892 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30893 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_333 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_333 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_344 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_344 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_345 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_345 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_347 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_346 {
   __addrpair skc_addrpair ;
   struct __anonstruct_347 __anonCompField___anonunion_346_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_348 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_350 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   __portpair skc_portpair ;
   struct __anonstruct_350 __anonCompField___anonunion_349_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_351 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_346 __anonCompField_sock_common_103 ;
   union __anonunion_348 __anonCompField_sock_common_104 ;
   union __anonunion_349 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_351 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_352 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_353 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_353 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_356 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_356 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 1027  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hdr.h"
struct netxen_adapter;

#line 279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.h"
struct __anonstruct_crb_128M_2M_sub_block_map_t_372 {
   unsigned int valid ;
   unsigned int start_128M ;
   unsigned int end_128M ;
   unsigned int start_2M ;
};

#line 279  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.h"
typedef struct __anonstruct_crb_128M_2M_sub_block_map_t_372 crb_128M_2M_sub_block_map_t;

#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.h"
struct __anonstruct_crb_128M_2M_block_map_t_373 {
   crb_128M_2M_sub_block_map_t sub_block[16U] ;
};

#line 283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.h"
typedef struct __anonstruct_crb_128M_2M_block_map_t_373 crb_128M_2M_block_map_t;

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_rcv_ring {
   __le64 addr ;
   __le32 size ;
   __le32 rsrvd ;
};

#line 262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_sts_ring {
   __le64 addr ;
   __le32 size ;
   __le16 msi_index ;
   __le16 rsvd ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_ring_ctx {
   __le64 cmd_consumer_offset ;
   __le64 cmd_ring_addr ;
   __le32 cmd_ring_size ;
   __le32 rsrvd ;
   struct netxen_rcv_ring rcv_rings[3U] ;
   __le64 sts_ring_addr ;
   __le32 sts_ring_size ;
   __le32 ctx_id ;
   __le64 rsrvd_2[3U] ;
   __le32 sts_ring_count ;
   __le32 rsrvd_3 ;
   struct netxen_sts_ring sts_rings[4U] ;
};

#line 291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct cmd_desc_type0 {
   u8 tcp_hdr_offset ;
   u8 ip_hdr_offset ;
   __le16 flags_opcode ;
   __le32 nfrags__length ;
   __le64 addr_buffer2 ;
   __le16 reference_handle ;
   __le16 mss ;
   u8 port_ctxid ;
   u8 total_hdr_length ;
   __le16 conn_id ;
   __le64 addr_buffer3 ;
   __le64 addr_buffer1 ;
   __le16 buffer_length[4U] ;
   __le64 addr_buffer4 ;
   __le32 reserved2 ;
   __le16 reserved ;
   __le16 vlan_TCI ;
};

#line 355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct rcv_desc {
   __le16 reference_handle ;
   __le16 reserved ;
   __le32 buffer_length ;
   __le64 addr_buffer ;
};

#line 364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct status_desc {
   __le64 status_desc_data[2U] ;
};

#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_skb_frag {
   u64 dma ;
   u64 length ;
};

#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_cmd_buffer {
   struct sk_buff *skb ;
   struct netxen_skb_frag frag_array[18U] ;
   u32 frag_count ;
};

#line 564  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_rx_buffer {
   struct list_head list ;
   struct sk_buff *skb ;
   u64 dma ;
   u16 ref_handle ;
   u16 state ;
};

#line 573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_hardware_context {
   void *pci_base0 ;
   void *pci_base1 ;
   void *pci_base2 ;
   void *db_base ;
   void *ocm_win_crb ;
   unsigned long db_len ;
   unsigned long pci_len0 ;
   u32 ocm_win ;
   u32 crb_win ;
   rwlock_t crb_lock ;
   spinlock_t mem_lock ;
   u8 cut_through ;
   u8 revision_id ;
   u8 pci_func ;
   u8 linkup ;
   u16 port_type ;
   u16 board_type ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_adapter_stats {
   u64 xmitcalled ;
   u64 xmitfinished ;
   u64 rxdropped ;
   u64 txdropped ;
   u64 csummed ;
   u64 rx_pkts ;
   u64 lro_pkts ;
   u64 rxbytes ;
   u64 txbytes ;
};

#line 620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct nx_host_rds_ring {
   u32 producer ;
   u32 num_desc ;
   u32 dma_size ;
   u32 skb_size ;
   u32 flags ;
   void *crb_rcv_producer ;
   struct rcv_desc *desc_head ;
   struct netxen_rx_buffer *rx_buf_arr ;
   struct list_head free_list ;
   spinlock_t lock ;
   dma_addr_t phys_addr ;
};

#line 638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct nx_host_sds_ring {
   u32 consumer ;
   u32 num_desc ;
   void *crb_sts_consumer ;
   void *crb_intr_mask ;
   struct status_desc *desc_head ;
   struct netxen_adapter *adapter ;
   struct napi_struct napi ;
   struct list_head free_list[3U] ;
   int irq ;
   dma_addr_t phys_addr ;
   char name[20U] ;
};

#line 655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct nx_host_tx_ring {
   u32 producer ;
   __le32 *hw_consumer ;
   u32 sw_consumer ;
   void *crb_cmd_producer ;
   void *crb_cmd_consumer ;
   u32 num_desc ;
   struct netdev_queue *txq ;
   struct netxen_cmd_buffer *cmd_buf_arr ;
   struct cmd_desc_type0 *desc_head ;
   dma_addr_t phys_addr ;
};

#line 670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_recv_context {
   u32 state ;
   u16 context_id ;
   u16 virt_port ;
   struct nx_host_rds_ring *rds_rings ;
   struct nx_host_sds_ring *sds_rings ;
   struct netxen_ring_ctx *hwctx ;
   dma_addr_t phys_addr ;
};

#line 924  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct nx_mac_list_s {
   struct list_head list ;
   uint8_t mac_addr[8U] ;
};

#line 954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct nx_mac_list_s nx_mac_list_t;

#line 981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_data_385 {
   uint16_t rx_packets ;
   uint16_t rx_time_us ;
   uint16_t tx_packets ;
   uint16_t tx_time_us ;
};

#line 981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_nx_nic_intr_coalesce_data_t_384 {
   struct __anonstruct_data_385 data ;
   uint64_t word ;
};

#line 981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef union __anonunion_nx_nic_intr_coalesce_data_t_384 nx_nic_intr_coalesce_data_t;

#line 994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_nic_intr_coalesce_t_386 {
   uint16_t stats_time_us ;
   uint16_t rate_sample_time ;
   uint16_t flags ;
   uint16_t rsvd_1 ;
   uint32_t low_threshold ;
   uint32_t high_threshold ;
   nx_nic_intr_coalesce_data_t normal ;
   nx_nic_intr_coalesce_data_t low ;
   nx_nic_intr_coalesce_data_t high ;
   nx_nic_intr_coalesce_data_t irq ;
};

#line 994  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_nic_intr_coalesce_t_386 nx_nic_intr_coalesce_t;

#line 1145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_nic_req_t_390 {
   __le64 qhdr ;
   __le64 req_hdr ;
   __le64 words[6U] ;
};

#line 1145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_nic_req_t_390 nx_nic_req_t;

#line 1151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_mac_req_t_391 {
   u8 op ;
   u8 tag ;
   u8 mac_addr[6U] ;
};

#line 1151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_mac_req_t_391 nx_mac_req_t;

#line 1210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump {
   u32 pos ;
   u8 fw_supports_md ;
   u8 has_valid_dump ;
   u8 md_capture_mask ;
   u8 md_enabled ;
   u32 md_dump_size ;
   u32 md_capture_size ;
   u32 md_template_size ;
   u32 md_template_ver ;
   u64 md_timestamp ;
   void *md_template ;
   void *md_capture_buff ;
};

#line 1317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_template_hdr {
   u32 entry_type ;
   u32 first_entry_offset ;
   u32 size_of_template ;
   u32 capture_mask ;
   u32 num_of_entries ;
   u32 version ;
   u32 driver_timestamp ;
   u32 checksum ;
   u32 driver_capture_mask ;
   u32 driver_info_word2 ;
   u32 driver_info_word3 ;
   u32 driver_info_word4 ;
   u32 saved_state_array[16U] ;
   u32 capture_size_array[8U] ;
   u32 rsvd[0U] ;
};

#line 1337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_393 {
   u8 entry_capture_mask ;
   u8 entry_code ;
   u8 driver_code ;
   u8 driver_flags ;
};

#line 1337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_392 {
   struct __anonstruct_393 __anonCompField___anonunion_392_112 ;
   u32 entry_ctrl_word ;
};

#line 1337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_common_entry_hdr {
   u32 entry_type ;
   u32 entry_size ;
   u32 entry_capture_size ;
   union __anonunion_392 __anonCompField_netxen_common_entry_hdr_113 ;
};

#line 1358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry {
   struct netxen_common_entry_hdr hdr ;
   u32 entry_data00 ;
   u32 entry_data01 ;
   u32 entry_data02 ;
   u32 entry_data03 ;
   u32 entry_data04 ;
   u32 entry_data05 ;
   u32 entry_data06 ;
   u32 entry_data07 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_395 {
   u32 select_addr_reg ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_394 {
   struct __anonstruct_395 __anonCompField___anonunion_394_114 ;
   u32 rsvd_0 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_397 {
   u8 addr_stride ;
   u8 addr_cnt ;
   u16 data_size ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_396 {
   struct __anonstruct_397 __anonCompField___anonunion_396_116 ;
   u32 rsvd_1 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_399 {
   u32 op_count ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_398 {
   struct __anonstruct_399 __anonCompField___anonunion_398_118 ;
   u32 rsvd_2 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_401 {
   u32 read_addr_reg ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_400 {
   struct __anonstruct_401 __anonCompField___anonunion_400_120 ;
   u32 rsvd_3 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_403 {
   u32 write_mask ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_402 {
   struct __anonstruct_403 __anonCompField___anonunion_402_122 ;
   u32 rsvd_4 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_405 {
   u32 read_mask ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_404 {
   struct __anonstruct_405 __anonCompField___anonunion_404_124 ;
   u32 rsvd_5 ;
};

#line 1372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_rdrom {
   struct netxen_common_entry_hdr h ;
   union __anonunion_394 __anonCompField_netxen_minidump_entry_rdrom_115 ;
   union __anonunion_396 __anonCompField_netxen_minidump_entry_rdrom_117 ;
   union __anonunion_398 __anonCompField_netxen_minidump_entry_rdrom_119 ;
   union __anonunion_400 __anonCompField_netxen_minidump_entry_rdrom_121 ;
   union __anonunion_402 __anonCompField_netxen_minidump_entry_rdrom_123 ;
   union __anonunion_404 __anonCompField_netxen_minidump_entry_rdrom_125 ;
   u32 read_addr ;
   u32 read_data_size ;
};

#line 1417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_407 {
   u8 addr_stride ;
   u8 state_index_a ;
   u16 poll_timeout ;
};

#line 1417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_406 {
   struct __anonstruct_407 __anonCompField___anonunion_406_126 ;
   u32 addr_cntrl ;
};

#line 1417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_409 {
   u8 opcode ;
   u8 state_index_v ;
   u8 shl ;
   u8 shr ;
};

#line 1417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_408 {
   struct __anonstruct_409 __anonCompField___anonunion_408_128 ;
   u32 control_value ;
};

#line 1417  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_crb {
   struct netxen_common_entry_hdr h ;
   u32 addr ;
   union __anonunion_406 __anonCompField_netxen_minidump_entry_crb_127 ;
   u32 data_size ;
   u32 op_count ;
   union __anonunion_408 __anonCompField_netxen_minidump_entry_crb_129 ;
   u32 value_1 ;
   u32 value_2 ;
   u32 value_3 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_411 {
   u32 select_addr_reg ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_410 {
   struct __anonstruct_411 __anonCompField___anonunion_410_130 ;
   u32 rsvd_0 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_413 {
   u8 addr_stride ;
   u8 addr_cnt ;
   u16 data_size ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_412 {
   struct __anonstruct_413 __anonCompField___anonunion_412_132 ;
   u32 rsvd_1 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_415 {
   u32 op_count ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_414 {
   struct __anonstruct_415 __anonCompField___anonunion_414_134 ;
   u32 rsvd_2 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_417 {
   u32 read_addr_reg ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_416 {
   struct __anonstruct_417 __anonCompField___anonunion_416_136 ;
   u32 rsvd_3 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_419 {
   u32 cntrl_addr_reg ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_418 {
   struct __anonstruct_419 __anonCompField___anonunion_418_138 ;
   u32 rsvd_4 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_421 {
   u8 wr_byte0 ;
   u8 wr_byte1 ;
   u8 poll_mask ;
   u8 poll_cnt ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_420 {
   struct __anonstruct_421 __anonCompField___anonunion_420_140 ;
   u32 rsvd_5 ;
};

#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_rdmem {
   struct netxen_common_entry_hdr h ;
   union __anonunion_410 __anonCompField_netxen_minidump_entry_rdmem_131 ;
   union __anonunion_412 __anonCompField_netxen_minidump_entry_rdmem_133 ;
   union __anonunion_414 __anonCompField_netxen_minidump_entry_rdmem_135 ;
   union __anonunion_416 __anonCompField_netxen_minidump_entry_rdmem_137 ;
   union __anonunion_418 __anonCompField_netxen_minidump_entry_rdmem_139 ;
   union __anonunion_420 __anonCompField_netxen_minidump_entry_rdmem_141 ;
   u32 read_addr ;
   u32 read_data_size ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_423 {
   u16 tag_value_stride ;
   u16 init_tag_value ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_422 {
   struct __anonstruct_423 __anonCompField___anonunion_422_142 ;
   u32 select_addr_cntrl ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_425 {
   u16 write_value ;
   u8 poll_mask ;
   u8 poll_wait ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_424 {
   struct __anonstruct_425 __anonCompField___anonunion_424_144 ;
   u32 control_value ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_427 {
   u8 read_addr_stride ;
   u8 read_addr_cnt ;
   u16 rsvd_1 ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_426 {
   struct __anonstruct_427 __anonCompField___anonunion_426_146 ;
   u32 read_addr_cntrl ;
};

#line 1494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_cache {
   struct netxen_common_entry_hdr h ;
   u32 tag_reg_addr ;
   union __anonunion_422 __anonCompField_netxen_minidump_entry_cache_143 ;
   u32 data_size ;
   u32 op_count ;
   u32 control_addr ;
   union __anonunion_424 __anonCompField_netxen_minidump_entry_cache_145 ;
   u32 read_addr ;
   union __anonunion_426 __anonCompField_netxen_minidump_entry_cache_147 ;
};

#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_429 {
   u32 rsvd_1 ;
};

#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_428 {
   struct __anonstruct_429 __anonCompField___anonunion_428_148 ;
   u32 select_addr_cntrl ;
};

#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_431 {
   u32 read_addr_stride ;
};

#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_430 {
   struct __anonstruct_431 __anonCompField___anonunion_430_150 ;
   u32 read_addr_cntrl ;
};

#line 1527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_rdocm {
   struct netxen_common_entry_hdr h ;
   u32 rsvd_0 ;
   union __anonunion_428 __anonCompField_netxen_minidump_entry_rdocm_149 ;
   u32 data_size ;
   u32 op_count ;
   u32 rsvd_2 ;
   u32 rsvd_3 ;
   u32 read_addr ;
   union __anonunion_430 __anonCompField_netxen_minidump_entry_rdocm_151 ;
};

#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_433 {
   u32 rsvd_0 ;
};

#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_432 {
   struct __anonstruct_433 __anonCompField___anonunion_432_152 ;
   u32 select_addr_cntrl ;
};

#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_mux {
   struct netxen_common_entry_hdr h ;
   u32 select_addr ;
   union __anonunion_432 __anonCompField_netxen_minidump_entry_mux_153 ;
   u32 data_size ;
   u32 op_count ;
   u32 select_value ;
   u32 select_value_stride ;
   u32 read_addr ;
   u32 rsvd_1 ;
};

#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_435 {
   u16 queue_id_stride ;
   u16 rsvd_0 ;
};

#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_434 {
   struct __anonstruct_435 __anonCompField___anonunion_434_154 ;
   u32 select_addr_cntrl ;
};

#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_437 {
   u8 read_addr_stride ;
   u8 read_addr_cnt ;
   u16 rsvd_3 ;
};

#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_436 {
   struct __anonstruct_437 __anonCompField___anonunion_436_156 ;
   u32 read_addr_cntrl ;
};

#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_minidump_entry_queue {
   struct netxen_common_entry_hdr h ;
   u32 select_addr ;
   union __anonunion_434 __anonCompField_netxen_minidump_entry_queue_155 ;
   u32 data_size ;
   u32 op_count ;
   u32 rsvd_1 ;
   u32 rsvd_2 ;
   u32 read_addr ;
   union __anonunion_436 __anonCompField_netxen_minidump_entry_queue_157 ;
};

#line 1594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_dummy_dma {
   void *addr ;
   dma_addr_t phys_addr ;
};

#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_adapter {
   struct netxen_hardware_context ahw ;
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   struct list_head mac_list ;
   struct list_head ip_list ;
   spinlock_t tx_clean_lock ;
   u16 num_txd ;
   u16 num_rxd ;
   u16 num_jumbo_rxd ;
   u16 num_lro_rxd ;
   u8 max_rds_rings ;
   u8 max_sds_rings ;
   u8 driver_mismatch ;
   u8 msix_supported ;
   u8 __pad ;
   u8 pci_using_dac ;
   u8 portnum ;
   u8 physical_port ;
   u8 mc_enabled ;
   u8 max_mc_count ;
   u8 rss_supported ;
   u8 link_changed ;
   u8 fw_wait_cnt ;
   u8 fw_fail_cnt ;
   u8 tx_timeo_cnt ;
   u8 need_fw_reset ;
   u8 has_link_events ;
   u8 fw_type ;
   u16 tx_context_id ;
   u16 mtu ;
   u16 is_up ;
   u16 link_speed ;
   u16 link_duplex ;
   u16 link_autoneg ;
   u16 module_type ;
   u32 capabilities ;
   u32 flags ;
   u32 irq ;
   u32 temp ;
   u32 int_vec_bit ;
   u32 heartbit ;
   u8 mac_addr[6U] ;
   struct netxen_adapter_stats stats ;
   struct netxen_recv_context recv_ctx ;
   struct nx_host_tx_ring *tx_ring ;
   int (*macaddr_set)(struct netxen_adapter *, u8 *) ;
   int (*set_mtu)(struct netxen_adapter *, int ) ;
   int (*set_promisc)(struct netxen_adapter *, u32 ) ;
   void (*set_multi)(struct net_device *) ;
   int (*phy_read)(struct netxen_adapter *, u32 , u32 *) ;
   int (*phy_write)(struct netxen_adapter *, u32 , u32 ) ;
   int (*init_port)(struct netxen_adapter *, int ) ;
   int (*stop_port)(struct netxen_adapter *) ;
   u32 (*crb_read)(struct netxen_adapter *, ulong ) ;
   int (*crb_write)(struct netxen_adapter *, ulong , u32 ) ;
   int (*pci_mem_read)(struct netxen_adapter *, u64 , u64 *) ;
   int (*pci_mem_write)(struct netxen_adapter *, u64 , u64 ) ;
   int (*pci_set_window)(struct netxen_adapter *, u64 , u32 *) ;
   u32 (*io_read)(struct netxen_adapter *, void *) ;
   void (*io_write)(struct netxen_adapter *, void *, u32 ) ;
   void *tgt_mask_reg ;
   void *pci_int_reg ;
   void *tgt_status_reg ;
   void *crb_int_state_reg ;
   void *isr_int_vec ;
   struct msix_entry msix_entries[4U] ;
   struct netxen_dummy_dma dummy_dma ;
   struct delayed_work fw_work ;
   struct work_struct tx_timeout_task ;
   nx_nic_intr_coalesce_t coal ;
   unsigned long state ;
   __le32 file_prd_off ;
   u32 fw_version ;
   struct firmware const *fw ;
   struct netxen_minidump mdump ;
   int fw_mdump_rdy ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_443 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_443 __anonCompField_inetpeer_addr_base_158 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_444 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_446 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_445 {
   struct __anonstruct_446 __anonCompField___anonunion_445_160 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_444 __anonCompField_inet_peer_159 ;
   union __anonunion_445 __anonCompField_inet_peer_161 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_712 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_712 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 1911  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef u32 netxen_ctx_msg;

#line 427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct uni_table_desc {
   uint32_t findex ;
   uint32_t num_entries ;
   uint32_t entry_size ;
   uint32_t reserved[5U] ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct uni_data_desc {
   uint32_t findex ;
   uint32_t size ;
   uint32_t reserved[5U] ;
};

#line 1139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_838 {
   u64 hdr ;
   u64 body[7U] ;
};

#line 1139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
union __anonunion_837 {
   struct __anonstruct_838 __anonCompField___anonunion_837_110 ;
   u64 words[8U] ;
};

#line 1139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_fw_msg_t_836 {
   union __anonunion_837 __anonCompField___anonstruct_nx_fw_msg_t_836_111 ;
};

#line 1139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_fw_msg_t_836 nx_fw_msg_t;

#line 1888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct crb_addr_pair {
   u32 addr ;
   u32 data ;
};

#line 629  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
typedef int ldv_func_ret_type;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
typedef int pao_T__;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11652 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 2086  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_notifier_info {
   struct net_device *dev ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hdr.h"
struct netxen_legacy_intr_set {
   uint32_t int_vec_bit ;
   uint32_t tgt_status_reg ;
   uint32_t tgt_mask_reg ;
   uint32_t pci_int_reg ;
};

#line 955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct nx_ip_list {
   struct list_head list ;
   __be32 ip_addr ;
   bool master ;
};

#line 1812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_brdinfo {
   int brdtype ;
   long ports ;
   char short_name[32U] ;
};

#line 1823  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_dimm_cfg {
   u8 presence ;
   u8 mem_type ;
   u8 dimm_type ;
   u32 size ;
};

#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct vlan_ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_vlan_proto ;
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/route.h"
struct in_ifaddr;

#line 587  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip.h"
struct ipv4_devconf {
   void *sysctl ;
   int data[29U] ;
   unsigned long state[1U] ;
};

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct ip_mc_list;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_device {
   struct net_device *dev ;
   atomic_t refcnt ;
   int dead ;
   struct in_ifaddr *ifa_list ;
   struct ip_mc_list *mc_list ;
   struct ip_mc_list **mc_hash ;
   int mc_count ;
   spinlock_t mc_tomb_lock ;
   struct ip_mc_list *mc_tomb ;
   unsigned long mr_v1_seen ;
   unsigned long mr_v2_seen ;
   unsigned long mr_maxdelay ;
   unsigned char mr_qrv ;
   unsigned char mr_gq_running ;
   unsigned char mr_ifc_count ;
   struct timer_list mr_gq_timer ;
   struct timer_list mr_ifc_timer ;
   struct neigh_parms *arp_parms ;
   struct ipv4_devconf cnf ;
   struct callback_head callback_head ;
};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
struct in_ifaddr {
   struct hlist_node hash ;
   struct in_ifaddr *ifa_next ;
   struct in_device *ifa_dev ;
   struct callback_head callback_head ;
   __be32 ifa_local ;
   __be32 ifa_address ;
   __be32 ifa_mask ;
   __be32 ifa_broadcast ;
   unsigned char ifa_scope ;
   unsigned char ifa_prefixlen ;
   __u32 ifa_flags ;
   char ifa_label[16U] ;
   __u32 ifa_valid_lft ;
   __u32 ifa_preferred_lft ;
   unsigned long ifa_cstamp ;
   unsigned long ifa_tstamp ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
union __anonunion___u_1337 {
   struct in_device * const __val ;
   char __c[1U] ;
};

#line 3370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
union __anonunion___u_1339 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 3370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
union __anonunion___u_1341 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 3405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
union __anonunion___u_1343 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 3405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
union __anonunion___u_1345 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 3450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
union __anonunion___u_1347 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 3450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
union __anonunion___u_1349 {
   struct list_head *__val ;
   char __c[1U] ;
};

#line 1888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_nic_stats {
   char stat_string[32U] ;
   int sizeof_stat ;
   int stat_offset ;
};

#line 544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_recv_crb {
   u32 crb_rcv_producer[3U] ;
   u32 crb_sts_consumer[4U] ;
   u32 sw_int_mask[4U] ;
};

#line 688  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct _cdrp_cmd {
   u32 cmd ;
   u32 arg1 ;
   u32 arg2 ;
   u32 arg3 ;
};

#line 695  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct netxen_cmd_args {
   struct _cdrp_cmd req ;
   struct _cdrp_cmd rsp ;
};

#line 818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_hostrq_sds_ring_t_2168 {
   __le64 host_phys_addr ;
   __le32 ring_size ;
   __le16 msi_index ;
   __le16 rsvd ;
};

#line 818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_hostrq_sds_ring_t_2168 nx_hostrq_sds_ring_t;

#line 825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_hostrq_rds_ring_t_2169 {
   __le64 host_phys_addr ;
   __le64 buff_size ;
   __le32 ring_size ;
   __le32 ring_kind ;
};

#line 825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_hostrq_rds_ring_t_2169 nx_hostrq_rds_ring_t;

#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_hostrq_rx_ctx_t_2170 {
   __le64 host_rsp_dma_addr ;
   __le32 capabilities[4U] ;
   __le32 host_int_crb_mode ;
   __le32 host_rds_crb_mode ;
   __le32 rds_ring_offset ;
   __le32 sds_ring_offset ;
   __le16 num_rds_rings ;
   __le16 num_sds_rings ;
   __le16 rsvd1 ;
   __le16 rsvd2 ;
   u8 reserved[128U] ;
   char data[0U] ;
};

#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_hostrq_rx_ctx_t_2170 nx_hostrq_rx_ctx_t;

#line 850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_cardrsp_rds_ring_t_2171 {
   __le32 host_producer_crb ;
   __le32 rsvd1 ;
};

#line 850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_cardrsp_rds_ring_t_2171 nx_cardrsp_rds_ring_t;

#line 855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_cardrsp_sds_ring_t_2172 {
   __le32 host_consumer_crb ;
   __le32 interrupt_crb ;
};

#line 855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_cardrsp_sds_ring_t_2172 nx_cardrsp_sds_ring_t;

#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_cardrsp_rx_ctx_t_2173 {
   __le32 rds_ring_offset ;
   __le32 sds_ring_offset ;
   __le32 host_ctx_state ;
   __le32 num_fn_per_port ;
   __le16 num_rds_rings ;
   __le16 num_sds_rings ;
   __le16 context_id ;
   u8 phys_port ;
   u8 virt_port ;
   u8 reserved[128U] ;
   char data[0U] ;
};

#line 874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_cardrsp_rx_ctx_t_2173 nx_cardrsp_rx_ctx_t;

#line 894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_hostrq_cds_ring_t_2174 {
   __le64 host_phys_addr ;
   __le32 ring_size ;
   __le32 rsvd ;
};

#line 894  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_hostrq_cds_ring_t_2174 nx_hostrq_cds_ring_t;

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_hostrq_tx_ctx_t_2175 {
   __le64 host_rsp_dma_addr ;
   __le64 cmd_cons_dma_addr ;
   __le64 dummy_dma_addr ;
   __le32 capabilities[4U] ;
   __le32 host_int_crb_mode ;
   __le32 rsvd1 ;
   __le16 rsvd2 ;
   __le16 interrupt_ctl ;
   __le16 msi_index ;
   __le16 rsvd3 ;
   nx_hostrq_cds_ring_t cds_ring ;
   u8 reserved[128U] ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_hostrq_tx_ctx_t_2175 nx_hostrq_tx_ctx_t;

#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_cardrsp_cds_ring_t_2176 {
   __le32 host_producer_crb ;
   __le32 interrupt_crb ;
};

#line 914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_cardrsp_cds_ring_t_2176 nx_cardrsp_cds_ring_t;

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
struct __anonstruct_nx_cardrsp_tx_ctx_t_2177 {
   __le32 host_ctx_state ;
   __le16 context_id ;
   u8 phys_port ;
   u8 virt_port ;
   nx_cardrsp_cds_ring_t cds_ring ;
   u8 reserved[128U] ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
typedef struct __anonstruct_nx_cardrsp_tx_ctx_t_2177 nx_cardrsp_tx_ctx_t;

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_devattr_instance_14 {
   struct device_attribute *arg1 ;
   struct device *arg0 ;
   int signal_pending ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_free_irq_5 {
   int arg0 ;
   int signal_pending ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_16 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_17 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/fvtp/.tmp_netxen_nic_hw.c"
void ldv_inline_asm(void);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 154 
int __printk_ratelimit(char const *);


#line 233 
void dump_stack(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 113 
void list_del(struct list_head *);


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_move_tail(struct list_head *list, struct list_head *head)
{
  
#line 168 
  __list_del_entry(list);
  
#line 169 
  list_add_tail(list,head);
  
#line 170 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void __list_splice(struct list_head const *list, struct list_head *prev, struct list_head *next)
{
  
#line 278 
  struct list_head *first = list->next;
  
#line 279 
  struct list_head *last = list->prev;
  
#line 281 
  first->prev = prev;
  
#line 282 
  prev->next = first;
  
#line 284 
  last->next = next;
  
#line 285 
  next->prev = last;
  
#line 286 
  return;
}


#line 336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_splice_tail_init(struct list_head *list, struct list_head *head)
{
  int tmp;
  
#line 339 
  tmp = list_empty((struct list_head const *)list);
  
#line 339 
  if (tmp == 0) {
    
#line 340 
    __list_splice((struct list_head const *)list,head->prev,head);
    
#line 341 
    INIT_LIST_HEAD(list);
  }
  else ;
  
#line 343 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-defs.h"
void __bad_size_call_parameter(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 30 
void _raw_spin_lock_bh(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 42 
void _raw_spin_unlock_bh(raw_spinlock_t *);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_api_smp.h"
void _raw_read_lock(rwlock_t *);


#line 26 
unsigned long _raw_write_lock_irqsave(rwlock_t *);


#line 30 
void _raw_read_unlock(rwlock_t *);


#line 40 
void _raw_write_unlock_irqrestore(rwlock_t *, unsigned long);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_73(spinlock_t *lock);


#line 362 
static void ldv_spin_lock_75(spinlock_t *lock);


#line 366 
static void ldv_spin_lock_77(spinlock_t *lock);


#line 370 
static void ldv_spin_lock_79(spinlock_t *lock);


#line 374 
static void ldv_spin_lock_81(spinlock_t *lock);


#line 378 
static void ldv_spin_lock_83(spinlock_t *lock);


#line 382 
static void ldv_spin_lock_85(spinlock_t *lock);


#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh(spinlock_t *lock)
{
  
#line 385 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 386 
  return;
}


#line 403 
static void ldv_spin_lock_bh_61(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_74(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_76(spinlock_t *lock);


#line 415 
static void ldv_spin_unlock_78(spinlock_t *lock);


#line 419 
static void ldv_spin_unlock_80(spinlock_t *lock);


#line 423 
static void ldv_spin_unlock_82(spinlock_t *lock);


#line 427 
static void ldv_spin_unlock_84(spinlock_t *lock);


#line 431 
static void ldv_spin_unlock_86(spinlock_t *lock);


#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh(spinlock_t *lock)
{
  
#line 434 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 435 
  return;
}


#line 452 
static void ldv_spin_unlock_bh_64(spinlock_t *lock);


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
void ldv_spin_model_lock(char *);


#line 75 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 292 
unsigned long __msecs_to_jiffies(unsigned int const);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long _msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 301 
  __retres = (unsigned long)(((long)m + 3L) / 4L);
  
#line 301 
  return __retres;
}


#line 354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
__inline static unsigned long msecs_to_jiffies(unsigned int const m)
{
  unsigned long __retres;
  
#line 356 
  if (0 != 0) {
    unsigned long tmp;
    
#line 357 
    if ((int)m < 0) {
      
#line 358 
      __retres = 4611686018427387902UL;
      
#line 358 
      goto return_label;
    }
    else ;
    
#line 359 
    tmp = _msecs_to_jiffies(m);
    
#line 359 
    __retres = tmp;
    
#line 359 
    goto return_label;
  }
  else {
    unsigned long tmp_0;
    
#line 361 
    tmp_0 = __msecs_to_jiffies(m);
    
#line 361 
    __retres = tmp_0;
    
#line 361 
    goto return_label;
  }
  return_label: 
#line 356 
                return __retres;
}


#line 420 
void jiffies_to_timespec(unsigned long const, struct timespec *);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned long readq(void const volatile *addr)
{
  unsigned long ret;
  
#line 91 
  ldv_inline_asm();
  
#line 90 
  return ret;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeq(unsigned long val, void volatile *addr)
{
  
#line 93 
  ldv_inline_asm();
  
#line 94 
  return;
}


#line 181 
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
void dev_err(struct device const *, char const * , ...);


#line 1085 
void dev_warn(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock_bh(struct netdev_queue *txq)
{
  int tmp_3;
  
#line 3178 
  ldv_spin_lock_bh_61(& txq->_xmit_lock);
  {
    int pscr_ret__;
    {
      
#line 3179 
      void const *__vpp_verify = (void const *)0;
      
#line 3179 
      void const *tmp = __vpp_verify;
    }
    
#line 3179 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3179 
      ;
      {
        int pfo_ret__;
        
#line 3179 
        switch (4UL) {
          case (unsigned long)1: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45180;
          case (unsigned long)2: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45180;
          case (unsigned long)4: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45180;
          case (unsigned long)8: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45180;
          default: 
#line 3179 
          ;
          
#line 3179 
          __bad_percpu_size();
        }
        ldv_45180: 
#line 3179 
        ;
        
#line 3179 
        tmp_0 = pfo_ret__;
      }
      
#line 3179 
      pscr_ret__ = tmp_0;
      
#line 3179 
      goto ldv_45186;
      case (unsigned long)2: 
#line 3179 
      ;
      {
        int pfo_ret___0;
        
#line 3179 
        switch (4UL) {
          case (unsigned long)1: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45190;
          case (unsigned long)2: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45190;
          case (unsigned long)4: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45190;
          case (unsigned long)8: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45190;
          default: 
#line 3179 
          ;
          
#line 3179 
          __bad_percpu_size();
        }
        ldv_45190: 
#line 3179 
        ;
        
#line 3179 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3179 
      pscr_ret__ = tmp_0_0;
      
#line 3179 
      goto ldv_45186;
      case (unsigned long)4: 
#line 3179 
      ;
      {
        int pfo_ret___1;
        
#line 3179 
        switch (4UL) {
          case (unsigned long)1: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45199;
          case (unsigned long)2: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45199;
          case (unsigned long)4: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45199;
          case (unsigned long)8: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45199;
          default: 
#line 3179 
          ;
          
#line 3179 
          __bad_percpu_size();
        }
        ldv_45199: 
#line 3179 
        ;
        
#line 3179 
        tmp_1 = pfo_ret___1;
      }
      
#line 3179 
      pscr_ret__ = tmp_1;
      
#line 3179 
      goto ldv_45186;
      case (unsigned long)8: 
#line 3179 
      ;
      {
        int pfo_ret___2;
        
#line 3179 
        switch (4UL) {
          case (unsigned long)1: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45208;
          case (unsigned long)2: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45208;
          case (unsigned long)4: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45208;
          case (unsigned long)8: 
#line 3179 
          ;
          
#line 3180 
          ldv_inline_asm();
          
#line 3179 
          goto ldv_45208;
          default: 
#line 3179 
          ;
          
#line 3179 
          __bad_percpu_size();
        }
        ldv_45208: 
#line 3179 
        ;
        
#line 3179 
        tmp_2 = pfo_ret___2;
      }
      
#line 3179 
      pscr_ret__ = tmp_2;
      
#line 3179 
      goto ldv_45186;
      default: 
#line 3179 
      ;
      
#line 3179 
      __bad_size_call_parameter();
      
#line 3179 
      goto ldv_45186;
    }
    ldv_45186: 
#line 3179 
    ;
    
#line 3179 
    tmp_3 = pscr_ret__;
  }
  
#line 3179 
  txq->xmit_lock_owner = tmp_3;
  
#line 3181 
  return;
}


#line 3196  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock_bh(struct netdev_queue *txq)
{
  
#line 3198 
  txq->xmit_lock_owner = -1;
  
#line 3199 
  ldv_spin_unlock_bh_64(& txq->_xmit_lock);
  
#line 3200 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.h"
void netxen_nic_set_link_parameters(struct netxen_adapter *adapter);


#line 1703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
int nx_fw_cmd_query_phy(struct netxen_adapter *adapter, u32 reg, u32 *val);


#line 1704 
int nx_fw_cmd_set_phy(struct netxen_adapter *adapter, u32 reg, u32 val);


#line 1715 
int netxen_pcie_sem_lock(struct netxen_adapter *adapter, int sem, u32 id_reg);


#line 1716 
void netxen_pcie_sem_unlock(struct netxen_adapter *adapter, int sem);


#line 1739 
int netxen_nic_get_board_info(struct netxen_adapter *adapter);


#line 1740 
int netxen_nic_wol_supported(struct netxen_adapter *adapter);


#line 1754 
int netxen_rom_fast_read(struct netxen_adapter *adapter, int addr, int *valp);


#line 1770 
void netxen_setup_hwops(struct netxen_adapter *adapter);


#line 1771 
void *netxen_get_ioaddr(struct netxen_adapter *adapter, u32 offset);


#line 1787 
void netxen_p3_free_mac_list(struct netxen_adapter *adapter);


#line 1788 
int netxen_config_intr_coalesce(struct netxen_adapter *adapter);


#line 1789 
int netxen_config_rss(struct netxen_adapter *adapter, int enable);


#line 1790 
int netxen_config_ipaddr(struct netxen_adapter *adapter, __be32 ip, int cmd);


#line 1791 
int netxen_linkevent_request(struct netxen_adapter *adapter, int enable);


#line 1793 
void netxen_pci_camqm_read_2M(struct netxen_adapter *adapter, u64 off, u64 *data);


#line 1794 
void netxen_pci_camqm_write_2M(struct netxen_adapter *adapter, u64 off, u64 data);


#line 1798 
int nx_fw_cmd_set_mtu(struct netxen_adapter *adapter, int mtu);


#line 1799 
int netxen_nic_change_mtu(struct net_device *netdev, int mtu);


#line 1800 
int netxen_config_hw_lro(struct netxen_adapter *adapter, int enable);


#line 1801 
int netxen_config_bridged_mode(struct netxen_adapter *adapter, int enable);


#line 1802 
int netxen_send_lro_cleanup(struct netxen_adapter *adapter);


#line 1804 
void netxen_dump_fw(struct netxen_adapter *adapter);


#line 1805 
void netxen_nic_update_cmd_producer(struct netxen_adapter *adapter, struct nx_host_tx_ring *tx_ring);


#line 1874  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
__inline static u32 netxen_tx_avail(struct nx_host_tx_ring *tx_ring)
{
  u32 tmp;
  
#line 1876 
  ldv_inline_asm();
  
#line 1877 
  if (tx_ring->producer < tx_ring->sw_consumer) 
#line 1877 
                                                tmp = tx_ring->sw_consumer - tx_ring->producer; else 
                                                                    
#line 1877 
                                                                    tmp = (tx_ring->sw_consumer + tx_ring->num_desc) - tx_ring->producer;
  
#line 1877 
  return tmp;
}


#line 1882 
int netxen_get_flash_mac_addr(struct netxen_adapter *adapter, u64 *mac);


#line 1883 
int netxen_p3_get_mac_addr(struct netxen_adapter *adapter, u64 *mac);


#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_nic_io_write_128M(struct netxen_adapter *adapter, void *addr, u32 data);


#line 45 
static u32 netxen_nic_io_read_128M(struct netxen_adapter *adapter, void *addr);


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void *pci_base_offset(struct netxen_adapter *adapter, unsigned long off)
{
  void *__retres;
  
#line 72 
  if (off <= 1048575UL) {
    
#line 73 
    __retres = adapter->ahw.pci_base0 + off;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 75 
  if (off + 18446744073608888320UL <= 9158655UL) {
    
#line 76 
    __retres = adapter->ahw.pci_base1 + (off + 18446744073608888320U);
    
#line 76 
    goto return_label;
  }
  else ;
  
#line 78 
  if (off + 18446744073591177216UL <= 15843327UL) {
    
#line 79 
    __retres = adapter->ahw.pci_base2 + (off + 18446744073591177216U);
    
#line 79 
    goto return_label;
  }
  else ;
  
#line 81 
  __retres = (void *)0;
  return_label: 
#line 81 
                return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static crb_128M_2M_block_map_t crb_128M_2M_map[64U] = {{.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 1048576U, .end_128M = 1056768U, .start_2M = 1179648U}, {.valid = 1U, .start_128M = 1114112U, .end_128M = 1179648U, .start_2M = 1245184U}, {.valid = 1U, .start_128M = 1179648U, .end_128M = 1187840U, .start_2M = 1196032U}, {.valid = 1U, .start_128M = 1245184U, .end_128M = 1253376U, .start_2M = 1204224U}, {.valid = 1U, .start_128M = 1310720U, .end_128M = 1318912U, .start_2M = 1212416U}, {.valid = 1U, .start_128M = 1376256U, .end_128M = 1384448U, .start_2M = 1220608U}, {.valid = 1U, .start_128M = 1441792U, .end_128M = 1507328U, .start_2M = 1114112U}, {.valid = 1U, .start_128M = 1507328U, .end_128M = 1515520U, .start_2M = 1236992U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 1U, .start_128M = 1966080U, .end_128M = 1968128U, .start_2M = 1187840U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 2097152U, .end_128M = 2162688U, .start_2M = 1572864U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 4194304U, .end_128M = 4198400U, .start_2M = 1478656U}}}, {.sub_block = {{.valid = 1U, .start_128M = 5242880U, .end_128M = 5308416U, .start_2M = 1310720U}}}, {.sub_block = {{.valid = 1U, .start_128M = 6291456U, .end_128M = 6356992U, .start_2M = 1835008U}}}, {.sub_block = {{.valid = 1U, .start_128M = 7340032U, .end_128M = 7356416U, .start_2M = 1802240U}}}, {.sub_block = {{.valid = 1U, .start_128M = 8388608U, .end_128M = 8396800U, .start_2M = 1507328U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 1U, .start_128M = 9371648U, .end_128M = 9379840U, .start_2M = 1515520U}}}, {.sub_block = {{.valid = 1U, .start_128M = 9437184U, .end_128M = 9445376U, .start_2M = 1523712U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 1U, .start_128M = 10420224U, .end_128M = 10428416U, .start_2M = 1531904U}}}, {.sub_block = {{.valid = 0U, .start_128M = 10485760U, .end_128M = 10493952U, .start_2M = 1540096U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 1U, .start_128M = 11468800U, .end_128M = 11476992U, .start_2M = 1548288U}}}, {.sub_block = {{.valid = 0U, .start_128M = 11534336U, .end_128M = 11542528U, .start_2M = 1556480U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 1U, .start_128M = 12517376U, .end_128M = 12525568U, .start_2M = 1564672U}}}, {.sub_block = {{.valid = 1U, .start_128M = 12582912U, .end_128M = 12599296U, .start_2M = 1916928U}}}, {.sub_block = {{.valid = 1U, .start_128M = 13631488U, .end_128M = 13647872U, .start_2M = 1720320U}}}, {.sub_block = {{.valid = 1U, .start_128M = 14680064U, .end_128M = 14696448U, .start_2M = 1703936U}}}, {.sub_block = {{.valid = 1U, .start_128M = 15728640U, .end_128M = 15732736U, .start_2M = 1458176U}}}, {.sub_block = {{.valid = 0U, .start_128M = 16777216U, .end_128M = 16793600U, .start_2M = 1736704U}}}, {.sub_block = {{.valid = 1U, .start_128M = 17825792U, .end_128M = 17829888U, .start_2M = 1441792U}}}, {.sub_block = {{.valid = 1U, .start_128M = 18874368U, .end_128M = 18878464U, .start_2M = 1445888U}}}, {.sub_block = {{.valid = 1U, .start_128M = 19922944U, .end_128M = 19927040U, .start_2M = 1449984U}}}, {.sub_block = {{.valid = 1U, .start_128M = 20971520U, .end_128M = 20975616U, .start_2M = 1454080U}}}, {.sub_block = {{.valid = 1U, .start_128M = 22020096U, .end_128M = 22024192U, .start_2M = 1462272U}}}, {.sub_block = {{.valid = 1U, .start_128M = 23068672U, .end_128M = 23072768U, .start_2M = 1466368U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 30408704U, .end_128M = 30474240U, .start_2M = 1638400U}}}, {.sub_block = {{.valid = 1U, .start_128M = 31457280U, .end_128M = 31461376U, .start_2M = 1482752U}}}, {.sub_block = {{.valid = 1U, .start_128M = 32505856U, .end_128M = 32571392U, .start_2M = 1376256U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 34603008U, .end_128M = 34611200U, .start_2M = 1179648U}, {.valid = 1U, .start_128M = 34668544U, .end_128M = 34734080U, .start_2M = 1245184U}, {.valid = 1U, .start_128M = 34734080U, .end_128M = 34742272U, .start_2M = 1196032U}, {.valid = 1U, .start_128M = 34799616U, .end_128M = 34807808U, .start_2M = 1204224U}, {.valid = 1U, .start_128M = 34865152U, .end_128M = 34873344U, .start_2M = 1212416U}, {.valid = 1U, .start_128M = 34930688U, .end_128M = 34938880U, .start_2M = 1220608U}, {.valid = 1U, .start_128M = 34996224U, .end_128M = 35061760U, .start_2M = 1114112U}, {.valid = 1U, .start_128M = 35061760U, .end_128M = 35069952U, .start_2M = 1236992U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}, {.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 35651584U, .end_128M = 35667968U, .start_2M = 1769472U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 41943040U, .end_128M = 41959424U, .start_2M = 1720320U}}}, {.sub_block = {{.valid = 1U, .start_128M = 42991616U, .end_128M = 42995712U, .start_2M = 1486848U}}}, {.sub_block = {{.valid = 1U, .start_128M = 44040192U, .end_128M = 44041216U, .start_2M = 1754112U}}}, {.sub_block = {{.valid = 1U, .start_128M = 45088768U, .end_128M = 45089792U, .start_2M = 1755136U}}}, {.sub_block = {{.valid = 1U, .start_128M = 46137344U, .end_128M = 46138368U, .start_2M = 1756160U}}}, {.sub_block = {{.valid = 1U, .start_128M = 47185920U, .end_128M = 47186944U, .start_2M = 1757184U}}}, {.sub_block = {{.valid = 1U, .start_128M = 48234496U, .end_128M = 48235520U, .start_2M = 1758208U}}}, {.sub_block = {{.valid = 1U, .start_128M = 49283072U, .end_128M = 49284096U, .start_2M = 1759232U}}}, {.sub_block = {{.valid = 1U, .start_128M = 50331648U, .end_128M = 50332672U, .start_2M = 1760256U}}}, {.sub_block = {{.valid = 0U, .start_128M = 51380224U, .end_128M = 51396608U, .start_2M = 1736704U}}}, {.sub_block = {{.valid = 1U, .start_128M = 52428800U, .end_128M = 52445184U, .start_2M = 1916928U}}}, {.sub_block = {{.valid = 1U, .start_128M = 53477376U, .end_128M = 53493760U, .start_2M = 1703936U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 55574528U, .end_128M = 55575552U, .start_2M = 1753088U}}}, {.sub_block = {{.valid = 1U, .start_128M = 56623104U, .end_128M = 56624128U, .start_2M = 1761280U}}}, {.sub_block = {{.valid = 1U, .start_128M = 57671680U, .end_128M = 57672704U, .start_2M = 1762304U}}}, {.sub_block = {{.valid = 1U, .start_128M = 58720256U, .end_128M = 58736640U, .start_2M = 1900544U}}}, {.sub_block = {{.valid = 1U, .start_128M = 59768832U, .end_128M = 59785216U, .start_2M = 1785856U}}}, {.sub_block = {{.valid = 1U, .start_128M = 60817408U, .end_128M = 60833792U, .start_2M = 1933312U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 0U, .start_128M = 0U, .end_128M = 0U, .start_2M = 0U}}}, {.sub_block = {{.valid = 1U, .start_128M = 63963136U, .end_128M = 63979520U, .start_2M = 1933312U}}}, {.sub_block = {{.valid = 1U, .start_128M = 65011712U, .end_128M = 65015808U, .start_2M = 1470464U}}}, {.sub_block = {{.valid = 1U, .start_128M = 66060288U, .end_128M = 66064384U, .start_2M = 1474560U}}}};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static unsigned int crb_hub_agt[64U] = {0U, 1907U, 661U, 677U, 0U, 208U, 433U, 230U, 224U, 225U, 226U, 227U, 1056U, 1047U, 1057U, 843U, 1029U, 832U, 833U, 834U, 835U, 837U, 836U, 960U, 961U, 962U, 963U, 0U, 964U, 1040U, 0U, 209U, 0U, 1907U, 1046U, 0U, 0U, 0U, 0U, 0U, 1047U, 0U, 137U, 1802U, 1803U, 1804U, 141U, 142U, 1807U, 1029U, 1056U, 1057U, 0U, 136U, 145U, 1810U, 1030U, 0U, 1816U, 409U, 425U, 0U, 838U, 0U};

#line 319 
static int netxen_nic_set_mtu_xgb(struct netxen_adapter *adapter, int new_mtu);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_pcie_sem_lock(struct netxen_adapter *adapter, int sem, u32 id_reg)
{
  int __retres;
  u32 tmp;
  
#line 324 
  int done = 0;
  
#line 324 
  int timeout = 0;
  
#line 326 
  goto ldv_54174;
  ldv_54173: 
#line 327 
  ;
  
#line 327 
  tmp = (*(adapter->crb_read))(adapter,(unsigned long)((sem + 14336) * 8) + 101711872UL);
  
#line 327 
  done = (int)tmp;
  
#line 328 
  if (done == 1) 
#line 329 
                 goto ldv_54172; else ;
  
#line 330 
  timeout += 1;
  
#line 330 
  if (timeout > 9999) {
    
#line 331 
    __retres = -5;
    
#line 331 
    goto return_label;
  }
  else ;
  
#line 332 
  msleep(1U);
  ldv_54174: 
#line 333 
  ;
  
#line 326 
  if (done == 0) 
#line 328 
                 goto ldv_54173; else 
#line 331 
                                      goto ldv_54172;
  ldv_54172: 
#line 332 
  ;
  
#line 335 
  if (id_reg != 0U) 
#line 336 
                    (*(adapter->crb_write))(adapter,(unsigned long)id_reg,(unsigned int)adapter->portnum); else ;
  
#line 338 
  __retres = 0;
  return_label: 
#line 338 
                return __retres;
}


#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_pcie_sem_unlock(struct netxen_adapter *adapter, int sem)
{
  
#line 344 
  (*(adapter->crb_read))(adapter,(unsigned long)(sem * 8 + 114692) + 101711872UL);
  
#line 345 
  return;
}


#line 347  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_niu_xg_init_port(struct netxen_adapter *adapter, int port)
{
  int __retres;
  
#line 349 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 350 
    (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536) + 107413508UL,5191U);
    
#line 351 
    (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536) + 107413504UL,5U);
  }
  else ;
  
#line 354 
  __retres = 0;
  
#line 354 
  return __retres;
}


#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_niu_disable_xg_port(struct netxen_adapter *adapter)
{
  int __retres;
  __u32 mac_cfg;
  int tmp;
  
#line 361 
  u32 port = (unsigned int)adapter->physical_port;
  
#line 363 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 364 
    __retres = 0;
    
#line 364 
    goto return_label;
  }
  else ;
  
#line 366 
  if (port > 1U) {
    
#line 367 
    __retres = -22;
    
#line 367 
    goto return_label;
  }
  else ;
  
#line 369 
  mac_cfg = 0U;
  
#line 370 
  tmp = (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536U) + 107413504UL,mac_cfg);
  
#line 370 
  if (tmp != 0) {
    
#line 372 
    __retres = -5;
    
#line 372 
    goto return_label;
  }
  else ;
  
#line 373 
  __retres = 0;
  return_label: 
#line 373 
                return __retres;
}


#line 385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_p2_nic_set_promisc(struct netxen_adapter *adapter, u32 mode)
{
  int __retres;
  u32 mac_cfg;
  u32 tmp_1;
  
#line 388 
  u32 cnt = 0U;
  
#line 389 
  __u32 reg = 512U;
  
#line 390 
  u32 port = (unsigned int)adapter->physical_port;
  
#line 391 
  u16 board_type = adapter->ahw.board_type;
  
#line 393 
  if (port > 1U) {
    
#line 394 
    __retres = -22;
    
#line 394 
    goto return_label;
  }
  else ;
  
#line 396 
  mac_cfg = (*(adapter->crb_read))(adapter,(unsigned long)(port * 65536U) + 107413504UL);
  
#line 397 
  mac_cfg &= 4294967291U;
  
#line 398 
  (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536U) + 107413504UL,mac_cfg);
  
#line 400 
  if ((unsigned int)board_type + 65523U <= 1U) 
#line 402 
                                               reg = (unsigned int)(32 << port); else ;
  
#line 404 
  (*(adapter->crb_write))(adapter,106954924UL,reg);
  {
    
#line 406 
    unsigned long __ms = 10UL;
    {
      unsigned long tmp;
      
#line 406 
      goto ldv_54199;
      ldv_54198: 
#line 407 
      ;
      
#line 406 
      __const_udelay(4295000UL);
      ldv_54199: 
#line 408 
      ;
      
#line 406 
      tmp = __ms;
      
#line 406 
      __ms -= 1UL;
      
#line 406 
      ;
      
#line 406 
      if (tmp != 0UL) 
#line 408 
                      goto ldv_54198; else 
#line 411 
                                           goto ldv_54200;
      ldv_54200: 
#line 412 
      ;
    }
  }
  
#line 408 
  goto ldv_54206;
  ldv_54205: 
#line 409 
  ;
  {
    
#line 409 
    unsigned long __ms_0 = 10UL;
    {
      unsigned long tmp_0;
      
#line 409 
      goto ldv_54203;
      ldv_54202: 
#line 410 
      ;
      
#line 409 
      __const_udelay(4295000UL);
      ldv_54203: 
#line 411 
      ;
      
#line 409 
      tmp_0 = __ms_0;
      
#line 409 
      __ms_0 -= 1UL;
      
#line 409 
      ;
      
#line 409 
      if (tmp_0 != 0UL) 
#line 411 
                        goto ldv_54202; else 
#line 414 
                                             goto ldv_54204;
      ldv_54204: 
#line 415 
      ;
    }
  }
  ldv_54206: 
#line 418 
  ;
  
#line 408 
  tmp_1 = (*(adapter->crb_read))(adapter,106954928UL);
  
#line 408 
  if (tmp_1 != 0U) {
    
#line 408 
    cnt += 1U;
    
#line 408 
    if (cnt <= 19U) 
#line 410 
                    goto ldv_54205; else 
#line 413 
                                         goto ldv_54207;
  }
  else 
#line 413 
       goto ldv_54207;
  ldv_54207: 
#line 414 
  ;
  
#line 411 
  if (cnt <= 19U) {
    
#line 413 
    reg = (*(adapter->crb_read))(adapter,(unsigned long)(port * 65536U) + 107413508UL);
    
#line 416 
    if (mode == 1U) 
#line 417 
                    reg |= 8192U; else 
#line 419 
                                       reg &= 4294959103U;
    
#line 421 
    if (mode == 2U) 
#line 422 
                    reg |= 4096U; else 
#line 424 
                                       reg &= 4294963199U;
    
#line 426 
    (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536U) + 107413508UL,reg);
  }
  else ;
  
#line 430 
  mac_cfg |= 4U;
  
#line 431 
  (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536U) + 107413504UL,mac_cfg);
  
#line 433 
  __retres = 0;
  return_label: 
#line 433 
                return __retres;
}


#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_p2_nic_set_mac_addr(struct netxen_adapter *adapter, u8 *addr)
{
  int __retres;
  u32 mac_hi;
  u32 mac_lo;
  u32 reg_hi;
  u32 reg_lo;
  int tmp;
  int tmp_1;
  
#line 441 
  u8 phy = adapter->physical_port;
  
#line 443 
  if ((unsigned int)phy > 1U) {
    
#line 444 
    __retres = -22;
    
#line 444 
    goto return_label;
  }
  else ;
  
#line 446 
  mac_lo = ((unsigned int)*addr << 16) | ((unsigned int)*(addr + 1U) << 24);
  
#line 447 
  mac_hi = (((unsigned int)*(addr + 2U) | ((unsigned int)*(addr + 3U) << 8)) | ((unsigned int)*(addr + 4U) << 16)) | ((unsigned int)*(addr + 5U) << 24);
  
#line 450 
  reg_lo = (unsigned int)((int)phy * 65536) + 107413520U;
  
#line 451 
  reg_hi = (unsigned int)((int)phy * 65536) + 107413516U;
  
#line 454 
  tmp = (*(adapter->crb_write))(adapter,(unsigned long)reg_lo,mac_lo);
  
#line 454 
  if (tmp != 0) {
    
#line 455 
    __retres = -5;
    
#line 455 
    goto return_label;
  }
  else {
    int tmp_0;
    
#line 454 
    tmp_0 = (*(adapter->crb_write))(adapter,(unsigned long)reg_hi,mac_hi);
    
#line 454 
    if (tmp_0 != 0) {
      
#line 455 
      __retres = -5;
      
#line 455 
      goto return_label;
    }
    else ;
  }
  
#line 456 
  tmp_1 = (*(adapter->crb_write))(adapter,(unsigned long)reg_lo,mac_lo);
  
#line 456 
  if (tmp_1 != 0) {
    
#line 457 
    __retres = -5;
    
#line 457 
    goto return_label;
  }
  else {
    int tmp_2;
    
#line 456 
    tmp_2 = (*(adapter->crb_write))(adapter,(unsigned long)reg_hi,mac_hi);
    
#line 456 
    if (tmp_2 != 0) {
      
#line 457 
      __retres = -5;
      
#line 457 
      goto return_label;
    }
    else ;
  }
  
#line 459 
  __retres = 0;
  return_label: 
#line 459 
                return __retres;
}


#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_enable_mcast_filter(struct netxen_adapter *adapter)
{
  int __retres;
  
#line 465 
  u32 val = 0U;
  
#line 466 
  u16 port = (unsigned short)adapter->physical_port;
  
#line 467 
  u8 *addr = (u8 *)(& adapter->mac_addr);
  
#line 469 
  if ((unsigned int)adapter->mc_enabled != 0U) {
    
#line 470 
    __retres = 0;
    
#line 470 
    goto return_label;
  }
  else ;
  
#line 472 
  val = (*(adapter->crb_read))(adapter,106958848UL);
  
#line 473 
  val = (unsigned int)(1UL << ((int)port + 28)) | val;
  
#line 474 
  (*(adapter->crb_write))(adapter,106958848UL,val);
  
#line 477 
  val = 16777215U;
  
#line 478 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958976UL,val);
  
#line 479 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958980UL,val);
  
#line 482 
  val = (unsigned int)((((int)*(addr + 2U) << 16) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 483 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958984UL,val);
  
#line 484 
  val = (unsigned int)((((int)*(addr + 5U) << 16) | ((int)*(addr + 4U) << 8)) | (int)*(addr + 3U));
  
#line 485 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958988UL,val);
  
#line 487 
  adapter->mc_enabled = (unsigned char)1U;
  
#line 488 
  __retres = 0;
  return_label: 
#line 488 
                return __retres;
}


#line 492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_disable_mcast_filter(struct netxen_adapter *adapter)
{
  int __retres;
  
#line 494 
  u32 val = 0U;
  
#line 495 
  u16 port = (unsigned short)adapter->physical_port;
  
#line 496 
  u8 *addr = (u8 *)(& adapter->mac_addr);
  
#line 498 
  if ((unsigned int)adapter->mc_enabled == 0U) {
    
#line 499 
    __retres = 0;
    
#line 499 
    goto return_label;
  }
  else ;
  
#line 501 
  val = (*(adapter->crb_read))(adapter,106958848UL);
  
#line 502 
  val = ~ ((unsigned int)(1UL << ((int)port + 28))) & val;
  
#line 503 
  (*(adapter->crb_write))(adapter,106958848UL,val);
  
#line 505 
  val = (unsigned int)((((int)*(addr + 2U) << 16) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 506 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958976UL,val);
  
#line 507 
  val = (unsigned int)((((int)*(addr + 5U) << 16) | ((int)*(addr + 4U) << 8)) | (int)*(addr + 3U));
  
#line 508 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958980UL,val);
  
#line 510 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958984UL,0U);
  
#line 511 
  (*(adapter->crb_write))(adapter,(unsigned long)((int)port * 32) + 106958988UL,0U);
  
#line 513 
  adapter->mc_enabled = (unsigned char)0U;
  
#line 514 
  __retres = 0;
  return_label: 
#line 514 
                return __retres;
}


#line 518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_set_mcast_addr(struct netxen_adapter *adapter, int index, u8 *addr)
{
  int __retres;
  
#line 521 
  u32 hi = 0U;
  
#line 521 
  u32 lo = 0U;
  
#line 522 
  u16 port = (unsigned short)adapter->physical_port;
  
#line 524 
  lo = (unsigned int)((((int)*(addr + 5U) << 16) | ((int)*(addr + 4U) << 8)) | (int)*(addr + 3U));
  
#line 525 
  hi = (unsigned int)((((int)*(addr + 2U) << 16) | ((int)*(addr + 1U) << 8)) | (int)*addr);
  
#line 527 
  (*(adapter->crb_write))(adapter,((unsigned long)((int)port * 128) + (unsigned long)(index * 8)) + 106959104UL,hi);
  
#line 528 
  (*(adapter->crb_write))(adapter,((unsigned long)((int)port * 128) + (unsigned long)(index * 8)) + 106959108UL,lo);
  
#line 530 
  __retres = 0;
  
#line 530 
  return __retres;
}


#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_p2_nic_set_multi(struct net_device *netdev)
{
  struct netdev_hw_addr *ha;
  u8 null_addr[6U];
  int i;
  struct netdev_hw_addr *tmp_0;
  int tmp_1;
  struct netdev_hw_addr *tmp_2;
  int tmp_3;
  
#line 535 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 540 
  eth_zero_addr((u8 *)(& null_addr));
  
#line 542 
  if ((netdev->flags & 256U) != 0U) {
    
#line 544 
    (*(adapter->set_promisc))(adapter,1U);
    
#line 548 
    netxen_nic_disable_mcast_filter(adapter);
    
#line 550 
    goto return_label;
  }
  else ;
  
#line 553 
  if (netdev->mc.count == 0) {
    
#line 554 
    (*(adapter->set_promisc))(adapter,0U);
    
#line 556 
    netxen_nic_disable_mcast_filter(adapter);
    
#line 557 
    goto return_label;
  }
  else ;
  
#line 560 
  (*(adapter->set_promisc))(adapter,2U);
  
#line 561 
  if ((netdev->flags & 512U) != 0U || netdev->mc.count > (int)adapter->max_mc_count) {
    
#line 563 
    netxen_nic_disable_mcast_filter(adapter);
    
#line 564 
    goto return_label;
  }
  else ;
  
#line 567 
  netxen_nic_enable_mcast_filter(adapter);
  
#line 569 
  i = 0;
  {
    
#line 570 
    struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
    
#line 570 
    tmp_0 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 570 
  ha = tmp_0;
  
#line 570 
  goto ldv_54249;
  ldv_54248: 
#line 571 
  ;
  
#line 571 
  ;
  
#line 571 
  tmp_1 = i;
  
#line 571 
  i += 1;
  
#line 571 
  ;
  
#line 571 
  ;
  
#line 571 
  netxen_nic_set_mcast_addr(adapter,tmp_1,(u8 *)(& ha->addr));
  {
    
#line 570 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 570 
    tmp_2 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 570 
  ha = tmp_2;
  ldv_54249: 
#line 572 
  ;
  
#line 570 
  if (& ha->list != & netdev->mc.list) 
#line 572 
                                       goto ldv_54248; else 
#line 575 
                                                            goto ldv_54250;
  ldv_54250: 
#line 576 
  ;
  
#line 574 
  goto ldv_54252;
  ldv_54251: 
#line 575 
  ;
  
#line 575 
  tmp_3 = i;
  
#line 575 
  i += 1;
  
#line 575 
  ;
  
#line 575 
  ;
  
#line 575 
  netxen_nic_set_mcast_addr(adapter,tmp_3,(u8 *)(& null_addr));
  ldv_54252: 
#line 576 
  ;
  
#line 574 
  if ((int)adapter->max_mc_count > i) 
#line 576 
                                      goto ldv_54251; else 
#line 579 
                                                           goto ldv_54253;
  ldv_54253: 
#line 580 
  ;
  return_label: 
#line 581 
                return;
}


#line 579  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_send_cmd_descs(struct netxen_adapter *adapter, struct cmd_desc_type0 *cmd_desc_arr, int nr_desc)
{
  int __retres;
  u32 i;
  u32 producer;
  u32 consumer;
  struct netxen_cmd_buffer *pbuf;
  struct cmd_desc_type0 *cmd_desc;
  struct nx_host_tx_ring *tx_ring;
  u32 tmp_1;
  
#line 587 
  i = 0U;
  
#line 589 
  if ((unsigned int)adapter->is_up != 777U) {
    
#line 590 
    __retres = -5;
    
#line 590 
    goto return_label;
  }
  else ;
  
#line 592 
  tx_ring = adapter->tx_ring;
  
#line 593 
  __netif_tx_lock_bh(tx_ring->txq);
  
#line 595 
  producer = tx_ring->producer;
  
#line 596 
  consumer = tx_ring->sw_consumer;
  
#line 598 
  tmp_1 = netxen_tx_avail(tx_ring);
  
#line 598 
  ;
  
#line 598 
  if (tmp_1 <= (unsigned int)nr_desc) {
    u32 tmp_0;
    
#line 599 
    netif_tx_stop_queue(tx_ring->txq);
    
#line 600 
    ldv_inline_asm();
    
#line 601 
    tmp_0 = netxen_tx_avail(tx_ring);
    
#line 601 
    ;
    
#line 601 
    if (tmp_0 > (unsigned int)nr_desc) {
      u32 tmp;
      
#line 602 
      tmp = netxen_tx_avail(tx_ring);
      
#line 602 
      if (tmp > 10U) 
#line 603 
                     netif_tx_wake_queue(tx_ring->txq); else ;
    }
    else {
      
#line 605 
      __netif_tx_unlock_bh(tx_ring->txq);
      
#line 606 
      __retres = -16;
      
#line 606 
      goto return_label;
    }
  }
  else ;
  ldv_54265: 
#line 609 
  ;
  
#line 611 
  cmd_desc = cmd_desc_arr + i;
  
#line 613 
  pbuf = tx_ring->cmd_buf_arr + producer;
  
#line 614 
  pbuf->skb = (struct sk_buff *)0;
  
#line 615 
  pbuf->frag_count = 0U;
  
#line 617 
  memcpy((void *)(tx_ring->desc_head + producer),(void const *)(cmd_desc_arr + i),64UL);
  
#line 620 
  producer = (producer + 1U) & (tx_ring->num_desc + 4294967295U);
  
#line 621 
  i += 1U;
  
#line 623 
  if (i != (unsigned int)nr_desc) 
#line 625 
                                  goto ldv_54265; else 
#line 628 
                                                       goto ldv_54266;
  ldv_54266: 
#line 629 
  ;
  
#line 625 
  tx_ring->producer = producer;
  
#line 627 
  netxen_nic_update_cmd_producer(adapter,tx_ring);
  
#line 629 
  __netif_tx_unlock_bh(tx_ring->txq);
  
#line 631 
  __retres = 0;
  return_label: 
#line 631 
                return __retres;
}


#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int nx_p3_sre_macaddr_change(struct netxen_adapter *adapter, u8 *addr, unsigned int op)
{
  nx_nic_req_t req;
  nx_mac_req_t *mac_req;
  u64 word;
  int tmp;
  
#line 641 
  memset((void *)(& req),0,64UL);
  
#line 642 
  req.qhdr = 167772160ULL;
  
#line 644 
  word = ((unsigned long long)adapter->portnum << 16) | 1ULL;
  
#line 645 
  req.req_hdr = word;
  
#line 647 
  mac_req = (nx_mac_req_t *)(& req.words[0]);
  
#line 648 
  mac_req->op = (unsigned char)op;
  
#line 649 
  memcpy((void *)(& mac_req->mac_addr),(void const *)addr,6UL);
  
#line 651 
  tmp = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 651 
  return tmp;
}


#line 654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int nx_p3_nic_add_mac(struct netxen_adapter *adapter, u8 const *addr, struct list_head *del_list)
{
  int __retres;
  struct list_head *head;
  nx_mac_list_t *cur;
  nx_mac_list_t *tmp;
  bool tmp_0;
  int tmp_2;
  
#line 661 
  head = del_list->next;
  
#line 661 
  goto ldv_54285;
  ldv_54284: 
#line 662 
  ;
  {
    
#line 662 
    struct list_head const *__mptr = (struct list_head const *)head;
    
#line 662 
    tmp = (nx_mac_list_t *)__mptr;
  }
  
#line 662 
  cur = tmp;
  
#line 664 
  tmp_0 = ether_addr_equal(addr,(u8 const *)(& cur->mac_addr));
  
#line 664 
  if ((int)tmp_0 != 0) {
    
#line 665 
    list_move_tail(head,& adapter->mac_list);
    
#line 666 
    __retres = 0;
    
#line 666 
    goto return_label;
  }
  else ;
  
#line 661 
  head = head->next;
  ldv_54285: 
#line 662 
  ;
  
#line 661 
  if (head != del_list) 
#line 663 
                        goto ldv_54284; else 
#line 666 
                                             goto ldv_54286;
  ldv_54286: 
#line 667 
  ;
  
#line 670 
  cur = (nx_mac_list_t *)kzalloc(24UL,32U);
  
#line 671 
  if (cur == (nx_mac_list_t *)0) {
    
#line 672 
    __retres = -12;
    
#line 672 
    goto return_label;
  }
  else ;
  
#line 674 
  memcpy((void *)(& cur->mac_addr),(void const *)addr,6UL);
  
#line 675 
  list_add_tail(& cur->list,& adapter->mac_list);
  
#line 676 
  tmp_2 = nx_p3_sre_macaddr_change(adapter,(u8 *)(& cur->mac_addr),1U);
  
#line 676 
  __retres = tmp_2;
  return_label: 
#line 676 
                return __retres;
}


#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_p3_nic_set_multi(struct net_device *netdev)
{
  struct netdev_hw_addr *ha;
  struct list_head *head;
  nx_mac_list_t *cur;
  nx_mac_list_t *tmp_2;
  int tmp_3;
  
#line 682 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 684 
  u8 const bcast_addr[6U] = {(unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U, (unsigned char)255U};
  
#line 687 
  u32 mode = 0U;
  
#line 688 
  struct list_head del_list = {.next = & del_list, .prev = & del_list};
  
#line 692 
  if ((unsigned int)adapter->is_up != 777U) 
#line 693 
                                            goto return_label; else ;
  
#line 695 
  list_splice_tail_init(& adapter->mac_list,& del_list);
  
#line 697 
  nx_p3_nic_add_mac(adapter,(u8 const *)(& adapter->mac_addr),& del_list);
  
#line 698 
  nx_p3_nic_add_mac(adapter,(u8 const *)(& bcast_addr),& del_list);
  
#line 700 
  if ((netdev->flags & 256U) != 0U) {
    
#line 701 
    mode = 1U;
    
#line 702 
    goto send_fw_cmd;
  }
  else ;
  
#line 705 
  if ((netdev->flags & 512U) != 0U || netdev->mc.count > (int)adapter->max_mc_count) {
    
#line 707 
    mode = 2U;
    
#line 708 
    goto send_fw_cmd;
  }
  else ;
  
#line 711 
  if (netdev->mc.count != 0) {
    struct netdev_hw_addr *tmp_0;
    struct netdev_hw_addr *tmp_1;
    {
      
#line 712 
      struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
      
#line 712 
      tmp_0 = (struct netdev_hw_addr *)__mptr;
    }
    
#line 712 
    ha = tmp_0;
    
#line 712 
    goto ldv_54303;
    ldv_54302: 
#line 713 
    ;
    
#line 713 
    nx_p3_nic_add_mac(adapter,(u8 const *)(& ha->addr),& del_list);
    {
      
#line 712 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 712 
      tmp_1 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 712 
    ha = tmp_1;
    ldv_54303: 
#line 714 
    ;
    
#line 712 
    if (& ha->list != & netdev->mc.list) 
#line 714 
                                         goto ldv_54302; else 
#line 717 
                                                              goto ldv_54304;
    ldv_54304: 
#line 718 
    ;
  }
  else ;
  send_fw_cmd: 
#line 716 
  ;
  
#line 717 
  (*(adapter->set_promisc))(adapter,mode);
  
#line 718 
  head = & del_list;
  
#line 719 
  goto ldv_54308;
  ldv_54307: 
#line 720 
  ;
  {
    
#line 720 
    struct list_head const *__mptr_1 = (struct list_head const *)head->next;
    
#line 720 
    tmp_2 = (nx_mac_list_t *)__mptr_1;
  }
  
#line 720 
  cur = tmp_2;
  
#line 722 
  nx_p3_sre_macaddr_change(adapter,(u8 *)(& cur->mac_addr),2U);
  
#line 724 
  list_del(& cur->list);
  
#line 725 
  kfree((void const *)cur);
  ldv_54308: 
#line 726 
  ;
  
#line 719 
  tmp_3 = list_empty((struct list_head const *)head);
  
#line 719 
  if (tmp_3 == 0) 
#line 721 
                  goto ldv_54307; else 
#line 724 
                                       goto ldv_54309;
  ldv_54309: 
#line 725 
  ;
  return_label: 
#line 726 
                return;
}


#line 729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_p3_nic_set_promisc(struct netxen_adapter *adapter, u32 mode)
{
  nx_nic_req_t req;
  u64 word;
  int tmp;
  
#line 734 
  memset((void *)(& req),0,64UL);
  
#line 736 
  req.qhdr = 159383552ULL;
  
#line 738 
  word = ((unsigned long long)adapter->portnum << 16) | 12ULL;
  
#line 740 
  req.req_hdr = word;
  
#line 742 
  req.words[0] = (unsigned long long)mode;
  
#line 744 
  tmp = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 744 
  return tmp;
}


#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_p3_free_mac_list(struct netxen_adapter *adapter)
{
  nx_mac_list_t *cur;
  nx_mac_list_t *tmp;
  int tmp_0;
  
#line 751 
  struct list_head *head = & adapter->mac_list;
  
#line 753 
  goto ldv_54324;
  ldv_54323: 
#line 754 
  ;
  {
    
#line 754 
    struct list_head const *__mptr = (struct list_head const *)head->next;
    
#line 754 
    tmp = (nx_mac_list_t *)__mptr;
  }
  
#line 754 
  cur = tmp;
  
#line 755 
  nx_p3_sre_macaddr_change(adapter,(u8 *)(& cur->mac_addr),2U);
  
#line 757 
  list_del(& cur->list);
  
#line 758 
  kfree((void const *)cur);
  ldv_54324: 
#line 759 
  ;
  
#line 753 
  tmp_0 = list_empty((struct list_head const *)head);
  
#line 753 
  if (tmp_0 == 0) 
#line 755 
                  goto ldv_54323; else 
#line 758 
                                       goto ldv_54325;
  ldv_54325: 
#line 759 
  ;
  
#line 760 
  return;
}


#line 762  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_p3_nic_set_mac_addr(struct netxen_adapter *adapter, u8 *addr)
{
  int __retres;
  
#line 765 
  netxen_p3_nic_set_multi(adapter->netdev);
  
#line 766 
  __retres = 0;
  
#line 766 
  return __retres;
}


#line 774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_config_intr_coalesce(struct netxen_adapter *adapter)
{
  nx_nic_req_t req;
  u64 word[6U];
  int rv;
  int i;
  
#line 780 
  memset((void *)(& req),0,64UL);
  
#line 781 
  memset((void *)(& word),0,48UL);
  
#line 783 
  req.qhdr = 159383552ULL;
  
#line 785 
  word[0] = ((unsigned long long)adapter->portnum << 16) | 3ULL;
  
#line 786 
  req.req_hdr = word[0];
  
#line 788 
  memcpy((void *)(&(word[0])),(void const *)(& adapter->coal),48UL);
  
#line 789 
  i = 0;
  
#line 789 
  goto ldv_54338;
  ldv_54337: 
#line 790 
  ;
  
#line 790 
  req.words[i] = word[i];
  
#line 789 
  i += 1;
  ldv_54338: 
#line 790 
  ;
  
#line 789 
  if (i <= 5) 
#line 791 
              goto ldv_54337; else 
#line 794 
                                   goto ldv_54339;
  ldv_54339: 
#line 795 
  ;
  
#line 792 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 793 
  if (rv != 0) 
#line 794 
               printk("\001"); else ;
  
#line 798 
  return rv;
}


#line 801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_config_hw_lro(struct netxen_adapter *adapter, int enable)
{
  int __retres;
  nx_nic_req_t req;
  u64 word;
  int tmp;
  
#line 805 
  int rv = 0;
  
#line 807 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->state));
  
#line 807 
  if (tmp == 0) {
    
#line 808 
    __retres = 0;
    
#line 808 
    goto return_label;
  }
  else ;
  
#line 810 
  memset((void *)(& req),0,64UL);
  
#line 812 
  req.qhdr = 159383552ULL;
  
#line 814 
  word = ((unsigned long long)adapter->portnum << 16) | 24ULL;
  
#line 815 
  req.req_hdr = word;
  
#line 817 
  req.words[0] = (unsigned long long)enable;
  
#line 819 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 820 
  if (rv != 0) 
#line 821 
               printk("\001"); else ;
  
#line 825 
  __retres = rv;
  return_label: 
#line 825 
                return __retres;
}


#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_config_bridged_mode(struct netxen_adapter *adapter, int enable)
{
  int __retres;
  nx_nic_req_t req;
  u64 word;
  
#line 832 
  int rv = 0;
  
#line 834 
  if (((adapter->flags & 16U) != 0U) == enable) {
    
#line 835 
    __retres = rv;
    
#line 835 
    goto return_label;
  }
  else ;
  
#line 837 
  memset((void *)(& req),0,64UL);
  
#line 839 
  req.qhdr = 159383552ULL;
  
#line 841 
  word = ((unsigned long long)adapter->portnum << 16) | 23ULL;
  
#line 843 
  req.req_hdr = word;
  
#line 845 
  req.words[0] = (unsigned long long)enable;
  
#line 847 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 848 
  if (rv != 0) 
#line 849 
               printk("\001"); else ;
  
#line 853 
  adapter->flags ^= 16U;
  
#line 855 
  __retres = rv;
  return_label: 
#line 855 
                return __retres;
}


#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_config_rss(struct netxen_adapter *adapter, int enable)
{
  nx_nic_req_t req;
  u64 word;
  int i;
  int rv;
  
#line 867 
  u64 const key[5U] = {13739358738236749627ULL, 9237148971100220835ULL, 12572696337890028491ULL, 4873897208919303485ULL, 2691761430505084634ULL};
  
#line 874 
  memset((void *)(& req),0,64UL);
  
#line 875 
  req.qhdr = 159383552ULL;
  
#line 877 
  word = ((unsigned long long)adapter->portnum << 16) | 1ULL;
  
#line 878 
  req.req_hdr = word;
  
#line 890 
  word = (((unsigned long long)enable << 8) & 256ULL) | 1970324836974832ULL;
  
#line 894 
  req.words[0] = word;
  
#line 895 
  i = 0;
  
#line 895 
  goto ldv_54367;
  ldv_54366: 
#line 896 
  ;
  
#line 896 
  req.words[i + 1] = key[i];
  
#line 895 
  i += 1;
  ldv_54367: 
#line 896 
  ;
  
#line 895 
  if ((unsigned int)i <= 4U) 
#line 897 
                             goto ldv_54366; else 
#line 900 
                                                  goto ldv_54368;
  ldv_54368: 
#line 901 
  ;
  
#line 899 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 900 
  if (rv != 0) 
#line 901 
               printk("\001",(char *)(& (adapter->netdev)->name)); else ;
  
#line 905 
  return rv;
}


#line 908  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_config_ipaddr(struct netxen_adapter *adapter, __be32 ip, int cmd)
{
  nx_nic_req_t req;
  u64 word;
  int rv;
  
#line 914 
  memset((void *)(& req),0,64UL);
  
#line 915 
  req.qhdr = 159383552ULL;
  
#line 917 
  word = ((unsigned long long)adapter->portnum << 16) | 18ULL;
  
#line 918 
  req.req_hdr = word;
  
#line 920 
  req.words[0] = (unsigned long long)cmd;
  
#line 921 
  memcpy((void *)(& req.words[1]),(void const *)(& ip),4UL);
  
#line 923 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 924 
  if (rv != 0) {
    char *tmp;
    
#line 925 
    ;
    
#line 926 
    if (cmd == 2) 
#line 926 
                  tmp = (char *)"Add"; else 
#line 926 
                                            tmp = (char *)"Remove";
    
#line 925 
    ;
    
#line 925 
    printk("\001",(char *)(& (adapter->netdev)->name),tmp,ip);
  }
  else ;
  
#line 929 
  return rv;
}


#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_linkevent_request(struct netxen_adapter *adapter, int enable)
{
  nx_nic_req_t req;
  u64 word;
  int rv;
  
#line 938 
  memset((void *)(& req),0,64UL);
  
#line 939 
  req.qhdr = 159383552ULL;
  
#line 941 
  word = ((unsigned long long)adapter->portnum << 16) | 21ULL;
  
#line 942 
  req.req_hdr = word;
  
#line 943 
  req.words[0] = (unsigned long long)((enable << 8) | enable);
  
#line 945 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 946 
  if (rv != 0) 
#line 947 
               printk("\001",(char *)(& (adapter->netdev)->name)); else ;
  
#line 951 
  return rv;
}


#line 954  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_send_lro_cleanup(struct netxen_adapter *adapter)
{
  int __retres;
  nx_nic_req_t req;
  u64 word;
  int rv;
  int tmp;
  
#line 960 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->state));
  
#line 960 
  if (tmp == 0) {
    
#line 961 
    __retres = 0;
    
#line 961 
    goto return_label;
  }
  else ;
  
#line 963 
  memset((void *)(& req),0,64UL);
  
#line 964 
  req.qhdr = 159383552ULL;
  
#line 966 
  word = ((unsigned long long)adapter->portnum << 16) | 288230376151711751ULL;
  
#line 970 
  req.req_hdr = word;
  
#line 972 
  rv = netxen_send_cmd_descs(adapter,(struct cmd_desc_type0 *)(& req),1);
  
#line 973 
  if (rv != 0) 
#line 974 
               printk("\001",(char *)(& (adapter->netdev)->name)); else ;
  
#line 977 
  __retres = rv;
  return_label: 
#line 977 
                return __retres;
}


#line 987  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_nic_change_mtu(struct net_device *netdev, int mtu)
{
  int __retres;
  int max_mtu;
  
#line 989 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 991 
  int rc = 0;
  
#line 993 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 994 
                                                    max_mtu = 9600; else 
                                                                    
#line 996 
                                                                    max_mtu = 8000;
  
#line 998 
  if (mtu > max_mtu) {
    
#line 999 
    printk("\001",(char *)(& netdev->name),max_mtu);
    
#line 1001 
    __retres = -22;
    
#line 1001 
    goto return_label;
  }
  else ;
  
#line 1004 
  if (adapter->set_mtu != (int (*)(struct netxen_adapter *, int ))0) 
    
#line 1005 
    rc = (*(adapter->set_mtu))(adapter,mtu); else ;
  
#line 1007 
  if (rc == 0) 
#line 1008 
               netdev->mtu = (unsigned int)mtu; else ;
  
#line 1010 
  __retres = rc;
  return_label: 
#line 1010 
                return __retres;
}


#line 1013  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_get_flash_block(struct netxen_adapter *adapter, int base, int size, __le32 *buf)
{
  int __retres;
  int i;
  int v;
  int addr;
  __le32 *ptr32;
  int tmp;
  
#line 1019 
  addr = base;
  
#line 1020 
  ptr32 = buf;
  
#line 1021 
  i = 0;
  
#line 1021 
  goto ldv_54408;
  ldv_54407: 
#line 1022 
  ;
  
#line 1022 
  tmp = netxen_rom_fast_read(adapter,addr,& v);
  
#line 1022 
  if (tmp == -1) {
    
#line 1023 
    __retres = -1;
    
#line 1023 
    goto return_label;
  }
  else ;
  
#line 1024 
  *ptr32 = (unsigned int)v;
  
#line 1025 
  ptr32 += 1;
  
#line 1026 
  addr = (int)((unsigned int)addr + 4U);
  
#line 1021 
  i += 1;
  ldv_54408: 
#line 1022 
  ;
  
#line 1021 
  if ((unsigned long)i < (unsigned long)size / 4UL) 
#line 1023 
                                                    goto ldv_54407; else 
                                                                    
#line 1026 
                                                                    goto ldv_54409;
  ldv_54409: 
#line 1027 
  ;
  
#line 1028 
  if ((char *)buf + size > (char *)ptr32) {
    __le32 local;
    int tmp_0;
    
#line 1030 
    tmp_0 = netxen_rom_fast_read(adapter,addr,& v);
    
#line 1030 
    if (tmp_0 == -1) {
      
#line 1031 
      __retres = -1;
      
#line 1031 
      goto return_label;
    }
    else ;
    
#line 1032 
    local = (unsigned int)v;
    
#line 1033 
    memcpy((void *)ptr32,(void const *)(& local),(unsigned long)((long)((char *)buf + size) - (long)ptr32));
  }
  else ;
  
#line 1036 
  __retres = 0;
  return_label: 
#line 1036 
                return __retres;
}


#line 1039  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_get_flash_mac_addr(struct netxen_adapter *adapter, u64 *mac)
{
  int __retres;
  u32 offset;
  int tmp;
  
#line 1041 
  __le32 *pmac = (__le32 *)mac;
  
#line 1044 
  offset = (unsigned int)((unsigned long)adapter->portnum + 512131UL) * 8U;
  
#line 1046 
  tmp = netxen_get_flash_block(adapter,(int)offset,8,pmac);
  
#line 1046 
  if (tmp == -1) {
    
#line 1047 
    __retres = -1;
    
#line 1047 
    goto return_label;
  }
  else ;
  
#line 1049 
  if (*mac == 18446744073709551615ULL) {
    int tmp_0;
    
#line 1051 
    offset = (unsigned int)((unsigned long)adapter->portnum + 512000UL) * 8U;
    
#line 1054 
    tmp_0 = netxen_get_flash_block(adapter,(int)offset,8,pmac);
    
#line 1054 
    if (tmp_0 == -1) {
      
#line 1056 
      __retres = -1;
      
#line 1056 
      goto return_label;
    }
    else ;
    
#line 1058 
    if (*mac == 18446744073709551615ULL) {
      
#line 1059 
      __retres = -1;
      
#line 1059 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1061 
  __retres = 0;
  return_label: 
#line 1061 
                return __retres;
}


#line 1064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_p3_get_mac_addr(struct netxen_adapter *adapter, u64 *mac)
{
  int __retres;
  uint32_t crbaddr;
  uint32_t mac_hi;
  uint32_t mac_lo;
  
#line 1067 
  int pci_func = (int)adapter->ahw.pci_func;
  
#line 1069 
  crbaddr = ((unsigned int)((pci_func / 2) * 12) + (unsigned int)((pci_func & 1) * 4)) + 136323520U;
  
#line 1072 
  mac_lo = (*(adapter->crb_read))(adapter,(unsigned long)crbaddr);
  
#line 1073 
  mac_hi = (*(adapter->crb_read))(adapter,(unsigned long)(crbaddr + 4U));
  
#line 1075 
  if ((pci_func & 1) != 0) 
#line 1076 
                           *mac = (unsigned long long)(mac_lo >> 16) | ((unsigned long long)mac_hi << 16); else 
                                                                    
#line 1078 
                                                                    *mac = (unsigned long long)mac_lo | ((unsigned long long)mac_hi << 32);
  
#line 1080 
  __retres = 0;
  
#line 1080 
  return __retres;
}


#line 1087  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_nic_pci_set_crbwindow_128M(struct netxen_adapter *adapter, u32 window)
{
  void *offset;
  int tmp;
  unsigned int tmp_0;
  int tmp_1;
  
#line 1091 
  int count = 10;
  
#line 1092 
  u8 func = adapter->ahw.pci_func;
  
#line 1094 
  if (adapter->ahw.crb_win == window) 
#line 1095 
                                      goto return_label; else ;
  
#line 1097 
  if ((unsigned int)func <= 3U) 
#line 1097 
                                tmp = (int)func * 32 + 66064; else 
#line 1097 
                                                                   tmp = ((int)func + -4) * 16 + 66220;
  
#line 1097 
  offset = adapter->ahw.pci_base1 + ((unsigned int)tmp + 1048576U);
  
#line 1100 
  writel(window,(void volatile *)offset);
  ldv_54434: 
#line 1101 
  ;
  
#line 1102 
  tmp_0 = readl((void const volatile *)offset);
  
#line 1102 
  ;
  
#line 1102 
  if (tmp_0 == window) 
#line 1103 
                       goto ldv_54432; else ;
  
#line 1105 
  tmp_1 = __printk_ratelimit("netxen_nic_pci_set_crbwindow_128M");
  
#line 1105 
  if (tmp_1 != 0) 
#line 1106 
                  dev_warn((struct device const *)(& (adapter->pdev)->dev),"failed to set CRB window to %d\n",window == 33554432U); else ;
  
#line 1109 
  __const_udelay(4295UL);
  
#line 1111 
  count -= 1;
  
#line 1111 
  if (count > 0) 
#line 1113 
                 goto ldv_54434; else 
#line 1116 
                                      goto ldv_54432;
  ldv_54432: 
#line 1117 
  ;
  
#line 1113 
  if (count > 0) 
#line 1114 
                 adapter->ahw.crb_win = window; else ;
  return_label: 
#line 1115 
                return;
}


#line 1125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_get_crb_addr_2M(struct netxen_adapter *adapter, ulong off, void **addr)
{
  int __retres;
  crb_128M_2M_sub_block_map_t *m;
  
#line 1131 
  if (off + 18446744073608888320UL > 67108863UL) {
    
#line 1132 
    __retres = -22;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  off += 18446744073608888320UL;
  
#line 1139 
  m = & crb_128M_2M_map[(off >> 20) & 63UL].sub_block[(off >> 16) & 15UL];
  
#line 1141 
  if ((m->valid != 0U && (unsigned long)m->start_128M <= off) && (unsigned long)m->end_128M > off) {
    
#line 1142 
    *addr = adapter->ahw.pci_base0 + ((ulong)m->start_2M + (off - (unsigned long)m->start_128M));
    
#line 1144 
    __retres = 0;
    
#line 1144 
    goto return_label;
  }
  else ;
  
#line 1150 
  *addr = adapter->ahw.pci_base0 + ((off & (unsigned long)65535U) + (unsigned long)1966080U);
  
#line 1152 
  __retres = 1;
  return_label: 
#line 1152 
                return __retres;
}


#line 1161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_nic_pci_set_crbwindow_2M(struct netxen_adapter *adapter, ulong off)
{
  u32 window;
  unsigned int tmp_0;
  
#line 1164 
  void *addr = adapter->ahw.pci_base0 + 1245280U;
  
#line 1166 
  off += 18446744073608888320UL;
  
#line 1168 
  window = (crb_hub_agt[(off >> 20) & 63UL] << 20) | ((unsigned int)off & 983040U);
  
#line 1170 
  writel(window,(void volatile *)addr);
  
#line 1171 
  tmp_0 = readl((void const volatile *)addr);
  
#line 1171 
  ;
  
#line 1171 
  if (tmp_0 != window) {
    int tmp;
    
#line 1172 
    tmp = __printk_ratelimit("netxen_nic_pci_set_crbwindow_2M");
    
#line 1172 
    if (tmp != 0) 
#line 1173 
                  dev_warn((struct device const *)(& (adapter->pdev)->dev),"failed to set CRB window to %d off 0x%lx\n",window,off); else ;
  }
  else ;
  
#line 1175 
  return;
}


#line 1180  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void *netxen_nic_map_indirect_address_128M(struct netxen_adapter *adapter, ulong win_off, void **mem_ptr)
{
  void *__retres;
  void *addr;
  resource_size_t mem_base;
  
#line 1183 
  ulong off = win_off;
  
#line 1187 
  if (win_off + 18446744073575333887UL <= 33554430UL) 
#line 1188 
                                                      off = win_off + 18446744073675997184UL; else ;
  
#line 1190 
  addr = pci_base_offset(adapter,off);
  
#line 1191 
  if (addr != (void *)0) {
    
#line 1192 
    __retres = addr;
    
#line 1192 
    goto return_label;
  }
  else ;
  
#line 1194 
  if (adapter->ahw.pci_len0 == 0UL) 
#line 1195 
                                    off += 18446744073608888320UL; else ;
  
#line 1197 
  mem_base = (adapter->pdev)->resource[0].start;
  
#line 1198 
  *mem_ptr = ioremap(((unsigned long long)off & 18446744073709547520ULL) + mem_base,4096UL);
  
#line 1199 
  if (*mem_ptr != (void *)0) 
#line 1200 
                             addr = *mem_ptr + (off & (unsigned long)4095U); else ;
  
#line 1202 
  __retres = addr;
  return_label: 
#line 1202 
                return __retres;
}


#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_hw_write_wx_128M(struct netxen_adapter *adapter, ulong off, u32 data)
{
  int __retres;
  unsigned long flags;
  void *addr;
  
#line 1209 
  void *mem_ptr = (void *)0;
  
#line 1211 
  addr = netxen_nic_map_indirect_address_128M(adapter,off,& mem_ptr);
  
#line 1212 
  if (addr == (void *)0) {
    
#line 1213 
    __retres = -5;
    
#line 1213 
    goto return_label;
  }
  else ;
  
#line 1215 
  if (off + 18446744073575333887UL <= 33554430UL) 
#line 1216 
                                                  netxen_nic_io_write_128M(adapter,addr,data);
  else {
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
    }
    
#line 1218 
    flags = _raw_write_lock_irqsave(& adapter->ahw.crb_lock);
    
#line 1219 
    netxen_nic_pci_set_crbwindow_128M(adapter,0U);
    
#line 1220 
    writel(data,(void volatile *)addr);
    
#line 1221 
    netxen_nic_pci_set_crbwindow_128M(adapter,33554432U);
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 1223 
    _raw_write_unlock_irqrestore(& adapter->ahw.crb_lock,flags);
  }
  
#line 1226 
  if (mem_ptr != (void *)0) 
#line 1227 
                            iounmap((void volatile *)mem_ptr); else ;
  
#line 1229 
  __retres = 0;
  return_label: 
#line 1229 
                return __retres;
}


#line 1233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_nic_hw_read_wx_128M(struct netxen_adapter *adapter, ulong off)
{
  u32 __retres;
  unsigned long flags;
  void *addr;
  u32 data;
  
#line 1236 
  void *mem_ptr = (void *)0;
  
#line 1239 
  addr = netxen_nic_map_indirect_address_128M(adapter,off,& mem_ptr);
  
#line 1240 
  if (addr == (void *)0) {
    
#line 1241 
    __retres = 4294967291U;
    
#line 1241 
    goto return_label;
  }
  else ;
  
#line 1243 
  if (off + 18446744073575333887UL <= 33554430UL) 
#line 1244 
                                                  data = netxen_nic_io_read_128M(adapter,addr);
  else {
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
    }
    
#line 1246 
    flags = _raw_write_lock_irqsave(& adapter->ahw.crb_lock);
    
#line 1247 
    netxen_nic_pci_set_crbwindow_128M(adapter,0U);
    
#line 1248 
    data = readl((void const volatile *)addr);
    
#line 1249 
    netxen_nic_pci_set_crbwindow_128M(adapter,33554432U);
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 1251 
    _raw_write_unlock_irqrestore(& adapter->ahw.crb_lock,flags);
  }
  
#line 1254 
  if (mem_ptr != (void *)0) 
#line 1255 
                            iounmap((void volatile *)mem_ptr); else ;
  
#line 1257 
  __retres = data;
  return_label: 
#line 1257 
                return __retres;
}


#line 1261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_hw_write_wx_2M(struct netxen_adapter *adapter, ulong off, u32 data)
{
  int __retres;
  unsigned long flags;
  int rv;
  
#line 1265 
  void *addr = (void *)0;
  
#line 1267 
  rv = netxen_nic_pci_get_crb_addr_2M(adapter,off,& addr);
  
#line 1269 
  if (rv == 0) {
    
#line 1270 
    writel(data,(void volatile *)addr);
    
#line 1271 
    __retres = 0;
    
#line 1271 
    goto return_label;
  }
  else ;
  
#line 1274 
  if (rv > 0) {
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
    }
    
#line 1276 
    flags = _raw_write_lock_irqsave(& adapter->ahw.crb_lock);
    
#line 1277 
    netxen_pcie_sem_lock(adapter,7,136323364U);
    
#line 1278 
    netxen_nic_pci_set_crbwindow_2M(adapter,off);
    
#line 1279 
    writel(data,(void volatile *)addr);
    
#line 1280 
    netxen_pcie_sem_unlock(adapter,7);
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 1281 
    _raw_write_unlock_irqrestore(& adapter->ahw.crb_lock,flags);
    
#line 1282 
    __retres = 0;
    
#line 1282 
    goto return_label;
  }
  else ;
  
#line 1285 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"%s: invalid offset: 0x%016lx\n","netxen_nic_hw_write_wx_2M",off);
  
#line 1287 
  dump_stack();
  
#line 1288 
  __retres = -5;
  return_label: 
#line 1288 
                return __retres;
}


#line 1292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_nic_hw_read_wx_2M(struct netxen_adapter *adapter, ulong off)
{
  u32 __retres;
  unsigned long flags;
  int rv;
  u32 data;
  
#line 1297 
  void *addr = (void *)0;
  
#line 1299 
  rv = netxen_nic_pci_get_crb_addr_2M(adapter,off,& addr);
  
#line 1301 
  if (rv == 0) {
    u32 tmp;
    
#line 1302 
    tmp = readl((void const volatile *)addr);
    
#line 1302 
    __retres = tmp;
    
#line 1302 
    goto return_label;
  }
  else ;
  
#line 1304 
  if (rv > 0) {
    {
      unsigned long __dummy;
      unsigned long __dummy2;
      
    }
    
#line 1306 
    flags = _raw_write_lock_irqsave(& adapter->ahw.crb_lock);
    
#line 1307 
    netxen_pcie_sem_lock(adapter,7,136323364U);
    
#line 1308 
    netxen_nic_pci_set_crbwindow_2M(adapter,off);
    
#line 1309 
    data = readl((void const volatile *)addr);
    
#line 1310 
    netxen_pcie_sem_unlock(adapter,7);
    {
      unsigned long __dummy_0;
      unsigned long __dummy2_0;
      
    }
    
#line 1311 
    _raw_write_unlock_irqrestore(& adapter->ahw.crb_lock,flags);
    
#line 1312 
    __retres = data;
    
#line 1312 
    goto return_label;
  }
  else ;
  
#line 1315 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"%s: invalid offset: 0x%016lx\n","netxen_nic_hw_read_wx_2M",off);
  
#line 1317 
  dump_stack();
  
#line 1318 
  __retres = 4294967295U;
  return_label: 
#line 1318 
                return __retres;
}


#line 1322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_nic_io_write_128M(struct netxen_adapter *adapter, void *addr, u32 data)
{
  
#line 1325 
  _raw_read_lock(& adapter->ahw.crb_lock);
  
#line 1326 
  writel(data,(void volatile *)addr);
  
#line 1327 
  _raw_read_unlock(& adapter->ahw.crb_lock);
  
#line 1328 
  return;
}


#line 1330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_nic_io_read_128M(struct netxen_adapter *adapter, void *addr)
{
  u32 val;
  
#line 1335 
  _raw_read_lock(& adapter->ahw.crb_lock);
  
#line 1336 
  val = readl((void const volatile *)addr);
  
#line 1337 
  _raw_read_unlock(& adapter->ahw.crb_lock);
  
#line 1339 
  return val;
}


#line 1342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static void netxen_nic_io_write_2M(struct netxen_adapter *adapter, void *addr, u32 data)
{
  
#line 1345 
  writel(data,(void volatile *)addr);
  
#line 1346 
  return;
}


#line 1348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_nic_io_read_2M(struct netxen_adapter *adapter, void *addr)
{
  u32 tmp;
  
#line 1351 
  tmp = readl((void const volatile *)addr);
  
#line 1351 
  return tmp;
}


#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void *netxen_get_ioaddr(struct netxen_adapter *adapter, u32 offset)
{
  
#line 1357 
  void *addr = (void *)0;
  
#line 1359 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
    
#line 1360 
    if (offset + 4194303999U <= 33554430U) 
#line 1362 
                                           addr = adapter->ahw.pci_base1 + ((unsigned long)offset + 18446744073608888320U); else 
                                                                    
#line 1364 
                                                                    addr = pci_base_offset(adapter,(unsigned long)offset + 18446744073675997184UL);
  else {
    int tmp;
    
#line 1366 
    tmp = netxen_nic_pci_get_crb_addr_2M(adapter,(unsigned long)offset,& addr);
    
#line 1366 
    int __ret_warn_on = tmp != 0;
    
#line 1366 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1366 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c",1367); else ;
    
#line 1366 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1370 
  return addr;
}


#line 1374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_set_window_128M(struct netxen_adapter *adapter, u64 addr, u32 *start)
{
  int __retres;
  
#line 1377 
  if (addr + 18446744065119617024ULL <= 1048574ULL) {
    
#line 1378 
    *start = (unsigned int)addr + 83886080U;
    
#line 1379 
    __retres = 0;
    
#line 1379 
    goto return_label;
  }
  else 
    
#line 1380 
    if (addr + 18446744065115422720ULL <= 1048574ULL) {
      
#line 1382 
      *start = (unsigned int)addr + 80740352U;
      
#line 1383 
      __retres = 0;
      
#line 1383 
      goto return_label;
    }
    else ;
  
#line 1386 
  __retres = -5;
  return_label: 
#line 1386 
                return __retres;
}


#line 1390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_set_window_2M(struct netxen_adapter *adapter, u64 addr, u32 *start)
{
  int __retres;
  u32 window;
  
#line 1395 
  window = ((unsigned int)(addr >> 1) & 16744448U) | ((unsigned int)(addr >> 25) & 1023U);
  
#line 1397 
  writel(window,(void volatile *)adapter->ahw.ocm_win_crb);
  
#line 1399 
  readl((void const volatile *)adapter->ahw.ocm_win_crb);
  
#line 1401 
  adapter->ahw.ocm_win = window;
  
#line 1402 
  *start = ((unsigned int)addr & 262143U) + 786432U;
  
#line 1403 
  __retres = 0;
  
#line 1403 
  return __retres;
}


#line 1407  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_mem_access_direct(struct netxen_adapter *adapter, u64 off, u64 *data, int op)
{
  void *addr;
  resource_size_t mem_base;
  int ret;
  u32 start;
  
#line 1410 
  void *mem_ptr = (void *)0;
  
#line 1415 
  ldv_spin_lock_73(& adapter->ahw.mem_lock);
  
#line 1417 
  ret = (*(adapter->pci_set_window))(adapter,off,& start);
  
#line 1418 
  if (ret != 0) 
#line 1419 
                goto unlock; else ;
  
#line 1421 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1422 
                                                    addr = adapter->ahw.pci_base0 + start;
  else {
    
#line 1424 
    addr = pci_base_offset(adapter,(unsigned long)start);
    
#line 1425 
    if (addr != (void *)0) 
#line 1426 
                           goto noremap; else ;
    
#line 1428 
    mem_base = (adapter->pdev)->resource[0].start + ((unsigned long long)start & 18446744073709547520ULL);
    
#line 1430 
    mem_ptr = ioremap(mem_base,4096UL);
    
#line 1431 
    if (mem_ptr == (void *)0) {
      
#line 1432 
      ret = -5;
      
#line 1433 
      goto unlock;
    }
    else ;
    
#line 1436 
    addr = mem_ptr + (start & 4095U);
  }
  noremap: 
#line 1438 
  ;
  
#line 1439 
  if (op == 0) 
#line 1440 
               *data = (u64)readq((void const volatile *)addr); else 
                                                                  
#line 1442 
                                                                  writeq((unsigned long)*data,(void volatile *)addr);
  unlock: 
#line 1444 
  ;
  
#line 1445 
  ldv_spin_unlock_74(& adapter->ahw.mem_lock);
  
#line 1447 
  if (mem_ptr != (void *)0) 
#line 1448 
                            iounmap((void volatile *)mem_ptr); else ;
  
#line 1449 
  return ret;
}


#line 1453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_pci_camqm_read_2M(struct netxen_adapter *adapter, u64 off, u64 *data)
{
  
#line 1455 
  void *addr = adapter->ahw.pci_base0 + (off + (u64)18446744073635100672U);
  
#line 1458 
  ldv_spin_lock_75(& adapter->ahw.mem_lock);
  
#line 1459 
  *data = (u64)readq((void const volatile *)addr);
  
#line 1460 
  ldv_spin_unlock_76(& adapter->ahw.mem_lock);
  
#line 1461 
  return;
}


#line 1464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_pci_camqm_write_2M(struct netxen_adapter *adapter, u64 off, u64 data)
{
  
#line 1466 
  void *addr = adapter->ahw.pci_base0 + (off + (u64)18446744073635100672U);
  
#line 1469 
  ldv_spin_lock_77(& adapter->ahw.mem_lock);
  
#line 1470 
  writeq((unsigned long)data,(void volatile *)addr);
  
#line 1471 
  ldv_spin_unlock_78(& adapter->ahw.mem_lock);
  
#line 1472 
  return;
}


#line 1477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_mem_write_128M(struct netxen_adapter *adapter, u64 off, u64 data)
{
  int __retres;
  int j;
  int ret;
  u32 temp;
  u32 off_lo;
  u32 off_hi;
  u32 addr_hi;
  u32 data_hi;
  u32 data_lo;
  void *mem_crb;
  
#line 1485 
  if ((off & 7ULL) != 0ULL) {
    
#line 1486 
    __retres = -5;
    
#line 1486 
    goto return_label;
  }
  else ;
  
#line 1489 
  if (off + 18446744060824649728ULL <= 4194302ULL) {
    
#line 1491 
    mem_crb = pci_base_offset(adapter,131072096UL);
    
#line 1493 
    addr_hi = 24U;
    
#line 1494 
    data_lo = 8U;
    
#line 1495 
    data_hi = 12U;
    
#line 1496 
    off_lo = (unsigned int)off & 4194296U;
    
#line 1497 
    off_hi = (unsigned int)(off >> 22);
    
#line 1498 
    goto correct;
  }
  else ;
  
#line 1501 
  if (off <= 268435454ULL) {
    
#line 1502 
    mem_crb = pci_base_offset(adapter,102760592UL);
    
#line 1504 
    addr_hi = 8U;
    
#line 1505 
    data_lo = 16U;
    
#line 1506 
    data_hi = 20U;
    
#line 1507 
    off_lo = (unsigned int)off & 4294967288U;
    
#line 1508 
    off_hi = 0U;
    
#line 1509 
    goto correct;
  }
  else ;
  
#line 1512 
  if (off + 18446744065119617024ULL <= 1048574ULL || off + 18446744065115422720ULL <= 1048574ULL) {
    
#line 1514 
    if (adapter->ahw.pci_len0 != 0UL) {
      int tmp;
      
#line 1515 
      tmp = netxen_nic_pci_mem_access_direct(adapter,off,& data,1);
      
#line 1515 
      __retres = tmp;
      
#line 1515 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1520 
  __retres = -5;
  
#line 1520 
  goto return_label;
  correct: 
#line 1522 
  ;
  
#line 1523 
  ldv_spin_lock_79(& adapter->ahw.mem_lock);
  
#line 1524 
  netxen_nic_pci_set_crbwindow_128M(adapter,0U);
  
#line 1526 
  writel(off_lo,(void volatile *)(mem_crb + 4U));
  
#line 1527 
  writel(off_hi,(void volatile *)(mem_crb + addr_hi));
  
#line 1528 
  writel((unsigned int)data,(void volatile *)(mem_crb + data_lo));
  
#line 1529 
  writel((unsigned int)(data >> 32),(void volatile *)(mem_crb + data_hi));
  
#line 1530 
  writel(6U,(void volatile *)mem_crb);
  
#line 1531 
  writel(7U,(void volatile *)mem_crb);
  
#line 1534 
  j = 0;
  
#line 1534 
  goto ldv_54593;
  ldv_54592: 
#line 1535 
  ;
  
#line 1535 
  temp = readl((void const volatile *)mem_crb);
  
#line 1536 
  if ((temp & 8U) == 0U) 
#line 1537 
                         goto ldv_54591; else ;
  
#line 1534 
  j += 1;
  ldv_54593: 
#line 1535 
  ;
  
#line 1534 
  if (j <= 999) 
#line 1536 
                goto ldv_54592; else 
#line 1539 
                                     goto ldv_54591;
  ldv_54591: 
#line 1540 
  ;
  
#line 1540 
  if (j > 999) {
    int tmp_0;
    
#line 1541 
    tmp_0 = __printk_ratelimit("netxen_nic_pci_mem_write_128M");
    
#line 1541 
    if (tmp_0 != 0) 
#line 1542 
                    dev_err((struct device const *)(& (adapter->pdev)->dev),"failed to write through agent\n"); else ;
    
#line 1544 
    ret = -5;
  }
  else 
#line 1546 
       ret = 0;
  
#line 1548 
  netxen_nic_pci_set_crbwindow_128M(adapter,33554432U);
  
#line 1549 
  ldv_spin_unlock_80(& adapter->ahw.mem_lock);
  
#line 1550 
  __retres = ret;
  return_label: 
#line 1550 
                return __retres;
}


#line 1554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_mem_read_128M(struct netxen_adapter *adapter, u64 off, u64 *data)
{
  int __retres;
  int j;
  int ret;
  u32 temp;
  u32 off_lo;
  u32 off_hi;
  u32 addr_hi;
  u32 data_hi;
  u32 data_lo;
  u64 val;
  void *mem_crb;
  
#line 1563 
  if ((off & 7ULL) != 0ULL) {
    
#line 1564 
    __retres = -5;
    
#line 1564 
    goto return_label;
  }
  else ;
  
#line 1567 
  if (off + 18446744060824649728ULL <= 4194302ULL) {
    
#line 1569 
    mem_crb = pci_base_offset(adapter,131072096UL);
    
#line 1571 
    addr_hi = 24U;
    
#line 1572 
    data_lo = 16U;
    
#line 1573 
    data_hi = 20U;
    
#line 1574 
    off_lo = (unsigned int)off & 4194296U;
    
#line 1575 
    off_hi = (unsigned int)(off >> 22);
    
#line 1576 
    goto correct;
  }
  else ;
  
#line 1579 
  if (off <= 268435454ULL) {
    
#line 1580 
    mem_crb = pci_base_offset(adapter,102760592UL);
    
#line 1582 
    addr_hi = 8U;
    
#line 1583 
    data_lo = 24U;
    
#line 1584 
    data_hi = 28U;
    
#line 1585 
    off_lo = (unsigned int)off & 4294967288U;
    
#line 1586 
    off_hi = 0U;
    
#line 1587 
    goto correct;
  }
  else ;
  
#line 1590 
  if (off + 18446744065119617024ULL <= 1048574ULL || off + 18446744065115422720ULL <= 1048574ULL) {
    
#line 1592 
    if (adapter->ahw.pci_len0 != 0UL) {
      int tmp;
      
#line 1593 
      tmp = netxen_nic_pci_mem_access_direct(adapter,off,data,0);
      
#line 1593 
      __retres = tmp;
      
#line 1593 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1598 
  __retres = -5;
  
#line 1598 
  goto return_label;
  correct: 
#line 1600 
  ;
  
#line 1601 
  ldv_spin_lock_81(& adapter->ahw.mem_lock);
  
#line 1602 
  netxen_nic_pci_set_crbwindow_128M(adapter,0U);
  
#line 1604 
  writel(off_lo,(void volatile *)(mem_crb + 4U));
  
#line 1605 
  writel(off_hi,(void volatile *)(mem_crb + addr_hi));
  
#line 1606 
  writel(2U,(void volatile *)mem_crb);
  
#line 1607 
  writel(3U,(void volatile *)mem_crb);
  
#line 1609 
  j = 0;
  
#line 1609 
  goto ldv_54613;
  ldv_54612: 
#line 1610 
  ;
  
#line 1610 
  temp = readl((void const volatile *)mem_crb);
  
#line 1611 
  if ((temp & 8U) == 0U) 
#line 1612 
                         goto ldv_54611; else ;
  
#line 1609 
  j += 1;
  ldv_54613: 
#line 1610 
  ;
  
#line 1609 
  if (j <= 999) 
#line 1611 
                goto ldv_54612; else 
#line 1614 
                                     goto ldv_54611;
  ldv_54611: 
#line 1615 
  ;
  
#line 1615 
  if (j > 999) {
    int tmp_0;
    
#line 1616 
    tmp_0 = __printk_ratelimit("netxen_nic_pci_mem_read_128M");
    
#line 1616 
    if (tmp_0 != 0) 
#line 1617 
                    dev_err((struct device const *)(& (adapter->pdev)->dev),"failed to read through agent\n"); else ;
    
#line 1619 
    ret = -5;
  }
  else {
    unsigned int tmp_1;
    
#line 1622 
    temp = readl((void const volatile *)(mem_crb + data_hi));
    
#line 1623 
    val = (unsigned long long)temp << 32;
    
#line 1624 
    tmp_1 = readl((void const volatile *)(mem_crb + data_lo));
    
#line 1624 
    val = (unsigned long long)tmp_1 | val;
    
#line 1625 
    *data = val;
    
#line 1626 
    ret = 0;
  }
  
#line 1629 
  netxen_nic_pci_set_crbwindow_128M(adapter,33554432U);
  
#line 1630 
  ldv_spin_unlock_82(& adapter->ahw.mem_lock);
  
#line 1632 
  __retres = ret;
  return_label: 
#line 1632 
                return __retres;
}


#line 1636  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_mem_write_2M(struct netxen_adapter *adapter, u64 off, u64 data)
{
  int __retres;
  int j;
  int ret;
  u32 temp;
  u32 off8;
  void *mem_crb;
  
#line 1644 
  if ((off & 7ULL) != 0ULL) {
    
#line 1645 
    __retres = -5;
    
#line 1645 
    goto return_label;
  }
  else ;
  
#line 1648 
  if (off + 18446744060824649728ULL <= 67108862ULL) {
    
#line 1650 
    mem_crb = netxen_get_ioaddr(adapter,131072144U);
    
#line 1652 
    goto correct;
  }
  else ;
  
#line 1655 
  if (off <= 268435454ULL) {
    
#line 1656 
    mem_crb = netxen_get_ioaddr(adapter,102760592U);
    
#line 1658 
    goto correct;
  }
  else ;
  
#line 1661 
  if (off + 18446744065119617024ULL <= 1048574ULL) {
    int tmp;
    
#line 1662 
    tmp = netxen_nic_pci_mem_access_direct(adapter,off,& data,1);
    
#line 1662 
    __retres = tmp;
    
#line 1662 
    goto return_label;
  }
  else ;
  
#line 1664 
  __retres = -5;
  
#line 1664 
  goto return_label;
  correct: 
#line 1666 
  ;
  
#line 1667 
  off8 = (unsigned int)off & 4294967288U;
  
#line 1669 
  ldv_spin_lock_83(& adapter->ahw.mem_lock);
  
#line 1671 
  writel(off8,(void volatile *)(mem_crb + 4U));
  
#line 1672 
  writel(0U,(void volatile *)(mem_crb + 8U));
  
#line 1674 
  writel((unsigned int)data,(void volatile *)(mem_crb + 16U));
  
#line 1676 
  writel((unsigned int)(data >> 32),(void volatile *)(mem_crb + 20U));
  
#line 1679 
  writel(6U,(void volatile *)mem_crb);
  
#line 1680 
  writel(7U,(void volatile *)mem_crb);
  
#line 1683 
  j = 0;
  
#line 1683 
  goto ldv_54628;
  ldv_54627: 
#line 1684 
  ;
  
#line 1684 
  temp = readl((void const volatile *)mem_crb);
  
#line 1685 
  if ((temp & 8U) == 0U) 
#line 1686 
                         goto ldv_54626; else ;
  
#line 1683 
  j += 1;
  ldv_54628: 
#line 1684 
  ;
  
#line 1683 
  if (j <= 999) 
#line 1685 
                goto ldv_54627; else 
#line 1688 
                                     goto ldv_54626;
  ldv_54626: 
#line 1689 
  ;
  
#line 1689 
  if (j > 999) {
    int tmp_0;
    
#line 1690 
    tmp_0 = __printk_ratelimit("netxen_nic_pci_mem_write_2M");
    
#line 1690 
    if (tmp_0 != 0) 
#line 1691 
                    dev_err((struct device const *)(& (adapter->pdev)->dev),"failed to write through agent\n"); else ;
    
#line 1693 
    ret = -5;
  }
  else 
#line 1695 
       ret = 0;
  
#line 1697 
  ldv_spin_unlock_84(& adapter->ahw.mem_lock);
  
#line 1699 
  __retres = ret;
  return_label: 
#line 1699 
                return __retres;
}


#line 1703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_pci_mem_read_2M(struct netxen_adapter *adapter, u64 off, u64 *data)
{
  int __retres;
  int j;
  int ret;
  u32 temp;
  u32 off8;
  u64 val;
  void *mem_crb;
  
#line 1712 
  if ((off & 7ULL) != 0ULL) {
    
#line 1713 
    __retres = -5;
    
#line 1713 
    goto return_label;
  }
  else ;
  
#line 1716 
  if (off + 18446744060824649728ULL <= 67108862ULL) {
    
#line 1718 
    mem_crb = netxen_get_ioaddr(adapter,131072144U);
    
#line 1720 
    goto correct;
  }
  else ;
  
#line 1723 
  if (off <= 268435454ULL) {
    
#line 1724 
    mem_crb = netxen_get_ioaddr(adapter,102760592U);
    
#line 1726 
    goto correct;
  }
  else ;
  
#line 1729 
  if (off + 18446744065119617024ULL <= 1048574ULL) {
    int tmp;
    
#line 1730 
    tmp = netxen_nic_pci_mem_access_direct(adapter,off,data,0);
    
#line 1730 
    __retres = tmp;
    
#line 1730 
    goto return_label;
  }
  else ;
  
#line 1734 
  __retres = -5;
  
#line 1734 
  goto return_label;
  correct: 
#line 1736 
  ;
  
#line 1737 
  off8 = (unsigned int)off & 4294967288U;
  
#line 1739 
  ldv_spin_lock_85(& adapter->ahw.mem_lock);
  
#line 1741 
  writel(off8,(void volatile *)(mem_crb + 4U));
  
#line 1742 
  writel(0U,(void volatile *)(mem_crb + 8U));
  
#line 1743 
  writel(2U,(void volatile *)mem_crb);
  
#line 1744 
  writel(3U,(void volatile *)mem_crb);
  
#line 1746 
  j = 0;
  
#line 1746 
  goto ldv_54644;
  ldv_54643: 
#line 1747 
  ;
  
#line 1747 
  temp = readl((void const volatile *)mem_crb);
  
#line 1748 
  if ((temp & 8U) == 0U) 
#line 1749 
                         goto ldv_54642; else ;
  
#line 1746 
  j += 1;
  ldv_54644: 
#line 1747 
  ;
  
#line 1746 
  if (j <= 999) 
#line 1748 
                goto ldv_54643; else 
#line 1751 
                                     goto ldv_54642;
  ldv_54642: 
#line 1752 
  ;
  
#line 1752 
  if (j > 999) {
    int tmp_0;
    
#line 1753 
    tmp_0 = __printk_ratelimit("netxen_nic_pci_mem_read_2M");
    
#line 1753 
    if (tmp_0 != 0) 
#line 1754 
                    dev_err((struct device const *)(& (adapter->pdev)->dev),"failed to read through agent\n"); else ;
    
#line 1756 
    ret = -5;
  }
  else {
    unsigned int tmp_1;
    unsigned int tmp_2;
    
#line 1758 
    tmp_1 = readl((void const volatile *)(mem_crb + 28U));
    
#line 1758 
    val = (unsigned long long)tmp_1 << 32;
    
#line 1759 
    tmp_2 = readl((void const volatile *)(mem_crb + 24U));
    
#line 1759 
    val = (unsigned long long)tmp_2 | val;
    
#line 1760 
    *data = val;
    
#line 1761 
    ret = 0;
  }
  
#line 1764 
  ldv_spin_unlock_86(& adapter->ahw.mem_lock);
  
#line 1766 
  __retres = ret;
  return_label: 
#line 1766 
                return __retres;
}


#line 1770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_setup_hwops(struct netxen_adapter *adapter)
{
  
#line 1772 
  adapter->init_port = & netxen_niu_xg_init_port;
  
#line 1773 
  adapter->stop_port = & netxen_niu_disable_xg_port;
  
#line 1775 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 1782 
    adapter->crb_read = & netxen_nic_hw_read_wx_128M;
    
#line 1776 
    adapter->crb_write = & netxen_nic_hw_write_wx_128M;
    
#line 1777 
    adapter->pci_set_window = & netxen_nic_pci_set_window_128M;
    
#line 1778 
    adapter->pci_mem_read = & netxen_nic_pci_mem_read_128M;
    
#line 1779 
    adapter->pci_mem_write = & netxen_nic_pci_mem_write_128M;
    
#line 1780 
    adapter->io_read = & netxen_nic_io_read_128M;
    
#line 1781 
    adapter->io_write = & netxen_nic_io_write_128M;
    
#line 1782 
    adapter->macaddr_set = & netxen_p2_nic_set_mac_addr;
    
#line 1785 
    adapter->set_multi = & netxen_p2_nic_set_multi;
    
#line 1786 
    adapter->set_mtu = & netxen_nic_set_mtu_xgb;
    
#line 1787 
    adapter->set_promisc = & netxen_p2_nic_set_promisc;
  }
  else {
    
#line 1796 
    adapter->crb_read = & netxen_nic_hw_read_wx_2M;
    
#line 1790 
    adapter->crb_write = & netxen_nic_hw_write_wx_2M;
    
#line 1791 
    adapter->pci_set_window = & netxen_nic_pci_set_window_2M;
    
#line 1792 
    adapter->pci_mem_read = & netxen_nic_pci_mem_read_2M;
    
#line 1793 
    adapter->pci_mem_write = & netxen_nic_pci_mem_write_2M;
    
#line 1794 
    adapter->io_read = & netxen_nic_io_read_2M;
    
#line 1795 
    adapter->io_write = & netxen_nic_io_write_2M;
    
#line 1796 
    adapter->set_mtu = & nx_fw_cmd_set_mtu;
    
#line 1799 
    adapter->set_promisc = & netxen_p3_nic_set_promisc;
    
#line 1800 
    adapter->macaddr_set = & netxen_p3_nic_set_mac_addr;
    
#line 1801 
    adapter->set_multi = & netxen_p3_nic_set_multi;
    
#line 1803 
    adapter->phy_read = & nx_fw_cmd_query_phy;
    
#line 1804 
    adapter->phy_write = & nx_fw_cmd_set_phy;
  }
  
#line 1806 
  return;
}


#line 1808  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_nic_get_board_info(struct netxen_adapter *adapter)
{
  int __retres;
  int offset;
  int board_type;
  int magic;
  int tmp;
  int tmp_0;
  
#line 1811 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1813 
  offset = 16680;
  
#line 1814 
  tmp = netxen_rom_fast_read(adapter,offset,& magic);
  
#line 1814 
  if (tmp != 0) {
    
#line 1815 
    __retres = -5;
    
#line 1815 
    goto return_label;
  }
  else ;
  
#line 1817 
  if (magic != 305419896) {
    
#line 1818 
    dev_err((struct device const *)(& pdev->dev),"invalid board config, magic=%08x\n",magic);
    
#line 1820 
    __retres = -5;
    
#line 1820 
    goto return_label;
  }
  else ;
  
#line 1823 
  offset = 16392;
  
#line 1824 
  tmp_0 = netxen_rom_fast_read(adapter,offset,& board_type);
  
#line 1824 
  if (tmp_0 != 0) {
    
#line 1825 
    __retres = -5;
    
#line 1825 
    goto return_label;
  }
  else ;
  
#line 1827 
  if (board_type == 41) {
    u32 tmp_1;
    
#line 1828 
    tmp_1 = (*(adapter->crb_read))(adapter,154140684UL);
    
#line 1828 
    u32 gpio = tmp_1;
    
#line 1829 
    if ((gpio & 32768U) == 0U) 
#line 1830 
                               board_type = 128; else ;
  }
  else ;
  
#line 1833 
  adapter->ahw.board_type = (unsigned short)board_type;
  
#line 1835 
  switch (board_type) {
    case 10: 
#line 1836 
    ;
    
#line 1837 
    adapter->ahw.port_type = (unsigned short)1U;
    
#line 1838 
    goto ldv_54658;
    case 11: 
#line 1839 
    ;
    case 13: 
#line 1840 
    ;
    case 14: 
#line 1841 
    ;
    case 15: 
#line 1842 
    ;
    case 34: 
#line 1843 
    ;
    case 40: 
#line 1844 
    ;
    case 49: 
#line 1845 
    ;
    case 35: 
#line 1846 
    ;
    case 37: 
#line 1847 
    ;
    case 38: 
#line 1848 
    ;
    case 42: 
#line 1849 
    ;
    case 43: 
#line 1850 
    ;
    case 50: 
#line 1851 
    ;
    case 39: 
#line 1852 
    ;
    
#line 1853 
    adapter->ahw.port_type = (unsigned short)2U;
    
#line 1854 
    goto ldv_54658;
    case 0: 
#line 1855 
    ;
    case 1: 
#line 1856 
    ;
    case 2: 
#line 1857 
    ;
    case 3: 
#line 1858 
    ;
    case 33: 
#line 1859 
    ;
    case 36: 
#line 1860 
    ;
    case 41: 
#line 1861 
    ;
    
#line 1862 
    adapter->ahw.port_type = (unsigned short)1U;
    
#line 1863 
    goto ldv_54658;
    case 128: 
#line 1864 
    ;
    
#line 1865 
    if ((unsigned int)adapter->portnum <= 1U) 
#line 1865 
                                              adapter->ahw.port_type = (unsigned short)2U; else 
                                                                    
#line 1865 
                                                                    adapter->ahw.port_type = (unsigned short)1U;
    
#line 1867 
    goto ldv_54658;
    default: 
#line 1868 
    ;
    
#line 1869 
    dev_err((struct device const *)(& pdev->dev),"unknown board type %x\n",board_type);
    
#line 1870 
    adapter->ahw.port_type = (unsigned short)2U;
    
#line 1871 
    goto ldv_54658;
  }
  ldv_54658: 
#line 1874 
  ;
  
#line 1874 
  __retres = 0;
  return_label: 
#line 1874 
                return __retres;
}


#line 1878  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_nic_set_mtu_xgb(struct netxen_adapter *adapter, int new_mtu)
{
  int __retres;
  
#line 1880 
  new_mtu += 100;
  
#line 1881 
  if ((unsigned int)adapter->physical_port == 0U) 
#line 1882 
                                                  (*(adapter->crb_write))(adapter,107413532UL,(unsigned int)new_mtu); else 
                                                                    
#line 1884 
                                                                    (*(adapter->crb_write))(adapter,107479068UL,(unsigned int)new_mtu);
  
#line 1885 
  __retres = 0;
  
#line 1885 
  return __retres;
}


#line 1888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_nic_set_link_parameters(struct netxen_adapter *adapter)
{
  __u32 status;
  __u32 autoneg;
  __u32 port_mode_0;
  int tmp_0;
  bool tmp;
  
#line 1894 
  tmp = netif_carrier_ok((struct net_device const *)adapter->netdev);
  
#line 1894 
  if (tmp) 
#line 1894 
           tmp_0 = 0; else 
#line 1894 
                           tmp_0 = 1;
  
#line 1894 
  if (tmp_0) {
    
#line 1895 
    adapter->link_speed = (unsigned short)0U;
    
#line 1896 
    adapter->link_duplex = (unsigned short)65535U;
    
#line 1897 
    adapter->link_autoneg = (unsigned short)1U;
    
#line 1898 
    goto return_label;
  }
  else ;
  
#line 1901 
  if ((unsigned int)adapter->ahw.port_type == 1U) {
    
#line 1902 
    port_mode_0 = (*(adapter->crb_read))(adapter,136323108UL);
    
#line 1903 
    if (port_mode_0 == 3U) {
      
#line 1904 
      adapter->link_speed = (unsigned short)1000U;
      
#line 1905 
      adapter->link_duplex = (unsigned short)1U;
      
#line 1906 
      adapter->link_autoneg = (unsigned short)0U;
      
#line 1907 
      goto return_label;
    }
    else ;
    
#line 1910 
    if (adapter->phy_read != (int (*)(struct netxen_adapter *, u32 , u32 *))0) {
      int tmp_2;
      
#line 1910 
      tmp_2 = (*(adapter->phy_read))(adapter,17U,& status);
      
#line 1910 
      if (tmp_2 == 0) {
        
#line 1914 
        if ((status & 1024U) != 0U) {
          
#line 1915 
          switch ((status >> 14) & 3U) {
            case (unsigned int)0: 
#line 1916 
            ;
            
#line 1917 
            adapter->link_speed = (unsigned short)10U;
            
#line 1918 
            goto ldv_54693;
            case (unsigned int)1: 
#line 1919 
            ;
            
#line 1920 
            adapter->link_speed = (unsigned short)100U;
            
#line 1921 
            goto ldv_54693;
            case (unsigned int)2: 
#line 1922 
            ;
            
#line 1923 
            adapter->link_speed = (unsigned short)1000U;
            
#line 1924 
            goto ldv_54693;
            default: 
#line 1925 
            ;
            
#line 1926 
            adapter->link_speed = (unsigned short)0U;
            
#line 1927 
            goto ldv_54693;
          }
          ldv_54693: 
#line 1929 
          ;
          
#line 1929 
          switch ((status >> 13) & 1U) {
            case (unsigned int)0: 
#line 1930 
            ;
            
#line 1931 
            adapter->link_duplex = (unsigned short)0U;
            
#line 1932 
            goto ldv_54698;
            case (unsigned int)1: 
#line 1933 
            ;
            
#line 1934 
            adapter->link_duplex = (unsigned short)1U;
            
#line 1935 
            goto ldv_54698;
            default: 
#line 1936 
            ;
            
#line 1937 
            adapter->link_duplex = (unsigned short)65535U;
            
#line 1938 
            goto ldv_54698;
          }
          ldv_54698: 
#line 1940 
          ;
          
#line 1940 
          if (adapter->phy_read != (int (*)(struct netxen_adapter *, u32 , u32 *))0) {
            int tmp_1;
            
#line 1940 
            tmp_1 = (*(adapter->phy_read))(adapter,4U,& autoneg);
            
#line 1940 
            if (tmp_1 != 0) 
#line 1944 
                            adapter->link_autoneg = (unsigned short)autoneg; else ;
          }
          else ;
        }
        else 
#line 1946 
             goto link_down;
      }
      else 
#line 1910 
           goto _LAND;
    }
    else {
      _LAND: {
               link_down: 
#line 1948 
               ;
               
#line 1949 
               adapter->link_speed = (unsigned short)0U;
               
#line 1950 
               adapter->link_duplex = (unsigned short)65535U;
             }
    }
  }
  else ;
  return_label: 
#line 1953 
                return;
}


#line 1956  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
int netxen_nic_wol_supported(struct netxen_adapter *adapter)
{
  int __retres;
  u32 wol_cfg;
  
#line 1960 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 1961 
    __retres = 0;
    
#line 1961 
    goto return_label;
  }
  else ;
  
#line 1963 
  wol_cfg = (*(adapter->crb_read))(adapter,136323460UL);
  
#line 1964 
  if ((((unsigned long)wol_cfg >> (int)adapter->portnum) & 1UL) != 0UL) {
    
#line 1965 
    wol_cfg = (*(adapter->crb_read))(adapter,136323464UL);
    
#line 1966 
    if (((unsigned int)(1 << (int)adapter->portnum) & wol_cfg) != 0U) {
      
#line 1967 
      __retres = 1;
      
#line 1967 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1970 
  __retres = 0;
  return_label: 
#line 1970 
                return __retres;
}


#line 1973  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_cntrl(struct netxen_adapter *adapter, struct netxen_minidump_template_hdr *template_hdr, struct netxen_minidump_entry_crb *crtEntry)
{
  u32 __retres;
  int loop_cnt;
  int i;
  int timeout_flag;
  u32 op_count;
  u32 stride;
  u32 opcode;
  u32 read_value;
  u32 addr;
  unsigned long timeout;
  unsigned long timeout_jiffies;
  
#line 1977 
  int rv = 0;
  
#line 1981 
  addr = crtEntry->addr;
  
#line 1982 
  op_count = crtEntry->op_count;
  
#line 1983 
  stride = (unsigned int)crtEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.addr_stride;
  
#line 1985 
  loop_cnt = 0;
  
#line 1985 
  goto ldv_54746;
  ldv_54745: 
#line 1986 
  ;
  
#line 1986 
  i = 0;
  
#line 1986 
  goto ldv_54743;
  ldv_54742: 
#line 1987 
  ;
  
#line 1987 
  opcode = (unsigned int)((int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.opcode & (1 << i));
  
#line 1988 
  if (opcode != 0U) {
    
#line 1989 
    switch (opcode) {
      unsigned long tmp;
      int tmp_0;
      case (u32)1: 
#line 1990 
      ;
      
#line 1991 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 1991 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 1991 
      writel(crtEntry->value_1,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 1991 
      readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 1994 
      goto ldv_54723;
      case (u32)2: 
#line 1995 
      ;
      
#line 1996 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 1996 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 1996 
      read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 1999 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 1999 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 1999 
      writel(read_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 1999 
      readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2002 
      goto ldv_54723;
      case (u32)4: 
#line 2003 
      ;
      
#line 2004 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2004 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2004 
      read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2007 
      read_value = crtEntry->value_2 & read_value;
      
#line 2008 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2008 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2008 
      writel(read_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2008 
      readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2011 
      goto ldv_54723;
      case (u32)8: 
#line 2012 
      ;
      
#line 2013 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2013 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2013 
      read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2016 
      read_value = crtEntry->value_3 | read_value;
      
#line 2017 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2017 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2017 
      writel(read_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2017 
      readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2020 
      goto ldv_54723;
      case (u32)16: 
#line 2021 
      ;
      
#line 2022 
      timeout = (unsigned long)crtEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.poll_timeout;
      
#line 2023 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2023 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2023 
      read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2026 
      tmp = msecs_to_jiffies((unsigned int)timeout);
      
#line 2026 
      timeout_jiffies = tmp + jiffies;
      
#line 2028 
      timeout_flag = 0;
      
#line 2028 
      goto ldv_54735;
      ldv_54734: 
#line 2029 
      ;
      {
        unsigned long __dummy;
        unsigned long volatile __dummy2;
        
#line 2032 
        tmp_0 = 1;
      }
      
#line 2032 
      if (tmp_0 != 0) {
        int tmp_1;
        {
          unsigned long __dummy_0;
          unsigned long __dummy2_0;
          
#line 2032 
          tmp_1 = 1;
        }
        
#line 2032 
        if (tmp_1 != 0) {
          
#line 2032 
          if ((long)(timeout_jiffies - jiffies) < 0L) 
#line 2034 
                                                      timeout_flag = 1; else ;
        }
        else ;
      }
      else ;
      
#line 2035 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2035 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2035 
      read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      ldv_54735: 
#line 2036 
      ;
      
#line 2028 
      if (timeout_flag == 0 && (crtEntry->value_2 & read_value) != crtEntry->value_1) 
        
#line 2033 
        goto ldv_54734; else 
#line 2036 
                             goto ldv_54736;
      ldv_54736: 
#line 2037 
      ;
      
#line 2040 
      if (timeout_flag != 0) {
        
#line 2041 
        dev_err((struct device const *)(& (adapter->pdev)->dev),"%s : ","netxen_md_cntrl");
        
#line 2044 
        __retres = 4294967295U;
        
#line 2044 
        goto return_label;
      }
      else ;
      
#line 2046 
      goto ldv_54723;
      case (u32)32: 
#line 2047 
      ;
      
#line 2049 
      if ((unsigned int)crtEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.state_index_a != 0U) 
        
#line 2050 
        addr = template_hdr->saved_state_array[(int)crtEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.state_index_a]; else ;
      
#line 2053 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2053 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2053 
      read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2058 
      template_hdr->saved_state_array[(int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.state_index_v] = read_value;
      
#line 2059 
      goto ldv_54723;
      case (u32)64: 
#line 2060 
      ;
      
#line 2062 
      if ((unsigned int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.state_index_v != 0U) 
        
#line 2063 
        read_value = template_hdr->saved_state_array[(int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.state_index_v]; else 
                                                                    
#line 2067 
                                                                    read_value = crtEntry->value_1;
      
#line 2070 
      if ((unsigned int)crtEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.state_index_a != 0U) 
        
#line 2071 
        addr = template_hdr->saved_state_array[(int)crtEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.state_index_a]; else ;
      
#line 2075 
      writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2075 
      readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
      
#line 2075 
      writel(read_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2075 
      readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
      
#line 2078 
      goto ldv_54723;
      case (u32)128: 
#line 2079 
      ;
      
#line 2080 
      read_value = template_hdr->saved_state_array[(int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.state_index_v];
      
#line 2083 
      read_value <<= (int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.shl;
      
#line 2084 
      read_value >>= (int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.shr;
      
#line 2085 
      if (crtEntry->value_2 != 0U) 
#line 2086 
                                   read_value = crtEntry->value_2 & read_value; else ;
      
#line 2088 
      read_value = crtEntry->value_3 | read_value;
      
#line 2089 
      read_value = crtEntry->value_1 + read_value;
      
#line 2093 
      template_hdr->saved_state_array[(int)crtEntry->__anonCompField_netxen_minidump_entry_crb_129.__anonCompField___anonunion_408_128.state_index_v] = read_value;
      
#line 2094 
      goto ldv_54723;
      default: 
#line 2095 
      ;
      
#line 2096 
      rv = 1;
      
#line 2097 
      goto ldv_54723;
    }
    ldv_54723: 
#line 2099 
    ;
  }
  else ;
  
#line 1986 
  i += 1;
  ldv_54743: 
#line 1987 
  ;
  
#line 1986 
  if ((unsigned int)i <= 7U) 
#line 1988 
                             goto ldv_54742; else 
#line 1991 
                                                  goto ldv_54744;
  ldv_54744: 
#line 1992 
  ;
  
#line 2101 
  addr += stride;
  
#line 1985 
  loop_cnt += 1;
  ldv_54746: 
#line 1986 
  ;
  
#line 1985 
  if ((unsigned int)loop_cnt < op_count) 
#line 1987 
                                         goto ldv_54745; else 
#line 1990 
                                                              goto ldv_54747;
  ldv_54747: 
#line 1991 
  ;
  
#line 2103 
  __retres = (unsigned int)rv;
  return_label: 
#line 2103 
                return __retres;
}


#line 2108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_rdmem(struct netxen_adapter *adapter, struct netxen_minidump_entry_rdmem *memEntry, u64 *data_buff)
{
  u32 __retres;
  u64 addr;
  int loop_cnt;
  int tmp;
  u64 *tmp_0;
  
#line 2112 
  u64 value = 0ULL;
  
#line 2113 
  int i = 0;
  
#line 2115 
  addr = (unsigned long long)memEntry->read_addr;
  
#line 2116 
  loop_cnt = (int)memEntry->read_data_size;
  
#line 2117 
  loop_cnt = (int)((unsigned long)loop_cnt / 8UL);
  
#line 2119 
  i = 0;
  
#line 2119 
  goto ldv_54759;
  ldv_54758: 
#line 2120 
  ;
  
#line 2120 
  tmp = netxen_nic_pci_mem_read_2M(adapter,addr,& value);
  
#line 2120 
  if (tmp != 0) 
#line 2121 
                goto out; else ;
  
#line 2122 
  tmp_0 = data_buff;
  
#line 2122 
  data_buff += 1;
  
#line 2122 
  *tmp_0 = value;
  
#line 2123 
  addr += 8ULL;
  
#line 2119 
  i += 1;
  ldv_54759: 
#line 2120 
  ;
  
#line 2119 
  if (i < loop_cnt) 
#line 2121 
                    goto ldv_54758; else 
#line 2124 
                                         goto ldv_54760;
  ldv_54760: 
#line 2125 
  ;
  out: 
#line 2125 
  ;
  
#line 2126 
  __retres = (unsigned int)((unsigned long)i) * 8U;
  
#line 2126 
  return __retres;
}


#line 2130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_rd_crb(struct netxen_adapter *adapter, struct netxen_minidump_entry_crb *crbEntry, u32 *data_buff)
{
  u32 __retres;
  int loop_cnt;
  u32 op_count;
  u32 addr;
  u32 stride;
  u32 value;
  u32 *tmp;
  u32 *tmp_0;
  
#line 2137 
  addr = crbEntry->addr;
  
#line 2138 
  op_count = crbEntry->op_count;
  
#line 2139 
  stride = (unsigned int)crbEntry->__anonCompField_netxen_minidump_entry_crb_127.__anonCompField___anonunion_406_126.addr_stride;
  
#line 2141 
  loop_cnt = 0;
  
#line 2141 
  goto ldv_54772;
  ldv_54771: 
#line 2142 
  ;
  
#line 2142 
  writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2142 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2142 
  value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
  
#line 2143 
  tmp = data_buff;
  
#line 2143 
  data_buff += 1;
  
#line 2143 
  *tmp = addr;
  
#line 2144 
  tmp_0 = data_buff;
  
#line 2144 
  data_buff += 1;
  
#line 2144 
  *tmp_0 = value;
  
#line 2145 
  addr += stride;
  
#line 2141 
  loop_cnt += 1;
  ldv_54772: 
#line 2142 
  ;
  
#line 2141 
  if ((unsigned int)loop_cnt < op_count) 
#line 2143 
                                         goto ldv_54771; else 
#line 2146 
                                                              goto ldv_54773;
  ldv_54773: 
#line 2147 
  ;
  
#line 2147 
  __retres = (unsigned int)((unsigned long)loop_cnt) * 8U;
  
#line 2147 
  return __retres;
}


#line 2152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_rdrom(struct netxen_adapter *adapter, struct netxen_minidump_entry_rdrom *romEntry, __le32 *data_buff)
{
  u32 __retres;
  int i;
  u32 size;
  u32 lck_val;
  u32 val;
  u32 fl_addr;
  u32 waddr;
  u32 raddr;
  __le32 *tmp;
  
#line 2156 
  int count = 0;
  
#line 2160 
  fl_addr = romEntry->read_addr;
  
#line 2161 
  size = romEntry->read_data_size / 4U;
  lock_try: 
#line 2162 
  ;
  
#line 2163 
  lck_val = readl((void const volatile *)(adapter->ahw.pci_base0 + 1294352U));
  
#line 2165 
  if (lck_val == 0U && count <= 999) {
    
#line 2166 
    msleep(20U);
    
#line 2167 
    count += 1;
    
#line 2168 
    goto lock_try;
  }
  else ;
  
#line 2170 
  writel((unsigned int)adapter->ahw.pci_func,(void volatile *)(adapter->ahw.pci_base0 + 1777920U));
  
#line 2172 
  i = 0;
  
#line 2172 
  goto ldv_54789;
  ldv_54788: 
#line 2173 
  ;
  
#line 2173 
  waddr = fl_addr & 4294901760U;
  
#line 2174 
  writel(1108410368U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2174 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2174 
  writel(waddr,(void volatile *)(adapter->ahw.pci_base0 + 1966128U));
  
#line 2174 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1966128U));
  
#line 2175 
  raddr = (fl_addr & 65535U) + 1108672512U;
  
#line 2176 
  writel(raddr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2176 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2176 
  val = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)raddr) + 1966080U)));
  
#line 2177 
  tmp = data_buff;
  
#line 2177 
  data_buff += 1;
  
#line 2177 
  *tmp = val;
  
#line 2178 
  fl_addr += 4U;
  
#line 2172 
  i += 1;
  ldv_54789: 
#line 2173 
  ;
  
#line 2172 
  if ((unsigned int)i < size) 
#line 2174 
                              goto ldv_54788; else 
#line 2177 
                                                   goto ldv_54790;
  ldv_54790: 
#line 2178 
  ;
  
#line 2180 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1294356U));
  
#line 2181 
  __retres = romEntry->read_data_size;
  
#line 2181 
  return __retres;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_L2Cache(struct netxen_adapter *adapter, struct netxen_minidump_entry_cache *cacheEntry, u32 *data_buff)
{
  u32 __retres;
  int loop_cnt;
  int i;
  int k;
  u32 addr;
  u32 read_addr;
  u32 read_value;
  u32 cntrl_addr;
  u32 tag_reg_addr;
  u32 tag_value;
  u32 read_cnt;
  u8 cntl_value_w;
  u8 cntl_value_r;
  unsigned long timeout;
  unsigned long timeout_jiffies;
  u32 *tmp_4;
  
#line 2190 
  int timeout_flag = 0;
  
#line 2196 
  loop_cnt = (int)cacheEntry->op_count;
  
#line 2197 
  read_addr = cacheEntry->read_addr;
  
#line 2198 
  cntrl_addr = cacheEntry->control_addr;
  
#line 2199 
  cntl_value_w = (unsigned char)cacheEntry->__anonCompField_netxen_minidump_entry_cache_145.__anonCompField___anonunion_424_144.write_value;
  
#line 2200 
  tag_reg_addr = cacheEntry->tag_reg_addr;
  
#line 2201 
  tag_value = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_143.__anonCompField___anonunion_422_142.init_tag_value;
  
#line 2202 
  read_cnt = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_147.__anonCompField___anonunion_426_146.read_addr_cnt;
  
#line 2204 
  i = 0;
  
#line 2204 
  goto ldv_54824;
  ldv_54823: 
#line 2205 
  ;
  
#line 2205 
  writel(tag_reg_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2205 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2205 
  writel(tag_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)tag_reg_addr) + 1966080U)));
  
#line 2205 
  readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)tag_reg_addr) + 1966080U)));
  
#line 2206 
  if ((unsigned int)cntl_value_w != 0U) {
    
#line 2207 
    writel(cntrl_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
    
#line 2207 
    readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
    
#line 2207 
    writel((unsigned int)cntl_value_w,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)cntrl_addr) + 1966080U)));
    
#line 2207 
    readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)cntrl_addr) + 1966080U)));
  }
  else ;
  
#line 2209 
  if ((unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_145.__anonCompField___anonunion_424_144.poll_mask != 0U) {
    unsigned int tmp;
    unsigned long tmp_0;
    int tmp_1;
    unsigned int tmp_3;
    
#line 2210 
    timeout = (unsigned long)cacheEntry->__anonCompField_netxen_minidump_entry_cache_145.__anonCompField___anonunion_424_144.poll_wait;
    
#line 2211 
    writel(cntrl_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
    
#line 2211 
    readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
    
#line 2211 
    tmp = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)cntrl_addr) + 1966080U)));
    
#line 2211 
    cntl_value_r = (unsigned char)tmp;
    
#line 2213 
    tmp_0 = msecs_to_jiffies((unsigned int)timeout);
    
#line 2213 
    timeout_jiffies = tmp_0 + jiffies;
    
#line 2214 
    timeout_flag = 0;
    
#line 2214 
    goto ldv_54818;
    ldv_54817: 
#line 2215 
    ;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 2216 
      tmp_1 = 1;
    }
    
#line 2216 
    if (tmp_1 != 0) {
      int tmp_2;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 2216 
        tmp_2 = 1;
      }
      
#line 2216 
      if (tmp_2 != 0) {
        
#line 2216 
        if ((long)(timeout_jiffies - jiffies) < 0L) 
#line 2217 
                                                    timeout_flag = 1; else ;
      }
      else ;
    }
    else ;
    
#line 2218 
    writel(cntrl_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
    
#line 2218 
    readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
    
#line 2218 
    tmp_3 = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)cntrl_addr) + 1966080U)));
    
#line 2218 
    cntl_value_r = (unsigned char)tmp_3;
    ldv_54818: 
#line 2219 
    ;
    
#line 2214 
    if (timeout_flag == 0 && (unsigned int)((int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_145.__anonCompField___anonunion_424_144.poll_mask & (int)cntl_value_r) != 0U) 
      
#line 2217 
      goto ldv_54817; else 
#line 2220 
                           goto ldv_54819;
    ldv_54819: 
#line 2221 
    ;
    
#line 2222 
    if (timeout_flag != 0) {
      
#line 2223 
      dev_err((struct device const *)(& (adapter->pdev)->dev),"Timeout in processing L2 Tag poll.\n");
      
#line 2225 
      __retres = 4294967295U;
      
#line 2225 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2228 
  addr = read_addr;
  
#line 2229 
  k = 0;
  
#line 2229 
  goto ldv_54821;
  ldv_54820: 
#line 2230 
  ;
  
#line 2230 
  writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2230 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2230 
  read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
  
#line 2232 
  tmp_4 = data_buff;
  
#line 2232 
  data_buff += 1;
  
#line 2232 
  *tmp_4 = read_value;
  
#line 2233 
  addr = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_147.__anonCompField___anonunion_426_146.read_addr_stride + addr;
  
#line 2229 
  k += 1;
  ldv_54821: 
#line 2230 
  ;
  
#line 2229 
  if ((unsigned int)k < read_cnt) 
#line 2231 
                                  goto ldv_54820; else 
#line 2234 
                                                       goto ldv_54822;
  ldv_54822: 
#line 2235 
  ;
  
#line 2235 
  tag_value = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_143.__anonCompField___anonunion_422_142.tag_value_stride + tag_value;
  
#line 2204 
  i += 1;
  ldv_54824: 
#line 2205 
  ;
  
#line 2204 
  if (i < loop_cnt) 
#line 2206 
                    goto ldv_54823; else 
#line 2209 
                                         goto ldv_54825;
  ldv_54825: 
#line 2210 
  ;
  
#line 2237 
  __retres = (read_cnt * (unsigned int)loop_cnt) * 4U;
  return_label: 
#line 2237 
                return __retres;
}


#line 2242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_L1Cache(struct netxen_adapter *adapter, struct netxen_minidump_entry_cache *cacheEntry, u32 *data_buff)
{
  u32 __retres;
  int i;
  int k;
  int loop_cnt;
  u32 addr;
  u32 read_addr;
  u32 read_value;
  u32 cntrl_addr;
  u32 tag_reg_addr;
  u32 tag_value;
  u32 read_cnt;
  u8 cntl_value_w;
  u32 *tmp;
  
#line 2251 
  loop_cnt = (int)cacheEntry->op_count;
  
#line 2252 
  read_addr = cacheEntry->read_addr;
  
#line 2253 
  cntrl_addr = cacheEntry->control_addr;
  
#line 2254 
  cntl_value_w = (unsigned char)cacheEntry->__anonCompField_netxen_minidump_entry_cache_145.__anonCompField___anonunion_424_144.write_value;
  
#line 2255 
  tag_reg_addr = cacheEntry->tag_reg_addr;
  
#line 2256 
  tag_value = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_143.__anonCompField___anonunion_422_142.init_tag_value;
  
#line 2257 
  read_cnt = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_147.__anonCompField___anonunion_426_146.read_addr_cnt;
  
#line 2259 
  i = 0;
  
#line 2259 
  goto ldv_54846;
  ldv_54845: 
#line 2260 
  ;
  
#line 2260 
  writel(tag_reg_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2260 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2260 
  writel(tag_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)tag_reg_addr) + 1966080U)));
  
#line 2260 
  readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)tag_reg_addr) + 1966080U)));
  
#line 2261 
  writel(cntrl_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2261 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2261 
  writel((unsigned int)cntl_value_w,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)cntrl_addr) + 1966080U)));
  
#line 2261 
  readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)cntrl_addr) + 1966080U)));
  
#line 2263 
  addr = read_addr;
  
#line 2264 
  k = 0;
  
#line 2264 
  goto ldv_54843;
  ldv_54842: 
#line 2265 
  ;
  
#line 2265 
  writel(addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2265 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2265 
  read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)addr) + 1966080U)));
  
#line 2268 
  tmp = data_buff;
  
#line 2268 
  data_buff += 1;
  
#line 2268 
  *tmp = read_value;
  
#line 2269 
  addr = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_147.__anonCompField___anonunion_426_146.read_addr_stride + addr;
  
#line 2264 
  k += 1;
  ldv_54843: 
#line 2265 
  ;
  
#line 2264 
  if ((unsigned int)k < read_cnt) 
#line 2266 
                                  goto ldv_54842; else 
#line 2269 
                                                       goto ldv_54844;
  ldv_54844: 
#line 2270 
  ;
  
#line 2271 
  tag_value = (unsigned int)cacheEntry->__anonCompField_netxen_minidump_entry_cache_143.__anonCompField___anonunion_422_142.tag_value_stride + tag_value;
  
#line 2259 
  i += 1;
  ldv_54846: 
#line 2260 
  ;
  
#line 2259 
  if (i < loop_cnt) 
#line 2261 
                    goto ldv_54845; else 
#line 2264 
                                         goto ldv_54847;
  ldv_54847: 
#line 2265 
  ;
  
#line 2273 
  __retres = (read_cnt * (unsigned int)loop_cnt) * 4U;
  
#line 2273 
  return __retres;
}


#line 2278  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_rdocm(struct netxen_adapter *adapter, struct netxen_minidump_entry_rdocm *ocmEntry, u32 *data_buff)
{
  u32 __retres;
  int i;
  int loop_cnt;
  u32 value;
  void *addr;
  u32 *tmp;
  
#line 2285 
  addr = adapter->ahw.pci_base0 + ocmEntry->read_addr;
  
#line 2286 
  loop_cnt = (int)ocmEntry->op_count;
  
#line 2288 
  i = 0;
  
#line 2288 
  goto ldv_54858;
  ldv_54857: 
#line 2289 
  ;
  
#line 2289 
  value = readl((void const volatile *)addr);
  
#line 2290 
  tmp = data_buff;
  
#line 2290 
  data_buff += 1;
  
#line 2290 
  *tmp = value;
  
#line 2291 
  addr += ocmEntry->__anonCompField_netxen_minidump_entry_rdocm_151.__anonCompField___anonunion_430_150.read_addr_stride;
  
#line 2288 
  i += 1;
  ldv_54858: 
#line 2289 
  ;
  
#line 2288 
  if (i < loop_cnt) 
#line 2290 
                    goto ldv_54857; else 
#line 2293 
                                         goto ldv_54859;
  ldv_54859: 
#line 2294 
  ;
  
#line 2293 
  __retres = (unsigned int)((unsigned long)i) * 4U;
  
#line 2293 
  return __retres;
}


#line 2298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_rdmux(struct netxen_adapter *adapter, struct netxen_minidump_entry_mux *muxEntry, u32 *data_buff)
{
  u32 __retres;
  u32 read_addr;
  u32 read_value;
  u32 select_addr;
  u32 sel_value;
  u32 *tmp;
  u32 *tmp_0;
  
#line 2301 
  int loop_cnt = 0;
  
#line 2304 
  read_addr = muxEntry->read_addr;
  
#line 2305 
  sel_value = muxEntry->select_value;
  
#line 2306 
  select_addr = muxEntry->select_addr;
  
#line 2308 
  loop_cnt = 0;
  
#line 2308 
  goto ldv_54871;
  ldv_54870: 
#line 2309 
  ;
  
#line 2309 
  writel(select_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2309 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2309 
  writel(sel_value,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)select_addr) + 1966080U)));
  
#line 2309 
  readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)select_addr) + 1966080U)));
  
#line 2310 
  writel(read_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2310 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2310 
  read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)read_addr) + 1966080U)));
  
#line 2311 
  tmp = data_buff;
  
#line 2311 
  data_buff += 1;
  
#line 2311 
  *tmp = sel_value;
  
#line 2312 
  tmp_0 = data_buff;
  
#line 2312 
  data_buff += 1;
  
#line 2312 
  *tmp_0 = read_value;
  
#line 2313 
  sel_value = muxEntry->select_value_stride + sel_value;
  
#line 2308 
  loop_cnt += 1;
  ldv_54871: 
#line 2309 
  ;
  
#line 2308 
  if (muxEntry->op_count > (unsigned int)loop_cnt) 
#line 2310 
                                                   goto ldv_54870; else 
                                                                    
#line 2313 
                                                                    goto ldv_54872;
  ldv_54872: 
#line 2314 
  ;
  
#line 2315 
  __retres = (unsigned int)((unsigned long)loop_cnt) * 8U;
  
#line 2315 
  return __retres;
}


#line 2320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static u32 netxen_md_rdqueue(struct netxen_adapter *adapter, struct netxen_minidump_entry_queue *queueEntry, u32 *data_buff)
{
  u32 __retres;
  int loop_cnt;
  int k;
  u32 queue_id;
  u32 read_addr;
  u32 read_value;
  u32 read_stride;
  u32 select_addr;
  u32 read_cnt;
  u32 *tmp;
  
#line 2327 
  read_cnt = (unsigned int)queueEntry->__anonCompField_netxen_minidump_entry_queue_157.__anonCompField___anonunion_436_156.read_addr_cnt;
  
#line 2328 
  read_stride = (unsigned int)queueEntry->__anonCompField_netxen_minidump_entry_queue_157.__anonCompField___anonunion_436_156.read_addr_stride;
  
#line 2329 
  select_addr = queueEntry->select_addr;
  
#line 2331 
  loop_cnt = 0;
  
#line 2331 
  queue_id = 0U;
  
#line 2331 
  goto ldv_54890;
  ldv_54889: 
#line 2332 
  ;
  
#line 2333 
  writel(select_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2333 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2333 
  writel(queue_id,(void volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)select_addr) + 1966080U)));
  
#line 2333 
  readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)select_addr) + 1966080U)));
  
#line 2334 
  read_addr = queueEntry->read_addr;
  
#line 2335 
  k = 0;
  
#line 2335 
  goto ldv_54887;
  ldv_54886: 
#line 2336 
  ;
  
#line 2336 
  writel(read_addr & 4294901760U,(void volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2336 
  readl((void const volatile *)(adapter->ahw.pci_base0 + 1245280U));
  
#line 2336 
  read_value = readl((void const volatile *)(adapter->ahw.pci_base0 + ((unsigned int)((unsigned short)read_addr) + 1966080U)));
  
#line 2338 
  tmp = data_buff;
  
#line 2338 
  data_buff += 1;
  
#line 2338 
  *tmp = read_value;
  
#line 2339 
  read_addr += read_stride;
  
#line 2335 
  k -= 1;
  ldv_54887: 
#line 2336 
  ;
  
#line 2335 
  if ((unsigned int)k < read_cnt) 
#line 2337 
                                  goto ldv_54886; else 
#line 2340 
                                                       goto ldv_54888;
  ldv_54888: 
#line 2341 
  ;
  
#line 2341 
  queue_id = (unsigned int)queueEntry->__anonCompField_netxen_minidump_entry_queue_155.__anonCompField___anonunion_434_154.queue_id_stride + queue_id;
  
#line 2332 
  loop_cnt += 1;
  ldv_54890: 
#line 2333 
  ;
  
#line 2331 
  if (queueEntry->op_count > (unsigned int)loop_cnt) 
#line 2333 
                                                     goto ldv_54889; else 
                                                                    
#line 2336 
                                                                    goto ldv_54891;
  ldv_54891: 
#line 2337 
  ;
  
#line 2343 
  __retres = ((unsigned int)((unsigned long)loop_cnt) * read_cnt) * 4U;
  
#line 2343 
  return __retres;
}


#line 2352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_md_entry_err_chk(struct netxen_adapter *adapter, struct netxen_minidump_entry *entry, int esize)
{
  int __retres;
  
#line 2355 
  if (esize < 0) {
    
#line 2356 
    entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 128U);
    
#line 2357 
    __retres = esize;
    
#line 2357 
    goto return_label;
  }
  else ;
  
#line 2359 
  if (entry->hdr.entry_capture_size != (unsigned int)esize) {
    
#line 2360 
    entry->hdr.entry_capture_size = (unsigned int)esize;
    
#line 2361 
    entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 64U);
    
#line 2362 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Invalidate dump, Type:%d\tMask:%d\tSize:%dCap_size:%d\n",entry->hdr.entry_type,(int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.entry_capture_mask,esize,entry->hdr.entry_capture_size);
    
#line 2366 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Aborting further dump capture\n");
  }
  else ;
  
#line 2368 
  __retres = 0;
  return_label: 
#line 2368 
                return __retres;
}


#line 2371  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_parse_md_template(struct netxen_adapter *adapter)
{
  int __retres;
  int num_of_entries;
  int buff_level;
  int e_cnt;
  int esize;
  char *dbuff;
  struct netxen_minidump_template_hdr *template_hdr;
  struct netxen_minidump_entry *entry;
  
#line 2374 
  int end_cnt = 0;
  
#line 2374 
  int rv = 0;
  
#line 2374 
  int sane_start = 0;
  
#line 2374 
  int sane_end = 0;
  
#line 2376 
  void *template_buff = adapter->mdump.md_template;
  
#line 2377 
  char *dump_buff = (char *)adapter->mdump.md_capture_buff;
  
#line 2378 
  int capture_mask = (int)adapter->mdump.md_capture_mask;
  
#line 2382 
  if ((capture_mask & 3) != 3) {
    
#line 2383 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Capture mask %02x below minimum needed ",capture_mask);
    
#line 2385 
    __retres = -22;
    
#line 2385 
    goto return_label;
  }
  else ;
  
#line 2387 
  template_hdr = (struct netxen_minidump_template_hdr *)template_buff;
  
#line 2388 
  num_of_entries = (int)template_hdr->num_of_entries;
  
#line 2389 
  entry = (struct netxen_minidump_entry *)template_buff + template_hdr->first_entry_offset;
  
#line 2391 
  memcpy((void *)dump_buff,(void const *)template_buff,(unsigned long)adapter->mdump.md_template_size);
  
#line 2392 
  dump_buff += adapter->mdump.md_template_size;
  
#line 2394 
  if (template_hdr->entry_type == 99U) 
#line 2395 
                                       sane_start = 1; else ;
  
#line 2397 
  e_cnt = 0;
  
#line 2397 
  buff_level = 0;
  
#line 2397 
  goto ldv_54935;
  ldv_54934: 
#line 2398 
  ;
  
#line 2398 
  if (((int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.entry_capture_mask & capture_mask) == 0) {
    
#line 2399 
    entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 128U);
    
#line 2400 
    entry += entry->hdr.entry_size;
    
#line 2402 
    goto ldv_54914;
  }
  else ;
  
#line 2404 
  switch (entry->hdr.entry_type) {
    u32 tmp;
    u32 tmp_0;
    u32 tmp_1;
    u32 tmp_2;
    u32 tmp_3;
    u32 tmp_4;
    u32 tmp_5;
    u32 tmp_6;
    u32 tmp_7;
    case (u32)0: 
#line 2405 
    ;
    
#line 2406 
    entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 128U);
    
#line 2407 
    goto ldv_54916;
    case (u32)255: 
#line 2408 
    ;
    
#line 2409 
    entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 128U);
    
#line 2410 
    if (sane_end == 0) 
#line 2411 
                       end_cnt = e_cnt; else ;
    
#line 2412 
    sane_end += 1;
    
#line 2413 
    goto ldv_54916;
    case (u32)98: 
#line 2414 
    ;
    
#line 2415 
    tmp = netxen_md_cntrl(adapter,template_hdr,(struct netxen_minidump_entry_crb *)entry);
    
#line 2415 
    rv = (int)tmp;
    
#line 2417 
    if (rv != 0) 
#line 2418 
                 entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 128U); else ;
    
#line 2419 
    goto ldv_54916;
    case (u32)1: 
#line 2420 
    ;
    
#line 2421 
    dbuff = dump_buff + buff_level;
    
#line 2422 
    tmp_0 = netxen_md_rd_crb(adapter,(struct netxen_minidump_entry_crb *)entry,(u32 *)dbuff);
    
#line 2422 
    esize = (int)tmp_0;
    
#line 2424 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2426 
    if (rv < 0) 
#line 2427 
                goto ldv_54916; else ;
    
#line 2428 
    buff_level += esize;
    
#line 2429 
    goto ldv_54916;
    case (u32)73: 
#line 2430 
    ;
    case (u32)72: 
#line 2431 
    ;
    
#line 2432 
    dbuff = dump_buff + buff_level;
    
#line 2433 
    tmp_1 = netxen_md_rdmem(adapter,(struct netxen_minidump_entry_rdmem *)entry,(u64 *)dbuff);
    
#line 2433 
    esize = (int)tmp_1;
    
#line 2435 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2437 
    if (rv < 0) 
#line 2438 
                goto ldv_54916; else ;
    
#line 2439 
    buff_level += esize;
    
#line 2440 
    goto ldv_54916;
    case (u32)4: 
#line 2441 
    ;
    case (u32)71: 
#line 2442 
    ;
    
#line 2443 
    dbuff = dump_buff + buff_level;
    
#line 2444 
    tmp_2 = netxen_md_rdrom(adapter,(struct netxen_minidump_entry_rdrom *)entry,(__le32 *)dbuff);
    
#line 2444 
    esize = (int)tmp_2;
    
#line 2446 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2448 
    if (rv < 0) 
#line 2449 
                goto ldv_54916; else ;
    
#line 2450 
    buff_level += esize;
    
#line 2451 
    goto ldv_54916;
    case (u32)22: 
#line 2452 
    ;
    case (u32)21: 
#line 2453 
    ;
    case (u32)23: 
#line 2454 
    ;
    case (u32)24: 
#line 2455 
    ;
    
#line 2456 
    dbuff = dump_buff + buff_level;
    
#line 2457 
    tmp_3 = netxen_md_L2Cache(adapter,(struct netxen_minidump_entry_cache *)entry,(u32 *)dbuff);
    
#line 2457 
    esize = (int)tmp_3;
    
#line 2459 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2461 
    if (rv < 0) 
#line 2462 
                goto ldv_54916; else ;
    
#line 2463 
    buff_level += esize;
    
#line 2464 
    goto ldv_54916;
    case (u32)11: 
#line 2465 
    ;
    case (u32)12: 
#line 2466 
    ;
    
#line 2467 
    dbuff = dump_buff + buff_level;
    
#line 2468 
    tmp_4 = netxen_md_L1Cache(adapter,(struct netxen_minidump_entry_cache *)entry,(u32 *)dbuff);
    
#line 2468 
    esize = (int)tmp_4;
    
#line 2470 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2472 
    if (rv < 0) 
#line 2473 
                goto ldv_54916; else ;
    
#line 2474 
    buff_level += esize;
    
#line 2475 
    goto ldv_54916;
    case (u32)6: 
#line 2476 
    ;
    
#line 2477 
    dbuff = dump_buff + buff_level;
    
#line 2478 
    tmp_5 = netxen_md_rdocm(adapter,(struct netxen_minidump_entry_rdocm *)entry,(u32 *)dbuff);
    
#line 2478 
    esize = (int)tmp_5;
    
#line 2480 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2482 
    if (rv < 0) 
#line 2483 
                goto ldv_54916; else ;
    
#line 2484 
    buff_level += esize;
    
#line 2485 
    goto ldv_54916;
    case (u32)2: 
#line 2486 
    ;
    
#line 2487 
    dbuff = dump_buff + buff_level;
    
#line 2488 
    tmp_6 = netxen_md_rdmux(adapter,(struct netxen_minidump_entry_mux *)entry,(u32 *)dbuff);
    
#line 2488 
    esize = (int)tmp_6;
    
#line 2490 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2492 
    if (rv < 0) 
#line 2493 
                goto ldv_54916; else ;
    
#line 2494 
    buff_level += esize;
    
#line 2495 
    goto ldv_54916;
    case (u32)3: 
#line 2496 
    ;
    
#line 2497 
    dbuff = dump_buff + buff_level;
    
#line 2498 
    tmp_7 = netxen_md_rdqueue(adapter,(struct netxen_minidump_entry_queue *)entry,(u32 *)dbuff);
    
#line 2498 
    esize = (int)tmp_7;
    
#line 2500 
    rv = netxen_md_entry_err_chk(adapter,entry,esize);
    
#line 2502 
    if (rv < 0) 
#line 2503 
                goto ldv_54916; else ;
    
#line 2504 
    buff_level += esize;
    
#line 2505 
    goto ldv_54916;
    default: 
#line 2506 
    ;
    
#line 2507 
    entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags = (unsigned char)((unsigned int)entry->hdr.__anonCompField_netxen_common_entry_hdr_113.__anonCompField___anonunion_392_112.driver_flags | 128U);
    
#line 2508 
    goto ldv_54916;
  }
  ldv_54916: 
#line 2511 
  ;
  
#line 2511 
  entry += entry->hdr.entry_size;
  ldv_54914: 
#line 2513 
  ;
  
#line 2397 
  e_cnt += 1;
  ldv_54935: 
#line 2398 
  ;
  
#line 2397 
  if (e_cnt < num_of_entries) 
#line 2399 
                              goto ldv_54934; else 
#line 2402 
                                                   goto ldv_54936;
  ldv_54936: 
#line 2403 
  ;
  
#line 2514 
  if (sane_start == 0 || sane_end > 1) 
#line 2515 
                                       dev_err((struct device const *)(& (adapter->pdev)->dev),"Firmware minidump template configuration error.\n"); else ;
  
#line 2518 
  __retres = 0;
  return_label: 
#line 2518 
                return __retres;
}


#line 2522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
static int netxen_collect_minidump(struct netxen_adapter *adapter)
{
  int __retres;
  struct netxen_minidump_template_hdr *hdr;
  struct timespec val;
  
#line 2524 
  int ret = 0;
  
#line 2527 
  hdr = (struct netxen_minidump_template_hdr *)adapter->mdump.md_template;
  
#line 2529 
  hdr->driver_capture_mask = (unsigned int)adapter->mdump.md_capture_mask;
  
#line 2530 
  jiffies_to_timespec(jiffies,& val);
  
#line 2531 
  hdr->driver_timestamp = (unsigned int)val.tv_sec;
  
#line 2532 
  hdr->driver_info_word2 = adapter->fw_version;
  
#line 2533 
  hdr->driver_info_word3 = (*(adapter->crb_read))(adapter,136324256UL);
  
#line 2534 
  ret = netxen_parse_md_template(adapter);
  
#line 2535 
  if (ret != 0) {
    
#line 2536 
    __retres = ret;
    
#line 2536 
    goto return_label;
  }
  else ;
  
#line 2538 
  __retres = ret;
  return_label: 
#line 2538 
                return __retres;
}


#line 2543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_hw.c"
void netxen_dump_fw(struct netxen_adapter *adapter)
{
  struct netxen_minidump_template_hdr *hdr;
  int i;
  int k;
  u32 capture_mask;
  
#line 2546 
  int data_size = 0;
  
#line 2548 
  hdr = (struct netxen_minidump_template_hdr *)adapter->mdump.md_template;
  
#line 2550 
  capture_mask = (unsigned int)adapter->mdump.md_capture_mask;
  
#line 2552 
  i = 2;
  
#line 2552 
  k = 1;
  
#line 2552 
  goto ldv_54952;
  ldv_54951: 
#line 2553 
  ;
  
#line 2553 
  if (((unsigned int)i & capture_mask) != 0U) 
#line 2554 
                                              data_size = (int)(hdr->capture_size_array[k] + (unsigned int)data_size); else ;
  
#line 2552 
  i <<= 1;
  
#line 2552 
  k += 1;
  ldv_54952: 
#line 2553 
  ;
  
#line 2552 
  if ((i & 255) != 0) 
#line 2554 
                      goto ldv_54951; else 
#line 2557 
                                           goto ldv_54953;
  ldv_54953: 
#line 2558 
  ;
  
#line 2556 
  if (data_size == 0) {
    
#line 2557 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Invalid cap sizes for capture_mask=0x%x\n",(int)adapter->mdump.md_capture_mask);
    
#line 2560 
    goto return_label;
  }
  else ;
  
#line 2562 
  adapter->mdump.md_capture_size = (unsigned int)data_size;
  
#line 2563 
  adapter->mdump.md_dump_size = adapter->mdump.md_template_size + adapter->mdump.md_capture_size;
  
#line 2565 
  if (adapter->mdump.md_capture_buff == (void *)0) {
    int tmp;
    
#line 2566 
    adapter->mdump.md_capture_buff = vzalloc((unsigned long)adapter->mdump.md_dump_size);
    
#line 2568 
    if (adapter->mdump.md_capture_buff == (void *)0) 
#line 2569 
                                                     goto return_label; else ;
    
#line 2571 
    tmp = netxen_collect_minidump(adapter);
    
#line 2571 
    if (tmp != 0) {
      
#line 2572 
      adapter->mdump.has_valid_dump = (unsigned char)0U;
      
#line 2573 
      adapter->mdump.md_dump_size = 0U;
      
#line 2574 
      vfree((void const *)adapter->mdump.md_capture_buff);
      
#line 2575 
      adapter->mdump.md_capture_buff = (void *)0;
      
#line 2576 
      dev_err((struct device const *)(& (adapter->pdev)->dev),"Error in collecting firmware minidump.\n");
    }
    else {
      
#line 2579 
      adapter->mdump.md_timestamp = (unsigned long long)jiffies;
      
#line 2580 
      adapter->mdump.has_valid_dump = (unsigned char)1U;
      
#line 2581 
      adapter->fw_mdump_rdy = 1;
      
#line 2582 
      _dev_info((struct device const *)(& (adapter->pdev)->dev),"%s Successfully ",(char *)(& (adapter->netdev)->name));
    }
  }
  else {
    
#line 2587 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Cannot overwrite previously collected ");
    
#line 2590 
    adapter->fw_mdump_rdy = 1;
    
#line 2591 
    goto return_label;
  }
  return_label: 
#line 2593 
                return;
}


#line 423  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 426 
  tmp = ldv_kzalloc(size,flags);
  
#line 426 
  return tmp;
}


#line 617  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_bh_61(spinlock_t *lock)
{
  
#line 621 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 623 
  spin_lock_bh(lock);
  
#line 624 
  return;
}


#line 660  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_bh_64(spinlock_t *lock)
{
  
#line 664 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 666 
  spin_unlock_bh(lock);
  
#line 667 
  return;
}


#line 750  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_73(spinlock_t *lock)
{
  
#line 754 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 756 
  spin_lock(lock);
  
#line 757 
  return;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_74(spinlock_t *lock)
{
  
#line 764 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 766 
  spin_unlock(lock);
  
#line 767 
  return;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_75(spinlock_t *lock)
{
  
#line 774 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 776 
  spin_lock(lock);
  
#line 777 
  return;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_76(spinlock_t *lock)
{
  
#line 784 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 786 
  spin_unlock(lock);
  
#line 787 
  return;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_77(spinlock_t *lock)
{
  
#line 794 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 796 
  spin_lock(lock);
  
#line 797 
  return;
}


#line 800  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_78(spinlock_t *lock)
{
  
#line 804 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 806 
  spin_unlock(lock);
  
#line 807 
  return;
}


#line 810  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_79(spinlock_t *lock)
{
  
#line 814 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 816 
  spin_lock(lock);
  
#line 817 
  return;
}


#line 820  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_80(spinlock_t *lock)
{
  
#line 824 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 826 
  spin_unlock(lock);
  
#line 827 
  return;
}


#line 830  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_81(spinlock_t *lock)
{
  
#line 834 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 836 
  spin_lock(lock);
  
#line 837 
  return;
}


#line 840  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_82(spinlock_t *lock)
{
  
#line 844 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 846 
  spin_unlock(lock);
  
#line 847 
  return;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_83(spinlock_t *lock)
{
  
#line 854 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 856 
  spin_lock(lock);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_84(spinlock_t *lock)
{
  
#line 864 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 866 
  spin_unlock(lock);
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_lock_85(spinlock_t *lock)
{
  
#line 874 
  ldv_spin_model_lock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 876 
  spin_lock(lock);
  
#line 877 
  return;
}


#line 880  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_hw.c.aux"
static void ldv_spin_unlock_86(spinlock_t *lock)
{
  
#line 884 
  ldv_spin_model_unlock((char *)"mem_lock_of_netxen_hardware_context");
  
#line 886 
  spin_unlock(lock);
  
#line 887 
  return;
}

unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

void __builtin_unreachable(void);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void ___might_sleep(char const *, int, int);


#line 418 
int sscanf(char const *, char const * , ...);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
int strncmp(char const *, char const *, __kernel_size_t);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
int _raw_spin_trylock(raw_spinlock_t *);


#line 40 
int _raw_spin_trylock_bh(raw_spinlock_t *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_0(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_75_0(spinlock_t *lock);


#line 359  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_bh_0(spinlock_t *lock)
{
  
#line 361 
  _raw_spin_lock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 362 
  return;
}


#line 387 
static void ldv_spin_lock_bh_73(spinlock_t *lock);


#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static int spin_trylock(spinlock_t *lock)
{
  int tmp;
  
#line 390 
  tmp = _raw_spin_trylock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 390 
  return tmp;
}


#line 347 
static int ldv_spin_trylock_79(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_0(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 407 
static void ldv_spin_unlock_76_0(spinlock_t *lock);


#line 411 
static void ldv_spin_unlock_80_0(spinlock_t *lock);


#line 412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_bh_0(spinlock_t *lock)
{
  
#line 414 
  _raw_spin_unlock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 415 
  return;
}


#line 444 
static void ldv_spin_unlock_bh_74(spinlock_t *lock);


#line 448 
static void ldv_spin_unlock_bh_78(spinlock_t *lock);


#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static int spin_trylock_bh(spinlock_t *lock)
{
  int tmp;
  
#line 493 
  tmp = _raw_spin_trylock_bh(& lock->__anonCompField_spinlock_18.rlock);
  
#line 493 
  return tmp;
}


#line 499 
static int ldv_spin_trylock_bh_77(spinlock_t *lock);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
unsigned long msleep_interruptible(unsigned int);


#line 2903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
int _cond_resched(void);


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc_0(size_t size, gfp_t flags);


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __sum16 csum16_add(__sum16 csum, __be16 addend)
{
  __sum16 __retres;
  
#line 76 
  u16 res = csum;
  
#line 78 
  res = (unsigned short)((int)res + (int)addend);
  
#line 79 
  __retres = (unsigned short)(((int)res < (int)addend) + (int)res);
  
#line 79 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __sum16 csum16_sub(__sum16 csum, __be16 addend)
{
  __sum16 tmp;
  
#line 84 
  tmp = csum16_add((unsigned short)((int)csum),(unsigned short)(~ ((int)addend)));
  
#line 84 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static void csum_replace2(__sum16 *sum, __be16 old, __be16 new)
{
  __sum16 tmp_0;
  __sum16 tmp;
  
#line 138 
  ;
  
#line 138 
  tmp = csum16_sub((unsigned short)(~ ((int)*sum)),(unsigned short)((int)old));
  
#line 138 
  tmp_0 = csum16_add((unsigned short)((int)tmp),(unsigned short)((int)new));
  
#line 138 
  *sum = (unsigned short)(~ ((int)tmp_0));
  
#line 139 
  return;
}


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
char netxen_nic_driver_name[11U];


#line 1743 
int netxen_init_dummy_dma(struct netxen_adapter *adapter);


#line 1744 
void netxen_free_dummy_dma(struct netxen_adapter *adapter);


#line 1746 
int netxen_check_flash_fw_compatibility(struct netxen_adapter *adapter);


#line 1747 
int netxen_phantom_init(struct netxen_adapter *adapter, int pegtune_val);


#line 1748 
int netxen_load_firmware(struct netxen_adapter *adapter);


#line 1749 
int netxen_need_fw_reset(struct netxen_adapter *adapter);


#line 1750 
void netxen_request_firmware(struct netxen_adapter *adapter);


#line 1751 
void netxen_release_firmware(struct netxen_adapter *adapter);


#line 1752 
int netxen_pinit_from_rom(struct netxen_adapter *adapter);


#line 1755 
int netxen_rom_fast_read_words(struct netxen_adapter *adapter, int addr, u8 *bytes, size_t size);


#line 1767 
int netxen_alloc_sw_resources(struct netxen_adapter *adapter);


#line 1768 
void netxen_free_sw_resources(struct netxen_adapter *adapter);


#line 1776 
void netxen_release_rx_buffers(struct netxen_adapter *adapter);


#line 1777 
void netxen_release_tx_buffers(struct netxen_adapter *adapter);


#line 1779 
int netxen_init_firmware(struct netxen_adapter *adapter);


#line 1780 
void netxen_nic_clear_stats(struct netxen_adapter *adapter);


#line 1782 
void netxen_post_rx_buffers(struct netxen_adapter *adapter, u32 ringid, struct nx_host_rds_ring *rds_ring);


#line 1784 
int netxen_process_cmd_ring(struct netxen_adapter *adapter);


#line 1785 
int netxen_process_rcv_ring(struct nx_host_sds_ring *sds_ring, int max);


#line 1792 
void netxen_advert_link_change(struct netxen_adapter *adapter, int linkup);


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static unsigned int crb_addr_xform[60U];

#line 48 
static void netxen_post_rx_buffers_nodb(struct netxen_adapter *adapter, struct nx_host_rds_ring *rds_ring);


#line 50 
static int netxen_p3_has_mn(struct netxen_adapter *adapter);


#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static void crb_addr_transform_setup(void)
{
  
#line 54 
  crb_addr_xform[49] = 1078984704U;
  
#line 55 
  crb_addr_xform[40] = 1097859072U;
  
#line 56 
  crb_addr_xform[5] = 218103808U;
  
#line 57 
  crb_addr_xform[11] = 238026752U;
  
#line 58 
  crb_addr_xform[10] = 236978176U;
  
#line 59 
  crb_addr_xform[9] = 235929600U;
  
#line 60 
  crb_addr_xform[8] = 234881024U;
  
#line 61 
  crb_addr_xform[16] = 1883242496U;
  
#line 62 
  crb_addr_xform[15] = 1882193920U;
  
#line 63 
  crb_addr_xform[14] = 1881145344U;
  
#line 64 
  crb_addr_xform[13] = 1880096768U;
  
#line 65 
  crb_addr_xform[48] = 1894776832U;
  
#line 66 
  crb_addr_xform[47] = 148897792U;
  
#line 67 
  crb_addr_xform[46] = 147849216U;
  
#line 68 
  crb_addr_xform[45] = 1891631104U;
  
#line 69 
  crb_addr_xform[44] = 1890582528U;
  
#line 70 
  crb_addr_xform[43] = 1889533952U;
  
#line 71 
  crb_addr_xform[42] = 143654912U;
  
#line 72 
  crb_addr_xform[53] = 142606336U;
  
#line 73 
  crb_addr_xform[51] = 1108344832U;
  
#line 74 
  crb_addr_xform[29] = 1090519040U;
  
#line 75 
  crb_addr_xform[7] = 241172480U;
  
#line 76 
  crb_addr_xform[12] = 1879048192U;
  
#line 77 
  crb_addr_xform[22] = 876609536U;
  
#line 78 
  crb_addr_xform[21] = 877658112U;
  
#line 79 
  crb_addr_xform[20] = 875560960U;
  
#line 80 
  crb_addr_xform[19] = 874512384U;
  
#line 81 
  crb_addr_xform[18] = 873463808U;
  
#line 82 
  crb_addr_xform[17] = 872415232U;
  
#line 83 
  crb_addr_xform[28] = 1010827264U;
  
#line 84 
  crb_addr_xform[27] = 1011875840U;
  
#line 85 
  crb_addr_xform[26] = 1009778688U;
  
#line 86 
  crb_addr_xform[25] = 1008730112U;
  
#line 87 
  crb_addr_xform[24] = 1007681536U;
  
#line 88 
  crb_addr_xform[23] = 1006632960U;
  
#line 89 
  crb_addr_xform[1] = 1999634432U;
  
#line 90 
  crb_addr_xform[0] = 698351616U;
  
#line 91 
  crb_addr_xform[6] = 454033408U;
  
#line 92 
  crb_addr_xform[50] = 1107296256U;
  
#line 93 
  crb_addr_xform[31] = 219152384U;
  
#line 94 
  crb_addr_xform[2] = 693108736U;
  
#line 95 
  crb_addr_xform[3] = 709885952U;
  
#line 96 
  crb_addr_xform[37] = 209715200U;
  
#line 97 
  crb_addr_xform[36] = 208666624U;
  
#line 98 
  crb_addr_xform[35] = 207618048U;
  
#line 99 
  crb_addr_xform[34] = 1096810496U;
  
#line 100 
  crb_addr_xform[39] = 1972371456U;
  
#line 101 
  crb_addr_xform[38] = 1971322880U;
  
#line 102 
  crb_addr_xform[58] = 1904214016U;
  
#line 103 
  crb_addr_xform[56] = 1080033280U;
  
#line 104 
  crb_addr_xform[59] = 428867584U;
  
#line 105 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_release_rx_buffers(struct netxen_adapter *adapter)
{
  struct netxen_recv_context *recv_ctx;
  struct nx_host_rds_ring *rds_ring;
  struct netxen_rx_buffer *rx_buf;
  int i;
  int ring;
  
#line 114 
  recv_ctx = & adapter->recv_ctx;
  
#line 115 
  ring = 0;
  
#line 115 
  goto ldv_52321;
  ldv_52320: 
#line 116 
  ;
  
#line 116 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 117 
  i = 0;
  
#line 117 
  goto ldv_52318;
  ldv_52317: 
#line 118 
  ;
  
#line 118 
  rx_buf = rds_ring->rx_buf_arr + i;
  
#line 119 
  if ((unsigned int)rx_buf->state == 0U) 
#line 120 
                                         goto ldv_52316; else ;
  
#line 121 
  pci_unmap_single(adapter->pdev,rx_buf->dma,(unsigned long)rds_ring->dma_size,2);
  
#line 125 
  if (rx_buf->skb != (struct sk_buff *)0) 
#line 126 
                                          dev_kfree_skb_any(rx_buf->skb); else ;
  ldv_52316: 
#line 127 
  ;
  
#line 117 
  i += 1;
  ldv_52318: 
#line 118 
  ;
  
#line 117 
  if (rds_ring->num_desc > (unsigned int)i) 
#line 119 
                                            goto ldv_52317; else 
#line 122 
                                                                 goto ldv_52319;
  ldv_52319: 
#line 123 
  ;
  
#line 115 
  ring += 1;
  ldv_52321: 
#line 116 
  ;
  
#line 115 
  if ((int)adapter->max_rds_rings > ring) 
#line 117 
                                          goto ldv_52320; else 
#line 120 
                                                               goto ldv_52322;
  ldv_52322: 
#line 121 
  ;
  
#line 122 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_release_tx_buffers(struct netxen_adapter *adapter)
{
  struct netxen_cmd_buffer *cmd_buf;
  struct netxen_skb_frag *buffrag;
  int i;
  int j;
  
#line 136 
  struct nx_host_tx_ring *tx_ring = adapter->tx_ring;
  
#line 138 
  ldv_spin_lock_bh_73(& adapter->tx_clean_lock);
  
#line 139 
  cmd_buf = tx_ring->cmd_buf_arr;
  
#line 140 
  i = 0;
  
#line 140 
  goto ldv_52335;
  ldv_52334: 
#line 141 
  ;
  
#line 141 
  buffrag = (struct netxen_skb_frag *)(& cmd_buf->frag_array);
  
#line 142 
  if (buffrag->dma != 0ULL) {
    
#line 143 
    pci_unmap_single(adapter->pdev,buffrag->dma,(unsigned long)buffrag->length,1);
    
#line 145 
    buffrag->dma = 0ULL;
  }
  else ;
  
#line 147 
  j = 1;
  
#line 147 
  goto ldv_52332;
  ldv_52331: 
#line 148 
  ;
  
#line 148 
  buffrag += 1;
  
#line 149 
  if (buffrag->dma != 0ULL) {
    
#line 150 
    pci_unmap_page(adapter->pdev,buffrag->dma,(unsigned long)buffrag->length,1);
    
#line 153 
    buffrag->dma = 0ULL;
  }
  else ;
  
#line 147 
  j += 1;
  ldv_52332: 
#line 148 
  ;
  
#line 147 
  if (cmd_buf->frag_count > (unsigned int)j) 
#line 149 
                                             goto ldv_52331; else 
#line 152 
                                                                  goto ldv_52333;
  ldv_52333: 
#line 153 
  ;
  
#line 156 
  if (cmd_buf->skb != (struct sk_buff *)0) {
    
#line 157 
    dev_kfree_skb_any(cmd_buf->skb);
    
#line 158 
    cmd_buf->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 160 
  cmd_buf += 1;
  
#line 140 
  i += 1;
  ldv_52335: 
#line 141 
  ;
  
#line 140 
  if (tx_ring->num_desc > (unsigned int)i) 
#line 142 
                                           goto ldv_52334; else 
#line 145 
                                                                goto ldv_52336;
  ldv_52336: 
#line 146 
  ;
  
#line 162 
  ldv_spin_unlock_bh_74(& adapter->tx_clean_lock);
  
#line 163 
  return;
}


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_free_sw_resources(struct netxen_adapter *adapter)
{
  struct netxen_recv_context *recv_ctx;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_tx_ring *tx_ring;
  int ring;
  
#line 172 
  recv_ctx = & adapter->recv_ctx;
  
#line 174 
  if (recv_ctx->rds_rings == (struct nx_host_rds_ring *)0) 
#line 175 
                                                           goto skip_rds; else ;
  
#line 177 
  ring = 0;
  
#line 177 
  goto ldv_52346;
  ldv_52345: 
#line 178 
  ;
  
#line 178 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 179 
  vfree((void const *)rds_ring->rx_buf_arr);
  
#line 180 
  rds_ring->rx_buf_arr = (struct netxen_rx_buffer *)0;
  
#line 177 
  ring += 1;
  ldv_52346: 
#line 178 
  ;
  
#line 177 
  if ((int)adapter->max_rds_rings > ring) 
#line 179 
                                          goto ldv_52345; else 
#line 182 
                                                               goto ldv_52347;
  ldv_52347: 
#line 183 
  ;
  
#line 182 
  kfree((void const *)recv_ctx->rds_rings);
  skip_rds: 
#line 184 
  ;
  
#line 185 
  if (adapter->tx_ring == (struct nx_host_tx_ring *)0) 
#line 186 
                                                       goto return_label; else ;
  
#line 188 
  tx_ring = adapter->tx_ring;
  
#line 189 
  vfree((void const *)tx_ring->cmd_buf_arr);
  
#line 190 
  kfree((void const *)tx_ring);
  
#line 191 
  adapter->tx_ring = (struct nx_host_tx_ring *)0;
  return_label: 
#line 192 
                return;
}


#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_alloc_sw_resources(struct netxen_adapter *adapter)
{
  int __retres;
  struct netxen_recv_context *recv_ctx;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_sds_ring *sds_ring;
  struct nx_host_tx_ring *tx_ring;
  struct netxen_rx_buffer *rx_buf;
  int ring;
  int i;
  struct netxen_cmd_buffer *cmd_buf_arr;
  
#line 204 
  struct net_device *netdev = adapter->netdev;
  
#line 206 
  tx_ring = (struct nx_host_tx_ring *)kzalloc_0(80UL,208U);
  
#line 207 
  if (tx_ring == (struct nx_host_tx_ring *)0) {
    
#line 208 
    __retres = -12;
    
#line 208 
    goto return_label;
  }
  else ;
  
#line 210 
  adapter->tx_ring = tx_ring;
  
#line 212 
  tx_ring->num_desc = (unsigned int)adapter->num_txd;
  
#line 213 
  tx_ring->txq = netdev_get_tx_queue((struct net_device const *)netdev,0U);
  
#line 215 
  cmd_buf_arr = (struct netxen_cmd_buffer *)vzalloc((unsigned long)tx_ring->num_desc * 304UL);
  
#line 216 
  if (cmd_buf_arr == (struct netxen_cmd_buffer *)0) 
#line 217 
                                                    goto err_out; else ;
  
#line 219 
  tx_ring->cmd_buf_arr = cmd_buf_arr;
  
#line 221 
  recv_ctx = & adapter->recv_ctx;
  
#line 223 
  rds_ring = (struct nx_host_rds_ring *)kcalloc((unsigned long)adapter->max_rds_rings,144UL,208U);
  
#line 225 
  if (rds_ring == (struct nx_host_rds_ring *)0) 
#line 226 
                                                goto err_out; else ;
  
#line 228 
  recv_ctx->rds_rings = rds_ring;
  
#line 230 
  ring = 0;
  
#line 230 
  goto ldv_52370;
  ldv_52369: 
#line 231 
  ;
  
#line 231 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 232 
  switch (ring) {
    case 0: 
#line 233 
    ;
    
#line 234 
    rds_ring->num_desc = (unsigned int)adapter->num_rxd;
    
#line 235 
    if ((unsigned int)adapter->ahw.cut_through != 0U) {
      
#line 236 
      rds_ring->dma_size = 2048U;
      
#line 238 
      rds_ring->skb_size = 2048U;
    }
    else {
      
#line 241 
      if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 242 
                                                        rds_ring->dma_size = 1532U; else 
                                                                    
#line 245 
                                                                    rds_ring->dma_size = 1760U;
      
#line 247 
      rds_ring->skb_size = rds_ring->dma_size;
    }
    
#line 250 
    goto ldv_52362;
    case 1: 
#line 252 
    ;
    
#line 253 
    rds_ring->num_desc = (unsigned int)adapter->num_jumbo_rxd;
    
#line 254 
    if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 255 
                                                      rds_ring->dma_size = 9632U; else 
                                                                    
#line 258 
                                                                    rds_ring->dma_size = 8032U;
    
#line 261 
    if ((adapter->capabilities & 1024U) != 0U) 
#line 262 
                                               rds_ring->dma_size += 2048U; else ;
    
#line 264 
    rds_ring->skb_size = rds_ring->dma_size;
    
#line 266 
    goto ldv_52362;
    case 2: 
#line 268 
    ;
    
#line 269 
    rds_ring->num_desc = (unsigned int)adapter->num_lro_rxd;
    
#line 270 
    rds_ring->dma_size = 8060U;
    
#line 271 
    rds_ring->skb_size = rds_ring->dma_size;
    
#line 272 
    goto ldv_52362;
  }
  ldv_52362: 
#line 275 
  ;
  
#line 275 
  rds_ring->rx_buf_arr = (struct netxen_rx_buffer *)vzalloc((unsigned long)rds_ring->num_desc * 40UL);
  
#line 276 
  if (rds_ring->rx_buf_arr == (struct netxen_rx_buffer *)0) 
#line 278 
                                                            goto err_out; else ;
  
#line 280 
  INIT_LIST_HEAD(& rds_ring->free_list);
  
#line 285 
  rx_buf = rds_ring->rx_buf_arr;
  
#line 286 
  i = 0;
  
#line 286 
  goto ldv_52366;
  ldv_52365: 
#line 287 
  ;
  
#line 287 
  list_add_tail(& rx_buf->list,& rds_ring->free_list);
  
#line 289 
  rx_buf->ref_handle = (unsigned short)i;
  
#line 290 
  rx_buf->state = (unsigned short)0U;
  
#line 291 
  rx_buf += 1;
  
#line 286 
  i += 1;
  ldv_52366: 
#line 287 
  ;
  
#line 286 
  if (rds_ring->num_desc > (unsigned int)i) 
#line 288 
                                            goto ldv_52365; else 
#line 291 
                                                                 goto ldv_52367;
  ldv_52367: 
#line 292 
  ;
  
#line 293 
  spinlock_check(& rds_ring->lock);
  {
    struct lock_class_key __key;
    
#line 293 
    __raw_spin_lock_init(& rds_ring->lock.__anonCompField_spinlock_18.rlock,"&(&rds_ring->lock)->rlock",& __key);
  }
  
#line 230 
  ring += 1;
  ldv_52370: 
#line 231 
  ;
  
#line 230 
  if ((int)adapter->max_rds_rings > ring) 
#line 232 
                                          goto ldv_52369; else 
#line 235 
                                                               goto ldv_52371;
  ldv_52371: 
#line 236 
  ;
  
#line 296 
  ring = 0;
  
#line 296 
  goto ldv_52376;
  ldv_52375: 
#line 297 
  ;
  
#line 297 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 298 
  sds_ring->irq = (int)adapter->msix_entries[ring].vector;
  
#line 299 
  sds_ring->adapter = adapter;
  
#line 300 
  sds_ring->num_desc = (unsigned int)adapter->num_rxd;
  
#line 302 
  i = 0;
  
#line 302 
  goto ldv_52373;
  ldv_52372: 
#line 303 
  ;
  
#line 303 
  INIT_LIST_HEAD(& sds_ring->free_list[i]);
  
#line 302 
  i += 1;
  ldv_52373: 
#line 303 
  ;
  
#line 302 
  if (i <= 2) 
#line 304 
              goto ldv_52372; else 
#line 307 
                                   goto ldv_52374;
  ldv_52374: 
#line 308 
  ;
  
#line 296 
  ring += 1;
  ldv_52376: 
#line 297 
  ;
  
#line 296 
  if ((int)adapter->max_sds_rings > ring) 
#line 298 
                                          goto ldv_52375; else 
#line 301 
                                                               goto ldv_52377;
  ldv_52377: 
#line 302 
  ;
  
#line 306 
  __retres = 0;
  
#line 306 
  goto return_label;
  err_out: 
#line 308 
  ;
  
#line 309 
  netxen_free_sw_resources(adapter);
  
#line 310 
  __retres = -12;
  return_label: 
#line 310 
                return __retres;
}


#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static u32 netxen_decode_crb_addr(u32 addr)
{
  u32 __retres;
  int i;
  u32 base_addr;
  u32 offset;
  u32 pci_base;
  
#line 322 
  crb_addr_transform_setup();
  
#line 324 
  pci_base = 4294967295U;
  
#line 325 
  base_addr = addr & 4293918720U;
  
#line 326 
  offset = addr & 1048575U;
  
#line 328 
  i = 0;
  
#line 328 
  goto ldv_52387;
  ldv_52386: 
#line 329 
  ;
  
#line 329 
  if (crb_addr_xform[i] == base_addr) {
    
#line 330 
    pci_base = (unsigned int)(i << 20);
    
#line 331 
    goto ldv_52385;
  }
  else ;
  
#line 328 
  i += 1;
  ldv_52387: 
#line 329 
  ;
  
#line 328 
  if (i <= 59) 
#line 330 
               goto ldv_52386; else 
#line 333 
                                    goto ldv_52385;
  ldv_52385: 
#line 334 
  ;
  
#line 334 
  if (pci_base == 4294967295U) {
    
#line 335 
    __retres = pci_base;
    
#line 335 
    goto return_label;
  }
  else {
    
#line 337 
    __retres = pci_base + offset;
    
#line 337 
    goto return_label;
  }
  return_label: 
#line 334 
                return __retres;
}


#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_wait_rom_done(struct netxen_adapter *adapter)
{
  int __retres;
  u32 tmp;
  
#line 344 
  long timeout = 0L;
  
#line 345 
  long done = 0L;
  
#line 347 
  ___might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c",347,0);
  
#line 347 
  _cond_resched();
  
#line 349 
  goto ldv_52395;
  ldv_52394: 
#line 350 
  ;
  
#line 350 
  tmp = (*(adapter->crb_read))(adapter,154140676UL);
  
#line 350 
  done = (long)tmp;
  
#line 351 
  done &= 2L;
  
#line 352 
  timeout += 1L;
  
#line 352 
  if (timeout > 99L) {
    
#line 353 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Timeout reached  waiting for rom done");
    
#line 355 
    __retres = -5;
    
#line 355 
    goto return_label;
  }
  else ;
  
#line 357 
  __const_udelay(4295UL);
  ldv_52395: 
#line 359 
  ;
  
#line 349 
  if (done == 0L) 
#line 351 
                  goto ldv_52394; else 
#line 354 
                                       goto ldv_52396;
  ldv_52396: 
#line 355 
  ;
  
#line 359 
  __retres = 0;
  return_label: 
#line 359 
                return __retres;
}


#line 362  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int do_rom_fast_read(struct netxen_adapter *adapter, int addr, int *valp)
{
  int __retres;
  int tmp;
  u32 tmp_0;
  
#line 365 
  (*(adapter->crb_write))(adapter,154206216UL,(unsigned int)addr);
  
#line 366 
  (*(adapter->crb_write))(adapter,154206228UL,0U);
  
#line 367 
  (*(adapter->crb_write))(adapter,154206224UL,3U);
  
#line 368 
  (*(adapter->crb_write))(adapter,154206212UL,11U);
  
#line 369 
  tmp = netxen_wait_rom_done(adapter);
  
#line 369 
  if (tmp != 0) {
    
#line 370 
    printk("Error waiting for rom done\n");
    
#line 371 
    __retres = -5;
    
#line 371 
    goto return_label;
  }
  else ;
  
#line 374 
  (*(adapter->crb_write))(adapter,154206224UL,0U);
  
#line 375 
  __const_udelay(42950UL);
  
#line 376 
  (*(adapter->crb_write))(adapter,154206228UL,0U);
  
#line 378 
  tmp_0 = (*(adapter->crb_read))(adapter,154206232UL);
  
#line 378 
  *valp = (int)tmp_0;
  
#line 379 
  __retres = 0;
  return_label: 
#line 379 
                return __retres;
}


#line 382  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int do_rom_fast_read_words(struct netxen_adapter *adapter, int addr, u8 *bytes, size_t size)
{
  int addridx;
  
#line 386 
  int ret = 0;
  
#line 388 
  addridx = addr;
  
#line 388 
  goto ldv_52413;
  ldv_52412: 
#line 389 
  ;
  {
    int v;
    
#line 390 
    ret = do_rom_fast_read(adapter,addridx,& v);
    
#line 391 
    if (ret != 0) 
#line 392 
                  goto ldv_52411; else ;
    
#line 393 
    *((__le32 *)bytes) = (unsigned int)v;
    
#line 394 
    bytes += 4U;
  }
  
#line 388 
  addridx += 4;
  ldv_52413: 
#line 389 
  ;
  
#line 388 
  if ((unsigned long)addridx < (unsigned long)addr + size) 
#line 390 
                                                           goto ldv_52412; else 
                                                                    
#line 393 
                                                                    goto ldv_52411;
  ldv_52411: 
#line 394 
  ;
  
#line 397 
  return ret;
}


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_rom_fast_read_words(struct netxen_adapter *adapter, int addr, u8 *bytes, size_t size)
{
  int __retres;
  int ret;
  
#line 406 
  ret = netxen_pcie_sem_lock(adapter,2,136323328U);
  
#line 407 
  if (ret < 0) {
    
#line 408 
    __retres = ret;
    
#line 408 
    goto return_label;
  }
  else ;
  
#line 410 
  ret = do_rom_fast_read_words(adapter,addr,bytes,size);
  
#line 412 
  netxen_pcie_sem_unlock(adapter,2);
  
#line 413 
  __retres = ret;
  return_label: 
#line 413 
                return __retres;
}


#line 416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_rom_fast_read(struct netxen_adapter *adapter, int addr, int *valp)
{
  int __retres;
  int ret;
  int tmp;
  
#line 420 
  tmp = netxen_pcie_sem_lock(adapter,2,136323328U);
  
#line 420 
  if (tmp != 0) {
    
#line 421 
    __retres = -5;
    
#line 421 
    goto return_label;
  }
  else ;
  
#line 423 
  ret = do_rom_fast_read(adapter,addr,valp);
  
#line 424 
  netxen_pcie_sem_unlock(adapter,2);
  
#line 425 
  __retres = ret;
  return_label: 
#line 425 
                return __retres;
}


#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_pinit_from_rom(struct netxen_adapter *adapter)
{
  int __retres;
  int addr;
  int val;
  int i;
  int n;
  struct crb_addr_pair *buf;
  unsigned int offset;
  u32 off;
  int tmp_3;
  
#line 435 
  int init_delay = 0;
  
#line 441 
  netxen_pcie_sem_lock(adapter,2,136323328U);
  
#line 442 
  (*(adapter->crb_write))(adapter,154140680UL,4278190079U);
  
#line 443 
  netxen_pcie_sem_unlock(adapter,2);
  
#line 445 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    int tmp;
    
#line 446 
    tmp = netxen_rom_fast_read(adapter,0,& n);
    
#line 446 
    if (tmp != 0) 
#line 446 
                  goto _LOR;
    else 
      
#line 446 
      if (n != -889271554) 
#line 446 
                           goto _LOR;
      else {
        int tmp_0;
        
#line 447 
        tmp_0 = netxen_rom_fast_read(adapter,4,& n);
        
#line 447 
        if (tmp_0 != 0) {
          _LOR: {
                  
#line 449 
                  printk("\001",(char *)(& netxen_nic_driver_name),n);
                  
#line 451 
                  __retres = -5;
                  
#line 451 
                  goto return_label;
                }
        }
        else ;
      }
    
#line 453 
    offset = (unsigned int)n & 65535U;
    
#line 454 
    n >>= 16;
  }
  else {
    int tmp_1;
    
#line 456 
    tmp_1 = netxen_rom_fast_read(adapter,0,& n);
    
#line 456 
    if (tmp_1 != 0) 
#line 456 
                    goto _LOR_0;
    else 
      
#line 456 
      if (n >= 0) {
        _LOR_0: {
                  
#line 458 
                  printk("\001",(char *)(& netxen_nic_driver_name),n);
                  
#line 460 
                  __retres = -5;
                  
#line 460 
                  goto return_label;
                }
      }
      else ;
    
#line 462 
    offset = 1U;
    
#line 463 
    n &= 2147483647;
  }
  
#line 466 
  if (n > 1023) {
    
#line 467 
    printk("\001","netxen_pinit_from_rom",n);
    
#line 469 
    __retres = -5;
    
#line 469 
    goto return_label;
  }
  else ;
  
#line 472 
  buf = (struct crb_addr_pair *)kcalloc((unsigned long)n,8UL,208U);
  
#line 473 
  if (buf == (struct crb_addr_pair *)0) {
    
#line 474 
    __retres = -12;
    
#line 474 
    goto return_label;
  }
  else ;
  
#line 476 
  i = 0;
  
#line 476 
  goto ldv_52440;
  ldv_52439: 
#line 477 
  ;
  
#line 477 
  tmp_3 = netxen_rom_fast_read(adapter,(int)((unsigned int)(i * 8) + offset * 4U),& val);
  
#line 477 
  if (tmp_3 != 0) 
#line 477 
                  goto _LOR_1;
  else {
    int tmp_4;
    
#line 477 
    tmp_4 = netxen_rom_fast_read(adapter,(int)(((unsigned int)(i * 8) + offset * 4U) + 4U),& addr);
    
#line 477 
    if (tmp_4 != 0) {
      _LOR_1: {
                
#line 479 
                kfree((void const *)buf);
                
#line 480 
                __retres = -5;
                
#line 480 
                goto return_label;
              }
    }
    else ;
  }
  
#line 483 
  (buf + i)->addr = (unsigned int)addr;
  
#line 484 
  (buf + i)->data = (unsigned int)val;
  
#line 476 
  i += 1;
  ldv_52440: 
#line 477 
  ;
  
#line 476 
  if (i < n) 
#line 478 
             goto ldv_52439; else 
#line 481 
                                  goto ldv_52441;
  ldv_52441: 
#line 482 
  ;
  
#line 488 
  i = 0;
  
#line 488 
  goto ldv_52444;
  ldv_52443: 
#line 489 
  ;
  
#line 490 
  off = netxen_decode_crb_addr((buf + i)->addr);
  
#line 491 
  if (off == 4294967295U) {
    
#line 492 
    printk("\001",(buf + i)->addr);
    
#line 494 
    goto ldv_52442;
  }
  else ;
  
#line 496 
  off += 100663296U;
  
#line 498 
  if ((off & 1U) != 0U) 
#line 499 
                        goto ldv_52442; else ;
  
#line 502 
  if (off == 136323580U) 
#line 503 
                         goto ldv_52442; else ;
  
#line 505 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 506 
    if (off == 162529308U) 
#line 507 
                           goto ldv_52442; else ;
    
#line 509 
    if (off == 154140860U) 
#line 510 
                           goto ldv_52442; else ;
    
#line 511 
    if (off == 154140840U) 
#line 512 
                           goto ldv_52442; else ;
    
#line 513 
    if (off == 154140872U) 
#line 514 
                           goto ldv_52442; else ;
    
#line 515 
    if (off == 154140708U) 
#line 516 
                           goto ldv_52442; else ;
    
#line 517 
    if (off == 154140700U) 
#line 518 
                           goto ldv_52442; else ;
    
#line 519 
    if ((off & 267386880U) == 102760448U) 
#line 520 
                                          goto ldv_52442; else ;
    
#line 521 
    if (off == 119537688U && (unsigned int)adapter->ahw.revision_id <= 79U) 
      
#line 523 
      (buf + i)->data = 4128U; else ;
    
#line 525 
    if (off == 101785664U) 
#line 526 
                           goto ldv_52442; else ;
    
#line 527 
    if (off == 101785672U) 
#line 528 
                           goto ldv_52442; else ;
    
#line 529 
    if ((off & 267386880U) == 161480704U) 
#line 530 
                                          goto ldv_52442; else ;
  }
  else ;
  
#line 533 
  init_delay = 1;
  
#line 536 
  if (off == 154140680U) {
    
#line 537 
    init_delay = 1000;
    
#line 538 
    if ((unsigned int)adapter->ahw.revision_id <= 37U) {
      
#line 540 
      (buf + i)->data = 8388863U;
      
#line 541 
      (buf + i)->data = 8388863U;
    }
    else ;
  }
  else ;
  
#line 545 
  (*(adapter->crb_write))(adapter,(unsigned long)off,(buf + i)->data);
  
#line 547 
  msleep((unsigned int)init_delay);
  ldv_52442: 
#line 548 
  ;
  
#line 488 
  i += 1;
  ldv_52444: 
#line 489 
  ;
  
#line 488 
  if (i < n) 
#line 490 
             goto ldv_52443; else 
#line 493 
                                  goto ldv_52445;
  ldv_52445: 
#line 494 
  ;
  
#line 549 
  kfree((void const *)buf);
  
#line 554 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    u32 tmp_5;
    
#line 555 
    tmp_5 = (*(adapter->crb_read))(adapter,154140680UL);
    
#line 555 
    val = (int)tmp_5;
    
#line 556 
    (*(adapter->crb_write))(adapter,154140680UL,(unsigned int)val & 4294967055U);
  }
  else ;
  
#line 560 
  (*(adapter->crb_write))(adapter,122683628UL,30U);
  
#line 562 
  (*(adapter->crb_write))(adapter,122683468UL,8U);
  
#line 564 
  (*(adapter->crb_write))(adapter,123732044UL,8U);
  
#line 569 
  (*(adapter->crb_write))(adapter,118489096UL,0U);
  
#line 570 
  (*(adapter->crb_write))(adapter,118489100UL,0U);
  
#line 572 
  (*(adapter->crb_write))(adapter,119537672UL,0U);
  
#line 573 
  (*(adapter->crb_write))(adapter,119537676UL,0U);
  
#line 575 
  (*(adapter->crb_write))(adapter,120586248UL,0U);
  
#line 576 
  (*(adapter->crb_write))(adapter,120586252UL,0U);
  
#line 578 
  (*(adapter->crb_write))(adapter,121634824UL,0U);
  
#line 579 
  (*(adapter->crb_write))(adapter,121634828UL,0U);
  
#line 580 
  __retres = 0;
  return_label: 
#line 580 
                return __retres;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static struct uni_table_desc *nx_get_table_desc(u8 const *unirom, int section)
{
  struct uni_table_desc *__retres;
  uint32_t i;
  
#line 586 
  struct uni_table_desc *directory = (struct uni_table_desc *)unirom;
  
#line 587 
  __le32 entries = directory->num_entries;
  
#line 589 
  i = 0U;
  
#line 589 
  goto ldv_52456;
  ldv_52455: 
#line 590 
  ;
  {
    
#line 591 
    __le32 offs = directory->findex + directory->entry_size * i;
    
#line 593 
    __le32 tab_type = *((u32 *)(unirom + offs) + 8U);
    
#line 595 
    if (tab_type == (unsigned int)section) {
      
#line 596 
      __retres = (struct uni_table_desc *)(unirom + offs);
      
#line 596 
      goto return_label;
    }
    else ;
  }
  
#line 589 
  i += 1U;
  ldv_52456: 
#line 590 
  ;
  
#line 589 
  if (i < entries) 
#line 591 
                   goto ldv_52455; else 
#line 594 
                                        goto ldv_52457;
  ldv_52457: 
#line 595 
  ;
  
#line 599 
  __retres = (struct uni_table_desc *)0;
  return_label: 
#line 599 
                return __retres;
}


#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_nic_validate_header(struct netxen_adapter *adapter)
{
  int __retres;
  u32 tab_size;
  __le32 entries;
  __le32 entry_size;
  
#line 607 
  u8 const *unirom = (adapter->fw)->data;
  
#line 608 
  struct uni_table_desc *directory = (struct uni_table_desc *)unirom;
  
#line 609 
  u32 fw_file_size = (unsigned int)(adapter->fw)->size;
  
#line 614 
  if (fw_file_size <= 55U) {
    
#line 615 
    __retres = -22;
    
#line 615 
    goto return_label;
  }
  else ;
  
#line 617 
  entries = directory->num_entries;
  
#line 618 
  entry_size = directory->entry_size;
  
#line 619 
  tab_size = directory->findex + entries * entry_size;
  
#line 621 
  if (fw_file_size < tab_size) {
    
#line 622 
    __retres = -22;
    
#line 622 
    goto return_label;
  }
  else ;
  
#line 624 
  __retres = 0;
  return_label: 
#line 624 
                return __retres;
}


#line 628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_nic_validate_bootld(struct netxen_adapter *adapter)
{
  int __retres;
  struct uni_table_desc *tab_desc;
  struct uni_data_desc *descr;
  u32 offs;
  u32 tab_size;
  u32 data_size;
  
#line 632 
  u8 const *unirom = (adapter->fw)->data;
  
#line 633 
  __le32 idx = (unsigned int)*((int *)(unirom + adapter->file_prd_off) + 27U);
  
#line 639 
  tab_desc = nx_get_table_desc(unirom,6);
  
#line 641 
  if (tab_desc == (struct uni_table_desc *)0) {
    
#line 642 
    __retres = -22;
    
#line 642 
    goto return_label;
  }
  else ;
  
#line 644 
  tab_size = tab_desc->findex + tab_desc->entry_size * (idx + 1U);
  
#line 647 
  if ((adapter->fw)->size < (unsigned long)tab_size) {
    
#line 648 
    __retres = -22;
    
#line 648 
    goto return_label;
  }
  else ;
  
#line 650 
  offs = tab_desc->findex + tab_desc->entry_size * idx;
  
#line 652 
  descr = (struct uni_data_desc *)(unirom + offs);
  
#line 654 
  data_size = descr->findex + descr->size;
  
#line 656 
  if ((adapter->fw)->size < (unsigned long)data_size) {
    
#line 657 
    __retres = -22;
    
#line 657 
    goto return_label;
  }
  else ;
  
#line 659 
  __retres = 0;
  return_label: 
#line 659 
                return __retres;
}


#line 663  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_nic_validate_fw(struct netxen_adapter *adapter)
{
  int __retres;
  struct uni_table_desc *tab_desc;
  struct uni_data_desc *descr;
  u32 offs;
  u32 tab_size;
  u32 data_size;
  
#line 667 
  u8 const *unirom = (adapter->fw)->data;
  
#line 668 
  __le32 idx = (unsigned int)*((int *)(unirom + adapter->file_prd_off) + 29U);
  
#line 674 
  tab_desc = nx_get_table_desc(unirom,7);
  
#line 676 
  if (tab_desc == (struct uni_table_desc *)0) {
    
#line 677 
    __retres = -22;
    
#line 677 
    goto return_label;
  }
  else ;
  
#line 679 
  tab_size = tab_desc->findex + tab_desc->entry_size * (idx + 1U);
  
#line 682 
  if ((adapter->fw)->size < (unsigned long)tab_size) {
    
#line 683 
    __retres = -22;
    
#line 683 
    goto return_label;
  }
  else ;
  
#line 685 
  offs = tab_desc->findex + tab_desc->entry_size * idx;
  
#line 687 
  descr = (struct uni_data_desc *)(unirom + offs);
  
#line 688 
  data_size = descr->findex + descr->size;
  
#line 690 
  if ((adapter->fw)->size < (unsigned long)data_size) {
    
#line 691 
    __retres = -22;
    
#line 691 
    goto return_label;
  }
  else ;
  
#line 693 
  __retres = 0;
  return_label: 
#line 693 
                return __retres;
}


#line 698  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_nic_validate_product_offs(struct netxen_adapter *adapter)
{
  int __retres;
  struct uni_table_desc *ptab_descr;
  int tmp_0;
  __le32 entries;
  __le32 entry_size;
  u32 tab_size;
  u32 i;
  
#line 701 
  u8 const *unirom = (adapter->fw)->data;
  
#line 702 
  if ((unsigned int)adapter->ahw.revision_id > 37U) 
#line 702 
                                                    tmp_0 = netxen_p3_has_mn(adapter); else 
                                                                    
#line 702 
                                                                    tmp_0 = 1;
  
#line 702 
  int mn_present = tmp_0;
  
#line 709 
  ptab_descr = nx_get_table_desc(unirom,0);
  
#line 710 
  if (ptab_descr == (struct uni_table_desc *)0) {
    
#line 711 
    __retres = -22;
    
#line 711 
    goto return_label;
  }
  else ;
  
#line 713 
  entries = ptab_descr->num_entries;
  
#line 714 
  entry_size = ptab_descr->entry_size;
  
#line 715 
  tab_size = ptab_descr->findex + entries * entry_size;
  
#line 717 
  if ((adapter->fw)->size < (unsigned long)tab_size) {
    
#line 718 
    __retres = -22;
    
#line 718 
    goto return_label;
  }
  else ;
  nomn: 
#line 720 
  ;
  
#line 721 
  i = 0U;
  
#line 721 
  goto ldv_52504;
  ldv_52503: 
#line 722 
  ;
  {
    __le32 flags;
    __le32 file_chiprev;
    __le32 offs;
    uint32_t flagbit;
    int tmp_1;
    
#line 724 
    u8 chiprev = adapter->ahw.revision_id;
    
#line 727 
    offs = ptab_descr->findex + ptab_descr->entry_size * i;
    
#line 729 
    flags = (unsigned int)*((int *)(unirom + offs) + 11U);
    
#line 730 
    file_chiprev = (unsigned int)*((int *)(unirom + offs) + 10U);
    
#line 733 
    if (mn_present != 0) 
#line 733 
                         tmp_1 = 1; else 
#line 733 
                                         tmp_1 = 2;
    
#line 733 
    flagbit = (unsigned int)tmp_1;
    
#line 735 
    if ((unsigned int)chiprev == file_chiprev && (((unsigned long long)flags >> flagbit) & 1ULL) != 0ULL) {
      
#line 737 
      adapter->file_prd_off = offs;
      
#line 738 
      __retres = 0;
      
#line 738 
      goto return_label;
    }
    else ;
  }
  
#line 721 
  i += 1U;
  ldv_52504: 
#line 722 
  ;
  
#line 721 
  if (i < entries) 
#line 723 
                   goto ldv_52503; else 
#line 726 
                                        goto ldv_52505;
  ldv_52505: 
#line 727 
  ;
  
#line 742 
  if (mn_present != 0 && (unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 743 
    mn_present = 0;
    
#line 744 
    goto nomn;
  }
  else ;
  
#line 747 
  __retres = -22;
  return_label: 
#line 747 
                return __retres;
}


#line 751  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_nic_validate_unified_romimage(struct netxen_adapter *adapter)
{
  int __retres;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 753 
  tmp = netxen_nic_validate_header(adapter);
  
#line 753 
  if (tmp != 0) {
    
#line 754 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"unified image: header validation failed\n");
    
#line 756 
    __retres = -22;
    
#line 756 
    goto return_label;
  }
  else ;
  
#line 759 
  tmp_0 = netxen_nic_validate_product_offs(adapter);
  
#line 759 
  if (tmp_0 != 0) {
    
#line 760 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"unified image: product validation failed\n");
    
#line 762 
    __retres = -22;
    
#line 762 
    goto return_label;
  }
  else ;
  
#line 765 
  tmp_1 = netxen_nic_validate_bootld(adapter);
  
#line 765 
  if (tmp_1 != 0) {
    
#line 766 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"unified image: bootld validation failed\n");
    
#line 768 
    __retres = -22;
    
#line 768 
    goto return_label;
  }
  else ;
  
#line 771 
  tmp_2 = netxen_nic_validate_fw(adapter);
  
#line 771 
  if (tmp_2 != 0) {
    
#line 772 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"unified image: firmware validation failed\n");
    
#line 774 
    __retres = -22;
    
#line 774 
    goto return_label;
  }
  else ;
  
#line 777 
  __retres = 0;
  return_label: 
#line 777 
                return __retres;
}


#line 780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static struct uni_data_desc *nx_get_data_desc(struct netxen_adapter *adapter, u32 section, u32 idx_offset)
{
  struct uni_data_desc *__retres;
  struct uni_table_desc *tab_desc;
  __le32 offs;
  
#line 783 
  u8 const *unirom = (adapter->fw)->data;
  
#line 784 
  int idx = *((int *)(unirom + adapter->file_prd_off) + idx_offset);
  
#line 789 
  tab_desc = nx_get_table_desc(unirom,(int)section);
  
#line 791 
  if (tab_desc == (struct uni_table_desc *)0) {
    
#line 792 
    __retres = (struct uni_data_desc *)0;
    
#line 792 
    goto return_label;
  }
  else ;
  
#line 794 
  offs = tab_desc->findex + tab_desc->entry_size * (unsigned int)idx;
  
#line 797 
  __retres = (struct uni_data_desc *)(unirom + offs);
  return_label: 
#line 797 
                return __retres;
}


#line 801  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static u8 *nx_get_bootld_offs(struct netxen_adapter *adapter)
{
  u8 *__retres;
  
#line 803 
  u32 offs = 65536U;
  
#line 805 
  if ((unsigned int)adapter->fw_type == 3U) {
    struct uni_data_desc *tmp;
    
#line 806 
    tmp = nx_get_data_desc(adapter,6U,27U);
    
#line 806 
    offs = tmp->findex;
  }
  else ;
  
#line 810 
  __retres = (u8 *)((adapter->fw)->data + offs);
  
#line 810 
  return __retres;
}


#line 814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static u8 *nx_get_fw_offs(struct netxen_adapter *adapter)
{
  u8 *__retres;
  
#line 816 
  u32 offs = 274432U;
  
#line 818 
  if ((unsigned int)adapter->fw_type == 3U) {
    struct uni_data_desc *tmp;
    
#line 819 
    tmp = nx_get_data_desc(adapter,7U,29U);
    
#line 819 
    offs = tmp->findex;
  }
  else ;
  
#line 823 
  __retres = (u8 *)((adapter->fw)->data + offs);
  
#line 823 
  return __retres;
}


#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static __le32 nx_get_fw_size(struct netxen_adapter *adapter)
{
  __le32 __retres;
  
#line 829 
  if ((unsigned int)adapter->fw_type == 3U) {
    struct uni_data_desc *tmp;
    
#line 830 
    tmp = nx_get_data_desc(adapter,7U,29U);
    
#line 830 
    __retres = tmp->size;
    
#line 830 
    goto return_label;
  }
  else {
    
#line 834 
    __retres = *((u32 *)((adapter->fw)->data + 4097036U));
    
#line 834 
    goto return_label;
  }
  return_label: 
#line 829 
                return __retres;
}


#line 839  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static __le32 nx_get_fw_version(struct netxen_adapter *adapter)
{
  __le32 __retres;
  struct uni_data_desc *fw_data_desc;
  __le32 major;
  __le32 minor;
  __le32 sub;
  u8 const *ver_str;
  int i;
  
#line 842 
  struct firmware const *fw = adapter->fw;
  
#line 845 
  int ret = 0;
  
#line 847 
  if ((unsigned int)adapter->fw_type == 3U) {
    int tmp;
    
#line 849 
    fw_data_desc = nx_get_data_desc(adapter,7U,29U);
    
#line 851 
    ver_str = fw->data + ((unsigned long)(fw_data_desc->findex + fw_data_desc->size) + 18446744073709551599U);
    
#line 854 
    i = 0;
    
#line 854 
    goto ldv_52542;
    ldv_52541: 
#line 855 
    ;
    
#line 855 
    tmp = strncmp((char const *)(ver_str + i),"REV=",4UL);
    
#line 855 
    if (tmp == 0) {
      
#line 856 
      ret = sscanf((char const *)(ver_str + ((unsigned int)i + 4U)),"%u.%u.%u ",& major,& minor,& sub);
      
#line 858 
      goto ldv_52540;
    }
    else ;
    
#line 854 
    i += 1;
    ldv_52542: 
#line 855 
    ;
    
#line 854 
    if (i <= 11) 
#line 856 
                 goto ldv_52541; else 
#line 859 
                                      goto ldv_52540;
    ldv_52540: 
#line 860 
    ;
    
#line 862 
    if (ret != 3) {
      
#line 863 
      __retres = 0U;
      
#line 863 
      goto return_label;
    }
    else ;
    
#line 865 
    __retres = ((minor << 8) + major) + (sub << 16);
    
#line 865 
    goto return_label;
  }
  else {
    
#line 868 
    __retres = *((u32 *)(fw->data + 4097032U));
    
#line 868 
    goto return_label;
  }
  return_label: 
#line 847 
                return __retres;
}


#line 872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static __le32 nx_get_bios_version(struct netxen_adapter *adapter)
{
  __le32 __retres;
  __le32 bios_ver;
  
#line 874 
  struct firmware const *fw = adapter->fw;
  
#line 875 
  __le32 prd_off = adapter->file_prd_off;
  
#line 877 
  if ((unsigned int)adapter->fw_type == 3U) {
    
#line 878 
    bios_ver = *((u32 *)(fw->data + prd_off) + 12U);
    
#line 880 
    __retres = ((bios_ver << 16) + ((bios_ver >> 8) & 65280U)) + (bios_ver >> 24);
    
#line 880 
    goto return_label;
  }
  else {
    
#line 883 
    __retres = *((u32 *)(fw->data + 4098108U));
    
#line 883 
    goto return_label;
  }
  return_label: 
#line 877 
                return __retres;
}


#line 888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_need_fw_reset(struct netxen_adapter *adapter)
{
  int __retres;
  u32 count;
  u32 old_count;
  u32 val;
  u32 version;
  u32 major;
  u32 minor;
  u32 build;
  int i;
  int timeout;
  u8 fw_type;
  u32 tmp;
  unsigned long tmp_0;
  
#line 896 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 897 
    __retres = 1;
    
#line 897 
    goto return_label;
  }
  else ;
  
#line 899 
  if ((unsigned int)adapter->need_fw_reset != 0U) {
    
#line 900 
    __retres = 1;
    
#line 900 
    goto return_label;
  }
  else ;
  
#line 903 
  tmp = (*(adapter->crb_read))(adapter,136323664UL);
  
#line 903 
  if (tmp == 65535U) {
    
#line 904 
    __retres = 1;
    
#line 904 
    goto return_label;
  }
  else ;
  
#line 906 
  old_count = (*(adapter->crb_read))(adapter,136323248UL);
  
#line 908 
  i = 0;
  
#line 908 
  goto ldv_52564;
  ldv_52563: 
#line 909 
  ;
  
#line 910 
  tmp_0 = msleep_interruptible(200U);
  
#line 910 
  timeout = (int)tmp_0;
  
#line 911 
  if (timeout != 0) {
    
#line 912 
    (*(adapter->crb_write))(adapter,136323664UL,65535U);
    
#line 914 
    __retres = -4;
    
#line 914 
    goto return_label;
  }
  else ;
  
#line 917 
  count = (*(adapter->crb_read))(adapter,136323248UL);
  
#line 918 
  if (count != old_count) 
#line 919 
                          goto ldv_52562; else ;
  
#line 908 
  i += 1;
  ldv_52564: 
#line 909 
  ;
  
#line 908 
  if (i <= 9) 
#line 910 
              goto ldv_52563; else 
#line 913 
                                   goto ldv_52562;
  ldv_52562: 
#line 914 
  ;
  
#line 923 
  if (count == old_count) {
    
#line 924 
    __retres = 1;
    
#line 924 
    goto return_label;
  }
  else ;
  
#line 927 
  if (adapter->fw != (struct firmware const *)0) {
    
#line 929 
    val = nx_get_fw_version(adapter);
    
#line 931 
    version = ((val << 24) + (((val >> 8) << 16) & 16711680U)) + (val >> 16);
    
#line 933 
    major = (*(adapter->crb_read))(adapter,136323408UL);
    
#line 934 
    minor = (*(adapter->crb_read))(adapter,136323412UL);
    
#line 935 
    build = (*(adapter->crb_read))(adapter,136323416UL);
    
#line 937 
    if (((major << 24) + (minor << 16)) + build < version) {
      
#line 938 
      __retres = 1;
      
#line 938 
      goto return_label;
    }
    else ;
    
#line 940 
    if (((major << 24) + (minor << 16)) + build == version && (unsigned int)adapter->fw_type != 3U) {
      
#line 943 
      val = (*(adapter->crb_read))(adapter,102760448UL);
      
#line 944 
      if ((val & 4U) != 0U) 
#line 944 
                            fw_type = (unsigned char)1U; else 
#line 944 
                                                              fw_type = (unsigned char)2U;
      
#line 947 
      if ((int)adapter->fw_type != (int)fw_type) {
        
#line 948 
        __retres = 1;
        
#line 948 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 952 
  __retres = 0;
  return_label: 
#line 952 
                return __retres;
}


#line 958  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_check_flash_fw_compatibility(struct netxen_adapter *adapter)
{
  int __retres;
  u32 flash_fw_ver;
  u32 min_fw_ver;
  int tmp;
  
#line 962 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 963 
    __retres = 0;
    
#line 963 
    goto return_label;
  }
  else ;
  
#line 965 
  tmp = netxen_rom_fast_read(adapter,4097032,(int *)(& flash_fw_ver));
  
#line 965 
  if (tmp != 0) {
    
#line 967 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Unable to read flash fw");
    
#line 969 
    __retres = -5;
    
#line 969 
    goto return_label;
  }
  else ;
  
#line 972 
  flash_fw_ver = ((flash_fw_ver << 24) + (((flash_fw_ver >> 8) << 16) & 16711680U)) + (flash_fw_ver >> 16);
  
#line 973 
  min_fw_ver = 67109369U;
  
#line 974 
  if (flash_fw_ver >= min_fw_ver) {
    
#line 975 
    __retres = 0;
    
#line 975 
    goto return_label;
  }
  else ;
  
#line 977 
  _dev_info((struct device const *)(& (adapter->pdev)->dev),"Flash fw[%d.%d.%d] is < min fw supported",flash_fw_ver >> 24,(flash_fw_ver >> 16) & 255U,flash_fw_ver & 65535U);
  
#line 981 
  __retres = -22;
  return_label: 
#line 981 
                return __retres;
}


#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static char *fw_name[5U] = {(char *)"nxromimg.bin", (char *)"nx3fwct.bin", (char *)"nx3fwmn.bin", (char *)"phanfw.bin", (char *)"flash"};

#line 993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_load_firmware(struct netxen_adapter *adapter)
{
  int __retres;
  u64 *ptr64;
  u32 i;
  u32 flashaddr;
  u32 size;
  
#line 997 
  struct firmware const *fw = adapter->fw;
  
#line 998 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1000 
  _dev_info((struct device const *)(& pdev->dev),"loading firmware from %s\n",fw_name[(int)adapter->fw_type]);
  
#line 1003 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 1004 
                                                     (*(adapter->crb_write))(adapter,154140728UL,1U); else ;
  
#line 1006 
  if (fw != (struct firmware const *)0) {
    __le64 data;
    int tmp_0;
    __le32 tmp_1;
    int tmp_3;
    __le32 tmp_4;
    
#line 1009 
    size = 26112U;
    
#line 1011 
    ptr64 = (u64 *)nx_get_bootld_offs(adapter);
    
#line 1012 
    flashaddr = 65536U;
    
#line 1014 
    i = 0U;
    
#line 1014 
    goto ldv_52582;
    ldv_52581: 
#line 1015 
    ;
    
#line 1015 
    data = *(ptr64 + i);
    
#line 1017 
    tmp_0 = (*(adapter->pci_mem_write))(adapter,(unsigned long long)flashaddr,data);
    
#line 1017 
    if (tmp_0 != 0) {
      
#line 1018 
      __retres = -5;
      
#line 1018 
      goto return_label;
    }
    else ;
    
#line 1020 
    flashaddr += 8U;
    
#line 1014 
    i += 1U;
    ldv_52582: 
#line 1015 
    ;
    
#line 1014 
    if (i < size) 
#line 1016 
                  goto ldv_52581; else 
#line 1019 
                                       goto ldv_52583;
    ldv_52583: 
#line 1020 
    ;
    
#line 1023 
    tmp_1 = nx_get_fw_size(adapter);
    
#line 1023 
    size = tmp_1 / 8U;
    
#line 1025 
    ptr64 = (u64 *)nx_get_fw_offs(adapter);
    
#line 1026 
    flashaddr = 274432U;
    
#line 1028 
    i = 0U;
    
#line 1028 
    goto ldv_52585;
    ldv_52584: 
#line 1029 
    ;
    
#line 1029 
    data = *(ptr64 + i);
    
#line 1031 
    tmp_3 = (*(adapter->pci_mem_write))(adapter,(unsigned long long)flashaddr,data);
    
#line 1031 
    if (tmp_3 != 0) {
      
#line 1033 
      __retres = -5;
      
#line 1033 
      goto return_label;
    }
    else ;
    
#line 1035 
    flashaddr += 8U;
    
#line 1028 
    i += 1U;
    ldv_52585: 
#line 1029 
    ;
    
#line 1028 
    if (i < size) 
#line 1030 
                  goto ldv_52584; else 
#line 1033 
                                       goto ldv_52586;
    ldv_52586: 
#line 1034 
    ;
    
#line 1038 
    tmp_4 = nx_get_fw_size(adapter);
    
#line 1038 
    size = tmp_4 & 7U;
    
#line 1039 
    if (size != 0U) {
      int tmp_5;
      
#line 1040 
      data = *(ptr64 + i);
      
#line 1042 
      tmp_5 = (*(adapter->pci_mem_write))(adapter,(unsigned long long)flashaddr,data);
      
#line 1042 
      if (tmp_5 != 0) {
        
#line 1044 
        __retres = -5;
        
#line 1044 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  else {
    u64 data_0;
    u32 hi;
    u32 lo;
    int tmp_6;
    int tmp_7;
    int tmp_8;
    
#line 1051 
    size = 26112U;
    
#line 1052 
    flashaddr = 65536U;
    
#line 1054 
    i = 0U;
    
#line 1054 
    goto ldv_52591;
    ldv_52590: 
#line 1055 
    ;
    
#line 1055 
    tmp_6 = netxen_rom_fast_read(adapter,(int)flashaddr,(int *)(& lo));
    
#line 1055 
    if (tmp_6 != 0) {
      
#line 1057 
      __retres = -5;
      
#line 1057 
      goto return_label;
    }
    else ;
    
#line 1058 
    tmp_7 = netxen_rom_fast_read(adapter,(int)(flashaddr + 4U),(int *)(& hi));
    
#line 1058 
    if (tmp_7 != 0) {
      
#line 1060 
      __retres = -5;
      
#line 1060 
      goto return_label;
    }
    else ;
    
#line 1063 
    data_0 = ((unsigned long long)hi << 32) | (unsigned long long)lo;
    
#line 1065 
    tmp_8 = (*(adapter->pci_mem_write))(adapter,(unsigned long long)flashaddr,data_0);
    
#line 1065 
    if (tmp_8 != 0) {
      
#line 1067 
      __retres = -5;
      
#line 1067 
      goto return_label;
    }
    else ;
    
#line 1069 
    flashaddr += 8U;
    
#line 1054 
    i += 1U;
    ldv_52591: 
#line 1055 
    ;
    
#line 1054 
    if (i < size) 
#line 1056 
                  goto ldv_52590; else 
#line 1059 
                                       goto ldv_52592;
    ldv_52592: 
#line 1060 
    ;
  }
  
#line 1072 
  msleep(1U);
  
#line 1074 
  if ((unsigned int)adapter->ahw.revision_id > 79U) {
    
#line 1075 
    (*(adapter->crb_write))(adapter,118489112UL,4128U);
    
#line 1076 
    (*(adapter->crb_write))(adapter,154140680UL,8388638U);
  }
  else 
    
#line 1077 
    if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1078 
                                                      (*(adapter->crb_write))(adapter,154140680UL,8388637U);
    else {
      
#line 1080 
      (*(adapter->crb_write))(adapter,154140840UL,16383U);
      
#line 1081 
      (*(adapter->crb_write))(adapter,154140728UL,0U);
    }
  
#line 1084 
  __retres = 0;
  return_label: 
#line 1084 
                return __retres;
}


#line 1088  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_validate_firmware(struct netxen_adapter *adapter)
{
  int __retres;
  __le32 val;
  __le32 flash_fw_ver;
  u32 file_fw_ver;
  u32 min_ver;
  u32 bios;
  u32 crbinit_fix_fw;
  int tmp_0;
  int tmp_1;
  
#line 1093 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1094 
  struct firmware const *fw = adapter->fw;
  
#line 1095 
  u8 fw_type = adapter->fw_type;
  
#line 1098 
  if ((unsigned int)fw_type == 3U) {
    int tmp;
    
#line 1099 
    tmp = netxen_nic_validate_unified_romimage(adapter);
    
#line 1099 
    if (tmp != 0) {
      
#line 1100 
      __retres = -22;
      
#line 1100 
      goto return_label;
    }
    else ;
  }
  else {
    
#line 1102 
    val = *((u32 *)(fw->data + 16680U));
    
#line 1103 
    if (val != 305419896U) {
      
#line 1104 
      __retres = -22;
      
#line 1104 
      goto return_label;
    }
    else ;
    
#line 1106 
    if (fw->size <= 4194302UL) {
      
#line 1107 
      __retres = -22;
      
#line 1107 
      goto return_label;
    }
    else ;
  }
  
#line 1110 
  val = nx_get_fw_version(adapter);
  
#line 1112 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1113 
                                                    min_ver = 67109369U; else 
                                                                    
#line 1115 
                                                                    min_ver = 50594008U;
  
#line 1117 
  file_fw_ver = ((val << 24) + (((val >> 8) << 16) & 16711680U)) + (val >> 16);
  
#line 1119 
  if (file_fw_ver >> 24 > 4U || file_fw_ver < min_ver) {
    
#line 1121 
    dev_err((struct device const *)(& pdev->dev),"%s: firmware version %d.%d.%d unsupported\n",fw_name[(int)fw_type],file_fw_ver >> 24,(file_fw_ver >> 16) & 255U,file_fw_ver & 65535U);
    
#line 1125 
    __retres = -22;
    
#line 1125 
    goto return_label;
  }
  else ;
  
#line 1127 
  val = nx_get_bios_version(adapter);
  
#line 1128 
  netxen_rom_fast_read(adapter,4098108,(int *)(& bios));
  
#line 1129 
  if (val != bios) {
    
#line 1130 
    dev_err((struct device const *)(& pdev->dev),"%s: firmware bios is incompatible\n",fw_name[(int)fw_type]);
    
#line 1132 
    __retres = -22;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1135 
  tmp_0 = netxen_rom_fast_read(adapter,4097032,(int *)(& flash_fw_ver));
  
#line 1135 
  if (tmp_0 != 0) {
    
#line 1137 
    dev_err((struct device const *)(& pdev->dev),"Unable to read flash fw version\n");
    
#line 1138 
    __retres = -5;
    
#line 1138 
    goto return_label;
  }
  else ;
  
#line 1140 
  flash_fw_ver = ((flash_fw_ver << 24) + (((flash_fw_ver >> 8) << 16) & 16711680U)) + (flash_fw_ver >> 16);
  
#line 1143 
  crbinit_fix_fw = 67109418U;
  
#line 1144 
  if ((file_fw_ver >= crbinit_fix_fw && flash_fw_ver < crbinit_fix_fw) && (unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 1146 
    dev_err((struct device const *)(& pdev->dev),"Incompatibility detected between driver ");
    
#line 1150 
    __retres = -22;
    
#line 1150 
    goto return_label;
  }
  else ;
  
#line 1154 
  tmp_1 = netxen_p3_has_mn(adapter);
  
#line 1154 
  if (tmp_1 == 0) 
#line 1154 
                  goto _LOR;
  else 
    
#line 1154 
    if ((unsigned int)adapter->ahw.revision_id <= 37U) {
      _LOR: 
#line 1156 
      ;
      
#line 1156 
      if (flash_fw_ver > file_fw_ver) {
        
#line 1157 
        _dev_info((struct device const *)(& pdev->dev),"%s: firmware is older than flash\n",fw_name[(int)fw_type]);
        
#line 1159 
        __retres = -22;
        
#line 1159 
        goto return_label;
      }
      else ;
    }
    else ;
  
#line 1163 
  (*(adapter->crb_write))(adapter,136323580UL,305419896U);
  
#line 1164 
  __retres = 0;
  return_label: 
#line 1164 
                return __retres;
}


#line 1168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static void nx_get_next_fwtype(struct netxen_adapter *adapter)
{
  u8 fw_type;
  
#line 1172 
  switch ((int)adapter->fw_type) {
    case 255: 
#line 1173 
    ;
    
#line 1174 
    fw_type = (unsigned char)3U;
    
#line 1175 
    goto ldv_52610;
    case 3: 
#line 1177 
    ;
    
#line 1178 
    if ((unsigned int)adapter->ahw.revision_id > 79U) 
#line 1179 
                                                      fw_type = (unsigned char)4U;
    else 
      
#line 1180 
      if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 1181 
                                                         fw_type = (unsigned char)0U;
      else {
        int tmp;
        
#line 1182 
        tmp = netxen_p3_has_mn(adapter);
        
#line 1182 
        if (tmp != 0) 
#line 1183 
                      fw_type = (unsigned char)2U; else 
#line 1185 
                                                        fw_type = (unsigned char)1U;
      }
    
#line 1186 
    goto ldv_52610;
    case 2: 
#line 1188 
    ;
    
#line 1189 
    fw_type = (unsigned char)1U;
    
#line 1190 
    goto ldv_52610;
    case 0: 
#line 1192 
    ;
    case 1: 
#line 1193 
    ;
    default: 
#line 1194 
    ;
    
#line 1195 
    fw_type = (unsigned char)4U;
    
#line 1196 
    goto ldv_52610;
  }
  ldv_52610: 
#line 1199 
  ;
  
#line 1199 
  adapter->fw_type = fw_type;
  
#line 1200 
  return;
}


#line 1203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_p3_has_mn(struct netxen_adapter *adapter)
{
  int __retres;
  u32 capability;
  u32 flashed_ver;
  
#line 1206 
  capability = 0U;
  
#line 1209 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 1210 
    __retres = 1;
    
#line 1210 
    goto return_label;
  }
  else ;
  
#line 1212 
  netxen_rom_fast_read(adapter,4097032,(int *)(& flashed_ver));
  
#line 1214 
  flashed_ver = ((flashed_ver << 24) + (((flashed_ver >> 8) << 16) & 16711680U)) + (flashed_ver >> 16);
  
#line 1216 
  if (flashed_ver > 67109083U) {
    
#line 1218 
    capability = (*(adapter->crb_read))(adapter,136323116UL);
    
#line 1219 
    if ((capability & 1U) != 0U) {
      
#line 1220 
      __retres = 1;
      
#line 1220 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1222 
  __retres = 0;
  return_label: 
#line 1222 
                return __retres;
}


#line 1225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_request_firmware(struct netxen_adapter *adapter)
{
  
#line 1227 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1228 
  int rc = 0;
  
#line 1230 
  adapter->fw_type = (unsigned char)255U;
  next: 
#line 1232 
  ;
  
#line 1233 
  nx_get_next_fwtype(adapter);
  
#line 1235 
  if ((unsigned int)adapter->fw_type == 4U) 
#line 1236 
                                            adapter->fw = (struct firmware const *)0;
  else {
    
#line 1238 
    rc = request_firmware(& adapter->fw,(char const *)fw_name[(int)adapter->fw_type],& pdev->dev);
    
#line 1240 
    if (rc != 0) 
#line 1241 
                 goto next; else ;
    
#line 1243 
    rc = netxen_validate_firmware(adapter);
    
#line 1244 
    if (rc != 0) {
      
#line 1245 
      release_firmware(adapter->fw);
      
#line 1246 
      msleep(1U);
      
#line 1247 
      goto next;
    }
    else ;
  }
  
#line 1250 
  return;
}


#line 1254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_release_firmware(struct netxen_adapter *adapter)
{
  
#line 1256 
  release_firmware(adapter->fw);
  
#line 1257 
  adapter->fw = (struct firmware const *)0;
  
#line 1258 
  return;
}


#line 1260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_init_dummy_dma(struct netxen_adapter *adapter)
{
  int __retres;
  u64 addr;
  u32 hi;
  u32 lo;
  
#line 1265 
  if ((unsigned int)adapter->ahw.revision_id > 37U) {
    
#line 1266 
    __retres = 0;
    
#line 1266 
    goto return_label;
  }
  else ;
  
#line 1268 
  adapter->dummy_dma.addr = pci_alloc_consistent(adapter->pdev,1024UL,& adapter->dummy_dma.phys_addr);
  
#line 1271 
  if (adapter->dummy_dma.addr == (void *)0) {
    
#line 1272 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"ERROR: Could not allocate dummy DMA memory\n");
    
#line 1274 
    __retres = -12;
    
#line 1274 
    goto return_label;
  }
  else ;
  
#line 1277 
  addr = adapter->dummy_dma.phys_addr;
  
#line 1278 
  hi = (unsigned int)(addr >> 32);
  
#line 1279 
  lo = (unsigned int)addr;
  
#line 1281 
  (*(adapter->crb_write))(adapter,136323644UL,hi);
  
#line 1282 
  (*(adapter->crb_write))(adapter,136323648UL,lo);
  
#line 1284 
  __retres = 0;
  return_label: 
#line 1284 
                return __retres;
}


#line 1295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_free_dummy_dma(struct netxen_adapter *adapter)
{
  u32 ctrl;
  
#line 1297 
  int i = 100;
  
#line 1300 
  if ((unsigned int)adapter->ahw.revision_id > 37U) 
#line 1301 
                                                    goto return_label; else ;
  
#line 1303 
  if (adapter->dummy_dma.addr == (void *)0) 
#line 1304 
                                            goto return_label; else ;
  
#line 1306 
  ctrl = (*(adapter->crb_read))(adapter,136323092UL);
  
#line 1307 
  if ((ctrl & 1U) != 0U) {
    
#line 1308 
    (*(adapter->crb_write))(adapter,136323092UL,ctrl | 2U);
    
#line 1310 
    goto ldv_52643;
    ldv_52642: 
#line 1311 
    ;
    
#line 1312 
    msleep(50U);
    
#line 1314 
    ctrl = (*(adapter->crb_read))(adapter,136323092UL);
    
#line 1316 
    i -= 1;
    
#line 1316 
    if (i == 0) 
#line 1317 
                goto ldv_52641; else ;
    ldv_52643: 
#line 1318 
    ;
    
#line 1310 
    if ((ctrl & 1U) != 0U) 
#line 1312 
                           goto ldv_52642; else 
#line 1315 
                                                goto ldv_52641;
    ldv_52641: 
#line 1316 
    ;
  }
  else ;
  
#line 1321 
  if (i != 0) {
    
#line 1322 
    pci_free_consistent(adapter->pdev,1024UL,adapter->dummy_dma.addr,adapter->dummy_dma.phys_addr);
    
#line 1326 
    adapter->dummy_dma.addr = (void *)0;
  }
  else 
#line 1328 
       dev_err((struct device const *)(& (adapter->pdev)->dev),"dma_watchdog_shutdown failed\n");
  return_label: 
#line 1329 
                return;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_phantom_init(struct netxen_adapter *adapter, int pegtune_val)
{
  int __retres;
  
#line 1333 
  u32 val = 0U;
  
#line 1334 
  int retries = 60;
  
#line 1336 
  if (pegtune_val != 0) {
    
#line 1337 
    __retres = 0;
    
#line 1337 
    goto return_label;
  }
  else ;
  ldv_52656: 
#line 1338 
  ;
  
#line 1340 
  val = (*(adapter->crb_read))(adapter,136323664UL);
  
#line 1341 
  switch (val) {
    case (u32)65281: 
#line 1342 
    ;
    case (u32)61455: 
#line 1343 
    ;
    
#line 1344 
    __retres = 0;
    
#line 1344 
    goto return_label;
    case (u32)65535: 
#line 1345 
    ;
    
#line 1346 
    goto out_err;
    default: 
#line 1347 
    ;
    
#line 1348 
    goto ldv_52655;
  }
  ldv_52655: 
#line 1351 
  ;
  
#line 1351 
  msleep(500U);
  
#line 1353 
  retries -= 1;
  
#line 1353 
  if (retries != 0) 
#line 1355 
                    goto ldv_52656; else 
#line 1358 
                                         goto ldv_52657;
  ldv_52657: 
#line 1359 
  ;
  
#line 1355 
  (*(adapter->crb_write))(adapter,136323664UL,65535U);
  out_err: 
#line 1357 
  ;
  
#line 1358 
  dev_warn((struct device const *)(& (adapter->pdev)->dev),"firmware init failed\n");
  
#line 1359 
  __retres = -5;
  return_label: 
#line 1359 
                return __retres;
}


#line 1363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_receive_peg_ready(struct netxen_adapter *adapter)
{
  int __retres;
  
#line 1365 
  u32 val = 0U;
  
#line 1366 
  int retries = 2000;
  ldv_52663: 
#line 1367 
  ;
  
#line 1369 
  val = (*(adapter->crb_read))(adapter,136323900UL);
  
#line 1371 
  if (val == 65281U) {
    
#line 1372 
    __retres = 0;
    
#line 1372 
    goto return_label;
  }
  else ;
  
#line 1374 
  msleep(10U);
  
#line 1376 
  retries -= 1;
  
#line 1376 
  if (retries != 0) 
#line 1378 
                    goto ldv_52663; else 
#line 1381 
                                         goto ldv_52664;
  ldv_52664: 
#line 1382 
  ;
  
#line 1378 
  if (retries == 0) {
    
#line 1379 
    printk("\001",val);
    
#line 1381 
    __retres = -5;
    
#line 1381 
    goto return_label;
  }
  else ;
  
#line 1384 
  __retres = 0;
  return_label: 
#line 1384 
                return __retres;
}


#line 1387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_init_firmware(struct netxen_adapter *adapter)
{
  int __retres;
  int err;
  
#line 1391 
  err = netxen_receive_peg_ready(adapter);
  
#line 1392 
  if (err != 0) {
    
#line 1393 
    __retres = err;
    
#line 1393 
    goto return_label;
  }
  else ;
  
#line 1395 
  (*(adapter->crb_write))(adapter,136324008UL,1U);
  
#line 1396 
  (*(adapter->crb_write))(adapter,136323780UL,8738U);
  
#line 1397 
  (*(adapter->crb_write))(adapter,136323664UL,61455U);
  
#line 1399 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 1400 
                                                     (*(adapter->crb_write))(adapter,136324208UL,1U); else ;
  
#line 1402 
  __retres = err;
  return_label: 
#line 1402 
                return __retres;
}


#line 1406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static void netxen_handle_linkevent(struct netxen_adapter *adapter, nx_fw_msg_t *msg)
{
  u32 cable_OUI;
  u16 cable_len;
  u16 link_speed;
  u8 link_status;
  u8 module;
  u8 duplex;
  u8 autoneg;
  
#line 1412 
  struct net_device *netdev = adapter->netdev;
  
#line 1414 
  adapter->has_link_events = (unsigned char)1U;
  
#line 1416 
  cable_OUI = (unsigned int)msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[1];
  
#line 1417 
  cable_len = (unsigned short)(msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[1] >> 32);
  
#line 1418 
  link_speed = (unsigned short)(msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[1] >> 48);
  
#line 1420 
  link_status = (unsigned char)msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[2];
  
#line 1421 
  duplex = (unsigned char)(msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[2] >> 16);
  
#line 1422 
  autoneg = (unsigned char)(msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[2] >> 24);
  
#line 1424 
  module = (unsigned char)(msg->__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[2] >> 8);
  
#line 1425 
  if ((unsigned int)module == 6U) 
#line 1426 
                                  printk("\001",(char *)(& netdev->name),cable_OUI,(int)cable_len);
  else 
    
#line 1428 
    if ((unsigned int)module == 7U) 
#line 1429 
                                    printk("\001",(char *)(& netdev->name),(int)cable_len); else ;
  
#line 1434 
  if ((unsigned int)duplex == 1U) 
#line 1435 
                                  adapter->link_duplex = (unsigned short)1U; else 
                                                                    
#line 1437 
                                                                    adapter->link_duplex = (unsigned short)0U;
  
#line 1438 
  adapter->module_type = (unsigned short)module;
  
#line 1439 
  adapter->link_autoneg = (unsigned short)autoneg;
  
#line 1440 
  adapter->link_speed = link_speed;
  
#line 1442 
  netxen_advert_link_change(adapter,(int)link_status);
  
#line 1443 
  return;
}


#line 1446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static void netxen_handle_fw_message(int desc_cnt, int index, struct nx_host_sds_ring *sds_ring)
{
  nx_fw_msg_t msg;
  struct status_desc *desc;
  int opcode;
  int tmp;
  int tmp_0;
  
#line 1451 
  int i = 0;
  
#line 1453 
  goto ldv_52691;
  ldv_52690: 
#line 1454 
  ;
  
#line 1454 
  desc = sds_ring->desc_head + index;
  
#line 1455 
  tmp = i;
  
#line 1455 
  i += 1;
  
#line 1455 
  msg.__anonCompField___anonstruct_nx_fw_msg_t_836_111.words[tmp] = desc->status_desc_data[0];
  
#line 1456 
  tmp_0 = i;
  
#line 1456 
  i += 1;
  
#line 1456 
  msg.__anonCompField___anonstruct_nx_fw_msg_t_836_111.words[tmp_0] = desc->status_desc_data[1];
  
#line 1458 
  index = (int)((unsigned int)(index + 1) & (sds_ring->num_desc + 4294967295U));
  
#line 1459 
  desc_cnt -= 1;
  ldv_52691: 
#line 1460 
  ;
  
#line 1453 
  if (desc_cnt > 0 && i <= 7) 
#line 1455 
                              goto ldv_52690; else 
#line 1458 
                                                   goto ldv_52692;
  ldv_52692: 
#line 1459 
  ;
  
#line 1462 
  opcode = (int)(msg.__anonCompField___anonstruct_nx_fw_msg_t_836_111.__anonCompField___anonunion_837_110.body[0] >> 32) & 255;
  
#line 1463 
  switch (opcode) {
    case 141: 
#line 1464 
    ;
    
#line 1465 
    netxen_handle_linkevent(sds_ring->adapter,& msg);
    
#line 1466 
    goto ldv_52694;
    default: 
#line 1467 
    ;
    
#line 1468 
    goto ldv_52694;
  }
  ldv_52694: 
#line 1470 
  ;
  
#line 1471 
  return;
}


#line 1473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static int netxen_alloc_rx_skb(struct netxen_adapter *adapter, struct nx_host_rds_ring *rds_ring, struct netxen_rx_buffer *buffer)
{
  int __retres;
  struct sk_buff *skb;
  dma_addr_t dma;
  int tmp;
  
#line 1479 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1481 
  buffer->skb = netdev_alloc_skb(adapter->netdev,rds_ring->skb_size);
  
#line 1482 
  if (buffer->skb == (struct sk_buff *)0) {
    
#line 1483 
    __retres = 1;
    
#line 1483 
    goto return_label;
  }
  else ;
  
#line 1485 
  skb = buffer->skb;
  
#line 1487 
  if ((unsigned int)adapter->ahw.cut_through == 0U) 
#line 1488 
                                                    skb_reserve(skb,2); else ;
  
#line 1490 
  dma = pci_map_single(pdev,(void *)skb->data,(unsigned long)rds_ring->dma_size,2);
  
#line 1493 
  tmp = pci_dma_mapping_error(pdev,dma);
  
#line 1493 
  if (tmp != 0) {
    
#line 1494 
    dev_kfree_skb_any(skb);
    
#line 1495 
    buffer->skb = (struct sk_buff *)0;
    
#line 1496 
    __retres = 1;
    
#line 1496 
    goto return_label;
  }
  else ;
  
#line 1499 
  buffer->skb = skb;
  
#line 1500 
  buffer->dma = dma;
  
#line 1501 
  buffer->state = (unsigned short)1U;
  
#line 1503 
  __retres = 0;
  return_label: 
#line 1503 
                return __retres;
}


#line 1506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static struct sk_buff *netxen_process_rxbuf(struct netxen_adapter *adapter, struct nx_host_rds_ring *rds_ring, u16 index, u16 cksum)
{
  struct netxen_rx_buffer *buffer;
  struct sk_buff *skb;
  
#line 1512 
  buffer = rds_ring->rx_buf_arr + (int)index;
  
#line 1514 
  pci_unmap_single(adapter->pdev,buffer->dma,(unsigned long)rds_ring->dma_size,2);
  
#line 1517 
  skb = buffer->skb;
  
#line 1518 
  if (skb == (struct sk_buff *)0) 
#line 1519 
                                  goto no_skb; else ;
  
#line 1521 
  if ((long)(((adapter->netdev)->features & 17179869184ULL) != 0ULL) != 0L && (long)((unsigned int)cksum == 2U) != 0L) {
    
#line 1523 
    adapter->stats.csummed += 1ULL;
    
#line 1524 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
  }
  else 
#line 1526 
       skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
  
#line 1528 
  buffer->skb = (struct sk_buff *)0;
  no_skb: 
#line 1529 
  ;
  
#line 1530 
  buffer->state = (unsigned short)0U;
  
#line 1531 
  return skb;
}


#line 1535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static struct netxen_rx_buffer *netxen_process_rcv(struct netxen_adapter *adapter, struct nx_host_sds_ring *sds_ring, int ring, u64 sts_data0)
{
  struct netxen_rx_buffer *__retres;
  struct netxen_rx_buffer *buffer;
  struct sk_buff *skb;
  struct nx_host_rds_ring *rds_ring;
  int index;
  int length;
  int cksum;
  int pkt_offset;
  
#line 1539 
  struct net_device *netdev = adapter->netdev;
  
#line 1540 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 1546 
  if ((long)((int)adapter->max_rds_rings <= ring) != 0L) {
    
#line 1547 
    __retres = (struct netxen_rx_buffer *)0;
    
#line 1547 
    goto return_label;
  }
  else ;
  
#line 1549 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 1551 
  index = (int)(sts_data0 >> 28) & 65535;
  
#line 1552 
  if ((long)(rds_ring->num_desc <= (unsigned int)index) != 0L) {
    
#line 1553 
    __retres = (struct netxen_rx_buffer *)0;
    
#line 1553 
    goto return_label;
  }
  else ;
  
#line 1555 
  buffer = rds_ring->rx_buf_arr + index;
  
#line 1557 
  length = (int)(sts_data0 >> 12) & 65535;
  
#line 1558 
  cksum = (int)(sts_data0 >> 4) & 15;
  
#line 1559 
  pkt_offset = (int)(sts_data0 >> 48) & 31;
  
#line 1561 
  skb = netxen_process_rxbuf(adapter,rds_ring,(unsigned short)((int)((unsigned short)index)),(unsigned short)((int)((unsigned short)cksum)));
  
#line 1562 
  if (skb == (struct sk_buff *)0) {
    
#line 1563 
    __retres = buffer;
    
#line 1563 
    goto return_label;
  }
  else ;
  
#line 1565 
  if (rds_ring->skb_size < (unsigned int)length) 
#line 1566 
                                                 skb_put(skb,rds_ring->skb_size); else 
                                                                    
#line 1568 
                                                                    skb_put(skb,(unsigned int)length);
  
#line 1571 
  if (pkt_offset != 0) 
#line 1572 
                       skb_pull(skb,(unsigned int)pkt_offset); else ;
  
#line 1574 
  skb->protocol = eth_type_trans(skb,netdev);
  
#line 1576 
  napi_gro_receive(& sds_ring->napi,skb);
  
#line 1578 
  adapter->stats.rx_pkts += 1ULL;
  
#line 1579 
  adapter->stats.rxbytes += (unsigned long long)length;
  
#line 1581 
  __retres = buffer;
  return_label: 
#line 1581 
                return __retres;
}


#line 1589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static struct netxen_rx_buffer *netxen_process_lro(struct netxen_adapter *adapter, struct nx_host_sds_ring *sds_ring, int ring, u64 sts_data0, u64 sts_data1)
{
  struct netxen_rx_buffer *__retres;
  struct netxen_rx_buffer *buffer;
  struct sk_buff *skb;
  struct nx_host_rds_ring *rds_ring;
  struct iphdr *iph;
  struct tcphdr *th;
  bool push;
  bool timestamp;
  int l2_hdr_offset;
  int l4_hdr_offset;
  int index;
  u16 lro_length;
  u16 length;
  u16 data_offset;
  u32 seq_number;
  int tmp_0;
  
#line 1593 
  struct net_device *netdev = adapter->netdev;
  
#line 1594 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 1605 
  u8 vhdr_len = (unsigned char)0U;
  
#line 1607 
  if ((long)((int)adapter->max_rds_rings <= ring) != 0L) {
    
#line 1608 
    __retres = (struct netxen_rx_buffer *)0;
    
#line 1608 
    goto return_label;
  }
  else ;
  
#line 1610 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 1612 
  index = (int)sts_data0 & 65535;
  
#line 1613 
  if ((long)(rds_ring->num_desc <= (unsigned int)index) != 0L) {
    
#line 1614 
    __retres = (struct netxen_rx_buffer *)0;
    
#line 1614 
    goto return_label;
  }
  else ;
  
#line 1616 
  buffer = rds_ring->rx_buf_arr + index;
  
#line 1618 
  timestamp = (_Bool)(((sts_data0 >> 48) & 1ULL) != 0ULL);
  
#line 1619 
  lro_length = (unsigned short)(sts_data0 >> 16);
  
#line 1620 
  l2_hdr_offset = (int)(sts_data0 >> 32) & 255;
  
#line 1621 
  l4_hdr_offset = (int)(sts_data0 >> 40) & 255;
  
#line 1622 
  push = (_Bool)(((sts_data0 >> 52) & 1ULL) != 0ULL);
  
#line 1623 
  seq_number = (unsigned int)sts_data1;
  
#line 1625 
  skb = netxen_process_rxbuf(adapter,rds_ring,(unsigned short)((int)((unsigned short)index)),(unsigned short)2);
  
#line 1626 
  if (skb == (struct sk_buff *)0) {
    
#line 1627 
    __retres = buffer;
    
#line 1627 
    goto return_label;
  }
  else ;
  
#line 1629 
  if ((int)timestamp != 0) 
#line 1630 
                           data_offset = (unsigned short)((unsigned int)((unsigned short)l4_hdr_offset) + 32U); else 
                                                                    
#line 1632 
                                                                    data_offset = (unsigned short)((unsigned int)((unsigned short)l4_hdr_offset) + 20U);
  
#line 1634 
  skb_put(skb,(unsigned int)((int)lro_length + (int)data_offset));
  
#line 1636 
  skb_pull(skb,(unsigned int)l2_hdr_offset);
  
#line 1637 
  skb->protocol = eth_type_trans(skb,netdev);
  
#line 1639 
  if ((unsigned int)skb->protocol == 129U) 
#line 1640 
                                           vhdr_len = (unsigned char)4U; else ;
  
#line 1641 
  iph = (struct iphdr *)(skb->data + (int)vhdr_len);
  
#line 1642 
  th = (struct tcphdr *)(skb->data + ((int)vhdr_len + ((int)iph->ihl << 2)));
  
#line 1644 
  length = (unsigned short)((((int)((unsigned short)iph->ihl) << 2U) + ((int)((unsigned short)th->doff) << 2U)) + (int)lro_length);
  
#line 1645 
  if (0 != 0) 
#line 1645 
              tmp_0 = (int)((unsigned short)(((int)length << 8) | ((int)length >> 8)));
  else {
    __u16 tmp;
    
#line 1645 
    tmp = __fswab16((unsigned short)((int)length));
    
#line 1645 
    tmp_0 = (int)tmp;
  }
  
#line 1645 
  ;
  
#line 1645 
  ;
  
#line 1645 
  csum_replace2(& iph->check,(unsigned short)((int)iph->tot_len),(unsigned short)tmp_0);
  
#line 1646 
  if (0 != 0) 
#line 1646 
              iph->tot_len = (unsigned short)(((int)length << 8) | ((int)length >> 8)); else 
                                                                    
#line 1646 
                                                                    iph->tot_len = __fswab16((unsigned short)((int)length));
  
#line 1647 
  th->psh = (unsigned short __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))push;
  
#line 1648 
  if (0 != 0) 
#line 1648 
              th->seq = (((seq_number << 24) | ((seq_number << 8) & 16711680U)) | ((seq_number >> 8) & 65280U)) | (seq_number >> 24); else 
                                                                    
#line 1648 
                                                                    th->seq = __fswab32(seq_number);
  
#line 1650 
  length = (unsigned short)skb->len;
  
#line 1652 
  if ((adapter->flags & 128U) != 0U) {
    unsigned char *tmp_3;
    
#line 1653 
    tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1653 
    ((struct skb_shared_info *)tmp_3)->gso_size = (unsigned short)(sts_data1 >> 32);
  }
  else ;
  
#line 1655 
  netif_receive_skb(skb);
  
#line 1657 
  adapter->stats.lro_pkts += 1ULL;
  
#line 1658 
  adapter->stats.rxbytes += (unsigned long long)length;
  
#line 1660 
  __retres = buffer;
  return_label: 
#line 1660 
                return __retres;
}


#line 1667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_process_rcv_ring(struct nx_host_sds_ring *sds_ring, int max)
{
  struct list_head *cur;
  struct status_desc *desc;
  struct netxen_rx_buffer *rxbuf;
  u64 sts_data0;
  u64 sts_data1;
  int opcode;
  int desc_cnt;
  
#line 1669 
  struct netxen_adapter *adapter = sds_ring->adapter;
  
#line 1676 
  u32 consumer = sds_ring->consumer;
  
#line 1678 
  int count = 0;
  
#line 1680 
  int ring = 0;
  
#line 1682 
  goto ldv_52782;
  ldv_52781: 
#line 1683 
  ;
  
#line 1683 
  desc = sds_ring->desc_head + consumer;
  
#line 1684 
  sts_data0 = desc->status_desc_data[0];
  
#line 1686 
  if ((sts_data0 & 72057594037927936ULL) == 0ULL) 
#line 1687 
                                                  goto ldv_52767; else ;
  
#line 1689 
  desc_cnt = (int)(sts_data0 >> 53) & 7;
  
#line 1691 
  opcode = (int)(sts_data0 >> 58);
  
#line 1693 
  switch (opcode) {
    case 4: 
#line 1694 
    ;
    case 63: 
#line 1695 
    ;
    case 3: 
#line 1696 
    ;
    
#line 1697 
    ring = (int)(sts_data0 >> 8) & 15;
    
#line 1698 
    rxbuf = netxen_process_rcv(adapter,sds_ring,ring,sts_data0);
    
#line 1700 
    goto ldv_52771;
    case 18: 
#line 1701 
    ;
    
#line 1702 
    ring = (int)(sts_data0 >> 49) & 7;
    
#line 1703 
    sts_data1 = desc->status_desc_data[1];
    
#line 1704 
    rxbuf = netxen_process_lro(adapter,sds_ring,ring,sts_data0,sts_data1);
    
#line 1706 
    goto ldv_52771;
    case 5: 
#line 1707 
    ;
    
#line 1708 
    netxen_handle_fw_message(desc_cnt,(int)consumer,sds_ring);
    default: 
#line 1709 
    ;
    
#line 1710 
    goto skip;
  }
  ldv_52771: 
#line 1713 
  ;
  {
    
#line 1713 
    int __ret_warn_on = desc_cnt > 1;
    
#line 1713 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1713 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c",1713); else ;
    
#line 1713 
    long tmp = (long)(__ret_warn_on != 0);
  }
  
#line 1715 
  if (rxbuf != (struct netxen_rx_buffer *)0) 
#line 1716 
                                             list_add_tail(& rxbuf->list,& sds_ring->free_list[ring]); else ;
  skip: 
#line 1718 
  ;
  
#line 1719 
  goto ldv_52779;
  ldv_52778: 
#line 1720 
  ;
  
#line 1720 
  desc = sds_ring->desc_head + consumer;
  
#line 1721 
  desc->status_desc_data[0] = 144115188075855872ULL;
  
#line 1723 
  consumer = (consumer + 1U) & (sds_ring->num_desc + 4294967295U);
  
#line 1719 
  desc_cnt -= 1;
  ldv_52779: 
#line 1720 
  ;
  
#line 1719 
  if (desc_cnt > 0) 
#line 1721 
                    goto ldv_52778; else 
#line 1724 
                                         goto ldv_52780;
  ldv_52780: 
#line 1725 
  ;
  
#line 1725 
  count += 1;
  ldv_52782: 
#line 1726 
  ;
  
#line 1682 
  if (count < max) 
#line 1684 
                   goto ldv_52781; else 
#line 1687 
                                        goto ldv_52767;
  ldv_52767: 
#line 1688 
  ;
  
#line 1728 
  ring = 0;
  
#line 1728 
  goto ldv_52790;
  ldv_52789: 
#line 1729 
  ;
  {
    int tmp_0_0;
    
#line 1729 
    struct nx_host_rds_ring *rds_ring = adapter->recv_ctx.rds_rings + ring;
    
#line 1732 
    tmp_0_0 = list_empty((struct list_head const *)(& sds_ring->free_list[ring]));
    
#line 1732 
    if (tmp_0_0 == 0) {
      struct netxen_rx_buffer *tmp_0;
      
#line 1733 
      cur = sds_ring->free_list[ring].next;
      
#line 1733 
      goto ldv_52787;
      ldv_52786: 
#line 1734 
      ;
      {
        
#line 1734 
        struct list_head const *__mptr = (struct list_head const *)cur;
        
#line 1734 
        tmp_0 = (struct netxen_rx_buffer *)__mptr;
      }
      
#line 1734 
      rxbuf = tmp_0;
      
#line 1736 
      netxen_alloc_rx_skb(adapter,rds_ring,rxbuf);
      
#line 1733 
      cur = cur->next;
      ldv_52787: 
#line 1734 
      ;
      
#line 1733 
      if (& sds_ring->free_list[ring] != cur) 
#line 1735 
                                              goto ldv_52786; else 
#line 1738 
                                                                   goto ldv_52788;
      ldv_52788: 
#line 1739 
      ;
      
#line 1738 
      ldv_spin_lock_75_0(& rds_ring->lock);
      
#line 1739 
      list_splice_tail_init(& sds_ring->free_list[ring],& rds_ring->free_list);
      
#line 1741 
      ldv_spin_unlock_76_0(& rds_ring->lock);
    }
    else ;
    
#line 1744 
    netxen_post_rx_buffers_nodb(adapter,rds_ring);
  }
  
#line 1728 
  ring += 1;
  ldv_52790: 
#line 1729 
  ;
  
#line 1728 
  if ((int)adapter->max_rds_rings > ring) 
#line 1730 
                                          goto ldv_52789; else 
#line 1733 
                                                               goto ldv_52791;
  ldv_52791: 
#line 1734 
  ;
  
#line 1747 
  if (count != 0) {
    
#line 1748 
    sds_ring->consumer = consumer;
    
#line 1749 
    (*(adapter->io_write))(adapter,sds_ring->crb_sts_consumer,consumer);
  }
  else ;
  
#line 1752 
  return count;
}


#line 1756  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
int netxen_process_cmd_ring(struct netxen_adapter *adapter)
{
  int __retres;
  u32 sw_consumer;
  u32 hw_consumer;
  int i;
  struct netxen_cmd_buffer *buffer;
  struct netxen_skb_frag *frag;
  int tmp;
  
#line 1759 
  int count = 0;
  
#line 1761 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1762 
  struct net_device *netdev = adapter->netdev;
  
#line 1764 
  int done = 0;
  
#line 1765 
  struct nx_host_tx_ring *tx_ring = adapter->tx_ring;
  
#line 1767 
  tmp = ldv_spin_trylock_bh_77(& adapter->tx_clean_lock);
  
#line 1767 
  if (tmp == 0) {
    
#line 1768 
    __retres = 1;
    
#line 1768 
    goto return_label;
  }
  else ;
  
#line 1770 
  sw_consumer = tx_ring->sw_consumer;
  
#line 1771 
  hw_consumer = *(tx_ring->hw_consumer);
  
#line 1773 
  goto ldv_52810;
  ldv_52809: 
#line 1774 
  ;
  
#line 1774 
  buffer = tx_ring->cmd_buf_arr + sw_consumer;
  
#line 1775 
  if (buffer->skb != (struct sk_buff *)0) {
    
#line 1776 
    frag = & buffer->frag_array[0];
    
#line 1777 
    pci_unmap_single(pdev,frag->dma,(unsigned long)frag->length,1);
    
#line 1779 
    frag->dma = 0ULL;
    
#line 1780 
    i = 1;
    
#line 1780 
    goto ldv_52806;
    ldv_52805: 
#line 1781 
    ;
    
#line 1781 
    frag += 1;
    
#line 1782 
    pci_unmap_page(pdev,frag->dma,(unsigned long)frag->length,1);
    
#line 1784 
    frag->dma = 0ULL;
    
#line 1780 
    i += 1;
    ldv_52806: 
#line 1781 
    ;
    
#line 1780 
    if (buffer->frag_count > (unsigned int)i) 
#line 1782 
                                              goto ldv_52805; else 
#line 1785 
                                                                   goto ldv_52807;
    ldv_52807: 
#line 1786 
    ;
    
#line 1787 
    adapter->stats.xmitfinished += 1ULL;
    
#line 1788 
    dev_kfree_skb_any(buffer->skb);
    
#line 1789 
    buffer->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 1792 
  sw_consumer = (sw_consumer + 1U) & (tx_ring->num_desc + 4294967295U);
  
#line 1793 
  count += 1;
  
#line 1793 
  if (count > 63) 
#line 1794 
                  goto ldv_52808; else ;
  ldv_52810: 
#line 1795 
  ;
  
#line 1773 
  if (sw_consumer != hw_consumer) 
#line 1775 
                                  goto ldv_52809; else 
#line 1778 
                                                       goto ldv_52808;
  ldv_52808: 
#line 1779 
  ;
  
#line 1797 
  tx_ring->sw_consumer = sw_consumer;
  
#line 1799 
  if (count != 0) {
    bool tmp_3;
    
#line 1799 
    tmp_3 = netif_running((struct net_device const *)netdev);
    
#line 1799 
    if ((int)tmp_3 != 0) {
      bool tmp_1;
      
#line 1801 
      ldv_inline_asm();
      
#line 1802 
      tmp_1 = netif_queue_stopped((struct net_device const *)netdev);
      
#line 1802 
      if ((int)tmp_1 != 0) {
        bool tmp_2;
        
#line 1802 
        tmp_2 = netif_carrier_ok((struct net_device const *)netdev);
        
#line 1802 
        if ((int)tmp_2 != 0) {
          u32 tmp_0;
          
#line 1803 
          tmp_0 = netxen_tx_avail(tx_ring);
          
#line 1803 
          if (tmp_0 > 10U) 
#line 1804 
                           netif_wake_queue(netdev); else ;
        }
        else ;
      }
      else ;
      
#line 1805 
      adapter->tx_timeo_cnt = (unsigned char)0U;
    }
    else ;
  }
  else ;
  
#line 1820 
  hw_consumer = *(tx_ring->hw_consumer);
  
#line 1821 
  done = sw_consumer == hw_consumer;
  
#line 1822 
  ldv_spin_unlock_bh_78(& adapter->tx_clean_lock);
  
#line 1824 
  __retres = done;
  return_label: 
#line 1824 
                return __retres;
}


#line 1828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_post_rx_buffers(struct netxen_adapter *adapter, u32 ringid, struct nx_host_rds_ring *rds_ring)
{
  struct rcv_desc *pdesc;
  struct netxen_rx_buffer *buffer;
  int producer;
  struct list_head *head;
  struct netxen_rx_buffer *tmp;
  int tmp_1;
  
#line 1833 
  int count = 0;
  
#line 1834 
  netxen_ctx_msg msg = 0U;
  
#line 1837 
  producer = (int)rds_ring->producer;
  
#line 1839 
  head = & rds_ring->free_list;
  
#line 1840 
  goto ldv_52826;
  ldv_52825: 
#line 1841 
  ;
  {
    
#line 1842 
    struct list_head const *__mptr = (struct list_head const *)head->next;
    
#line 1842 
    tmp = (struct netxen_rx_buffer *)__mptr;
  }
  
#line 1842 
  buffer = tmp;
  
#line 1844 
  if (buffer->skb == (struct sk_buff *)0) {
    int tmp_0;
    
#line 1845 
    tmp_0 = netxen_alloc_rx_skb(adapter,rds_ring,buffer);
    
#line 1845 
    if (tmp_0 != 0) 
#line 1846 
                    goto ldv_52824; else ;
  }
  else ;
  
#line 1849 
  count += 1;
  
#line 1850 
  list_del(& buffer->list);
  
#line 1853 
  pdesc = rds_ring->desc_head + producer;
  
#line 1854 
  pdesc->addr_buffer = buffer->dma;
  
#line 1855 
  pdesc->reference_handle = buffer->ref_handle;
  
#line 1856 
  pdesc->buffer_length = rds_ring->dma_size;
  
#line 1858 
  producer = (int)((unsigned int)(producer + 1) & (rds_ring->num_desc + 4294967295U));
  ldv_52826: 
#line 1859 
  ;
  
#line 1840 
  tmp_1 = list_empty((struct list_head const *)head);
  
#line 1840 
  if (tmp_1 == 0) 
#line 1842 
                  goto ldv_52825; else 
#line 1845 
                                       goto ldv_52824;
  ldv_52824: 
#line 1846 
  ;
  
#line 1861 
  if (count != 0) {
    
#line 1862 
    rds_ring->producer = (unsigned int)producer;
    
#line 1863 
    (*(adapter->io_write))(adapter,rds_ring->crb_rcv_producer,(unsigned int)(producer + -1) & (rds_ring->num_desc + 4294967295U));
    
#line 1866 
    if ((unsigned int)adapter->ahw.revision_id <= 37U) {
      
#line 1872 
      msg &= 4294967292U;
      
#line 1872 
      msg |= 2U;
      
#line 1873 
      msg |= 4U;
      
#line 1874 
      msg &= 4294705159U;
      
#line 1874 
      msg = ((((unsigned int)(producer + -1) & (rds_ring->num_desc + 4294967295U)) << 3) & 262136U) | msg;
      
#line 1877 
      msg &= 4026793983U;
      
#line 1877 
      msg = (unsigned int)((int)adapter->portnum << 18) | msg;
      
#line 1878 
      msg &= 268435455U;
      
#line 1878 
      msg = (ringid << 28) | msg;
      
#line 1879 
      (*(adapter->io_write))(adapter,adapter->ahw.db_base,msg);
    }
    else ;
  }
  else ;
  
#line 1882 
  return;
}


#line 1886  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
static void netxen_post_rx_buffers_nodb(struct netxen_adapter *adapter, struct nx_host_rds_ring *rds_ring)
{
  struct rcv_desc *pdesc;
  struct netxen_rx_buffer *buffer;
  int producer;
  struct list_head *head;
  int tmp;
  struct netxen_rx_buffer *tmp_0;
  int tmp_2;
  
#line 1891 
  int count = 0;
  
#line 1894 
  tmp = ldv_spin_trylock_79(& rds_ring->lock);
  
#line 1894 
  if (tmp == 0) 
#line 1895 
                goto return_label; else ;
  
#line 1897 
  producer = (int)rds_ring->producer;
  
#line 1899 
  head = & rds_ring->free_list;
  
#line 1900 
  goto ldv_52840;
  ldv_52839: 
#line 1901 
  ;
  {
    
#line 1902 
    struct list_head const *__mptr = (struct list_head const *)head->next;
    
#line 1902 
    tmp_0 = (struct netxen_rx_buffer *)__mptr;
  }
  
#line 1902 
  buffer = tmp_0;
  
#line 1904 
  if (buffer->skb == (struct sk_buff *)0) {
    int tmp_1;
    
#line 1905 
    tmp_1 = netxen_alloc_rx_skb(adapter,rds_ring,buffer);
    
#line 1905 
    if (tmp_1 != 0) 
#line 1906 
                    goto ldv_52838; else ;
  }
  else ;
  
#line 1909 
  count += 1;
  
#line 1910 
  list_del(& buffer->list);
  
#line 1913 
  pdesc = rds_ring->desc_head + producer;
  
#line 1914 
  pdesc->reference_handle = buffer->ref_handle;
  
#line 1915 
  pdesc->buffer_length = rds_ring->dma_size;
  
#line 1916 
  pdesc->addr_buffer = buffer->dma;
  
#line 1918 
  producer = (int)((unsigned int)(producer + 1) & (rds_ring->num_desc + 4294967295U));
  ldv_52840: 
#line 1919 
  ;
  
#line 1900 
  tmp_2 = list_empty((struct list_head const *)head);
  
#line 1900 
  if (tmp_2 == 0) 
#line 1902 
                  goto ldv_52839; else 
#line 1905 
                                       goto ldv_52838;
  ldv_52838: 
#line 1906 
  ;
  
#line 1921 
  if (count != 0) {
    
#line 1922 
    rds_ring->producer = (unsigned int)producer;
    
#line 1923 
    (*(adapter->io_write))(adapter,rds_ring->crb_rcv_producer,(unsigned int)(producer + -1) & (rds_ring->num_desc + 4294967295U));
  }
  else ;
  
#line 1926 
  ldv_spin_unlock_80_0(& rds_ring->lock);
  return_label: 
#line 1927 
                return;
}


#line 1929  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_init.c"
void netxen_nic_clear_stats(struct netxen_adapter *adapter)
{
  
#line 1931 
  memset((void *)(& adapter->stats),0,72UL);
  
#line 1932 
  return;
}


#line 593  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 596 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 596 
  return tmp;
}


#line 600  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void *kzalloc_0(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 603 
  tmp = ldv_kzalloc(size,flags);
  
#line 603 
  return tmp;
}


#line 750  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void ldv_spin_lock_bh_73(spinlock_t *lock)
{
  
#line 754 
  ldv_spin_model_lock((char *)"tx_clean_lock_of_netxen_adapter");
  
#line 756 
  spin_lock_bh_0(lock);
  
#line 757 
  return;
}


#line 760  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void ldv_spin_unlock_bh_74(spinlock_t *lock)
{
  
#line 764 
  ldv_spin_model_unlock((char *)"tx_clean_lock_of_netxen_adapter");
  
#line 766 
  spin_unlock_bh_0(lock);
  
#line 767 
  return;
}


#line 770  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void ldv_spin_lock_75_0(spinlock_t *lock)
{
  
#line 774 
  ldv_spin_model_lock((char *)"lock_of_nx_host_rds_ring");
  
#line 776 
  spin_lock_0(lock);
  
#line 777 
  return;
}


#line 780  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void ldv_spin_unlock_76_0(spinlock_t *lock)
{
  
#line 784 
  ldv_spin_model_unlock((char *)"lock_of_nx_host_rds_ring");
  
#line 786 
  spin_unlock_0(lock);
  
#line 787 
  return;
}


#line 790  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static int ldv_spin_trylock_bh_77(spinlock_t *lock)
{
  int __retres;
  
#line 794 
  ldv_func_ret_type ldv_func_res = spin_trylock_bh(lock);
  
#line 796 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 798 
  if (is_spin_held_by_another_thread != 0) {
    
#line 801 
    __retres = 0;
    
#line 801 
    goto return_label;
  }
  else {
    
#line 804 
    ldv_spin_model_lock((char *)"tx_clean_lock_of_netxen_adapter");
    
#line 806 
    __retres = 1;
    
#line 806 
    goto return_label;
  }
  
#line 809 
  __retres = ldv_func_res;
  return_label: 
#line 809 
                return __retres;
}


#line 813  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void ldv_spin_unlock_bh_78(spinlock_t *lock)
{
  
#line 817 
  ldv_spin_model_unlock((char *)"tx_clean_lock_of_netxen_adapter");
  
#line 819 
  spin_unlock_bh_0(lock);
  
#line 820 
  return;
}


#line 823  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static int ldv_spin_trylock_79(spinlock_t *lock)
{
  int __retres;
  
#line 827 
  ldv_func_ret_type ldv_func_res = spin_trylock(lock);
  
#line 829 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 831 
  if (is_spin_held_by_another_thread != 0) {
    
#line 834 
    __retres = 0;
    
#line 834 
    goto return_label;
  }
  else {
    
#line 837 
    ldv_spin_model_lock((char *)"lock_of_nx_host_rds_ring");
    
#line 839 
    __retres = 1;
    
#line 839 
    goto return_label;
  }
  
#line 842 
  __retres = ldv_func_res;
  return_label: 
#line 842 
                return __retres;
}


#line 846  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_init.c.aux"
static void ldv_spin_unlock_80_0(spinlock_t *lock)
{
  
#line 850 
  ldv_spin_model_unlock((char *)"lock_of_nx_host_rds_ring");
  
#line 852 
  spin_unlock_0(lock);
  
#line 853 
  return;
}

void *__builtin_memcpy(void *, void const *, unsigned long);


#line 201  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compiler.h"
__inline static void __read_once_size(void const volatile *p, void *res, int size)
{
  
#line 203 
  switch (size) {
    case 1: 
#line 204 
    ;
    
#line 204 
    *((__u8 *)res) = *((__u8 volatile *)p);
    
#line 204 
    goto ldv_1185;
    case 2: 
#line 205 
    ;
    
#line 205 
    *((__u16 *)res) = *((__u16 volatile *)p);
    
#line 205 
    goto ldv_1185;
    case 4: 
#line 206 
    ;
    
#line 206 
    *((__u32 *)res) = *((__u32 volatile *)p);
    
#line 206 
    goto ldv_1185;
    case 8: 
#line 207 
    ;
    
#line 207 
    *((__u64 *)res) = *((__u64 volatile *)p);
    
#line 207 
    goto ldv_1185;
    default: 
#line 208 
    ;
    
#line 209 
    ldv_inline_asm();
    
#line 210 
    __builtin_memcpy(res,(void const *)p,(unsigned long)size);
    
#line 211 
    ldv_inline_asm();
  }
  ldv_1185: 
#line 213 
  ;
  
#line 214 
  return;
}


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 9 
int ldv_atomic_dec_and_test(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/arch_hweight.h"
__inline static unsigned long __arch_hweight64(__u64 w)
{
  
#line 47 
  unsigned long res = 0UL;
  
#line 48 
  ldv_inline_asm();
  
#line 58 
  return res;
}


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned long hweight_long(unsigned long w)
{
  unsigned long tmp_0;
  
#line 80 
  if (0 != 0) 
#line 80 
              tmp_0 = (unsigned long)((((unsigned int)((((((((((unsigned long long)w & 1ULL) != 0ULL) + (((unsigned long long)w & 2ULL) != 0ULL)) + (((unsigned long long)w & 4ULL) != 0ULL)) + (((unsigned long long)w & 8ULL) != 0ULL)) + (((unsigned long long)w & 16ULL) != 0ULL)) + (((unsigned long long)w & 32ULL) != 0ULL)) + (((unsigned long long)w & 64ULL) != 0ULL)) + (((unsigned long long)w & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 8) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 8) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 8) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 16) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 16) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 16) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 24) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 24) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 24) & 128ULL) != 0ULL)))) + (((unsigned int)((((((((((unsigned long long)(w >> 32) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 32) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 32) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 40) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 40) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 40) & 128ULL) != 0ULL))) + ((unsigned int)((((((((((unsigned long long)(w >> 48) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 48) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 48) & 128ULL) != 0ULL)) + (unsigned int)((((((((((unsigned long long)(w >> 56) & 1ULL) != 0ULL) + (((unsigned long long)(w >> 56) & 2ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 4ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 8ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 16ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 32ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 64ULL) != 0ULL)) + (((unsigned long long)(w >> 56) & 128ULL) != 0ULL))))); else 
                                                                    
#line 80 
                                                                    tmp_0 = __arch_hweight64((unsigned long long)w);
  
#line 80 
  return tmp_0;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int kstrtoull(char const *, unsigned int, unsigned long long *);


#line 290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
__inline static int kstrtoul(char const *s, unsigned int base, unsigned long *res)
{
  int tmp;
  
#line 298 
  tmp = kstrtoull(s,base,(unsigned long long *)res);
  
#line 298 
  return tmp;
}


#line 402 
int sprintf(char *, char const * , ...);


#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
char *strcpy(char *, char const *);


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
int __bitmap_weight(unsigned long const *, unsigned int);


#line 298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const *src, unsigned int nbits)
{
  int __retres;
  int tmp_0;
  
#line 300 
  if (0 != 0 && nbits <= 64U) {
    unsigned long tmp;
    
#line 301 
    tmp = hweight_long(*src & (18446744073709551615UL >> (- nbits & 63U)));
    
#line 301 
    __retres = (int)tmp;
    
#line 301 
    goto return_label;
  }
  else ;
  
#line 302 
  tmp_0 = __bitmap_weight(src,nbits);
  
#line 302 
  __retres = tmp_0;
  return_label: 
#line 302 
                return __retres;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
extern int nr_cpu_ids;


#line 89 
extern struct cpumask const * const cpu_online_mask;


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
__inline static unsigned int cpumask_weight(struct cpumask const *srcp)
{
  unsigned int __retres;
  int tmp;
  
#line 476 
  tmp = bitmap_weight((unsigned long const *)(& srcp->bits),(unsigned int)nr_cpu_ids);
  
#line 476 
  __retres = (unsigned int)tmp;
  
#line 476 
  return __retres;
}


#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
static void atomic_inc(atomic_t *v);


#line 120 
static int atomic_dec_and_test(atomic_t *v);


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_add(int val)
{
  int tmp;
  
#line 72 
  if (0 != 0 && (val == 1 || val == -1)) 
#line 72 
                                         tmp = val; else 
#line 72 
                                                         tmp = 0;
  
#line 72 
  int const pao_ID__ = tmp;
  
#line 72 
  switch (4UL) {
    case (unsigned long)1: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)2: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)4: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    case (unsigned long)8: 
#line 72 
    ;
    
#line 72 
    if (pao_ID__ == 1) 
#line 74 
                       ldv_inline_asm();
    else 
      
#line 72 
      if (pao_ID__ == -1) 
#line 74 
                          ldv_inline_asm(); else 
#line 77 
                                                 ldv_inline_asm();
    
#line 72 
    goto ldv_6377;
    default: 
#line 72 
    ;
    
#line 72 
    __bad_percpu_size();
  }
  ldv_6377: 
#line 72 
  ;
  
#line 74 
  return;
}


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static void __preempt_count_sub(int val)
{
  int tmp;
  
#line 77 
  if (0 != 0 && (- val == 1 || - val == -1)) 
#line 77 
                                             tmp = - val; else 
#line 77 
                                                               tmp = 0;
  
#line 77 
  int const pao_ID__ = tmp;
  
#line 77 
  switch (4UL) {
    case (unsigned long)1: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)2: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)4: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    case (unsigned long)8: 
#line 77 
    ;
    
#line 77 
    if (pao_ID__ == 1) 
#line 79 
                       ldv_inline_asm();
    else 
      
#line 77 
      if (pao_ID__ == -1) 
#line 79 
                          ldv_inline_asm(); else 
#line 82 
                                                 ldv_inline_asm();
    
#line 77 
    goto ldv_6389;
    default: 
#line 77 
    ;
    
#line 77 
    __bad_percpu_size();
  }
  ldv_6389: 
#line 77 
  ;
  
#line 79 
  return;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
void __local_bh_disable_ip(unsigned long, unsigned int);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_disable(void)
{
  __here_0: 
#line 18 
  ;
  
#line 18 
  __local_bh_disable_ip((unsigned long)((void *)0),512U);
  
#line 20 
  return;
}


#line 22 
void __local_bh_enable_ip(unsigned long, unsigned int);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
__inline static void local_bh_enable(void)
{
  __here_0: 
#line 31 
  ;
  
#line 31 
  __local_bh_enable_ip((unsigned long)((void *)0),512U);
  
#line 33 
  return;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 333 
void lock_acquire(struct lockdep_map *, unsigned int, int, int, int, struct lockdep_map *, unsigned long);


#line 337 
void lock_release(struct lockdep_map *, int, unsigned long);


#line 545 
void lockdep_rcu_suspicious(char const *, int const, char const *);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock.h"
void __rwlock_init(rwlock_t *, char const *, struct lock_class_key *);


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_1(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 346 
static void ldv_spin_lock_60(spinlock_t *lock);


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_1(spinlock_t *lock)
{
  
#line 365 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 366 
  return;
}


#line 395 
static void ldv_spin_unlock_63(spinlock_t *lock);


#line 268  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_lock(void)
{
  
#line 270 
  __preempt_count_add(1);
  
#line 271 
  ldv_inline_asm();
  
#line 272 
  return;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void __rcu_read_unlock(void)
{
  
#line 275 
  ldv_inline_asm();
  
#line 275 
  __preempt_count_sub(1);
  
#line 276 
  return;
}


#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcutree.h"
bool rcu_is_watching(void);


#line 447  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_acquire(struct lockdep_map *map)
{
  __here_0: 
#line 449 
  ;
  
#line 449 
  ;
  
#line 449 
  lock_acquire(map,0U,0,2,0,(struct lockdep_map *)0,(unsigned long)((void *)0));
  
#line 451 
  return;
}


#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_lock_release(struct lockdep_map *map)
{
  __here_0: 
#line 454 
  ;
  
#line 454 
  ;
  
#line 454 
  lock_release(map,1,(unsigned long)((void *)0));
  
#line 456 
  return;
}


#line 457 
extern struct lockdep_map rcu_lock_map;


#line 461 
int debug_lockdep_rcu_enabled(void);


#line 463 
int rcu_read_lock_held(void);


#line 843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_lock(void)
{
  
#line 845 
  __rcu_read_lock();
  
#line 847 
  rcu_lock_acquire(& rcu_lock_map);
  {
    bool __warned;
    int tmp;
    
#line 848 
    tmp = debug_lockdep_rcu_enabled();
    
#line 848 
    if (tmp != 0) {
      
#line 848 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 848 
        tmp_0 = rcu_is_watching();
        
#line 848 
        if (tmp_0) 
#line 848 
                   tmp_1 = 0; else 
#line 848 
                                   tmp_1 = 1;
        
#line 848 
        if (tmp_1) {
          
#line 848 
          __warned = (_Bool)1;
          
#line 848 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",849,"rcu_read_lock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 851 
  return;
}


#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
__inline static void rcu_read_unlock(void)
{
  {
    bool __warned;
    int tmp;
    
#line 899 
    tmp = debug_lockdep_rcu_enabled();
    
#line 899 
    if (tmp != 0) {
      
#line 899 
      if (! __warned) {
        int tmp_1;
        bool tmp_0;
        
#line 899 
        tmp_0 = rcu_is_watching();
        
#line 899 
        if (tmp_0) 
#line 899 
                   tmp_1 = 0; else 
#line 899 
                                   tmp_1 = 1;
        
#line 899 
        if (tmp_1) {
          
#line 899 
          __warned = (_Bool)1;
          
#line 899 
          lockdep_rcu_suspicious("include/linux/rcupdate.h",900,"rcu_read_unlock() used illegally while idle");
        }
        else ;
      }
      else ;
    }
    else ;
  }
  
#line 902 
  __rcu_read_unlock();
  
#line 903 
  rcu_lock_release(& rcu_lock_map);
  
#line 904 
  return;
}


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void delayed_work_timer_fn(unsigned long);


#line 181 
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 448 
bool cancel_delayed_work_sync(struct delayed_work *);


#line 560 
static bool ldv_schedule_work_80(struct work_struct *work);


#line 597 
static bool ldv_schedule_delayed_work_81(struct delayed_work *dwork, unsigned long delay);


#line 581  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kzalloc_1(size_t size, gfp_t flags);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_73(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_74(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
static int ldv_device_create_file_82(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2);


#line 599 
static int ldv_device_create_file_84(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2);


#line 605 
static void ldv_device_remove_file_83(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2);


#line 609 
static void ldv_device_remove_file_85(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2);


#line 613 
int device_create_bin_file(struct device *, struct bin_attribute const *);


#line 615 
void device_remove_bin_file(struct device *, struct bin_attribute const *);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_find_capability(struct pci_dev *, int);


#line 837 
int pci_find_ext_capability(struct pci_dev *, int);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_86(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_87(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msi(struct pci_dev *);


#line 1216 
void pci_disable_msix(struct pci_dev *);


#line 1219 
int pci_enable_msi_range(struct pci_dev *, int, int);


#line 1220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_msi_exact(struct pci_dev *dev, int nvec)
{
  int __retres;
  
#line 1222 
  int rc = pci_enable_msi_range(dev,nvec,nvec);
  
#line 1223 
  if (rc < 0) {
    
#line 1224 
    __retres = rc;
    
#line 1224 
    goto return_label;
  }
  else ;
  
#line 1225 
  __retres = 0;
  return_label: 
#line 1225 
                return __retres;
}


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1666 
void *pci_ioremap_bar(struct pci_dev *, int);


#line 1738  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static u16 pcie_caps_reg(struct pci_dev const *dev)
{
  u16 __retres;
  
#line 1740 
  __retres = dev->pcie_flags_reg;
  
#line 1740 
  return __retres;
}


#line 1747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_pcie_type(struct pci_dev const *dev)
{
  int __retres;
  u16 tmp;
  
#line 1749 
  tmp = pcie_caps_reg(dev);
  
#line 1749 
  __retres = ((int)tmp >> 4) & 15;
  
#line 1749 
  return __retres;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_transport_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1969 
  tmp = skb_transport_header(skb);
  
#line 1969 
  ;
  
#line 1969 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1969 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data(struct sk_buff const *skb, void *to, unsigned int const len)
{
  
#line 2793 
  memcpy(to,(void const *)skb->data,(unsigned long)len);
  
#line 2794 
  return;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_from_linear_data_offset(struct sk_buff const *skb, int const offset, void *to, unsigned int const len)
{
  
#line 2800 
  memcpy(to,(void const *)(skb->data + offset),(unsigned long)len);
  
#line 2801 
  return;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file_net.h"
extern struct net init_net;


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 521  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_synchronize(struct napi_struct const *n)
{
  int tmp;
  
#line 523 
  goto ldv_43878;
  ldv_43877: 
#line 524 
  ;
  
#line 524 
  msleep(1U);
  ldv_43878: 
#line 525 
  ;
  
#line 523 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 523 
  if (tmp != 0) 
#line 525 
                goto ldv_43877; else 
#line 528 
                                     goto ldv_43879;
  ldv_43879: 
#line 529 
  ;
  
#line 530 
  return;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2084 
int register_netdevice_notifier(struct notifier_block *);


#line 2085 
int unregister_netdevice_notifier(struct notifier_block *);


#line 2103  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct net_device *netdev_notifier_info_to_dev(struct netdev_notifier_info const *info)
{
  struct net_device *__retres;
  
#line 2105 
  __retres = info->dev;
  
#line 2105 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_77(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_79(struct net_device *ldv_func_arg1);


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_stop_queue(tmp);
  
#line 2529 
  return;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_lock(struct netdev_queue *txq, int cpu)
{
  
#line 3172 
  ldv_spin_lock_60(& txq->_xmit_lock);
  
#line 3173 
  txq->xmit_lock_owner = cpu;
  
#line 3174 
  return;
}


#line 3190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void __netif_tx_unlock(struct netdev_queue *txq)
{
  
#line 3192 
  txq->xmit_lock_owner = -1;
  
#line 3193 
  ldv_spin_unlock_63(& txq->_xmit_lock);
  
#line 3194 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_disable(struct net_device *dev)
{
  unsigned int i;
  int cpu;
  int tmp_3;
  
#line 3287 
  local_bh_disable();
  {
    int pscr_ret__;
    {
      
#line 3288 
      void const *__vpp_verify = (void const *)0;
      
#line 3288 
      void const *tmp = __vpp_verify;
    }
    
#line 3288 
    switch (4UL) {
      int tmp_0;
      int tmp_0_0;
      int tmp_1;
      int tmp_2;
      case (unsigned long)1: 
#line 3288 
      ;
      {
        int pfo_ret__;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45523;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45523;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45523;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45523;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45523: 
#line 3288 
        ;
        
#line 3288 
        tmp_0 = pfo_ret__;
      }
      
#line 3288 
      pscr_ret__ = tmp_0;
      
#line 3288 
      goto ldv_45529;
      case (unsigned long)2: 
#line 3288 
      ;
      {
        int pfo_ret___0;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45533;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45533;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45533;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45533;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45533: 
#line 3288 
        ;
        
#line 3288 
        tmp_0_0 = pfo_ret___0;
      }
      
#line 3288 
      pscr_ret__ = tmp_0_0;
      
#line 3288 
      goto ldv_45529;
      case (unsigned long)4: 
#line 3288 
      ;
      {
        int pfo_ret___1;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45542;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45542;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45542;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45542;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45542: 
#line 3288 
        ;
        
#line 3288 
        tmp_1 = pfo_ret___1;
      }
      
#line 3288 
      pscr_ret__ = tmp_1;
      
#line 3288 
      goto ldv_45529;
      case (unsigned long)8: 
#line 3288 
      ;
      {
        int pfo_ret___2;
        
#line 3288 
        switch (4UL) {
          case (unsigned long)1: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45551;
          case (unsigned long)2: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45551;
          case (unsigned long)4: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45551;
          case (unsigned long)8: 
#line 3288 
          ;
          
#line 3289 
          ldv_inline_asm();
          
#line 3288 
          goto ldv_45551;
          default: 
#line 3288 
          ;
          
#line 3288 
          __bad_percpu_size();
        }
        ldv_45551: 
#line 3288 
        ;
        
#line 3288 
        tmp_2 = pfo_ret___2;
      }
      
#line 3288 
      pscr_ret__ = tmp_2;
      
#line 3288 
      goto ldv_45529;
      default: 
#line 3288 
      ;
      
#line 3288 
      __bad_size_call_parameter();
      
#line 3288 
      goto ldv_45529;
    }
    ldv_45529: 
#line 3288 
    ;
    
#line 3288 
    tmp_3 = pscr_ret__;
  }
  
#line 3288 
  cpu = tmp_3;
  
#line 3289 
  i = 0U;
  
#line 3289 
  goto ldv_45561;
  ldv_45560: 
#line 3290 
  ;
  {
    
#line 3290 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 3292 
    __netif_tx_lock(txq,cpu);
    
#line 3293 
    netif_tx_stop_queue(txq);
    
#line 3294 
    __netif_tx_unlock(txq);
  }
  
#line 3289 
  i += 1U;
  ldv_45561: 
#line 3290 
  ;
  
#line 3289 
  if (dev->num_tx_queues > i) 
#line 3291 
                              goto ldv_45560; else 
#line 3294 
                                                   goto ldv_45562;
  ldv_45562: 
#line 3295 
  ;
  
#line 3296 
  local_bh_enable();
  
#line 3297 
  return;
}


#line 3355 
static int ldv_register_netdev_75(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_78(struct net_device *ldv_func_arg1);


#line 3533 
struct net_device *netdev_master_upper_dev_get_rcu(struct net_device *);


#line 3769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_is_bond_master(struct net_device *dev)
{
  bool __retres;
  
#line 3771 
  __retres = (_Bool)(((dev->flags & 1024U) != 0U && (dev->priv_flags & 32U) != 0U) != 0);
  
#line 3771 
  return __retres;
}


#line 3774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_is_bond_slave(struct net_device *dev)
{
  bool __retres;
  
#line 3776 
  __retres = (_Bool)(((dev->flags & 2048U) != 0U && (dev->priv_flags & 32U) != 0U) != 0);
  
#line 3776 
  return __retres;
}


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_76(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 1773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
int netxen_alloc_hw_resources(struct netxen_adapter *adapter);


#line 1774 
void netxen_free_hw_resources(struct netxen_adapter *adapter);


#line 1803 
int netxen_setup_minidump(struct netxen_adapter *adapter);


#line 1809 
int netxen_nic_reset_context(struct netxen_adapter *adapter);


#line 1811 
int nx_dev_request_reset(struct netxen_adapter *adapter);


#line 1831  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
static struct netxen_brdinfo const netxen_boards[19U] = {{.brdtype = 15, .ports = 1L, .short_name = {(char)'X', (char)'G', (char)'b', (char)' ', (char)'C', (char)'X', (char)'4', (char)'\000'}}, {.brdtype = 14, .ports = 1L, .short_name = {(char)'X', (char)'G', (char)'b', (char)' ', (char)'H', (char)'M', (char)'E', (char)'Z', (char)'\000'}}, {.brdtype = 13, .ports = 2L, .short_name = {(char)'X', (char)'G', (char)'b', (char)' ', (char)'I', (char)'M', (char)'E', (char)'Z', (char)'\000'}}, {.brdtype = 11, .ports = 1L, .short_name = {(char)'X', (char)'G', (char)'b', (char)' ', (char)'X', (char)'F', (char)'P', (char)'\000'}}, {.brdtype = 10, .ports = 4L, .short_name = {(char)'Q', (char)'u', (char)'a', (char)'d', (char)' ', (char)'G', (char)'b', (char)'\000'}}, {.brdtype = 12, .ports = 2L, .short_name = {(char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'G', (char)'b', (char)'\000'}}, {.brdtype = 33, .ports = 4L, .short_name = {(char)'R', (char)'e', (char)'f', (char)'e', (char)'r', (char)'e', (char)'n', (char)'c', (char)'e', (char)' ', (char)'Q', (char)'u', (char)'a', (char)'d', (char)' ', (char)'G', (char)'i', (char)'g', (char)' ', (char)'\000'}}, {.brdtype = 34, .ports = 2L, .short_name = {(char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'X', (char)'G', (char)'b', (char)' ', (char)'H', (char)'M', (char)'E', (char)'Z', (char)'\000'}}, {.brdtype = 35, .ports = 2L, .short_name = {(char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'X', (char)'G', (char)'b', (char)' ', (char)'C', (char)'X', (char)'4', (char)' ', (char)'L', (char)'P', (char)'\000'}}, {.brdtype = 36, .ports = 4L, .short_name = {(char)'Q', (char)'u', (char)'a', (char)'d', (char)' ', (char)'G', (char)'i', (char)'g', (char)' ', (char)'L', (char)'P', (char)'\000'}}, {.brdtype = 37, .ports = 2L, .short_name = {(char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'X', (char)'G', (char)'b', (char)' ', (char)'I', (char)'M', (char)'E', (char)'Z', (char)'\000'}}, {.brdtype = 38, .ports = 2L, .short_name = {(char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'X', (char)'G', (char)'b', (char)' ', (char)'S', (char)'F', (char)'P', (char)'+', (char)' ', (char)'L', (char)'P', (char)'\000'}}, {.brdtype = 39, .ports = 1L, .short_name = {(char)'X', (char)'G', (char)'B', (char)' ', (char)'1', (char)'0', (char)'G', (char)' ', (char)'B', (char)'a', (char)'s', (char)'e', (char)'T', (char)' ', (char)'L', (char)'P', (char)'\000'}}, {.brdtype = 40, .ports = 2L, .short_name = {(char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'X', (char)'G', (char)'b', (char)' ', (char)'L', (char)'O', (char)'M', (char)'\000'}}, {.brdtype = 41, .ports = 4L, .short_name = {(char)'N', (char)'X', (char)'3', (char)'0', (char)'3', (char)'1', (char)' ', (char)'G', (char)'i', (char)'g', (char)'a', (char)'b', (char)'i', (char)'t', (char)' ', (char)'E', (char)'t', (char)'h', (char)'e', (char)'r', (char)'n', (char)'e', (char)'t', (char)'\000'}}, {.brdtype = 42, .ports = 2L, .short_name = {(char)'N', (char)'X', (char)'3', (char)'0', (char)'3', (char)'1', (char)' ', (char)'1', (char)'0', (char)' ', (char)'G', (char)'i', (char)'g', (char)'a', (char)'b', (char)'i', (char)'t', (char)' ', (char)'E', (char)'t', (char)'h', (char)'e', (char)'r', (char)'n', (char)'e', (char)'t', (char)'\000'}}, {.brdtype = 43, .ports = 2L, .short_name = {(char)'Q', (char)'u', (char)'a', (char)'n', (char)'t', (char)'a', (char)' ', (char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'X', (char)'G', (char)'b', (char)' ', (char)'S', (char)'F', (char)'P', (char)'+', (char)'\000'}}, {.brdtype = 49, .ports = 2L, .short_name = {(char)'R', (char)'e', (char)'f', (char)'e', (char)'r', (char)'e', (char)'n', (char)'c', (char)'e', (char)' ', (char)'D', (char)'u', (char)'a', (char)'l', (char)' ', (char)'C', (char)'X', (char)'4', (char)' ', (char)'O', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'}}, {.brdtype = 50, .ports = 1L, .short_name = {(char)'R', (char)'e', (char)'f', (char)'e', (char)'r', (char)'e', (char)'n', (char)'c', (char)'e', (char)' ', (char)'S', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)' ', (char)'X', (char)'F', (char)'P', (char)' ', (char)'O', (char)'p', (char)'t', (char)'i', (char)'o', (char)'n', (char)'\000'}}};

#line 1855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
__inline static int netxen_nic_get_brd_name_by_type(u32 type, char *name)
{
  int __retres;
  int i;
  
#line 1857 
  int found = 0;
  
#line 1858 
  i = 0;
  
#line 1858 
  goto ldv_52135;
  ldv_52134: 
#line 1859 
  ;
  
#line 1859 
  if ((unsigned int)netxen_boards[i].brdtype == type) {
    
#line 1860 
    strcpy(name,(char const *)(& netxen_boards[i].short_name));
    
#line 1861 
    found = 1;
    
#line 1862 
    goto ldv_52133;
  }
  else ;
  
#line 1858 
  i += 1;
  ldv_52135: 
#line 1859 
  ;
  
#line 1858 
  if ((unsigned int)i <= 18U) 
#line 1860 
                              goto ldv_52134; else 
#line 1863 
                                                   goto ldv_52133;
  ldv_52133: 
#line 1864 
  ;
  
#line 1866 
  if (found == 0) {
    
#line 1867 
    strcpy(name,"Unknown");
    
#line 1868 
    __retres = -22;
    
#line 1868 
    goto return_label;
  }
  else ;
  
#line 1871 
  __retres = 0;
  return_label: 
#line 1871 
                return __retres;
}


#line 1887 
struct ethtool_ops const netxen_nic_ethtool_ops;


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct net_device *vlan_dev_real_dev(struct net_device const *);


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
int register_inetaddr_notifier(struct notifier_block *);


#line 154 
int unregister_inetaddr_notifier(struct notifier_block *);


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static struct in_device *__in_dev_get_rcu(struct net_device const *dev)
{
  struct in_device *tmp_3;
  {
    struct in_device *tmp_0;
    {
      struct in_device *tmp;
      {
        union __anonunion___u_1337 __u;
        
#line 205 
        __read_once_size((void const volatile *)(& dev->ip_ptr),(void *)(& __u.__c),8);
        
#line 205 
        tmp = __u.__val;
      }
      
#line 205 
      struct in_device * const _________p1 = tmp;
      
#line 205 
      tmp_0 = _________p1;
    }
    
#line 205 
    struct in_device *________p1 = tmp_0;
    {
      bool __warned;
      int tmp_1;
      
#line 205 
      tmp_1 = debug_lockdep_rcu_enabled();
      
#line 205 
      if (tmp_1 != 0) {
        
#line 205 
        if (! __warned) {
          int tmp_2;
          
#line 205 
          tmp_2 = rcu_read_lock_held();
          
#line 205 
          if (tmp_2 == 0) {
            
#line 205 
            __warned = (_Bool)1;
            
#line 205 
            lockdep_rcu_suspicious("include/linux/inetdevice.h",205,"suspicious rcu_dereference_check() usage");
          }
          else ;
        }
        else ;
      }
      else ;
    }
    
#line 205 
    tmp_3 = ________p1;
  }
  
#line 205 
  return tmp_3;
}


#line 208  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static struct in_device *in_dev_get(struct net_device const *dev)
{
  struct in_device *in_dev;
  
#line 212 
  rcu_read_lock();
  
#line 213 
  in_dev = __in_dev_get_rcu(dev);
  
#line 214 
  if (in_dev != (struct in_device *)0) 
#line 215 
                                       atomic_inc(& in_dev->refcnt); else ;
  
#line 216 
  rcu_read_unlock();
  
#line 217 
  return in_dev;
}


#line 232 
void in_dev_finish_destroy(struct in_device *);


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/inetdevice.h"
__inline static void in_dev_put(struct in_device *idev)
{
  int tmp;
  
#line 236 
  tmp = atomic_dec_and_test(& idev->refcnt);
  
#line 236 
  if (tmp != 0) 
#line 237 
                in_dev_finish_destroy(idev); else ;
  
#line 238 
  return;
}


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/aer.h"
int pci_enable_pcie_error_reporting(struct pci_dev *);


#line 43 
int pci_disable_pcie_error_reporting(struct pci_dev *);


#line 44 
int pci_cleanup_aer_uncorrect_error_status(struct pci_dev *);


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
char netxen_nic_driver_name[11U] = {(char)'n', (char)'e', (char)'t', (char)'x', (char)'e', (char)'n', (char)'_', (char)'n', (char)'i', (char)'c', (char)'\000'};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static char netxen_nic_driver_string[37U] = {(char)'Q', (char)'L', (char)'o', (char)'g', (char)'i', (char)'c', (char)'/', (char)'N', (char)'e', (char)'t', (char)'X', (char)'e', (char)'n', (char)' ', (char)'N', (char)'e', (char)'t', (char)'w', (char)'o', (char)'r', (char)'k', (char)' ', (char)'D', (char)'r', (char)'i', (char)'v', (char)'e', (char)'r', (char)' ', (char)'v', (char)'\000'};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int port_mode = 4;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int wol_port_mode = 5;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int use_msi = 1;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int use_msi_x = 1;

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int auto_fw_reset = -284119278;

#line 61 
static int netxen_nic_probe(struct pci_dev *pdev, struct pci_device_id const *ent);


#line 63 
static void netxen_nic_remove(struct pci_dev *pdev);


#line 64 
static int netxen_nic_open(struct net_device *netdev);


#line 65 
static int netxen_nic_close(struct net_device *netdev);


#line 66 
static netdev_tx_t netxen_nic_xmit_frame(struct sk_buff *skb, struct net_device *netdev);


#line 68 
static void netxen_tx_timeout(struct net_device *netdev);


#line 69 
static void netxen_tx_timeout_task(struct work_struct *work);


#line 70 
static void netxen_fw_poll_work(struct work_struct *work);


#line 71 
static void netxen_schedule_work(struct netxen_adapter *adapter, void (*func)(struct work_struct *), int delay);


#line 73 
static void netxen_cancel_fw_work(struct netxen_adapter *adapter);


#line 74 
static int netxen_nic_poll(struct napi_struct *napi, int budget);


#line 76 
static void netxen_nic_poll_controller(struct net_device *netdev);


#line 79 
static void netxen_create_sysfs_entries(struct netxen_adapter *adapter);


#line 80 
static void netxen_remove_sysfs_entries(struct netxen_adapter *adapter);


#line 81 
static void netxen_create_diag_entries(struct netxen_adapter *adapter);


#line 82 
static void netxen_remove_diag_entries(struct netxen_adapter *adapter);


#line 83 
static int nx_dev_request_aer(struct netxen_adapter *adapter);


#line 84 
static int nx_decr_dev_ref_cnt(struct netxen_adapter *adapter);


#line 85 
static int netxen_can_start_firmware(struct netxen_adapter *adapter);


#line 87 
static irqreturn_t netxen_intr(int irq, void *data);


#line 88 
static irqreturn_t netxen_msi_intr(int irq, void *data);


#line 89 
static irqreturn_t netxen_msix_intr(int irq, void *data);


#line 91 
static void netxen_free_ip_list(struct netxen_adapter *adapter, bool master);


#line 92 
static void netxen_restore_indev_addr(struct net_device *netdev, unsigned long event);


#line 93 
static struct rtnl_link_stats64 *netxen_nic_get_stats(struct net_device *netdev, struct rtnl_link_stats64 *stats);


#line 95 
static int netxen_nic_set_mac(struct net_device *netdev, void *p);


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct pci_device_id const netxen_pci_tbl[9U] = {{.vendor = 16448U, .device = 1U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 2U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 3U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 4U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 5U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 36U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 37U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 16448U, .device = 256U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 4294967295U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
struct pci_device_id const __mod_pci__netxen_pci_tbl_device_table[9U];

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static uint32_t crb_cmd_producer[4U] = {136323592U, 136324012U, 136324024U, 136324048U};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
void netxen_nic_update_cmd_producer(struct netxen_adapter *adapter, struct nx_host_tx_ring *tx_ring)
{
  
#line 125 
  (*(adapter->io_write))(adapter,tx_ring->crb_cmd_producer,tx_ring->producer);
  
#line 126 
  return;
}


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static uint32_t crb_cmd_consumer[4U] = {136323596U, 136324016U, 136324028U, 136324052U};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static void netxen_nic_update_cmd_consumer(struct netxen_adapter *adapter, struct nx_host_tx_ring *tx_ring)
{
  
#line 137 
  (*(adapter->io_write))(adapter,tx_ring->crb_cmd_consumer,tx_ring->sw_consumer);
  
#line 138 
  return;
}


#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static uint32_t msi_tgt_status[8U] = {101777688U, 101777760U, 101777764U, 101777768U, 101778272U, 101778276U, 101778280U, 101778284U};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct netxen_legacy_intr_set legacy_intr[8U] = {{.int_vec_bit = 128U, .tgt_status_reg = 101777688U, .tgt_mask_reg = 101777704U, .pci_int_reg = 101789696U}, {.int_vec_bit = 256U, .tgt_status_reg = 101777760U, .tgt_mask_reg = 101777776U, .pci_int_reg = 101789700U}, {.int_vec_bit = 512U, .tgt_status_reg = 101777764U, .tgt_mask_reg = 101777780U, .pci_int_reg = 101789704U}, {.int_vec_bit = 1024U, .tgt_status_reg = 101777768U, .tgt_mask_reg = 101777784U, .pci_int_reg = 101789708U}, {.int_vec_bit = 2048U, .tgt_status_reg = 101778272U, .tgt_mask_reg = 101778288U, .pci_int_reg = 101789712U}, {.int_vec_bit = 4096U, .tgt_status_reg = 101778276U, .tgt_mask_reg = 101778292U, .pci_int_reg = 101789716U}, {.int_vec_bit = 8192U, .tgt_status_reg = 101778280U, .tgt_mask_reg = 101778296U, .pci_int_reg = 101789720U}, {.int_vec_bit = 16384U, .tgt_status_reg = 101778284U, .tgt_mask_reg = 101778300U, .pci_int_reg = 101789724U}};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static void netxen_nic_disable_int(struct nx_host_sds_ring *sds_ring)
{
  
#line 151 
  struct netxen_adapter *adapter = sds_ring->adapter;
  
#line 153 
  (*(adapter->io_write))(adapter,sds_ring->crb_intr_mask,0U);
  
#line 154 
  return;
}


#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static void netxen_nic_enable_int(struct nx_host_sds_ring *sds_ring)
{
  
#line 158 
  struct netxen_adapter *adapter = sds_ring->adapter;
  
#line 160 
  (*(adapter->io_write))(adapter,sds_ring->crb_intr_mask,1U);
  
#line 162 
  if ((adapter->flags & 6U) == 0U) 
#line 163 
                                   (*(adapter->io_write))(adapter,adapter->tgt_mask_reg,64511U); else ;
  
#line 164 
  return;
}


#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_alloc_sds_rings(struct netxen_recv_context *recv_ctx, int count)
{
  int __retres;
  
#line 169 
  int size = (int)((unsigned long)count * (unsigned long)408U);
  
#line 171 
  recv_ctx->sds_rings = (struct nx_host_sds_ring *)kzalloc_1((unsigned long)size,208U);
  
#line 173 
  __retres = recv_ctx->sds_rings == (struct nx_host_sds_ring *)0;
  
#line 173 
  return __retres;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_free_sds_rings(struct netxen_recv_context *recv_ctx)
{
  
#line 179 
  kfree((void const *)recv_ctx->sds_rings);
  
#line 180 
  recv_ctx->sds_rings = (struct nx_host_sds_ring *)0;
  
#line 181 
  return;
}


#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_napi_add(struct netxen_adapter *adapter, struct net_device *netdev)
{
  int __retres;
  int ring;
  struct nx_host_sds_ring *sds_ring;
  int tmp;
  
#line 188 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 190 
  tmp = netxen_alloc_sds_rings(recv_ctx,(int)adapter->max_sds_rings);
  
#line 190 
  if (tmp != 0) {
    
#line 191 
    __retres = -12;
    
#line 191 
    goto return_label;
  }
  else ;
  
#line 193 
  ring = 0;
  
#line 193 
  goto ldv_54700;
  ldv_54699: 
#line 194 
  ;
  
#line 194 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 195 
  netif_napi_add(netdev,& sds_ring->napi,& netxen_nic_poll,64);
  
#line 193 
  ring += 1;
  ldv_54700: 
#line 194 
  ;
  
#line 193 
  if ((int)adapter->max_sds_rings > ring) 
#line 195 
                                          goto ldv_54699; else 
#line 198 
                                                               goto ldv_54701;
  ldv_54701: 
#line 199 
  ;
  
#line 199 
  __retres = 0;
  return_label: 
#line 199 
                return __retres;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_napi_del(struct netxen_adapter *adapter)
{
  int ring;
  struct nx_host_sds_ring *sds_ring;
  
#line 207 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 209 
  ring = 0;
  
#line 209 
  goto ldv_54709;
  ldv_54708: 
#line 210 
  ;
  
#line 210 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 211 
  netif_napi_del(& sds_ring->napi);
  
#line 209 
  ring += 1;
  ldv_54709: 
#line 210 
  ;
  
#line 209 
  if ((int)adapter->max_sds_rings > ring) 
#line 211 
                                          goto ldv_54708; else 
#line 214 
                                                               goto ldv_54710;
  ldv_54710: 
#line 215 
  ;
  
#line 214 
  netxen_free_sds_rings(& adapter->recv_ctx);
  
#line 215 
  return;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_napi_enable(struct netxen_adapter *adapter)
{
  int ring;
  struct nx_host_sds_ring *sds_ring;
  
#line 222 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 224 
  ring = 0;
  
#line 224 
  goto ldv_54718;
  ldv_54717: 
#line 225 
  ;
  
#line 225 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 226 
  napi_enable(& sds_ring->napi);
  
#line 227 
  netxen_nic_enable_int(sds_ring);
  
#line 224 
  ring += 1;
  ldv_54718: 
#line 225 
  ;
  
#line 224 
  if ((int)adapter->max_sds_rings > ring) 
#line 226 
                                          goto ldv_54717; else 
#line 229 
                                                               goto ldv_54719;
  ldv_54719: 
#line 230 
  ;
  
#line 231 
  return;
}


#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_napi_disable(struct netxen_adapter *adapter)
{
  int ring;
  struct nx_host_sds_ring *sds_ring;
  
#line 236 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 238 
  ring = 0;
  
#line 238 
  goto ldv_54727;
  ldv_54726: 
#line 239 
  ;
  
#line 239 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 240 
  netxen_nic_disable_int(sds_ring);
  
#line 241 
  napi_synchronize((struct napi_struct const *)(& sds_ring->napi));
  
#line 242 
  napi_disable(& sds_ring->napi);
  
#line 238 
  ring += 1;
  ldv_54727: 
#line 239 
  ;
  
#line 238 
  if ((int)adapter->max_sds_rings > ring) 
#line 240 
                                          goto ldv_54726; else 
#line 243 
                                                               goto ldv_54728;
  ldv_54728: 
#line 244 
  ;
  
#line 245 
  return;
}


#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int nx_set_dma_mask(struct netxen_adapter *adapter)
{
  int __retres;
  uint64_t mask;
  uint64_t cmask;
  int tmp;
  
#line 248 
  struct pci_dev *pdev = adapter->pdev;
  
#line 251 
  adapter->pci_using_dac = (unsigned char)0U;
  
#line 253 
  mask = 4294967295ULL;
  
#line 254 
  cmask = 4294967295ULL;
  
#line 256 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 258 
                                                     mask = 34359738367ULL;
  else {
    
#line 261 
    mask = 549755813887ULL;
    
#line 262 
    cmask = mask;
  }
  
#line 265 
  tmp = pci_set_dma_mask(pdev,mask);
  
#line 265 
  if (tmp == 0) {
    int tmp_0;
    
#line 265 
    tmp_0 = pci_set_consistent_dma_mask(pdev,cmask);
    
#line 265 
    if (tmp_0 == 0) {
      
#line 267 
      adapter->pci_using_dac = (unsigned char)1U;
      
#line 268 
      __retres = 0;
      
#line 268 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 271 
  __retres = -5;
  return_label: 
#line 271 
                return __retres;
}


#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int nx_update_dma_mask(struct netxen_adapter *adapter)
{
  int __retres;
  int change;
  int shift;
  int err;
  uint64_t mask;
  uint64_t old_mask;
  uint64_t old_cmask;
  u32 tmp;
  
#line 280 
  struct pci_dev *pdev = adapter->pdev;
  
#line 282 
  change = 0;
  
#line 284 
  tmp = (*(adapter->crb_read))(adapter,136323788UL);
  
#line 284 
  shift = (int)tmp;
  
#line 285 
  if (shift > 32) {
    
#line 286 
    __retres = 0;
    
#line 286 
    goto return_label;
  }
  else ;
  
#line 288 
  if ((unsigned int)adapter->ahw.revision_id > 47U && shift > 9) 
#line 289 
                                                                 change = 1;
  else 
    
#line 290 
    if ((unsigned int)adapter->ahw.revision_id == 37U && shift <= 4) 
      
#line 291 
      change = 1; else ;
  
#line 293 
  if (change != 0) {
    
#line 294 
    old_mask = pdev->dma_mask;
    
#line 295 
    old_cmask = pdev->dev.coherent_dma_mask;
    
#line 297 
    if (shift != 32) 
#line 297 
                     mask = (1ULL << (shift + 32)) + 18446744073709551615ULL; else 
                                                                    
#line 297 
                                                                    mask = 18446744073709551615ULL;
    
#line 299 
    err = pci_set_dma_mask(pdev,mask);
    
#line 300 
    if (err != 0) 
#line 301 
                  goto err_out; else ;
    
#line 303 
    if ((unsigned int)adapter->ahw.revision_id > 47U) {
      
#line 305 
      err = pci_set_consistent_dma_mask(pdev,mask);
      
#line 306 
      if (err != 0) 
#line 307 
                    goto err_out; else ;
    }
    else ;
    
#line 309 
    _dev_info((struct device const *)(& pdev->dev),"using %d-bit dma mask\n",shift + 32);
  }
  else ;
  
#line 312 
  __retres = 0;
  
#line 312 
  goto return_label;
  err_out: 
#line 314 
  ;
  
#line 315 
  pci_set_dma_mask(pdev,old_mask);
  
#line 316 
  pci_set_consistent_dma_mask(pdev,old_cmask);
  
#line 317 
  __retres = err;
  return_label: 
#line 317 
                return __retres;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_check_hw_init(struct netxen_adapter *adapter, int first_boot)
{
  int __retres;
  u32 val;
  u32 timeout;
  
#line 325 
  if (first_boot == 1431655765) {
    u32 tmp;
    u32 tmp_0;
    
#line 327 
    (*(adapter->crb_write))(adapter,136323580UL,305419896U);
    
#line 329 
    if ((unsigned int)adapter->ahw.revision_id > 37U) {
      
#line 330 
      __retres = 0;
      
#line 330 
      goto return_label;
    }
    else ;
    
#line 333 
    tmp = (*(adapter->crb_read))(adapter,101711876UL);
    
#line 333 
    first_boot = (int)tmp;
    
#line 334 
    if ((first_boot & 4) == 0) {
      
#line 335 
      first_boot |= 4;
      
#line 336 
      (*(adapter->crb_write))(adapter,101711876UL,(unsigned int)first_boot);
      
#line 337 
      (*(adapter->crb_read))(adapter,101711876UL);
    }
    else ;
    
#line 341 
    tmp_0 = (*(adapter->crb_read))(adapter,154140680UL);
    
#line 341 
    first_boot = (int)tmp_0;
    
#line 342 
    if (first_boot != 8388623) {
      
#line 344 
      (*(adapter->crb_write))(adapter,136323580UL,0U);
      
#line 345 
      __retres = -5;
      
#line 345 
      goto return_label;
    }
    else ;
    
#line 349 
    val = (*(adapter->crb_read))(adapter,154140764UL);
    
#line 350 
    (*(adapter->crb_write))(adapter,154140764UL,val | 1U);
    
#line 351 
    timeout = 0U;
    ldv_54752: 
#line 352 
    ;
    
#line 353 
    msleep(1U);
    
#line 354 
    val = (*(adapter->crb_read))(adapter,136323580UL);
    
#line 356 
    timeout += 1U;
    
#line 356 
    if (timeout > 5000U) {
      
#line 357 
      __retres = -5;
      
#line 357 
      goto return_label;
    }
    else ;
    
#line 359 
    if (val == 305419896U) 
#line 361 
                           goto ldv_54752; else 
#line 364 
                                                goto ldv_54753;
    ldv_54753: 
#line 365 
    ;
  }
  else ;
  
#line 361 
  __retres = 0;
  return_label: 
#line 361 
                return __retres;
}


#line 364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_set_port_mode(struct netxen_adapter *adapter)
{
  u32 val;
  u32 data;
  
#line 368 
  val = (unsigned int)adapter->ahw.board_type;
  
#line 369 
  if (val == 34U || val == 40U) {
    
#line 371 
    if (port_mode == 3) {
      
#line 372 
      data = 3U;
      
#line 373 
      (*(adapter->crb_write))(adapter,136323108UL,data);
    }
    else 
      
#line 374 
      if (port_mode == 1) {
        
#line 375 
        data = 1U;
        
#line 376 
        (*(adapter->crb_write))(adapter,136323108UL,data);
      }
      else 
        
#line 377 
        if (port_mode == 5) {
          
#line 378 
          data = 5U;
          
#line 379 
          (*(adapter->crb_write))(adapter,136323108UL,data);
        }
        else 
          
#line 380 
          if (port_mode == 6) {
            
#line 381 
            data = 6U;
            
#line 382 
            (*(adapter->crb_write))(adapter,136323108UL,data);
          }
          else {
            
#line 384 
            data = 4U;
            
#line 385 
            (*(adapter->crb_write))(adapter,136323108UL,data);
          }
    
#line 388 
    if (((wol_port_mode != 3 && wol_port_mode != 1) && wol_port_mode != 5) && wol_port_mode != 6) 
      
#line 392 
      wol_port_mode = 4; else ;
    
#line 394 
    (*(adapter->crb_write))(adapter,136323480UL,(unsigned int)wol_port_mode);
  }
  else ;
  
#line 396 
  return;
}


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_pcie_strap_init(struct netxen_adapter *adapter)
{
  u32 pdevfuncsave;
  int i;
  int pos;
  struct pci_dev *pdev;
  
#line 403 
  u32 c8c9value = 0U;
  
#line 404 
  u32 chicken = 0U;
  
#line 405 
  u32 control = 0U;
  
#line 409 
  pdev = adapter->pdev;
  
#line 411 
  chicken = (*(adapter->crb_read))(adapter,101785800UL);
  
#line 413 
  chicken &= 4244635647U;
  
#line 418 
  pos = pci_find_capability(pdev,16);
  
#line 419 
  if (pos == 192) {
    
#line 420 
    pci_read_config_dword((struct pci_dev const *)pdev,pos + 16,& control);
    
#line 421 
    if ((control & 983040U) != 131072U) 
#line 423 
                                        chicken |= 16777216U; else ;
    
#line 425 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Gen2 strapping detected\n");
    
#line 426 
    c8c9value = 987136U;
  }
  else {
    
#line 429 
    chicken |= 16777216U;
    
#line 430 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Gen1 strapping detected\n");
    
#line 431 
    if ((unsigned int)adapter->ahw.revision_id == 64U) 
#line 432 
                                                       c8c9value = 987168U; else 
                                                                    
#line 434 
                                                                    c8c9value = 0U;
  }
  
#line 437 
  (*(adapter->crb_write))(adapter,101785800UL,chicken);
  
#line 439 
  if (c8c9value == 0U) 
#line 440 
                       goto return_label; else ;
  
#line 442 
  pdevfuncsave = pdev->devfn;
  
#line 443 
  if ((pdevfuncsave & 7U) != 0U) 
#line 444 
                                 goto return_label; else ;
  
#line 446 
  i = 0;
  
#line 446 
  goto ldv_54770;
  ldv_54769: 
#line 447 
  ;
  
#line 447 
  pci_read_config_dword((struct pci_dev const *)pdev,pos + 8,& control);
  
#line 448 
  pci_read_config_dword((struct pci_dev const *)pdev,pos + 8,& control);
  
#line 449 
  pci_write_config_dword((struct pci_dev const *)pdev,pos + 8,c8c9value);
  
#line 450 
  pdev->devfn += 1U;
  
#line 446 
  i += 1;
  ldv_54770: 
#line 447 
  ;
  
#line 446 
  if (i <= 7) 
#line 448 
              goto ldv_54769; else 
#line 451 
                                   goto ldv_54771;
  ldv_54771: 
#line 452 
  ;
  
#line 452 
  pdev->devfn = pdevfuncsave;
  return_label: 
#line 453 
                return;
}


#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_set_msix_bit(struct pci_dev *pdev, int enable)
{
  u32 control;
  
#line 459 
  if ((unsigned int)pdev->msix_cap != 0U) {
    
#line 460 
    pci_read_config_dword((struct pci_dev const *)pdev,(int)pdev->msix_cap,& control);
    
#line 461 
    if (enable != 0) 
#line 462 
                     control |= 32768U; else 
#line 464 
                                             control = 0U;
    
#line 465 
    pci_write_config_dword((struct pci_dev const *)pdev,(int)pdev->msix_cap,control);
  }
  else ;
  
#line 467 
  return;
}


#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_init_msix_entries(struct netxen_adapter *adapter, int count)
{
  int i;
  
#line 473 
  i = 0;
  
#line 473 
  goto ldv_54783;
  ldv_54782: 
#line 474 
  ;
  
#line 474 
  adapter->msix_entries[i].entry = (unsigned short)i;
  
#line 473 
  i += 1;
  ldv_54783: 
#line 474 
  ;
  
#line 473 
  if (i < count) 
#line 475 
                 goto ldv_54782; else 
#line 478 
                                      goto ldv_54784;
  ldv_54784: 
#line 479 
  ;
  
#line 480 
  return;
}


#line 478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_read_mac_addr(struct netxen_adapter *adapter)
{
  int __retres;
  int i;
  unsigned char *p;
  u64 mac_addr;
  int tmp_2;
  bool tmp_1;
  
#line 483 
  struct net_device *netdev = adapter->netdev;
  
#line 484 
  struct pci_dev *pdev = adapter->pdev;
  
#line 486 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    int tmp;
    
#line 487 
    tmp = netxen_p3_get_mac_addr(adapter,& mac_addr);
    
#line 487 
    if (tmp != 0) {
      
#line 488 
      __retres = -5;
      
#line 488 
      goto return_label;
    }
    else ;
  }
  else {
    int tmp_0;
    
#line 490 
    tmp_0 = netxen_get_flash_mac_addr(adapter,& mac_addr);
    
#line 490 
    if (tmp_0 != 0) {
      
#line 491 
      __retres = -5;
      
#line 491 
      goto return_label;
    }
    else ;
  }
  
#line 494 
  p = (unsigned char *)(& mac_addr);
  
#line 495 
  i = 0;
  
#line 495 
  goto ldv_54794;
  ldv_54793: 
#line 496 
  ;
  
#line 496 
  *(netdev->dev_addr + i) = *(p + ((unsigned int)(- i) + 5U));
  
#line 495 
  i += 1;
  ldv_54794: 
#line 496 
  ;
  
#line 495 
  if (i <= 5) 
#line 497 
              goto ldv_54793; else 
#line 500 
                                   goto ldv_54795;
  ldv_54795: 
#line 501 
  ;
  
#line 498 
  memcpy((void *)(& adapter->mac_addr),(void const *)netdev->dev_addr,(unsigned long)netdev->addr_len);
  
#line 502 
  tmp_1 = is_valid_ether_addr((u8 const *)netdev->dev_addr);
  
#line 502 
  if (tmp_1) 
#line 502 
             tmp_2 = 0; else 
#line 502 
                             tmp_2 = 1;
  
#line 502 
  if (tmp_2) 
#line 503 
             dev_warn((struct device const *)(& pdev->dev),"Bad MAC address %pM.\n",netdev->dev_addr); else ;
  
#line 505 
  __retres = 0;
  return_label: 
#line 505 
                return __retres;
}


#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_set_mac(struct net_device *netdev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  bool tmp_2;
  bool tmp_3;
  
#line 510 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 511 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 513 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 513 
  if (tmp_0) 
#line 513 
             tmp_1 = 0; else 
#line 513 
                             tmp_1 = 1;
  
#line 513 
  if (tmp_1) {
    
#line 514 
    __retres = -99;
    
#line 514 
    goto return_label;
  }
  else ;
  
#line 516 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 516 
  if ((int)tmp_2 != 0) {
    
#line 517 
    netif_device_detach(netdev);
    
#line 518 
    netxen_napi_disable(adapter);
  }
  else ;
  
#line 521 
  memcpy((void *)(& adapter->mac_addr),(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 522 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 523 
  (*(adapter->macaddr_set))(adapter,(u8 *)(& addr->sa_data));
  
#line 525 
  tmp_3 = netif_running((struct net_device const *)netdev);
  
#line 525 
  if ((int)tmp_3 != 0) {
    
#line 526 
    netif_device_attach(netdev);
    
#line 527 
    netxen_napi_enable(adapter);
  }
  else ;
  
#line 529 
  __retres = 0;
  return_label: 
#line 529 
                return __retres;
}


#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_set_multicast_list(struct net_device *dev)
{
  
#line 534 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 536 
  (*(adapter->set_multi))(dev);
  
#line 537 
  return;
}


#line 539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static netdev_features_t netxen_fix_features(struct net_device *dev, netdev_features_t features)
{
  
#line 542 
  if ((features & 17179869184ULL) == 0ULL) {
    
#line 543 
    netdev_info((struct net_device const *)dev,"disabling LRO as RXCSUM is off\n");
    
#line 545 
    features &= 18446744073709518847ULL;
  }
  else ;
  
#line 548 
  return features;
}


#line 551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  int hw_lro;
  int tmp_0;
  
#line 554 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 557 
  if (((dev->features ^ features) & 32768ULL) == 0ULL) {
    
#line 558 
    __retres = 0;
    
#line 558 
    goto return_label;
  }
  else ;
  
#line 560 
  hw_lro = (int)(features >> 12) & 8;
  
#line 563 
  tmp_0 = netxen_config_hw_lro(adapter,hw_lro);
  
#line 563 
  if (tmp_0 != 0) {
    
#line 564 
    __retres = -5;
    
#line 564 
    goto return_label;
  }
  else ;
  
#line 566 
  if ((features & 32768ULL) == 0ULL) {
    int tmp_1;
    
#line 566 
    tmp_1 = netxen_send_lro_cleanup(adapter);
    
#line 566 
    if (tmp_1 != 0) {
      
#line 567 
      __retres = -5;
      
#line 567 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 569 
  __retres = 0;
  return_label: 
#line 569 
                return __retres;
}


#line 572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct net_device_ops const netxen_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & netxen_nic_open, .ndo_stop = & netxen_nic_close, .ndo_start_xmit = & netxen_nic_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & netxen_set_multicast_list, .ndo_set_mac_address = & netxen_nic_set_mac, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = (int (*)(struct net_device *, struct ifreq *, int ))0, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & netxen_nic_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & netxen_tx_timeout, .ndo_get_stats64 = & netxen_nic_get_stats, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & netxen_nic_poll_controller, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = & netxen_fix_features, .ndo_set_features = & netxen_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static bool netxen_function_zero(struct pci_dev *pdev)
{
  bool __retres;
  
#line 591 
  __retres = (_Bool)((pdev->devfn & 7U) == 0U);
  
#line 591 
  return __retres;
}


#line 594  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static void netxen_set_interrupt_mode(struct netxen_adapter *adapter, u32 mode)
{
  
#line 597 
  (*(adapter->crb_write))(adapter,136323652UL,mode);
  
#line 598 
  return;
}


#line 600  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static u32 netxen_get_interrupt_mode(struct netxen_adapter *adapter)
{
  u32 tmp;
  
#line 602 
  tmp = (*(adapter->crb_read))(adapter,136323652UL);
  
#line 602 
  return tmp;
}


#line 606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_initialize_interrupt_registers(struct netxen_adapter *adapter)
{
  struct netxen_legacy_intr_set *legacy_intrp;
  u32 tgt_status_reg;
  u32 int_state_reg;
  
#line 611 
  if ((unsigned int)adapter->ahw.revision_id > 63U) 
#line 612 
                                                    legacy_intrp = & legacy_intr[(int)adapter->ahw.pci_func]; else 
                                                                    
#line 614 
                                                                    legacy_intrp = &(legacy_intr[0]);
  
#line 616 
  tgt_status_reg = legacy_intrp->tgt_status_reg;
  
#line 617 
  int_state_reg = 101785708U;
  
#line 619 
  adapter->int_vec_bit = legacy_intrp->int_vec_bit;
  
#line 620 
  adapter->tgt_status_reg = netxen_get_ioaddr(adapter,tgt_status_reg);
  
#line 621 
  adapter->tgt_mask_reg = netxen_get_ioaddr(adapter,legacy_intrp->tgt_mask_reg);
  
#line 623 
  adapter->pci_int_reg = netxen_get_ioaddr(adapter,legacy_intrp->pci_int_reg);
  
#line 625 
  adapter->isr_int_vec = netxen_get_ioaddr(adapter,101777664U);
  
#line 627 
  if ((unsigned int)adapter->ahw.revision_id > 64U) 
#line 628 
                                                    adapter->crb_int_state_reg = netxen_get_ioaddr(adapter,int_state_reg); else 
                                                                    
#line 631 
                                                                    adapter->crb_int_state_reg = netxen_get_ioaddr(adapter,136323796U);
  
#line 632 
  return;
}


#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_setup_msi_interrupts(struct netxen_adapter *adapter, int num_msix)
{
  int __retres;
  u32 value;
  int err;
  
#line 638 
  struct pci_dev *pdev = adapter->pdev;
  
#line 642 
  if ((unsigned int)adapter->msix_supported != 0U) {
    
#line 643 
    netxen_init_msix_entries(adapter,num_msix);
    
#line 644 
    err = pci_enable_msix_range(pdev,(struct msix_entry *)(& adapter->msix_entries),num_msix,num_msix);
    
#line 646 
    if (err > 0) {
      
#line 647 
      adapter->flags |= 4U;
      
#line 648 
      netxen_set_msix_bit(pdev,1);
      
#line 650 
      if ((unsigned int)adapter->rss_supported != 0U) 
#line 651 
                                                      adapter->max_sds_rings = (unsigned char)num_msix; else ;
      
#line 653 
      _dev_info((struct device const *)(& pdev->dev),"using msi-x interrupts\n");
      
#line 654 
      __retres = 0;
      
#line 654 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 659 
  if (use_msi != 0) {
    int tmp;
    
#line 659 
    tmp = pci_enable_msi_exact(pdev,1);
    
#line 659 
    if (tmp == 0) {
      
#line 660 
      value = msi_tgt_status[(int)adapter->ahw.pci_func];
      
#line 661 
      adapter->flags |= 2U;
      
#line 662 
      adapter->tgt_status_reg = netxen_get_ioaddr(adapter,value);
      
#line 663 
      adapter->msix_entries[0].vector = pdev->irq;
      
#line 664 
      _dev_info((struct device const *)(& pdev->dev),"using msi interrupts\n");
      
#line 665 
      __retres = 0;
      
#line 665 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 668 
  dev_err((struct device const *)(& pdev->dev),"Failed to acquire MSI-X/MSI interrupt vector\n");
  
#line 669 
  __retres = -5;
  return_label: 
#line 669 
                return __retres;
}


#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_setup_intr(struct netxen_adapter *adapter)
{
  int __retres;
  int num_msix;
  bool tmp_3;
  
#line 674 
  struct pci_dev *pdev = adapter->pdev;
  
#line 677 
  if ((unsigned int)adapter->rss_supported != 0U) {
    unsigned int tmp;
    
#line 678 
    tmp = cpumask_weight(cpu_online_mask);
    
#line 678 
    if (tmp > 3U) 
#line 678 
                  num_msix = 4; else 
#line 678 
                                     num_msix = 2;
  }
  else 
#line 681 
       num_msix = 1;
  
#line 683 
  adapter->max_sds_rings = (unsigned char)1U;
  
#line 684 
  adapter->flags &= 4294967289U;
  
#line 686 
  netxen_initialize_interrupt_registers(adapter);
  
#line 687 
  netxen_set_msix_bit(pdev,0);
  
#line 689 
  tmp_3 = netxen_function_zero(pdev);
  
#line 689 
  if ((int)tmp_3 != 0) {
    int tmp_0;
    
#line 690 
    tmp_0 = netxen_setup_msi_interrupts(adapter,num_msix);
    
#line 690 
    if (tmp_0 == 0) 
#line 691 
                    netxen_set_interrupt_mode(adapter,1U); else 
#line 693 
                                                                netxen_set_interrupt_mode(adapter,2U);
  }
  else {
    u32 tmp_1;
    
#line 695 
    tmp_1 = netxen_get_interrupt_mode(adapter);
    
#line 695 
    if (tmp_1 == 1U) {
      int tmp_2;
      
#line 695 
      tmp_2 = netxen_setup_msi_interrupts(adapter,num_msix);
      
#line 695 
      if (tmp_2 != 0) {
        
#line 697 
        dev_err((struct device const *)(& pdev->dev),"Co-existence of MSI-X/MSI and INTx interrupts is not supported\n");
        
#line 698 
        __retres = -5;
        
#line 698 
        goto return_label;
      }
      else ;
    }
    else ;
  }
  
#line 702 
  if ((adapter->flags & 6U) == 0U) {
    
#line 703 
    adapter->msix_entries[0].vector = pdev->irq;
    
#line 704 
    _dev_info((struct device const *)(& pdev->dev),"using legacy interrupts\n");
  }
  else ;
  
#line 706 
  __retres = 0;
  return_label: 
#line 706 
                return __retres;
}


#line 710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_teardown_intr(struct netxen_adapter *adapter)
{
  
#line 712 
  if ((adapter->flags & 4U) != 0U) 
#line 713 
                                   pci_disable_msix(adapter->pdev); else ;
  
#line 714 
  if ((adapter->flags & 2U) != 0U) 
#line 715 
                                   pci_disable_msi(adapter->pdev); else ;
  
#line 716 
  return;
}


#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_cleanup_pci_map(struct netxen_adapter *adapter)
{
  
#line 721 
  if (adapter->ahw.db_base != (void *)0) 
#line 722 
                                         iounmap((void volatile *)adapter->ahw.db_base); else ;
  
#line 723 
  if (adapter->ahw.pci_base0 != (void *)0) 
#line 724 
                                           iounmap((void volatile *)adapter->ahw.pci_base0); else ;
  
#line 725 
  if (adapter->ahw.pci_base1 != (void *)0) 
#line 726 
                                           iounmap((void volatile *)adapter->ahw.pci_base1); else ;
  
#line 727 
  if (adapter->ahw.pci_base2 != (void *)0) 
#line 728 
                                           iounmap((void volatile *)adapter->ahw.pci_base2); else ;
  
#line 729 
  return;
}


#line 732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_setup_pci_map(struct netxen_adapter *adapter)
{
  int __retres;
  resource_size_t mem_base;
  resource_size_t db_base;
  unsigned long mem_len;
  resource_size_t tmp;
  resource_size_t tmp_1;
  
#line 734 
  void *db_ptr = (void *)0;
  
#line 737 
  unsigned long db_len = 0UL;
  
#line 739 
  struct pci_dev *pdev = adapter->pdev;
  
#line 740 
  int pci_func = (int)adapter->ahw.pci_func;
  
#line 741 
  struct netxen_hardware_context *ahw = & adapter->ahw;
  
#line 743 
  int err = 0;
  
#line 749 
  adapter->ahw.crb_win = 4294967295U;
  
#line 750 
  adapter->ahw.ocm_win = 4294967295U;
  
#line 753 
  mem_base = pdev->resource[0].start;
  
#line 754 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 754 
    tmp = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 754 
                                                                    tmp = 0ULL;
  
#line 754 
  mem_len = (unsigned long)tmp;
  
#line 757 
  if (mem_len == 134217728UL) {
    
#line 759 
    ahw->pci_base0 = ioremap(mem_base,1048576UL);
    
#line 760 
    ahw->pci_base1 = ioremap(mem_base + 100663296ULL,9158656UL);
    
#line 762 
    ahw->pci_base2 = ioremap(mem_base + 118374400ULL,15843328UL);
    
#line 764 
    if ((ahw->pci_base0 == (void *)0 || ahw->pci_base1 == (void *)0) || ahw->pci_base2 == (void *)0) {
      
#line 766 
      dev_err((struct device const *)(& pdev->dev),"failed to map PCI bar 0\n");
      
#line 767 
      err = -5;
      
#line 768 
      goto err_out;
    }
    else ;
    
#line 771 
    ahw->pci_len0 = 1048576UL;
  }
  else 
    
#line 773 
    if (mem_len == 33554432UL) {
      
#line 775 
      ahw->pci_base1 = ioremap(mem_base,9158656UL);
      
#line 776 
      ahw->pci_base2 = ioremap(mem_base + 17711104ULL,15843328UL);
      
#line 778 
      if (ahw->pci_base1 == (void *)0 || ahw->pci_base2 == (void *)0) {
        
#line 779 
        dev_err((struct device const *)(& pdev->dev),"failed to map PCI bar 0\n");
        
#line 780 
        err = -5;
        
#line 781 
        goto err_out;
      }
      else ;
    }
    else 
      
#line 784 
      if (mem_len == 2097152UL) {
        
#line 786 
        ahw->pci_base0 = pci_ioremap_bar(pdev,0);
        
#line 787 
        if (ahw->pci_base0 == (void *)0) {
          
#line 788 
          dev_err((struct device const *)(& pdev->dev),"failed to map PCI bar 0\n");
          
#line 789 
          __retres = -5;
          
#line 789 
          goto return_label;
        }
        else ;
        
#line 791 
        ahw->pci_len0 = mem_len;
      }
      else {
        
#line 793 
        __retres = -5;
        
#line 793 
        goto return_label;
      }
  
#line 796 
  netxen_setup_hwops(adapter);
  
#line 798 
  _dev_info((struct device const *)(& pdev->dev),"%dMB memory map\n",(int)(mem_len >> 20));
  
#line 800 
  if ((unsigned int)adapter->ahw.revision_id > 79U) 
#line 801 
                                                    adapter->ahw.ocm_win_crb = netxen_get_ioaddr(adapter,(unsigned int)((pci_func + 2112) * 32) + 101711872U);
  else 
    
#line 804 
    if ((unsigned int)adapter->ahw.revision_id > 47U) {
      unsigned int tmp_0;
      
#line 805 
      if (pci_func <= 3) 
#line 805 
                         tmp_0 = (unsigned int)((pci_func + 2064) * 32) + 101711872U; else 
                                                                    
#line 805 
                                                                    tmp_0 = (unsigned int)((pci_func + 4134) * 16) + 101711872U;
      
#line 805 
      ;
      
#line 805 
      adapter->ahw.ocm_win_crb = netxen_get_ioaddr(adapter,tmp_0);
    }
    else ;
  
#line 809 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 810 
                                                    goto skip_doorbell; else ;
  
#line 812 
  db_base = pdev->resource[4].start;
  
#line 813 
  if (pdev->resource[4].start != 0ULL || pdev->resource[4].end != pdev->resource[4].start) 
    
#line 813 
    tmp_1 = (pdev->resource[4].end - pdev->resource[4].start) + 1ULL; else 
                                                                    
#line 813 
                                                                    tmp_1 = 0ULL;
  
#line 813 
  db_len = (unsigned long)tmp_1;
  
#line 815 
  if (db_len == 0UL) {
    
#line 816 
    printk("\001",(char *)(& netxen_nic_driver_name));
    
#line 818 
    err = -5;
    
#line 819 
    goto err_out;
  }
  else ;
  
#line 822 
  db_ptr = ioremap(db_base,4096UL);
  
#line 823 
  if (db_ptr == (void *)0) {
    
#line 824 
    printk("\001",(char *)(& netxen_nic_driver_name));
    
#line 826 
    err = -5;
    
#line 827 
    goto err_out;
  }
  else ;
  skip_doorbell: 
#line 830 
  ;
  
#line 831 
  adapter->ahw.db_base = db_ptr;
  
#line 832 
  adapter->ahw.db_len = db_len;
  
#line 833 
  __retres = 0;
  
#line 833 
  goto return_label;
  err_out: 
#line 835 
  ;
  
#line 836 
  netxen_cleanup_pci_map(adapter);
  
#line 837 
  __retres = err;
  return_label: 
#line 837 
                return __retres;
}


#line 841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_check_options(struct netxen_adapter *adapter)
{
  u32 fw_major;
  u32 fw_minor;
  u32 fw_build;
  u32 prev_fw_version;
  char brd_name[32U];
  char serial_num[32U];
  int i;
  int offset;
  int val;
  int err;
  __le32 *ptr32;
  int tmp;
  char *tmp_4;
  
#line 848 
  struct pci_dev *pdev = adapter->pdev;
  
#line 850 
  adapter->driver_mismatch = (unsigned char)0U;
  
#line 852 
  ptr32 = (__le32 *)(& serial_num);
  
#line 853 
  offset = 4098076;
  
#line 854 
  i = 0;
  
#line 854 
  goto ldv_54881;
  ldv_54880: 
#line 855 
  ;
  
#line 855 
  tmp = netxen_rom_fast_read(adapter,offset,& val);
  
#line 855 
  if (tmp == -1) {
    
#line 856 
    dev_err((struct device const *)(& pdev->dev),"error reading board info\n");
    
#line 857 
    adapter->driver_mismatch = (unsigned char)1U;
    
#line 858 
    goto return_label;
  }
  else ;
  
#line 860 
  *(ptr32 + i) = (unsigned int)val;
  
#line 861 
  offset = (int)((unsigned int)offset + 4U);
  
#line 854 
  i += 1;
  ldv_54881: 
#line 855 
  ;
  
#line 854 
  if (i <= 7) 
#line 856 
              goto ldv_54880; else 
#line 859 
                                   goto ldv_54882;
  ldv_54882: 
#line 860 
  ;
  
#line 864 
  fw_major = (*(adapter->crb_read))(adapter,136323408UL);
  
#line 865 
  fw_minor = (*(adapter->crb_read))(adapter,136323412UL);
  
#line 866 
  fw_build = (*(adapter->crb_read))(adapter,136323416UL);
  
#line 867 
  prev_fw_version = adapter->fw_version;
  
#line 868 
  adapter->fw_version = ((fw_major << 24) + (fw_minor << 16)) + fw_build;
  
#line 871 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 872 
    if (adapter->mdump.md_template == (void *)0 || adapter->fw_version > prev_fw_version) {
      
#line 874 
      kfree((void const *)adapter->mdump.md_template);
      
#line 875 
      adapter->mdump.md_template = (void *)0;
      
#line 876 
      err = netxen_setup_minidump(adapter);
      
#line 877 
      if (err != 0) 
#line 878 
                    dev_err((struct device const *)(& (adapter->pdev)->dev),"Failed to setup minidump rcode = %d\n",err); else ;
    }
    else ;
  }
  else ;
  
#line 883 
  if ((unsigned int)adapter->portnum == 0U) {
    int tmp_0;
    char *tmp_2;
    
#line 884 
    tmp_0 = netxen_nic_get_brd_name_by_type((unsigned int)adapter->ahw.board_type,(char *)(& brd_name));
    
#line 884 
    if (tmp_0 != 0) 
#line 886 
                    strcpy((char *)(& serial_num),"Unknown"); else ;
    
#line 888 
    ;
    {
      char *tmp_1;
      
#line 888 
      struct module *__mod = & __this_module;
      
#line 888 
      if (__mod != (struct module *)0) 
#line 888 
                                       tmp_1 = (char *)(& __mod->name); else 
                                                                    
#line 888 
                                                                    tmp_1 = (char *)"kernel";
      
#line 888 
      tmp_2 = tmp_1;
    }
    
#line 888 
    printk("\001",tmp_2,(char *)(& brd_name),(char *)(& serial_num),(int)adapter->ahw.revision_id);
  }
  else ;
  
#line 893 
  if (adapter->fw_version <= 50594007U) {
    
#line 894 
    adapter->driver_mismatch = (unsigned char)1U;
    
#line 895 
    dev_warn((struct device const *)(& pdev->dev),"firmware version %d.%d.%d unsupported\n",fw_major,fw_minor,fw_build);
    
#line 897 
    goto return_label;
  }
  else ;
  
#line 900 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    u32 tmp_3;
    
#line 901 
    tmp_3 = (*(adapter->crb_read))(adapter,105906220UL);
    
#line 901 
    i = (int)tmp_3;
    
#line 902 
    adapter->ahw.cut_through = (unsigned char)((unsigned int)((unsigned char)(i >> 15)) & 1U);
  }
  else ;
  
#line 905 
  if ((unsigned int)adapter->ahw.cut_through != 0U) 
#line 905 
                                                    tmp_4 = (char *)"cut-through"; else 
                                                                    
#line 905 
                                                                    tmp_4 = (char *)"legacy";
  
#line 905 
  ;
  
#line 905 
  ;
  
#line 905 
  ;
  
#line 905 
  ;
  
#line 905 
  _dev_info((struct device const *)(& pdev->dev),"Driver v%s, firmware v%d.%d.%d [%s]\n",(char *)"4.0.82",fw_major,fw_minor,fw_build,tmp_4);
  
#line 909 
  if (adapter->fw_version > 67109085U) 
#line 910 
                                       adapter->capabilities = (*(adapter->crb_read))(adapter,136323368UL); else ;
  
#line 912 
  if ((unsigned int)adapter->ahw.port_type == 2U) {
    
#line 913 
    adapter->num_rxd = (unsigned short)4096U;
    
#line 914 
    adapter->num_jumbo_rxd = (unsigned short)1024U;
  }
  else 
    
#line 915 
    if ((unsigned int)adapter->ahw.port_type == 1U) {
      
#line 916 
      adapter->num_rxd = (unsigned short)2048U;
      
#line 917 
      adapter->num_jumbo_rxd = (unsigned short)512U;
    }
    else ;
  
#line 920 
  adapter->msix_supported = (unsigned char)0U;
  
#line 921 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 922 
    adapter->msix_supported = (unsigned char)(use_msi_x != 0);
    
#line 923 
    adapter->rss_supported = (unsigned char)(use_msi_x != 0);
  }
  else {
    
#line 925 
    u32 flashed_ver = 0U;
    
#line 926 
    netxen_rom_fast_read(adapter,4097032,(int *)(& flashed_ver));
    
#line 928 
    flashed_ver = ((flashed_ver << 24) + (((flashed_ver >> 8) << 16) & 16711680U)) + (flashed_ver >> 16);
    
#line 930 
    if (flashed_ver > 50594127U) {
      
#line 931 
      switch ((int)adapter->ahw.board_type) {
        case 11: 
#line 932 
        ;
        case 15: 
#line 933 
        ;
        
#line 934 
        adapter->msix_supported = (unsigned char)(use_msi_x != 0);
        
#line 935 
        adapter->rss_supported = (unsigned char)(use_msi_x != 0);
        
#line 936 
        goto ldv_54888;
        default: 
#line 937 
        ;
        
#line 938 
        goto ldv_54888;
      }
      ldv_54888: 
#line 940 
      ;
    }
    else ;
  }
  
#line 943 
  adapter->num_txd = (unsigned short)1024U;
  
#line 945 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 946 
    adapter->num_lro_rxd = (unsigned short)8U;
    
#line 947 
    adapter->max_rds_rings = (unsigned char)3U;
  }
  else {
    
#line 949 
    adapter->num_lro_rxd = (unsigned short)0U;
    
#line 950 
    adapter->max_rds_rings = (unsigned char)2U;
  }
  return_label: 
#line 952 
                return;
}


#line 955  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_start_firmware(struct netxen_adapter *adapter)
{
  int __retres;
  int val;
  int err;
  int first_boot;
  u32 tmp;
  
#line 958 
  struct pci_dev *pdev = adapter->pdev;
  
#line 961 
  err = nx_set_dma_mask(adapter);
  
#line 962 
  if (err != 0) {
    
#line 963 
    __retres = err;
    
#line 963 
    goto return_label;
  }
  else ;
  
#line 965 
  err = netxen_can_start_firmware(adapter);
  
#line 967 
  if (err < 0) {
    
#line 968 
    __retres = err;
    
#line 968 
    goto return_label;
  }
  else ;
  
#line 970 
  if (err == 0) 
#line 971 
                goto wait_init; else ;
  
#line 973 
  tmp = (*(adapter->crb_read))(adapter,136323580UL);
  
#line 973 
  first_boot = (int)tmp;
  
#line 975 
  err = netxen_check_hw_init(adapter,first_boot);
  
#line 976 
  if (err != 0) {
    
#line 977 
    dev_err((struct device const *)(& pdev->dev),"error in init HW init sequence\n");
    
#line 978 
    __retres = err;
    
#line 978 
    goto return_label;
  }
  else ;
  
#line 981 
  netxen_request_firmware(adapter);
  
#line 983 
  err = netxen_need_fw_reset(adapter);
  
#line 984 
  if (err < 0) 
#line 985 
               goto err_out; else ;
  
#line 986 
  if (err == 0) 
#line 987 
                goto pcie_strap_init; else ;
  
#line 989 
  if (first_boot != 1431655765) {
    
#line 990 
    (*(adapter->crb_write))(adapter,136323664UL,0U);
    
#line 991 
    netxen_pinit_from_rom(adapter);
    
#line 992 
    msleep(1U);
  }
  else ;
  
#line 995 
  (*(adapter->crb_write))(adapter,136323788UL,1431655765U);
  
#line 996 
  (*(adapter->crb_write))(adapter,136323240UL,0U);
  
#line 997 
  (*(adapter->crb_write))(adapter,136323244UL,0U);
  
#line 999 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1000 
                                                    netxen_set_port_mode(adapter); else ;
  
#line 1002 
  err = netxen_load_firmware(adapter);
  
#line 1003 
  if (err != 0) 
#line 1004 
                goto err_out; else ;
  
#line 1006 
  netxen_release_firmware(adapter);
  
#line 1008 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 1011 
    val = 30292;
    
#line 1012 
    if ((unsigned int)adapter->ahw.port_type == 2U) 
#line 1013 
                                                    val |= 251658240; else ;
    
#line 1014 
    (*(adapter->crb_write))(adapter,106958848UL,(unsigned int)val);
  }
  else ;
  
#line 1018 
  err = netxen_init_dummy_dma(adapter);
  
#line 1019 
  if (err != 0) 
#line 1020 
                goto err_out; else ;
  
#line 1025 
  val = 262226;
  
#line 1028 
  (*(adapter->crb_write))(adapter,136324256UL,(unsigned int)val);
  pcie_strap_init: 
#line 1030 
  ;
  
#line 1031 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1032 
                                                    netxen_pcie_strap_init(adapter); else ;
  wait_init: 
#line 1034 
  ;
  
#line 1036 
  err = netxen_phantom_init(adapter,0);
  
#line 1037 
  if (err != 0) {
    
#line 1038 
    netxen_free_dummy_dma(adapter);
    
#line 1039 
    goto err_out;
  }
  else ;
  
#line 1042 
  (*(adapter->crb_write))(adapter,136323392UL,3U);
  
#line 1044 
  nx_update_dma_mask(adapter);
  
#line 1046 
  netxen_check_options(adapter);
  
#line 1048 
  adapter->need_fw_reset = (unsigned char)0U;
  err_out: 
#line 1052 
  ;
  
#line 1053 
  netxen_release_firmware(adapter);
  
#line 1054 
  __retres = err;
  return_label: 
#line 1054 
                return __retres;
}


#line 1058  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_request_irq(struct netxen_adapter *adapter)
{
  int __retres;
  irqreturn_t (*handler)(int , void *);
  struct nx_host_sds_ring *sds_ring;
  int err;
  int ring;
  
#line 1064 
  unsigned long flags = 0UL;
  
#line 1065 
  struct net_device *netdev = adapter->netdev;
  
#line 1066 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 1068 
  if ((adapter->flags & 4U) != 0U) 
#line 1069 
                                   handler = & netxen_msix_intr;
  else 
    
#line 1070 
    if ((adapter->flags & 2U) != 0U) 
#line 1071 
                                     handler = & netxen_msi_intr;
    else {
      
#line 1073 
      flags |= 128UL;
      
#line 1074 
      handler = & netxen_intr;
    }
  
#line 1076 
  adapter->irq = (unsigned int)netdev->irq;
  
#line 1078 
  ring = 0;
  
#line 1078 
  goto ldv_54911;
  ldv_54910: 
#line 1079 
  ;
  
#line 1079 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 1080 
  sprintf((char *)(& sds_ring->name),"%s[%d]",(char *)(& netdev->name),ring);
  
#line 1081 
  err = ldv_request_irq_73((unsigned int)sds_ring->irq,handler,flags,(char const *)(& sds_ring->name),(void *)sds_ring);
  
#line 1083 
  if (err != 0) {
    
#line 1084 
    __retres = err;
    
#line 1084 
    goto return_label;
  }
  else ;
  
#line 1078 
  ring += 1;
  ldv_54911: 
#line 1079 
  ;
  
#line 1078 
  if ((int)adapter->max_sds_rings > ring) 
#line 1080 
                                          goto ldv_54910; else 
#line 1083 
                                                               goto ldv_54912;
  ldv_54912: 
#line 1084 
  ;
  
#line 1087 
  __retres = 0;
  return_label: 
#line 1087 
                return __retres;
}


#line 1091  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_free_irq(struct netxen_adapter *adapter)
{
  int ring;
  struct nx_host_sds_ring *sds_ring;
  
#line 1096 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 1098 
  ring = 0;
  
#line 1098 
  goto ldv_54920;
  ldv_54919: 
#line 1099 
  ;
  
#line 1099 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 1100 
  ldv_free_irq_74((unsigned int)sds_ring->irq,(void *)sds_ring);
  
#line 1098 
  ring += 1;
  ldv_54920: 
#line 1099 
  ;
  
#line 1098 
  if ((int)adapter->max_sds_rings > ring) 
#line 1100 
                                          goto ldv_54919; else 
#line 1103 
                                                               goto ldv_54921;
  ldv_54921: 
#line 1104 
  ;
  
#line 1105 
  return;
}


#line 1105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_init_coalesce_defaults(struct netxen_adapter *adapter)
{
  
#line 1107 
  adapter->coal.flags = (unsigned short)4U;
  
#line 1108 
  adapter->coal.normal.data.rx_time_us = (unsigned short)3U;
  
#line 1110 
  adapter->coal.normal.data.rx_packets = (unsigned short)256U;
  
#line 1112 
  adapter->coal.normal.data.tx_time_us = (unsigned short)4U;
  
#line 1114 
  adapter->coal.normal.data.tx_packets = (unsigned short)64U;
  
#line 1115 
  return;
}


#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int __netxen_nic_up(struct netxen_adapter *adapter, struct net_device *netdev)
{
  int __retres;
  int err;
  
#line 1124 
  if ((unsigned int)adapter->is_up != 777U) {
    
#line 1125 
    __retres = -5;
    
#line 1125 
    goto return_label;
  }
  else ;
  
#line 1127 
  err = (*(adapter->init_port))(adapter,(int)adapter->physical_port);
  
#line 1128 
  if (err != 0) {
    
#line 1129 
    printk("\001",(char *)(& netxen_nic_driver_name),(int)adapter->portnum);
    
#line 1131 
    __retres = err;
    
#line 1131 
    goto return_label;
  }
  else ;
  
#line 1133 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 1134 
                                                     (*(adapter->macaddr_set))(adapter,(u8 *)(& adapter->mac_addr)); else ;
  
#line 1136 
  (*(adapter->set_multi))(netdev);
  
#line 1137 
  (*(adapter->set_mtu))(adapter,(int)netdev->mtu);
  
#line 1139 
  adapter->ahw.linkup = (unsigned char)0U;
  
#line 1141 
  if ((unsigned int)adapter->max_sds_rings > 1U) 
#line 1142 
                                                 netxen_config_rss(adapter,1); else ;
  
#line 1144 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1145 
                                                    netxen_config_intr_coalesce(adapter); else ;
  
#line 1147 
  if ((netdev->features & 32768ULL) != 0ULL) 
#line 1148 
                                             netxen_config_hw_lro(adapter,8); else ;
  
#line 1150 
  netxen_napi_enable(adapter);
  
#line 1152 
  if ((adapter->capabilities & 32U) != 0U) 
#line 1153 
                                           netxen_linkevent_request(adapter,1); else 
                                                                    
#line 1155 
                                                                    netxen_nic_set_link_parameters(adapter);
  
#line 1157 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 1158 
  __retres = 0;
  return_label: 
#line 1158 
                return __retres;
}


#line 1164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static int netxen_nic_up(struct netxen_adapter *adapter, struct net_device *netdev)
{
  bool tmp;
  
#line 1166 
  int err = 0;
  
#line 1168 
  rtnl_lock();
  
#line 1169 
  tmp = netif_running((struct net_device const *)netdev);
  
#line 1169 
  if ((int)tmp != 0) 
#line 1170 
                     err = __netxen_nic_up(adapter,netdev); else ;
  
#line 1171 
  rtnl_unlock();
  
#line 1173 
  return err;
}


#line 1178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void __netxen_nic_down(struct netxen_adapter *adapter, struct net_device *netdev)
{
  int tmp;
  
#line 1180 
  if ((unsigned int)adapter->is_up != 777U) 
#line 1181 
                                            goto return_label; else ;
  
#line 1183 
  tmp = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 1183 
  if (tmp == 0) 
#line 1184 
                goto return_label; else ;
  
#line 1185 
  ldv_inline_asm();
  
#line 1187 
  netif_carrier_off(netdev);
  
#line 1188 
  netif_tx_disable(netdev);
  
#line 1190 
  if ((adapter->capabilities & 32U) != 0U) 
#line 1191 
                                           netxen_linkevent_request(adapter,0); else ;
  
#line 1193 
  if (adapter->stop_port != (int (*)(struct netxen_adapter *))0) 
#line 1194 
                                                                 (*(adapter->stop_port))(adapter); else ;
  
#line 1196 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1197 
                                                    netxen_p3_free_mac_list(adapter); else ;
  
#line 1199 
  (*(adapter->set_promisc))(adapter,0U);
  
#line 1201 
  netxen_napi_disable(adapter);
  
#line 1203 
  netxen_release_tx_buffers(adapter);
  return_label: 
#line 1204 
                return;
}


#line 1209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static void netxen_nic_down(struct netxen_adapter *adapter, struct net_device *netdev)
{
  bool tmp;
  
#line 1211 
  rtnl_lock();
  
#line 1212 
  tmp = netif_running((struct net_device const *)netdev);
  
#line 1212 
  if ((int)tmp != 0) 
#line 1213 
                     __netxen_nic_down(adapter,netdev); else ;
  
#line 1214 
  rtnl_unlock();
  
#line 1215 
  return;
}


#line 1219  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_attach(struct netxen_adapter *adapter)
{
  int __retres;
  int err;
  int ring;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_tx_ring *tx_ring;
  u32 capab2;
  
#line 1221 
  struct net_device *netdev = adapter->netdev;
  
#line 1222 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1228 
  if ((unsigned int)adapter->is_up == 777U) {
    
#line 1229 
    __retres = 0;
    
#line 1229 
    goto return_label;
  }
  else ;
  
#line 1231 
  err = netxen_init_firmware(adapter);
  
#line 1232 
  if (err != 0) {
    
#line 1233 
    __retres = err;
    
#line 1233 
    goto return_label;
  }
  else ;
  
#line 1235 
  adapter->flags &= 4294967167U;
  
#line 1236 
  if (adapter->capabilities < (u32)0) {
    
#line 1237 
    capab2 = (*(adapter->crb_read))(adapter,136323372UL);
    
#line 1238 
    if ((capab2 & 4U) != 0U) 
#line 1239 
                             adapter->flags |= 128U; else ;
  }
  else ;
  
#line 1242 
  err = netxen_napi_add(adapter,netdev);
  
#line 1243 
  if (err != 0) {
    
#line 1244 
    __retres = err;
    
#line 1244 
    goto return_label;
  }
  else ;
  
#line 1246 
  err = netxen_alloc_sw_resources(adapter);
  
#line 1247 
  if (err != 0) {
    
#line 1248 
    printk("\001",(char *)(& netdev->name));
    
#line 1250 
    __retres = err;
    
#line 1250 
    goto return_label;
  }
  else ;
  
#line 1253 
  err = netxen_alloc_hw_resources(adapter);
  
#line 1254 
  if (err != 0) {
    
#line 1255 
    printk("\001",(char *)(& netdev->name));
    
#line 1257 
    goto err_out_free_sw;
  }
  else ;
  
#line 1260 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 1261 
    tx_ring = adapter->tx_ring;
    
#line 1262 
    tx_ring->crb_cmd_producer = netxen_get_ioaddr(adapter,crb_cmd_producer[(int)adapter->portnum]);
    
#line 1264 
    tx_ring->crb_cmd_consumer = netxen_get_ioaddr(adapter,crb_cmd_consumer[(int)adapter->portnum]);
    
#line 1267 
    tx_ring->producer = 0U;
    
#line 1268 
    tx_ring->sw_consumer = 0U;
    
#line 1270 
    netxen_nic_update_cmd_producer(adapter,tx_ring);
    
#line 1271 
    netxen_nic_update_cmd_consumer(adapter,tx_ring);
  }
  else ;
  
#line 1274 
  ring = 0;
  
#line 1274 
  goto ldv_54955;
  ldv_54954: 
#line 1275 
  ;
  
#line 1275 
  rds_ring = adapter->recv_ctx.rds_rings + ring;
  
#line 1276 
  netxen_post_rx_buffers(adapter,(unsigned int)ring,rds_ring);
  
#line 1274 
  ring += 1;
  ldv_54955: 
#line 1275 
  ;
  
#line 1274 
  if ((int)adapter->max_rds_rings > ring) 
#line 1276 
                                          goto ldv_54954; else 
#line 1279 
                                                               goto ldv_54956;
  ldv_54956: 
#line 1280 
  ;
  
#line 1279 
  err = netxen_nic_request_irq(adapter);
  
#line 1280 
  if (err != 0) {
    
#line 1281 
    dev_err((struct device const *)(& pdev->dev),"%s: failed to setup interrupt\n",(char *)(& netdev->name));
    
#line 1283 
    goto err_out_free_rxbuf;
  }
  else ;
  
#line 1286 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1287 
                                                    netxen_nic_init_coalesce_defaults(adapter); else ;
  
#line 1289 
  netxen_create_sysfs_entries(adapter);
  
#line 1291 
  adapter->is_up = (unsigned short)777U;
  
#line 1292 
  __retres = 0;
  
#line 1292 
  goto return_label;
  err_out_free_rxbuf: 
#line 1294 
  ;
  
#line 1295 
  netxen_release_rx_buffers(adapter);
  
#line 1296 
  netxen_free_hw_resources(adapter);
  err_out_free_sw: 
#line 1297 
  ;
  
#line 1298 
  netxen_free_sw_resources(adapter);
  
#line 1299 
  __retres = err;
  return_label: 
#line 1299 
                return __retres;
}


#line 1303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_detach(struct netxen_adapter *adapter)
{
  
#line 1305 
  if ((unsigned int)adapter->is_up != 777U) 
#line 1306 
                                            goto return_label; else ;
  
#line 1308 
  netxen_remove_sysfs_entries(adapter);
  
#line 1310 
  netxen_free_hw_resources(adapter);
  
#line 1311 
  netxen_release_rx_buffers(adapter);
  
#line 1312 
  netxen_nic_free_irq(adapter);
  
#line 1313 
  netxen_napi_del(adapter);
  
#line 1314 
  netxen_free_sw_resources(adapter);
  
#line 1316 
  adapter->is_up = (unsigned short)0U;
  return_label: 
#line 1317 
                return;
}


#line 1320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
int netxen_nic_reset_context(struct netxen_adapter *adapter)
{
  int __retres;
  int tmp;
  
#line 1322 
  int err = 0;
  
#line 1323 
  struct net_device *netdev = adapter->netdev;
  
#line 1325 
  tmp = test_and_set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1325 
  if (tmp != 0) {
    
#line 1326 
    __retres = -16;
    
#line 1326 
    goto return_label;
  }
  else ;
  
#line 1328 
  if ((unsigned int)adapter->is_up == 777U) {
    bool tmp_0;
    bool tmp_1;
    
#line 1330 
    netif_device_detach(netdev);
    
#line 1332 
    tmp_0 = netif_running((struct net_device const *)netdev);
    
#line 1332 
    if ((int)tmp_0 != 0) 
#line 1333 
                         __netxen_nic_down(adapter,netdev); else ;
    
#line 1335 
    netxen_nic_detach(adapter);
    
#line 1337 
    tmp_1 = netif_running((struct net_device const *)netdev);
    
#line 1337 
    if ((int)tmp_1 != 0) {
      
#line 1338 
      err = netxen_nic_attach(adapter);
      
#line 1339 
      if (err == 0) 
#line 1340 
                    err = __netxen_nic_up(adapter,netdev); else ;
      
#line 1342 
      if (err != 0) 
#line 1343 
                    goto done; else ;
    }
    else ;
    
#line 1346 
    netif_device_attach(netdev);
  }
  else ;
  done: 
#line 1349 
  ;
  
#line 1350 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1351 
  __retres = err;
  return_label: 
#line 1351 
                return __retres;
}


#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_setup_netdev(struct netxen_adapter *adapter, struct net_device *netdev)
{
  int __retres;
  int tmp;
  
#line 1358 
  int err = 0;
  
#line 1359 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1361 
  adapter->mc_enabled = (unsigned char)0U;
  
#line 1362 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1363 
                                                    adapter->max_mc_count = (unsigned char)38U; else 
                                                                    
#line 1365 
                                                                    adapter->max_mc_count = (unsigned char)16U;
  
#line 1367 
  netdev->netdev_ops = & netxen_netdev_ops;
  
#line 1368 
  netdev->watchdog_timeo = 1250;
  
#line 1370 
  netxen_nic_change_mtu(netdev,(int)netdev->mtu);
  
#line 1372 
  netdev->ethtool_ops = & netxen_nic_ethtool_ops;
  
#line 1374 
  netdev->hw_features = 17179934723ULL;
  
#line 1377 
  if ((unsigned int)adapter->ahw.revision_id > 47U) 
#line 1378 
                                                    netdev->hw_features |= 1048592ULL; else ;
  
#line 1380 
  netdev->vlan_features |= netdev->hw_features;
  
#line 1382 
  if ((unsigned int)adapter->pci_using_dac != 0U) {
    
#line 1383 
    netdev->features |= 32ULL;
    
#line 1384 
    netdev->vlan_features |= 32ULL;
  }
  else ;
  
#line 1387 
  if ((adapter->capabilities & 512U) != 0U) 
#line 1388 
                                            netdev->hw_features |= 128ULL; else ;
  
#line 1390 
  if ((adapter->capabilities & 1024U) != 0U) 
#line 1391 
                                             netdev->hw_features |= 32768ULL; else ;
  
#line 1393 
  netdev->features |= netdev->hw_features;
  
#line 1395 
  netdev->irq = (int)adapter->msix_entries[0].vector;
  {
    struct lock_class_key __key;
    
#line 1397 
    __init_work(& adapter->tx_timeout_task,0);
    
#line 1397 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 1397 
    adapter->tx_timeout_task.data = __constr_expr_37;
    
#line 1397 
    lockdep_init_map(& adapter->tx_timeout_task.lockdep_map,"(&adapter->tx_timeout_task)",& __key,0);
    
#line 1397 
    INIT_LIST_HEAD(& adapter->tx_timeout_task.entry);
    
#line 1397 
    adapter->tx_timeout_task.func = & netxen_tx_timeout_task;
  }
  
#line 1399 
  tmp = netxen_read_mac_addr(adapter);
  
#line 1399 
  if (tmp != 0) 
#line 1400 
                dev_warn((struct device const *)(& pdev->dev),"failed to read mac addr\n"); else ;
  
#line 1402 
  netif_carrier_off(netdev);
  
#line 1404 
  err = ldv_register_netdev_75(netdev);
  
#line 1405 
  if (err != 0) {
    
#line 1406 
    dev_err((struct device const *)(& pdev->dev),"failed to register net device\n");
    
#line 1407 
    __retres = err;
    
#line 1407 
    goto return_label;
  }
  else ;
  
#line 1410 
  __retres = 0;
  return_label: 
#line 1410 
                return __retres;
}


#line 1416  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_read_ula_info(struct netxen_adapter *adapter)
{
  u32 temp;
  
#line 1421 
  if ((unsigned int)adapter->portnum != 0U) 
#line 1422 
                                            goto return_label; else ;
  
#line 1424 
  temp = (*(adapter->crb_read))(adapter,136323448UL);
  
#line 1425 
  switch (temp) {
    case (u32)(-623006463): 
#line 1426 
    ;
    
#line 1427 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"ULA adapter");
    
#line 1428 
    goto ldv_54980;
    case (u32)(-623006464): 
#line 1429 
    ;
    
#line 1430 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"non ULA adapter");
    
#line 1431 
    goto ldv_54980;
    default: 
#line 1432 
    ;
    
#line 1433 
    goto ldv_54980;
  }
  ldv_54980: 
#line 1436 
  ;
  return_label: 
#line 1436 
                return;
}


#line 1440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_mask_aer_correctable(struct netxen_adapter *adapter)
{
  u32 aer_pos;
  int tmp;
  int tmp_0;
  
#line 1442 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1443 
  struct pci_dev *root = (pdev->bus)->self;
  
#line 1447 
  if (root == (struct pci_dev *)0) 
#line 1448 
                                   goto return_label; else ;
  
#line 1450 
  if ((unsigned int)adapter->ahw.board_type != 41U && (unsigned int)adapter->ahw.board_type != 128U) 
    
#line 1452 
    goto return_label; else ;
  
#line 1454 
  tmp = pci_pcie_type((struct pci_dev const *)root);
  
#line 1454 
  if (tmp != 4) 
#line 1455 
                goto return_label; else ;
  
#line 1457 
  tmp_0 = pci_find_ext_capability(root,1);
  
#line 1457 
  aer_pos = (unsigned int)tmp_0;
  
#line 1458 
  if (aer_pos == 0U) 
#line 1459 
                     goto return_label; else ;
  
#line 1461 
  pci_write_config_dword((struct pci_dev const *)root,(int)(aer_pos + 20U),65535U);
  return_label: 
#line 1462 
                return;
}


#line 1466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  int err;
  uint8_t revision_id;
  u32 val;
  
#line 1468 
  struct net_device *netdev = (struct net_device *)0;
  
#line 1469 
  struct netxen_adapter *adapter = (struct netxen_adapter *)0;
  
#line 1470 
  int i = 0;
  
#line 1471 
  int pci_func_id = (int)pdev->devfn & 7;
  
#line 1475 
  if ((unsigned int)pdev->revision + 208U <= 17U) {
    char *tmp_0;
    {
      char *tmp;
      
#line 1476 
      struct module *__mod = & __this_module;
      
#line 1476 
      if (__mod != (struct module *)0) 
#line 1476 
                                       tmp = (char *)(& __mod->name); else 
                                                                    
#line 1476 
                                                                    tmp = (char *)"kernel";
      
#line 1476 
      tmp_0 = tmp;
    }
    
#line 1476 
    printk("\001",tmp_0,48,65);
    
#line 1478 
    __retres = -19;
    
#line 1478 
    goto return_label;
  }
  else ;
  
#line 1481 
  err = pci_enable_device(pdev);
  
#line 1481 
  if (err != 0) {
    
#line 1482 
    __retres = err;
    
#line 1482 
    goto return_label;
  }
  else ;
  
#line 1484 
  if ((pdev->resource[0].flags & 512UL) == 0UL) {
    
#line 1485 
    err = -19;
    
#line 1486 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 1489 
  err = pci_request_regions(pdev,(char const *)(& netxen_nic_driver_name));
  
#line 1489 
  if (err != 0) 
#line 1490 
                goto err_out_disable_pdev; else ;
  
#line 1492 
  if ((unsigned int)pdev->revision > 47U) 
#line 1493 
                                          pci_enable_pcie_error_reporting(pdev); else ;
  
#line 1495 
  pci_set_master(pdev);
  
#line 1497 
  netdev = ldv_alloc_etherdev_mqs_76(1168,1U,1U);
  
#line 1498 
  if (netdev == (struct net_device *)0) {
    
#line 1499 
    err = -12;
    
#line 1500 
    goto err_out_free_res;
  }
  else ;
  
#line 1503 
  netdev->dev.parent = & pdev->dev;
  
#line 1505 
  adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 1506 
  adapter->netdev = netdev;
  
#line 1507 
  adapter->pdev = pdev;
  
#line 1508 
  adapter->ahw.pci_func = (unsigned char)pci_func_id;
  
#line 1510 
  revision_id = pdev->revision;
  
#line 1511 
  adapter->ahw.revision_id = revision_id;
  {
    struct lock_class_key __key;
    
#line 1513 
    __rwlock_init(& adapter->ahw.crb_lock,"&adapter->ahw.crb_lock",& __key);
  }
  
#line 1514 
  spinlock_check(& adapter->ahw.mem_lock);
  {
    struct lock_class_key __key_0;
    
#line 1514 
    __raw_spin_lock_init(& adapter->ahw.mem_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->ahw.mem_lock)->rlock",& __key_0);
  }
  
#line 1516 
  spinlock_check(& adapter->tx_clean_lock);
  {
    struct lock_class_key __key_1;
    
#line 1516 
    __raw_spin_lock_init(& adapter->tx_clean_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->tx_clean_lock)->rlock",& __key_1);
  }
  
#line 1517 
  INIT_LIST_HEAD(& adapter->mac_list);
  
#line 1518 
  INIT_LIST_HEAD(& adapter->ip_list);
  
#line 1520 
  err = netxen_setup_pci_map(adapter);
  
#line 1521 
  if (err != 0) 
#line 1522 
                goto err_out_free_netdev; else ;
  
#line 1525 
  adapter->portnum = (unsigned char)pci_func_id;
  
#line 1527 
  err = netxen_nic_get_board_info(adapter);
  
#line 1528 
  if (err != 0) {
    
#line 1529 
    dev_err((struct device const *)(& pdev->dev),"Error getting board config info.\n");
    
#line 1530 
    goto err_out_iounmap;
  }
  else ;
  
#line 1534 
  netxen_mask_aer_correctable(adapter);
  
#line 1538 
  switch ((int)adapter->ahw.board_type) {
    case 13: 
#line 1539 
    ;
    case 14: 
#line 1540 
    ;
    
#line 1541 
    if (pci_func_id > 1) 
#line 1542 
                         adapter->portnum = (unsigned char)((unsigned int)((unsigned char)pci_func_id) + 254U); else ;
    
#line 1543 
    goto ldv_55011;
    default: 
#line 1544 
    ;
    
#line 1545 
    goto ldv_55011;
  }
  ldv_55011: 
#line 1548 
  ;
  
#line 1548 
  err = netxen_check_flash_fw_compatibility(adapter);
  
#line 1549 
  if (err != 0) 
#line 1550 
                goto err_out_iounmap; else ;
  
#line 1552 
  if ((unsigned int)adapter->portnum == 0U) {
    
#line 1553 
    val = (*(adapter->crb_read))(adapter,136323384UL);
    
#line 1554 
    if (val + 4294967295U <= 4294967293U) {
      
#line 1555 
      (*(adapter->crb_write))(adapter,136323384UL,0U);
      
#line 1556 
      adapter->need_fw_reset = (unsigned char)1U;
    }
    else ;
  }
  else ;
  
#line 1560 
  err = netxen_start_firmware(adapter);
  
#line 1561 
  if (err != 0) 
#line 1562 
                goto err_out_decr_ref; else ;
  
#line 1567 
  adapter->physical_port = adapter->portnum;
  
#line 1568 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    u32 tmp_2;
    
#line 1569 
    tmp_2 = (*(adapter->crb_read))(adapter,(unsigned long)((int)adapter->portnum * 4) + 136324240UL);
    
#line 1569 
    i = (int)tmp_2;
    
#line 1570 
    if (i != 1431655765) 
#line 1571 
                         adapter->physical_port = (unsigned char)i; else ;
  }
  else ;
  
#line 1574 
  netxen_nic_clear_stats(adapter);
  
#line 1576 
  err = netxen_setup_intr(adapter);
  
#line 1578 
  if (err != 0) {
    
#line 1579 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Failed to setup interrupts, error = %d\n",err);
    
#line 1581 
    goto err_out_disable_msi;
  }
  else ;
  
#line 1584 
  netxen_read_ula_info(adapter);
  
#line 1586 
  err = netxen_setup_netdev(adapter,netdev);
  
#line 1587 
  if (err != 0) 
#line 1588 
                goto err_out_disable_msi; else ;
  
#line 1590 
  pci_set_drvdata(pdev,(void *)adapter);
  
#line 1592 
  netxen_schedule_work(adapter,& netxen_fw_poll_work,500);
  
#line 1594 
  switch ((int)adapter->ahw.port_type) {
    case 1: 
#line 1595 
    ;
    
#line 1596 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"%s: GbE port initialized\n",(char *)(& (adapter->netdev)->name));
    
#line 1598 
    goto ldv_55016;
    case 2: 
#line 1599 
    ;
    
#line 1600 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"%s: XGbE port initialized\n",(char *)(& (adapter->netdev)->name));
    
#line 1602 
    goto ldv_55016;
  }
  ldv_55016: 
#line 1605 
  ;
  
#line 1605 
  netxen_create_diag_entries(adapter);
  
#line 1607 
  __retres = 0;
  
#line 1607 
  goto return_label;
  err_out_disable_msi: 
#line 1609 
  ;
  
#line 1610 
  netxen_teardown_intr(adapter);
  
#line 1612 
  netxen_free_dummy_dma(adapter);
  err_out_decr_ref: 
#line 1614 
  ;
  
#line 1615 
  nx_decr_dev_ref_cnt(adapter);
  err_out_iounmap: 
#line 1617 
  ;
  
#line 1618 
  netxen_cleanup_pci_map(adapter);
  err_out_free_netdev: 
#line 1620 
  ;
  
#line 1621 
  ldv_free_netdev_77(netdev);
  err_out_free_res: 
#line 1623 
  ;
  
#line 1624 
  pci_release_regions(pdev);
  err_out_disable_pdev: 
#line 1626 
  ;
  
#line 1627 
  pci_disable_device(pdev);
  
#line 1628 
  __retres = err;
  return_label: 
#line 1628 
                return __retres;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_cleanup_minidump(struct netxen_adapter *adapter)
{
  
#line 1634 
  kfree((void const *)adapter->mdump.md_template);
  
#line 1635 
  adapter->mdump.md_template = (void *)0;
  
#line 1637 
  if (adapter->mdump.md_capture_buff != (void *)0) {
    
#line 1638 
    vfree((void const *)adapter->mdump.md_capture_buff);
    
#line 1639 
    adapter->mdump.md_capture_buff = (void *)0;
  }
  else ;
  
#line 1641 
  return;
}


#line 1643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_remove(struct pci_dev *pdev)
{
  struct netxen_adapter *adapter;
  struct net_device *netdev;
  
#line 1648 
  adapter = (struct netxen_adapter *)pci_get_drvdata(pdev);
  
#line 1649 
  if (adapter == (struct netxen_adapter *)0) 
#line 1650 
                                             goto return_label; else ;
  
#line 1652 
  netdev = adapter->netdev;
  
#line 1654 
  netxen_cancel_fw_work(adapter);
  
#line 1656 
  ldv_unregister_netdev_78(netdev);
  
#line 1658 
  cancel_work_sync(& adapter->tx_timeout_task);
  
#line 1660 
  netxen_free_ip_list(adapter,(_Bool)0);
  
#line 1661 
  netxen_nic_detach(adapter);
  
#line 1663 
  nx_decr_dev_ref_cnt(adapter);
  
#line 1665 
  if ((unsigned int)adapter->portnum == 0U) 
#line 1666 
                                            netxen_free_dummy_dma(adapter); else ;
  
#line 1668 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1670 
  netxen_teardown_intr(adapter);
  
#line 1671 
  netxen_set_interrupt_mode(adapter,0U);
  
#line 1672 
  netxen_remove_diag_entries(adapter);
  
#line 1674 
  netxen_cleanup_pci_map(adapter);
  
#line 1676 
  netxen_release_firmware(adapter);
  
#line 1678 
  if ((unsigned int)pdev->revision > 47U) {
    
#line 1679 
    netxen_cleanup_minidump(adapter);
    
#line 1680 
    pci_disable_pcie_error_reporting(pdev);
  }
  else ;
  
#line 1683 
  pci_release_regions(pdev);
  
#line 1684 
  pci_disable_device(pdev);
  
#line 1686 
  ldv_free_netdev_79(netdev);
  return_label: 
#line 1687 
                return;
}


#line 1689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_detach_func(struct netxen_adapter *adapter)
{
  bool tmp;
  
#line 1691 
  struct net_device *netdev = adapter->netdev;
  
#line 1693 
  netif_device_detach(netdev);
  
#line 1695 
  netxen_cancel_fw_work(adapter);
  
#line 1697 
  tmp = netif_running((struct net_device const *)netdev);
  
#line 1697 
  if ((int)tmp != 0) 
#line 1698 
                     netxen_nic_down(adapter,netdev); else ;
  
#line 1700 
  cancel_work_sync(& adapter->tx_timeout_task);
  
#line 1702 
  netxen_nic_detach(adapter);
  
#line 1704 
  if ((unsigned int)adapter->portnum == 0U) 
#line 1705 
                                            netxen_free_dummy_dma(adapter); else ;
  
#line 1707 
  nx_decr_dev_ref_cnt(adapter);
  
#line 1709 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1710 
  return;
}


#line 1712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_attach_func(struct pci_dev *pdev)
{
  int __retres;
  int err;
  bool tmp_0;
  
#line 1714 
  struct netxen_adapter *adapter = pci_get_drvdata(pdev);
  
#line 1715 
  struct net_device *netdev = adapter->netdev;
  
#line 1718 
  err = pci_enable_device(pdev);
  
#line 1719 
  if (err != 0) {
    
#line 1720 
    __retres = err;
    
#line 1720 
    goto return_label;
  }
  else ;
  
#line 1722 
  pci_set_power_state(pdev,0);
  
#line 1723 
  pci_set_master(pdev);
  
#line 1724 
  pci_restore_state(pdev);
  
#line 1726 
  adapter->ahw.crb_win = 4294967295U;
  
#line 1727 
  adapter->ahw.ocm_win = 4294967295U;
  
#line 1729 
  err = netxen_start_firmware(adapter);
  
#line 1730 
  if (err != 0) {
    
#line 1731 
    dev_err((struct device const *)(& pdev->dev),"failed to start firmware\n");
    
#line 1732 
    __retres = err;
    
#line 1732 
    goto return_label;
  }
  else ;
  
#line 1735 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 1735 
  if ((int)tmp_0 != 0) {
    
#line 1736 
    err = netxen_nic_attach(adapter);
    
#line 1737 
    if (err != 0) 
#line 1738 
                  goto err_out; else ;
    
#line 1740 
    err = netxen_nic_up(adapter,netdev);
    
#line 1741 
    if (err != 0) 
#line 1742 
                  goto err_out_detach; else ;
    
#line 1744 
    netxen_restore_indev_addr(netdev,1UL);
  }
  else ;
  
#line 1747 
  netif_device_attach(netdev);
  
#line 1748 
  netxen_schedule_work(adapter,& netxen_fw_poll_work,500);
  
#line 1749 
  __retres = 0;
  
#line 1749 
  goto return_label;
  err_out_detach: 
#line 1751 
  ;
  
#line 1752 
  netxen_nic_detach(adapter);
  err_out: 
#line 1753 
  ;
  
#line 1754 
  nx_decr_dev_ref_cnt(adapter);
  
#line 1755 
  __retres = err;
  return_label: 
#line 1755 
                return __retres;
}


#line 1758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static pci_ers_result_t netxen_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  int tmp_0;
  
#line 1761 
  struct netxen_adapter *adapter = pci_get_drvdata(pdev);
  
#line 1763 
  if (state == 3U) {
    
#line 1764 
    __retres = 4U;
    
#line 1764 
    goto return_label;
  }
  else ;
  
#line 1766 
  tmp_0 = nx_dev_request_aer(adapter);
  
#line 1766 
  if (tmp_0 != 0) {
    
#line 1767 
    __retres = 5U;
    
#line 1767 
    goto return_label;
  }
  else ;
  
#line 1769 
  netxen_nic_detach_func(adapter);
  
#line 1771 
  pci_disable_device(pdev);
  
#line 1773 
  __retres = 3U;
  return_label: 
#line 1773 
                return __retres;
}


#line 1776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static pci_ers_result_t netxen_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp;
  
#line 1778 
  int err = 0;
  
#line 1780 
  err = netxen_nic_attach_func(pdev);
  
#line 1782 
  if (err != 0) 
#line 1782 
                tmp = 4; else 
#line 1782 
                              tmp = 5;
  
#line 1782 
  __retres = (unsigned int)tmp;
  
#line 1782 
  return __retres;
}


#line 1785  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_io_resume(struct pci_dev *pdev)
{
  
#line 1787 
  pci_cleanup_aer_uncorrect_error_status(pdev);
  
#line 1788 
  return;
}


#line 1790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_shutdown(struct pci_dev *pdev)
{
  int tmp_0;
  int tmp_1;
  
#line 1792 
  struct netxen_adapter *adapter = pci_get_drvdata(pdev);
  
#line 1794 
  netxen_nic_detach_func(adapter);
  
#line 1796 
  tmp_0 = pci_save_state(pdev);
  
#line 1796 
  if (tmp_0 != 0) 
#line 1797 
                  goto return_label; else ;
  
#line 1799 
  tmp_1 = netxen_nic_wol_supported(adapter);
  
#line 1799 
  if (tmp_1 != 0) {
    
#line 1800 
    pci_enable_wake(pdev,4,(_Bool)1);
    
#line 1801 
    pci_enable_wake(pdev,3,(_Bool)1);
  }
  else ;
  
#line 1804 
  pci_disable_device(pdev);
  return_label: 
#line 1805 
                return;
}


#line 1809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  int retval;
  int tmp_0;
  pci_power_t tmp_1;
  
#line 1811 
  struct netxen_adapter *adapter = pci_get_drvdata(pdev);
  
#line 1814 
  netxen_nic_detach_func(adapter);
  
#line 1816 
  retval = pci_save_state(pdev);
  
#line 1817 
  if (retval != 0) {
    
#line 1818 
    __retres = retval;
    
#line 1818 
    goto return_label;
  }
  else ;
  
#line 1820 
  tmp_0 = netxen_nic_wol_supported(adapter);
  
#line 1820 
  if (tmp_0 != 0) {
    
#line 1821 
    pci_enable_wake(pdev,4,(_Bool)1);
    
#line 1822 
    pci_enable_wake(pdev,3,(_Bool)1);
  }
  else ;
  
#line 1825 
  pci_disable_device(pdev);
  
#line 1826 
  tmp_1 = pci_choose_state(pdev,state);
  
#line 1826 
  ;
  
#line 1826 
  pci_set_power_state(pdev,tmp_1);
  
#line 1828 
  __retres = 0;
  return_label: 
#line 1828 
                return __retres;
}


#line 1832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_resume(struct pci_dev *pdev)
{
  int tmp;
  
#line 1834 
  tmp = netxen_nic_attach_func(pdev);
  
#line 1834 
  return tmp;
}


#line 1838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_open(struct net_device *netdev)
{
  int __retres;
  
#line 1840 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1841 
  int err = 0;
  
#line 1843 
  if ((unsigned int)adapter->driver_mismatch != 0U) {
    
#line 1844 
    __retres = -5;
    
#line 1844 
    goto return_label;
  }
  else ;
  
#line 1846 
  err = netxen_nic_attach(adapter);
  
#line 1847 
  if (err != 0) {
    
#line 1848 
    __retres = err;
    
#line 1848 
    goto return_label;
  }
  else ;
  
#line 1850 
  err = __netxen_nic_up(adapter,netdev);
  
#line 1851 
  if (err != 0) 
#line 1852 
                goto err_out; else ;
  
#line 1854 
  netif_start_queue(netdev);
  
#line 1856 
  __retres = 0;
  
#line 1856 
  goto return_label;
  err_out: 
#line 1858 
  ;
  
#line 1859 
  netxen_nic_detach(adapter);
  
#line 1860 
  __retres = err;
  return_label: 
#line 1860 
                return __retres;
}


#line 1866  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_close(struct net_device *netdev)
{
  int __retres;
  
#line 1868 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1870 
  __netxen_nic_down(adapter,netdev);
  
#line 1871 
  __retres = 0;
  
#line 1871 
  return __retres;
}


#line 1875  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_tso_check(struct net_device *netdev, struct nx_host_tx_ring *tx_ring, struct cmd_desc_type0 *first_desc, struct sk_buff *skb)
{
  u32 producer;
  int copied;
  int offset;
  int copy_len;
  struct cmd_desc_type0 *hwdesc;
  struct vlan_ethhdr *vh;
  int tmp_5;
  int tmp_6;
  int tmp_11;
  
#line 1880 
  u8 opcode = (unsigned char)1U;
  
#line 1881 
  __be16 protocol = skb->protocol;
  
#line 1882 
  u16 flags = (unsigned short)0U;
  
#line 1882 
  u16 vid = (unsigned short)0U;
  
#line 1884 
  int hdr_len = 0;
  
#line 1884 
  int tso = 0;
  
#line 1884 
  int vlan_oob = 0;
  
#line 1888 
  if ((unsigned int)protocol == 129U) {
    
#line 1890 
    vh = (struct vlan_ethhdr *)skb->data;
    
#line 1891 
    protocol = vh->h_vlan_encapsulated_proto;
    
#line 1892 
    flags = (unsigned short)16U;
  }
  else 
    
#line 1894 
    if (((int)skb->vlan_tci & 4096) != 0) {
      
#line 1895 
      flags = (unsigned short)64U;
      
#line 1896 
      vid = (unsigned short)((unsigned int)skb->vlan_tci & 61439U);
      
#line 1897 
      first_desc->vlan_TCI = vid;
      
#line 1898 
      vlan_oob = 1;
    }
    else ;
  
#line 1901 
  if ((netdev->features & 1114112ULL) != 0ULL) {
    unsigned char *tmp_4;
    
#line 1902 
    tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 1901 
    ;
    
#line 1901 
    if ((unsigned int)((struct skb_shared_info *)tmp_4)->gso_size != 0U) {
      int tmp;
      unsigned int tmp_0;
      unsigned char *tmp_1;
      
#line 1904 
      tmp = skb_transport_offset((struct sk_buff const *)skb);
      
#line 1904 
      tmp_0 = tcp_hdrlen((struct sk_buff const *)skb);
      
#line 1904 
      hdr_len = (int)((unsigned int)tmp + tmp_0);
      
#line 1906 
      tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 1906 
      first_desc->mss = ((struct skb_shared_info *)tmp_1)->gso_size;
      
#line 1907 
      first_desc->total_hdr_length = (unsigned char)hdr_len;
      
#line 1908 
      if (vlan_oob != 0) {
        
#line 1909 
        first_desc->total_hdr_length = (unsigned char)((unsigned int)first_desc->total_hdr_length + 4U);
        
#line 1910 
        first_desc->tcp_hdr_offset = (unsigned char)4U;
        
#line 1911 
        first_desc->ip_hdr_offset = (unsigned char)4U;
        
#line 1913 
        flags = (unsigned short)((unsigned int)flags | 16U);
      }
      else ;
      
#line 1916 
      if ((unsigned int)protocol == 56710U) 
#line 1916 
                                            opcode = (unsigned char)6U; else 
                                                                    
#line 1916 
                                                                    opcode = (unsigned char)5U;
      
#line 1918 
      tso = 1;
    }
    else 
#line 1901 
         goto _LAND;
  }
  else {
    _LAND: 
#line 1920 
    ;
    
#line 1920 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      u8 l4proto;
      
#line 1923 
      if ((unsigned int)protocol == 8U) {
        struct iphdr *tmp_2;
        
#line 1924 
        tmp_2 = ip_hdr((struct sk_buff const *)skb);
        
#line 1924 
        l4proto = tmp_2->protocol;
        
#line 1926 
        if ((unsigned int)l4proto == 6U) 
#line 1927 
                                         opcode = (unsigned char)2U;
        else 
          
#line 1928 
          if ((unsigned int)l4proto == 17U) 
#line 1929 
                                            opcode = (unsigned char)3U; else ;
      }
      else 
        
#line 1930 
        if ((unsigned int)protocol == 56710U) {
          struct ipv6hdr *tmp_3;
          
#line 1931 
          tmp_3 = ipv6_hdr((struct sk_buff const *)skb);
          
#line 1931 
          l4proto = tmp_3->nexthdr;
          
#line 1933 
          if ((unsigned int)l4proto == 6U) 
#line 1934 
                                           opcode = (unsigned char)11U;
          else 
            
#line 1935 
            if ((unsigned int)l4proto == 17U) 
#line 1936 
                                              opcode = (unsigned char)12U; else ;
        }
        else ;
    }
    else ;
  }
  
#line 1940 
  tmp_5 = skb_transport_offset((struct sk_buff const *)skb);
  
#line 1940 
  first_desc->tcp_hdr_offset = (unsigned char)((int)first_desc->tcp_hdr_offset + (int)((unsigned char)tmp_5));
  
#line 1941 
  tmp_6 = skb_network_offset((struct sk_buff const *)skb);
  
#line 1941 
  first_desc->ip_hdr_offset = (unsigned char)((int)first_desc->ip_hdr_offset + (int)((unsigned char)tmp_6));
  
#line 1942 
  first_desc->flags_opcode = (unsigned short)(((int)flags & 127) | (((int)opcode << 7) & 8064));
  
#line 1944 
  if (tso == 0) 
#line 1945 
                goto return_label; else ;
  
#line 1950 
  producer = tx_ring->producer;
  
#line 1951 
  copied = 0;
  
#line 1952 
  offset = 2;
  
#line 1954 
  if (vlan_oob != 0) {
    int tmp_8;
    
#line 1957 
    hwdesc = tx_ring->desc_head + producer;
    
#line 1958 
    (tx_ring->cmd_buf_arr + producer)->skb = (struct sk_buff *)0;
    {
      int tmp_7;
      
#line 1960 
      int _min1 = 64 - offset;
      
#line 1960 
      int _min2 = hdr_len + 4;
      
#line 1960 
      if (_min1 < _min2) 
#line 1960 
                         tmp_7 = _min1; else 
#line 1960 
                                             tmp_7 = _min2;
      
#line 1960 
      tmp_8 = tmp_7;
    }
    
#line 1960 
    copy_len = tmp_8;
    
#line 1963 
    vh = (struct vlan_ethhdr *)hwdesc + 2U;
    
#line 1964 
    skb_copy_from_linear_data((struct sk_buff const *)skb,(void *)vh,12U);
    
#line 1965 
    vh->h_vlan_proto = (unsigned short)129U;
    
#line 1966 
    if (0 != 0) 
#line 1966 
                vh->h_vlan_TCI = (unsigned short)(((int)vid << 8) | ((int)vid >> 8)); else 
                                                                    
#line 1966 
                                                                    vh->h_vlan_TCI = __fswab16((unsigned short)((int)vid));
    
#line 1967 
    skb_copy_from_linear_data_offset((struct sk_buff const *)skb,12,(void *)vh + 16U,(unsigned int)(copy_len + -16));
    
#line 1970 
    copied = copy_len + -4;
    
#line 1971 
    offset = 0;
    
#line 1973 
    producer = (producer + 1U) & (tx_ring->num_desc + 4294967295U);
  }
  else ;
  
#line 1976 
  goto ldv_55100;
  ldv_55099: 
#line 1977 
  ;
  {
    int tmp_10;
    
#line 1978 
    int _min1_0 = 64 - offset;
    
#line 1978 
    int _min2_0 = hdr_len - copied;
    
#line 1978 
    if (_min1_0 < _min2_0) 
#line 1978 
                           tmp_10 = _min1_0; else 
#line 1978 
                                                  tmp_10 = _min2_0;
    
#line 1978 
    tmp_11 = tmp_10;
  }
  
#line 1978 
  copy_len = tmp_11;
  
#line 1981 
  hwdesc = tx_ring->desc_head + producer;
  
#line 1982 
  (tx_ring->cmd_buf_arr + producer)->skb = (struct sk_buff *)0;
  
#line 1984 
  skb_copy_from_linear_data_offset((struct sk_buff const *)skb,copied,(void *)hwdesc + offset,(unsigned int)copy_len);
  
#line 1987 
  copied += copy_len;
  
#line 1988 
  offset = 0;
  
#line 1990 
  producer = (producer + 1U) & (tx_ring->num_desc + 4294967295U);
  ldv_55100: 
#line 1991 
  ;
  
#line 1976 
  if (copied < hdr_len) 
#line 1978 
                        goto ldv_55099; else 
#line 1981 
                                             goto ldv_55101;
  ldv_55101: 
#line 1982 
  ;
  
#line 1993 
  tx_ring->producer = producer;
  
#line 1994 
  ldv_inline_asm();
  return_label: 
#line 1995 
                return;
}


#line 1998  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_map_tx_skb(struct pci_dev *pdev, struct sk_buff *skb, struct netxen_cmd_buffer *pbuf)
{
  int __retres;
  struct netxen_skb_frag *nf;
  struct skb_frag_struct *frag;
  int i;
  int nr_frags;
  dma_addr_t map;
  unsigned char *tmp;
  unsigned int tmp_0;
  int tmp_1;
  unsigned int tmp_2;
  unsigned char *tmp_3;
  unsigned int tmp_4;
  int tmp_5;
  unsigned int tmp_6;
  unsigned int tmp_7;
  
#line 2006 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2006 
  nr_frags = (int)((struct skb_shared_info *)tmp)->nr_frags;
  
#line 2007 
  nf = & pbuf->frag_array[0];
  
#line 2010 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 2009 
  ;
  
#line 2009 
  ;
  
#line 2009 
  map = pci_map_single(pdev,(void *)skb->data,(unsigned long)tmp_0,1);
  
#line 2011 
  tmp_1 = pci_dma_mapping_error(pdev,map);
  
#line 2011 
  if (tmp_1 != 0) 
#line 2012 
                  goto out_err; else ;
  
#line 2014 
  nf->dma = map;
  
#line 2015 
  tmp_2 = skb_headlen((struct sk_buff const *)skb);
  
#line 2015 
  nf->length = (unsigned long long)tmp_2;
  
#line 2017 
  i = 0;
  
#line 2017 
  goto ldv_55115;
  ldv_55114: 
#line 2018 
  ;
  
#line 2018 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2018 
  frag = & ((struct skb_shared_info *)tmp_3)->frags[i];
  
#line 2019 
  nf = & pbuf->frag_array[i + 1];
  
#line 2021 
  tmp_4 = skb_frag_size((skb_frag_t const *)frag);
  
#line 2021 
  ;
  
#line 2021 
  ;
  
#line 2021 
  map = skb_frag_dma_map(& pdev->dev,(skb_frag_t const *)frag,0UL,(unsigned long)tmp_4,(enum dma_data_direction)DMA_TO_DEVICE);
  
#line 2023 
  tmp_5 = dma_mapping_error(& pdev->dev,map);
  
#line 2023 
  if (tmp_5 != 0) 
#line 2024 
                  goto unwind; else ;
  
#line 2026 
  nf->dma = map;
  
#line 2027 
  tmp_6 = skb_frag_size((skb_frag_t const *)frag);
  
#line 2027 
  nf->length = (unsigned long long)tmp_6;
  
#line 2017 
  i += 1;
  ldv_55115: 
#line 2018 
  ;
  
#line 2017 
  if (i < nr_frags) 
#line 2019 
                    goto ldv_55114; else 
#line 2022 
                                         goto ldv_55116;
  ldv_55116: 
#line 2023 
  ;
  
#line 2030 
  __retres = 0;
  
#line 2030 
  goto return_label;
  unwind: 
#line 2032 
  ;
  
#line 2033 
  goto ldv_55118;
  ldv_55117: 
#line 2034 
  ;
  
#line 2034 
  nf = & pbuf->frag_array[i + 1];
  
#line 2035 
  pci_unmap_page(pdev,nf->dma,(unsigned long)nf->length,1);
  
#line 2036 
  nf->dma = 0ULL;
  ldv_55118: 
#line 2037 
  ;
  
#line 2033 
  i -= 1;
  
#line 2033 
  if (i >= 0) 
#line 2035 
              goto ldv_55117; else 
#line 2038 
                                   goto ldv_55119;
  ldv_55119: 
#line 2039 
  ;
  
#line 2039 
  nf = & pbuf->frag_array[0];
  
#line 2040 
  tmp_7 = skb_headlen((struct sk_buff const *)skb);
  
#line 2040 
  ;
  
#line 2040 
  ;
  
#line 2040 
  pci_unmap_single(pdev,nf->dma,(unsigned long)tmp_7,1);
  
#line 2041 
  nf->dma = 0ULL;
  out_err: 
#line 2043 
  ;
  
#line 2044 
  __retres = -12;
  return_label: 
#line 2044 
                return __retres;
}


#line 2048  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static void netxen_clear_cmddesc(u64 *desc)
{
  
#line 2050 
  *desc = 0ULL;
  
#line 2051 
  *(desc + 2U) = 0ULL;
  
#line 2052 
  return;
}


#line 2055  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static netdev_tx_t netxen_nic_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  struct netxen_cmd_buffer *pbuf;
  struct netxen_skb_frag *buffrag;
  struct cmd_desc_type0 *hwdesc;
  struct cmd_desc_type0 *first_desc;
  struct pci_dev *pdev;
  int i;
  int k;
  struct skb_frag_struct *frag;
  u32 producer;
  int frag_count;
  int no_of_desc;
  unsigned char *tmp_0;
  int tmp_6;
  bool tmp_5;
  u32 tmp_8;
  int tmp_9;
  
#line 2057 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2058 
  struct nx_host_tx_ring *tx_ring = adapter->tx_ring;
  
#line 2064 
  int delta = 0;
  
#line 2069 
  u32 num_txd = tx_ring->num_desc;
  
#line 2071 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2071 
  frag_count = (int)((struct skb_shared_info *)tmp_0)->nr_frags + 1;
  
#line 2076 
  tmp_5 = skb_is_gso((struct sk_buff const *)skb);
  
#line 2076 
  if (tmp_5) 
#line 2076 
             tmp_6 = 0; else 
#line 2076 
                             tmp_6 = 1;
  
#line 2076 
  if (tmp_6) {
    
#line 2076 
    if (frag_count > 14) {
      unsigned char *tmp_1;
      unsigned int tmp_2;
      unsigned char *tmp_3;
      unsigned char *tmp_4;
      
#line 2078 
      i = 0;
      
#line 2078 
      goto ldv_55143;
      ldv_55142: 
#line 2079 
      ;
      
#line 2079 
      tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2079 
      frag = & ((struct skb_shared_info *)tmp_1)->frags[i];
      
#line 2080 
      tmp_2 = skb_frag_size((skb_frag_t const *)frag);
      
#line 2080 
      delta = (int)(tmp_2 + (unsigned int)delta);
      
#line 2078 
      i += 1;
      ldv_55143: 
#line 2079 
      ;
      
#line 2078 
      if (frag_count + -14 > i) 
#line 2080 
                                goto ldv_55142; else 
#line 2083 
                                                     goto ldv_55144;
      ldv_55144: 
#line 2084 
      ;
      
#line 2083 
      tmp_3 = __pskb_pull_tail(skb,delta);
      
#line 2083 
      if (tmp_3 == (unsigned char *)0U) 
#line 2084 
                                        goto drop_packet; else ;
      
#line 2086 
      tmp_4 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2086 
      frag_count = (int)((struct skb_shared_info *)tmp_4)->nr_frags + 1;
    }
    else ;
  }
  else ;
  
#line 2089 
  no_of_desc = (frag_count + 3) >> 2;
  
#line 2091 
  tmp_8 = netxen_tx_avail(tx_ring);
  
#line 2091 
  if ((long)(tmp_8 <= 10U) != 0L) {
    u32 tmp_7;
    
#line 2092 
    netif_start_queue(netdev);
    
#line 2093 
    ldv_inline_asm();
    
#line 2094 
    tmp_7 = netxen_tx_avail(tx_ring);
    
#line 2094 
    if (tmp_7 > 10U) 
#line 2095 
                     netif_start_queue(netdev);
    else {
      
#line 2097 
      __retres = NETDEV_TX_BUSY;
      
#line 2097 
      goto return_label;
    }
  }
  else ;
  
#line 2100 
  producer = tx_ring->producer;
  
#line 2101 
  pbuf = tx_ring->cmd_buf_arr + producer;
  
#line 2103 
  pdev = adapter->pdev;
  
#line 2105 
  tmp_9 = netxen_map_tx_skb(pdev,skb,pbuf);
  
#line 2105 
  if (tmp_9 != 0) 
#line 2106 
                  goto drop_packet; else ;
  
#line 2108 
  pbuf->skb = skb;
  
#line 2109 
  pbuf->frag_count = (unsigned int)frag_count;
  
#line 2111 
  hwdesc = tx_ring->desc_head + producer;
  
#line 2111 
  first_desc = hwdesc;
  
#line 2112 
  netxen_clear_cmddesc((u64 *)hwdesc);
  
#line 2114 
  first_desc->nfrags__length = ((unsigned int)frag_count & 255U) | (skb->len << 8);
  
#line 2115 
  first_desc->port_ctxid = (unsigned char)(((int)adapter->portnum & 15) | ((int)adapter->portnum << 4));
  
#line 2117 
  i = 0;
  
#line 2117 
  goto ldv_55152;
  ldv_55151: 
#line 2118 
  ;
  
#line 2119 
  k = i % 4;
  
#line 2121 
  if (k == 0 && i > 0) {
    
#line 2123 
    producer = (producer + 1U) & (num_txd + 4294967295U);
    
#line 2124 
    hwdesc = tx_ring->desc_head + producer;
    
#line 2125 
    netxen_clear_cmddesc((u64 *)hwdesc);
    
#line 2126 
    (tx_ring->cmd_buf_arr + producer)->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 2129 
  buffrag = & pbuf->frag_array[i];
  
#line 2131 
  hwdesc->buffer_length[k] = (unsigned short)buffrag->length;
  
#line 2132 
  switch (k) {
    case 0: 
#line 2133 
    ;
    
#line 2134 
    hwdesc->addr_buffer1 = buffrag->dma;
    
#line 2135 
    goto ldv_55147;
    case 1: 
#line 2136 
    ;
    
#line 2137 
    hwdesc->addr_buffer2 = buffrag->dma;
    
#line 2138 
    goto ldv_55147;
    case 2: 
#line 2139 
    ;
    
#line 2140 
    hwdesc->addr_buffer3 = buffrag->dma;
    
#line 2141 
    goto ldv_55147;
    case 3: 
#line 2142 
    ;
    
#line 2143 
    hwdesc->addr_buffer4 = buffrag->dma;
    
#line 2144 
    goto ldv_55147;
  }
  ldv_55147: 
#line 2146 
  ;
  
#line 2117 
  i += 1;
  ldv_55152: 
#line 2118 
  ;
  
#line 2117 
  if (i < frag_count) 
#line 2119 
                      goto ldv_55151; else 
#line 2122 
                                           goto ldv_55153;
  ldv_55153: 
#line 2123 
  ;
  
#line 2148 
  tx_ring->producer = (producer + 1U) & (num_txd + 4294967295U);
  
#line 2150 
  netxen_tso_check(netdev,tx_ring,first_desc,skb);
  
#line 2152 
  adapter->stats.txbytes += (unsigned long long)skb->len;
  
#line 2153 
  adapter->stats.xmitcalled += 1ULL;
  
#line 2155 
  netxen_nic_update_cmd_producer(adapter,tx_ring);
  
#line 2157 
  __retres = NETDEV_TX_OK;
  
#line 2157 
  goto return_label;
  drop_packet: 
#line 2159 
  ;
  
#line 2160 
  adapter->stats.txdropped += 1ULL;
  
#line 2161 
  dev_kfree_skb_any(skb);
  
#line 2162 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2162 
                return __retres;
}


#line 2165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_check_temp(struct netxen_adapter *adapter)
{
  uint32_t temp;
  uint32_t temp_state;
  uint32_t temp_val;
  
#line 2167 
  struct net_device *netdev = adapter->netdev;
  
#line 2169 
  int rv = 0;
  
#line 2171 
  temp = (*(adapter->crb_read))(adapter,136324020UL);
  
#line 2173 
  temp_state = temp & 65535U;
  
#line 2174 
  temp_val = temp >> 16;
  
#line 2176 
  if (temp_state == 3U) {
    
#line 2177 
    printk("\001",(char *)(& netdev->name),temp_val);
    
#line 2181 
    rv = 1;
  }
  else 
    
#line 2182 
    if (temp_state == 2U) {
      
#line 2183 
      if (adapter->temp == 1U) 
#line 2184 
                               printk("\001",(char *)(& netdev->name),temp_val); else ;
    }
    else 
      
#line 2191 
      if (adapter->temp == 2U) 
#line 2192 
                               printk("\001",(char *)(& netdev->name),temp_val); else ;
  
#line 2198 
  adapter->temp = temp_state;
  
#line 2199 
  return rv;
}


#line 2202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
void netxen_advert_link_change(struct netxen_adapter *adapter, int linkup)
{
  
#line 2204 
  struct net_device *netdev = adapter->netdev;
  
#line 2206 
  if ((unsigned int)adapter->ahw.linkup != 0U && linkup == 0) {
    bool tmp;
    
#line 2207 
    printk("\001",(char *)(& netxen_nic_driver_name),(char *)(& netdev->name));
    
#line 2209 
    adapter->ahw.linkup = (unsigned char)0U;
    
#line 2210 
    tmp = netif_running((struct net_device const *)netdev);
    
#line 2210 
    if ((int)tmp != 0) {
      
#line 2211 
      netif_carrier_off(netdev);
      
#line 2212 
      netif_start_queue(netdev);
    }
    else ;
    
#line 2214 
    adapter->link_changed = (unsigned char)((unsigned int)adapter->has_link_events == 0U);
  }
  else 
    
#line 2215 
    if ((unsigned int)adapter->ahw.linkup == 0U && linkup != 0) {
      bool tmp_0;
      
#line 2216 
      printk("\001",(char *)(& netxen_nic_driver_name),(char *)(& netdev->name));
      
#line 2218 
      adapter->ahw.linkup = (unsigned char)1U;
      
#line 2219 
      tmp_0 = netif_running((struct net_device const *)netdev);
      
#line 2219 
      if ((int)tmp_0 != 0) {
        
#line 2220 
        netif_carrier_on(netdev);
        
#line 2221 
        netif_wake_queue(netdev);
      }
      else ;
      
#line 2223 
      adapter->link_changed = (unsigned char)((unsigned int)adapter->has_link_events == 0U);
    }
    else ;
  
#line 2225 
  return;
}


#line 2227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_handle_phy_intr(struct netxen_adapter *adapter)
{
  u32 val;
  u32 port;
  u32 linkup;
  
#line 2231 
  port = (unsigned int)adapter->physical_port;
  
#line 2233 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 2234 
    val = (*(adapter->crb_read))(adapter,136323736UL);
    
#line 2235 
    val = (val >> (int)adapter->ahw.pci_func * 4) & 15U;
    
#line 2236 
    linkup = (unsigned int)(val == 1U);
  }
  else {
    
#line 2238 
    val = (*(adapter->crb_read))(adapter,136323732UL);
    
#line 2239 
    val = (val >> port * 8U) & 255U;
    
#line 2240 
    linkup = (unsigned int)(val == 16U);
  }
  
#line 2243 
  netxen_advert_link_change(adapter,(int)linkup);
  
#line 2244 
  return;
}


#line 2246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_tx_timeout(struct net_device *netdev)
{
  int tmp_0;
  
#line 2248 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2250 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2250 
  if (tmp_0 != 0) 
#line 2251 
                  goto return_label; else ;
  
#line 2253 
  dev_err((struct device const *)(& netdev->dev),"transmit timeout, resetting.\n");
  
#line 2254 
  ldv_schedule_work_80(& adapter->tx_timeout_task);
  return_label: 
#line 2255 
                return;
}


#line 2257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_tx_timeout_task(struct work_struct *work)
{
  struct netxen_adapter *tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  {
    
#line 2260 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2260 
    tmp = (struct netxen_adapter *)__mptr + 18446744073709550656U;
  }
  
#line 2259 
  struct netxen_adapter *adapter = tmp;
  
#line 2262 
  tmp_0 = netif_running((struct net_device const *)adapter->netdev);
  
#line 2262 
  if (tmp_0) 
#line 2262 
             tmp_1 = 0; else 
#line 2262 
                             tmp_1 = 1;
  
#line 2262 
  if (tmp_1) 
#line 2263 
             goto return_label; else ;
  
#line 2265 
  tmp_2 = test_and_set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2265 
  if (tmp_2 != 0) 
#line 2266 
                  goto return_label; else ;
  
#line 2268 
  adapter->tx_timeo_cnt = (u8)((int)adapter->tx_timeo_cnt + 1);
  
#line 2268 
  if ((unsigned int)adapter->tx_timeo_cnt > 1U) 
#line 2269 
                                                goto request_reset; else ;
  
#line 2271 
  rtnl_lock();
  
#line 2272 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 2274 
    netxen_napi_disable(adapter);
    
#line 2276 
    netxen_napi_enable(adapter);
    
#line 2278 
    netif_wake_queue(adapter->netdev);
    
#line 2280 
    set_bit(2L,(unsigned long volatile *)(& adapter->state));
  }
  else {
    int tmp_3;
    
#line 2282 
    set_bit(2L,(unsigned long volatile *)(& adapter->state));
    
#line 2283 
    tmp_3 = netxen_nic_reset_context(adapter);
    
#line 2283 
    if (tmp_3 != 0) {
      
#line 2284 
      rtnl_unlock();
      
#line 2285 
      goto request_reset;
    }
    else ;
  }
  
#line 2288 
  (adapter->netdev)->trans_start = jiffies;
  
#line 2289 
  rtnl_unlock();
  
#line 2290 
  goto return_label;
  request_reset: 
#line 2292 
  ;
  
#line 2293 
  adapter->need_fw_reset = (unsigned char)1U;
  
#line 2294 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  return_label: 
#line 2295 
                return;
}


#line 2297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct rtnl_link_stats64 *netxen_nic_get_stats(struct net_device *netdev, struct rtnl_link_stats64 *stats)
{
  
#line 2300 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2302 
  stats->rx_packets = adapter->stats.rx_pkts + adapter->stats.lro_pkts;
  
#line 2303 
  stats->tx_packets = adapter->stats.xmitfinished;
  
#line 2304 
  stats->rx_bytes = adapter->stats.rxbytes;
  
#line 2305 
  stats->tx_bytes = adapter->stats.txbytes;
  
#line 2306 
  stats->rx_dropped = adapter->stats.rxdropped;
  
#line 2307 
  stats->tx_dropped = adapter->stats.txdropped;
  
#line 2309 
  return stats;
}


#line 2312  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static irqreturn_t netxen_intr(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 2314 
  struct nx_host_sds_ring *sds_ring = (struct nx_host_sds_ring *)data;
  
#line 2315 
  struct netxen_adapter *adapter = sds_ring->adapter;
  
#line 2316 
  u32 status = 0U;
  
#line 2318 
  status = readl((void const volatile *)adapter->isr_int_vec);
  
#line 2320 
  if ((adapter->int_vec_bit & status) == 0U) {
    
#line 2321 
    __retres = IRQ_NONE;
    
#line 2321 
    goto return_label;
  }
  else ;
  
#line 2323 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 2325 
    status = readl((void const volatile *)adapter->crb_int_state_reg);
    
#line 2326 
    if ((status & 768U) != 512U) {
      
#line 2327 
      __retres = IRQ_NONE;
      
#line 2327 
      goto return_label;
    }
    else ;
  }
  else {
    unsigned int tmp;
    int tmp_0;
    
#line 2330 
    unsigned long our_int = 0UL;
    
#line 2332 
    tmp = readl((void const volatile *)adapter->crb_int_state_reg);
    
#line 2332 
    our_int = (unsigned long)tmp;
    
#line 2335 
    tmp_0 = test_and_set_bit((long)((int)adapter->portnum + 7),(unsigned long volatile *)(& our_int));
    
#line 2335 
    if (tmp_0 == 0) {
      
#line 2336 
      __retres = IRQ_NONE;
      
#line 2336 
      goto return_label;
    }
    else ;
    
#line 2339 
    writel((unsigned int)our_int,(void volatile *)adapter->crb_int_state_reg);
    
#line 2342 
    netxen_nic_disable_int(sds_ring);
  }
  
#line 2345 
  writel(4294967295U,(void volatile *)adapter->tgt_status_reg);
  
#line 2347 
  readl((void const volatile *)adapter->isr_int_vec);
  
#line 2348 
  readl((void const volatile *)adapter->isr_int_vec);
  
#line 2350 
  napi_schedule(& sds_ring->napi);
  
#line 2352 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2352 
                return __retres;
}


#line 2355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static irqreturn_t netxen_msi_intr(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 2357 
  struct nx_host_sds_ring *sds_ring = (struct nx_host_sds_ring *)data;
  
#line 2358 
  struct netxen_adapter *adapter = sds_ring->adapter;
  
#line 2361 
  writel(4294967295U,(void volatile *)adapter->tgt_status_reg);
  
#line 2363 
  napi_schedule(& sds_ring->napi);
  
#line 2364 
  __retres = IRQ_HANDLED;
  
#line 2364 
  return __retres;
}


#line 2367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static irqreturn_t netxen_msix_intr(int irq, void *data)
{
  irqreturn_t __retres;
  
#line 2369 
  struct nx_host_sds_ring *sds_ring = (struct nx_host_sds_ring *)data;
  
#line 2371 
  napi_schedule(& sds_ring->napi);
  
#line 2372 
  __retres = IRQ_HANDLED;
  
#line 2372 
  return __retres;
}


#line 2375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_nic_poll(struct napi_struct *napi, int budget)
{
  struct nx_host_sds_ring *tmp;
  int tx_complete;
  int work_done;
  {
    
#line 2378 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2378 
    tmp = (struct nx_host_sds_ring *)__mptr + 18446744073709551576U;
  }
  
#line 2377 
  struct nx_host_sds_ring *sds_ring = tmp;
  
#line 2380 
  struct netxen_adapter *adapter = sds_ring->adapter;
  
#line 2385 
  tx_complete = netxen_process_cmd_ring(adapter);
  
#line 2387 
  work_done = netxen_process_rcv_ring(sds_ring,budget);
  
#line 2389 
  if (tx_complete == 0) 
#line 2390 
                        work_done = budget; else ;
  
#line 2392 
  if (work_done < budget) {
    int tmp_0;
    
#line 2393 
    napi_complete(& sds_ring->napi);
    
#line 2394 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 2394 
    if (tmp_0 != 0) 
#line 2395 
                    netxen_nic_enable_int(sds_ring); else ;
  }
  else ;
  
#line 2398 
  return work_done;
}


#line 2402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_nic_poll_controller(struct net_device *netdev)
{
  int ring;
  struct nx_host_sds_ring *sds_ring;
  
#line 2406 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2407 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 2409 
  disable_irq(adapter->irq);
  
#line 2410 
  ring = 0;
  
#line 2410 
  goto ldv_55226;
  ldv_55225: 
#line 2411 
  ;
  
#line 2411 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 2412 
  netxen_intr((int)adapter->irq,(void *)sds_ring);
  
#line 2410 
  ring += 1;
  ldv_55226: 
#line 2411 
  ;
  
#line 2410 
  if ((int)adapter->max_sds_rings > ring) 
#line 2412 
                                          goto ldv_55225; else 
#line 2415 
                                                               goto ldv_55227;
  ldv_55227: 
#line 2416 
  ;
  
#line 2414 
  enable_irq(adapter->irq);
  
#line 2415 
  return;
}


#line 2419  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int nx_incr_dev_ref_cnt(struct netxen_adapter *adapter)
{
  int __retres;
  int count;
  int tmp;
  u32 tmp_0;
  
#line 2422 
  tmp = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 2422 
  if (tmp != 0) {
    
#line 2423 
    __retres = -5;
    
#line 2423 
    goto return_label;
  }
  else ;
  
#line 2425 
  tmp_0 = (*(adapter->crb_read))(adapter,136323384UL);
  
#line 2425 
  count = (int)tmp_0;
  
#line 2427 
  count += 1;
  
#line 2427 
  ;
  
#line 2427 
  (*(adapter->crb_write))(adapter,136323384UL,(unsigned int)count);
  
#line 2429 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 2430 
  __retres = count;
  return_label: 
#line 2430 
                return __retres;
}


#line 2434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int nx_decr_dev_ref_cnt(struct netxen_adapter *adapter)
{
  int __retres;
  int count;
  int state;
  int tmp;
  u32 tmp_0;
  u32 tmp_1;
  
#line 2437 
  tmp = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 2437 
  if (tmp != 0) {
    
#line 2438 
    __retres = -5;
    
#line 2438 
    goto return_label;
  }
  else ;
  
#line 2440 
  tmp_0 = (*(adapter->crb_read))(adapter,136323384UL);
  
#line 2440 
  count = (int)tmp_0;
  {
    
#line 2441 
    int __ret_warn_on = count == 0;
    
#line 2441 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 2441 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c",2441); else ;
    
#line 2441 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 2443 
  count -= 1;
  
#line 2443 
  ;
  
#line 2443 
  (*(adapter->crb_write))(adapter,136323384UL,(unsigned int)count);
  
#line 2444 
  tmp_1 = (*(adapter->crb_read))(adapter,136323392UL);
  
#line 2444 
  state = (int)tmp_1;
  
#line 2446 
  if (count == 0 && state != 7) 
#line 2447 
                                (*(adapter->crb_write))(adapter,136323392UL,1U); else ;
  
#line 2449 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 2450 
  __retres = count;
  return_label: 
#line 2450 
                return __retres;
}


#line 2454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int nx_dev_request_aer(struct netxen_adapter *adapter)
{
  int __retres;
  u32 state;
  int tmp;
  
#line 2457 
  int ret = -22;
  
#line 2459 
  tmp = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 2459 
  if (tmp != 0) {
    
#line 2460 
    __retres = ret;
    
#line 2460 
    goto return_label;
  }
  else ;
  
#line 2462 
  state = (*(adapter->crb_read))(adapter,136323392UL);
  
#line 2464 
  if (state == 6U) 
#line 2465 
                   ret = 0;
  else 
    
#line 2466 
    if (state == 3U) {
      
#line 2467 
      (*(adapter->crb_write))(adapter,136323392UL,6U);
      
#line 2468 
      ret = 0;
    }
    else ;
  
#line 2471 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 2472 
  __retres = ret;
  return_label: 
#line 2472 
                return __retres;
}


#line 2476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
int nx_dev_request_reset(struct netxen_adapter *adapter)
{
  int __retres;
  u32 state;
  int tmp;
  
#line 2479 
  int ret = -22;
  
#line 2481 
  tmp = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 2481 
  if (tmp != 0) {
    
#line 2482 
    __retres = ret;
    
#line 2482 
    goto return_label;
  }
  else ;
  
#line 2484 
  state = (*(adapter->crb_read))(adapter,136323392UL);
  
#line 2486 
  if (state == 4U || state == 7U) 
#line 2487 
                                  ret = 0;
  else 
    
#line 2488 
    if (state != 2U && state != 6U) {
      
#line 2489 
      (*(adapter->crb_write))(adapter,136323392UL,4U);
      
#line 2490 
      adapter->flags |= 64U;
      
#line 2491 
      ret = 0;
    }
    else ;
  
#line 2494 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 2496 
  __retres = ret;
  return_label: 
#line 2496 
                return __retres;
}


#line 2500  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_can_start_firmware(struct netxen_adapter *adapter)
{
  int __retres;
  int count;
  int tmp;
  u32 tmp_0;
  
#line 2503 
  int can_start = 0;
  
#line 2505 
  tmp = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 2505 
  if (tmp != 0) {
    
#line 2506 
    nx_incr_dev_ref_cnt(adapter);
    
#line 2507 
    __retres = -1;
    
#line 2507 
    goto return_label;
  }
  else ;
  
#line 2510 
  tmp_0 = (*(adapter->crb_read))(adapter,136323384UL);
  
#line 2510 
  count = (int)tmp_0;
  
#line 2512 
  if ((unsigned int)count > 7U) 
#line 2513 
                                count = 0; else ;
  
#line 2515 
  if (count == 0) {
    
#line 2516 
    can_start = 1;
    
#line 2517 
    (*(adapter->crb_write))(adapter,136323392UL,2U);
  }
  else ;
  
#line 2520 
  count += 1;
  
#line 2520 
  ;
  
#line 2520 
  (*(adapter->crb_write))(adapter,136323384UL,(unsigned int)count);
  
#line 2522 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 2524 
  __retres = can_start;
  return_label: 
#line 2524 
                return __retres;
}


#line 2528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_schedule_work(struct netxen_adapter *adapter, void (*func)(struct work_struct *), int delay)
{
  {
    struct lock_class_key __key;
    
#line 2531 
    __init_work(& adapter->fw_work.work,0);
    
#line 2531 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2531 
    adapter->fw_work.work.data = __constr_expr_38;
    
#line 2531 
    lockdep_init_map(& adapter->fw_work.work.lockdep_map,"(&(&adapter->fw_work)->work)",& __key,0);
    
#line 2531 
    INIT_LIST_HEAD(& adapter->fw_work.work.entry);
    
#line 2531 
    adapter->fw_work.work.func = func;
  }
  {
    struct lock_class_key __key_0;
    
#line 2531 
    init_timer_key(& adapter->fw_work.timer,2097152U,"(&(&adapter->fw_work)->timer)",& __key_0);
  }
  
#line 2531 
  adapter->fw_work.timer.function = & delayed_work_timer_fn;
  
#line 2531 
  adapter->fw_work.timer.data = (unsigned long)(& adapter->fw_work);
  
#line 2532 
  ldv_schedule_delayed_work_81(& adapter->fw_work,(unsigned long)delay);
  
#line 2533 
  return;
}


#line 2536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_cancel_fw_work(struct netxen_adapter *adapter)
{
  int tmp;
  
#line 2538 
  goto ldv_55266;
  ldv_55265: 
#line 2539 
  ;
  
#line 2539 
  msleep(10U);
  ldv_55266: 
#line 2540 
  ;
  
#line 2538 
  tmp = test_and_set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2538 
  if (tmp != 0) 
#line 2540 
                goto ldv_55265; else 
#line 2543 
                                     goto ldv_55267;
  ldv_55267: 
#line 2544 
  ;
  
#line 2541 
  cancel_delayed_work_sync(& adapter->fw_work);
  
#line 2542 
  return;
}


#line 2545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_attach_work(struct work_struct *work)
{
  struct netxen_adapter *tmp;
  bool tmp_0;
  {
    
#line 2547 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2547 
    tmp = (struct netxen_adapter *)__mptr + 18446744073709550880U;
  }
  
#line 2547 
  struct netxen_adapter *adapter = tmp;
  
#line 2549 
  struct net_device *netdev = adapter->netdev;
  
#line 2550 
  int err = 0;
  
#line 2552 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 2552 
  if ((int)tmp_0 != 0) {
    
#line 2553 
    err = netxen_nic_attach(adapter);
    
#line 2554 
    if (err != 0) 
#line 2555 
                  goto done; else ;
    
#line 2557 
    err = netxen_nic_up(adapter,netdev);
    
#line 2558 
    if (err != 0) {
      
#line 2559 
      netxen_nic_detach(adapter);
      
#line 2560 
      goto done;
    }
    else ;
    
#line 2563 
    netxen_restore_indev_addr(netdev,1UL);
  }
  else ;
  
#line 2566 
  netif_device_attach(netdev);
  done: 
#line 2568 
  ;
  
#line 2569 
  adapter->fw_fail_cnt = (unsigned char)0U;
  
#line 2570 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2571 
  netxen_schedule_work(adapter,& netxen_fw_poll_work,500);
  
#line 2572 
  return;
}


#line 2575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_fwinit_work(struct work_struct *work)
{
  struct netxen_adapter *tmp;
  int dev_state;
  int count;
  u32 tmp_0;
  int tmp_5;
  {
    
#line 2577 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2577 
    tmp = (struct netxen_adapter *)__mptr + 18446744073709550880U;
  }
  
#line 2577 
  struct netxen_adapter *adapter = tmp;
  
#line 2581 
  tmp_0 = (*(adapter->crb_read))(adapter,136323392UL);
  
#line 2581 
  dev_state = (int)tmp_0;
  
#line 2582 
  if ((adapter->flags & 64U) != 0U) {
    u32 tmp_1;
    
#line 2583 
    tmp_1 = (*(adapter->crb_read))(adapter,136323384UL);
    
#line 2583 
    count = (int)tmp_1;
    {
      
#line 2584 
      int __ret_warn_on = count == 0;
      
#line 2584 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 2584 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c",2584); else ;
      
#line 2584 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 2585 
    if (count == 1) {
      int tmp_2_0;
      u32 tmp_3;
      
#line 2586 
      if ((unsigned int)adapter->mdump.md_enabled != 0U) {
        
#line 2587 
        rtnl_lock();
        
#line 2588 
        netxen_dump_fw(adapter);
        
#line 2589 
        rtnl_unlock();
      }
      else ;
      
#line 2591 
      adapter->flags &= 4294967231U;
      
#line 2592 
      tmp_2_0 = netxen_pcie_sem_lock(adapter,5,0U);
      
#line 2592 
      if (tmp_2_0 != 0) {
        
#line 2593 
        set_bit(2L,(unsigned long volatile *)(& adapter->state));
        
#line 2594 
        (*(adapter->crb_write))(adapter,136323392UL,7U);
        
#line 2596 
        goto return_label;
      }
      else ;
      
#line 2598 
      tmp_3 = (*(adapter->crb_read))(adapter,136323384UL);
      
#line 2598 
      count = (int)tmp_3;
      
#line 2599 
      count -= 1;
      
#line 2599 
      ;
      
#line 2599 
      (*(adapter->crb_write))(adapter,136323384UL,(unsigned int)count);
      
#line 2600 
      (*(adapter->crb_write))(adapter,136323392UL,1U);
      
#line 2601 
      dev_state = 1;
      
#line 2602 
      netxen_pcie_sem_unlock(adapter,5);
    }
    else ;
  }
  else ;
  
#line 2606 
  switch (dev_state) {
    int tmp_4;
    case 1: 
#line 2607 
    ;
    case 3: 
#line 2608 
    ;
    
#line 2609 
    tmp_4 = netxen_start_firmware(adapter);
    
#line 2609 
    if (tmp_4 == 0) {
      
#line 2610 
      netxen_schedule_work(adapter,& netxen_attach_work,0);
      
#line 2611 
      goto return_label;
    }
    else ;
    
#line 2613 
    goto ldv_55289;
    case 4: 
#line 2615 
    ;
    case 2: 
#line 2616 
    ;
    
#line 2617 
    netxen_schedule_work(adapter,& netxen_fwinit_work,1000);
    
#line 2619 
    goto return_label;
    case 7: 
#line 2621 
    ;
    default: 
#line 2622 
    ;
    
#line 2623 
    nx_incr_dev_ref_cnt(adapter);
    
#line 2624 
    goto ldv_55289;
  }
  ldv_55289: 
#line 2627 
  ;
  
#line 2627 
  tmp_5 = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 2627 
  if (tmp_5 != 0) {
    
#line 2628 
    set_bit(2L,(unsigned long volatile *)(& adapter->state));
    
#line 2629 
    goto return_label;
  }
  else ;
  
#line 2631 
  (*(adapter->crb_write))(adapter,136323392UL,7U);
  
#line 2632 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 2633 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"%s: Device initialization Failed\n",(char *)(& (adapter->netdev)->name));
  
#line 2636 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  return_label: 
#line 2637 
                return;
}


#line 2640  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_detach_work(struct work_struct *work)
{
  struct netxen_adapter *tmp;
  int delay;
  u32 status;
  {
    
#line 2642 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2642 
    tmp = (struct netxen_adapter *)__mptr + 18446744073709550880U;
  }
  
#line 2642 
  struct netxen_adapter *adapter = tmp;
  
#line 2644 
  struct net_device *netdev = adapter->netdev;
  
#line 2645 
  int ref_cnt = 0;
  
#line 2648 
  netif_device_detach(netdev);
  
#line 2650 
  netxen_nic_down(adapter,netdev);
  
#line 2652 
  rtnl_lock();
  
#line 2653 
  netxen_nic_detach(adapter);
  
#line 2654 
  rtnl_unlock();
  
#line 2656 
  status = (*(adapter->crb_read))(adapter,136323240UL);
  
#line 2658 
  if (status < (u32)0) 
#line 2659 
                       goto err_ret; else ;
  
#line 2661 
  if (adapter->temp == 3U) 
#line 2662 
                           goto err_ret; else ;
  
#line 2664 
  if ((adapter->flags & 64U) == 0U) 
#line 2665 
                                    ref_cnt = nx_decr_dev_ref_cnt(adapter); else ;
  
#line 2667 
  if (ref_cnt == -5) 
#line 2668 
                     goto err_ret; else ;
  
#line 2670 
  if (ref_cnt == 0) 
#line 2670 
                    delay = 0; else 
#line 2670 
                                    delay = 1000;
  
#line 2672 
  adapter->fw_wait_cnt = (unsigned char)0U;
  
#line 2673 
  netxen_schedule_work(adapter,& netxen_fwinit_work,delay);
  
#line 2675 
  goto return_label;
  err_ret: 
#line 2677 
  ;
  
#line 2678 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  return_label: 
#line 2679 
                return;
}


#line 2682  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_check_health(struct netxen_adapter *adapter)
{
  int __retres;
  u32 state;
  u32 heartbit;
  u32 peg_status;
  int tmp;
  int tmp_1;
  u32 tmp_2;
  u32 tmp_3;
  u32 tmp_4;
  u32 tmp_5;
  u32 tmp_6;
  u32 tmp_7;
  
#line 2686 
  struct net_device *netdev = adapter->netdev;
  
#line 2688 
  state = (*(adapter->crb_read))(adapter,136323392UL);
  
#line 2689 
  if (state == 6U) {
    
#line 2690 
    __retres = 0;
    
#line 2690 
    goto return_label;
  }
  else ;
  
#line 2692 
  tmp = netxen_nic_check_temp(adapter);
  
#line 2692 
  if (tmp != 0) 
#line 2693 
                goto detach; else ;
  
#line 2695 
  if ((unsigned int)adapter->need_fw_reset != 0U) {
    int tmp_0;
    
#line 2696 
    tmp_0 = nx_dev_request_reset(adapter);
    
#line 2696 
    if (tmp_0 != 0) {
      
#line 2697 
      __retres = 0;
      
#line 2697 
      goto return_label;
    }
    else ;
    
#line 2698 
    goto detach;
  }
  else ;
  
#line 2706 
  if (state == 4U || state == 7U) {
    
#line 2707 
    adapter->need_fw_reset = (unsigned char)1U;
    
#line 2708 
    if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 2709 
                                                       goto detach; else ;
  }
  else ;
  
#line 2712 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 2713 
    __retres = 0;
    
#line 2713 
    goto return_label;
  }
  else ;
  
#line 2715 
  heartbit = (*(adapter->crb_read))(adapter,136323248UL);
  
#line 2716 
  if (adapter->heartbit != heartbit) {
    
#line 2717 
    adapter->heartbit = heartbit;
    
#line 2718 
    adapter->fw_fail_cnt = (unsigned char)0U;
    
#line 2719 
    if ((unsigned int)adapter->need_fw_reset != 0U) 
#line 2720 
                                                    goto detach; else ;
    
#line 2721 
    __retres = 0;
    
#line 2721 
    goto return_label;
  }
  else ;
  
#line 2724 
  adapter->fw_fail_cnt = (u8)((int)adapter->fw_fail_cnt + 1);
  
#line 2724 
  if ((unsigned int)adapter->fw_fail_cnt <= 2U) {
    
#line 2725 
    __retres = 0;
    
#line 2725 
    goto return_label;
  }
  else ;
  
#line 2727 
  tmp_1 = nx_dev_request_reset(adapter);
  
#line 2727 
  if (tmp_1 != 0) {
    
#line 2728 
    __retres = 0;
    
#line 2728 
    goto return_label;
  }
  else ;
  
#line 2730 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 2732 
  dev_err((struct device const *)(& netdev->dev),"firmware hang detected\n");
  
#line 2733 
  peg_status = (*(adapter->crb_read))(adapter,136323240UL);
  
#line 2744 
  tmp_2 = (*(adapter->crb_read))(adapter,116391996UL);
  
#line 2743 
  tmp_3 = (*(adapter->crb_read))(adapter,121634876UL);
  
#line 2742 
  tmp_4 = (*(adapter->crb_read))(adapter,120586300UL);
  
#line 2741 
  tmp_5 = (*(adapter->crb_read))(adapter,119537724UL);
  
#line 2740 
  tmp_6 = (*(adapter->crb_read))(adapter,118489148UL);
  
#line 2734 
  tmp_7 = (*(adapter->crb_read))(adapter,136323244UL);
  
#line 2734 
  ;
  
#line 2734 
  ;
  
#line 2734 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"Dumping hw/fw registers\n",peg_status,tmp_7,tmp_6,tmp_5,tmp_4,tmp_3,tmp_2);
  
#line 2746 
  if (((peg_status >> 8) & 2097151U) == 103U) 
#line 2747 
                                              dev_err((struct device const *)(& (adapter->pdev)->dev),"Firmware aborted with error code 0x00006700. "); else ;
  detach: 
#line 2750 
  ;
  
#line 2751 
  if (auto_fw_reset == -284119278) {
    int tmp_8;
    
#line 2751 
    tmp_8 = test_and_set_bit(2L,(unsigned long volatile *)(& adapter->state));
    
#line 2751 
    if (tmp_8 == 0) 
#line 2753 
                    netxen_schedule_work(adapter,& netxen_detach_work,0); else ;
  }
  else ;
  
#line 2754 
  __retres = 1;
  return_label: 
#line 2754 
                return __retres;
}


#line 2758  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_fw_poll_work(struct work_struct *work)
{
  struct netxen_adapter *tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  {
    
#line 2760 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2760 
    tmp = (struct netxen_adapter *)__mptr + 18446744073709550880U;
  }
  
#line 2760 
  struct netxen_adapter *adapter = tmp;
  
#line 2763 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2763 
  if (tmp_0 != 0) 
#line 2764 
                  goto reschedule; else ;
  
#line 2766 
  tmp_1 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
  
#line 2766 
  if (tmp_1 != 0) {
    
#line 2766 
    if ((adapter->capabilities & 32U) == 0U) {
      
#line 2768 
      if ((unsigned int)adapter->has_link_events == 0U) {
        
#line 2770 
        netxen_nic_handle_phy_intr(adapter);
        
#line 2772 
        if ((unsigned int)adapter->link_changed != 0U) 
#line 2773 
                                                       netxen_nic_set_link_parameters(adapter); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 2777 
  tmp_2 = netxen_check_health(adapter);
  
#line 2777 
  if (tmp_2 != 0) 
#line 2778 
                  goto return_label; else ;
  reschedule: 
#line 2780 
  ;
  
#line 2781 
  netxen_schedule_work(adapter,& netxen_fw_poll_work,500);
  return_label: 
#line 2782 
                return;
}


#line 2785  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_store_bridged_mode(struct device *dev, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t __retres;
  struct net_device *tmp;
  unsigned long new;
  int tmp_1;
  int tmp_2;
  {
    
#line 2788 
    struct device const *__mptr = (struct device const *)dev;
    
#line 2788 
    tmp = (struct net_device *)__mptr + 18446744073709550240U;
  }
  
#line 2788 
  struct net_device *net = tmp;
  
#line 2789 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)net);
  
#line 2791 
  int ret = -22;
  
#line 2793 
  if ((adapter->capabilities & 256U) == 0U) 
#line 2794 
                                            goto err_out; else ;
  
#line 2796 
  if ((unsigned int)adapter->is_up != 777U) 
#line 2797 
                                            goto err_out; else ;
  
#line 2799 
  tmp_1 = kstrtoul(buf,2U,& new);
  
#line 2799 
  if (tmp_1 != 0) 
#line 2800 
                  goto err_out; else ;
  
#line 2802 
  tmp_2 = netxen_config_bridged_mode(adapter,new != 0UL);
  
#line 2802 
  if (tmp_2 == 0) 
#line 2803 
                  ret = (int)len; else ;
  err_out: 
#line 2805 
  ;
  
#line 2806 
  __retres = (long)ret;
  
#line 2806 
  return __retres;
}


#line 2810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_show_bridged_mode(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  struct net_device *tmp;
  struct netxen_adapter *adapter;
  int tmp_1;
  {
    
#line 2813 
    struct device const *__mptr = (struct device const *)dev;
    
#line 2813 
    tmp = (struct net_device *)__mptr + 18446744073709550240U;
  }
  
#line 2813 
  struct net_device *net = tmp;
  
#line 2815 
  int bridged_mode = 0;
  
#line 2817 
  adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)net);
  
#line 2819 
  if ((adapter->capabilities & 256U) != 0U) 
#line 2820 
                                            bridged_mode = (adapter->flags & 16U) != 0U; else ;
  
#line 2822 
  tmp_1 = sprintf(buf,"%d\n",bridged_mode);
  
#line 2822 
  __retres = (long)tmp_1;
  
#line 2822 
  return __retres;
}


#line 2825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct device_attribute dev_attr_bridged_mode = {.attr = {.name = "bridged_mode", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & netxen_show_bridged_mode, .store = & netxen_store_bridged_mode};

#line 2832  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_store_diag_mode(struct device *dev, struct device_attribute *attr, char const *buf, size_t len)
{
  ssize_t __retres;
  unsigned long new;
  int tmp_0;
  
#line 2835 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 2838 
  tmp_0 = kstrtoul(buf,2U,& new);
  
#line 2838 
  if (tmp_0 != 0) {
    
#line 2839 
    __retres = -22L;
    
#line 2839 
    goto return_label;
  }
  else ;
  
#line 2841 
  if ((new != 0UL) ^ ((adapter->flags & 32U) != 0U)) 
#line 2842 
                                                     adapter->flags ^= 32U; else ;
  
#line 2844 
  __retres = (long)len;
  return_label: 
#line 2844 
                return __retres;
}


#line 2848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_show_diag_mode(struct device *dev, struct device_attribute *attr, char *buf)
{
  ssize_t __retres;
  int tmp_0;
  
#line 2851 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 2853 
  tmp_0 = sprintf(buf,"%d\n",(adapter->flags & 32U) != 0U);
  
#line 2853 
  __retres = (long)tmp_0;
  
#line 2853 
  return __retres;
}


#line 2857  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct device_attribute dev_attr_diag_mode = {.attr = {.name = "diag_mode", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .show = & netxen_show_diag_mode, .store = & netxen_store_diag_mode};

#line 2864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_sysfs_validate_crb(struct netxen_adapter *adapter, loff_t offset, size_t size)
{
  int __retres;
  
#line 2867 
  size_t crb_size = 4UL;
  
#line 2869 
  if ((adapter->flags & 32U) == 0U) {
    
#line 2870 
    __retres = -5;
    
#line 2870 
    goto return_label;
  }
  else ;
  
#line 2872 
  if ((unsigned long long)offset <= 100663295ULL) {
    
#line 2873 
    if ((unsigned int)adapter->ahw.revision_id <= 37U) {
      
#line 2874 
      __retres = -22;
      
#line 2874 
      goto return_label;
    }
    else ;
    
#line 2876 
    if ((unsigned long long)offset + (unsigned long long)18446744073634054144U <= (unsigned long long)2047U) 
      
#line 2878 
      crb_size = 8UL;
    else {
      
#line 2880 
      __retres = -22;
      
#line 2880 
      goto return_label;
    }
  }
  else ;
  
#line 2883 
  if (size != crb_size || ((unsigned long long)(crb_size + 18446744073709551615UL) & (unsigned long long)offset) != 0ULL) {
    
#line 2884 
    __retres = -22;
    
#line 2884 
    goto return_label;
  }
  else ;
  
#line 2886 
  __retres = 0;
  return_label: 
#line 2886 
                return __retres;
}


#line 2890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_sysfs_read_crb(struct file *filp, struct kobject *kobj, struct bin_attribute *attr, char *buf, loff_t offset, size_t size)
{
  ssize_t __retres;
  struct device *tmp;
  u32 data;
  u64 qmdata;
  int ret;
  {
    
#line 2894 
    struct kobject const *__mptr = (struct kobject const *)kobj;
    
#line 2894 
    tmp = (struct device *)__mptr + 18446744073709551600U;
  }
  
#line 2894 
  struct device *dev = tmp;
  
#line 2895 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 2900 
  ret = netxen_sysfs_validate_crb(adapter,offset,size);
  
#line 2901 
  if (ret != 0) {
    
#line 2902 
    __retres = (long)ret;
    
#line 2902 
    goto return_label;
  }
  else ;
  
#line 2904 
  if ((unsigned int)adapter->ahw.revision_id > 47U && (unsigned long long)offset + (unsigned long long)18446744073634054144U <= (unsigned long long)2047U) {
    
#line 2907 
    netxen_pci_camqm_read_2M(adapter,(unsigned long long)offset,& qmdata);
    
#line 2908 
    memcpy((void *)buf,(void const *)(& qmdata),size);
  }
  else {
    
#line 2910 
    data = (*(adapter->crb_read))(adapter,(unsigned long)offset);
    
#line 2911 
    memcpy((void *)buf,(void const *)(& data),size);
  }
  
#line 2914 
  __retres = (long)size;
  return_label: 
#line 2914 
                return __retres;
}


#line 2918  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_sysfs_write_crb(struct file *filp, struct kobject *kobj, struct bin_attribute *attr, char *buf, loff_t offset, size_t size)
{
  ssize_t __retres;
  struct device *tmp;
  u32 data;
  u64 qmdata;
  int ret;
  {
    
#line 2922 
    struct kobject const *__mptr = (struct kobject const *)kobj;
    
#line 2922 
    tmp = (struct device *)__mptr + 18446744073709551600U;
  }
  
#line 2922 
  struct device *dev = tmp;
  
#line 2923 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 2928 
  ret = netxen_sysfs_validate_crb(adapter,offset,size);
  
#line 2929 
  if (ret != 0) {
    
#line 2930 
    __retres = (long)ret;
    
#line 2930 
    goto return_label;
  }
  else ;
  
#line 2932 
  if ((unsigned int)adapter->ahw.revision_id > 47U && (unsigned long long)offset + (unsigned long long)18446744073634054144U <= (unsigned long long)2047U) {
    
#line 2935 
    memcpy((void *)(& qmdata),(void const *)buf,size);
    
#line 2936 
    netxen_pci_camqm_write_2M(adapter,(unsigned long long)offset,qmdata);
  }
  else {
    
#line 2938 
    memcpy((void *)(& data),(void const *)buf,size);
    
#line 2939 
    (*(adapter->crb_write))(adapter,(unsigned long)offset,data);
  }
  
#line 2942 
  __retres = (long)size;
  return_label: 
#line 2942 
                return __retres;
}


#line 2946  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_sysfs_validate_mem(struct netxen_adapter *adapter, loff_t offset, size_t size)
{
  int __retres;
  
#line 2949 
  if ((adapter->flags & 32U) == 0U) {
    
#line 2950 
    __retres = -5;
    
#line 2950 
    goto return_label;
  }
  else ;
  
#line 2952 
  if (size != 8UL || (offset & 7LL) != 0LL) {
    
#line 2953 
    __retres = -5;
    
#line 2953 
    goto return_label;
  }
  else ;
  
#line 2955 
  __retres = 0;
  return_label: 
#line 2955 
                return __retres;
}


#line 2959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_sysfs_read_mem(struct file *filp, struct kobject *kobj, struct bin_attribute *attr, char *buf, loff_t offset, size_t size)
{
  ssize_t __retres;
  struct device *tmp;
  u64 data;
  int ret;
  int tmp_1;
  {
    
#line 2963 
    struct kobject const *__mptr = (struct kobject const *)kobj;
    
#line 2963 
    tmp = (struct device *)__mptr + 18446744073709551600U;
  }
  
#line 2963 
  struct device *dev = tmp;
  
#line 2964 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 2968 
  ret = netxen_sysfs_validate_mem(adapter,offset,size);
  
#line 2969 
  if (ret != 0) {
    
#line 2970 
    __retres = (long)ret;
    
#line 2970 
    goto return_label;
  }
  else ;
  
#line 2972 
  tmp_1 = (*(adapter->pci_mem_read))(adapter,(unsigned long long)offset,& data);
  
#line 2972 
  if (tmp_1 != 0) {
    
#line 2973 
    __retres = -5L;
    
#line 2973 
    goto return_label;
  }
  else ;
  
#line 2975 
  memcpy((void *)buf,(void const *)(& data),size);
  
#line 2977 
  __retres = (long)size;
  return_label: 
#line 2977 
                return __retres;
}


#line 2980  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_sysfs_write_mem(struct file *filp, struct kobject *kobj, struct bin_attribute *attr, char *buf, loff_t offset, size_t size)
{
  ssize_t __retres;
  struct device *tmp;
  u64 data;
  int ret;
  int tmp_1;
  {
    
#line 2984 
    struct kobject const *__mptr = (struct kobject const *)kobj;
    
#line 2984 
    tmp = (struct device *)__mptr + 18446744073709551600U;
  }
  
#line 2984 
  struct device *dev = tmp;
  
#line 2985 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 2989 
  ret = netxen_sysfs_validate_mem(adapter,offset,size);
  
#line 2990 
  if (ret != 0) {
    
#line 2991 
    __retres = (long)ret;
    
#line 2991 
    goto return_label;
  }
  else ;
  
#line 2993 
  memcpy((void *)(& data),(void const *)buf,size);
  
#line 2995 
  tmp_1 = (*(adapter->pci_mem_write))(adapter,(unsigned long long)offset,data);
  
#line 2995 
  if (tmp_1 != 0) {
    
#line 2996 
    __retres = -5L;
    
#line 2996 
    goto return_label;
  }
  else ;
  
#line 2998 
  __retres = (long)size;
  return_label: 
#line 2998 
                return __retres;
}


#line 3002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct bin_attribute bin_attr_crb = {.attr = {.name = "crb", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .size = 0UL, .private = (void *)0, .read = & netxen_sysfs_read_crb, .write = & netxen_sysfs_write_crb, .mmap = (int (*)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *))0};

#line 3009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct bin_attribute bin_attr_mem = {.attr = {.name = "mem", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .size = 0UL, .private = (void *)0, .read = & netxen_sysfs_read_mem, .write = & netxen_sysfs_write_mem, .mmap = (int (*)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *))0};

#line 3017  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static ssize_t netxen_sysfs_read_dimm(struct file *filp, struct kobject *kobj, struct bin_attribute *attr, char *buf, loff_t offset, size_t size)
{
  ssize_t __retres;
  struct device *tmp;
  struct netxen_dimm_cfg dimm;
  u8 dw;
  u8 rows;
  u8 cols;
  u8 banks;
  u8 ranks;
  u32 val;
  {
    
#line 3021 
    struct kobject const *__mptr = (struct kobject const *)kobj;
    
#line 3021 
    tmp = (struct device *)__mptr + 18446744073709551600U;
  }
  
#line 3021 
  struct device *dev = tmp;
  
#line 3022 
  struct netxen_adapter *adapter = dev_get_drvdata((struct device const *)dev);
  
#line 3023 
  struct net_device *netdev = adapter->netdev;
  
#line 3028 
  if (attr->size > size) {
    
#line 3029 
    netdev_err((struct net_device const *)netdev,"Invalid size\n");
    
#line 3030 
    __retres = -22L;
    
#line 3030 
    goto return_label;
  }
  else ;
  
#line 3033 
  memset((void *)(& dimm),0,8UL);
  
#line 3034 
  val = (*(adapter->crb_read))(adapter,136323672UL);
  
#line 3037 
  if (val < (u32)0) {
    
#line 3038 
    netdev_err((struct net_device const *)netdev,"Invalid DIMM flag\n");
    
#line 3039 
    dimm.presence = (unsigned char)255U;
    
#line 3040 
    goto out;
  }
  else ;
  
#line 3043 
  rows = (unsigned char)((unsigned int)((unsigned char)(val >> 7)) & 15U);
  
#line 3044 
  cols = (unsigned char)((unsigned int)((unsigned char)(val >> 11)) & 15U);
  
#line 3045 
  ranks = (unsigned char)((unsigned int)((unsigned char)(val >> 15)) & 3U);
  
#line 3046 
  banks = (unsigned char)((unsigned int)((unsigned char)(val >> 21)) & 15U);
  
#line 3047 
  dw = (unsigned char)((unsigned int)((unsigned char)(val >> 18)) & 3U);
  
#line 3049 
  dimm.presence = (unsigned char)((unsigned int)((unsigned char)val) & 1U);
  
#line 3052 
  if ((unsigned int)dimm.presence == 0U) {
    
#line 3053 
    netdev_err((struct net_device const *)netdev,"DIMM not present\n");
    
#line 3054 
    goto out;
  }
  else ;
  
#line 3057 
  dimm.dimm_type = (unsigned char)((unsigned int)((unsigned char)(val >> 25)) & 63U);
  
#line 3059 
  switch ((int)dimm.dimm_type) {
    case 1: 
#line 3060 
    ;
    case 2: 
#line 3061 
    ;
    case 4: 
#line 3062 
    ;
    case 8: 
#line 3063 
    ;
    case 16: 
#line 3064 
    ;
    case 32: 
#line 3065 
    ;
    
#line 3066 
    goto ldv_55457;
    default: 
#line 3067 
    ;
    
#line 3068 
    netdev_err((struct net_device const *)netdev,"Invalid DIMM type %x\n",(int)dimm.dimm_type);
    
#line 3069 
    goto out;
  }
  ldv_55457: 
#line 3072 
  ;
  
#line 3072 
  if ((val & 2U) != 0U) 
#line 3073 
                        dimm.mem_type = (unsigned char)8U; else 
#line 3075 
                                                                dimm.mem_type = (unsigned char)((unsigned int)((unsigned char)(val >> 3)) & 15U);
  
#line 3077 
  if ((val & 4U) != 0U) {
    
#line 3078 
    dimm.size = 512U;
    
#line 3079 
    goto out;
  }
  else ;
  
#line 3082 
  if ((unsigned int)rows == 0U) {
    
#line 3083 
    netdev_err((struct net_device const *)netdev,"Invalid no of rows %x\n",(int)rows);
    
#line 3084 
    goto out;
  }
  else ;
  
#line 3087 
  if ((unsigned int)cols == 0U) {
    
#line 3088 
    netdev_err((struct net_device const *)netdev,"Invalid no of columns %x\n",(int)cols);
    
#line 3089 
    goto out;
  }
  else ;
  
#line 3092 
  if ((unsigned int)banks == 0U) {
    
#line 3093 
    netdev_err((struct net_device const *)netdev,"Invalid no of banks %x\n",(int)banks);
    
#line 3094 
    goto out;
  }
  else ;
  
#line 3097 
  ranks = (unsigned char)((unsigned int)ranks + 1U);
  
#line 3099 
  switch ((int)dw) {
    case 0: 
#line 3100 
    ;
    
#line 3101 
    dw = (unsigned char)32U;
    
#line 3102 
    goto ldv_55460;
    case 1: 
#line 3103 
    ;
    
#line 3104 
    dw = (unsigned char)33U;
    
#line 3105 
    goto ldv_55460;
    case 2: 
#line 3106 
    ;
    
#line 3107 
    dw = (unsigned char)36U;
    
#line 3108 
    goto ldv_55460;
    case 3: 
#line 3109 
    ;
    
#line 3110 
    dw = (unsigned char)64U;
    
#line 3111 
    goto ldv_55460;
    case 4: 
#line 3112 
    ;
    
#line 3113 
    dw = (unsigned char)72U;
    
#line 3114 
    goto ldv_55460;
    case 5: 
#line 3115 
    ;
    
#line 3116 
    dw = (unsigned char)80U;
    
#line 3117 
    goto ldv_55460;
    case 6: 
#line 3118 
    ;
    
#line 3119 
    dw = (unsigned char)128U;
    
#line 3120 
    goto ldv_55460;
    case 7: 
#line 3121 
    ;
    
#line 3122 
    dw = (unsigned char)144U;
    
#line 3123 
    goto ldv_55460;
    default: 
#line 3124 
    ;
    
#line 3125 
    netdev_err((struct net_device const *)netdev,"Invalid data-width %x\n",(int)dw);
    
#line 3126 
    goto out;
  }
  ldv_55460: 
#line 3129 
  ;
  
#line 3129 
  dimm.size = (unsigned int)((((((1 << (int)rows) << (int)cols) * (int)dw) * (int)banks) * (int)ranks) / 8);
  
#line 3131 
  dimm.size /= 1048576U;
  out: 
#line 3132 
  ;
  
#line 3133 
  memcpy((void *)buf,(void const *)(& dimm),8UL);
  
#line 3134 
  __retres = 8L;
  return_label: 
#line 3134 
                return __retres;
}


#line 3138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct bin_attribute bin_attr_dimm = {.attr = {.name = "dimm", .mode = (unsigned short)420U, .ignore_lockdep = (_Bool)0, .key = (struct lock_class_key *)0, .skey = {.subkeys = {{.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}, {.__one_byte = (char)0}}}}, .size = 8UL, .private = (void *)0, .read = & netxen_sysfs_read_dimm, .write = (ssize_t (*)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ))0, .mmap = (int (*)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *))0};

#line 3146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_create_sysfs_entries(struct netxen_adapter *adapter)
{
  
#line 3148 
  struct device *dev = & (adapter->pdev)->dev;
  
#line 3150 
  if ((adapter->capabilities & 256U) != 0U) {
    int tmp;
    
#line 3152 
    tmp = ldv_device_create_file_82(dev,(struct device_attribute const *)(& dev_attr_bridged_mode));
    
#line 3152 
    if (tmp != 0) 
#line 3153 
                  dev_warn((struct device const *)dev,"failed to create bridged_mode sysfs entry\n"); else ;
  }
  else ;
  
#line 3155 
  return;
}


#line 3160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_remove_sysfs_entries(struct netxen_adapter *adapter)
{
  
#line 3162 
  struct device *dev = & (adapter->pdev)->dev;
  
#line 3164 
  if ((adapter->capabilities & 256U) != 0U) 
#line 3165 
                                            ldv_device_remove_file_83(dev,(struct device_attribute const *)(& dev_attr_bridged_mode)); else ;
  
#line 3166 
  return;
}


#line 3169  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_create_diag_entries(struct netxen_adapter *adapter)
{
  struct device *dev;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 3171 
  struct pci_dev *pdev = adapter->pdev;
  
#line 3174 
  dev = & pdev->dev;
  
#line 3175 
  tmp = ldv_device_create_file_84(dev,(struct device_attribute const *)(& dev_attr_diag_mode));
  
#line 3175 
  if (tmp != 0) 
#line 3176 
                _dev_info((struct device const *)dev,"failed to create diag_mode sysfs entry\n"); else ;
  
#line 3177 
  tmp_0 = device_create_bin_file(dev,(struct bin_attribute const *)(& bin_attr_crb));
  
#line 3177 
  if (tmp_0 != 0) 
#line 3178 
                  _dev_info((struct device const *)dev,"failed to create crb sysfs entry\n"); else ;
  
#line 3179 
  tmp_1 = device_create_bin_file(dev,(struct bin_attribute const *)(& bin_attr_mem));
  
#line 3179 
  if (tmp_1 != 0) 
#line 3180 
                  _dev_info((struct device const *)dev,"failed to create mem sysfs entry\n"); else ;
  
#line 3181 
  tmp_2 = device_create_bin_file(dev,(struct bin_attribute const *)(& bin_attr_dimm));
  
#line 3181 
  if (tmp_2 != 0) 
#line 3182 
                  _dev_info((struct device const *)dev,"failed to create dimm sysfs entry\n"); else ;
  
#line 3183 
  return;
}


#line 3187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_remove_diag_entries(struct netxen_adapter *adapter)
{
  
#line 3189 
  struct pci_dev *pdev = adapter->pdev;
  
#line 3190 
  struct device *dev = & pdev->dev;
  
#line 3192 
  ldv_device_remove_file_85(dev,(struct device_attribute const *)(& dev_attr_diag_mode));
  
#line 3193 
  device_remove_bin_file(dev,(struct bin_attribute const *)(& bin_attr_crb));
  
#line 3194 
  device_remove_bin_file(dev,(struct bin_attribute const *)(& bin_attr_mem));
  
#line 3195 
  device_remove_bin_file(dev,(struct bin_attribute const *)(& bin_attr_dimm));
  
#line 3196 
  return;
}


#line 3203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_destip_supported(struct netxen_adapter *adapter)
{
  int __retres;
  
#line 3205 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 3206 
    __retres = 0;
    
#line 3206 
    goto return_label;
  }
  else ;
  
#line 3208 
  if ((unsigned int)adapter->ahw.cut_through != 0U) {
    
#line 3209 
    __retres = 0;
    
#line 3209 
    goto return_label;
  }
  else ;
  
#line 3211 
  __retres = 1;
  return_label: 
#line 3211 
                return __retres;
}


#line 3215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_free_ip_list(struct netxen_adapter *adapter, bool master)
{
  struct nx_ip_list *cur;
  struct nx_ip_list *tmp_cur;
  struct nx_ip_list *tmp;
  struct nx_ip_list *tmp_0;
  struct nx_ip_list *tmp_1;
  {
    
#line 3219 
    struct list_head const *__mptr = (struct list_head const *)adapter->ip_list.next;
    
#line 3219 
    tmp = (struct nx_ip_list *)__mptr;
  }
  
#line 3219 
  cur = tmp;
  {
    
#line 3219 
    struct list_head const *__mptr_0 = (struct list_head const *)cur->list.next;
    
#line 3219 
    tmp_0 = (struct nx_ip_list *)__mptr_0;
  }
  
#line 3220 
  tmp_cur = tmp_0;
  
#line 3219 
  goto ldv_55504;
  ldv_55503: 
#line 3220 
  ;
  
#line 3220 
  if ((int)master != 0) {
    
#line 3221 
    if ((int)cur->master != 0) {
      
#line 3222 
      netxen_config_ipaddr(adapter,cur->ip_addr,3);
      
#line 3224 
      list_del(& cur->list);
      
#line 3225 
      kfree((void const *)cur);
    }
    else ;
  }
  else {
    
#line 3228 
    netxen_config_ipaddr(adapter,cur->ip_addr,3);
    
#line 3229 
    list_del(& cur->list);
    
#line 3230 
    kfree((void const *)cur);
  }
  
#line 3219 
  cur = tmp_cur;
  {
    
#line 3219 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_cur->list.next;
    
#line 3219 
    tmp_1 = (struct nx_ip_list *)__mptr_1;
  }
  
#line 3219 
  tmp_cur = tmp_1;
  ldv_55504: 
#line 3221 
  ;
  
#line 3219 
  if (& cur->list != & adapter->ip_list) 
#line 3221 
                                         goto ldv_55503; else 
#line 3224 
                                                              goto ldv_55505;
  ldv_55505: 
#line 3225 
  ;
  
#line 3226 
  return;
}


#line 3236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static bool netxen_list_config_ip(struct netxen_adapter *adapter, struct in_ifaddr *ifa, unsigned long event)
{
  struct net_device *dev;
  struct nx_ip_list *cur;
  struct nx_ip_list *tmp_cur;
  struct list_head *head;
  
#line 3242 
  bool ret = (_Bool)0;
  
#line 3244 
  if (ifa->ifa_dev != (struct in_device *)0) 
#line 3244 
                                             dev = (ifa->ifa_dev)->dev; else 
                                                                    
#line 3244 
                                                                    dev = (struct net_device *)0;
  
#line 3246 
  if (dev == (struct net_device *)0) 
#line 3247 
                                     goto out; else ;
  
#line 3249 
  switch (event) {
    struct nx_ip_list *tmp;
    bool tmp_1;
    struct nx_ip_list *tmp_2;
    struct nx_ip_list *tmp_3;
    struct nx_ip_list *tmp_4;
    case (unsigned long)2: 
#line 3250 
    ;
    
#line 3251 
    head = adapter->ip_list.next;
    
#line 3251 
    goto ldv_55521;
    ldv_55520: 
#line 3252 
    ;
    {
      
#line 3252 
      struct list_head const *__mptr = (struct list_head const *)head;
      
#line 3252 
      tmp = (struct nx_ip_list *)__mptr;
    }
    
#line 3252 
    cur = tmp;
    
#line 3254 
    if (cur->ip_addr == ifa->ifa_address) 
#line 3255 
                                          goto out; else ;
    
#line 3251 
    head = head->next;
    ldv_55521: 
#line 3252 
    ;
    
#line 3251 
    if (& adapter->ip_list != head) 
#line 3253 
                                    goto ldv_55520; else 
#line 3256 
                                                         goto ldv_55522;
    ldv_55522: 
#line 3257 
    ;
    
#line 3258 
    cur = (struct nx_ip_list *)kzalloc_1(24UL,32U);
    
#line 3259 
    if (cur == (struct nx_ip_list *)0) 
#line 3260 
                                       goto out; else ;
    
#line 3261 
    if ((dev->priv_flags & 1U) != 0U) 
#line 3262 
                                      dev = vlan_dev_real_dev((struct net_device const *)dev); else ;
    
#line 3263 
    tmp_1 = netif_is_bond_master(dev);
    
#line 3263 
    cur->master = (_Bool)((int)tmp_1 != 0);
    
#line 3264 
    cur->ip_addr = ifa->ifa_address;
    
#line 3265 
    list_add_tail(& cur->list,& adapter->ip_list);
    
#line 3266 
    netxen_config_ipaddr(adapter,ifa->ifa_address,2);
    
#line 3267 
    ret = (_Bool)1;
    
#line 3268 
    goto ldv_55523;
    case (unsigned long)3: 
#line 3269 
    ;
    {
      
#line 3270 
      struct list_head const *__mptr_0 = (struct list_head const *)adapter->ip_list.next;
      
#line 3270 
      tmp_2 = (struct nx_ip_list *)__mptr_0;
    }
    
#line 3270 
    cur = tmp_2;
    {
      
#line 3270 
      struct list_head const *__mptr_1 = (struct list_head const *)cur->list.next;
      
#line 3270 
      tmp_3 = (struct nx_ip_list *)__mptr_1;
    }
    
#line 3271 
    tmp_cur = tmp_3;
    
#line 3270 
    goto ldv_55533;
    ldv_55532: 
#line 3271 
    ;
    
#line 3272 
    if (cur->ip_addr == ifa->ifa_address) {
      
#line 3273 
      list_del(& cur->list);
      
#line 3274 
      kfree((void const *)cur);
      
#line 3275 
      netxen_config_ipaddr(adapter,ifa->ifa_address,3);
      
#line 3277 
      ret = (_Bool)1;
      
#line 3278 
      goto ldv_55531;
    }
    else ;
    
#line 3270 
    cur = tmp_cur;
    {
      
#line 3270 
      struct list_head const *__mptr_2 = (struct list_head const *)tmp_cur->list.next;
      
#line 3270 
      tmp_4 = (struct nx_ip_list *)__mptr_2;
    }
    
#line 3270 
    tmp_cur = tmp_4;
    ldv_55533: 
#line 3272 
    ;
    
#line 3270 
    if (& cur->list != & adapter->ip_list) 
#line 3272 
                                           goto ldv_55532; else 
#line 3275 
                                                                goto ldv_55531;
    ldv_55531: 
#line 3276 
    ;
  }
  ldv_55523: 
#line 3282 
  ;
  out: 
#line 3282 
  ;
  
#line 3283 
  return ret;
}


#line 3287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_config_indev_addr(struct netxen_adapter *adapter, struct net_device *dev, unsigned long event)
{
  struct in_device *indev;
  int tmp;
  
#line 3292 
  tmp = netxen_destip_supported(adapter);
  
#line 3292 
  if (tmp == 0) 
#line 3293 
                goto return_label; else ;
  
#line 3295 
  indev = in_dev_get((struct net_device const *)dev);
  
#line 3296 
  if (indev == (struct in_device *)0) 
#line 3297 
                                      goto return_label; else ;
  {
    struct in_ifaddr *ifa;
    
#line 3299 
    ifa = indev->ifa_list;
    
#line 3299 
    goto ldv_55546;
    ldv_55545: 
#line 3300 
    ;
    
#line 3300 
    switch (event) {
      case (unsigned long)1: 
#line 3301 
      ;
      
#line 3302 
      netxen_list_config_ip(adapter,ifa,2UL);
      
#line 3303 
      goto ldv_55542;
      case (unsigned long)2: 
#line 3304 
      ;
      
#line 3305 
      netxen_list_config_ip(adapter,ifa,3UL);
      
#line 3306 
      goto ldv_55542;
      default: 
#line 3307 
      ;
      
#line 3308 
      goto ldv_55542;
    }
    ldv_55542: 
#line 3310 
    ;
    
#line 3299 
    ifa = ifa->ifa_next;
    ldv_55546: 
#line 3300 
    ;
    
#line 3299 
    if (ifa != (struct in_ifaddr *)0) 
#line 3301 
                                      goto ldv_55545; else 
#line 3304 
                                                           goto ldv_55547;
    ldv_55547: 
#line 3305 
    ;
  }
  
#line 3312 
  in_dev_put(indev);
  return_label: 
#line 3313 
                return;
}


#line 3316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_restore_indev_addr(struct net_device *netdev, unsigned long event)
{
  struct nx_ip_list *pos;
  struct nx_ip_list *tmp_pos;
  unsigned long ip_event;
  int tmp_0;
  struct nx_ip_list *tmp_1;
  struct nx_ip_list *tmp_2;
  struct nx_ip_list *tmp_3;
  
#line 3319 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 3323 
  if (event == 1UL) 
#line 3323 
                    tmp_0 = 2; else 
#line 3323 
                                    tmp_0 = 3;
  
#line 3323 
  ip_event = (unsigned long)tmp_0;
  
#line 3324 
  netxen_config_indev_addr(adapter,netdev,event);
  {
    
#line 3326 
    struct list_head const *__mptr = (struct list_head const *)adapter->ip_list.next;
    
#line 3326 
    tmp_1 = (struct nx_ip_list *)__mptr;
  }
  
#line 3326 
  pos = tmp_1;
  {
    
#line 3326 
    struct list_head const *__mptr_0 = (struct list_head const *)pos->list.next;
    
#line 3326 
    tmp_2 = (struct nx_ip_list *)__mptr_0;
  }
  
#line 3327 
  tmp_pos = tmp_2;
  
#line 3326 
  goto ldv_55563;
  ldv_55562: 
#line 3327 
  ;
  
#line 3327 
  netxen_config_ipaddr(adapter,pos->ip_addr,(int)ip_event);
  
#line 3326 
  pos = tmp_pos;
  {
    
#line 3326 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_pos->list.next;
    
#line 3326 
    tmp_3 = (struct nx_ip_list *)__mptr_1;
  }
  
#line 3326 
  tmp_pos = tmp_3;
  ldv_55563: 
#line 3328 
  ;
  
#line 3326 
  if (& pos->list != & adapter->ip_list) 
#line 3328 
                                         goto ldv_55562; else 
#line 3331 
                                                              goto ldv_55564;
  ldv_55564: 
#line 3332 
  ;
  
#line 3333 
  return;
}


#line 3332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
__inline static bool netxen_config_checkdev(struct net_device *dev)
{
  bool __retres;
  struct netxen_adapter *adapter;
  int tmp_0;
  
#line 3336 
  if (dev->netdev_ops != & netxen_netdev_ops) {
    
#line 3337 
    __retres = (_Bool)0;
    
#line 3337 
    goto return_label;
  }
  else ;
  
#line 3338 
  adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)dev);
  
#line 3339 
  if (adapter == (struct netxen_adapter *)0) {
    
#line 3340 
    __retres = (_Bool)0;
    
#line 3340 
    goto return_label;
  }
  else ;
  
#line 3341 
  tmp_0 = netxen_destip_supported(adapter);
  
#line 3341 
  if (tmp_0 == 0) {
    
#line 3342 
    __retres = (_Bool)0;
    
#line 3342 
    goto return_label;
  }
  else ;
  
#line 3343 
  if ((unsigned int)adapter->is_up != 777U) {
    
#line 3344 
    __retres = (_Bool)0;
    
#line 3344 
    goto return_label;
  }
  else ;
  
#line 3346 
  __retres = (_Bool)1;
  return_label: 
#line 3346 
                return __retres;
}


#line 3354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_config_master(struct net_device *dev, unsigned long event)
{
  struct net_device *master;
  struct net_device *slave;
  
#line 3357 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 3359 
  rcu_read_lock();
  
#line 3360 
  master = netdev_master_upper_dev_get_rcu(dev);
  
#line 3367 
  if (master != (struct net_device *)0) {
    bool tmp_15;
    
#line 3367 
    tmp_15 = netif_is_bond_master(master);
    
#line 3367 
    if ((int)tmp_15 != 0) {
      int tmp_17;
      bool tmp_16;
      
#line 3368 
      tmp_16 = netif_is_bond_slave(dev);
      
#line 3368 
      if (tmp_16) 
#line 3368 
                  tmp_17 = 0; else 
#line 3368 
                                   tmp_17 = 1;
      
#line 3368 
      if (tmp_17) {
        struct net_device *tmp_6;
        struct net_device *tmp_14;
        
#line 3369 
        netxen_config_indev_addr(adapter,master,event);
        {
          struct net_device *tmp_5;
          
#line 3370 
          struct list_head *__ptr = init_net.dev_base_head.next;
          {
            struct list_head *tmp_4;
            {
              struct list_head *tmp_1;
              {
                struct list_head *tmp_0;
                {
                  union __anonunion___u_1339 __u;
                  
#line 3370 
                  __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
                  
#line 3370 
                  tmp_0 = __u.__val;
                }
                
#line 3370 
                struct list_head *_________p1 = tmp_0;
                
#line 3370 
                tmp_1 = _________p1;
              }
              
#line 3370 
              struct list_head *________p1 = tmp_1;
              {
                bool __warned;
                int tmp_3;
                int tmp_2;
                
#line 3370 
                tmp_2 = debug_lockdep_rcu_enabled();
                
#line 3370 
                if (tmp_2 != 0) 
                  
#line 3370 
                  if (! __warned) 
#line 3370 
                                  tmp_3 = 1; else 
#line 3370 
                                                  tmp_3 = 0;
                else 
#line 3370 
                     tmp_3 = 0;
              }
              
#line 3370 
              tmp_4 = ________p1;
            }
            
#line 3370 
            struct list_head const *__mptr = (struct list_head const *)tmp_4;
            
#line 3370 
            tmp_5 = (struct net_device *)__mptr + 18446744073709551536U;
          }
          
#line 3370 
          tmp_6 = tmp_5;
        }
        
#line 3370 
        slave = tmp_6;
        
#line 3370 
        goto ldv_55605;
        ldv_55604: 
#line 3371 
        ;
        
#line 3371 
        if ((slave->priv_flags & 1U) != 0U) {
          struct net_device *tmp_7;
          
#line 3371 
          tmp_7 = vlan_dev_real_dev((struct net_device const *)slave);
          
#line 3371 
          ;
          
#line 3371 
          if (tmp_7 == master) 
#line 3373 
                               netxen_config_indev_addr(adapter,slave,event); else ;
        }
        else ;
        {
          struct net_device *tmp_13;
          
#line 3370 
          struct list_head *__ptr_0 = slave->dev_list.next;
          {
            struct list_head *tmp_12;
            {
              struct list_head *tmp_9;
              {
                struct list_head *tmp_8;
                {
                  union __anonunion___u_1341 __u_0;
                  
#line 3370 
                  __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
                  
#line 3370 
                  tmp_8 = __u_0.__val;
                }
                
#line 3370 
                struct list_head *_________p1_0 = tmp_8;
                
#line 3370 
                tmp_9 = _________p1_0;
              }
              
#line 3370 
              struct list_head *________p1_0 = tmp_9;
              {
                bool __warned_0;
                int tmp_11;
                int tmp_10;
                
#line 3370 
                tmp_10 = debug_lockdep_rcu_enabled();
                
#line 3370 
                if (tmp_10 != 0) 
                  
#line 3370 
                  if (! __warned_0) 
#line 3370 
                                    tmp_11 = 1; else 
#line 3370 
                                                     tmp_11 = 0;
                else 
#line 3370 
                     tmp_11 = 0;
              }
              
#line 3370 
              tmp_12 = ________p1_0;
            }
            
#line 3370 
            struct list_head const *__mptr_0 = (struct list_head const *)tmp_12;
            
#line 3370 
            tmp_13 = (struct net_device *)__mptr_0 + 18446744073709551536U;
          }
          
#line 3370 
          tmp_14 = tmp_13;
        }
        
#line 3370 
        slave = tmp_14;
        ldv_55605: 
#line 3373 
        ;
        
#line 3370 
        if (& slave->dev_list != & init_net.dev_base_head) 
#line 3372 
                                                           goto ldv_55604; else 
                                                                    
#line 3375 
                                                                    goto ldv_55606;
        ldv_55606: 
#line 3376 
        ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 3375 
  rcu_read_unlock();
  
#line 3381 
  if (master == (struct net_device *)0 && (dev->priv_flags & 32U) != 0U) 
    
#line 3382 
    netxen_free_ip_list(adapter,(_Bool)1); else ;
  
#line 3383 
  return;
}


#line 3385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_netdev_event(struct notifier_block *this, unsigned long event, void *ptr)
{
  int __retres;
  struct netxen_adapter *adapter;
  struct net_device *slave;
  
#line 3389 
  struct net_device *dev = netdev_notifier_info_to_dev((struct netdev_notifier_info const *)ptr);
  
#line 3390 
  struct net_device *orig_dev = dev;
  recheck: 
#line 3393 
  ;
  
#line 3394 
  if (dev == (struct net_device *)0) 
#line 3395 
                                     goto done; else ;
  
#line 3397 
  if ((dev->priv_flags & 1U) != 0U) {
    
#line 3398 
    dev = vlan_dev_real_dev((struct net_device const *)dev);
    
#line 3399 
    goto recheck;
  }
  else ;
  
#line 3401 
  if (event + 18446744073709551615UL <= 1UL) {
    bool tmp_21;
    
#line 3403 
    tmp_21 = netif_is_bond_master(dev);
    
#line 3403 
    if ((int)tmp_21 != 0) {
      struct net_device *tmp_6;
      struct net_device *tmp_10;
      struct net_device *tmp_17;
      
#line 3404 
      rcu_read_lock();
      {
        struct net_device *tmp_5;
        
#line 3405 
        struct list_head *__ptr = init_net.dev_base_head.next;
        {
          struct list_head *tmp_4;
          {
            struct list_head *tmp_1;
            {
              struct list_head *tmp_0;
              {
                union __anonunion___u_1343 __u;
                
#line 3405 
                __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
                
#line 3405 
                tmp_0 = __u.__val;
              }
              
#line 3405 
              struct list_head *_________p1 = tmp_0;
              
#line 3405 
              tmp_1 = _________p1;
            }
            
#line 3405 
            struct list_head *________p1 = tmp_1;
            {
              bool __warned;
              int tmp_3;
              int tmp_2;
              
#line 3405 
              tmp_2 = debug_lockdep_rcu_enabled();
              
#line 3405 
              if (tmp_2 != 0) 
                
#line 3405 
                if (! __warned) 
#line 3405 
                                tmp_3 = 1; else 
#line 3405 
                                                tmp_3 = 0;
              else 
#line 3405 
                   tmp_3 = 0;
            }
            
#line 3405 
            tmp_4 = ________p1;
          }
          
#line 3405 
          struct list_head const *__mptr = (struct list_head const *)tmp_4;
          
#line 3405 
          tmp_5 = (struct net_device *)__mptr + 18446744073709551536U;
        }
        
#line 3405 
        tmp_6 = tmp_5;
      }
      
#line 3405 
      slave = tmp_6;
      
#line 3405 
      goto ldv_55648;
      ldv_55647: 
#line 3406 
      ;
      
#line 3405 
      tmp_10 = netdev_master_upper_dev_get_rcu(slave);
      
#line 3405 
      ;
      
#line 3405 
      if (tmp_10 == dev) {
        int tmp_8;
        bool tmp_7;
        
#line 3406 
        tmp_7 = netxen_config_checkdev(slave);
        
#line 3406 
        if (tmp_7) 
#line 3406 
                   tmp_8 = 0; else 
#line 3406 
                                   tmp_8 = 1;
        
#line 3406 
        if (tmp_8) 
#line 3407 
                   goto ldv_55646; else ;
        
#line 3408 
        adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)slave);
        
#line 3409 
        netxen_config_indev_addr(adapter,orig_dev,event);
      }
      else ;
      ldv_55646: 
#line 3411 
      ;
      {
        struct net_device *tmp_16;
        
#line 3405 
        struct list_head *__ptr_0 = slave->dev_list.next;
        {
          struct list_head *tmp_15;
          {
            struct list_head *tmp_12;
            {
              struct list_head *tmp_11;
              {
                union __anonunion___u_1345 __u_0;
                
#line 3405 
                __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
                
#line 3405 
                tmp_11 = __u_0.__val;
              }
              
#line 3405 
              struct list_head *_________p1_0 = tmp_11;
              
#line 3405 
              tmp_12 = _________p1_0;
            }
            
#line 3405 
            struct list_head *________p1_0 = tmp_12;
            {
              bool __warned_0;
              int tmp_14;
              int tmp_13;
              
#line 3405 
              tmp_13 = debug_lockdep_rcu_enabled();
              
#line 3405 
              if (tmp_13 != 0) 
                
#line 3405 
                if (! __warned_0) 
#line 3405 
                                  tmp_14 = 1; else 
#line 3405 
                                                   tmp_14 = 0;
              else 
#line 3405 
                   tmp_14 = 0;
            }
            
#line 3405 
            tmp_15 = ________p1_0;
          }
          
#line 3405 
          struct list_head const *__mptr_0 = (struct list_head const *)tmp_15;
          
#line 3405 
          tmp_16 = (struct net_device *)__mptr_0 + 18446744073709551536U;
        }
        
#line 3405 
        tmp_17 = tmp_16;
      }
      
#line 3405 
      slave = tmp_17;
      ldv_55648: 
#line 3408 
      ;
      
#line 3405 
      if (& slave->dev_list != & init_net.dev_base_head) 
#line 3407 
                                                         goto ldv_55647; else 
                                                                    
#line 3410 
                                                                    goto ldv_55649;
      ldv_55649: 
#line 3411 
      ;
      
#line 3412 
      rcu_read_unlock();
    }
    else {
      int tmp_19;
      bool tmp_18;
      
#line 3414 
      tmp_18 = netxen_config_checkdev(dev);
      
#line 3414 
      if (tmp_18) 
#line 3414 
                  tmp_19 = 0; else 
#line 3414 
                                   tmp_19 = 1;
      
#line 3414 
      if (tmp_19) 
#line 3415 
                  goto done; else ;
      
#line 3416 
      adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)dev);
      
#line 3418 
      if (orig_dev == dev) 
#line 3419 
                           netxen_config_master(dev,event); else ;
      
#line 3420 
      netxen_config_indev_addr(adapter,orig_dev,event);
    }
  }
  else ;
  done: 
#line 3423 
  ;
  
#line 3424 
  __retres = 0;
  
#line 3424 
  return __retres;
}


#line 3428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_inetaddr_event(struct notifier_block *this, unsigned long event, void *ptr)
{
  int __retres;
  struct netxen_adapter *adapter;
  struct net_device *dev;
  struct net_device *slave;
  unsigned long ip_event;
  int tmp;
  
#line 3433 
  struct in_ifaddr *ifa = (struct in_ifaddr *)ptr;
  
#line 3436 
  if (ifa->ifa_dev != (struct in_device *)0) 
#line 3436 
                                             dev = (ifa->ifa_dev)->dev; else 
                                                                    
#line 3436 
                                                                    dev = (struct net_device *)0;
  
#line 3437 
  if (event == 1UL) 
#line 3437 
                    tmp = 2; else 
#line 3437 
                                  tmp = 3;
  
#line 3437 
  ip_event = (unsigned long)tmp;
  recheck: 
#line 3438 
  ;
  
#line 3439 
  if (dev == (struct net_device *)0) 
#line 3440 
                                     goto done; else ;
  
#line 3442 
  if ((dev->priv_flags & 1U) != 0U) {
    
#line 3443 
    dev = vlan_dev_real_dev((struct net_device const *)dev);
    
#line 3444 
    goto recheck;
  }
  else ;
  
#line 3446 
  if (event + 18446744073709551615UL <= 1UL) {
    bool tmp_21;
    
#line 3448 
    tmp_21 = netif_is_bond_master(dev);
    
#line 3448 
    if ((int)tmp_21 != 0) {
      struct net_device *tmp_6;
      struct net_device *tmp_10;
      struct net_device *tmp_17;
      
#line 3449 
      rcu_read_lock();
      {
        struct net_device *tmp_5;
        
#line 3450 
        struct list_head *__ptr = init_net.dev_base_head.next;
        {
          struct list_head *tmp_4;
          {
            struct list_head *tmp_1;
            {
              struct list_head *tmp_0;
              {
                union __anonunion___u_1347 __u;
                
#line 3450 
                __read_once_size((void const volatile *)(& __ptr),(void *)(& __u.__c),8);
                
#line 3450 
                tmp_0 = __u.__val;
              }
              
#line 3450 
              struct list_head *_________p1 = tmp_0;
              
#line 3450 
              tmp_1 = _________p1;
            }
            
#line 3450 
            struct list_head *________p1 = tmp_1;
            {
              bool __warned;
              int tmp_3;
              int tmp_2;
              
#line 3450 
              tmp_2 = debug_lockdep_rcu_enabled();
              
#line 3450 
              if (tmp_2 != 0) 
                
#line 3450 
                if (! __warned) 
#line 3450 
                                tmp_3 = 1; else 
#line 3450 
                                                tmp_3 = 0;
              else 
#line 3450 
                   tmp_3 = 0;
            }
            
#line 3450 
            tmp_4 = ________p1;
          }
          
#line 3450 
          struct list_head const *__mptr = (struct list_head const *)tmp_4;
          
#line 3450 
          tmp_5 = (struct net_device *)__mptr + 18446744073709551536U;
        }
        
#line 3450 
        tmp_6 = tmp_5;
      }
      
#line 3450 
      slave = tmp_6;
      
#line 3450 
      goto ldv_55692;
      ldv_55691: 
#line 3451 
      ;
      
#line 3450 
      tmp_10 = netdev_master_upper_dev_get_rcu(slave);
      
#line 3450 
      ;
      
#line 3450 
      if (tmp_10 == dev) {
        int tmp_8;
        bool tmp_7;
        
#line 3451 
        tmp_7 = netxen_config_checkdev(slave);
        
#line 3451 
        if (tmp_7) 
#line 3451 
                   tmp_8 = 0; else 
#line 3451 
                                   tmp_8 = 1;
        
#line 3451 
        if (tmp_8) 
#line 3452 
                   goto ldv_55690; else ;
        
#line 3453 
        adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)slave);
        
#line 3454 
        netxen_list_config_ip(adapter,ifa,ip_event);
      }
      else ;
      ldv_55690: 
#line 3456 
      ;
      {
        struct net_device *tmp_16;
        
#line 3450 
        struct list_head *__ptr_0 = slave->dev_list.next;
        {
          struct list_head *tmp_15;
          {
            struct list_head *tmp_12;
            {
              struct list_head *tmp_11;
              {
                union __anonunion___u_1349 __u_0;
                
#line 3450 
                __read_once_size((void const volatile *)(& __ptr_0),(void *)(& __u_0.__c),8);
                
#line 3450 
                tmp_11 = __u_0.__val;
              }
              
#line 3450 
              struct list_head *_________p1_0 = tmp_11;
              
#line 3450 
              tmp_12 = _________p1_0;
            }
            
#line 3450 
            struct list_head *________p1_0 = tmp_12;
            {
              bool __warned_0;
              int tmp_14;
              int tmp_13;
              
#line 3450 
              tmp_13 = debug_lockdep_rcu_enabled();
              
#line 3450 
              if (tmp_13 != 0) 
                
#line 3450 
                if (! __warned_0) 
#line 3450 
                                  tmp_14 = 1; else 
#line 3450 
                                                   tmp_14 = 0;
              else 
#line 3450 
                   tmp_14 = 0;
            }
            
#line 3450 
            tmp_15 = ________p1_0;
          }
          
#line 3450 
          struct list_head const *__mptr_0 = (struct list_head const *)tmp_15;
          
#line 3450 
          tmp_16 = (struct net_device *)__mptr_0 + 18446744073709551536U;
        }
        
#line 3450 
        tmp_17 = tmp_16;
      }
      
#line 3450 
      slave = tmp_17;
      ldv_55692: 
#line 3453 
      ;
      
#line 3450 
      if (& slave->dev_list != & init_net.dev_base_head) 
#line 3452 
                                                         goto ldv_55691; else 
                                                                    
#line 3455 
                                                                    goto ldv_55693;
      ldv_55693: 
#line 3456 
      ;
      
#line 3456 
      rcu_read_unlock();
    }
    else {
      int tmp_19;
      bool tmp_18;
      
#line 3458 
      tmp_18 = netxen_config_checkdev(dev);
      
#line 3458 
      if (tmp_18) 
#line 3458 
                  tmp_19 = 0; else 
#line 3458 
                                   tmp_19 = 1;
      
#line 3458 
      if (tmp_19) 
#line 3459 
                  goto done; else ;
      
#line 3460 
      adapter = (struct netxen_adapter *)netdev_priv((struct net_device const *)dev);
      
#line 3461 
      netxen_list_config_ip(adapter,ifa,ip_event);
    }
  }
  else ;
  done: 
#line 3464 
  ;
  
#line 3465 
  __retres = 0;
  
#line 3465 
  return __retres;
}


#line 3468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct notifier_block netxen_netdev_cb = {.notifier_call = & netxen_netdev_event, .next = (struct notifier_block *)0, .priority = 0};

#line 3472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct notifier_block netxen_inetaddr_cb = {.notifier_call = & netxen_inetaddr_event, .next = (struct notifier_block *)0, .priority = 0};

#line 3484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct pci_error_handlers const netxen_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& netxen_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & netxen_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & netxen_io_resume};

#line 3490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static struct pci_driver netxen_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& netxen_nic_driver_name), .id_table = (struct pci_device_id const *)(& netxen_pci_tbl), .probe = & netxen_nic_probe, .remove = & netxen_nic_remove, .suspend = & netxen_nic_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & netxen_nic_resume, .shutdown = & netxen_nic_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & netxen_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static int netxen_init_module(void)
{
  int tmp;
  
#line 3505 
  printk("\001",(char *)(& netxen_nic_driver_string));
  
#line 3508 
  register_netdevice_notifier(& netxen_netdev_cb);
  
#line 3509 
  register_inetaddr_notifier(& netxen_inetaddr_cb);
  
#line 3511 
  tmp = ldv___pci_register_driver_86(& netxen_driver,& __this_module,"netxen_nic");
  
#line 3511 
  return tmp;
}


#line 3516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_main.c"
static void netxen_exit_module(void)
{
  
#line 3518 
  ldv_pci_unregister_driver_87(& netxen_driver);
  
#line 3521 
  unregister_inetaddr_notifier(& netxen_inetaddr_cb);
  
#line 3522 
  unregister_netdevice_notifier(& netxen_netdev_cb);
  
#line 3523 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
struct pci_driver *ldv_emg_alias_netxen_driver_2 = & netxen_driver;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int (*ldv_emg_alias_eth_validate_addr_9)(struct net_device *) = & eth_validate_addr;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
struct device_attribute *ldv_emg_alias_dev_attr_diag_mode_3 = & dev_attr_diag_mode;

#line 59  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
struct device_attribute *ldv_emg_alias_dev_attr_bridged_mode_3 = & dev_attr_bridged_mode;

#line 62 
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1);


#line 63 
void ldv_emg_device_remove_file(struct device *arg0, struct device_attribute *arg1);


#line 64 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 65 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 66 
int ldv_emg_device_create_file(struct device *arg0, struct device_attribute *arg1);


#line 67 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 68 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 69 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 70 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 72 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 73 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_emg_wrapper_netxen_set_multicast_list_5(struct net_device *arg0)
{
  
#line 78 
  netxen_set_multicast_list(arg0);
  
#line 79 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
unsigned long long ldv_emg_wrapper_netxen_fix_features_13(struct net_device *arg0, unsigned long long arg1)
{
  unsigned long long tmp;
  
#line 83 
  tmp = netxen_fix_features(arg0,arg1);
  
#line 83 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
long ldv_emg_wrapper_netxen_show_bridged_mode_2(struct device *arg0, struct device_attribute *arg1, char *arg2)
{
  long tmp;
  
#line 88 
  tmp = netxen_show_bridged_mode(arg0,arg1,arg2);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_emg_wrapper_netxen_tx_timeout_18(struct net_device *arg0)
{
  
#line 93 
  netxen_tx_timeout(arg0);
  
#line 94 
  return;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
struct rtnl_link_stats64 *ldv_emg_wrapper_netxen_nic_get_stats_6(struct net_device *arg0, struct rtnl_link_stats64 *arg1)
{
  struct rtnl_link_stats64 *tmp;
  
#line 98 
  tmp = netxen_nic_get_stats(arg0,arg1);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
enum netdev_tx ldv_emg_wrapper_netxen_nic_xmit_frame_15(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 103 
  tmp = netxen_nic_xmit_frame(arg0,arg1);
  
#line 103 
  return tmp;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_netxen_init_module(void)
{
  int tmp;
  
#line 108 
  tmp = netxen_init_module();
  
#line 108 
  return tmp;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_nic_set_mac_16(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 112 
  tmp = netxen_nic_set_mac(arg0,arg1);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_nic_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 117 
  tmp = netxen_nic_close(arg0);
  
#line 117 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_nic_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 122 
  tmp = netxen_nic_open(arg0);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_nic_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 127 
  tmp = netxen_nic_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
long ldv_emg_wrapper_netxen_store_bridged_mode_4(struct device *arg0, struct device_attribute *arg1, char *arg2, unsigned long arg3)
{
  long tmp;
  
#line 132 
  tmp = netxen_store_bridged_mode(arg0,arg1,(char const *)arg2,arg3);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_nic_resume_6(struct pci_dev *arg0)
{
  int tmp;
  
#line 137 
  tmp = netxen_nic_resume(arg0);
  
#line 137 
  return tmp;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_set_features_11(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 142 
  tmp = netxen_set_features(arg0,arg1);
  
#line 142 
  return tmp;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_emg_netxen_exit_module(void)
{
  
#line 147 
  netxen_exit_module();
  
#line 148 
  return;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_emg_wrapper_netxen_nic_shutdown_2(struct pci_dev *arg0)
{
  
#line 151 
  netxen_nic_shutdown(arg0);
  
#line 152 
  return;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_emg_wrapper_netxen_nic_poll_controller_32(struct net_device *arg0)
{
  
#line 156 
  netxen_nic_poll_controller(arg0);
  
#line 157 
  return;
}


#line 160  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
int ldv_emg_wrapper_netxen_nic_suspend_4(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 161 
  tmp = netxen_nic_suspend(arg0,arg1);
  
#line 161 
  return tmp;
}


#line 165  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
void ldv_emg_wrapper_netxen_nic_remove_5(struct pci_dev *arg0)
{
  
#line 166 
  netxen_nic_remove(arg0);
  
#line 167 
  return;
}


#line 170  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
long ldv_emg_wrapper_netxen_show_diag_mode_2(struct device *arg0, struct device_attribute *arg1, char *arg2)
{
  long tmp;
  
#line 171 
  tmp = netxen_show_diag_mode(arg0,arg1,arg2);
  
#line 171 
  return tmp;
}


#line 175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
long ldv_emg_wrapper_netxen_store_diag_mode_4(struct device *arg0, struct device_attribute *arg1, char *arg2, unsigned long arg3)
{
  long tmp;
  
#line 176 
  tmp = netxen_store_diag_mode(arg0,arg1,(char const *)arg2,arg3);
  
#line 176 
  return tmp;
}


#line 234  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 237 
  ldv_atomic_inc(v);
  
#line 238 
  return;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static int atomic_dec_and_test(atomic_t *v)
{
  int tmp;
  
#line 251 
  tmp = ldv_atomic_dec_and_test(v);
  
#line 251 
  return tmp;
}


#line 534  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void *kzalloc_1(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 537 
  tmp = ldv_kzalloc(size,flags);
  
#line 537 
  return tmp;
}


#line 718  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_spin_lock_60(spinlock_t *lock)
{
  
#line 722 
  ldv_spin_model_lock((char *)"_xmit_lock_of_netdev_queue");
  
#line 724 
  spin_lock_1(lock);
  
#line 725 
  return;
}


#line 761  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_spin_unlock_63(spinlock_t *lock)
{
  
#line 765 
  ldv_spin_model_unlock((char *)"_xmit_lock_of_netdev_queue");
  
#line 767 
  spin_unlock_1(lock);
  
#line 768 
  return;
}


#line 861  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static int ldv_request_irq_73(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 865 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 865 
  return tmp;
}


#line 869  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_free_irq_74(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 873 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 874 
  return;
}


#line 877  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static int ldv_register_netdev_75(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 881 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 881 
  return tmp;
}


#line 885  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_76(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 889 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 889 
  return tmp;
}


#line 893  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_free_netdev_77(struct net_device *ldv_func_arg1)
{
  
#line 897 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 898 
  return;
}


#line 901  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_unregister_netdev_78(struct net_device *ldv_func_arg1)
{
  
#line 905 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 906 
  return;
}


#line 909  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_free_netdev_79(struct net_device *ldv_func_arg1)
{
  
#line 913 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 914 
  return;
}


#line 917  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static bool ldv_schedule_work_80(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 921 
  tmp = ldv_emg_schedule_work(work);
  
#line 921 
  __retres = tmp != 0;
  
#line 921 
  return __retres;
}


#line 925  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static bool ldv_schedule_delayed_work_81(struct delayed_work *dwork, unsigned long delay)
{
  bool __retres;
  bool tmp;
  
#line 929 
  tmp = ldv_emg_schedule_delayed_work(dwork,delay);
  
#line 929 
  __retres = tmp != 0;
  
#line 929 
  return __retres;
}


#line 933  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static int ldv_device_create_file_82(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2)
{
  int tmp;
  
#line 937 
  tmp = ldv_emg_device_create_file(ldv_func_arg1,(struct device_attribute *)ldv_func_arg2);
  
#line 937 
  return tmp;
}


#line 941  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_device_remove_file_83(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2)
{
  
#line 945 
  ldv_emg_device_remove_file(ldv_func_arg1,(struct device_attribute *)ldv_func_arg2);
  
#line 946 
  return;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static int ldv_device_create_file_84(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2)
{
  int tmp;
  
#line 953 
  tmp = ldv_emg_device_create_file(ldv_func_arg1,(struct device_attribute *)ldv_func_arg2);
  
#line 953 
  return tmp;
}


#line 957  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_device_remove_file_85(struct device *ldv_func_arg1, struct device_attribute const *ldv_func_arg2)
{
  
#line 961 
  ldv_emg_device_remove_file(ldv_func_arg1,(struct device_attribute *)ldv_func_arg2);
  
#line 962 
  return;
}


#line 965  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static int ldv___pci_register_driver_86(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 969 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 969 
  return tmp;
}


#line 973  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_main.c.aux"
static void ldv_pci_unregister_driver_87(struct pci_driver *ldv_func_arg1)
{
  
#line 977 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 978 
  return;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls(int x)
{
  int __retres;
  int r;
  
#line 440 
  ldv_inline_asm();
  
#line 464 
  __retres = r + 1;
  
#line 464 
  return __retres;
}


#line 479  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int fls64(__u64 x)
{
  int __retres;
  
#line 481 
  int bitpos = -1;
  
#line 482 
  ldv_inline_asm();
  
#line 490 
  __retres = bitpos + 1;
  
#line 490 
  return __retres;
}


#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitops.h"
__inline static unsigned int fls_long(unsigned long l)
{
  unsigned int __retres;
  int tmp_0;
  
#line 178 
  tmp_0 = fls64((unsigned long long)l);
  
#line 178 
  __retres = (unsigned int)tmp_0;
  
#line 178 
  return __retres;
}


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
int ____ilog2_NaN(void);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static int __ilog2_u32(u32 n)
{
  int __retres;
  int tmp;
  
#line 34 
  tmp = fls((int)n);
  
#line 34 
  __retres = tmp + -1;
  
#line 34 
  return __retres;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/log2.h"
__inline static unsigned long __roundup_pow_of_two(unsigned long n)
{
  unsigned long __retres;
  unsigned int tmp;
  
#line 63 
  tmp = fls_long(n + 18446744073709551615UL);
  
#line 63 
  __retres = 1UL << tmp;
  
#line 63 
  return __retres;
}


#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
int snprintf(char *, size_t, char const * , ...);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 1209  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic.h"
static u32 const FW_DUMP_LEVELS[7U] = {3U, 7U, 15U, 31U, 63U, 127U, 255U};

#line 1796 
int nx_fw_cmd_set_gbe_port(struct netxen_adapter *adapter, u32 speed, u32 duplex, u32 autoneg);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static struct netxen_nic_stats const netxen_nic_gstrings_stats[9U] = {{.stat_string = {(char)'x', (char)'m', (char)'i', (char)'t', (char)'_', (char)'c', (char)'a', (char)'l', (char)'l', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 408}, {.stat_string = {(char)'x', (char)'m', (char)'i', (char)'t', (char)'_', (char)'f', (char)'i', (char)'n', (char)'i', (char)'s', (char)'h', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 416}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 424}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 432}, {.stat_string = {(char)'c', (char)'s', (char)'u', (char)'m', (char)'m', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 440}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 448}, {.stat_string = {(char)'l', (char)'r', (char)'o', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 456}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 464}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 472}};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static char const netxen_nic_gstrings_test[2U][32U] = {{(char)'R', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)'_', (char)'T', (char)'e', (char)'s', (char)'t', (char)'_', (char)'o', (char)'n', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)'\000'}, {(char)'L', (char)'i', (char)'n', (char)'k', (char)'_', (char)'T', (char)'e', (char)'s', (char)'t', (char)'_', (char)'o', (char)'n', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)'\000'}};

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_get_eeprom_len(struct net_device *dev)
{
  int __retres;
  
#line 73 
  __retres = 4194304;
  
#line 73 
  return __retres;
}


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  int tmp_1;
  
#line 79 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 80 
  u32 fw_major = 0U;
  
#line 81 
  u32 fw_minor = 0U;
  
#line 82 
  u32 fw_build = 0U;
  
#line 84 
  strlcpy((char *)(& drvinfo->driver),(char const *)(& netxen_nic_driver_name),32UL);
  
#line 86 
  strlcpy((char *)(& drvinfo->version),"4.0.82",32UL);
  
#line 88 
  fw_major = (*(adapter->crb_read))(adapter,136323408UL);
  
#line 89 
  fw_minor = (*(adapter->crb_read))(adapter,136323412UL);
  
#line 90 
  fw_build = (*(adapter->crb_read))(adapter,136323416UL);
  
#line 91 
  snprintf((char *)(& drvinfo->fw_version),32UL,"%d.%d.%d",fw_major,fw_minor,fw_build);
  
#line 94 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 94 
  ;
  
#line 94 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 96 
  drvinfo->regdump_len = 120U;
  
#line 97 
  tmp_1 = netxen_nic_get_eeprom_len(dev);
  
#line 97 
  drvinfo->eedump_len = (unsigned int)tmp_1;
  
#line 98 
  return;
}


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_get_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
{
  int __retres;
  int tmp_6;
  bool tmp_5;
  
#line 103 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 104 
  int check_sfp_module = 0;
  
#line 107 
  if ((unsigned int)adapter->ahw.port_type == 1U) {
    
#line 108 
    ecmd->supported = 63U;
    
#line 115 
    ecmd->advertising = 60U;
    
#line 120 
    ecmd->port = (unsigned char)0U;
    
#line 122 
    ethtool_cmd_speed_set(ecmd,(unsigned int)adapter->link_speed);
    
#line 123 
    ecmd->duplex = (unsigned char)adapter->link_duplex;
    
#line 124 
    ecmd->autoneg = (unsigned char)adapter->link_autoneg;
  }
  else 
    
#line 126 
    if ((unsigned int)adapter->ahw.port_type == 2U) {
      u32 val;
      bool tmp_0;
      
#line 129 
      val = (*(adapter->crb_read))(adapter,136323108UL);
      
#line 130 
      if (val == 3U) {
        
#line 131 
        ecmd->supported = 32U;
        
#line 132 
        ecmd->advertising = 32U;
      }
      else {
        
#line 134 
        ecmd->supported = 4096U;
        
#line 135 
        ecmd->advertising = 4096U;
      }
      
#line 138 
      tmp_0 = netif_running((struct net_device const *)dev);
      
#line 138 
      if ((int)tmp_0 != 0) {
        
#line 138 
        if ((unsigned int)adapter->has_link_events != 0U) {
          
#line 139 
          ethtool_cmd_speed_set(ecmd,(unsigned int)adapter->link_speed);
          
#line 140 
          ecmd->autoneg = (unsigned char)adapter->link_autoneg;
          
#line 141 
          ecmd->duplex = (unsigned char)adapter->link_duplex;
          
#line 142 
          goto skip;
        }
        else ;
      }
      else ;
      
#line 145 
      ecmd->port = (unsigned char)0U;
      
#line 147 
      if ((unsigned int)adapter->ahw.revision_id > 47U) {
        
#line 148 
        u16 pcifn = (unsigned short)adapter->ahw.pci_func;
        
#line 150 
        val = (*(adapter->crb_read))(adapter,(unsigned long)((int)((unsigned int)pcifn / 4U) * 4) + 136323816UL);
        
#line 151 
        ethtool_cmd_speed_set(ecmd,((val >> ((int)pcifn & 3) * 8) & 255U) * 100U);
      }
      else 
#line 154 
           ethtool_cmd_speed_set(ecmd,10000U);
      
#line 156 
      ecmd->duplex = (unsigned char)1U;
      
#line 157 
      ecmd->autoneg = (unsigned char)0U;
    }
    else {
      
#line 159 
      __retres = -5;
      
#line 159 
      goto return_label;
    }
  skip: 
#line 161 
  ;
  
#line 162 
  ecmd->phy_address = adapter->physical_port;
  
#line 163 
  ecmd->transceiver = (unsigned char)1U;
  
#line 165 
  switch ((int)adapter->ahw.board_type) {
    int tmp_2;
    bool tmp_1;
    case 10: 
#line 166 
    ;
    case 12: 
#line 167 
    ;
    case 33: 
#line 168 
    ;
    case 36: 
#line 169 
    ;
    case 41: 
#line 170 
    ;
    
#line 172 
    ecmd->supported |= 64U;
    
#line 173 
    ecmd->advertising |= 64U;
    case 15: 
#line 174 
    ;
    case 49: 
#line 175 
    ;
    case 35: 
#line 176 
    ;
    case 39: 
#line 177 
    ;
    
#line 178 
    ecmd->supported |= 128U;
    
#line 179 
    ecmd->advertising |= 128U;
    
#line 180 
    ecmd->port = (unsigned char)0U;
    
#line 181 
    if ((unsigned int)adapter->ahw.board_type != 15U) 
#line 181 
                                                      ecmd->autoneg = (unsigned char)adapter->link_autoneg; else 
                                                                    
#line 181 
                                                                    ecmd->autoneg = (unsigned char)0U;
    
#line 184 
    goto ldv_52087;
    case 14: 
#line 185 
    ;
    case 13: 
#line 186 
    ;
    case 37: 
#line 187 
    ;
    case 40: 
#line 188 
    ;
    case 34: 
#line 189 
    ;
    
#line 190 
    ecmd->supported |= 512U;
    
#line 191 
    ecmd->advertising |= 512U;
    
#line 192 
    ecmd->port = (unsigned char)2U;
    
#line 193 
    ecmd->autoneg = (unsigned char)0U;
    
#line 194 
    goto ldv_52087;
    case 38: 
#line 195 
    ;
    case 42: 
#line 196 
    ;
    case 43: 
#line 197 
    ;
    
#line 198 
    ecmd->advertising |= 128U;
    
#line 199 
    ecmd->supported |= 128U;
    
#line 200 
    tmp_1 = netif_running((struct net_device const *)dev);
    
#line 200 
    if ((int)tmp_1 != 0) 
      
#line 200 
      if ((unsigned int)adapter->has_link_events != 0U) 
#line 200 
                                                        tmp_2 = 1; else 
                                                                    
#line 200 
                                                                    tmp_2 = 0;
    else 
#line 200 
         tmp_2 = 0;
    
#line 200 
    check_sfp_module = tmp_2;
    case 11: 
#line 202 
    ;
    case 50: 
#line 203 
    ;
    
#line 204 
    ecmd->supported |= 1024U;
    
#line 205 
    ecmd->advertising |= 1024U;
    
#line 206 
    ecmd->port = (unsigned char)3U;
    
#line 207 
    ecmd->autoneg = (unsigned char)0U;
    
#line 208 
    goto ldv_52087;
    case 128: 
#line 209 
    ;
    
#line 210 
    if ((unsigned int)adapter->ahw.port_type == 2U) {
      int tmp_4;
      bool tmp_3;
      
#line 211 
      ecmd->autoneg = (unsigned char)0U;
      
#line 212 
      ecmd->supported |= 1152U;
      
#line 213 
      ecmd->advertising |= 1152U;
      
#line 215 
      ecmd->port = (unsigned char)3U;
      
#line 216 
      tmp_3 = netif_running((struct net_device const *)dev);
      
#line 216 
      if ((int)tmp_3 != 0) 
        
#line 216 
        if ((unsigned int)adapter->has_link_events != 0U) 
#line 216 
                                                          tmp_4 = 1; else 
                                                                    
#line 216 
                                                                    tmp_4 = 0;
      else 
#line 216 
           tmp_4 = 0;
      
#line 216 
      check_sfp_module = tmp_4;
    }
    else {
      
#line 219 
      ecmd->supported |= 192U;
      
#line 220 
      ecmd->advertising |= 192U;
      
#line 222 
      ecmd->port = (unsigned char)0U;
    }
    
#line 224 
    goto ldv_52087;
    default: 
#line 225 
    ;
    
#line 226 
    printk("\001",(int)adapter->ahw.board_type);
    
#line 228 
    __retres = -5;
    
#line 228 
    goto return_label;
  }
  ldv_52087: 
#line 231 
  ;
  
#line 231 
  if (check_sfp_module != 0) {
    
#line 232 
    switch ((int)adapter->module_type) {
      case 2: 
#line 233 
      ;
      case 3: 
#line 234 
      ;
      case 4: 
#line 235 
      ;
      case 5: 
#line 236 
      ;
      
#line 237 
      ecmd->port = (unsigned char)3U;
      
#line 238 
      goto ldv_52104;
      case 6: 
#line 239 
      ;
      case 7: 
#line 240 
      ;
      case 8: 
#line 241 
      ;
      
#line 242 
      ecmd->port = (unsigned char)0U;
      
#line 243 
      goto ldv_52104;
      default: 
#line 244 
      ;
      
#line 245 
      ecmd->port = (unsigned char)255U;
    }
    ldv_52104: 
#line 247 
    ;
  }
  else ;
  
#line 249 
  tmp_5 = netif_running((struct net_device const *)dev);
  
#line 249 
  if (tmp_5) 
#line 249 
             tmp_6 = 0; else 
#line 249 
                             tmp_6 = 1;
  
#line 249 
  if (tmp_6) 
#line 249 
             goto _LOR;
  else 
    
#line 249 
    if ((unsigned int)adapter->ahw.linkup == 0U) {
      _LOR: {
              
#line 250 
              ecmd->duplex = (unsigned char)255U;
              
#line 251 
              ethtool_cmd_speed_set(ecmd,4294967295U);
            }
    }
    else ;
  
#line 254 
  __retres = 0;
  return_label: 
#line 254 
                return __retres;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_set_settings(struct net_device *dev, struct ethtool_cmd *ecmd)
{
  int __retres;
  int ret;
  int tmp_2;
  bool tmp_1;
  int tmp_3;
  
#line 260 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 261 
  u32 speed = ethtool_cmd_speed((struct ethtool_cmd const *)ecmd);
  
#line 264 
  if ((unsigned int)adapter->ahw.port_type != 1U) {
    
#line 265 
    __retres = -95;
    
#line 265 
    goto return_label;
  }
  else ;
  
#line 267 
  if ((adapter->capabilities & 2048U) == 0U) {
    
#line 268 
    __retres = -95;
    
#line 268 
    goto return_label;
  }
  else ;
  
#line 270 
  ret = nx_fw_cmd_set_gbe_port(adapter,speed,(unsigned int)ecmd->duplex,(unsigned int)ecmd->autoneg);
  
#line 272 
  if (ret == 9) {
    
#line 273 
    __retres = -95;
    
#line 273 
    goto return_label;
  }
  else 
    
#line 274 
    if (ret != 0) {
      
#line 275 
      __retres = -5;
      
#line 275 
      goto return_label;
    }
    else ;
  
#line 277 
  adapter->link_speed = (unsigned short)speed;
  
#line 278 
  adapter->link_duplex = (unsigned short)ecmd->duplex;
  
#line 279 
  adapter->link_autoneg = (unsigned short)ecmd->autoneg;
  
#line 281 
  tmp_1 = netif_running((struct net_device const *)dev);
  
#line 281 
  if (tmp_1) 
#line 281 
             tmp_2 = 0; else 
#line 281 
                             tmp_2 = 1;
  
#line 281 
  if (tmp_2) {
    
#line 282 
    __retres = 0;
    
#line 282 
    goto return_label;
  }
  else ;
  
#line 284 
  (*((dev->netdev_ops)->ndo_stop))(dev);
  
#line 285 
  tmp_3 = (*((dev->netdev_ops)->ndo_open))(dev);
  
#line 285 
  __retres = tmp_3;
  return_label: 
#line 285 
                return __retres;
}


#line 288  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 290 
  __retres = 120;
  
#line 290 
  return __retres;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *p)
{
  struct nx_host_sds_ring *sds_ring;
  int ring;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  int tmp_23;
  int tmp_24;
  
#line 296 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 297 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 299 
  u32 *regs_buff = (u32 *)p;
  
#line 300 
  int i = 0;
  
#line 301 
  int port = (int)adapter->physical_port;
  
#line 303 
  memset(p,0,120UL);
  
#line 305 
  regs->version = (unsigned int)((((int)adapter->ahw.revision_id << 16) | 16777216) | (int)(adapter->pdev)->device);
  
#line 308 
  if ((unsigned int)adapter->is_up != 777U) 
#line 309 
                                            goto return_label; else ;
  
#line 311 
  tmp_0 = i;
  
#line 311 
  i += 1;
  
#line 311 
  *(regs_buff + tmp_0) = (*(adapter->crb_read))(adapter,136323664UL);
  
#line 312 
  tmp_1 = i;
  
#line 312 
  i += 1;
  
#line 312 
  *(regs_buff + tmp_1) = (*(adapter->crb_read))(adapter,136323900UL);
  
#line 313 
  tmp_2 = i;
  
#line 313 
  i += 1;
  
#line 313 
  *(regs_buff + tmp_2) = (*(adapter->crb_read))(adapter,136323368UL);
  
#line 314 
  tmp_3 = i;
  
#line 314 
  i += 1;
  
#line 314 
  *(regs_buff + tmp_3) = (*(adapter->io_read))(adapter,adapter->crb_int_state_reg);
  
#line 315 
  tmp_4 = i;
  
#line 315 
  i += 1;
  
#line 315 
  *(regs_buff + tmp_4) = (*(adapter->crb_read))(adapter,136323384UL);
  
#line 316 
  tmp_5 = i;
  
#line 316 
  i += 1;
  
#line 316 
  *(regs_buff + tmp_5) = (*(adapter->crb_read))(adapter,136323392UL);
  
#line 317 
  tmp_6 = i;
  
#line 317 
  i += 1;
  
#line 317 
  *(regs_buff + tmp_6) = (*(adapter->crb_read))(adapter,136323248UL);
  
#line 318 
  tmp_7 = i;
  
#line 318 
  i += 1;
  
#line 318 
  *(regs_buff + tmp_7) = (*(adapter->crb_read))(adapter,136323240UL);
  
#line 319 
  tmp_8 = i;
  
#line 319 
  i += 1;
  
#line 319 
  *(regs_buff + tmp_8) = (*(adapter->crb_read))(adapter,136323244UL);
  
#line 321 
  tmp_9 = i;
  
#line 321 
  i += 1;
  
#line 321 
  *(regs_buff + tmp_9) = (*(adapter->crb_read))(adapter,118489148UL);
  
#line 322 
  tmp_10 = i;
  
#line 322 
  i += 1;
  
#line 322 
  *(regs_buff + tmp_10) = (*(adapter->crb_read))(adapter,119537724UL);
  
#line 323 
  tmp_11 = i;
  
#line 323 
  i += 1;
  
#line 323 
  *(regs_buff + tmp_11) = (*(adapter->crb_read))(adapter,120586300UL);
  
#line 324 
  tmp_12 = i;
  
#line 324 
  i += 1;
  
#line 324 
  *(regs_buff + tmp_12) = (*(adapter->crb_read))(adapter,121634876UL);
  
#line 326 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    int tmp_13;
    int tmp_14;
    int tmp_15;
    
#line 328 
    tmp_13 = i;
    
#line 328 
    i += 1;
    
#line 328 
    *(regs_buff + tmp_13) = (*(adapter->crb_read))(adapter,116391996UL);
    
#line 329 
    i += 2;
    
#line 331 
    tmp_14 = i;
    
#line 331 
    i += 1;
    
#line 331 
    *(regs_buff + tmp_14) = (*(adapter->crb_read))(adapter,136323736UL);
    
#line 332 
    tmp_15 = i;
    
#line 332 
    i += 1;
    
#line 332 
    *(regs_buff + tmp_15) = *((adapter->tx_ring)->hw_consumer);
  }
  else {
    int tmp_16;
    int tmp_17;
    int tmp_18;
    int tmp_19;
    
#line 335 
    i += 1;
    
#line 337 
    tmp_16 = i;
    
#line 337 
    i += 1;
    
#line 337 
    *(regs_buff + tmp_16) = (*(adapter->crb_read))(adapter,(unsigned long)(port * 65536) + 107413504UL);
    
#line 339 
    tmp_17 = i;
    
#line 339 
    i += 1;
    
#line 339 
    *(regs_buff + tmp_17) = (*(adapter->crb_read))(adapter,(unsigned long)(port * 65536) + 107413508UL);
    
#line 342 
    tmp_18 = i;
    
#line 342 
    i += 1;
    
#line 342 
    *(regs_buff + tmp_18) = (*(adapter->crb_read))(adapter,136323732UL);
    
#line 343 
    tmp_19 = i;
    
#line 343 
    i += 1;
    
#line 343 
    *(regs_buff + tmp_19) = (*(adapter->io_read))(adapter,(adapter->tx_ring)->crb_cmd_consumer);
  }
  
#line 347 
  tmp_20 = i;
  
#line 347 
  i += 1;
  
#line 347 
  *(regs_buff + tmp_20) = (*(adapter->io_read))(adapter,(adapter->tx_ring)->crb_cmd_producer);
  
#line 349 
  tmp_21 = i;
  
#line 349 
  i += 1;
  
#line 349 
  *(regs_buff + tmp_21) = (*(adapter->io_read))(adapter,(recv_ctx->rds_rings)->crb_rcv_producer);
  
#line 351 
  tmp_22 = i;
  
#line 351 
  i += 1;
  
#line 351 
  *(regs_buff + tmp_22) = (*(adapter->io_read))(adapter,(recv_ctx->rds_rings + 1U)->crb_rcv_producer);
  
#line 354 
  tmp_23 = i;
  
#line 354 
  i += 1;
  
#line 354 
  *(regs_buff + tmp_23) = (unsigned int)adapter->max_sds_rings;
  
#line 356 
  ring = 0;
  
#line 356 
  goto ldv_52132;
  ldv_52131: 
#line 357 
  ;
  
#line 357 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 358 
  tmp_24 = i;
  
#line 358 
  i += 1;
  
#line 358 
  *(regs_buff + tmp_24) = (*(adapter->io_read))(adapter,sds_ring->crb_sts_consumer);
  
#line 356 
  ring += 1;
  ldv_52132: 
#line 357 
  ;
  
#line 356 
  if ((int)adapter->max_sds_rings > ring) 
#line 358 
                                          goto ldv_52131; else 
#line 361 
                                                               goto ldv_52133;
  ldv_52133: 
#line 362 
  ;
  return_label: 
#line 363 
                return;
}


#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static u32 netxen_nic_test_link(struct net_device *dev)
{
  u32 __retres;
  u32 val;
  u32 port;
  
#line 365 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 368 
  port = (unsigned int)adapter->physical_port;
  
#line 369 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 370 
    val = (*(adapter->crb_read))(adapter,136323736UL);
    
#line 371 
    val = (val >> (int)adapter->ahw.pci_func * 4) & 15U;
    
#line 372 
    __retres = (unsigned int)(val != 1U);
    
#line 372 
    goto return_label;
  }
  else {
    
#line 374 
    val = (*(adapter->crb_read))(adapter,136323732UL);
    
#line 375 
    val = (val >> port * 8U) & 255U;
    
#line 376 
    __retres = (unsigned int)(val != 16U);
    
#line 376 
    goto return_label;
  }
  return_label: 
#line 369 
                return __retres;
}


#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_get_eeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  int offset;
  int ret;
  
#line 384 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 388 
  if (eeprom->len == 0U) {
    
#line 389 
    __retres = -22;
    
#line 389 
    goto return_label;
  }
  else ;
  
#line 391 
  eeprom->magic = (unsigned int)((int)(adapter->pdev)->vendor | ((int)(adapter->pdev)->device << 16));
  
#line 393 
  offset = (int)eeprom->offset;
  
#line 395 
  ret = netxen_rom_fast_read_words(adapter,offset,bytes,(unsigned long)eeprom->len);
  
#line 397 
  if (ret < 0) {
    
#line 398 
    __retres = ret;
    
#line 398 
    goto return_label;
  }
  else ;
  
#line 400 
  __retres = 0;
  return_label: 
#line 400 
                return __retres;
}


#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_ringparam(struct net_device *dev, struct ethtool_ringparam *ring)
{
  
#line 407 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 409 
  ring->rx_pending = (unsigned int)adapter->num_rxd;
  
#line 410 
  ring->rx_jumbo_pending = (unsigned int)adapter->num_jumbo_rxd;
  
#line 411 
  ring->rx_jumbo_pending += (unsigned int)adapter->num_lro_rxd;
  
#line 412 
  ring->tx_pending = (unsigned int)adapter->num_txd;
  
#line 414 
  if ((unsigned int)adapter->ahw.port_type == 1U) {
    
#line 415 
    ring->rx_max_pending = 4096U;
    
#line 416 
    ring->rx_jumbo_max_pending = 512U;
  }
  else {
    
#line 418 
    ring->rx_max_pending = 8192U;
    
#line 419 
    ring->rx_jumbo_max_pending = 1024U;
  }
  
#line 422 
  ring->tx_max_pending = 1024U;
  
#line 423 
  return;
}


#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static u32 netxen_validate_ringparam(u32 val, u32 min, u32 max, char *r_name)
{
  u32 num_desc;
  u32 tmp_0;
  u32 tmp_2;
  {
    u32 tmp;
    
#line 429 
    u32 _max1 = val;
    
#line 429 
    u32 _max2 = min;
    
#line 429 
    if (_max1 > _max2) 
#line 429 
                       tmp = _max1; else 
#line 429 
                                         tmp = _max2;
    
#line 429 
    tmp_0 = tmp;
  }
  
#line 429 
  num_desc = tmp_0;
  {
    u32 tmp_1;
    
#line 430 
    u32 _min1 = num_desc;
    
#line 430 
    u32 _min2 = max;
    
#line 430 
    if (_min1 < _min2) 
#line 430 
                       tmp_1 = _min1; else 
#line 430 
                                           tmp_1 = _min2;
    
#line 430 
    tmp_2 = tmp_1;
  }
  
#line 430 
  num_desc = tmp_2;
  
#line 431 
  if (0 != 0) {
    unsigned int tmp_71;
    
#line 431 
    if (num_desc != 1U) {
      unsigned int tmp_70;
      
#line 431 
      if (0 != 0) {
        unsigned int tmp_68;
        
#line 431 
        if (num_desc == 1U) {
          int tmp_3;
          
#line 431 
          tmp_3 = ____ilog2_NaN();
          
#line 431 
          tmp_68 = (unsigned int)(1UL << (tmp_3 + 1));
        }
        else {
          unsigned int tmp_67;
          
#line 431 
          if (((unsigned long long)(num_desc + 4294967295U) & 4611686018427387904ULL) == 0ULL) {
            unsigned int tmp_66;
            
#line 431 
            if (((unsigned long long)(num_desc + 4294967295U) & 2305843009213693952ULL) == 0ULL) {
              unsigned int tmp_65;
              
#line 431 
              if (((unsigned long long)(num_desc + 4294967295U) & 1152921504606846976ULL) == 0ULL) {
                unsigned int tmp_64;
                
#line 431 
                if (((unsigned long long)(num_desc + 4294967295U) & 576460752303423488ULL) == 0ULL) {
                  unsigned int tmp_63;
                  
#line 431 
                  if (((unsigned long long)(num_desc + 4294967295U) & 288230376151711744ULL) == 0ULL) {
                    unsigned int tmp_62;
                    
#line 431 
                    if (((unsigned long long)(num_desc + 4294967295U) & 144115188075855872ULL) == 0ULL) {
                      unsigned int tmp_61;
                      
#line 431 
                      if (((unsigned long long)(num_desc + 4294967295U) & 72057594037927936ULL) == 0ULL) {
                        unsigned int tmp_60;
                        
#line 431 
                        if (((unsigned long long)(num_desc + 4294967295U) & 36028797018963968ULL) == 0ULL) {
                          unsigned int tmp_59;
                          
#line 431 
                          if (((unsigned long long)(num_desc + 4294967295U) & 18014398509481984ULL) == 0ULL) {
                            unsigned int tmp_58;
                            
#line 431 
                            if (((unsigned long long)(num_desc + 4294967295U) & 9007199254740992ULL) == 0ULL) {
                              unsigned int tmp_57;
                              
#line 431 
                              if (((unsigned long long)(num_desc + 4294967295U) & 4503599627370496ULL) == 0ULL) {
                                unsigned int tmp_56;
                                
#line 431 
                                if (((unsigned long long)(num_desc + 4294967295U) & 2251799813685248ULL) == 0ULL) {
                                  unsigned int tmp_55;
                                  
#line 431 
                                  if (((unsigned long long)(num_desc + 4294967295U) & 1125899906842624ULL) == 0ULL) {
                                    unsigned int tmp_54;
                                    
#line 431 
                                    if (((unsigned long long)(num_desc + 4294967295U) & 562949953421312ULL) == 0ULL) {
                                      unsigned int tmp_53;
                                      
#line 431 
                                      if (((unsigned long long)(num_desc + 4294967295U) & 281474976710656ULL) == 0ULL) {
                                        unsigned int tmp_52;
                                        
#line 431 
                                        if (((unsigned long long)(num_desc + 4294967295U) & 140737488355328ULL) == 0ULL) {
                                          unsigned int tmp_51;
                                          
#line 431 
                                          if (((unsigned long long)(num_desc + 4294967295U) & 70368744177664ULL) == 0ULL) {
                                            unsigned int tmp_50;
                                            
#line 431 
                                            if (((unsigned long long)(num_desc + 4294967295U) & 35184372088832ULL) == 0ULL) {
                                              unsigned int tmp_49;
                                              
#line 431 
                                              if (((unsigned long long)(num_desc + 4294967295U) & 17592186044416ULL) == 0ULL) {
                                                unsigned int tmp_48;
                                                
#line 431 
                                                if (((unsigned long long)(num_desc + 4294967295U) & 8796093022208ULL) == 0ULL) {
                                                  unsigned int tmp_47;
                                                  
#line 431 
                                                  if (((unsigned long long)(num_desc + 4294967295U) & 4398046511104ULL) == 0ULL) {
                                                    unsigned int tmp_46;
                                                    
#line 431 
                                                    if (((unsigned long long)(num_desc + 4294967295U) & 2199023255552ULL) == 0ULL) {
                                                      unsigned int tmp_45;
                                                      
#line 431 
                                                      if (((unsigned long long)(num_desc + 4294967295U) & 1099511627776ULL) == 0ULL) {
                                                        unsigned int tmp_44;
                                                        
#line 431 
                                                        if (((unsigned long long)(num_desc + 4294967295U) & 549755813888ULL) == 0ULL) {
                                                          unsigned int tmp_43;
                                                          
#line 431 
                                                          if (((unsigned long long)(num_desc + 4294967295U) & 274877906944ULL) == 0ULL) {
                                                            unsigned int tmp_42;
                                                            
#line 431 
                                                            if (((unsigned long long)(num_desc + 4294967295U) & 137438953472ULL) == 0ULL) {
                                                              unsigned int tmp_41;
                                                              
#line 431 
                                                              if (((unsigned long long)(num_desc + 4294967295U) & 68719476736ULL) == 0ULL) {
                                                                unsigned int tmp_40;
                                                                
#line 431 
                                                                if (((unsigned long long)(num_desc + 4294967295U) & 34359738368ULL) == 0ULL) {
                                                                  unsigned int tmp_39;
                                                                  
#line 431 
                                                                  if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 17179869184ULL) == 0ULL) {
                                                                    unsigned int tmp_38;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 8589934592ULL) == 0ULL) {
                                                                    unsigned int tmp_37;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 4294967296ULL) == 0ULL) {
                                                                    unsigned int tmp_36;
                                                                    
#line 431 
                                                                    if (
                                                                    num_desc + 4294967295U >= (u32)0) {
                                                                    unsigned int tmp_35;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 1073741824ULL) == 0ULL) {
                                                                    unsigned int tmp_34;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 536870912ULL) == 0ULL) {
                                                                    unsigned int tmp_33;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 268435456ULL) == 0ULL) {
                                                                    unsigned int tmp_32;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 134217728ULL) == 0ULL) {
                                                                    unsigned int tmp_31;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 67108864ULL) == 0ULL) {
                                                                    unsigned int tmp_30;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 33554432ULL) == 0ULL) {
                                                                    unsigned int tmp_29;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 16777216ULL) == 0ULL) {
                                                                    unsigned int tmp_28;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 8388608ULL) == 0ULL) {
                                                                    unsigned int tmp_27;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 4194304ULL) == 0ULL) {
                                                                    unsigned int tmp_26;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 2097152ULL) == 0ULL) {
                                                                    unsigned int tmp_25;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 1048576ULL) == 0ULL) {
                                                                    unsigned int tmp_24;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 524288ULL) == 0ULL) {
                                                                    unsigned int tmp_23;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 262144ULL) == 0ULL) {
                                                                    unsigned int tmp_22;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 131072ULL) == 0ULL) {
                                                                    unsigned int tmp_21;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 65536ULL) == 0ULL) {
                                                                    unsigned int tmp_20;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 32768ULL) == 0ULL) {
                                                                    unsigned int tmp_19;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 16384ULL) == 0ULL) {
                                                                    unsigned int tmp_18;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 8192ULL) == 0ULL) {
                                                                    unsigned int tmp_17;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 4096ULL) == 0ULL) {
                                                                    unsigned int tmp_16;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 2048ULL) == 0ULL) {
                                                                    unsigned int tmp_15;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 1024ULL) == 0ULL) {
                                                                    unsigned int tmp_14;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 512ULL) == 0ULL) {
                                                                    unsigned int tmp_13;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 256ULL) == 0ULL) {
                                                                    unsigned int tmp_12;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 128ULL) == 0ULL) {
                                                                    unsigned int tmp_11;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 64ULL) == 0ULL) {
                                                                    unsigned int tmp_10;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 32ULL) == 0ULL) {
                                                                    unsigned int tmp_9;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 16ULL) == 0ULL) {
                                                                    unsigned int tmp_8;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 8ULL) == 0ULL) {
                                                                    unsigned int tmp_7;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 4ULL) == 0ULL) {
                                                                    unsigned int tmp_6;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 2ULL) == 0ULL) {
                                                                    unsigned int tmp_5;
                                                                    
#line 431 
                                                                    if (
                                                                    ((unsigned long long)(num_desc + 4294967295U) & 1ULL) == 0ULL) {
                                                                    int tmp_4;
                                                                    
#line 431 
                                                                    tmp_4 = ____ilog2_NaN();
                                                                    
#line 431 
                                                                    tmp_5 = (unsigned int)(1UL << (tmp_4 + 1));
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_5 = 2U;
                                                                    
#line 431 
                                                                    tmp_6 = tmp_5;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_6 = 4U;
                                                                    
#line 431 
                                                                    tmp_7 = tmp_6;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_7 = 8U;
                                                                    
#line 431 
                                                                    tmp_8 = tmp_7;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_8 = 16U;
                                                                    
#line 431 
                                                                    tmp_9 = tmp_8;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_9 = 32U;
                                                                    
#line 431 
                                                                    tmp_10 = tmp_9;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_10 = 64U;
                                                                    
#line 431 
                                                                    tmp_11 = tmp_10;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_11 = 128U;
                                                                    
#line 431 
                                                                    tmp_12 = tmp_11;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_12 = 256U;
                                                                    
#line 431 
                                                                    tmp_13 = tmp_12;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_13 = 512U;
                                                                    
#line 431 
                                                                    tmp_14 = tmp_13;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_14 = 1024U;
                                                                    
#line 431 
                                                                    tmp_15 = tmp_14;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_15 = 2048U;
                                                                    
#line 431 
                                                                    tmp_16 = tmp_15;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_16 = 4096U;
                                                                    
#line 431 
                                                                    tmp_17 = tmp_16;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_17 = 8192U;
                                                                    
#line 431 
                                                                    tmp_18 = tmp_17;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_18 = 16384U;
                                                                    
#line 431 
                                                                    tmp_19 = tmp_18;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_19 = 32768U;
                                                                    
#line 431 
                                                                    tmp_20 = tmp_19;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_20 = 65536U;
                                                                    
#line 431 
                                                                    tmp_21 = tmp_20;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_21 = 131072U;
                                                                    
#line 431 
                                                                    tmp_22 = tmp_21;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_22 = 262144U;
                                                                    
#line 431 
                                                                    tmp_23 = tmp_22;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_23 = 524288U;
                                                                    
#line 431 
                                                                    tmp_24 = tmp_23;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_24 = 1048576U;
                                                                    
#line 431 
                                                                    tmp_25 = tmp_24;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_25 = 2097152U;
                                                                    
#line 431 
                                                                    tmp_26 = tmp_25;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_26 = 4194304U;
                                                                    
#line 431 
                                                                    tmp_27 = tmp_26;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_27 = 8388608U;
                                                                    
#line 431 
                                                                    tmp_28 = tmp_27;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_28 = 16777216U;
                                                                    
#line 431 
                                                                    tmp_29 = tmp_28;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_29 = 33554432U;
                                                                    
#line 431 
                                                                    tmp_30 = tmp_29;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_30 = 67108864U;
                                                                    
#line 431 
                                                                    tmp_31 = tmp_30;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_31 = 134217728U;
                                                                    
#line 431 
                                                                    tmp_32 = tmp_31;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_32 = 268435456U;
                                                                    
#line 431 
                                                                    tmp_33 = tmp_32;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_33 = 536870912U;
                                                                    
#line 431 
                                                                    tmp_34 = tmp_33;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_34 = 1073741824U;
                                                                    
#line 431 
                                                                    tmp_35 = tmp_34;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_35 = 2147483648U;
                                                                    
#line 431 
                                                                    tmp_36 = tmp_35;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_36 = 0U;
                                                                    
#line 431 
                                                                    tmp_37 = tmp_36;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_37 = 0U;
                                                                    
#line 431 
                                                                    tmp_38 = tmp_37;
                                                                    }
                                                                    else 
                                                                    
#line 431 
                                                                    tmp_38 = 0U;
                                                                    
#line 431 
                                                                    tmp_39 = tmp_38;
                                                                  }
                                                                  else 
                                                                    
#line 431 
                                                                    tmp_39 = 0U;
                                                                  
#line 431 
                                                                  tmp_40 = tmp_39;
                                                                }
                                                                else 
                                                                  
#line 431 
                                                                  tmp_40 = 0U;
                                                                
#line 431 
                                                                tmp_41 = tmp_40;
                                                              }
                                                              else 
#line 431 
                                                                   tmp_41 = 0U;
                                                              
#line 431 
                                                              tmp_42 = tmp_41;
                                                            }
                                                            else 
#line 431 
                                                                 tmp_42 = 0U;
                                                            
#line 431 
                                                            tmp_43 = tmp_42;
                                                          }
                                                          else 
#line 431 
                                                               tmp_43 = 0U;
                                                          
#line 431 
                                                          tmp_44 = tmp_43;
                                                        }
                                                        else 
#line 431 
                                                             tmp_44 = 0U;
                                                        
#line 431 
                                                        tmp_45 = tmp_44;
                                                      }
                                                      else 
#line 431 
                                                           tmp_45 = 0U;
                                                      
#line 431 
                                                      tmp_46 = tmp_45;
                                                    }
                                                    else 
#line 431 
                                                         tmp_46 = 0U;
                                                    
#line 431 
                                                    tmp_47 = tmp_46;
                                                  }
                                                  else 
#line 431 
                                                       tmp_47 = 0U;
                                                  
#line 431 
                                                  tmp_48 = tmp_47;
                                                }
                                                else 
#line 431 
                                                     tmp_48 = 0U;
                                                
#line 431 
                                                tmp_49 = tmp_48;
                                              }
                                              else 
#line 431 
                                                   tmp_49 = 0U;
                                              
#line 431 
                                              tmp_50 = tmp_49;
                                            }
                                            else 
#line 431 
                                                 tmp_50 = 0U;
                                            
#line 431 
                                            tmp_51 = tmp_50;
                                          }
                                          else 
#line 431 
                                               tmp_51 = 0U;
                                          
#line 431 
                                          tmp_52 = tmp_51;
                                        }
                                        else 
#line 431 
                                             tmp_52 = 0U;
                                        
#line 431 
                                        tmp_53 = tmp_52;
                                      }
                                      else 
#line 431 
                                           tmp_53 = 0U;
                                      
#line 431 
                                      tmp_54 = tmp_53;
                                    }
                                    else 
#line 431 
                                         tmp_54 = 0U;
                                    
#line 431 
                                    tmp_55 = tmp_54;
                                  }
                                  else 
#line 431 
                                       tmp_55 = 0U;
                                  
#line 431 
                                  tmp_56 = tmp_55;
                                }
                                else 
#line 431 
                                     tmp_56 = 0U;
                                
#line 431 
                                tmp_57 = tmp_56;
                              }
                              else 
#line 431 
                                   tmp_57 = 0U;
                              
#line 431 
                              tmp_58 = tmp_57;
                            }
                            else 
#line 431 
                                 tmp_58 = 0U;
                            
#line 431 
                            tmp_59 = tmp_58;
                          }
                          else 
#line 431 
                               tmp_59 = 0U;
                          
#line 431 
                          tmp_60 = tmp_59;
                        }
                        else 
#line 431 
                             tmp_60 = 0U;
                        
#line 431 
                        tmp_61 = tmp_60;
                      }
                      else 
#line 431 
                           tmp_61 = 0U;
                      
#line 431 
                      tmp_62 = tmp_61;
                    }
                    else 
#line 431 
                         tmp_62 = 0U;
                    
#line 431 
                    tmp_63 = tmp_62;
                  }
                  else 
#line 431 
                       tmp_63 = 0U;
                  
#line 431 
                  tmp_64 = tmp_63;
                }
                else 
#line 431 
                     tmp_64 = 0U;
                
#line 431 
                tmp_65 = tmp_64;
              }
              else 
#line 431 
                   tmp_65 = 0U;
              
#line 431 
              tmp_66 = tmp_65;
            }
            else 
#line 431 
                 tmp_66 = 0U;
            
#line 431 
            tmp_67 = tmp_66;
          }
          else 
#line 431 
               tmp_67 = 0U;
          
#line 431 
          tmp_68 = tmp_67;
        }
        
#line 431 
        tmp_70 = tmp_68;
      }
      else {
        int tmp_69;
        
#line 431 
        tmp_69 = __ilog2_u32(num_desc + 4294967295U);
        
#line 431 
        tmp_70 = (unsigned int)(1UL << (tmp_69 + 1));
      }
      
#line 431 
      tmp_71 = tmp_70;
    }
    else 
#line 431 
         tmp_71 = 1U;
    
#line 431 
    num_desc = tmp_71;
  }
  else {
    unsigned long tmp_72;
    
#line 431 
    tmp_72 = __roundup_pow_of_two((unsigned long)num_desc);
    
#line 431 
    num_desc = (unsigned int)tmp_72;
  }
  
#line 433 
  if (val != num_desc) 
#line 434 
                       printk("\001",(char *)(& netxen_nic_driver_name),r_name,num_desc,val); else ;
  
#line 438 
  return num_desc;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_set_ringparam(struct net_device *dev, struct ethtool_ringparam *ring)
{
  int __retres;
  u16 num_rxd;
  u16 num_jumbo_rxd;
  u16 num_txd;
  u32 tmp_0;
  u32 tmp_1;
  u32 tmp_2;
  int tmp_3;
  
#line 445 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 446 
  u16 max_rcv_desc = (unsigned short)8192U;
  
#line 447 
  u16 max_jumbo_desc = (unsigned short)1024U;
  
#line 450 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 451 
    __retres = -95;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 453 
  if (ring->rx_mini_pending != 0U) {
    
#line 454 
    __retres = -95;
    
#line 454 
    goto return_label;
  }
  else ;
  
#line 456 
  if ((unsigned int)adapter->ahw.port_type == 1U) {
    
#line 457 
    max_rcv_desc = (unsigned short)4096U;
    
#line 458 
    max_jumbo_desc = (unsigned short)1024U;
  }
  else ;
  
#line 461 
  tmp_0 = netxen_validate_ringparam(ring->rx_pending,64U,(unsigned int)max_rcv_desc,(char *)"rx");
  
#line 461 
  num_rxd = (unsigned short)tmp_0;
  
#line 464 
  tmp_1 = netxen_validate_ringparam(ring->rx_jumbo_pending,32U,(unsigned int)max_jumbo_desc,(char *)"rx jumbo");
  
#line 464 
  num_jumbo_rxd = (unsigned short)tmp_1;
  
#line 467 
  tmp_2 = netxen_validate_ringparam(ring->tx_pending,64U,1024U,(char *)"tx");
  
#line 467 
  num_txd = (unsigned short)tmp_2;
  
#line 470 
  if (((int)adapter->num_rxd == (int)num_rxd && (int)adapter->num_txd == (int)num_txd) && (int)adapter->num_jumbo_rxd == (int)num_jumbo_rxd) {
    
#line 472 
    __retres = 0;
    
#line 472 
    goto return_label;
  }
  else ;
  
#line 474 
  adapter->num_rxd = num_rxd;
  
#line 475 
  adapter->num_jumbo_rxd = num_jumbo_rxd;
  
#line 476 
  adapter->num_txd = num_txd;
  
#line 478 
  tmp_3 = netxen_nic_reset_context(adapter);
  
#line 478 
  __retres = tmp_3;
  return_label: 
#line 478 
                return __retres;
}


#line 482  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pause)
{
  __u32 val;
  
#line 485 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 487 
  int port = (int)adapter->physical_port;
  
#line 489 
  pause->autoneg = 0U;
  
#line 491 
  if ((unsigned int)adapter->ahw.port_type == 1U) {
    
#line 492 
    if ((unsigned int)port > 3U) 
#line 493 
                                 goto return_label; else ;
    
#line 495 
    val = (*(adapter->crb_read))(adapter,(unsigned long)(port * 65536) + 107151360UL);
    
#line 496 
    pause->rx_pause = (val >> 5) & 1U;
    
#line 497 
    val = (*(adapter->crb_read))(adapter,106955532UL);
    
#line 498 
    switch (port) {
      case 0: 
#line 499 
      ;
      
#line 500 
      pause->tx_pause = (unsigned int)((val & 1U) == 0U);
      
#line 501 
      goto ldv_52184;
      case 1: 
#line 502 
      ;
      
#line 503 
      pause->tx_pause = (unsigned int)((val & 4U) == 0U);
      
#line 504 
      goto ldv_52184;
      case 2: 
#line 505 
      ;
      
#line 506 
      pause->tx_pause = (unsigned int)((val & 16U) == 0U);
      
#line 507 
      goto ldv_52184;
      case 3: 
#line 508 
      ;
      default: 
#line 509 
      ;
      
#line 510 
      pause->tx_pause = (unsigned int)((val & 64U) == 0U);
      
#line 511 
      goto ldv_52184;
    }
    ldv_52184: 
#line 513 
    ;
  }
  else 
    
#line 513 
    if ((unsigned int)adapter->ahw.port_type == 2U) {
      
#line 514 
      if ((unsigned int)port > 1U) 
#line 515 
                                   goto return_label; else ;
      
#line 516 
      pause->rx_pause = 1U;
      
#line 517 
      val = (*(adapter->crb_read))(adapter,106954904UL);
      
#line 518 
      if (port == 0) 
#line 519 
                     pause->tx_pause = (unsigned int)((val & 1U) == 0U); else 
                                                                    
#line 521 
                                                                    pause->tx_pause = (unsigned int)((val & 8U) == 0U);
    }
    else 
#line 523 
         printk("\001",(char *)(& netxen_nic_driver_name),(int)adapter->ahw.port_type);
  return_label: 
#line 525 
                return;
}


#line 529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_set_pauseparam(struct net_device *dev, struct ethtool_pauseparam *pause)
{
  int __retres;
  __u32 val;
  
#line 532 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 534 
  int port = (int)adapter->physical_port;
  
#line 537 
  if (pause->autoneg != 0U) {
    
#line 538 
    __retres = -22;
    
#line 538 
    goto return_label;
  }
  else ;
  
#line 541 
  if ((unsigned int)adapter->ahw.port_type == 1U) {
    
#line 542 
    if ((unsigned int)port > 3U) {
      
#line 543 
      __retres = -5;
      
#line 543 
      goto return_label;
    }
    else ;
    
#line 545 
    val = (*(adapter->crb_read))(adapter,(unsigned long)(port * 65536) + 107151360UL);
    
#line 547 
    if (pause->rx_pause != 0U) 
#line 548 
                               val |= 32U; else 
#line 550 
                                                val &= 4294967263U;
    
#line 552 
    (*(adapter->crb_write))(adapter,(unsigned long)(port * 65536) + 107151360UL,val);
    
#line 555 
    val = (*(adapter->crb_read))(adapter,106955532UL);
    
#line 556 
    switch (port) {
      case 0: 
#line 557 
      ;
      
#line 558 
      if (pause->tx_pause != 0U) 
#line 559 
                                 val &= 4294967294U; else 
#line 561 
                                                          val |= 1U;
      
#line 562 
      goto ldv_52197;
      case 1: 
#line 563 
      ;
      
#line 564 
      if (pause->tx_pause != 0U) 
#line 565 
                                 val &= 4294967291U; else 
#line 567 
                                                          val |= 4U;
      
#line 568 
      goto ldv_52197;
      case 2: 
#line 569 
      ;
      
#line 570 
      if (pause->tx_pause != 0U) 
#line 571 
                                 val &= 4294967279U; else 
#line 573 
                                                          val |= 16U;
      
#line 574 
      goto ldv_52197;
      case 3: 
#line 575 
      ;
      default: 
#line 576 
      ;
      
#line 577 
      if (pause->tx_pause != 0U) 
#line 578 
                                 val &= 4294967231U; else 
#line 580 
                                                          val |= 64U;
      
#line 581 
      goto ldv_52197;
    }
    ldv_52197: 
#line 583 
    ;
    
#line 583 
    (*(adapter->crb_write))(adapter,106955532UL,val);
  }
  else 
    
#line 584 
    if ((unsigned int)adapter->ahw.port_type == 2U) {
      
#line 585 
      if ((unsigned int)port > 1U) {
        
#line 586 
        __retres = -5;
        
#line 586 
        goto return_label;
      }
      else ;
      
#line 587 
      val = (*(adapter->crb_read))(adapter,106954904UL);
      
#line 588 
      if (port == 0) 
        
#line 589 
        if (pause->tx_pause != 0U) 
#line 590 
                                   val &= 4294967294U; else 
#line 592 
                                                            val |= 1U;
      else 
        
#line 594 
        if (pause->tx_pause != 0U) 
#line 595 
                                   val &= 4294967287U; else 
#line 597 
                                                            val |= 8U;
      
#line 599 
      (*(adapter->crb_write))(adapter,106954904UL,val);
    }
    else 
#line 601 
         printk("\001",(char *)(& netxen_nic_driver_name),(int)adapter->ahw.port_type);
  
#line 605 
  __retres = 0;
  return_label: 
#line 605 
                return __retres;
}


#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_reg_test(struct net_device *dev)
{
  int __retres;
  u32 data_read;
  u32 data_written;
  
#line 610 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 613 
  data_read = (*(adapter->crb_read))(adapter,101711872UL);
  
#line 614 
  if ((data_read & 65535U) != (unsigned int)(adapter->pdev)->vendor) {
    
#line 615 
    __retres = 1;
    
#line 615 
    goto return_label;
  }
  else ;
  
#line 617 
  if ((unsigned int)adapter->ahw.revision_id > 47U) {
    
#line 618 
    __retres = 0;
    
#line 618 
    goto return_label;
  }
  else ;
  
#line 620 
  data_written = 2779096485U;
  
#line 622 
  (*(adapter->crb_write))(adapter,136324224UL,data_written);
  
#line 623 
  data_read = (*(adapter->crb_read))(adapter,136324224UL);
  
#line 624 
  if (data_written != data_read) {
    
#line 625 
    __retres = 1;
    
#line 625 
    goto return_label;
  }
  else ;
  
#line 627 
  __retres = 0;
  return_label: 
#line 627 
                return __retres;
}


#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 632 
  switch (sset) {
    case 0: 
#line 633 
    ;
    
#line 634 
    __retres = 2;
    
#line 634 
    goto return_label;
    case 1: 
#line 635 
    ;
    
#line 636 
    __retres = 9;
    
#line 636 
    goto return_label;
    default: 
#line 637 
    ;
    
#line 638 
    __retres = -95;
    
#line 638 
    goto return_label;
  }
  return_label: 
#line 632 
                return __retres;
}


#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_diag_test(struct net_device *dev, struct ethtool_test *eth_test, u64 *data)
{
  int tmp_0;
  u64 tmp;
  u32 tmp_2;
  u64 tmp_1;
  
#line 646 
  memset((void *)data,0,16UL);
  
#line 647 
  tmp_0 = netxen_nic_reg_test(dev);
  
#line 647 
  tmp = (unsigned long long)tmp_0;
  
#line 647 
  *data = tmp;
  
#line 647 
  if (tmp != 0ULL) 
#line 648 
                   eth_test->flags |= 2U; else ;
  
#line 650 
  tmp_2 = netxen_nic_test_link(dev);
  
#line 650 
  tmp_1 = (unsigned long long)tmp_2;
  
#line 650 
  *(data + 1U) = tmp_1;
  
#line 650 
  if (tmp_1 != 0ULL) 
#line 651 
                     eth_test->flags |= 2U; else ;
  
#line 652 
  return;
}


#line 655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  int index;
  
#line 659 
  switch (stringset) {
    case (u32)0: 
#line 660 
    ;
    
#line 661 
    memcpy((void *)data,(void const *)(& netxen_nic_gstrings_test),64UL);
    
#line 663 
    goto ldv_52239;
    case (u32)1: 
#line 664 
    ;
    
#line 665 
    index = 0;
    
#line 665 
    goto ldv_52245;
    ldv_52244: 
#line 666 
    ;
    
#line 666 
    memcpy((void *)(data + index * 32),(void const *)(& netxen_nic_gstrings_stats[index].stat_string),32UL);
    
#line 665 
    index += 1;
    ldv_52245: 
#line 666 
    ;
    
#line 665 
    if ((unsigned int)index <= 8U) 
#line 667 
                                   goto ldv_52244; else 
#line 670 
                                                        goto ldv_52246;
    ldv_52246: 
#line 671 
    ;
    
#line 670 
    goto ldv_52239;
  }
  ldv_52239: 
#line 672 
  ;
  
#line 673 
  return;
}


#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *stats, u64 *data)
{
  int index;
  
#line 678 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 681 
  index = 0;
  
#line 681 
  goto ldv_52259;
  ldv_52258: 
#line 682 
  ;
  {
    
#line 682 
    char *p = (char *)adapter + netxen_nic_gstrings_stats[index].stat_offset;
    
#line 685 
    if (netxen_nic_gstrings_stats[index].sizeof_stat == 8) 
#line 685 
                                                           *(data + index) = *((u64 *)p); else 
                                                                    
#line 685 
                                                                    *(data + index) = (unsigned long long)*((u32 *)p);
  }
  
#line 681 
  index += 1;
  ldv_52259: 
#line 682 
  ;
  
#line 681 
  if ((unsigned int)index <= 8U) 
#line 683 
                                 goto ldv_52258; else 
#line 686 
                                                      goto ldv_52260;
  ldv_52260: 
#line 687 
  ;
  
#line 688 
  return;
}


#line 692  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static void netxen_nic_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  
#line 694 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 695 
  u32 wol_cfg = 0U;
  
#line 697 
  wol->supported = 0U;
  
#line 698 
  wol->wolopts = 0U;
  
#line 700 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 701 
                                                     goto return_label; else ;
  
#line 703 
  wol_cfg = (*(adapter->crb_read))(adapter,136323460UL);
  
#line 704 
  if ((((unsigned long)wol_cfg >> (int)adapter->portnum) & 1UL) != 0UL) 
    
#line 705 
    wol->supported |= 32U; else ;
  
#line 707 
  wol_cfg = (*(adapter->crb_read))(adapter,136323464UL);
  
#line 708 
  if ((((unsigned long)wol_cfg >> (int)adapter->portnum) & 1UL) != 0UL) 
    
#line 709 
    wol->wolopts |= 32U; else ;
  return_label: 
#line 710 
                return;
}


#line 713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_nic_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 715 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)dev);
  
#line 716 
  u32 wol_cfg = 0U;
  
#line 718 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 719 
    __retres = -95;
    
#line 719 
    goto return_label;
  }
  else ;
  
#line 721 
  if ((wol->wolopts & 4294967263U) != 0U) {
    
#line 722 
    __retres = -95;
    
#line 722 
    goto return_label;
  }
  else ;
  
#line 724 
  wol_cfg = (*(adapter->crb_read))(adapter,136323460UL);
  
#line 725 
  if (((unsigned int)(1 << (int)adapter->portnum) & wol_cfg) == 0U) {
    
#line 726 
    __retres = -95;
    
#line 726 
    goto return_label;
  }
  else ;
  
#line 728 
  wol_cfg = (*(adapter->crb_read))(adapter,136323464UL);
  
#line 729 
  if ((wol->wolopts & 32U) != 0U) 
#line 730 
                                  wol_cfg = (unsigned int)(1UL << (int)adapter->portnum) | wol_cfg; else 
                                                                    
#line 732 
                                                                    wol_cfg = ~ ((unsigned int)(1UL << (int)adapter->portnum)) & wol_cfg;
  
#line 733 
  (*(adapter->crb_write))(adapter,136323464UL,wol_cfg);
  
#line 735 
  __retres = 0;
  return_label: 
#line 735 
                return __retres;
}


#line 743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_set_intr_coalesce(struct net_device *netdev, struct ethtool_coalesce *ethcoal)
{
  int __retres;
  
#line 746 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 748 
  if ((unsigned int)adapter->ahw.revision_id <= 47U) {
    
#line 749 
    __retres = -22;
    
#line 749 
    goto return_label;
  }
  else ;
  
#line 751 
  if ((unsigned int)adapter->is_up != 777U) {
    
#line 752 
    __retres = -22;
    
#line 752 
    goto return_label;
  }
  else ;
  
#line 758 
  if ((((((((((((((((((((ethcoal->rx_coalesce_usecs > 65535U || ethcoal->rx_max_coalesced_frames > 65535U) || ethcoal->tx_coalesce_usecs > 65535U) || ethcoal->tx_max_coalesced_frames > 65535U) || ethcoal->rx_coalesce_usecs_irq != 0U) || ethcoal->rx_max_coalesced_frames_irq != 0U) || ethcoal->tx_coalesce_usecs_irq != 0U) || ethcoal->tx_max_coalesced_frames_irq != 0U) || ethcoal->stats_block_coalesce_usecs != 0U) || ethcoal->use_adaptive_rx_coalesce != 0U) || ethcoal->use_adaptive_tx_coalesce != 0U) || ethcoal->pkt_rate_low != 0U) || ethcoal->rx_coalesce_usecs_low != 0U) || ethcoal->rx_max_coalesced_frames_low != 0U) || ethcoal->tx_coalesce_usecs_low != 0U) || ethcoal->tx_max_coalesced_frames_low != 0U) || ethcoal->pkt_rate_high != 0U) || ethcoal->rx_coalesce_usecs_high != 0U) || ethcoal->rx_max_coalesced_frames_high != 0U) || ethcoal->tx_coalesce_usecs_high != 0U) || ethcoal->tx_max_coalesced_frames_high != 0U) {
    
#line 779 
    __retres = -22;
    
#line 779 
    goto return_label;
  }
  else ;
  
#line 781 
  if (ethcoal->rx_coalesce_usecs == 0U || ethcoal->rx_max_coalesced_frames == 0U) {
    
#line 783 
    adapter->coal.flags = (unsigned short)4U;
    
#line 784 
    adapter->coal.normal.data.rx_time_us = (unsigned short)3U;
    
#line 786 
    adapter->coal.normal.data.rx_packets = (unsigned short)256U;
  }
  else {
    
#line 789 
    adapter->coal.flags = (unsigned short)0U;
    
#line 790 
    adapter->coal.normal.data.rx_time_us = (unsigned short)ethcoal->rx_coalesce_usecs;
    
#line 792 
    adapter->coal.normal.data.rx_packets = (unsigned short)ethcoal->rx_max_coalesced_frames;
  }
  
#line 795 
  adapter->coal.normal.data.tx_time_us = (unsigned short)ethcoal->tx_coalesce_usecs;
  
#line 796 
  adapter->coal.normal.data.tx_packets = (unsigned short)ethcoal->tx_max_coalesced_frames;
  
#line 799 
  netxen_config_intr_coalesce(adapter);
  
#line 801 
  __retres = 0;
  return_label: 
#line 801 
                return __retres;
}


#line 804  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_get_intr_coalesce(struct net_device *netdev, struct ethtool_coalesce *ethcoal)
{
  int __retres;
  
#line 807 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 809 
  if ((unsigned int)adapter->ahw.revision_id <= 47U) {
    
#line 810 
    __retres = -22;
    
#line 810 
    goto return_label;
  }
  else ;
  
#line 812 
  if ((unsigned int)adapter->is_up != 777U) {
    
#line 813 
    __retres = -22;
    
#line 813 
    goto return_label;
  }
  else ;
  
#line 815 
  ethcoal->rx_coalesce_usecs = (unsigned int)adapter->coal.normal.data.rx_time_us;
  
#line 816 
  ethcoal->tx_coalesce_usecs = (unsigned int)adapter->coal.normal.data.tx_time_us;
  
#line 817 
  ethcoal->rx_max_coalesced_frames = (unsigned int)adapter->coal.normal.data.rx_packets;
  
#line 819 
  ethcoal->tx_max_coalesced_frames = (unsigned int)adapter->coal.normal.data.tx_packets;
  
#line 822 
  __retres = 0;
  return_label: 
#line 822 
                return __retres;
}


#line 826  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_get_dump_flag(struct net_device *netdev, struct ethtool_dump *dump)
{
  int __retres;
  
#line 828 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 829 
  struct netxen_minidump *mdump = & adapter->mdump;
  
#line 830 
  if (adapter->fw_mdump_rdy != 0) 
#line 831 
                                  dump->len = mdump->md_dump_size; else 
                                                                    
#line 833 
                                                                    dump->len = 0U;
  
#line 835 
  if ((unsigned int)mdump->md_enabled == 0U) 
#line 836 
                                             dump->flag = 0U; else 
#line 838 
                                                                   dump->flag = (unsigned int)mdump->md_capture_mask;
  
#line 840 
  dump->version = adapter->fw_version;
  
#line 841 
  __retres = 0;
  
#line 841 
  return __retres;
}


#line 845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_set_dump(struct net_device *netdev, struct ethtool_dump *val)
{
  int __retres;
  int i;
  
#line 848 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 849 
  struct netxen_minidump *mdump = & adapter->mdump;
  
#line 851 
  switch (val->flag) {
    case (__u32)(-559022355): 
#line 852 
    ;
    
#line 853 
    if ((unsigned int)mdump->md_enabled == 0U) {
      
#line 854 
      netdev_info((struct net_device const *)netdev,"FW dump not enabled\n");
      
#line 855 
      __retres = 0;
      
#line 855 
      goto return_label;
    }
    else ;
    
#line 857 
    if (adapter->fw_mdump_rdy != 0) {
      
#line 858 
      netdev_info((struct net_device const *)netdev,"Previous dump not cleared, not forcing dump\n");
      
#line 859 
      __retres = 0;
      
#line 859 
      goto return_label;
    }
    else ;
    
#line 861 
    netdev_info((struct net_device const *)netdev,"Forcing a fw dump\n");
    
#line 862 
    nx_dev_request_reset(adapter);
    
#line 863 
    goto ldv_52297;
    case (__u32)195952365: 
#line 864 
    ;
    
#line 865 
    if ((unsigned int)mdump->md_enabled != 0U) {
      
#line 866 
      netdev_info((struct net_device const *)netdev,"Disabling FW Dump\n");
      
#line 867 
      mdump->md_enabled = (unsigned char)0U;
    }
    else ;
    
#line 869 
    goto ldv_52297;
    case (__u32)182320877: 
#line 870 
    ;
    
#line 871 
    if ((unsigned int)mdump->md_enabled == 0U) {
      
#line 872 
      netdev_info((struct net_device const *)netdev,"Enabling FW dump\n");
      
#line 873 
      mdump->md_enabled = (unsigned char)1U;
    }
    else ;
    
#line 875 
    goto ldv_52297;
    case (__u32)(-559030611): 
#line 876 
    ;
    
#line 877 
    netdev_info((struct net_device const *)netdev,"Forcing FW reset\n");
    
#line 878 
    nx_dev_request_reset(adapter);
    
#line 879 
    adapter->flags &= 4294967231U;
    
#line 880 
    goto ldv_52297;
    default: 
#line 881 
    ;
    
#line 882 
    i = 0;
    
#line 882 
    goto ldv_52306;
    ldv_52305: 
#line 883 
    ;
    
#line 883 
    if (val->flag == FW_DUMP_LEVELS[i]) {
      
#line 884 
      mdump->md_capture_mask = (unsigned char)val->flag;
      
#line 885 
      netdev_info((struct net_device const *)netdev,"Driver mask changed to: 0x%x\n",(int)mdump->md_capture_mask);
      
#line 888 
      __retres = 0;
      
#line 888 
      goto return_label;
    }
    else ;
    
#line 882 
    i += 1;
    ldv_52306: 
#line 883 
    ;
    
#line 882 
    if ((unsigned int)i <= 6U) 
#line 884 
                               goto ldv_52305; else 
#line 887 
                                                    goto ldv_52307;
    ldv_52307: 
#line 888 
    ;
    
#line 891 
    netdev_info((struct net_device const *)netdev,"Invalid dump level: 0x%x\n",val->flag);
    
#line 893 
    __retres = -22;
    
#line 893 
    goto return_label;
  }
  ldv_52297: 
#line 896 
  ;
  
#line 896 
  __retres = 0;
  return_label: 
#line 896 
                return __retres;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
static int netxen_get_dump_data(struct net_device *netdev, struct ethtool_dump *dump, void *buffer)
{
  int __retres;
  int i;
  int copy_sz;
  u32 *hdr_ptr;
  u32 *data;
  u32 *tmp_0;
  u32 *tmp_1;
  
#line 905 
  struct netxen_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 906 
  struct netxen_minidump *mdump = & adapter->mdump;
  
#line 909 
  if (adapter->fw_mdump_rdy == 0) {
    
#line 910 
    netdev_info((struct net_device const *)netdev,"Dump not available\n");
    
#line 911 
    __retres = -22;
    
#line 911 
    goto return_label;
  }
  else ;
  
#line 914 
  copy_sz = (int)mdump->md_template_size;
  
#line 915 
  hdr_ptr = (u32 *)mdump->md_template;
  
#line 916 
  data = (u32 *)buffer;
  
#line 917 
  i = 0;
  
#line 917 
  goto ldv_52320;
  ldv_52319: 
#line 918 
  ;
  
#line 918 
  tmp_0 = data;
  
#line 918 
  data += 1;
  
#line 918 
  tmp_1 = hdr_ptr;
  
#line 918 
  hdr_ptr += 1;
  
#line 918 
  *tmp_0 = *tmp_1;
  
#line 917 
  i += 1;
  ldv_52320: 
#line 918 
  ;
  
#line 917 
  if ((unsigned long)i < (unsigned long)copy_sz / 4UL) 
#line 919 
                                                       goto ldv_52319; else 
                                                                    
#line 922 
                                                                    goto ldv_52321;
  ldv_52321: 
#line 923 
  ;
  
#line 921 
  memcpy(buffer + copy_sz,(void const *)(mdump->md_capture_buff + mdump->md_template_size),(unsigned long)mdump->md_capture_size);
  
#line 924 
  dump->len = mdump->md_capture_size + (unsigned int)copy_sz;
  
#line 925 
  dump->flag = (unsigned int)mdump->md_capture_mask;
  
#line 928 
  vfree((void const *)mdump->md_capture_buff);
  
#line 929 
  mdump->md_capture_buff = (void *)0;
  
#line 930 
  adapter->fw_mdump_rdy = 0;
  
#line 931 
  netdev_info((struct net_device const *)netdev,"extracted the fw dump Successfully\n");
  
#line 932 
  __retres = 0;
  return_label: 
#line 932 
                return __retres;
}


#line 935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c"
struct ethtool_ops const netxen_nic_ethtool_ops = {.get_settings = & netxen_nic_get_settings, .set_settings = & netxen_nic_set_settings, .get_drvinfo = & netxen_nic_get_drvinfo, .get_regs_len = & netxen_nic_get_regs_len, .get_regs = & netxen_nic_get_regs, .get_wol = & netxen_nic_get_wol, .set_wol = & netxen_nic_set_wol, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = & netxen_nic_get_eeprom_len, .get_eeprom = & netxen_nic_get_eeprom, .set_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_coalesce = & netxen_get_intr_coalesce, .set_coalesce = & netxen_set_intr_coalesce, .get_ringparam = & netxen_nic_get_ringparam, .set_ringparam = & netxen_nic_set_ringparam, .get_pauseparam = & netxen_nic_get_pauseparam, .set_pauseparam = & netxen_nic_set_pauseparam, .self_test = & netxen_nic_diag_test, .get_strings = & netxen_nic_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & netxen_nic_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & netxen_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = & netxen_get_dump_flag, .get_dump_data = & netxen_get_dump_data, .set_dump = & netxen_set_dump, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_10)(struct net_device *) = & ethtool_op_get_link;

#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_set_wol_22(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 75 
  tmp = netxen_nic_set_wol(arg0,arg1);
  
#line 75 
  return tmp;
}


#line 79  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_wol_20(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 80 
  netxen_nic_get_wol(arg0,arg1);
  
#line 81 
  return;
}


#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_get_intr_coalesce_21(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 85 
  tmp = netxen_get_intr_coalesce(arg0,arg1);
  
#line 85 
  return tmp;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_get_dump_data_25(struct net_device *arg0, struct ethtool_dump *arg1, void *arg2)
{
  int tmp;
  
#line 90 
  tmp = netxen_get_dump_data(arg0,arg1,arg2);
  
#line 90 
  return tmp;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_regs_23(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 95 
  netxen_nic_get_regs(arg0,arg1,arg2);
  
#line 96 
  return;
}


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_get_settings_17(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 100 
  tmp = netxen_nic_get_settings(arg0,arg1);
  
#line 100 
  return tmp;
}


#line 104  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_set_pauseparam_31(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 105 
  tmp = netxen_nic_set_pauseparam(arg0,arg1);
  
#line 105 
  return tmp;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_diag_test_19(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 110 
  netxen_nic_diag_test(arg0,arg1,arg2);
  
#line 111 
  return;
}


#line 114  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_set_ringparam_14(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 115 
  tmp = netxen_nic_set_ringparam(arg0,arg1);
  
#line 115 
  return tmp;
}


#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_get_sset_count_24(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 120 
  tmp = netxen_get_sset_count(arg0,arg1);
  
#line 120 
  return tmp;
}


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 125 
  tmp = netxen_nic_get_eeprom(arg0,arg1,arg2);
  
#line 125 
  return tmp;
}


#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_get_regs_len_29(struct net_device *arg0)
{
  int tmp;
  
#line 130 
  tmp = netxen_nic_get_regs_len(arg0);
  
#line 130 
  return tmp;
}


#line 134  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 135 
  netxen_nic_get_pauseparam(arg0,arg1);
  
#line 136 
  return;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_get_dump_flag_26(struct net_device *arg0, struct ethtool_dump *arg1)
{
  int tmp;
  
#line 140 
  tmp = netxen_get_dump_flag(arg0,arg1);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_ringparam_28(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 145 
  netxen_nic_get_ringparam(arg0,arg1);
  
#line 146 
  return;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_set_dump_7(struct net_device *arg0, struct ethtool_dump *arg1)
{
  int tmp;
  
#line 150 
  tmp = netxen_set_dump(arg0,arg1);
  
#line 150 
  return tmp;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 155 
  netxen_nic_get_ethtool_stats(arg0,arg1,arg2);
  
#line 156 
  return;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_get_eeprom_len_33(struct net_device *arg0)
{
  int tmp;
  
#line 160 
  tmp = netxen_nic_get_eeprom_len(arg0);
  
#line 160 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_drvinfo_12(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 165 
  netxen_nic_get_drvinfo(arg0,arg1);
  
#line 166 
  return;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
void ldv_emg_wrapper_netxen_nic_get_strings_27(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 170 
  netxen_nic_get_strings(arg0,arg1,arg2);
  
#line 171 
  return;
}


#line 174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_nic_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 175 
  tmp = netxen_nic_set_settings(arg0,arg1);
  
#line 175 
  return tmp;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ethtool.c.aux"
int ldv_emg_wrapper_netxen_set_intr_coalesce_30(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 180 
  tmp = netxen_set_intr_coalesce(arg0,arg1);
  
#line 180 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
static void *kmalloc(size_t size, gfp_t flags);


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static void *dma_zalloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle, gfp_t flag)
{
  
#line 186 
  void *ret = dma_alloc_attrs(dev,size,dma_handle,flag | 32768U,(struct dma_attrs *)0);
  
#line 188 
  return ret;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_zalloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 26 
  ;
  
#line 26 
  ;
  
#line 26 
  if (hwdev != (struct pci_dev *)0) 
#line 26 
                                    tmp = & hwdev->dev; else 
#line 26 
                                                             tmp = (struct device *)0;
  
#line 26 
  tmp_0 = dma_zalloc_coherent(tmp,size,dma_handle,32U);
  
#line 26 
  return tmp_0;
}


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static u32 netxen_poll_rsp(struct netxen_adapter *adapter)
{
  u32 __retres;
  
#line 32 
  u32 rsp = 1U;
  
#line 33 
  int timeout = 0;
  ldv_52057: 
#line 34 
  ;
  
#line 37 
  msleep(1U);
  
#line 39 
  timeout += 1;
  
#line 39 
  if (timeout > 4000) {
    
#line 40 
    __retres = 3U;
    
#line 40 
    goto return_label;
  }
  else ;
  
#line 42 
  rsp = (*(adapter->crb_read))(adapter,136323608UL);
  
#line 43 
  if (rsp < (u32)0) 
#line 45 
                    goto ldv_52057; else 
#line 48 
                                         goto ldv_52058;
  ldv_52058: 
#line 49 
  ;
  
#line 45 
  __retres = rsp;
  return_label: 
#line 45 
                return __retres;
}


#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static u32 netxen_issue_cmd(struct netxen_adapter *adapter, struct netxen_cmd_args *cmd)
{
  u32 __retres;
  u32 rsp;
  int tmp;
  
#line 52 
  u32 signature = 0U;
  
#line 53 
  u32 rcode = 0U;
  
#line 55 
  signature = (unsigned int)((int)adapter->ahw.pci_func | -889323264);
  
#line 58 
  tmp = netxen_pcie_sem_lock(adapter,5,0U);
  
#line 58 
  if (tmp != 0) {
    
#line 59 
    __retres = 17U;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  (*(adapter->crb_write))(adapter,136323624UL,signature);
  
#line 63 
  (*(adapter->crb_write))(adapter,136323612UL,cmd->req.arg1);
  
#line 65 
  (*(adapter->crb_write))(adapter,136323616UL,cmd->req.arg2);
  
#line 67 
  (*(adapter->crb_write))(adapter,136323620UL,cmd->req.arg3);
  
#line 69 
  (*(adapter->crb_write))(adapter,136323608UL,cmd->req.cmd | 2147483648U);
  
#line 71 
  rsp = netxen_poll_rsp(adapter);
  
#line 73 
  if (rsp == 3U) {
    
#line 74 
    printk("\001",(char *)(& netxen_nic_driver_name));
    
#line 77 
    rcode = 17U;
  }
  else 
    
#line 78 
    if (rsp == 2U) {
      
#line 79 
      rcode = (*(adapter->crb_read))(adapter,136323612UL);
      
#line 81 
      printk("\001",(char *)(& netxen_nic_driver_name),rcode);
    }
    else 
      
#line 83 
      if (rsp == 1U) {
        
#line 84 
        cmd->rsp.cmd = 0U;
        
#line 85 
        if (cmd->rsp.arg2 != 0U) 
#line 86 
                                 cmd->rsp.arg2 = (*(adapter->crb_read))(adapter,136323616UL); else ;
        
#line 87 
        if (cmd->rsp.arg3 != 0U) 
#line 88 
                                 cmd->rsp.arg3 = (*(adapter->crb_read))(adapter,136323620UL); else ;
      }
      else ;
  
#line 91 
  if (cmd->rsp.arg1 != 0U) 
#line 92 
                           cmd->rsp.arg1 = (*(adapter->crb_read))(adapter,136323612UL); else ;
  
#line 94 
  netxen_pcie_sem_unlock(adapter,5);
  
#line 96 
  __retres = rcode;
  return_label: 
#line 96 
                return __retres;
}


#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static int netxen_get_minidump_template_size(struct netxen_adapter *adapter)
{
  int __retres;
  struct netxen_cmd_args cmd;
  
#line 103 
  memset((void *)(& cmd),0,32UL);
  
#line 104 
  cmd.req.cmd = 47U;
  
#line 105 
  memset((void *)(& cmd.rsp),1,16UL);
  
#line 106 
  netxen_issue_cmd(adapter,& cmd);
  
#line 107 
  if (cmd.rsp.cmd != 0U) {
    
#line 108 
    _dev_info((struct device const *)(& (adapter->pdev)->dev),"Can\'t get template size %d\n",cmd.rsp.cmd);
    
#line 110 
    __retres = -5;
    
#line 110 
    goto return_label;
  }
  else ;
  
#line 112 
  adapter->mdump.md_template_size = cmd.rsp.arg2;
  
#line 113 
  adapter->mdump.md_template_ver = cmd.rsp.arg3;
  
#line 114 
  __retres = 0;
  return_label: 
#line 114 
                return __retres;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static int netxen_get_minidump_template(struct netxen_adapter *adapter)
{
  int __retres;
  dma_addr_t md_template_addr;
  void *addr;
  u32 size;
  struct netxen_cmd_args cmd;
  
#line 124 
  size = adapter->mdump.md_template_size;
  
#line 126 
  if (size == 0U) {
    
#line 127 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Can not capture Minidump ");
    
#line 129 
    __retres = 6;
    
#line 129 
    goto return_label;
  }
  else ;
  
#line 132 
  addr = pci_zalloc_consistent(adapter->pdev,(unsigned long)size,& md_template_addr);
  
#line 133 
  if (addr == (void *)0) {
    
#line 134 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Unable to allocate dmable memory for template.\n");
    
#line 135 
    __retres = -12;
    
#line 135 
    goto return_label;
  }
  else ;
  
#line 138 
  memset((void *)(& cmd),0,32UL);
  
#line 139 
  memset((void *)(& cmd.rsp),1,16UL);
  
#line 140 
  cmd.req.cmd = 48U;
  
#line 141 
  cmd.req.arg1 = (unsigned int)md_template_addr;
  
#line 142 
  cmd.req.arg2 = (unsigned int)(md_template_addr >> 32);
  
#line 143 
  cmd.req.arg3 |= size;
  
#line 144 
  netxen_issue_cmd(adapter,& cmd);
  
#line 146 
  if (cmd.rsp.cmd == 0U && cmd.rsp.arg2 == size) 
#line 147 
                                                 memcpy(adapter->mdump.md_template,(void const *)addr,(unsigned long)size); else 
                                                                    
#line 149 
                                                                    dev_err((struct device const *)(& (adapter->pdev)->dev),"Failed to get minidump template, ",cmd.rsp.cmd,size,cmd.rsp.arg2);
  
#line 153 
  pci_free_consistent(adapter->pdev,(unsigned long)size,addr,md_template_addr);
  
#line 154 
  __retres = 0;
  return_label: 
#line 154 
                return __retres;
}


#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static u32 netxen_check_template_checksum(struct netxen_adapter *adapter)
{
  u32 __retres;
  u32 *tmp;
  int tmp_0;
  
#line 160 
  u64 sum = 0ULL;
  
#line 161 
  u32 *buff = (u32 *)adapter->mdump.md_template;
  
#line 162 
  int count = (int)(adapter->mdump.md_template_size / 4U);
  
#line 164 
  goto ldv_52084;
  ldv_52083: 
#line 165 
  ;
  
#line 165 
  tmp = buff;
  
#line 165 
  buff += 1;
  
#line 165 
  sum = (unsigned long long)*tmp + sum;
  ldv_52084: 
#line 166 
  ;
  
#line 164 
  tmp_0 = count;
  
#line 164 
  count -= 1;
  
#line 164 
  ;
  
#line 164 
  if (tmp_0 > 0) 
#line 166 
                 goto ldv_52083; else 
#line 169 
                                      goto ldv_52085;
  ldv_52085: 
#line 170 
  ;
  
#line 166 
  goto ldv_52087;
  ldv_52086: 
#line 167 
  ;
  
#line 167 
  sum = (sum & 4294967295ULL) + (sum >> 32);
  ldv_52087: 
#line 168 
  ;
  
#line 166 
  if (sum >> 32 != 0ULL) 
#line 168 
                         goto ldv_52086; else 
#line 171 
                                              goto ldv_52088;
  ldv_52088: 
#line 172 
  ;
  
#line 169 
  __retres = ~ ((unsigned int)sum);
  
#line 169 
  return __retres;
}


#line 173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
int netxen_setup_minidump(struct netxen_adapter *adapter)
{
  int __retres;
  int i;
  u32 *template;
  u32 *tmp_buf;
  struct netxen_minidump_template_hdr *hdr;
  u32 tmp;
  u32 *tmp_0;
  u32 *tmp_1;
  
#line 175 
  int err = 0;
  
#line 178 
  err = netxen_get_minidump_template_size(adapter);
  
#line 179 
  if (err != 0) {
    
#line 180 
    adapter->mdump.fw_supports_md = (unsigned char)0U;
    
#line 181 
    if ((unsigned int)err + 4294967281U <= 1U) 
#line 183 
                                               _dev_info((struct device const *)(& (adapter->pdev)->dev),"Flashed firmware version does not support minidump, ",4,0,579); else ;
    
#line 189 
    __retres = err;
    
#line 189 
    goto return_label;
  }
  else ;
  
#line 192 
  if (adapter->mdump.md_template_size == 0U) {
    
#line 193 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Error : Invalid template size ");
    
#line 195 
    __retres = -5;
    
#line 195 
    goto return_label;
  }
  else ;
  
#line 197 
  adapter->mdump.md_template = kmalloc((unsigned long)adapter->mdump.md_template_size,208U);
  
#line 200 
  if (adapter->mdump.md_template == (void *)0) {
    
#line 201 
    __retres = -12;
    
#line 201 
    goto return_label;
  }
  else ;
  
#line 203 
  err = netxen_get_minidump_template(adapter);
  
#line 204 
  if (err != 0) {
    
#line 205 
    if (err == 15) 
#line 206 
                   adapter->mdump.fw_supports_md = (unsigned char)0U; else ;
    
#line 207 
    goto free_template;
  }
  else ;
  
#line 210 
  tmp = netxen_check_template_checksum(adapter);
  
#line 210 
  if (tmp != 0U) {
    
#line 211 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Minidump template checksum Error\n");
    
#line 212 
    err = -5;
    
#line 213 
    goto free_template;
  }
  else ;
  
#line 216 
  adapter->mdump.md_capture_mask = (unsigned char)31U;
  
#line 217 
  tmp_buf = (u32 *)adapter->mdump.md_template;
  
#line 218 
  template = (u32 *)adapter->mdump.md_template;
  
#line 219 
  i = 0;
  
#line 219 
  goto ldv_52099;
  ldv_52098: 
#line 220 
  ;
  
#line 220 
  tmp_0 = template;
  
#line 220 
  template += 1;
  
#line 220 
  tmp_1 = tmp_buf;
  
#line 220 
  tmp_buf += 1;
  
#line 220 
  *tmp_0 = *tmp_1;
  
#line 219 
  i += 1;
  ldv_52099: 
#line 220 
  ;
  
#line 219 
  if ((unsigned long)i < (unsigned long)(adapter->mdump.md_template_size / 4U)) 
    
#line 221 
    goto ldv_52098; else 
#line 224 
                         goto ldv_52100;
  ldv_52100: 
#line 225 
  ;
  
#line 221 
  hdr = (struct netxen_minidump_template_hdr *)adapter->mdump.md_template;
  
#line 223 
  adapter->mdump.md_capture_buff = (void *)0;
  
#line 224 
  adapter->mdump.fw_supports_md = (unsigned char)1U;
  
#line 225 
  adapter->mdump.md_enabled = (unsigned char)0U;
  
#line 227 
  __retres = err;
  
#line 227 
  goto return_label;
  free_template: 
#line 229 
  ;
  
#line 230 
  kfree((void const *)adapter->mdump.md_template);
  
#line 231 
  adapter->mdump.md_template = (void *)0;
  
#line 232 
  __retres = err;
  return_label: 
#line 232 
                return __retres;
}


#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
int nx_fw_cmd_set_mtu(struct netxen_adapter *adapter, int mtu)
{
  int __retres;
  struct netxen_cmd_args cmd;
  
#line 239 
  u32 rcode = 0U;
  
#line 240 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 243 
  memset((void *)(& cmd),0,32UL);
  
#line 244 
  cmd.req.cmd = 18U;
  
#line 245 
  cmd.req.arg1 = (unsigned int)recv_ctx->context_id;
  
#line 246 
  cmd.req.arg2 = (unsigned int)mtu;
  
#line 247 
  cmd.req.arg3 = 0U;
  
#line 249 
  if (recv_ctx->state == 2U) 
#line 250 
                             netxen_issue_cmd(adapter,& cmd); else ;
  
#line 252 
  if (rcode != 0U) {
    
#line 253 
    __retres = -5;
    
#line 253 
    goto return_label;
  }
  else ;
  
#line 255 
  __retres = 0;
  return_label: 
#line 255 
                return __retres;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
int nx_fw_cmd_set_gbe_port(struct netxen_adapter *adapter, u32 speed, u32 duplex, u32 autoneg)
{
  int __retres;
  struct netxen_cmd_args cmd;
  u32 tmp;
  
#line 264 
  memset((void *)(& cmd),0,32UL);
  
#line 265 
  cmd.req.cmd = 31U;
  
#line 266 
  cmd.req.arg1 = speed;
  
#line 267 
  cmd.req.arg2 = duplex;
  
#line 268 
  cmd.req.arg3 = autoneg;
  
#line 269 
  tmp = netxen_issue_cmd(adapter,& cmd);
  
#line 269 
  __retres = (int)tmp;
  
#line 269 
  return __retres;
}


#line 273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static int nx_fw_cmd_create_rx_ctx(struct netxen_adapter *adapter)
{
  int __retres;
  void *addr;
  nx_hostrq_rx_ctx_t *prq;
  nx_cardrsp_rx_ctx_t *prsp;
  nx_hostrq_rds_ring_t *prq_rds;
  nx_hostrq_sds_ring_t *prq_sds;
  nx_cardrsp_rds_ring_t *prsp_rds;
  nx_cardrsp_sds_ring_t *prsp_sds;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_sds_ring *sds_ring;
  struct netxen_cmd_args cmd;
  dma_addr_t hostrq_phys_addr;
  dma_addr_t cardrsp_phys_addr;
  u64 phys_addr;
  int i;
  int nrds_rings;
  int nsds_rings;
  size_t rq_size;
  size_t rsp_size;
  u32 cap;
  u32 reg;
  u32 val;
  int err;
  u32 tmp;
  
#line 295 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 297 
  nrds_rings = (int)adapter->max_rds_rings;
  
#line 298 
  nsds_rings = (int)adapter->max_sds_rings;
  
#line 300 
  rq_size = ((unsigned long)nrds_rings * 24UL + (unsigned long)nsds_rings * 16UL) + 176UL;
  
#line 302 
  rsp_size = (((unsigned long)nrds_rings + (unsigned long)nsds_rings) + 19UL) * 8UL;
  
#line 305 
  addr = pci_alloc_consistent(adapter->pdev,rq_size,& hostrq_phys_addr);
  
#line 307 
  if (addr == (void *)0) {
    
#line 308 
    __retres = -12;
    
#line 308 
    goto return_label;
  }
  else ;
  
#line 309 
  prq = (nx_hostrq_rx_ctx_t *)addr;
  
#line 311 
  addr = pci_alloc_consistent(adapter->pdev,rsp_size,& cardrsp_phys_addr);
  
#line 313 
  if (addr == (void *)0) {
    
#line 314 
    err = -12;
    
#line 315 
    goto out_free_rq;
  }
  else ;
  
#line 317 
  prsp = (nx_cardrsp_rx_ctx_t *)addr;
  
#line 319 
  prq->host_rsp_dma_addr = cardrsp_phys_addr;
  
#line 321 
  cap = 5U;
  
#line 322 
  cap |= 384U;
  
#line 324 
  if ((adapter->flags & 128U) != 0U) 
#line 325 
                                     cap |= 2097152U; else ;
  
#line 327 
  prq->capabilities[0] = cap;
  
#line 328 
  prq->host_int_crb_mode = 1U;
  
#line 330 
  prq->host_rds_crb_mode = 0U;
  
#line 333 
  prq->num_rds_rings = (unsigned short)nrds_rings;
  
#line 334 
  prq->num_sds_rings = (unsigned short)nsds_rings;
  
#line 335 
  prq->rds_ring_offset = 0U;
  
#line 337 
  val = prq->rds_ring_offset + (unsigned int)((unsigned long)nrds_rings) * 24U;
  
#line 339 
  prq->sds_ring_offset = val;
  
#line 341 
  prq_rds = (nx_hostrq_rds_ring_t *)(& prq->data) + prq->rds_ring_offset;
  
#line 344 
  i = 0;
  
#line 344 
  goto ldv_52143;
  ldv_52142: 
#line 345 
  ;
  
#line 346 
  rds_ring = recv_ctx->rds_rings + i;
  
#line 348 
  (prq_rds + i)->host_phys_addr = rds_ring->phys_addr;
  
#line 349 
  (prq_rds + i)->ring_size = rds_ring->num_desc;
  
#line 350 
  (prq_rds + i)->ring_kind = (unsigned int)i;
  
#line 351 
  (prq_rds + i)->buff_size = (unsigned long long)rds_ring->dma_size;
  
#line 344 
  i += 1;
  ldv_52143: 
#line 345 
  ;
  
#line 344 
  if (i < nrds_rings) 
#line 346 
                      goto ldv_52142; else 
#line 349 
                                           goto ldv_52144;
  ldv_52144: 
#line 350 
  ;
  
#line 354 
  prq_sds = (nx_hostrq_sds_ring_t *)(& prq->data) + prq->sds_ring_offset;
  
#line 357 
  i = 0;
  
#line 357 
  goto ldv_52146;
  ldv_52145: 
#line 358 
  ;
  
#line 359 
  sds_ring = recv_ctx->sds_rings + i;
  
#line 361 
  (prq_sds + i)->host_phys_addr = sds_ring->phys_addr;
  
#line 362 
  (prq_sds + i)->ring_size = sds_ring->num_desc;
  
#line 363 
  (prq_sds + i)->msi_index = (unsigned short)i;
  
#line 357 
  i += 1;
  ldv_52146: 
#line 358 
  ;
  
#line 357 
  if (i < nsds_rings) 
#line 359 
                      goto ldv_52145; else 
#line 362 
                                           goto ldv_52147;
  ldv_52147: 
#line 363 
  ;
  
#line 366 
  phys_addr = hostrq_phys_addr;
  
#line 367 
  memset((void *)(& cmd),0,32UL);
  
#line 368 
  cmd.req.arg1 = (unsigned int)(phys_addr >> 32);
  
#line 369 
  cmd.req.arg2 = (unsigned int)phys_addr;
  
#line 370 
  cmd.req.arg3 = (unsigned int)rq_size;
  
#line 371 
  cmd.req.cmd = 7U;
  
#line 372 
  tmp = netxen_issue_cmd(adapter,& cmd);
  
#line 372 
  err = (int)tmp;
  
#line 373 
  if (err != 0) {
    
#line 374 
    printk("\001",err);
    
#line 376 
    goto out_free_rsp;
  }
  else ;
  
#line 380 
  prsp_rds = (nx_cardrsp_rds_ring_t *)(& prsp->data[prsp->rds_ring_offset]);
  
#line 383 
  i = 0;
  
#line 383 
  goto ldv_52150;
  ldv_52149: 
#line 384 
  ;
  
#line 384 
  rds_ring = recv_ctx->rds_rings + i;
  
#line 386 
  reg = (prsp_rds + i)->host_producer_crb;
  
#line 387 
  rds_ring->crb_rcv_producer = netxen_get_ioaddr(adapter,reg + 136323072U);
  
#line 383 
  i += 1;
  ldv_52150: 
#line 384 
  ;
  
#line 383 
  if ((int)prsp->num_rds_rings > i) 
#line 385 
                                    goto ldv_52149; else 
#line 388 
                                                         goto ldv_52151;
  ldv_52151: 
#line 389 
  ;
  
#line 391 
  prsp_sds = (nx_cardrsp_sds_ring_t *)(& prsp->data[prsp->sds_ring_offset]);
  
#line 394 
  i = 0;
  
#line 394 
  goto ldv_52153;
  ldv_52152: 
#line 395 
  ;
  
#line 395 
  sds_ring = recv_ctx->sds_rings + i;
  
#line 397 
  reg = (prsp_sds + i)->host_consumer_crb;
  
#line 398 
  sds_ring->crb_sts_consumer = netxen_get_ioaddr(adapter,reg + 136323072U);
  
#line 401 
  reg = (prsp_sds + i)->interrupt_crb;
  
#line 402 
  sds_ring->crb_intr_mask = netxen_get_ioaddr(adapter,reg + 136323072U);
  
#line 394 
  i += 1;
  ldv_52153: 
#line 395 
  ;
  
#line 394 
  if ((int)prsp->num_sds_rings > i) 
#line 396 
                                    goto ldv_52152; else 
#line 399 
                                                         goto ldv_52154;
  ldv_52154: 
#line 400 
  ;
  
#line 406 
  recv_ctx->state = prsp->host_ctx_state;
  
#line 407 
  recv_ctx->context_id = prsp->context_id;
  
#line 408 
  recv_ctx->virt_port = (unsigned short)prsp->virt_port;
  out_free_rsp: 
#line 410 
  ;
  
#line 411 
  pci_free_consistent(adapter->pdev,rsp_size,(void *)prsp,cardrsp_phys_addr);
  out_free_rq: 
#line 412 
  ;
  
#line 413 
  pci_free_consistent(adapter->pdev,rq_size,(void *)prq,hostrq_phys_addr);
  
#line 414 
  __retres = err;
  return_label: 
#line 414 
                return __retres;
}


#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static void nx_fw_cmd_destroy_rx_ctx(struct netxen_adapter *adapter)
{
  struct netxen_cmd_args cmd;
  u32 tmp;
  
#line 420 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 423 
  memset((void *)(& cmd),0,32UL);
  
#line 424 
  cmd.req.arg1 = (unsigned int)recv_ctx->context_id;
  
#line 425 
  cmd.req.arg2 = 0U;
  
#line 426 
  cmd.req.arg3 = 0U;
  
#line 427 
  cmd.req.cmd = 8U;
  
#line 429 
  tmp = netxen_issue_cmd(adapter,& cmd);
  
#line 429 
  if (tmp != 0U) 
#line 430 
                 printk("\001",(char *)(& netxen_nic_driver_name)); else ;
  
#line 433 
  return;
}


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static int nx_fw_cmd_create_tx_ctx(struct netxen_adapter *adapter)
{
  int __retres;
  nx_hostrq_tx_ctx_t *prq;
  nx_hostrq_cds_ring_t *prq_cds;
  nx_cardrsp_tx_ctx_t *prsp;
  void *rq_addr;
  void *rsp_addr;
  size_t rq_size;
  size_t rsp_size;
  u32 temp;
  u64 offset;
  u64 phys_addr;
  dma_addr_t rq_phys_addr;
  dma_addr_t rsp_phys_addr;
  struct netxen_cmd_args cmd;
  u32 tmp;
  
#line 445 
  int err = 0;
  
#line 448 
  struct nx_host_tx_ring *tx_ring = adapter->tx_ring;
  
#line 449 
  struct netxen_recv_context *recv_ctx = & adapter->recv_ctx;
  
#line 452 
  rq_size = 200UL;
  
#line 453 
  rq_addr = pci_alloc_consistent(adapter->pdev,rq_size,& rq_phys_addr);
  
#line 455 
  if (rq_addr == (void *)0) {
    
#line 456 
    __retres = -12;
    
#line 456 
    goto return_label;
  }
  else ;
  
#line 458 
  rsp_size = 144UL;
  
#line 459 
  rsp_addr = pci_alloc_consistent(adapter->pdev,rsp_size,& rsp_phys_addr);
  
#line 461 
  if (rsp_addr == (void *)0) {
    
#line 462 
    err = -12;
    
#line 463 
    goto out_free_rq;
  }
  else ;
  
#line 466 
  memset(rq_addr,0,rq_size);
  
#line 467 
  prq = (nx_hostrq_tx_ctx_t *)rq_addr;
  
#line 469 
  memset(rsp_addr,0,rsp_size);
  
#line 470 
  prsp = (nx_cardrsp_tx_ctx_t *)rsp_addr;
  
#line 472 
  prq->host_rsp_dma_addr = rsp_phys_addr;
  
#line 474 
  temp = 69U;
  
#line 475 
  prq->capabilities[0] = temp;
  
#line 477 
  prq->host_int_crb_mode = 1U;
  
#line 480 
  prq->interrupt_ctl = (unsigned short)0U;
  
#line 481 
  prq->msi_index = (unsigned short)0U;
  
#line 483 
  prq->dummy_dma_addr = adapter->dummy_dma.phys_addr;
  
#line 485 
  offset = recv_ctx->phys_addr + 192ULL;
  
#line 486 
  prq->cmd_cons_dma_addr = offset;
  
#line 488 
  prq_cds = & prq->cds_ring;
  
#line 490 
  prq_cds->host_phys_addr = tx_ring->phys_addr;
  
#line 491 
  prq_cds->ring_size = tx_ring->num_desc;
  
#line 493 
  phys_addr = rq_phys_addr;
  
#line 494 
  memset((void *)(& cmd),0,32UL);
  
#line 495 
  cmd.req.arg1 = (unsigned int)(phys_addr >> 32);
  
#line 496 
  cmd.req.arg2 = (unsigned int)phys_addr;
  
#line 497 
  cmd.req.arg3 = (unsigned int)rq_size;
  
#line 498 
  cmd.req.cmd = 9U;
  
#line 499 
  tmp = netxen_issue_cmd(adapter,& cmd);
  
#line 499 
  err = (int)tmp;
  
#line 501 
  if (err == 0) {
    
#line 502 
    temp = prsp->cds_ring.host_producer_crb;
    
#line 503 
    tx_ring->crb_cmd_producer = netxen_get_ioaddr(adapter,temp + 136323072U);
    
#line 509 
    adapter->tx_context_id = prsp->context_id;
  }
  else {
    
#line 512 
    printk("\001",err);
    
#line 514 
    err = -5;
  }
  
#line 517 
  pci_free_consistent(adapter->pdev,rsp_size,rsp_addr,rsp_phys_addr);
  out_free_rq: 
#line 519 
  ;
  
#line 520 
  pci_free_consistent(adapter->pdev,rq_size,rq_addr,rq_phys_addr);
  
#line 522 
  __retres = err;
  return_label: 
#line 522 
                return __retres;
}


#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static void nx_fw_cmd_destroy_tx_ctx(struct netxen_adapter *adapter)
{
  struct netxen_cmd_args cmd;
  u32 tmp;
  
#line 530 
  memset((void *)(& cmd),0,32UL);
  
#line 531 
  cmd.req.arg1 = (unsigned int)adapter->tx_context_id;
  
#line 532 
  cmd.req.arg2 = 0U;
  
#line 533 
  cmd.req.arg3 = 0U;
  
#line 534 
  cmd.req.cmd = 10U;
  
#line 535 
  tmp = netxen_issue_cmd(adapter,& cmd);
  
#line 535 
  if (tmp != 0U) 
#line 536 
                 printk("\001",(char *)(& netxen_nic_driver_name)); else ;
  
#line 539 
  return;
}


#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
int nx_fw_cmd_query_phy(struct netxen_adapter *adapter, u32 reg, u32 *val)
{
  int __retres;
  u32 rcode;
  struct netxen_cmd_args cmd;
  
#line 548 
  memset((void *)(& cmd),0,32UL);
  
#line 549 
  cmd.req.arg1 = reg;
  
#line 550 
  cmd.req.arg2 = 0U;
  
#line 551 
  cmd.req.arg3 = 0U;
  
#line 552 
  cmd.req.cmd = 19U;
  
#line 553 
  cmd.rsp.arg1 = 1U;
  
#line 554 
  rcode = netxen_issue_cmd(adapter,& cmd);
  
#line 555 
  if (rcode != 0U) {
    
#line 556 
    __retres = -5;
    
#line 556 
    goto return_label;
  }
  else ;
  
#line 558 
  if (val == (u32 *)0U) {
    
#line 559 
    __retres = -5;
    
#line 559 
    goto return_label;
  }
  else ;
  
#line 561 
  *val = cmd.rsp.arg1;
  
#line 562 
  __retres = 0;
  return_label: 
#line 562 
                return __retres;
}


#line 566  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
int nx_fw_cmd_set_phy(struct netxen_adapter *adapter, u32 reg, u32 val)
{
  int __retres;
  u32 rcode;
  struct netxen_cmd_args cmd;
  
#line 571 
  memset((void *)(& cmd),0,32UL);
  
#line 572 
  cmd.req.arg1 = reg;
  
#line 573 
  cmd.req.arg2 = val;
  
#line 574 
  cmd.req.arg3 = 0U;
  
#line 575 
  cmd.req.cmd = 20U;
  
#line 576 
  rcode = netxen_issue_cmd(adapter,& cmd);
  
#line 577 
  if (rcode != 0U) {
    
#line 578 
    __retres = -5;
    
#line 578 
    goto return_label;
  }
  else ;
  
#line 580 
  __retres = 0;
  return_label: 
#line 580 
                return __retres;
}


#line 583  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static u64 ctx_addr_sig_regs[4U][3U] = {{136323976ULL, 136323980ULL, 136324032ULL}, {136323984ULL, 136323988ULL, 136324036ULL}, {136323992ULL, 136323996ULL, 136324040ULL}, {136324000ULL, 136324004ULL, 136324044ULL}};

#line 597  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static struct netxen_recv_crb recv_crb_registers[4U] = {{.crb_rcv_producer = {136323840U, 136323856U, 136323872U}, .crb_sts_consumer = {136323896U, 136324864U, 136324868U, 136324872U}, .sw_int_mask = {136324056U, 136324932U, 136324936U, 136324940U}}, {.crb_rcv_producer = {136323908U, 136323924U, 136323940U}, .crb_sts_consumer = {136323964U, 136324896U, 136324900U, 136324904U}, .sw_int_mask = {136324064U, 136324964U, 136324968U, 136324972U}}, {.crb_rcv_producer = {136324056U, 136324088U, 136324104U}, .crb_sts_consumer = {136324128U, 136324924U, 136324924U, 136324924U}, .sw_int_mask = {136324068U, 136324924U, 136324924U, 136324924U}}, {.crb_rcv_producer = {136324140U, 136324156U, 136324172U}, .crb_sts_consumer = {136324196U, 136324924U, 136324924U, 136324924U}, .sw_int_mask = {136324072U, 136324924U, 136324924U, 136324924U}}};

#line 701  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
static int netxen_init_old_ctx(struct netxen_adapter *adapter)
{
  int __retres;
  struct netxen_recv_context *recv_ctx;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_sds_ring *sds_ring;
  struct nx_host_tx_ring *tx_ring;
  int ring;
  struct netxen_ring_ctx *hwctx;
  u32 signature;
  int tmp;
  
#line 708 
  int port = (int)adapter->portnum;
  
#line 712 
  tx_ring = adapter->tx_ring;
  
#line 713 
  recv_ctx = & adapter->recv_ctx;
  
#line 714 
  hwctx = recv_ctx->hwctx;
  
#line 716 
  hwctx->cmd_ring_addr = tx_ring->phys_addr;
  
#line 717 
  hwctx->cmd_ring_size = tx_ring->num_desc;
  
#line 720 
  ring = 0;
  
#line 720 
  goto ldv_52212;
  ldv_52211: 
#line 721 
  ;
  
#line 721 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 723 
  hwctx->rcv_rings[ring].addr = rds_ring->phys_addr;
  
#line 725 
  hwctx->rcv_rings[ring].size = rds_ring->num_desc;
  
#line 720 
  ring += 1;
  ldv_52212: 
#line 721 
  ;
  
#line 720 
  if ((int)adapter->max_rds_rings > ring) 
#line 722 
                                          goto ldv_52211; else 
#line 725 
                                                               goto ldv_52213;
  ldv_52213: 
#line 726 
  ;
  
#line 729 
  ring = 0;
  
#line 729 
  goto ldv_52215;
  ldv_52214: 
#line 730 
  ;
  
#line 730 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 732 
  if (ring == 0) {
    
#line 733 
    hwctx->sts_ring_addr = sds_ring->phys_addr;
    
#line 734 
    hwctx->sts_ring_size = sds_ring->num_desc;
  }
  else ;
  
#line 736 
  hwctx->sts_rings[ring].addr = sds_ring->phys_addr;
  
#line 737 
  hwctx->sts_rings[ring].size = sds_ring->num_desc;
  
#line 738 
  hwctx->sts_rings[ring].msi_index = (unsigned short)ring;
  
#line 729 
  ring += 1;
  ldv_52215: 
#line 730 
  ;
  
#line 729 
  if ((int)adapter->max_sds_rings > ring) 
#line 731 
                                          goto ldv_52214; else 
#line 734 
                                                               goto ldv_52216;
  ldv_52216: 
#line 735 
  ;
  
#line 740 
  hwctx->sts_ring_count = (unsigned int)adapter->max_sds_rings;
  
#line 743 
  if ((unsigned int)adapter->max_sds_rings > 1U) 
#line 743 
                                                 tmp = 188128; else 
#line 743 
                                                                    tmp = 57056;
  
#line 742 
  signature = (unsigned int)tmp;
  
#line 745 
  (*(adapter->crb_write))(adapter,(unsigned long)ctx_addr_sig_regs[port][0],(unsigned int)recv_ctx->phys_addr);
  
#line 747 
  (*(adapter->crb_write))(adapter,(unsigned long)ctx_addr_sig_regs[port][2],(unsigned int)(recv_ctx->phys_addr >> 32));
  
#line 749 
  (*(adapter->crb_write))(adapter,(unsigned long)ctx_addr_sig_regs[port][1],signature | (unsigned int)port);
  
#line 751 
  __retres = 0;
  
#line 751 
  return __retres;
}


#line 754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
int netxen_alloc_hw_resources(struct netxen_adapter *adapter)
{
  int __retres;
  void *addr;
  int ring;
  struct netxen_recv_context *recv_ctx;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_sds_ring *sds_ring;
  struct nx_host_tx_ring *tx_ring;
  
#line 757 
  int err = 0;
  
#line 764 
  struct pci_dev *pdev = adapter->pdev;
  
#line 765 
  struct net_device *netdev = adapter->netdev;
  
#line 766 
  int port = (int)adapter->portnum;
  
#line 768 
  recv_ctx = & adapter->recv_ctx;
  
#line 769 
  tx_ring = adapter->tx_ring;
  
#line 771 
  addr = pci_alloc_consistent(pdev,196UL,& recv_ctx->phys_addr);
  
#line 774 
  if (addr == (void *)0) {
    
#line 775 
    dev_err((struct device const *)(& pdev->dev),"failed to allocate hw context\n");
    
#line 776 
    __retres = -12;
    
#line 776 
    goto return_label;
  }
  else ;
  
#line 779 
  memset(addr,0,192UL);
  
#line 780 
  recv_ctx->hwctx = (struct netxen_ring_ctx *)addr;
  
#line 781 
  (recv_ctx->hwctx)->ctx_id = (unsigned int)port;
  
#line 782 
  (recv_ctx->hwctx)->cmd_consumer_offset = recv_ctx->phys_addr + 192ULL;
  
#line 785 
  tx_ring->hw_consumer = (__le32 *)addr + 192U;
  
#line 789 
  addr = pci_alloc_consistent(pdev,(unsigned long)tx_ring->num_desc * 64UL,& tx_ring->phys_addr);
  
#line 792 
  if (addr == (void *)0) {
    
#line 793 
    dev_err((struct device const *)(& pdev->dev),"%s: failed to allocate tx desc ring\n",(char *)(& netdev->name));
    
#line 795 
    err = -12;
    
#line 796 
    goto err_out_free;
  }
  else ;
  
#line 799 
  tx_ring->desc_head = (struct cmd_desc_type0 *)addr;
  
#line 801 
  ring = 0;
  
#line 801 
  goto ldv_52232;
  ldv_52231: 
#line 802 
  ;
  
#line 802 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 803 
  addr = pci_alloc_consistent(adapter->pdev,(unsigned long)rds_ring->num_desc * 16UL,& rds_ring->phys_addr);
  
#line 806 
  if (addr == (void *)0) {
    
#line 807 
    dev_err((struct device const *)(& pdev->dev),"%s: failed to allocate rds ring [%d]\n",(char *)(& netdev->name),ring);
    
#line 810 
    err = -12;
    
#line 811 
    goto err_out_free;
  }
  else ;
  
#line 813 
  rds_ring->desc_head = (struct rcv_desc *)addr;
  
#line 815 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) 
#line 816 
                                                     rds_ring->crb_rcv_producer = netxen_get_ioaddr(adapter,recv_crb_registers[port].crb_rcv_producer[ring]); else ;
  
#line 801 
  ring += 1;
  ldv_52232: 
#line 802 
  ;
  
#line 801 
  if ((int)adapter->max_rds_rings > ring) 
#line 803 
                                          goto ldv_52231; else 
#line 806 
                                                               goto ldv_52233;
  ldv_52233: 
#line 807 
  ;
  
#line 821 
  ring = 0;
  
#line 821 
  goto ldv_52235;
  ldv_52234: 
#line 822 
  ;
  
#line 822 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 824 
  addr = pci_alloc_consistent(adapter->pdev,(unsigned long)sds_ring->num_desc * 16UL,& sds_ring->phys_addr);
  
#line 827 
  if (addr == (void *)0) {
    
#line 828 
    dev_err((struct device const *)(& pdev->dev),"%s: failed to allocate sds ring [%d]\n",(char *)(& netdev->name),ring);
    
#line 831 
    err = -12;
    
#line 832 
    goto err_out_free;
  }
  else ;
  
#line 834 
  sds_ring->desc_head = (struct status_desc *)addr;
  
#line 836 
  if ((unsigned int)adapter->ahw.revision_id <= 37U) {
    
#line 837 
    sds_ring->crb_sts_consumer = netxen_get_ioaddr(adapter,recv_crb_registers[port].crb_sts_consumer[ring]);
    
#line 841 
    sds_ring->crb_intr_mask = netxen_get_ioaddr(adapter,recv_crb_registers[port].sw_int_mask[ring]);
  }
  else ;
  
#line 821 
  ring += 1;
  ldv_52235: 
#line 822 
  ;
  
#line 821 
  if ((int)adapter->max_sds_rings > ring) 
#line 823 
                                          goto ldv_52234; else 
#line 826 
                                                               goto ldv_52236;
  ldv_52236: 
#line 827 
  ;
  
#line 848 
  if ((unsigned int)adapter->ahw.revision_id > 37U) {
    int tmp;
    
#line 849 
    tmp = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
    
#line 849 
    if (tmp != 0) 
#line 850 
                  goto done; else ;
    
#line 851 
    err = nx_fw_cmd_create_rx_ctx(adapter);
    
#line 852 
    if (err != 0) 
#line 853 
                  goto err_out_free; else ;
    
#line 854 
    err = nx_fw_cmd_create_tx_ctx(adapter);
    
#line 855 
    if (err != 0) 
#line 856 
                  goto err_out_free; else ;
  }
  else {
    
#line 858 
    err = netxen_init_old_ctx(adapter);
    
#line 859 
    if (err != 0) 
#line 860 
                  goto err_out_free; else ;
  }
  done: 
#line 863 
  ;
  
#line 864 
  __retres = 0;
  
#line 864 
  goto return_label;
  err_out_free: 
#line 866 
  ;
  
#line 867 
  netxen_free_hw_resources(adapter);
  
#line 868 
  __retres = err;
  return_label: 
#line 868 
                return __retres;
}


#line 871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/qlogic/netxen/netxen_nic_ctx.c"
void netxen_free_hw_resources(struct netxen_adapter *adapter)
{
  struct netxen_recv_context *recv_ctx;
  struct nx_host_rds_ring *rds_ring;
  struct nx_host_sds_ring *sds_ring;
  struct nx_host_tx_ring *tx_ring;
  int ring;
  
#line 879 
  int port = (int)adapter->portnum;
  
#line 881 
  if ((unsigned int)adapter->ahw.revision_id > 37U) {
    int tmp;
    
#line 882 
    tmp = test_and_set_bit(0L,(unsigned long volatile *)(& adapter->state));
    
#line 882 
    if (tmp == 0) 
#line 883 
                  goto done; else ;
    
#line 885 
    nx_fw_cmd_destroy_rx_ctx(adapter);
    
#line 886 
    nx_fw_cmd_destroy_tx_ctx(adapter);
  }
  else {
    
#line 888 
    netxen_pcie_sem_lock(adapter,5,0U);
    
#line 889 
    (*(adapter->crb_write))(adapter,(unsigned long)ctx_addr_sig_regs[port][1],(unsigned int)(port | 44224));
    
#line 891 
    netxen_pcie_sem_unlock(adapter,5);
  }
  
#line 895 
  msleep(20U);
  done: 
#line 897 
  ;
  
#line 898 
  recv_ctx = & adapter->recv_ctx;
  
#line 900 
  if (recv_ctx->hwctx != (struct netxen_ring_ctx *)0) {
    
#line 901 
    pci_free_consistent(adapter->pdev,196UL,(void *)recv_ctx->hwctx,recv_ctx->phys_addr);
    
#line 906 
    recv_ctx->hwctx = (struct netxen_ring_ctx *)0;
  }
  else ;
  
#line 909 
  tx_ring = adapter->tx_ring;
  
#line 910 
  if (tx_ring->desc_head != (struct cmd_desc_type0 *)0) {
    
#line 911 
    pci_free_consistent(adapter->pdev,(unsigned long)tx_ring->num_desc * 64UL,(void *)tx_ring->desc_head,tx_ring->phys_addr);
    
#line 914 
    tx_ring->desc_head = (struct cmd_desc_type0 *)0;
  }
  else ;
  
#line 917 
  ring = 0;
  
#line 917 
  goto ldv_52249;
  ldv_52248: 
#line 918 
  ;
  
#line 918 
  rds_ring = recv_ctx->rds_rings + ring;
  
#line 920 
  if (rds_ring->desc_head != (struct rcv_desc *)0) {
    
#line 921 
    pci_free_consistent(adapter->pdev,(unsigned long)rds_ring->num_desc * 16UL,(void *)rds_ring->desc_head,rds_ring->phys_addr);
    
#line 925 
    rds_ring->desc_head = (struct rcv_desc *)0;
  }
  else ;
  
#line 917 
  ring += 1;
  ldv_52249: 
#line 918 
  ;
  
#line 917 
  if ((int)adapter->max_rds_rings > ring) 
#line 919 
                                          goto ldv_52248; else 
#line 922 
                                                               goto ldv_52250;
  ldv_52250: 
#line 923 
  ;
  
#line 929 
  ring = 0;
  
#line 929 
  goto ldv_52252;
  ldv_52251: 
#line 930 
  ;
  
#line 930 
  sds_ring = recv_ctx->sds_rings + ring;
  
#line 932 
  if (sds_ring->desc_head != (struct status_desc *)0) {
    
#line 933 
    pci_free_consistent(adapter->pdev,(unsigned long)sds_ring->num_desc * 16UL,(void *)sds_ring->desc_head,sds_ring->phys_addr);
    
#line 937 
    sds_ring->desc_head = (struct status_desc *)0;
  }
  else ;
  
#line 929 
  ring += 1;
  ldv_52252: 
#line 930 
  ;
  
#line 929 
  if ((int)adapter->max_sds_rings > ring) 
#line 931 
                                          goto ldv_52251; else 
#line 934 
                                                               goto ldv_52253;
  ldv_52253: 
#line 935 
  ;
  
#line 936 
  return;
}


#line 473  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/weaver/.tmp_netxen_nic_ctx.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 476 
  tmp = ldv_kmalloc(size,flags);
  
#line 476 
  return tmp;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 99  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_devattr_instance_18(void *arg0);


#line 101 
void ldv_dispatch_register_9_3(struct pci_driver *arg0);


#line 102 
int main(void);


#line 103 
void *ldv_interrupt_scenario_16(void *arg0);


#line 105 
void ldv_dispatch_register_11_3(struct device *arg0, struct device_attribute *arg1);


#line 107 
void ldv_dispatch_register_8_4(struct net_device *arg0);


#line 108 
void ldv_dispatch_irq_deregister_5_1(int arg0);


#line 109 
void *ldv_devattr_instance_14(void *arg0);


#line 111 
void ldv_dispatch_deregister_7_1(struct pci_driver *arg0);


#line 113 
void *ldv_initialization_1(void *arg0);


#line 114 
void ldv_dispatch_irq_register_13_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 116 
void ldv_dispatch_deregister_4_1(struct net_device *arg0);


#line 118 
void *ldv_pci_scenario_17(void *arg0);


#line 121 
void *ldv_random_allocationless_scenario_15(void *arg0);


#line 123 
void ldv_dispatch_deregister_12_1(struct device *arg0, struct device_attribute *arg1);


#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_delayed_work(struct delayed_work *arg0, unsigned long arg1)
{
  _Bool __retres;
  struct work_struct *ldv_6_ldv_param_0_2;
  struct delayed_work *ldv_6_delayed_work;
  int tmp_0;
  
#line 143 
  tmp_0 = ldv_undef_int();
  
#line 143 
  if (tmp_0 != 0) {
    
#line 145 
    ldv_6_delayed_work = arg0;
    
#line 149 
    ldv_6_ldv_param_0_2 = (struct work_struct *)ldv_xmalloc_unknown_size(0UL);
    
#line 153 
    if (ldv_6_delayed_work->work.func != (void (*)(struct work_struct *))0) 
      
#line 155 
      (*(ldv_6_delayed_work->work.func))(ldv_6_ldv_param_0_2); else ;
    
#line 160 
    ldv_free((void *)ldv_6_ldv_param_0_2);
    
#line 164 
    __retres = (_Bool)1;
    
#line 164 
    goto return_label;
  }
  else {
    
#line 171 
    __retres = (_Bool)0;
    
#line 171 
    goto return_label;
  }
  return_label: 
#line 143 
                return __retres;
}


#line 181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_devattr_instance_18(void *arg0)
{
  void *__retres;
  char *ldv_18_ldv_param_2_4;
  unsigned long ldv_18_ldv_param_3_3;
  char *ldv_18_ldv_param_2_2;
  struct device *ldv_18_device;
  int tmp;
  
#line 184 
  struct device_attribute *ldv_18_devattr = ldv_emg_alias_dev_attr_bridged_mode_3;
  
#line 190 
  struct ldv_struct_devattr_instance_14 *data = (struct ldv_struct_devattr_instance_14 *)arg0;
  
#line 195 
  if (data != (struct ldv_struct_devattr_instance_14 *)0) {
    
#line 196 
    ldv_18_device = data->arg0;
    
#line 197 
    ldv_18_devattr = data->arg1;
    
#line 198 
    ldv_free((void *)data);
  }
  else ;
  
#line 206 
  goto ldv_main_18;
  
#line 208 
  __retres = (void *)0;
  
#line 208 
  goto return_label;
  ldv_main_18: 
#line 211 
  ;
  
#line 214 
  tmp = ldv_undef_int();
  
#line 214 
  switch (tmp) {
    case 1: 
#line 215 
    ;
    
#line 217 
    ldv_18_ldv_param_2_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 222 
    ldv_emg_wrapper_netxen_show_bridged_mode_2(ldv_18_device,ldv_18_devattr,ldv_18_ldv_param_2_4);
    
#line 226 
    ldv_free((void *)ldv_18_ldv_param_2_4);
    
#line 233 
    goto ldv_main_18;
    case 2: 
#line 236 
    ;
    
#line 238 
    ldv_18_ldv_param_2_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 243 
    ldv_emg_wrapper_netxen_store_bridged_mode_4(ldv_18_device,ldv_18_devattr,ldv_18_ldv_param_2_2,ldv_18_ldv_param_3_3);
    
#line 247 
    ldv_free((void *)ldv_18_ldv_param_2_2);
    
#line 254 
    goto ldv_main_18;
    case 3: 
#line 257 
    ;
    
#line 263 
    __retres = (void *)0;
    
#line 263 
    goto return_label;
    default: 
#line 266 
    ;
    
#line 266 
    __VERIFIER_assume(0);
  }
  
#line 269 
  __retres = (void *)0;
  return_label: 
#line 269 
                return __retres;
}


#line 274  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 277 
  struct pci_driver *ldv_9_pci_driver = ldv_emg_alias_netxen_driver_2;
  
#line 281 
  tmp_0 = ldv_undef_int();
  
#line 281 
  if (tmp_0 != 0) {
    
#line 283 
    ldv_9_pci_driver = arg0;
    
#line 287 
    ldv_dispatch_register_9_3(ldv_9_pci_driver);
    
#line 291 
    __retres = 0;
    
#line 291 
    goto return_label;
  }
  else {
    int tmp;
    
#line 298 
    tmp = ldv_undef_int_negative();
    
#line 298 
    __retres = tmp;
    
#line 298 
    goto return_label;
  }
  return_label: 
#line 281 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_17 *cf_arg_17;
  int tmp;
  
#line 311 
  tmp = ldv_undef_int();
  
#line 311 
  switch (tmp) {
    case 0: 
#line 312 
    ;
    
#line 313 
    cf_arg_17 = (struct ldv_struct_pci_scenario_17 *)ldv_xmalloc(16UL);
    
#line 314 
    cf_arg_17->arg0 = arg0;
    
#line 315 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_pci_scenario_17,(void *)cf_arg_17);
    
#line 316 
    __VERIFIER_assume(ret == 0);
    
#line 317 
    goto ldv_44974;
    default: 
#line 319 
    ;
    
#line 319 
    __VERIFIER_assume(0);
  }
  ldv_44974: 
#line 320 
  ;
  
#line 321 
  return;
}


#line 325  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 328 
  ldv_initialize();
  
#line 331 
  ldv_initialization_1((void *)0);
  
#line 333 
  __retres = 0;
  
#line 333 
  return __retres;
}


#line 338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_7_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_17 *cf_arg_17;
  int tmp;
  
#line 341 
  tmp = ldv_undef_int();
  
#line 341 
  switch (tmp) {
    case 0: 
#line 342 
    ;
    
#line 343 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 344 
    __VERIFIER_assume(ret == 0);
    
#line 345 
    goto ldv_44985;
    default: 
#line 347 
    ;
    
#line 347 
    __VERIFIER_assume(0);
  }
  ldv_44985: 
#line 348 
  ;
  
#line 349 
  return;
}


#line 353  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_3_netdev;
  int tmp_0;
  
#line 360 
  tmp_0 = ldv_undef_int();
  
#line 360 
  if (tmp_0 != 0) {
    
#line 362 
    ldv_3_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 366 
    __retres = ldv_3_netdev;
    
#line 366 
    goto return_label;
  }
  else {
    
#line 373 
    __retres = (struct net_device *)0;
    
#line 373 
    goto return_label;
  }
  return_label: 
#line 360 
                return __retres;
}


#line 383  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_3(struct device *arg0, struct device_attribute *arg1)
{
  int ret;
  struct ldv_struct_devattr_instance_14 *cf_arg_18;
  struct ldv_struct_devattr_instance_14 *cf_arg_14;
  int tmp;
  
#line 387 
  tmp = ldv_undef_int();
  
#line 387 
  switch (tmp) {
    case 0: 
#line 388 
    ;
    
#line 389 
    cf_arg_18 = (struct ldv_struct_devattr_instance_14 *)ldv_xmalloc(24UL);
    
#line 390 
    cf_arg_18->arg0 = arg0;
    
#line 391 
    cf_arg_18->arg1 = arg1;
    
#line 392 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_devattr_instance_18,(void *)cf_arg_18);
    
#line 393 
    __VERIFIER_assume(ret == 0);
    
#line 394 
    goto ldv_45001;
    case 1: 
#line 396 
    ;
    
#line 397 
    cf_arg_14 = (struct ldv_struct_devattr_instance_14 *)ldv_xmalloc(24UL);
    
#line 398 
    cf_arg_14->arg0 = arg0;
    
#line 399 
    cf_arg_14->arg1 = arg1;
    
#line 400 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_devattr_instance_14,(void *)cf_arg_14);
    
#line 401 
    __VERIFIER_assume(ret == 0);
    
#line 402 
    goto ldv_45001;
    default: 
#line 404 
    ;
    
#line 404 
    __VERIFIER_assume(0);
  }
  ldv_45001: 
#line 405 
  ;
  
#line 406 
  return;
}


#line 410  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_device_create_file(struct device *arg0, struct device_attribute *arg1)
{
  int __retres;
  struct device_attribute *ldv_11_devattr;
  struct device *ldv_11_device;
  int tmp_0;
  
#line 418 
  tmp_0 = ldv_undef_int();
  
#line 418 
  if (tmp_0 != 0) {
    
#line 420 
    ldv_11_device = arg0;
    
#line 421 
    ldv_11_devattr = arg1;
    
#line 425 
    ldv_dispatch_register_11_3(ldv_11_device,ldv_11_devattr);
    
#line 429 
    __retres = 0;
    
#line 429 
    goto return_label;
  }
  else {
    int tmp;
    
#line 436 
    tmp = ldv_undef_int_negative();
    
#line 436 
    __retres = tmp;
    
#line 436 
    goto return_label;
  }
  return_label: 
#line 418 
                return __retres;
}


#line 446  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_8_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 449 
  tmp = ldv_undef_int();
  
#line 449 
  switch (tmp) {
    case 0: 
#line 450 
    ;
    
#line 451 
    cf_arg_15 = (struct ldv_struct_random_allocationless_scenario_15 *)ldv_xmalloc(16UL);
    
#line 452 
    cf_arg_15->arg0 = arg0;
    
#line 453 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_15,(void *)cf_arg_15);
    
#line 454 
    __VERIFIER_assume(ret == 0);
    
#line 455 
    goto ldv_45016;
    default: 
#line 457 
    ;
    
#line 457 
    __VERIFIER_assume(0);
  }
  ldv_45016: 
#line 458 
  ;
  
#line 459 
  return;
}


#line 463  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_5_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_5 *cf_arg_16;
  int tmp;
  
#line 466 
  tmp = ldv_undef_int();
  
#line 466 
  switch (tmp) {
    case 0: 
#line 467 
    ;
    
#line 468 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 469 
    __VERIFIER_assume(ret == 0);
    
#line 470 
    goto ldv_45024;
    default: 
#line 472 
    ;
    
#line 472 
    __VERIFIER_assume(0);
  }
  ldv_45024: 
#line 473 
  ;
  
#line 474 
  return;
}


#line 478  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_devattr_instance_14(void *arg0)
{
  void *__retres;
  char *ldv_14_ldv_param_2_4;
  unsigned long ldv_14_ldv_param_3_3;
  char *ldv_14_ldv_param_2_2;
  struct device *ldv_14_device;
  int tmp;
  
#line 481 
  struct device_attribute *ldv_14_devattr = ldv_emg_alias_dev_attr_diag_mode_3;
  
#line 487 
  struct ldv_struct_devattr_instance_14 *data = (struct ldv_struct_devattr_instance_14 *)arg0;
  
#line 492 
  if (data != (struct ldv_struct_devattr_instance_14 *)0) {
    
#line 493 
    ldv_14_device = data->arg0;
    
#line 494 
    ldv_14_devattr = data->arg1;
    
#line 495 
    ldv_free((void *)data);
  }
  else ;
  
#line 503 
  goto ldv_main_14;
  
#line 505 
  __retres = (void *)0;
  
#line 505 
  goto return_label;
  ldv_main_14: 
#line 508 
  ;
  
#line 511 
  tmp = ldv_undef_int();
  
#line 511 
  switch (tmp) {
    case 1: 
#line 512 
    ;
    
#line 514 
    ldv_14_ldv_param_2_4 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 519 
    ldv_emg_wrapper_netxen_show_diag_mode_2(ldv_14_device,ldv_14_devattr,ldv_14_ldv_param_2_4);
    
#line 523 
    ldv_free((void *)ldv_14_ldv_param_2_4);
    
#line 530 
    goto ldv_main_14;
    case 2: 
#line 533 
    ;
    
#line 535 
    ldv_14_ldv_param_2_2 = (char *)ldv_xmalloc_unknown_size(0UL);
    
#line 540 
    ldv_emg_wrapper_netxen_store_diag_mode_4(ldv_14_device,ldv_14_devattr,ldv_14_ldv_param_2_2,ldv_14_ldv_param_3_3);
    
#line 544 
    ldv_free((void *)ldv_14_ldv_param_2_2);
    
#line 551 
    goto ldv_main_14;
    case 3: 
#line 554 
    ;
    
#line 560 
    __retres = (void *)0;
    
#line 560 
    goto return_label;
    default: 
#line 563 
    ;
    
#line 563 
    __VERIFIER_assume(0);
  }
  
#line 566 
  __retres = (void *)0;
  return_label: 
#line 566 
                return __retres;
}


#line 571  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_callback)(int , void *);
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp_0;
  
#line 581 
  tmp_0 = ldv_undef_int();
  
#line 581 
  if (tmp_0 != 0) {
    
#line 583 
    ldv_13_line = (int)arg0;
    
#line 584 
    ldv_13_callback = arg1;
    
#line 585 
    ldv_13_thread = (enum irqreturn (*)(int , void *))0;
    
#line 586 
    ldv_13_data = arg4;
    
#line 590 
    ldv_dispatch_irq_register_13_3(ldv_13_line,ldv_13_callback,ldv_13_thread,ldv_13_data);
    
#line 594 
    __retres = 0;
    
#line 594 
    goto return_label;
  }
  else {
    int tmp;
    
#line 601 
    tmp = ldv_undef_int_negative();
    
#line 601 
    __retres = tmp;
    
#line 601 
    goto return_label;
  }
  return_label: 
#line 581 
                return __retres;
}


#line 611  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_callback)(int , void *);
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp_0;
  
#line 620 
  struct ldv_struct_interrupt_scenario_16 *data = (struct ldv_struct_interrupt_scenario_16 *)arg0;
  
#line 625 
  if (data != (struct ldv_struct_interrupt_scenario_16 *)0) {
    
#line 626 
    ldv_16_line = data->arg0;
    
#line 627 
    ldv_16_callback = data->arg1;
    
#line 628 
    ldv_16_thread = data->arg2;
    
#line 629 
    ldv_16_data = data->arg3;
    
#line 630 
    ldv_free((void *)data);
  }
  else ;
  
#line 635 
  if (ldv_16_callback != (enum irqreturn (*)(int , void *))0) {
    
#line 637 
    ldv_switch_to_interrupt_context();
    
#line 639 
    ldv_16_ret_val = (*ldv_16_callback)(ldv_16_line,ldv_16_data);
    
#line 641 
    ldv_switch_to_process_context();
  }
  else {
    int tmp;
    
#line 643 
    tmp = ldv_undef_int();
    
#line 643 
    ldv_16_ret_val = (enum irqreturn)tmp;
  }
  
#line 647 
  tmp_0 = ldv_undef_int();
  
#line 647 
  if (tmp_0 != 0) {
    
#line 649 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 653 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 655 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 662 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 671 
  __retres = (void *)0;
  
#line 671 
  goto return_label;
  
#line 673 
  __retres = (void *)0;
  return_label: 
#line 673 
                return __retres;
}


#line 678  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_10_work_struct;
  int tmp;
  
#line 685 
  tmp = ldv_undef_int();
  
#line 685 
  if (tmp != 0) {
    
#line 687 
    ldv_10_work_struct = arg0;
    
#line 691 
    if (ldv_10_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 693 
      (*(ldv_10_work_struct->func))(ldv_10_work_struct); else ;
    
#line 698 
    __retres = (_Bool)1;
    
#line 698 
    goto return_label;
  }
  else {
    
#line 705 
    __retres = (_Bool)0;
    
#line 705 
    goto return_label;
  }
  return_label: 
#line 685 
                return __retres;
}


#line 715  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 722 
  ldv_1_ret = ldv_emg_netxen_init_module();
  
#line 723 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 726 
  tmp = ldv_undef_int();
  
#line 726 
  if (tmp != 0) {
    
#line 728 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 732 
    __retres = (void *)0;
    
#line 732 
    goto return_label;
  }
  else {
    
#line 736 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 741 
    ldv_emg_netxen_exit_module();
    
#line 745 
    __retres = (void *)0;
    
#line 745 
    goto return_label;
  }
  
#line 748 
  __retres = (void *)0;
  return_label: 
#line 748 
                return __retres;
}


#line 753  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_17(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_17_resource_1;
  struct pci_device_id *ldv_17_ldv_param_1_2;
  struct pm_message ldv_17_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 758 
  struct pci_driver *ldv_17_container = ldv_emg_alias_netxen_driver_2;
  
#line 759 
  int ldv_17_ret = ldv_undef_int();
  
#line 762 
  struct ldv_struct_pci_scenario_17 *data = (struct ldv_struct_pci_scenario_17 *)arg0;
  
#line 766 
  ldv_17_ret = ldv_undef_int();
  
#line 769 
  if (data != (struct ldv_struct_pci_scenario_17 *)0) {
    
#line 770 
    ldv_17_container = data->arg0;
    
#line 771 
    ldv_free((void *)data);
  }
  else ;
  
#line 782 
  goto ldv_main_17;
  
#line 784 
  __retres = (void *)0;
  
#line 784 
  goto return_label;
  ldv_main_17: 
#line 787 
  ;
  
#line 790 
  tmp_2 = ldv_undef_int();
  
#line 790 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 792 
    ldv_17_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 797 
    ldv_pre_probe();
    
#line 799 
    ldv_17_ret = ldv_emg_wrapper_netxen_nic_probe_3(ldv_17_resource_1,ldv_17_ldv_param_1_2);
    
#line 801 
    ldv_17_ret = ldv_post_probe(ldv_17_ret);
    
#line 805 
    ldv_free((void *)ldv_17_ldv_param_1_2);
    
#line 808 
    tmp_1 = ldv_undef_int();
    
#line 808 
    if (tmp_1 != 0) {
      
#line 810 
      __VERIFIER_assume(ldv_17_ret == 0);
      
#line 817 
      goto ldv_call_17;
    }
    else {
      
#line 821 
      __VERIFIER_assume(ldv_17_ret != 0);
      
#line 828 
      goto ldv_main_17;
    }
  }
  else {
    
#line 840 
    __retres = (void *)0;
    
#line 840 
    goto return_label;
  }
  
#line 843 
  __retres = (void *)0;
  
#line 843 
  goto return_label;
  ldv_call_17: 
#line 846 
  ;
  
#line 849 
  tmp_3 = ldv_undef_int();
  
#line 849 
  switch (tmp_3) {
    case 1: 
#line 850 
    ;
    
#line 859 
    goto ldv_call_17;
    case 2: 
#line 862 
    ;
    
#line 865 
    ldv_17_ret = ldv_emg_wrapper_netxen_nic_suspend_4(ldv_17_resource_1,ldv_17_resource_0);
    
#line 867 
    ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    
#line 871 
    if (ldv_17_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 873 
      ldv_17_ret = (*(ldv_17_container->suspend_late))(ldv_17_resource_1,ldv_17_resource_0);
      
#line 875 
      ldv_17_ret = ldv_filter_err_code(ldv_17_ret);
    }
    else 
#line 877 
         ldv_17_ret = ldv_undef_int();
    
#line 882 
    if (ldv_17_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 884 
      (*(ldv_17_container->resume_early))(ldv_17_resource_1); else ;
    
#line 890 
    ldv_emg_wrapper_netxen_nic_resume_6(ldv_17_resource_1);
    
#line 897 
    goto ldv_call_17;
    case 3: 
#line 900 
    ;
    
#line 903 
    ldv_emg_wrapper_netxen_nic_shutdown_2(ldv_17_resource_1);
    
#line 908 
    ldv_emg_wrapper_netxen_nic_remove_5(ldv_17_resource_1);
    
#line 915 
    goto ldv_main_17;
    default: 
#line 918 
    ;
    
#line 918 
    __VERIFIER_assume(0);
  }
  
#line 921 
  __retres = (void *)0;
  return_label: 
#line 921 
                return __retres;
}


#line 926  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_device_remove_file(struct device *arg0, struct device_attribute *arg1)
{
  struct device_attribute *ldv_12_devattr;
  struct device *ldv_12_device;
  
#line 933 
  ldv_12_device = arg0;
  
#line 934 
  ldv_12_devattr = arg1;
  
#line 938 
  ldv_dispatch_deregister_12_1(ldv_12_device,ldv_12_devattr);
  
#line 942 
  goto return_label;
  return_label: 
#line 944 
                return;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 952 
  tmp = ldv_undef_int();
  
#line 952 
  switch (tmp) {
    case 0: 
#line 953 
    ;
    
#line 954 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 955 
    __VERIFIER_assume(ret == 0);
    
#line 956 
    goto ldv_45105;
    default: 
#line 958 
    ;
    
#line 958 
    __VERIFIER_assume(0);
  }
  ldv_45105: 
#line 959 
  ;
  
#line 960 
  return;
}


#line 964  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 967 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_netxen_driver_2;
  
#line 970 
  ldv_7_pci_driver = arg0;
  
#line 974 
  ldv_dispatch_deregister_7_1(ldv_7_pci_driver);
  
#line 978 
  goto return_label;
  return_label: 
#line 980 
                return;
}


#line 985  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_13_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_16 *cf_arg_16;
  int tmp;
  
#line 988 
  tmp = ldv_undef_int();
  
#line 988 
  switch (tmp) {
    case 0: 
#line 989 
    ;
    
#line 990 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_16 *)ldv_xmalloc(32UL);
    
#line 991 
    cf_arg_16->arg0 = arg0;
    
#line 992 
    cf_arg_16->arg1 = arg1;
    
#line 993 
    cf_arg_16->arg2 = arg2;
    
#line 994 
    cf_arg_16->arg3 = arg3;
    
#line 995 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 996 
    __VERIFIER_assume(ret == 0);
    
#line 997 
    goto ldv_45124;
    default: 
#line 999 
    ;
    
#line 999 
    __VERIFIER_assume(0);
  }
  ldv_45124: 
#line 1000 
  ;
  
#line 1001 
  return;
}


#line 1005  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_4_netdev;
  
#line 1011 
  ldv_4_netdev = arg0;
  
#line 1016 
  ldv_emg_wrapper_netxen_nic_close_2(ldv_4_netdev);
  
#line 1020 
  ldv_dispatch_deregister_4_1(ldv_4_netdev);
  
#line 1024 
  goto return_label;
  return_label: 
#line 1026 
                return;
}


#line 1031  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_5_line;
  
#line 1037 
  ldv_5_line = (int)arg0;
  
#line 1041 
  ldv_dispatch_irq_deregister_5_1(ldv_5_line);
  
#line 1045 
  goto return_label;
  return_label: 
#line 1047 
                return;
}


#line 1052  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_15(void *arg0)
{
  void *__retres;
  struct ethtool_dump *ldv_15_ldv_param_1_28;
  struct ethtool_cmd *ldv_15_ldv_param_1_3;
  unsigned long long ldv_15_ldv_param_1_10;
  void *ldv_15_ldv_param_1_15;
  struct sk_buff *ldv_15_ldv_param_0_14;
  unsigned char *ldv_15_ldv_param_2_30;
  void *ldv_15_ldv_param_2_27;
  unsigned int ldv_15_ldv_param_1_29;
  struct ethtool_pauseparam *ldv_15_ldv_param_1_2;
  struct ethtool_cmd *ldv_15_ldv_param_1_4;
  void *ldv_15_ldv_param_2_25;
  struct ethtool_drvinfo *ldv_15_ldv_param_1_11;
  unsigned long long *ldv_15_ldv_param_2_8;
  struct ethtool_dump *ldv_15_ldv_param_1_26;
  struct net_device *ldv_15_container;
  unsigned long long *ldv_15_ldv_param_2_20;
  struct ethtool_ringparam *ldv_15_ldv_param_1_13;
  unsigned long long ldv_15_ldv_param_1_12;
  struct ethtool_eeprom *ldv_15_ldv_param_1_16;
  int ldv_15_ldv_param_1_18;
  struct ethtool_pauseparam *ldv_15_ldv_param_1_33;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_21;
  unsigned char *ldv_15_ldv_param_2_17;
  struct ethtool_dump *ldv_15_ldv_param_1_6;
  struct ethtool_ringparam *ldv_15_ldv_param_1_31;
  int ldv_15_ldv_param_1_9;
  struct ethtool_coalesce *ldv_15_ldv_param_1_32;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_23;
  struct ethtool_test *ldv_15_ldv_param_1_19;
  struct ethtool_regs *ldv_15_ldv_param_1_24;
  struct rtnl_link_stats64 *ldv_15_ldv_param_1_5;
  struct ethtool_coalesce *ldv_15_ldv_param_1_22;
  struct ethtool_stats *ldv_15_ldv_param_1_7;
  int tmp_24;
  
#line 1089 
  struct ldv_struct_random_allocationless_scenario_15 *data = (struct ldv_struct_random_allocationless_scenario_15 *)arg0;
  
#line 1094 
  if (data != (struct ldv_struct_random_allocationless_scenario_15 *)0) {
    
#line 1095 
    ldv_15_container = data->arg0;
    
#line 1096 
    ldv_free((void *)data);
  }
  else ;
  
#line 1104 
  goto ldv_call_15;
  
#line 1106 
  __retres = (void *)0;
  
#line 1106 
  goto return_label;
  ldv_call_15: 
#line 1109 
  ;
  
#line 1112 
  tmp_24 = ldv_undef_int();
  
#line 1112 
  if (tmp_24 != 0) {
    int tmp_0;
    
#line 1114 
    ldv_15_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 1117 
    tmp_0 = ldv_undef_int();
    
#line 1117 
    switch (tmp_0) {
      case 1: 
#line 1118 
      ;
      
#line 1121 
      ldv_emg_wrapper_netxen_nic_get_pauseparam_2(ldv_15_container,ldv_15_ldv_param_1_2);
      
#line 1124 
      goto ldv_45174;
      case 2: 
#line 1126 
      ;
      
#line 1129 
      ldv_emg_wrapper_netxen_set_multicast_list_5(ldv_15_container);
      
#line 1132 
      goto ldv_45174;
      case 3: 
#line 1134 
      ;
      
#line 1137 
      ldv_emg_wrapper_netxen_nic_poll_controller_32(ldv_15_container);
      
#line 1140 
      goto ldv_45174;
      case 4: 
#line 1142 
      ;
      
#line 1144 
      ldv_15_ldv_param_1_33 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1149 
      ldv_emg_wrapper_netxen_nic_set_pauseparam_31(ldv_15_container,ldv_15_ldv_param_1_33);
      
#line 1153 
      ldv_free((void *)ldv_15_ldv_param_1_33);
      
#line 1156 
      goto ldv_45174;
      case 5: 
#line 1158 
      ;
      
#line 1160 
      ldv_15_ldv_param_1_32 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1165 
      ldv_emg_wrapper_netxen_set_intr_coalesce_30(ldv_15_container,ldv_15_ldv_param_1_32);
      
#line 1169 
      ldv_free((void *)ldv_15_ldv_param_1_32);
      
#line 1172 
      goto ldv_45174;
      case 6: 
#line 1174 
      ;
      
#line 1177 
      ldv_emg_wrapper_netxen_nic_get_regs_len_29(ldv_15_container);
      
#line 1180 
      goto ldv_45174;
      case 7: 
#line 1182 
      ;
      
#line 1184 
      ldv_15_ldv_param_1_31 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1189 
      ldv_emg_wrapper_netxen_nic_get_ringparam_28(ldv_15_container,ldv_15_ldv_param_1_31);
      
#line 1193 
      ldv_free((void *)ldv_15_ldv_param_1_31);
      
#line 1196 
      goto ldv_45174;
      case 8: 
#line 1198 
      ;
      
#line 1200 
      ldv_15_ldv_param_2_30 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1205 
      ldv_emg_wrapper_netxen_nic_get_strings_27(ldv_15_container,ldv_15_ldv_param_1_29,ldv_15_ldv_param_2_30);
      
#line 1209 
      ldv_free((void *)ldv_15_ldv_param_2_30);
      
#line 1212 
      goto ldv_45174;
      case 9: 
#line 1214 
      ;
      
#line 1216 
      ldv_15_ldv_param_1_28 = (struct ethtool_dump *)ldv_xmalloc_unknown_size(0UL);
      
#line 1221 
      ldv_emg_wrapper_netxen_get_dump_flag_26(ldv_15_container,ldv_15_ldv_param_1_28);
      
#line 1225 
      ldv_free((void *)ldv_15_ldv_param_1_28);
      
#line 1228 
      goto ldv_45174;
      case 10: 
#line 1230 
      ;
      
#line 1232 
      ldv_15_ldv_param_2_27 = ldv_xmalloc_unknown_size(0UL);
      
#line 1233 
      ldv_15_ldv_param_1_26 = (struct ethtool_dump *)ldv_xmalloc_unknown_size(0UL);
      
#line 1238 
      ldv_emg_wrapper_netxen_get_dump_data_25(ldv_15_container,ldv_15_ldv_param_1_26,ldv_15_ldv_param_2_27);
      
#line 1242 
      ldv_free(ldv_15_ldv_param_2_27);
      
#line 1243 
      ldv_free((void *)ldv_15_ldv_param_1_26);
      
#line 1246 
      goto ldv_45174;
      case 11: 
#line 1248 
      ;
      
#line 1251 
      ldv_emg_wrapper_netxen_tx_timeout_18(ldv_15_container);
      
#line 1254 
      goto ldv_45174;
      case 12: 
#line 1256 
      ;
      
#line 1258 
      ldv_15_ldv_param_2_25 = ldv_xmalloc_unknown_size(0UL);
      
#line 1259 
      ldv_15_ldv_param_1_24 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 1264 
      ldv_emg_wrapper_netxen_nic_get_regs_23(ldv_15_container,ldv_15_ldv_param_1_24,ldv_15_ldv_param_2_25);
      
#line 1268 
      ldv_free(ldv_15_ldv_param_2_25);
      
#line 1269 
      ldv_free((void *)ldv_15_ldv_param_1_24);
      
#line 1272 
      goto ldv_45174;
      case 13: 
#line 1274 
      ;
      
#line 1276 
      ldv_15_ldv_param_1_23 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1281 
      ldv_emg_wrapper_netxen_nic_set_wol_22(ldv_15_container,ldv_15_ldv_param_1_23);
      
#line 1285 
      ldv_free((void *)ldv_15_ldv_param_1_23);
      
#line 1288 
      goto ldv_45174;
      case 14: 
#line 1290 
      ;
      
#line 1292 
      ldv_15_ldv_param_1_22 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 1297 
      ldv_emg_wrapper_netxen_get_intr_coalesce_21(ldv_15_container,ldv_15_ldv_param_1_22);
      
#line 1301 
      ldv_free((void *)ldv_15_ldv_param_1_22);
      
#line 1304 
      goto ldv_45174;
      case 15: 
#line 1306 
      ;
      
#line 1308 
      ldv_15_ldv_param_1_21 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1313 
      ldv_emg_wrapper_netxen_nic_get_wol_20(ldv_15_container,ldv_15_ldv_param_1_21);
      
#line 1317 
      ldv_free((void *)ldv_15_ldv_param_1_21);
      
#line 1320 
      goto ldv_45174;
      case 16: 
#line 1322 
      ;
      
#line 1324 
      ldv_15_ldv_param_2_20 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1325 
      ldv_15_ldv_param_1_19 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 1330 
      ldv_emg_wrapper_netxen_nic_diag_test_19(ldv_15_container,ldv_15_ldv_param_1_19,ldv_15_ldv_param_2_20);
      
#line 1334 
      ldv_free((void *)ldv_15_ldv_param_2_20);
      
#line 1335 
      ldv_free((void *)ldv_15_ldv_param_1_19);
      
#line 1338 
      goto ldv_45174;
      case 17: 
#line 1340 
      ;
      
#line 1346 
      ldv_emg_wrapper_netxen_get_sset_count_24(ldv_15_container,ldv_15_ldv_param_1_18);
      
#line 1352 
      goto ldv_45174;
      case 18: 
#line 1354 
      ;
      
#line 1356 
      ldv_15_ldv_param_1_16 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1357 
      ldv_15_ldv_param_2_17 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1362 
      ldv_emg_wrapper_netxen_nic_get_eeprom_3(ldv_15_container,ldv_15_ldv_param_1_16,ldv_15_ldv_param_2_17);
      
#line 1366 
      ldv_free((void *)ldv_15_ldv_param_1_16);
      
#line 1367 
      ldv_free((void *)ldv_15_ldv_param_2_17);
      
#line 1370 
      goto ldv_45174;
      case 19: 
#line 1372 
      ;
      
#line 1374 
      ldv_15_ldv_param_1_15 = ldv_xmalloc_unknown_size(0UL);
      
#line 1379 
      ldv_emg_wrapper_netxen_nic_set_mac_16(ldv_15_container,ldv_15_ldv_param_1_15);
      
#line 1383 
      ldv_free(ldv_15_ldv_param_1_15);
      
#line 1386 
      goto ldv_45174;
      case 20: 
#line 1388 
      ;
      
#line 1390 
      ldv_15_ldv_param_0_14 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1395 
      ldv_emg_wrapper_netxen_nic_xmit_frame_15(ldv_15_ldv_param_0_14,ldv_15_container);
      
#line 1399 
      ldv_free((void *)ldv_15_ldv_param_0_14);
      
#line 1402 
      goto ldv_45174;
      case 21: 
#line 1404 
      ;
      
#line 1406 
      ldv_15_ldv_param_1_13 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1411 
      ldv_emg_wrapper_netxen_nic_set_ringparam_14(ldv_15_container,ldv_15_ldv_param_1_13);
      
#line 1415 
      ldv_free((void *)ldv_15_ldv_param_1_13);
      
#line 1418 
      goto ldv_45174;
      case 22: 
#line 1420 
      ;
      
#line 1423 
      ldv_emg_wrapper_netxen_nic_get_eeprom_len_33(ldv_15_container);
      
#line 1426 
      goto ldv_45174;
      case 23: 
#line 1428 
      ;
      
#line 1434 
      ldv_emg_wrapper_netxen_fix_features_13(ldv_15_container,ldv_15_ldv_param_1_12);
      
#line 1440 
      goto ldv_45174;
      case 24: 
#line 1442 
      ;
      
#line 1444 
      ldv_15_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1449 
      ldv_emg_wrapper_netxen_nic_get_drvinfo_12(ldv_15_container,ldv_15_ldv_param_1_11);
      
#line 1453 
      ldv_free((void *)ldv_15_ldv_param_1_11);
      
#line 1456 
      goto ldv_45174;
      case 25: 
#line 1458 
      ;
      
#line 1464 
      ldv_emg_wrapper_netxen_set_features_11(ldv_15_container,ldv_15_ldv_param_1_10);
      
#line 1470 
      goto ldv_45174;
      case 26: 
#line 1472 
      ;
      
#line 1475 
      (*ldv_emg_alias_ethtool_op_get_link_10)(ldv_15_container);
      
#line 1478 
      goto ldv_45174;
      case 27: 
#line 1480 
      ;
      
#line 1486 
      netxen_nic_change_mtu(ldv_15_container,ldv_15_ldv_param_1_9);
      
#line 1492 
      goto ldv_45174;
      case 28: 
#line 1494 
      ;
      
#line 1496 
      ldv_15_ldv_param_1_7 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1497 
      ldv_15_ldv_param_2_8 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1502 
      ldv_emg_wrapper_netxen_nic_get_ethtool_stats_8(ldv_15_container,ldv_15_ldv_param_1_7,ldv_15_ldv_param_2_8);
      
#line 1506 
      ldv_free((void *)ldv_15_ldv_param_1_7);
      
#line 1507 
      ldv_free((void *)ldv_15_ldv_param_2_8);
      
#line 1510 
      goto ldv_45174;
      case 29: 
#line 1512 
      ;
      
#line 1515 
      (*ldv_emg_alias_eth_validate_addr_9)(ldv_15_container);
      
#line 1518 
      goto ldv_45174;
      case 30: 
#line 1520 
      ;
      
#line 1522 
      ldv_15_ldv_param_1_6 = (struct ethtool_dump *)ldv_xmalloc_unknown_size(0UL);
      
#line 1527 
      ldv_emg_wrapper_netxen_set_dump_7(ldv_15_container,ldv_15_ldv_param_1_6);
      
#line 1531 
      ldv_free((void *)ldv_15_ldv_param_1_6);
      
#line 1534 
      goto ldv_45174;
      case 31: 
#line 1536 
      ;
      
#line 1538 
      ldv_15_ldv_param_1_5 = (struct rtnl_link_stats64 *)ldv_xmalloc_unknown_size(0UL);
      
#line 1543 
      ldv_emg_wrapper_netxen_nic_get_stats_6(ldv_15_container,ldv_15_ldv_param_1_5);
      
#line 1547 
      ldv_free((void *)ldv_15_ldv_param_1_5);
      
#line 1550 
      goto ldv_45174;
      case 32: 
#line 1552 
      ;
      
#line 1554 
      ldv_15_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1559 
      ldv_emg_wrapper_netxen_nic_set_settings_4(ldv_15_container,ldv_15_ldv_param_1_4);
      
#line 1563 
      ldv_free((void *)ldv_15_ldv_param_1_4);
      
#line 1566 
      goto ldv_45174;
      case 33: 
#line 1568 
      ;
      
#line 1570 
      ldv_15_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1575 
      ldv_emg_wrapper_netxen_nic_get_settings_17(ldv_15_container,ldv_15_ldv_param_1_3);
      
#line 1579 
      ldv_free((void *)ldv_15_ldv_param_1_3);
      
#line 1582 
      goto ldv_45174;
      default: 
#line 1584 
      ;
      
#line 1584 
      __VERIFIER_assume(0);
    }
    ldv_45174: 
#line 1587 
    ;
    
#line 1587 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1594 
    goto ldv_call_15;
  }
  else {
    
#line 1602 
    __retres = (void *)0;
    
#line 1602 
    goto return_label;
  }
  
#line 1605 
  __retres = (void *)0;
  return_label: 
#line 1605 
                return __retres;
}


#line 1610  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1616 
  ldv_2_netdev = arg0;
  
#line 1617 
  ldv_free((void *)ldv_2_netdev);
  
#line 1621 
  goto return_label;
  return_label: 
#line 1623 
                return;
}


#line 1628  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_12_1(struct device *arg0, struct device_attribute *arg1)
{
  int ret;
  struct ldv_struct_devattr_instance_14 *cf_arg_18;
  struct ldv_struct_devattr_instance_14 *cf_arg_14;
  int tmp;
  
#line 1632 
  tmp = ldv_undef_int();
  
#line 1632 
  switch (tmp) {
    case 0: 
#line 1633 
    ;
    
#line 1634 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 1635 
    __VERIFIER_assume(ret == 0);
    
#line 1636 
    goto ldv_45220;
    case 1: 
#line 1638 
    ;
    
#line 1639 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 1640 
    __VERIFIER_assume(ret == 0);
    
#line 1641 
    goto ldv_45220;
    default: 
#line 1643 
    ;
    
#line 1643 
    __VERIFIER_assume(0);
  }
  ldv_45220: 
#line 1644 
  ;
  
#line 1645 
  return;
}


#line 1649  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/qlogic/netxen/netxen_nic.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_8_netdev;
  int tmp_3;
  
#line 1653 
  int ldv_8_ret = ldv_undef_int();
  
#line 1656 
  ldv_8_ret = ldv_undef_int();
  
#line 1659 
  tmp_3 = ldv_undef_int();
  
#line 1659 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1661 
    ldv_8_netdev = arg0;
    
#line 1666 
    ldv_8_ret = ldv_emg_wrapper_netxen_nic_open_2(ldv_8_netdev);
    
#line 1669 
    tmp_1 = ldv_undef_int();
    
#line 1669 
    if (tmp_1 != 0) {
      
#line 1671 
      __VERIFIER_assume(ldv_8_ret == 0);
      
#line 1675 
      ldv_dispatch_register_8_4(ldv_8_netdev);
      
#line 1679 
      __retres = 0;
      
#line 1679 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1686 
      __VERIFIER_assume(ldv_8_ret != 0);
      
#line 1687 
      ldv_failed_register_netdev();
      
#line 1688 
      tmp_0 = ldv_undef_int_negative();
      
#line 1688 
      __retres = tmp_0;
      
#line 1688 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1696 
    ldv_failed_register_netdev();
    
#line 1697 
    tmp_2 = ldv_undef_int_negative();
    
#line 1697 
    __retres = tmp_2;
    
#line 1697 
    goto return_label;
  }
  return_label: 
#line 1659 
                return __retres;
}


