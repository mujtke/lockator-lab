/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_47 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_46 {
   struct __anonstruct_47 __anonCompField___anonunion_46_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_46 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct vm_area_struct;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct workqueue_struct;

#line 153 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_112 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_112 nodemask_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
union __anonunion_144 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_144 __anonCompField_idr_layer_31 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_149 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_149 __anonCompField_kernfs_node_32 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171 
struct vm_operations_struct;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 281 
struct inode;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_150 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_150 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_151 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_151 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct bin_attribute;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dma_map_ops;

#line 428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_152 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_152 __anonCompField_iov_iter_33 ;
   unsigned long nr_segs ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_158 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_159 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_157 {
   struct __anonstruct_158 __anonCompField___anonunion_157_36 ;
   struct __anonstruct_159 __anonCompField___anonunion_157_37 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_157 __anonCompField_uprobe_task_38 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_162 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_166 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_165 {
   atomic_t _mapcount ;
   struct __anonstruct_166 __anonCompField___anonunion_165_41 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_164 {
   union __anonunion_165 __anonCompField___anonstruct_164_42 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_163 {
   unsigned long counters ;
   struct __anonstruct_164 __anonCompField___anonunion_163_43 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_161 {
   union __anonunion_162 __anonCompField___anonstruct_161_40 ;
   union __anonunion_163 __anonCompField___anonstruct_161_44 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_168 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_169 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_167 {
   struct list_head lru ;
   struct __anonstruct_168 __anonCompField___anonunion_167_46 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_169 __anonCompField___anonunion_167_47 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_170 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_160 __anonCompField_page_39 ;
   struct __anonstruct_161 __anonCompField_page_45 ;
   union __anonunion_167 __anonCompField_page_48 ;
   union __anonunion_170 __anonCompField_page_49 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_171 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_171 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct user_struct;

#line 66 
struct writeback_control;

#line 67 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 18 
struct pid;

#line 19 
struct cred;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_174 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_174 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_175 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_175 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_176 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_176 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_177 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_177 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_178 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_178 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_179 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_179 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_180 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_180 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_181 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_181 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_182 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_183 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_182 ifr_ifrn ;
   union __anonunion_ifr_ifru_183 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_188 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_187 {
   struct __anonstruct_188 __anonCompField___anonunion_187_50 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_187 __anonCompField_lockref_51 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_190 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_189 {
   struct __anonstruct_190 __anonCompField___anonunion_189_52 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_189 __anonCompField_qstr_53 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_191 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_191 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_195 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_194 {
   struct __anonstruct_195 __anonCompField___anonunion_194_54 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_194 __anonCompField_radix_tree_node_55 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 435 
struct pid_namespace;

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct export_operations;

#line 63 
struct pipe_inode_info;

#line 65 
struct kstatfs;

#line 66 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_200 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_200 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_201 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_201 __anonCompField_kqid_57 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_204 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_205 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_206 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_204 __anonCompField_inode_58 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_205 __anonCompField_inode_59 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_206 __anonCompField_inode_60 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_207 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_207 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_209 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_208 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_209 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_208 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_210 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_210 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_212 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_213 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_214 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_215 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_217 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_216 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_217 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_218 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_219 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_211 {
   int _pad[28U] ;
   struct __anonstruct__kill_212 _kill ;
   struct __anonstruct__timer_213 _timer ;
   struct __anonstruct__rt_214 _rt ;
   struct __anonstruct__sigchld_215 _sigchld ;
   struct __anonstruct__sigfault_216 _sigfault ;
   struct __anonstruct__sigpoll_218 _sigpoll ;
   struct __anonstruct__sigsys_219 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_211 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_222 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_223 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_225 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_224 {
   struct keyring_index_key index_key ;
   struct __anonstruct_225 __anonCompField___anonunion_224_63 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_226 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_228 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_227 {
   union __anonunion_payload_228 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_222 __anonCompField_key_61 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_223 __anonCompField_key_62 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_224 __anonCompField_key_64 ;
   union __anonunion_type_data_226 type_data ;
   union __anonunion_227 __anonCompField_key_65 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_257 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_257 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_24997 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_262 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_263 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_24997 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_262 __anonCompField_nf_bridge_info_72 ;
   union __anonunion_263 __anonCompField_nf_bridge_info_73 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_266 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_265 {
   u64 v64 ;
   struct __anonstruct_266 __anonCompField___anonunion_265_74 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_265 __anonCompField_skb_mstamp_75 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_269 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_268 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_269 __anonCompField___anonstruct_268_76 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_267 {
   struct __anonstruct_268 __anonCompField___anonunion_267_77 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_271 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_270 {
   __wsum csum ;
   struct __anonstruct_271 __anonCompField___anonunion_270_79 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_272 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_273 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_274 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_267 __anonCompField_sk_buff_78 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_270 __anonCompField_sk_buff_80 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_272 __anonCompField_sk_buff_81 ;
   __u32 secmark ;
   union __anonunion_273 __anonCompField_sk_buff_82 ;
   union __anonunion_274 __anonCompField_sk_buff_83 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118 
struct proc_dir_entry;

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_291 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_291 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_27928 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_27928 phy_interface_t;

#line 126 
enum ldv_27981 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_27981 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_29693 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_29694 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_304 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_305 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_306 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_304 adj_list ;
   struct __anonstruct_all_adj_list_305 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_29693 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_29694 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_306 __anonCompField_net_device_93 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_311 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_311 __anonCompField_pci_dev_94 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct e1000_hw;

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_read_320 {
   u64 pkt_addr ;
   u64 hdr_addr ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_hs_rss_324 {
   u16 pkt_info ;
   u16 hdr_info ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
union __anonunion_lo_dword_323 {
   u32 data ;
   struct __anonstruct_hs_rss_324 hs_rss ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_csum_ip_326 {
   u16 ip_id ;
   u16 csum ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
union __anonunion_hi_dword_325 {
   u32 rss ;
   struct __anonstruct_csum_ip_326 csum_ip ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_lower_322 {
   union __anonunion_lo_dword_323 lo_dword ;
   union __anonunion_hi_dword_325 hi_dword ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_upper_327 {
   u32 status_error ;
   u16 length ;
   u16 vlan ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct __anonstruct_wb_321 {
   struct __anonstruct_lower_322 lower ;
   struct __anonstruct_upper_327 upper ;
};

#line 647  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
union e1000_adv_rx_desc {
   struct __anonstruct_read_320 read ;
   struct __anonstruct_wb_321 wb ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct __anonstruct_read_328 {
   u64 buffer_addr ;
   u32 cmd_type_len ;
   u32 olinfo_status ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct __anonstruct_wb_329 {
   u64 rsvd ;
   u32 nxtseq_seed ;
   u32 status ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
union e1000_adv_tx_desc {
   struct __anonstruct_read_328 read ;
   struct __anonstruct_wb_329 wb ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_adv_tx_context_desc {
   u32 vlan_macip_lens ;
   u32 seqnum_seed ;
   u32 type_tucmd_mlhl ;
   u32 mss_l4len_idx ;
};

#line 125 
enum e1000_mac_type {
    e1000_undefined = 0,
    e1000_vfadapt = 1,
    e1000_vfadapt_i350 = 2,
    e1000_num_macs = 3
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_vf_stats {
   u64 base_gprc ;
   u64 base_gptc ;
   u64 base_gorc ;
   u64 base_gotc ;
   u64 base_mprc ;
   u64 base_gotlbc ;
   u64 base_gptlbc ;
   u64 base_gorlbc ;
   u64 base_gprlbc ;
   u32 last_gprc ;
   u32 last_gptc ;
   u32 last_gorc ;
   u32 last_gotc ;
   u32 last_mprc ;
   u32 last_gotlbc ;
   u32 last_gptlbc ;
   u32 last_gorlbc ;
   u32 last_gprlbc ;
   u64 gprc ;
   u64 gptc ;
   u64 gorc ;
   u64 gotc ;
   u64 mprc ;
   u64 gotlbc ;
   u64 gptlbc ;
   u64 gorlbc ;
   u64 gprlbc ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.h"
struct e1000_mac_operations {
   s32 (*init_params)(struct e1000_hw *) ;
   s32 (*check_for_link)(struct e1000_hw *) ;
   void (*clear_vfta)(struct e1000_hw *) ;
   s32 (*get_bus_info)(struct e1000_hw *) ;
   s32 (*get_link_up_info)(struct e1000_hw *, u16 *, u16 *) ;
   void (*update_mc_addr_list)(struct e1000_hw *, u8 *, u32 , u32 , u32 ) ;
   s32 (*reset_hw)(struct e1000_hw *) ;
   s32 (*init_hw)(struct e1000_hw *) ;
   s32 (*setup_link)(struct e1000_hw *) ;
   void (*write_vfta)(struct e1000_hw *, u32 , u32 ) ;
   void (*mta_set)(struct e1000_hw *, u32 ) ;
   void (*rar_set)(struct e1000_hw *, u8 *, u32 ) ;
   s32 (*read_mac_addr)(struct e1000_hw *) ;
   s32 (*set_vfta)(struct e1000_hw *, u16 , bool ) ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_mac_info {
   struct e1000_mac_operations ops ;
   u8 addr[6U] ;
   u8 perm_addr[6U] ;
   enum e1000_mac_type type ;
   u16 mta_reg_count ;
   u16 rar_entry_count ;
   bool get_link_status ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_mbx_operations {
   s32 (*init_params)(struct e1000_hw *) ;
   s32 (*read)(struct e1000_hw *, u32 *, u16 ) ;
   s32 (*write)(struct e1000_hw *, u32 *, u16 ) ;
   s32 (*read_posted)(struct e1000_hw *, u32 *, u16 ) ;
   s32 (*write_posted)(struct e1000_hw *, u32 *, u16 ) ;
   s32 (*check_for_msg)(struct e1000_hw *) ;
   s32 (*check_for_ack)(struct e1000_hw *) ;
   s32 (*check_for_rst)(struct e1000_hw *) ;
};

#line 214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_mbx_stats {
   u32 msgs_tx ;
   u32 msgs_rx ;
   u32 acks ;
   u32 reqs ;
   u32 rsts ;
};

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_mbx_info {
   struct e1000_mbx_operations ops ;
   struct e1000_mbx_stats stats ;
   u32 timeout ;
   u32 usec_delay ;
   u16 size ;
};

#line 231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_dev_spec_vf {
   u32 vf_number ;
   u32 v2p_mailbox ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
union __anonunion_dev_spec_330 {
   struct e1000_dev_spec_vf vf ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct e1000_hw {
   void *back ;
   u8 *hw_addr ;
   u8 *flash_address ;
   unsigned long io_base ;
   struct e1000_mac_info mac ;
   struct e1000_mbx_info mbx ;
   union __anonunion_dev_spec_330 dev_spec ;
   u16 device_id ;
   u16 subsystem_vendor_id ;
   u16 subsystem_device_id ;
   u16 vendor_id ;
   u8 revision_id ;
};

#line 262 
struct igbvf_info;

#line 263 
struct igbvf_adapter;

#line 264 
enum latency_range {
    lowest_latency = 0,
    low_latency = 1,
    bulk_latency = 2,
    latency_invalid = 255
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
struct igbvf_queue_stats {
   u64 packets ;
   u64 bytes ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct __anonstruct_332 {
   unsigned long time_stamp ;
   union e1000_adv_tx_desc *next_to_watch ;
   u16 length ;
   u16 mapped_as_page ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct __anonstruct_333 {
   struct page *page ;
   u64 page_dma ;
   unsigned int page_offset ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
union __anonunion_331 {
   struct __anonstruct_332 __anonCompField___anonunion_331_95 ;
   struct __anonstruct_333 __anonCompField___anonunion_331_96 ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct igbvf_buffer {
   dma_addr_t dma ;
   struct sk_buff *skb ;
   union __anonunion_331 __anonCompField_igbvf_buffer_97 ;
};

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
union igbvf_desc {
   union e1000_adv_rx_desc rx_desc ;
   union e1000_adv_tx_desc tx_desc ;
   struct e1000_adv_tx_context_desc tx_context_desc ;
};

#line 145  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct igbvf_ring {
   struct igbvf_adapter *adapter ;
   union igbvf_desc *desc ;
   dma_addr_t dma ;
   unsigned int size ;
   unsigned int count ;
   u16 next_to_use ;
   u16 next_to_clean ;
   u16 head ;
   u16 tail ;
   struct igbvf_buffer *buffer_info ;
   struct napi_struct napi ;
   char name[21U] ;
   u32 eims_value ;
   u32 itr_val ;
   enum latency_range itr_range ;
   u16 itr_register ;
   int set_itr ;
   struct sk_buff *rx_skb_top ;
   struct igbvf_queue_stats stats ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct igbvf_adapter {
   struct timer_list watchdog_timer ;
   struct timer_list blink_timer ;
   struct work_struct reset_task ;
   struct work_struct watchdog_task ;
   struct igbvf_info const *ei ;
   unsigned long active_vlans[64U] ;
   u32 bd_number ;
   u32 rx_buffer_len ;
   u32 polling_interval ;
   u16 mng_vlan_id ;
   u16 link_speed ;
   u16 link_duplex ;
   spinlock_t tx_queue_lock ;
   unsigned long state ;
   u32 requested_itr ;
   u32 current_itr ;
   struct igbvf_ring *tx_ring ;
   unsigned int restart_queue ;
   u32 txd_cmd ;
   u32 tx_int_delay ;
   u32 tx_abs_int_delay ;
   unsigned int total_tx_bytes ;
   unsigned int total_tx_packets ;
   unsigned int total_rx_bytes ;
   unsigned int total_rx_packets ;
   u32 tx_timeout_count ;
   u32 tx_fifo_head ;
   u32 tx_head_addr ;
   u32 tx_fifo_size ;
   u32 tx_dma_failed ;
   struct igbvf_ring *rx_ring ;
   u32 rx_int_delay ;
   u32 rx_abs_int_delay ;
   u64 hw_csum_err ;
   u64 hw_csum_good ;
   u64 rx_hdr_split ;
   u32 alloc_rx_buff_failed ;
   u32 rx_dma_failed ;
   unsigned int rx_ps_hdr_size ;
   u32 max_frame_size ;
   u32 min_frame_size ;
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   struct net_device_stats net_stats ;
   spinlock_t stats_lock ;
   struct e1000_hw hw ;
   struct e1000_vf_stats stats ;
   u64 zero_base ;
   struct igbvf_ring test_tx_ring ;
   struct igbvf_ring test_rx_ring ;
   u32 test_icr ;
   u32 msg_enable ;
   struct msix_entry *msix_entries ;
   int int_mode ;
   u32 eims_enable_mask ;
   u32 eims_other ;
   u32 int_counter0 ;
   u32 int_counter1 ;
   u32 eeprom_wol ;
   u32 wol ;
   u32 pba ;
   bool fc_autoneg ;
   unsigned long led_status ;
   unsigned int flags ;
   unsigned long last_reset ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct igbvf_info {
   enum e1000_mac_type mac ;
   unsigned int flags ;
   u32 pba ;
   void (*init_ops)(struct e1000_hw *) ;
   s32 (*get_variants)(struct igbvf_adapter *) ;
};

#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
struct igbvf_stats {
   char stat_string[32U] ;
   int sizeof_stat ;
   int stat_offset ;
   int base_stat_offset ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11730 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 223  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_756 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_756 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqhandler.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_27391 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_27391 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_871 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_871 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 767 
struct rtable;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 331 
enum gro_result {
    GRO_MERGED = 0,
    GRO_MERGED_FREE = 1,
    GRO_HELD = 2,
    GRO_NORMAL = 3,
    GRO_DROP = 4
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum gro_result gro_result_t;

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 580  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/memcontrol.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_913 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_913 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_924 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_924 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_925 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_925 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_927 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_926 {
   __addrpair skc_addrpair ;
   struct __anonstruct_927 __anonCompField___anonunion_926_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_928 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_930 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_929 {
   __portpair skc_portpair ;
   struct __anonstruct_930 __anonCompField___anonunion_929_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_931 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_932 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_926 __anonCompField_sock_common_103 ;
   union __anonunion_928 __anonCompField_sock_common_104 ;
   union __anonunion_929 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_931 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_932 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_933 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_933 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_936 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_936 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6hdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) priority : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 flow_lbl[3U] ;
   __be16 payload_len ;
   __u8 nexthdr ;
   __u8 hop_limit ;
   struct in6_addr saddr ;
   struct in6_addr daddr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_956 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_956 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_957 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_959 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_958 {
   struct __anonstruct_959 __anonCompField___anonunion_958_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_957 __anonCompField_inet_peer_111 ;
   union __anonunion_958 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_vlan.h"
struct vlan_hdr {
   __be16 h_vlan_TCI ;
   __be16 h_vlan_encapsulated_proto ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_14 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_18 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_13 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_15 {
   struct timer_list *arg0 ;
   int signal_pending ;
};

#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/fvtp/.tmp_ethtool.c"
void ldv_inline_asm(void);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
unsigned long msleep_interruptible(unsigned int);


#line 48 
void usleep_range(unsigned long, unsigned long);


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vmalloc(unsigned long);


#line 83 
void vfree(void const *);


#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/igbvf.h"
char igbvf_driver_name[6U];


#line 306 
char const igbvf_driver_version[8U];


#line 309 
void igbvf_set_ethtool_ops(struct net_device *netdev);


#line 311 
int igbvf_up(struct igbvf_adapter *adapter);


#line 312 
void igbvf_down(struct igbvf_adapter *adapter);


#line 313 
void igbvf_reinit_locked(struct igbvf_adapter *adapter);


#line 314 
int igbvf_setup_rx_resources(struct igbvf_adapter *adapter, struct igbvf_ring *rx_ring);


#line 315 
int igbvf_setup_tx_resources(struct igbvf_adapter *adapter, struct igbvf_ring *tx_ring);


#line 316 
void igbvf_free_rx_resources(struct igbvf_ring *rx_ring);


#line 317 
void igbvf_free_tx_resources(struct igbvf_ring *tx_ring);


#line 318 
void igbvf_update_stats(struct igbvf_adapter *adapter);


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static struct igbvf_stats const igbvf_gstrings_stats[13U] = {{.stat_string = {(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1888, .base_stat_offset = 1776}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1896, .base_stat_offset = 1784}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1904, .base_stat_offset = 1792}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1912, .base_stat_offset = 1800}, {.stat_string = {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1920, .base_stat_offset = 1808}, {.stat_string = {(char)'l', (char)'b', (char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1944, .base_stat_offset = 1832}, {.stat_string = {(char)'l', (char)'b', (char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1952, .base_stat_offset = 1840}, {.stat_string = {(char)'t', (char)'x', (char)'_', (char)'r', (char)'e', (char)'s', (char)'t', (char)'a', (char)'r', (char)'t', (char)'_', (char)'q', (char)'u', (char)'e', (char)'u', (char)'e', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1096, .base_stat_offset = 1960}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'l', (char)'o', (char)'n', (char)'g', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1904, .base_stat_offset = 1792}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'g', (char)'o', (char)'o', (char)'d', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1176, .base_stat_offset = 1960}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'c', (char)'s', (char)'u', (char)'m', (char)'_', (char)'o', (char)'f', (char)'f', (char)'l', (char)'o', (char)'a', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1168, .base_stat_offset = 1960}, {.stat_string = {(char)'r', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'d', (char)'e', (char)'r', (char)'_', (char)'s', (char)'p', (char)'l', (char)'i', (char)'t', (char)'\000'}, .sizeof_stat = 8, .stat_offset = 1184, .base_stat_offset = 1960}, {.stat_string = {(char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)'_', (char)'r', (char)'x', (char)'_', (char)'b', (char)'u', (char)'f', (char)'f', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'e', (char)'d', (char)'\000'}, .sizeof_stat = 4, .stat_offset = 1192, .base_stat_offset = 1960}};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static char const igbvf_gstrings_test[1U][32U] = {{(char)'L', (char)'i', (char)'n', (char)'k', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'n', (char)'/', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  u32 status;
  
#line 77 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 78 
  struct e1000_hw *hw = & adapter->hw;
  
#line 81 
  ecmd->supported = 32U;
  
#line 83 
  ecmd->advertising = 32U;
  
#line 85 
  ecmd->port = (unsigned char)255U;
  
#line 86 
  ecmd->transceiver = (unsigned char)2U;
  
#line 88 
  status = readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 89 
  if ((status & 2U) != 0U) {
    
#line 90 
    if ((status & 128U) != 0U) 
#line 91 
                               ethtool_cmd_speed_set(ecmd,1000U);
    else 
      
#line 92 
      if ((status & 64U) != 0U) 
#line 93 
                                ethtool_cmd_speed_set(ecmd,100U); else 
                                                                    
#line 95 
                                                                    ethtool_cmd_speed_set(ecmd,10U);
    
#line 97 
    if ((status & 1U) != 0U) 
#line 98 
                             ecmd->duplex = (unsigned char)1U; else 
#line 100 
                                                                    ecmd->duplex = (unsigned char)0U;
  }
  else {
    
#line 102 
    ethtool_cmd_speed_set(ecmd,4294967295U);
    
#line 103 
    ecmd->duplex = (unsigned char)255U;
  }
  
#line 106 
  ecmd->autoneg = (unsigned char)0U;
  
#line 108 
  __retres = 0;
  
#line 108 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)
{
  int __retres;
  
#line 114 
  __retres = -95;
  
#line 114 
  return __retres;
}


#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  
#line 119 
  return;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *pause)
{
  int __retres;
  
#line 125 
  __retres = -95;
  
#line 125 
  return __retres;
}


#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static u32 igbvf_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 130 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 132 
  __retres = adapter->msg_enable;
  
#line 132 
  return __retres;
}


#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_set_msglevel(struct net_device *netdev, u32 data)
{
  
#line 137 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 139 
  adapter->msg_enable = data;
  
#line 140 
  return;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 145 
  __retres = 32;
  
#line 145 
  return __retres;
}


#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  
#line 151 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 152 
  struct e1000_hw *hw = & adapter->hw;
  
#line 153 
  u32 *regs_buff = (u32 *)p;
  
#line 155 
  memset(p,0,32UL);
  
#line 157 
  regs->version = (unsigned int)((((int)(adapter->pdev)->revision << 16) | 16777216) | (int)(adapter->pdev)->device);
  
#line 160 
  *regs_buff = readl((void const volatile *)hw->hw_addr);
  
#line 161 
  *(regs_buff + 1U) = readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 163 
  *(regs_buff + 2U) = readl((void const volatile *)(hw->hw_addr + 10248U));
  
#line 164 
  *(regs_buff + 3U) = readl((void const volatile *)(hw->hw_addr + 10256U));
  
#line 165 
  *(regs_buff + 4U) = readl((void const volatile *)(hw->hw_addr + 10264U));
  
#line 167 
  *(regs_buff + 5U) = readl((void const volatile *)(hw->hw_addr + 14344U));
  
#line 168 
  *(regs_buff + 6U) = readl((void const volatile *)(hw->hw_addr + 14352U));
  
#line 169 
  *(regs_buff + 7U) = readl((void const volatile *)(hw->hw_addr + 14360U));
  
#line 170 
  return;
}


#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_get_eeprom_len(struct net_device *netdev)
{
  int __retres;
  
#line 174 
  __retres = 0;
  
#line 174 
  return __retres;
}


#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_get_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  
#line 180 
  __retres = -95;
  
#line 180 
  return __retres;
}


#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_set_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  
#line 186 
  __retres = -95;
  
#line 186 
  return __retres;
}


#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
{
  char const *tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 192 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 194 
  strlcpy((char *)(& drvinfo->driver),(char const *)(& igbvf_driver_name),32UL);
  
#line 195 
  strlcpy((char *)(& drvinfo->version),(char const *)(& igbvf_driver_version),32UL);
  
#line 197 
  tmp_0 = pci_name((struct pci_dev const *)adapter->pdev);
  
#line 197 
  ;
  
#line 197 
  strlcpy((char *)(& drvinfo->bus_info),tmp_0,32UL);
  
#line 199 
  tmp_1 = igbvf_get_regs_len(netdev);
  
#line 199 
  drvinfo->regdump_len = (unsigned int)tmp_1;
  
#line 200 
  tmp_2 = igbvf_get_eeprom_len(netdev);
  
#line 200 
  drvinfo->eedump_len = (unsigned int)tmp_2;
  
#line 201 
  return;
}


#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  
#line 206 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 207 
  struct igbvf_ring *tx_ring = adapter->tx_ring;
  
#line 208 
  struct igbvf_ring *rx_ring = adapter->rx_ring;
  
#line 210 
  ring->rx_max_pending = 4096U;
  
#line 211 
  ring->tx_max_pending = 4096U;
  
#line 212 
  ring->rx_pending = rx_ring->count;
  
#line 213 
  ring->tx_pending = tx_ring->count;
  
#line 214 
  return;
}


#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  int __retres;
  struct igbvf_ring *temp_ring;
  u32 new_rx_count;
  u32 new_tx_count;
  u32 tmp_1;
  u32 tmp_3;
  u32 tmp_5;
  u32 tmp_7;
  int tmp_8;
  int tmp_10;
  bool tmp_9;
  
#line 219 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 221 
  int err = 0;
  
#line 224 
  if (ring->rx_mini_pending != 0U || ring->rx_jumbo_pending != 0U) {
    
#line 225 
    __retres = -22;
    
#line 225 
    goto return_label;
  }
  else ;
  {
    u32 tmp_0;
    
#line 227 
    u32 __max1 = ring->rx_pending;
    
#line 227 
    u32 __max2 = 80U;
    
#line 227 
    if (__max1 > __max2) 
#line 227 
                         tmp_0 = __max1; else 
#line 227 
                                              tmp_0 = __max2;
    
#line 227 
    tmp_1 = tmp_0;
  }
  
#line 227 
  new_rx_count = tmp_1;
  {
    u32 tmp_2;
    
#line 228 
    u32 __min1 = new_rx_count;
    
#line 228 
    u32 __min2 = 4096U;
    
#line 228 
    if (__min1 < __min2) 
#line 228 
                         tmp_2 = __min1; else 
#line 228 
                                              tmp_2 = __min2;
    
#line 228 
    tmp_3 = tmp_2;
  }
  
#line 228 
  new_rx_count = tmp_3;
  
#line 229 
  new_rx_count = (new_rx_count + 7U) & 4294967288U;
  {
    u32 tmp_4;
    
#line 231 
    u32 __max1_0 = ring->tx_pending;
    
#line 231 
    u32 __max2_0 = 80U;
    
#line 231 
    if (__max1_0 > __max2_0) 
#line 231 
                             tmp_4 = __max1_0; else 
#line 231 
                                                    tmp_4 = __max2_0;
    
#line 231 
    tmp_5 = tmp_4;
  }
  
#line 231 
  new_tx_count = tmp_5;
  {
    u32 tmp_6;
    
#line 232 
    u32 __min1_0 = new_tx_count;
    
#line 232 
    u32 __min2_0 = 4096U;
    
#line 232 
    if (__min1_0 < __min2_0) 
#line 232 
                             tmp_6 = __min1_0; else 
#line 232 
                                                    tmp_6 = __min2_0;
    
#line 232 
    tmp_7 = tmp_6;
  }
  
#line 232 
  new_tx_count = tmp_7;
  
#line 233 
  new_tx_count = (new_tx_count + 7U) & 4294967288U;
  
#line 235 
  if ((adapter->tx_ring)->count == new_tx_count && (adapter->rx_ring)->count == new_rx_count) {
    
#line 238 
    __retres = 0;
    
#line 238 
    goto return_label;
  }
  else ;
  
#line 241 
  goto ldv_46268;
  ldv_46267: 
#line 242 
  ;
  
#line 242 
  usleep_range(1000UL,2000UL);
  ldv_46268: 
#line 243 
  ;
  
#line 241 
  tmp_8 = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 241 
  if (tmp_8 != 0) 
#line 243 
                  goto ldv_46267; else 
#line 246 
                                       goto ldv_46269;
  ldv_46269: 
#line 247 
  ;
  
#line 244 
  tmp_9 = netif_running((struct net_device const *)adapter->netdev);
  
#line 244 
  if (tmp_9) 
#line 244 
             tmp_10 = 0; else 
#line 244 
                              tmp_10 = 1;
  
#line 244 
  if (tmp_10) {
    
#line 245 
    (adapter->tx_ring)->count = new_tx_count;
    
#line 246 
    (adapter->rx_ring)->count = new_rx_count;
    
#line 247 
    goto clear_reset;
  }
  else ;
  
#line 250 
  temp_ring = (struct igbvf_ring *)vmalloc(400UL);
  
#line 251 
  if (temp_ring == (struct igbvf_ring *)0) {
    
#line 252 
    err = -12;
    
#line 253 
    goto clear_reset;
  }
  else ;
  
#line 256 
  igbvf_down(adapter);
  
#line 262 
  if ((adapter->tx_ring)->count != new_tx_count) {
    
#line 263 
    memcpy((void *)temp_ring,(void const *)adapter->tx_ring,400UL);
    
#line 265 
    temp_ring->count = new_tx_count;
    
#line 266 
    err = igbvf_setup_tx_resources(adapter,temp_ring);
    
#line 267 
    if (err != 0) 
#line 268 
                  goto err_setup; else ;
    
#line 270 
    igbvf_free_tx_resources(adapter->tx_ring);
    
#line 272 
    memcpy((void *)adapter->tx_ring,(void const *)temp_ring,400UL);
  }
  else ;
  
#line 275 
  if ((adapter->rx_ring)->count != new_rx_count) {
    
#line 276 
    memcpy((void *)temp_ring,(void const *)adapter->rx_ring,400UL);
    
#line 278 
    temp_ring->count = new_rx_count;
    
#line 279 
    err = igbvf_setup_rx_resources(adapter,temp_ring);
    
#line 280 
    if (err != 0) 
#line 281 
                  goto err_setup; else ;
    
#line 283 
    igbvf_free_rx_resources(adapter->rx_ring);
    
#line 285 
    memcpy((void *)adapter->rx_ring,(void const *)temp_ring,400UL);
  }
  else ;
  err_setup: 
#line 287 
  ;
  
#line 288 
  igbvf_up(adapter);
  
#line 289 
  vfree((void const *)temp_ring);
  clear_reset: 
#line 290 
  ;
  
#line 291 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 292 
  __retres = err;
  return_label: 
#line 292 
                return __retres;
}


#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_link_test(struct igbvf_adapter *adapter, u64 *data)
{
  int __retres;
  unsigned int tmp;
  
#line 297 
  struct e1000_hw *hw = & adapter->hw;
  
#line 298 
  *data = 0ULL;
  
#line 300 
  (*(hw->mac.ops.check_for_link))(hw);
  
#line 302 
  tmp = readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 302 
  if ((tmp & 2U) == 0U) 
#line 303 
                        *data = 1ULL; else ;
  
#line 305 
  __retres = (int)*data;
  
#line 305 
  return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_diag_test(struct net_device *netdev, struct ethtool_test *eth_test, u64 *data)
{
  int tmp_0;
  
#line 311 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 313 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 318 
  tmp_0 = igbvf_link_test(adapter,data);
  
#line 318 
  if (tmp_0 != 0) 
#line 319 
                  eth_test->flags |= 2U; else ;
  
#line 321 
  set_bit(0L,(unsigned long volatile *)(& adapter->state));
  
#line 322 
  msleep_interruptible(4000U);
  
#line 323 
  return;
}


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  
#line 328 
  wol->supported = 0U;
  
#line 329 
  wol->wolopts = 0U;
  
#line 330 
  return;
}


#line 332  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 335 
  __retres = -95;
  
#line 335 
  return __retres;
}


#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_get_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
{
  int __retres;
  
#line 341 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 343 
  if (adapter->requested_itr <= 3U) 
#line 344 
                                    ec->rx_coalesce_usecs = adapter->requested_itr; else 
                                                                    
#line 346 
                                                                    ec->rx_coalesce_usecs = adapter->current_itr >> 2;
  
#line 348 
  __retres = 0;
  
#line 348 
  return __retres;
}


#line 351  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_set_coalesce(struct net_device *netdev, struct ethtool_coalesce *ec)
{
  int __retres;
  
#line 354 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 355 
  struct e1000_hw *hw = & adapter->hw;
  
#line 357 
  if (ec->rx_coalesce_usecs + 4294967286U <= 9990U) {
    
#line 359 
    adapter->current_itr = ec->rx_coalesce_usecs << 2;
    
#line 360 
    adapter->requested_itr = 1000000000U / (adapter->current_itr * 256U);
  }
  else 
    
#line 362 
    if (ec->rx_coalesce_usecs + 4294967294U <= 1U) {
      
#line 364 
      adapter->current_itr = 488U;
      
#line 365 
      adapter->requested_itr = ec->rx_coalesce_usecs;
    }
    else 
      
#line 366 
      if (ec->rx_coalesce_usecs == 0U) {
        
#line 373 
        adapter->current_itr = 4U;
        
#line 374 
        adapter->requested_itr = 1000000000U / (adapter->current_itr * 256U);
      }
      else {
        
#line 377 
        __retres = -22;
        
#line 377 
        goto return_label;
      }
  
#line 380 
  writel(adapter->current_itr,(void volatile *)(hw->hw_addr + (int)(adapter->rx_ring)->itr_register));
  
#line 383 
  __retres = 0;
  return_label: 
#line 383 
                return __retres;
}


#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_nway_reset(struct net_device *netdev)
{
  int __retres;
  bool tmp_0;
  
#line 388 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 390 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 390 
  if ((int)tmp_0 != 0) 
#line 391 
                       igbvf_reinit_locked(adapter); else ;
  
#line 392 
  __retres = 0;
  
#line 392 
  return __retres;
}


#line 395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  int i;
  
#line 399 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 402 
  igbvf_update_stats(adapter);
  
#line 403 
  i = 0;
  
#line 403 
  goto ldv_46319;
  ldv_46318: 
#line 404 
  ;
  {
    
#line 404 
    char *p = (char *)adapter + igbvf_gstrings_stats[i].stat_offset;
    
#line 406 
    char *b = (char *)adapter + igbvf_gstrings_stats[i].base_stat_offset;
    
#line 408 
    if (igbvf_gstrings_stats[i].sizeof_stat == 8) 
#line 408 
                                                  *(data + i) = *((u64 *)p) - *((u64 *)b); else 
                                                                    
#line 408 
                                                                    *(data + i) = (unsigned long long)(*((u32 *)p) - *((u32 *)b));
  }
  
#line 403 
  i += 1;
  ldv_46319: 
#line 404 
  ;
  
#line 403 
  if ((unsigned int)i <= 12U) 
#line 405 
                              goto ldv_46318; else 
#line 408 
                                                   goto ldv_46320;
  ldv_46320: 
#line 409 
  ;
  
#line 410 
  return;
}


#line 414  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static int igbvf_get_sset_count(struct net_device *dev, int stringset)
{
  int __retres;
  
#line 416 
  switch (stringset) {
    case 0: 
#line 417 
    ;
    
#line 418 
    __retres = 1;
    
#line 418 
    goto return_label;
    case 1: 
#line 419 
    ;
    
#line 420 
    __retres = 13;
    
#line 420 
    goto return_label;
    default: 
#line 421 
    ;
    
#line 422 
    __retres = -22;
    
#line 422 
    goto return_label;
  }
  return_label: 
#line 416 
                return __retres;
}


#line 426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static void igbvf_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  int i;
  
#line 429 
  u8 *p = data;
  
#line 432 
  switch (stringset) {
    case (u32)0: 
#line 433 
    ;
    
#line 434 
    memcpy((void *)data,(void const *)(& igbvf_gstrings_test),32UL);
    
#line 435 
    goto ldv_46342;
    case (u32)1: 
#line 436 
    ;
    
#line 437 
    i = 0;
    
#line 437 
    goto ldv_46348;
    ldv_46347: 
#line 438 
    ;
    
#line 438 
    memcpy((void *)p,(void const *)(& igbvf_gstrings_stats[i].stat_string),32UL);
    
#line 440 
    p += 32U;
    
#line 437 
    i += 1;
    ldv_46348: 
#line 438 
    ;
    
#line 437 
    if ((unsigned int)i <= 12U) 
#line 439 
                                goto ldv_46347; else 
#line 442 
                                                     goto ldv_46349;
    ldv_46349: 
#line 443 
    ;
    
#line 442 
    goto ldv_46342;
  }
  ldv_46342: 
#line 444 
  ;
  
#line 445 
  return;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
static struct ethtool_ops const igbvf_ethtool_ops = {.get_settings = & igbvf_get_settings, .set_settings = & igbvf_set_settings, .get_drvinfo = & igbvf_get_drvinfo, .get_regs_len = & igbvf_get_regs_len, .get_regs = & igbvf_get_regs, .get_wol = & igbvf_get_wol, .set_wol = & igbvf_set_wol, .get_msglevel = & igbvf_get_msglevel, .set_msglevel = & igbvf_set_msglevel, .nway_reset = & igbvf_nway_reset, .get_link = & ethtool_op_get_link, .get_eeprom_len = & igbvf_get_eeprom_len, .get_eeprom = & igbvf_get_eeprom, .set_eeprom = & igbvf_set_eeprom, .get_coalesce = & igbvf_get_coalesce, .set_coalesce = & igbvf_set_coalesce, .get_ringparam = & igbvf_get_ringparam, .set_ringparam = & igbvf_set_ringparam, .get_pauseparam = & igbvf_get_pauseparam, .set_pauseparam = & igbvf_set_pauseparam, .self_test = & igbvf_diag_test, .get_strings = & igbvf_get_strings, .set_phys_id = (int (*)(struct net_device *, enum ethtool_phys_id_state ))0, .get_ethtool_stats = & igbvf_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & igbvf_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/ethtool.c"
void igbvf_set_ethtool_ops(struct net_device *netdev)
{
  
#line 475 
  netdev->ethtool_ops = & igbvf_ethtool_ops;
  
#line 476 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_10)(struct net_device *) = & ethtool_op_get_link;

#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_get_sset_count_26(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 74 
  tmp = igbvf_get_sset_count(arg0,arg1);
  
#line 74 
  return tmp;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_nway_reset_28(struct net_device *arg0)
{
  int tmp;
  
#line 79 
  tmp = igbvf_nway_reset(arg0);
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_get_settings_18(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 84 
  tmp = igbvf_get_settings(arg0,arg1);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_set_settings_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 89 
  tmp = igbvf_set_settings(arg0,arg1);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_drvinfo_12(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 94 
  igbvf_get_drvinfo(arg0,arg1);
  
#line 95 
  return;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_set_ringparam_14(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 99 
  tmp = igbvf_set_ringparam(arg0,arg1);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_wol_21(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 104 
  igbvf_get_wol(arg0,arg1);
  
#line 105 
  return;
}


#line 108  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_set_eeprom_13(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 109 
  tmp = igbvf_set_eeprom(arg0,arg1,arg2);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_set_pauseparam_33(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 114 
  tmp = igbvf_set_pauseparam(arg0,arg1);
  
#line 114 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_strings_5(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 119 
  igbvf_get_strings(arg0,arg1,arg2);
  
#line 120 
  return;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_get_eeprom_len_36(struct net_device *arg0)
{
  int tmp;
  
#line 124 
  tmp = igbvf_get_eeprom_len(arg0);
  
#line 124 
  return tmp;
}


#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_pauseparam_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 129 
  igbvf_get_pauseparam(arg0,arg1);
  
#line 130 
  return;
}


#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_set_wol_24(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 134 
  tmp = igbvf_set_wol(arg0,arg1);
  
#line 134 
  return tmp;
}


#line 138  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 139 
  igbvf_get_ethtool_stats(arg0,arg1,arg2);
  
#line 140 
  return;
}


#line 143  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_get_regs_len_31(struct net_device *arg0)
{
  int tmp;
  
#line 144 
  tmp = igbvf_get_regs_len(arg0);
  
#line 144 
  return tmp;
}


#line 148  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
unsigned int ldv_emg_wrapper_igbvf_get_msglevel_15(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 149 
  tmp = igbvf_get_msglevel(arg0);
  
#line 149 
  return tmp;
}


#line 153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_get_coalesce_30(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 154 
  tmp = igbvf_get_coalesce(arg0,arg1);
  
#line 154 
  return tmp;
}


#line 158  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_set_coalesce_32(struct net_device *arg0, struct ethtool_coalesce *arg1)
{
  int tmp;
  
#line 159 
  tmp = igbvf_set_coalesce(arg0,arg1);
  
#line 159 
  return tmp;
}


#line 163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_set_msglevel_29(struct net_device *arg0, unsigned int arg1)
{
  
#line 164 
  igbvf_set_msglevel(arg0,arg1);
  
#line 165 
  return;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_ringparam_7(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 169 
  igbvf_get_ringparam(arg0,arg1);
  
#line 170 
  return;
}


#line 173  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_get_regs_25(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 174 
  igbvf_get_regs(arg0,arg1,arg2);
  
#line 175 
  return;
}


#line 178  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
int ldv_emg_wrapper_igbvf_get_eeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 179 
  tmp = igbvf_get_eeprom(arg0,arg1,arg2);
  
#line 179 
  return tmp;
}


#line 183  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_ethtool.c.aux"
void ldv_emg_wrapper_igbvf_diag_test_20(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 184 
  igbvf_diag_test(arg0,arg1,arg2);
  
#line 185 
  return;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.h"
s32 e1000_init_mbx_params_vf(struct e1000_hw *hw);


#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.h"
void e1000_rlpml_set_vf(struct e1000_hw *hw, u16 max_size);


#line 261 
void e1000_init_function_pointers_vf(struct e1000_hw *hw);


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_check_for_link_vf(struct e1000_hw *hw);


#line 30 
static s32 e1000_get_link_up_info_vf(struct e1000_hw *hw, u16 *speed, u16 *duplex);


#line 32 
static s32 e1000_init_hw_vf(struct e1000_hw *hw);


#line 33 
static s32 e1000_reset_hw_vf(struct e1000_hw *hw);


#line 35 
static void e1000_update_mc_addr_list_vf(struct e1000_hw *hw, u8 *mc_addr_list, u32 mc_addr_count, u32 rar_used_count, u32 rar_count);


#line 37 
static void e1000_rar_set_vf(struct e1000_hw *hw, u8 *addr, u32 index);


#line 38 
static s32 e1000_read_mac_addr_vf(struct e1000_hw *hw);


#line 39 
static s32 e1000_set_vfta_vf(struct e1000_hw *hw, u16 vid, bool set);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_init_mac_params_vf(struct e1000_hw *hw)
{
  s32 __retres;
  
#line 47 
  struct e1000_mac_info *mac = & hw->mac;
  
#line 50 
  mac->mta_reg_count = (unsigned short)128U;
  
#line 52 
  mac->rar_entry_count = (unsigned short)1U;
  
#line 56 
  mac->ops.reset_hw = & e1000_reset_hw_vf;
  
#line 58 
  mac->ops.init_hw = & e1000_init_hw_vf;
  
#line 60 
  mac->ops.check_for_link = & e1000_check_for_link_vf;
  
#line 62 
  mac->ops.get_link_up_info = & e1000_get_link_up_info_vf;
  
#line 64 
  mac->ops.update_mc_addr_list = & e1000_update_mc_addr_list_vf;
  
#line 66 
  mac->ops.rar_set = & e1000_rar_set_vf;
  
#line 68 
  mac->ops.read_mac_addr = & e1000_read_mac_addr_vf;
  
#line 70 
  mac->ops.set_vfta = & e1000_set_vfta_vf;
  
#line 72 
  __retres = 0;
  
#line 72 
  return __retres;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
void e1000_init_function_pointers_vf(struct e1000_hw *hw)
{
  
#line 81 
  hw->mac.ops.init_params = & e1000_init_mac_params_vf;
  
#line 82 
  hw->mbx.ops.init_params = & e1000_init_mbx_params_vf;
  
#line 83 
  return;
}


#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_get_link_up_info_vf(struct e1000_hw *hw, u16 *speed, u16 *duplex)
{
  s32 __retres;
  s32 status;
  unsigned int tmp;
  
#line 99 
  tmp = readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 99 
  status = (int)tmp;
  
#line 100 
  if ((status & 128) != 0) 
#line 101 
                           *speed = (unsigned short)1000U;
  else 
    
#line 102 
    if ((status & 64) != 0) 
#line 103 
                            *speed = (unsigned short)100U; else 
#line 105 
                                                                *speed = (unsigned short)10U;
  
#line 107 
  if ((status & 1) != 0) 
#line 108 
                         *duplex = (unsigned short)2U; else 
#line 110 
                                                            *duplex = (unsigned short)1U;
  
#line 112 
  __retres = 0;
  
#line 112 
  return __retres;
}


#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_reset_hw_vf(struct e1000_hw *hw)
{
  s32 __retres;
  u32 msgbuf[3U];
  u32 ctrl;
  s32 tmp;
  
#line 124 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 125 
  u32 timeout = 200U;
  
#line 126 
  u32 ret_val = 4294967291U;
  
#line 128 
  u8 *addr = (u8 *)(& msgbuf[1]);
  
#line 132 
  ctrl = readl((void const volatile *)hw->hw_addr);
  
#line 133 
  writel(ctrl | 67108864U,(void volatile *)hw->hw_addr);
  
#line 136 
  goto ldv_31141;
  ldv_31140: 
#line 137 
  ;
  
#line 137 
  timeout -= 1U;
  
#line 138 
  __const_udelay(21475UL);
  ldv_31141: 
#line 140 
  ;
  
#line 136 
  tmp = (*(mbx->ops.check_for_rst))(hw);
  
#line 136 
  if (tmp == 0) {
    
#line 136 
    if (timeout != 0U) 
#line 138 
                       goto ldv_31140; else 
#line 141 
                                            goto ldv_31142;
  }
  else 
#line 141 
       goto ldv_31142;
  ldv_31142: 
#line 142 
  ;
  
#line 141 
  if (timeout != 0U) {
    s32 tmp_0;
    
#line 143 
    mbx->timeout = 2000U;
    
#line 146 
    msgbuf[0] = 1U;
    
#line 147 
    (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)1);
    
#line 149 
    msleep(10U);
    
#line 152 
    tmp_0 = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3);
    
#line 152 
    ret_val = (unsigned int)tmp_0;
    
#line 153 
    if (ret_val == 0U) 
      
#line 154 
      if (msgbuf[0] == 2147483649U) 
#line 156 
                                    memcpy((void *)(& hw->mac.perm_addr),(void const *)addr,6UL); else 
                                                                    
#line 158 
                                                                    ret_val = 4294967291U;
    else ;
  }
  else ;
  
#line 162 
  __retres = (int)ret_val;
  
#line 162 
  return __retres;
}


#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_init_hw_vf(struct e1000_hw *hw)
{
  s32 __retres;
  
#line 174 
  e1000_rar_set_vf(hw,(u8 *)(& hw->mac.addr),0U);
  
#line 176 
  __retres = 0;
  
#line 176 
  return __retres;
}


#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static u32 e1000_hash_mc_addr_vf(struct e1000_hw *hw, u8 *mc_addr)
{
  u32 hash_value;
  u32 hash_mask;
  
#line 191 
  u8 bit_shift = (unsigned char)0U;
  
#line 194 
  hash_mask = (unsigned int)((int)hw->mac.mta_reg_count * 32 + -1);
  
#line 199 
  goto ldv_31154;
  ldv_31153: 
#line 200 
  ;
  
#line 200 
  bit_shift = (u8)((int)bit_shift + 1);
  ldv_31154: 
#line 201 
  ;
  
#line 199 
  if (hash_mask >> (int)bit_shift != 255U) 
#line 201 
                                           goto ldv_31153; else 
#line 204 
                                                                goto ldv_31155;
  ldv_31155: 
#line 205 
  ;
  
#line 202 
  hash_value = (unsigned int)(((int)*(mc_addr + 4U) >> (8 - (int)bit_shift)) | ((int)*(mc_addr + 5U) << (int)bit_shift)) & hash_mask;
  
#line 205 
  return hash_value;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static void e1000_update_mc_addr_list_vf(struct e1000_hw *hw, u8 *mc_addr_list, u32 mc_addr_count, u32 rar_used_count, u32 rar_count)
{
  u32 msgbuf[16U];
  u32 hash_value;
  u32 cnt;
  u32 i;
  
#line 225 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 227 
  u16 *hash_list = (u16 *)(& msgbuf[1]);
  
#line 240 
  if (30U < mc_addr_count) 
#line 240 
                           cnt = 30U; else 
#line 240 
                                           cnt = mc_addr_count;
  
#line 241 
  msgbuf[0] = 3U;
  
#line 242 
  msgbuf[0] |= cnt << 16;
  
#line 244 
  i = 0U;
  
#line 244 
  goto ldv_31170;
  ldv_31169: 
#line 245 
  ;
  
#line 245 
  hash_value = e1000_hash_mc_addr_vf(hw,mc_addr_list);
  
#line 246 
  *(hash_list + i) = (unsigned short)hash_value;
  
#line 247 
  mc_addr_list += 6U;
  
#line 244 
  i += 1U;
  ldv_31170: 
#line 245 
  ;
  
#line 244 
  if (i < cnt) 
#line 246 
               goto ldv_31169; else 
#line 249 
                                    goto ldv_31171;
  ldv_31171: 
#line 250 
  ;
  
#line 250 
  (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)16);
  
#line 251 
  return;
}


#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_set_vfta_vf(struct e1000_hw *hw, u16 vid, bool set)
{
  u32 msgbuf[2U];
  s32 err;
  
#line 261 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 265 
  msgbuf[0] = 4U;
  
#line 266 
  msgbuf[1] = (unsigned int)vid;
  
#line 268 
  if ((int)set != 0) 
#line 269 
                     msgbuf[0] |= 65536U; else ;
  
#line 271 
  (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)2);
  
#line 273 
  err = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)2);
  
#line 275 
  msgbuf[0] &= 3758096383U;
  
#line 278 
  if (err == 0 && msgbuf[0] == 1073741828U) 
#line 279 
                                            err = -5; else ;
  
#line 281 
  return err;
}


#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
void e1000_rlpml_set_vf(struct e1000_hw *hw, u16 max_size)
{
  u32 msgbuf[2U];
  
#line 291 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 294 
  msgbuf[0] = 5U;
  
#line 295 
  msgbuf[1] = (unsigned int)max_size;
  
#line 297 
  (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)2);
  
#line 298 
  return;
}


#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static void e1000_rar_set_vf(struct e1000_hw *hw, u8 *addr, u32 index)
{
  u32 msgbuf[3U];
  s32 ret_val;
  
#line 308 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 310 
  u8 *msg_addr = (u8 *)(& msgbuf[1]);
  
#line 313 
  memset((void *)(& msgbuf),0,12UL);
  
#line 314 
  msgbuf[0] = 2U;
  
#line 315 
  memcpy((void *)msg_addr,(void const *)addr,6UL);
  
#line 316 
  ret_val = (*(mbx->ops.write_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3);
  
#line 318 
  if (ret_val == 0) 
#line 319 
                    ret_val = (*(mbx->ops.read_posted))(hw,(u32 *)(& msgbuf),(unsigned short)3); else ;
  
#line 321 
  msgbuf[0] &= 3758096383U;
  
#line 324 
  if (ret_val == 0 && msgbuf[0] == 1073741826U) 
#line 326 
                                                e1000_read_mac_addr_vf(hw); else ;
  
#line 327 
  return;
}


#line 333  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_read_mac_addr_vf(struct e1000_hw *hw)
{
  s32 __retres;
  
#line 335 
  memcpy((void *)(& hw->mac.addr),(void const *)(& hw->mac.perm_addr),6UL);
  
#line 337 
  __retres = 0;
  
#line 337 
  return __retres;
}


#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/vf.c"
static s32 e1000_check_for_link_vf(struct e1000_hw *hw)
{
  s32 tmp;
  unsigned int tmp_0;
  s32 tmp_1;
  
#line 350 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 351 
  struct e1000_mac_info *mac = & hw->mac;
  
#line 352 
  s32 ret_val = 0;
  
#line 353 
  u32 in_msg = 0U;
  
#line 361 
  tmp = (*(mbx->ops.check_for_rst))(hw);
  
#line 361 
  if (tmp == 0) 
#line 362 
                mac->get_link_status = (_Bool)1;
  else 
    
#line 361 
    if (mbx->timeout == 0U) 
#line 362 
                            mac->get_link_status = (_Bool)1; else ;
  
#line 364 
  if (! mac->get_link_status) 
#line 365 
                              goto out; else ;
  
#line 368 
  tmp_0 = readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 368 
  if ((tmp_0 & 2U) == 0U) 
#line 369 
                          goto out; else ;
  
#line 374 
  tmp_1 = (*(mbx->ops.read))(hw,& in_msg,(unsigned short)1);
  
#line 374 
  if (tmp_1 != 0) 
#line 375 
                  goto out; else ;
  
#line 378 
  if ((in_msg & 536870912U) == 0U) {
    
#line 380 
    if ((in_msg & 1073741824U) != 0U) 
#line 381 
                                      ret_val = -5; else ;
    
#line 382 
    goto out;
  }
  else ;
  
#line 386 
  if (mbx->timeout == 0U) {
    
#line 387 
    ret_val = -5;
    
#line 388 
    goto out;
  }
  else ;
  
#line 394 
  mac->get_link_status = (_Bool)0;
  out: 
#line 396 
  ;
  
#line 397 
  return ret_val;
}

unsigned short __builtin_bswap16(unsigned short);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_atomic_inc(atomic_t *v);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr, unsigned long const volatile *addr)
{
  int oldbit;
  
#line 317 
  ldv_inline_asm();
  
#line 323 
  return oldbit;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bitops/find.h"
unsigned long find_next_bit(unsigned long const *, unsigned long, unsigned long);


#line 42 
unsigned long find_first_bit(unsigned long const *, unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 402 
int sprintf(char *, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 98 
static void atomic_inc(atomic_t *v);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
void dump_page(struct page *, char const *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_73(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_80(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 185 
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_89(struct timer_list *ldv_func_arg1);


#line 252 
unsigned long round_jiffies(unsigned long);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_81(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_82(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_83(struct work_struct *work);


#line 572 
static bool ldv_schedule_work_85(struct work_struct *work);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
struct page *alloc_pages_current(gfp_t, unsigned int);


#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/gfp.h"
__inline static struct page *alloc_pages(gfp_t gfp_mask, unsigned int order)
{
  struct page *tmp;
  
#line 327 
  tmp = alloc_pages_current(gfp_mask,order);
  
#line 327 
  return tmp;
}


#line 366 
void __free_pages(struct page *, unsigned int);


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 1083 
void dev_err(struct device const *, char const * , ...);


#line 1089 
void _dev_info(struct device const *, char const * , ...);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 525 
static void *kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_channel_offline(struct pci_dev *pdev)
{
  int __retres;
  
#line 403 
  __retres = pdev->error_state != 1U;
  
#line 403 
  return __retres;
}


#line 953 
int pci_enable_device_mem(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_92(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_93(struct pci_driver *ldv_func_arg1);


#line 400  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page-flags.h"
__inline static int PageTail(struct page const *page)
{
  int tmp;
  
#line 400 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& page->flags));
  
#line 400 
  return tmp;
}


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head_by_tail(struct page *tail)
{
  struct page *__retres;
  int tmp;
  
#line 442 
  struct page *head = tail->__anonCompField_page_49.first_page;
  
#line 443 
  ldv_inline_asm();
  
#line 450 
  tmp = PageTail((struct page const *)tail);
  
#line 450 
  if ((long)(tmp != 0) != 0L) {
    
#line 451 
    __retres = head;
    
#line 451 
    goto return_label;
  }
  else ;
  
#line 452 
  __retres = tail;
  return_label: 
#line 452 
                return __retres;
}


#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static struct page *compound_head(struct page *page)
{
  struct page *__retres;
  int tmp_0;
  
#line 463 
  tmp_0 = PageTail((struct page const *)page);
  
#line 463 
  if ((long)(tmp_0 != 0) != 0L) {
    struct page *tmp;
    
#line 464 
    tmp = compound_head_by_tail(page);
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  else ;
  
#line 465 
  __retres = page;
  return_label: 
#line 465 
                return __retres;
}


#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static int page_count(struct page *page)
{
  int tmp_0;
  struct page *tmp;
  
#line 498 
  tmp = compound_head(page);
  
#line 498 
  tmp_0 = atomic_read((atomic_t const *)(& tmp->__anonCompField_page_45.__anonCompField___anonstruct_161_44.__anonCompField___anonunion_163_43._count));
  
#line 498 
  return tmp_0;
}


#line 532 
bool __get_page_tail(struct page *);


#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void get_page(struct page *page)
{
  int tmp_0;
  int tmp_1;
  
#line 536 
  tmp_0 = PageTail((struct page const *)page);
  
#line 536 
  if ((long)(tmp_0 != 0) != 0L) {
    bool tmp;
    
#line 537 
    tmp = __get_page_tail(page);
    
#line 537 
    if ((long)((int)tmp != 0) != 0L) 
#line 538 
                                     goto return_label; else ;
  }
  else ;
  
#line 543 
  tmp_1 = atomic_read((atomic_t const *)(& page->__anonCompField_page_45.__anonCompField___anonstruct_161_44.__anonCompField___anonunion_163_43._count));
  
#line 543 
  if ((long)(tmp_1 <= 0) != 0L) {
    
#line 543 
    dump_page(page,"VM_BUG_ON_PAGE(");
    
#line 544 
    ldv_inline_asm();
    
#line 543 
    ;
  }
  else ;
  
#line 544 
  atomic_inc(& page->__anonCompField_page_45.__anonCompField___anonstruct_161_44.__anonCompField___anonunion_163_43._count);
  return_label: 
#line 545 
                return;
}


#line 569 
void put_page(struct page *);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static bool page_is_pfmemalloc(struct page *page)
{
  bool __retres;
  
#line 1037 
  __retres = (_Bool)(page->__anonCompField_page_45.__anonCompField___anonstruct_161_40.index == 18446744073709551615UL);
  
#line 1037 
  return __retres;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msix(struct pci_dev *);


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_mask_and_coherent(struct device *dev, u64 mask)
{
  
#line 118 
  int rc = dma_set_mask(dev,mask);
  
#line 119 
  if (rc == 0) 
#line 120 
               dma_set_coherent_mask(dev,mask); else ;
  
#line 121 
  return rc;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/vmalloc.h"
void *vzalloc(unsigned long);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
void get_random_bytes(void *, int);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_fold(__wsum sum)
{
  __sum16 __retres;
  
#line 24 
  ldv_inline_asm();
  
#line 29 
  __retres = (unsigned short)(~ sum >> 16);
  
#line 29 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __wsum csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  
#line 89 
  ldv_inline_asm();
  
#line 97 
  return sum;
}


#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
__inline static __sum16 csum_tcpudp_magic(__be32 saddr, __be32 daddr, unsigned short len, unsigned short proto, __wsum sum)
{
  __sum16 tmp_0;
  __wsum tmp;
  
#line 116 
  tmp = csum_tcpudp_nofold(saddr,daddr,(unsigned short)((int)len),(unsigned short)((int)proto),sum);
  
#line 116 
  tmp_0 = csum_fold(tmp);
  
#line 116 
  return tmp_0;
}


#line 179 
__sum16 csum_ipv6_magic(struct in6_addr const *, struct in6_addr const *, __u32, unsigned short, __wsum);


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
{
  
#line 237 
  frag->size = size;
  
#line 238 
  return;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 852 
int pskb_expand_head(struct sk_buff *, int, int, gfp_t);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_header_cloned(struct sk_buff const *skb)
{
  int __retres;
  int dataref;
  unsigned char *tmp;
  
#line 1131 
  if ((unsigned int)*((unsigned char *)skb + 142UL) == 0U) {
    
#line 1132 
    __retres = 0;
    
#line 1132 
    goto return_label;
  }
  else ;
  
#line 1134 
  tmp = skb_end_pointer(skb);
  
#line 1134 
  dataref = atomic_read((atomic_t const *)(& ((struct skb_shared_info *)tmp)->dataref));
  
#line 1135 
  dataref = (dataref & 65535) - (dataref >> 16);
  
#line 1136 
  __retres = dataref != 1;
  return_label: 
#line 1136 
                return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1599  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  bool tmp_0;
  
#line 1602 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1602 
  skb_frag_t *frag = & ((struct skb_shared_info *)tmp)->frags[i];
  
#line 1609 
  frag->page.p = page;
  
#line 1610 
  frag->page_offset = (unsigned int)off;
  
#line 1611 
  skb_frag_size_set(frag,(unsigned int)size);
  
#line 1613 
  page = compound_head(page);
  
#line 1614 
  tmp_0 = page_is_pfmemalloc(page);
  
#line 1614 
  if ((int)tmp_0 != 0) 
#line 1615 
                       skb->pfmemalloc = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1616 
  return;
}


#line 1632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)
{
  unsigned char *tmp;
  
#line 1635 
  __skb_fill_page_desc(skb,i,page,off,size);
  
#line 1636 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1636 
  ((struct skb_shared_info *)tmp)->nr_frags = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 1637 
  return;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1719 
unsigned char *__pskb_pull_tail(struct sk_buff *, int);


#line 1735  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int pskb_may_pull(struct sk_buff *skb, unsigned int len)
{
  int __retres;
  unsigned int tmp;
  unsigned char *tmp_1;
  unsigned int tmp_0;
  
#line 1737 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 1737 
  ;
  
#line 1737 
  if ((long)(tmp >= len) != 0L) {
    
#line 1738 
    __retres = 1;
    
#line 1738 
    goto return_label;
  }
  else ;
  
#line 1739 
  if ((long)(skb->len < len) != 0L) {
    
#line 1740 
    __retres = 0;
    
#line 1740 
    goto return_label;
  }
  else ;
  
#line 1741 
  tmp_0 = skb_headlen((struct sk_buff const *)skb);
  
#line 1741 
  ;
  
#line 1741 
  ;
  
#line 1741 
  tmp_1 = __pskb_pull_tail(skb,(int)(len - tmp_0));
  
#line 1741 
  __retres = tmp_1 != (unsigned char *)0U;
  return_label: 
#line 1741 
                return __retres;
}


#line 1750  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headroom(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1752 
  __retres = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1752 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_transport_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1882 
  __retres = skb->head + (int)skb->transport_header;
  
#line 1882 
  return __retres;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 1982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_network_offset(struct sk_buff const *skb)
{
  int __retres;
  unsigned char *tmp;
  
#line 1984 
  tmp = skb_network_header(skb);
  
#line 1984 
  ;
  
#line 1984 
  __retres = (int)((long)tmp - (long)skb->data);
  
#line 1984 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 2427  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int __skb_cow(struct sk_buff *skb, unsigned int headroom, int cloned)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2430 
  int delta = 0;
  
#line 2432 
  tmp_0 = skb_headroom((struct sk_buff const *)skb);
  
#line 2432 
  ;
  
#line 2432 
  if (tmp_0 < headroom) {
    unsigned int tmp;
    
#line 2433 
    tmp = skb_headroom((struct sk_buff const *)skb);
    
#line 2433 
    delta = (int)(headroom - tmp);
  }
  else ;
  
#line 2435 
  if (delta != 0 || cloned != 0) {
    int tmp_5;
    int tmp_2;
    int tmp_4;
    {
      int tmp_1;
      
#line 2436 
      int _max1 = 32;
      
#line 2436 
      int _max2 = 64;
      
#line 2436 
      if (_max1 > _max2) 
#line 2436 
                         tmp_1 = _max1; else 
#line 2436 
                                             tmp_1 = _max2;
      
#line 2436 
      tmp_2 = tmp_1;
    }
    {
      int tmp_3;
      
#line 2436 
      int _max1_0 = 32;
      
#line 2436 
      int _max2_0 = 64;
      
#line 2436 
      if (_max1_0 > _max2_0) 
#line 2436 
                             tmp_3 = _max1_0; else 
#line 2436 
                                                   tmp_3 = _max2_0;
      
#line 2436 
      tmp_4 = tmp_3;
    }
    
#line 2436 
    ;
    
#line 2436 
    ;
    
#line 2436 
    tmp_5 = pskb_expand_head(skb,((tmp_2 + -1) + delta) & ~ (tmp_4 + -1),0,32U);
    
#line 2436 
    __retres = tmp_5;
    
#line 2436 
    goto return_label;
  }
  else ;
  
#line 2438 
  __retres = 0;
  return_label: 
#line 2438 
                return __retres;
}


#line 2468  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_cow_head(struct sk_buff *skb, unsigned int headroom)
{
  int tmp_0;
  int tmp;
  
#line 2470 
  tmp = skb_header_cloned((struct sk_buff const *)skb);
  
#line 2470 
  ;
  
#line 2470 
  ;
  
#line 2470 
  tmp_0 = __skb_cow(skb,headroom,tmp);
  
#line 2470 
  return tmp_0;
}


#line 3384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3386 
  tmp = skb_end_pointer(skb);
  
#line 3386 
  ;
  
#line 3386 
  __retres = (_Bool)((unsigned int)((struct skb_shared_info *)tmp)->gso_size != 0U);
  
#line 3386 
  return __retres;
}


#line 3390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static bool skb_is_gso_v6(struct sk_buff const *skb)
{
  bool __retres;
  unsigned char *tmp;
  
#line 3392 
  tmp = skb_end_pointer(skb);
  
#line 3392 
  ;
  
#line 3392 
  __retres = (_Bool)(((int)((struct skb_shared_info *)tmp)->gso_type & 16) != 0);
  
#line 3392 
  return __retres;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_74(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_75(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_76(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 161 
static void ldv_free_irq_77(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 1920 
void netif_napi_del(struct napi_struct *);


#line 2205 
static void ldv_free_netdev_88(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_91(struct net_device *ldv_func_arg1);


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2579 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2579 
  netif_tx_stop_queue(tmp);
  
#line 2580 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2948 
gro_result_t napi_gro_receive(struct napi_struct *, struct sk_buff *);


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
{
  u32 __retres;
  
#line 3162 
  if ((unsigned int)debug_value > 31U) {
    
#line 3163 
    __retres = (unsigned int)default_msg_enable_bits;
    
#line 3163 
    goto return_label;
  }
  else ;
  
#line 3164 
  if (debug_value == 0) {
    
#line 3165 
    __retres = 0U;
    
#line 3165 
    goto return_label;
  }
  else ;
  
#line 3167 
  __retres = (unsigned int)((1 << debug_value) + -1);
  return_label: 
#line 3167 
                return __retres;
}


#line 3355 
static int ldv_register_netdev_87(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_90(struct net_device *ldv_func_arg1);


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static struct tcphdr *tcp_hdr(struct sk_buff const *skb)
{
  struct tcphdr *tmp;
  
#line 29 
  tmp = (struct tcphdr *)skb_transport_header(skb);
  
#line 29 
  return tmp;
}


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/tcp.h"
__inline static unsigned int tcp_hdrlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  struct tcphdr *tmp;
  
#line 34 
  tmp = tcp_hdr(skb);
  
#line 34 
  ;
  
#line 34 
  __retres = (unsigned int)((int)tmp->doff * 4);
  
#line 34 
  return __retres;
}


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
__inline static struct ipv6hdr *ipv6_hdr(struct sk_buff const *skb)
{
  struct ipv6hdr *tmp;
  
#line 76 
  tmp = (struct ipv6hdr *)skb_network_header(skb);
  
#line 76 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_random_addr(u8 *addr)
{
  
#line 220 
  get_random_bytes((void *)addr,6);
  
#line 221 
  *addr = (unsigned char)((unsigned int)*addr & 254U);
  
#line 222 
  *addr = (unsigned char)((unsigned int)*addr | 2U);
  
#line 223 
  return;
}


#line 258  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_random(struct net_device *dev)
{
  
#line 260 
  dev->addr_assign_type = (unsigned char)1U;
  
#line 261 
  eth_random_addr(dev->dev_addr);
  
#line 262 
  return;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool ether_addr_equal(u8 const *addr1, u8 const *addr2)
{
  bool __retres;
  
#line 313 
  u32 fold = (*((u32 const *)addr1) ^ *((u32 const *)addr2)) | (unsigned int)((int)*((u16 const *)(addr1 + 4U)) ^ (int)*((u16 const *)(addr2 + 4U)));
  
#line 316 
  __retres = (_Bool)(fold == 0U);
  
#line 316 
  return __retres;
}


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 __vlan_get_protocol(struct sk_buff *skb, __be16 type, int *depth)
{
  __be16 __retres;
  
#line 484 
  unsigned int vlan_depth = (unsigned int)skb->mac_len;
  
#line 490 
  if ((unsigned int)type == 129U || (unsigned int)type == 43144U) {
    
#line 491 
    if (vlan_depth != 0U) {
      int tmp;
      {
        
#line 492 
        int __ret_warn_on = vlan_depth <= 3U;
        
#line 492 
        if ((long)(__ret_warn_on != 0) != 0L) 
#line 492 
                                              warn_slowpath_null("include/linux/if_vlan.h",492); else ;
        
#line 492 
        tmp = (long)(__ret_warn_on != 0);
      }
      
#line 492 
      if ((long)tmp != 0L) {
        
#line 493 
        __retres = (unsigned short)0U;
        
#line 493 
        goto return_label;
      }
      else ;
      
#line 494 
      vlan_depth += 4294967292U;
    }
    else 
#line 496 
         vlan_depth = 14U;
    ldv_53900: 
#line 497 
    ;
    {
      struct vlan_hdr *vh;
      int tmp_0;
      
#line 501 
      tmp_0 = pskb_may_pull(skb,vlan_depth + 4U);
      
#line 501 
      if ((long)(tmp_0 == 0) != 0L) {
        
#line 503 
        __retres = (unsigned short)0U;
        
#line 503 
        goto return_label;
      }
      else ;
      
#line 505 
      vh = (struct vlan_hdr *)(skb->data + vlan_depth);
      
#line 506 
      type = vh->h_vlan_encapsulated_proto;
      
#line 507 
      vlan_depth += 4U;
    }
    
#line 509 
    if ((unsigned int)type == 129U || (unsigned int)type == 43144U) 
#line 511 
                                                                    goto ldv_53900; else 
                                                                    
#line 514 
                                                                    goto ldv_53901;
    ldv_53901: 
#line 515 
    ;
  }
  else ;
  
#line 512 
  if (depth != (int *)0) 
#line 513 
                         *depth = (int)vlan_depth; else ;
  
#line 515 
  __retres = type;
  return_label: 
#line 515 
                return __retres;
}


#line 525  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static __be16 vlan_get_protocol(struct sk_buff *skb)
{
  __be16 tmp;
  
#line 527 
  tmp = __vlan_get_protocol(skb,(unsigned short)((int)skb->protocol),(int *)0);
  
#line 527 
  return tmp;
}


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
char igbvf_driver_name[6U] = {(char)'i', (char)'g', (char)'b', (char)'v', (char)'f', (char)'\000'};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
char const igbvf_driver_version[8U] = {(char)'2', (char)'.', (char)'0', (char)'.', (char)'2', (char)'-', (char)'k', (char)'\000'};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static char const igbvf_driver_string[49U] = {(char)'I', (char)'n', (char)'t', (char)'e', (char)'l', (char)'(', (char)'R', (char)')', (char)' ', (char)'G', (char)'i', (char)'g', (char)'a', (char)'b', (char)'i', (char)'t', (char)' ', (char)'V', (char)'i', (char)'r', (char)'t', (char)'u', (char)'a', (char)'l', (char)' ', (char)'F', (char)'u', (char)'n', (char)'c', (char)'t', (char)'i', (char)'o', (char)'n', (char)' ', (char)'N', (char)'e', (char)'t', (char)'w', (char)'o', (char)'r', (char)'k', (char)' ', (char)'D', (char)'r', (char)'i', (char)'v', (char)'e', (char)'r', (char)'\000'};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static char const igbvf_copyright[45U] = {(char)'C', (char)'o', (char)'p', (char)'y', (char)'r', (char)'i', (char)'g', (char)'h', (char)'t', (char)' ', (char)'(', (char)'c', (char)')', (char)' ', (char)'2', (char)'0', (char)'0', (char)'9', (char)' ', (char)'-', (char)' ', (char)'2', (char)'0', (char)'1', (char)'2', (char)' ', (char)'I', (char)'n', (char)'t', (char)'e', (char)'l', (char)' ', (char)'C', (char)'o', (char)'r', (char)'p', (char)'o', (char)'r', (char)'a', (char)'t', (char)'i', (char)'o', (char)'n', (char)'.', (char)'\000'};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int debug = -1;

#line 62 
static int igbvf_poll(struct napi_struct *napi, int budget);


#line 63 
static void igbvf_reset(struct igbvf_adapter *adapter);


#line 64 
static void igbvf_set_interrupt_capability(struct igbvf_adapter *adapter);


#line 65 
static void igbvf_reset_interrupt_capability(struct igbvf_adapter *adapter);


#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct igbvf_info igbvf_vf_info = {.mac = e1000_vfadapt, .flags = 0U, .pba = 10U, .init_ops = & e1000_init_function_pointers_vf, .get_variants = (s32 (*)(struct igbvf_adapter *))0};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct igbvf_info igbvf_i350_vf_info = {.mac = e1000_vfadapt_i350, .flags = 0U, .pba = 10U, .init_ops = & e1000_init_function_pointers_vf, .get_variants = (s32 (*)(struct igbvf_adapter *))0};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct igbvf_info const *igbvf_info_tbl[2U] = {(struct igbvf_info const *)(& igbvf_vf_info), (struct igbvf_info const *)(& igbvf_i350_vf_info)};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_desc_unused(struct igbvf_ring *ring)
{
  int __retres;
  
#line 92 
  if ((int)ring->next_to_clean > (int)ring->next_to_use) {
    
#line 93 
    __retres = ((int)ring->next_to_clean - (int)ring->next_to_use) + -1;
    
#line 93 
    goto return_label;
  }
  else ;
  
#line 95 
  __retres = (int)(((ring->count + (unsigned int)ring->next_to_clean) - (unsigned int)ring->next_to_use) + 4294967295U);
  return_label: 
#line 95 
                return __retres;
}


#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_receive_skb(struct igbvf_adapter *adapter, struct net_device *netdev, struct sk_buff *skb, u32 status, u16 vlan)
{
  u16 vid;
  
#line 112 
  if ((status & 8U) != 0U) {
    int tmp_2;
    
#line 113 
    if ((adapter->flags & 2U) != 0U && (status & 262144U) != 0U) 
      
#line 115 
      if (0 != 0) 
#line 115 
                  vid = (unsigned short)((unsigned int)((unsigned short)(((int)vlan << 8) | ((int)vlan >> 8))) & 4095U);
      else {
        __u16 tmp;
        
#line 115 
        tmp = __fswab16((unsigned short)((int)vlan));
        
#line 115 
        vid = (unsigned short)((unsigned int)tmp & 4095U);
      }
    else 
#line 117 
         vid = (unsigned short)((unsigned int)vlan & 4095U);
    
#line 118 
    if (0 != 0) {
      int tmp_0;
      
#line 118 
      tmp_0 = constant_test_bit((long)vid,(unsigned long const volatile *)(& adapter->active_vlans));
      
#line 118 
      tmp_2 = tmp_0 != 0;
    }
    else {
      int tmp_1;
      
#line 118 
      tmp_1 = variable_test_bit((long)vid,(unsigned long const volatile *)(& adapter->active_vlans));
      
#line 118 
      tmp_2 = tmp_1 != 0;
    }
    
#line 118 
    if (tmp_2) 
#line 119 
               __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vid)); else ;
  }
  else ;
  
#line 122 
  napi_gro_receive(& (adapter->rx_ring)->napi,skb);
  
#line 123 
  return;
}


#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
__inline static void igbvf_rx_checksum_adv(struct igbvf_adapter *adapter, u32 status_err, struct sk_buff *skb)
{
  
#line 128 
  skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 131 
  if ((status_err & 4U) != 0U || (adapter->flags & 1U) != 0U) 
#line 133 
                                                              goto return_label; else ;
  
#line 136 
  if ((status_err & 1610612736U) != 0U) {
    
#line 139 
    adapter->hw_csum_err += 1ULL;
    
#line 140 
    goto return_label;
  }
  else ;
  
#line 144 
  if ((status_err & 48U) != 0U) 
#line 145 
                                skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U; else ;
  
#line 147 
  adapter->hw_csum_good += 1ULL;
  return_label: 
#line 148 
                return;
}


#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_alloc_rx_buffers(struct igbvf_ring *rx_ring, int cleaned_count)
{
  union e1000_adv_rx_desc *rx_desc;
  struct igbvf_buffer *buffer_info;
  struct sk_buff *skb;
  unsigned int i;
  int bufsz;
  int tmp_1;
  
#line 158 
  struct igbvf_adapter *adapter = rx_ring->adapter;
  
#line 159 
  struct net_device *netdev = adapter->netdev;
  
#line 160 
  struct pci_dev *pdev = adapter->pdev;
  
#line 167 
  i = (unsigned int)rx_ring->next_to_use;
  
#line 168 
  buffer_info = rx_ring->buffer_info + i;
  
#line 170 
  if (adapter->rx_ps_hdr_size != 0U) 
#line 171 
                                     bufsz = (int)adapter->rx_ps_hdr_size; else 
                                                                    
#line 173 
                                                                    bufsz = (int)adapter->rx_buffer_len;
  
#line 175 
  goto ldv_54345;
  ldv_54344: 
#line 176 
  ;
  
#line 176 
  rx_desc = & (rx_ring->desc + i)->rx_desc;
  
#line 178 
  if (adapter->rx_ps_hdr_size != 0U && buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma == 0ULL) {
    int tmp;
    
#line 179 
    if (buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page == (struct page *)0) {
      
#line 180 
      buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page = alloc_pages(32U,0U);
      
#line 181 
      if (buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page == (struct page *)0) {
        
#line 182 
        adapter->alloc_rx_buff_failed += 1U;
        
#line 183 
        goto no_buffers;
      }
      else ;
      
#line 185 
      buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_offset = 0U;
    }
    else 
#line 187 
         buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_offset ^= 2048U;
    
#line 189 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma = dma_map_page(& pdev->dev,buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page,(unsigned long)buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_offset,2048UL,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 194 
    tmp = dma_mapping_error(& pdev->dev,buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma);
    
#line 194 
    if (tmp != 0) {
      
#line 196 
      __free_pages(buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page,0U);
      
#line 197 
      buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page = (struct page *)0;
      
#line 198 
      dev_err((struct device const *)(& pdev->dev),"RX DMA map failed\n");
      
#line 199 
      goto ldv_54343;
    }
    else ;
  }
  else ;
  
#line 203 
  if (buffer_info->skb == (struct sk_buff *)0) {
    int tmp_0;
    
#line 204 
    skb = netdev_alloc_skb_ip_align(netdev,(unsigned int)bufsz);
    
#line 205 
    if (skb == (struct sk_buff *)0) {
      
#line 206 
      adapter->alloc_rx_buff_failed += 1U;
      
#line 207 
      goto no_buffers;
    }
    else ;
    
#line 210 
    buffer_info->skb = skb;
    
#line 211 
    buffer_info->dma = dma_map_single_attrs(& pdev->dev,(void *)skb->data,(unsigned long)bufsz,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 214 
    tmp_0 = dma_mapping_error(& pdev->dev,buffer_info->dma);
    
#line 214 
    if (tmp_0 != 0) {
      
#line 215 
      consume_skb(buffer_info->skb);
      
#line 216 
      buffer_info->skb = (struct sk_buff *)0;
      
#line 217 
      dev_err((struct device const *)(& pdev->dev),"RX DMA map failed\n");
      
#line 218 
      goto no_buffers;
    }
    else ;
  }
  else ;
  
#line 224 
  if (adapter->rx_ps_hdr_size != 0U) {
    
#line 225 
    rx_desc->read.pkt_addr = buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma;
    
#line 227 
    rx_desc->read.hdr_addr = buffer_info->dma;
  }
  else {
    
#line 229 
    rx_desc->read.pkt_addr = buffer_info->dma;
    
#line 230 
    rx_desc->read.hdr_addr = 0ULL;
  }
  
#line 233 
  i += 1U;
  
#line 234 
  if (rx_ring->count == i) 
#line 235 
                           i = 0U; else ;
  
#line 236 
  buffer_info = rx_ring->buffer_info + i;
  ldv_54345: 
#line 237 
  ;
  
#line 175 
  tmp_1 = cleaned_count;
  
#line 175 
  cleaned_count -= 1;
  
#line 175 
  ;
  
#line 175 
  if (tmp_1 != 0) 
#line 177 
                  goto ldv_54344; else 
#line 180 
                                       goto ldv_54343;
  ldv_54343: 
#line 181 
  ;
  no_buffers: 
#line 239 
  ;
  
#line 240 
  if ((unsigned int)rx_ring->next_to_use != i) {
    
#line 241 
    rx_ring->next_to_use = (unsigned short)i;
    
#line 242 
    if (i == 0U) 
#line 243 
                 i = rx_ring->count + 4294967295U; else 
#line 245 
                                                        i -= 1U;
    
#line 246 
    ldv_inline_asm();
    
#line 253 
    writel(i,(void volatile *)(adapter->hw.hw_addr + (int)rx_ring->tail));
  }
  else ;
  
#line 255 
  return;
}


#line 264  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static bool igbvf_clean_rx_irq(struct igbvf_adapter *adapter, int *work_done, int work_to_do)
{
  union e1000_adv_rx_desc *rx_desc;
  union e1000_adv_rx_desc *next_rxd;
  struct igbvf_buffer *buffer_info;
  struct igbvf_buffer *next_buffer;
  struct sk_buff *skb;
  unsigned int i;
  u32 length;
  u32 hlen;
  u32 staterr;
  unsigned char *tmp;
  
#line 267 
  struct igbvf_ring *rx_ring = adapter->rx_ring;
  
#line 268 
  struct net_device *netdev = adapter->netdev;
  
#line 269 
  struct pci_dev *pdev = adapter->pdev;
  
#line 273 
  bool cleaned = (_Bool)0;
  
#line 274 
  int cleaned_count = 0;
  
#line 275 
  unsigned int total_bytes = 0U;
  
#line 275 
  unsigned int total_packets = 0U;
  
#line 279 
  i = (unsigned int)rx_ring->next_to_clean;
  
#line 280 
  rx_desc = & (rx_ring->desc + i)->rx_desc;
  
#line 281 
  staterr = rx_desc->wb.upper.status_error;
  
#line 283 
  goto ldv_54371;
  ldv_54370: 
#line 284 
  ;
  
#line 284 
  if (*work_done >= work_to_do) 
#line 285 
                                goto ldv_54367; else ;
  
#line 286 
  *work_done += 1;
  
#line 287 
  ldv_inline_asm();
  
#line 289 
  buffer_info = rx_ring->buffer_info + i;
  
#line 296 
  hlen = (unsigned int)((int)rx_desc->wb.lower.lo_dword.hs_rss.hdr_info >> 5) & 1023U;
  
#line 299 
  if (adapter->rx_ps_hdr_size < hlen) 
#line 300 
                                      hlen = adapter->rx_ps_hdr_size; else ;
  
#line 302 
  length = (unsigned int)rx_desc->wb.upper.length;
  
#line 303 
  cleaned = (_Bool)1;
  
#line 304 
  cleaned_count += 1;
  
#line 306 
  skb = buffer_info->skb;
  
#line 307 
  __builtin_prefetch((void const *)skb->data);
  
#line 308 
  buffer_info->skb = (struct sk_buff *)0;
  
#line 309 
  if (adapter->rx_ps_hdr_size == 0U) {
    
#line 310 
    dma_unmap_single_attrs(& pdev->dev,buffer_info->dma,(unsigned long)adapter->rx_buffer_len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 313 
    buffer_info->dma = 0ULL;
    
#line 314 
    skb_put(skb,length);
    
#line 315 
    goto send_up;
  }
  else ;
  
#line 318 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 318 
  ;
  
#line 318 
  if ((unsigned int)((struct skb_shared_info *)tmp)->nr_frags == 0U) {
    
#line 319 
    dma_unmap_single_attrs(& pdev->dev,buffer_info->dma,(unsigned long)adapter->rx_ps_hdr_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 322 
    skb_put(skb,hlen);
  }
  else ;
  
#line 325 
  if (length != 0U) {
    unsigned char *tmp_0;
    
#line 326 
    dma_unmap_page(& pdev->dev,buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma,2048UL,(enum dma_data_direction)DMA_FROM_DEVICE);
    
#line 329 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma = 0ULL;
    
#line 331 
    ;
    
#line 331 
    ;
    
#line 331 
    ;
    
#line 331 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 331 
    ;
    
#line 331 
    skb_fill_page_desc(skb,(int)((struct skb_shared_info *)tmp_0)->nr_frags,buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page,(int)buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_offset,(int)length);
    
#line 336 
    if (adapter->rx_buffer_len > 2048U) 
#line 336 
                                        goto _LOR;
    else {
      int tmp_1;
      
#line 336 
      tmp_1 = page_count(buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page);
      
#line 336 
      if (tmp_1 != 1) _LOR: 
#line 338 
                            buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page = (struct page *)0; else 
                                                                    
#line 340 
                                                                    get_page(buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page);
    }
    
#line 342 
    skb->len += length;
    
#line 343 
    skb->data_len += length;
    
#line 344 
    skb->truesize += 2048U;
  }
  else ;
  send_up: 
#line 346 
  ;
  
#line 347 
  i += 1U;
  
#line 348 
  if (rx_ring->count == i) 
#line 349 
                           i = 0U; else ;
  
#line 350 
  next_rxd = & (rx_ring->desc + i)->rx_desc;
  
#line 351 
  __builtin_prefetch((void const *)next_rxd);
  
#line 352 
  next_buffer = rx_ring->buffer_info + i;
  
#line 354 
  if ((staterr & 2U) == 0U) {
    
#line 355 
    buffer_info->skb = next_buffer->skb;
    
#line 356 
    buffer_info->dma = next_buffer->dma;
    
#line 357 
    next_buffer->skb = skb;
    
#line 358 
    next_buffer->dma = 0ULL;
    
#line 359 
    goto next_desc;
  }
  else ;
  
#line 362 
  if ((staterr & 2533359616U) != 0U) {
    
#line 363 
    dev_kfree_skb_irq(skb);
    
#line 364 
    goto next_desc;
  }
  else ;
  
#line 367 
  total_bytes = skb->len + total_bytes;
  
#line 368 
  total_packets += 1U;
  
#line 370 
  igbvf_rx_checksum_adv(adapter,staterr,skb);
  
#line 372 
  skb->protocol = eth_type_trans(skb,netdev);
  
#line 374 
  igbvf_receive_skb(adapter,netdev,skb,staterr,(unsigned short)((int)rx_desc->wb.upper.vlan));
  next_desc: 
#line 377 
  ;
  
#line 378 
  rx_desc->wb.upper.status_error = 0U;
  
#line 381 
  if (cleaned_count > 15) {
    
#line 382 
    igbvf_alloc_rx_buffers(rx_ring,cleaned_count);
    
#line 383 
    cleaned_count = 0;
  }
  else ;
  
#line 387 
  rx_desc = next_rxd;
  
#line 388 
  buffer_info = next_buffer;
  
#line 390 
  staterr = rx_desc->wb.upper.status_error;
  ldv_54371: 
#line 391 
  ;
  
#line 283 
  if ((staterr & 1U) != 0U) 
#line 285 
                            goto ldv_54370; else 
#line 288 
                                                 goto ldv_54367;
  ldv_54367: 
#line 289 
  ;
  
#line 393 
  rx_ring->next_to_clean = (unsigned short)i;
  
#line 394 
  cleaned_count = igbvf_desc_unused(rx_ring);
  
#line 396 
  if (cleaned_count != 0) 
#line 397 
                          igbvf_alloc_rx_buffers(rx_ring,cleaned_count); else ;
  
#line 399 
  adapter->total_rx_packets += total_packets;
  
#line 400 
  adapter->total_rx_bytes += total_bytes;
  
#line 401 
  adapter->net_stats.rx_bytes += (unsigned long)total_bytes;
  
#line 402 
  adapter->net_stats.rx_packets += (unsigned long)total_packets;
  
#line 403 
  return cleaned;
}


#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_put_txbuf(struct igbvf_adapter *adapter, struct igbvf_buffer *buffer_info)
{
  
#line 409 
  if (buffer_info->dma != 0ULL) {
    
#line 410 
    if ((unsigned int)buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.mapped_as_page != 0U) 
      
#line 411 
      dma_unmap_page(& (adapter->pdev)->dev,buffer_info->dma,(unsigned long)buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.length,(enum dma_data_direction)DMA_TO_DEVICE); else 
                                                                    
#line 416 
                                                                    dma_unmap_single_attrs(& (adapter->pdev)->dev,buffer_info->dma,(unsigned long)buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.length,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
    
#line 420 
    buffer_info->dma = 0ULL;
  }
  else ;
  
#line 422 
  if (buffer_info->skb != (struct sk_buff *)0) {
    
#line 423 
    dev_kfree_skb_any(buffer_info->skb);
    
#line 424 
    buffer_info->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 426 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = 0UL;
  
#line 427 
  return;
}


#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
int igbvf_setup_tx_resources(struct igbvf_adapter *adapter, struct igbvf_ring *tx_ring)
{
  int __retres;
  int size;
  
#line 438 
  struct pci_dev *pdev = adapter->pdev;
  
#line 441 
  size = (int)(tx_ring->count * 40U);
  
#line 442 
  tx_ring->buffer_info = (struct igbvf_buffer *)vzalloc((unsigned long)size);
  
#line 443 
  if (tx_ring->buffer_info == (struct igbvf_buffer *)0) 
#line 444 
                                                        goto err; else ;
  
#line 447 
  tx_ring->size = tx_ring->count * 16U;
  
#line 448 
  tx_ring->size = (tx_ring->size + 4095U) & 4294963200U;
  
#line 450 
  tx_ring->desc = (union igbvf_desc *)dma_alloc_attrs(& pdev->dev,(unsigned long)tx_ring->size,& tx_ring->dma,208U,(struct dma_attrs *)0);
  
#line 452 
  if (tx_ring->desc == (union igbvf_desc *)0) 
#line 453 
                                              goto err; else ;
  
#line 455 
  tx_ring->adapter = adapter;
  
#line 456 
  tx_ring->next_to_use = (unsigned short)0U;
  
#line 457 
  tx_ring->next_to_clean = (unsigned short)0U;
  
#line 459 
  __retres = 0;
  
#line 459 
  goto return_label;
  err: 
#line 460 
  ;
  
#line 461 
  vfree((void const *)tx_ring->buffer_info);
  
#line 462 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"Unable to allocate memory for the transmit descriptor ring\n");
  
#line 464 
  __retres = -12;
  return_label: 
#line 464 
                return __retres;
}


#line 473  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
int igbvf_setup_rx_resources(struct igbvf_adapter *adapter, struct igbvf_ring *rx_ring)
{
  int __retres;
  int size;
  int desc_len;
  
#line 476 
  struct pci_dev *pdev = adapter->pdev;
  
#line 479 
  size = (int)(rx_ring->count * 40U);
  
#line 480 
  rx_ring->buffer_info = (struct igbvf_buffer *)vzalloc((unsigned long)size);
  
#line 481 
  if (rx_ring->buffer_info == (struct igbvf_buffer *)0) 
#line 482 
                                                        goto err; else ;
  
#line 484 
  desc_len = 16;
  
#line 487 
  rx_ring->size = rx_ring->count * (unsigned int)desc_len;
  
#line 488 
  rx_ring->size = (rx_ring->size + 4095U) & 4294963200U;
  
#line 490 
  rx_ring->desc = (union igbvf_desc *)dma_alloc_attrs(& pdev->dev,(unsigned long)rx_ring->size,& rx_ring->dma,208U,(struct dma_attrs *)0);
  
#line 492 
  if (rx_ring->desc == (union igbvf_desc *)0) 
#line 493 
                                              goto err; else ;
  
#line 495 
  rx_ring->next_to_clean = (unsigned short)0U;
  
#line 496 
  rx_ring->next_to_use = (unsigned short)0U;
  
#line 498 
  rx_ring->adapter = adapter;
  
#line 500 
  __retres = 0;
  
#line 500 
  goto return_label;
  err: 
#line 502 
  ;
  
#line 503 
  vfree((void const *)rx_ring->buffer_info);
  
#line 504 
  rx_ring->buffer_info = (struct igbvf_buffer *)0;
  
#line 505 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"Unable to allocate memory for the receive descriptor ring\n");
  
#line 507 
  __retres = -12;
  return_label: 
#line 507 
                return __retres;
}


#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_clean_tx_ring(struct igbvf_ring *tx_ring)
{
  struct igbvf_buffer *buffer_info;
  unsigned long size;
  unsigned int i;
  
#line 516 
  struct igbvf_adapter *adapter = tx_ring->adapter;
  
#line 521 
  if (tx_ring->buffer_info == (struct igbvf_buffer *)0) 
#line 522 
                                                        goto return_label; else ;
  
#line 525 
  i = 0U;
  
#line 525 
  goto ldv_54399;
  ldv_54398: 
#line 526 
  ;
  
#line 526 
  buffer_info = tx_ring->buffer_info + i;
  
#line 527 
  igbvf_put_txbuf(adapter,buffer_info);
  
#line 525 
  i += 1U;
  ldv_54399: 
#line 526 
  ;
  
#line 525 
  if (tx_ring->count > i) 
#line 527 
                          goto ldv_54398; else 
#line 530 
                                               goto ldv_54400;
  ldv_54400: 
#line 531 
  ;
  
#line 530 
  size = (unsigned long)tx_ring->count * 40UL;
  
#line 531 
  memset((void *)tx_ring->buffer_info,0,size);
  
#line 534 
  memset((void *)tx_ring->desc,0,(unsigned long)tx_ring->size);
  
#line 536 
  tx_ring->next_to_use = (unsigned short)0U;
  
#line 537 
  tx_ring->next_to_clean = (unsigned short)0U;
  
#line 539 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + (int)tx_ring->head));
  
#line 540 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + (int)tx_ring->tail));
  return_label: 
#line 541 
                return;
}


#line 549  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
void igbvf_free_tx_resources(struct igbvf_ring *tx_ring)
{
  
#line 551 
  struct pci_dev *pdev = (tx_ring->adapter)->pdev;
  
#line 553 
  igbvf_clean_tx_ring(tx_ring);
  
#line 555 
  vfree((void const *)tx_ring->buffer_info);
  
#line 556 
  tx_ring->buffer_info = (struct igbvf_buffer *)0;
  
#line 558 
  dma_free_attrs(& pdev->dev,(unsigned long)tx_ring->size,(void *)tx_ring->desc,tx_ring->dma,(struct dma_attrs *)0);
  
#line 561 
  tx_ring->desc = (union igbvf_desc *)0;
  
#line 562 
  return;
}


#line 568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_clean_rx_ring(struct igbvf_ring *rx_ring)
{
  struct igbvf_buffer *buffer_info;
  unsigned long size;
  unsigned int i;
  
#line 570 
  struct igbvf_adapter *adapter = rx_ring->adapter;
  
#line 572 
  struct pci_dev *pdev = adapter->pdev;
  
#line 576 
  if (rx_ring->buffer_info == (struct igbvf_buffer *)0) 
#line 577 
                                                        goto return_label; else ;
  
#line 580 
  i = 0U;
  
#line 580 
  goto ldv_54414;
  ldv_54413: 
#line 581 
  ;
  
#line 581 
  buffer_info = rx_ring->buffer_info + i;
  
#line 582 
  if (buffer_info->dma != 0ULL) {
    
#line 583 
    if (adapter->rx_ps_hdr_size != 0U) 
#line 584 
                                       dma_unmap_single_attrs(& pdev->dev,buffer_info->dma,(unsigned long)adapter->rx_ps_hdr_size,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0); else 
                                                                    
#line 588 
                                                                    dma_unmap_single_attrs(& pdev->dev,buffer_info->dma,(unsigned long)adapter->rx_buffer_len,(enum dma_data_direction)DMA_FROM_DEVICE,(struct dma_attrs *)0);
    
#line 592 
    buffer_info->dma = 0ULL;
  }
  else ;
  
#line 595 
  if (buffer_info->skb != (struct sk_buff *)0) {
    
#line 596 
    consume_skb(buffer_info->skb);
    
#line 597 
    buffer_info->skb = (struct sk_buff *)0;
  }
  else ;
  
#line 600 
  if (buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page != (struct page *)0) {
    
#line 601 
    if (buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma != 0ULL) 
      
#line 602 
      dma_unmap_page(& pdev->dev,buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma,2048UL,(enum dma_data_direction)DMA_FROM_DEVICE); else ;
    
#line 606 
    put_page(buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page);
    
#line 607 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page = (struct page *)0;
    
#line 608 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_dma = 0ULL;
    
#line 609 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_96.page_offset = 0U;
  }
  else ;
  
#line 580 
  i += 1U;
  ldv_54414: 
#line 581 
  ;
  
#line 580 
  if (rx_ring->count > i) 
#line 582 
                          goto ldv_54413; else 
#line 585 
                                               goto ldv_54415;
  ldv_54415: 
#line 586 
  ;
  
#line 613 
  size = (unsigned long)rx_ring->count * 40UL;
  
#line 614 
  memset((void *)rx_ring->buffer_info,0,size);
  
#line 617 
  memset((void *)rx_ring->desc,0,(unsigned long)rx_ring->size);
  
#line 619 
  rx_ring->next_to_clean = (unsigned short)0U;
  
#line 620 
  rx_ring->next_to_use = (unsigned short)0U;
  
#line 622 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + (int)rx_ring->head));
  
#line 623 
  writel(0U,(void volatile *)(adapter->hw.hw_addr + (int)rx_ring->tail));
  return_label: 
#line 624 
                return;
}


#line 633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
void igbvf_free_rx_resources(struct igbvf_ring *rx_ring)
{
  
#line 635 
  struct pci_dev *pdev = (rx_ring->adapter)->pdev;
  
#line 637 
  igbvf_clean_rx_ring(rx_ring);
  
#line 639 
  vfree((void const *)rx_ring->buffer_info);
  
#line 640 
  rx_ring->buffer_info = (struct igbvf_buffer *)0;
  
#line 642 
  dma_free_attrs(& pdev->dev,(unsigned long)rx_ring->size,(void *)rx_ring->desc,rx_ring->dma,(struct dma_attrs *)0);
  
#line 644 
  rx_ring->desc = (union igbvf_desc *)0;
  
#line 645 
  return;
}


#line 661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static enum latency_range igbvf_update_itr(struct igbvf_adapter *adapter, enum latency_range itr_setting, int packets, int bytes)
{
  
#line 665 
  enum latency_range retval = itr_setting;
  
#line 667 
  if (packets == 0) 
#line 668 
                    goto update_itr_done; else ;
  
#line 670 
  switch ((unsigned int)itr_setting) {
    case (unsigned int)0: 
#line 671 
    ;
    
#line 673 
    if (bytes / packets > 8000) 
#line 674 
                                retval = bulk_latency;
    else 
      
#line 675 
      if (packets <= 4 && bytes > 512) 
#line 676 
                                       retval = low_latency; else ;
    
#line 677 
    goto ldv_54429;
    case (unsigned int)1: 
#line 678 
    ;
    
#line 679 
    if (bytes > 10000) {
      
#line 681 
      if (bytes / packets > 8000) 
#line 682 
                                  retval = bulk_latency;
      else 
        
#line 683 
        if (packets <= 9 || bytes / packets > 1200) 
#line 684 
                                                    retval = bulk_latency;
        else 
          
#line 685 
          if (packets > 35) 
#line 686 
                            retval = lowest_latency; else ;
    }
    else 
      
#line 687 
      if (bytes / packets > 2000) 
#line 688 
                                  retval = bulk_latency;
      else 
        
#line 689 
        if (packets <= 2 && bytes <= 511) 
#line 690 
                                          retval = lowest_latency; else ;
    
#line 692 
    goto ldv_54429;
    case (unsigned int)2: 
#line 693 
    ;
    
#line 694 
    if (bytes > 25000) {
      
#line 695 
      if (packets > 35) 
#line 696 
                        retval = low_latency; else ;
    }
    else 
      
#line 697 
      if (bytes <= 5999) 
#line 698 
                         retval = low_latency; else ;
    
#line 700 
    goto ldv_54429;
    default: 
#line 701 
    ;
    
#line 702 
    goto ldv_54429;
  }
  ldv_54429: 
#line 705 
  ;
  update_itr_done: 
#line 705 
  ;
  
#line 706 
  return retval;
}


#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_range_to_itr(enum latency_range current_range)
{
  int new_itr;
  
#line 713 
  switch ((unsigned int)current_range) {
    case (unsigned int)0: 
#line 715 
    ;
    
#line 716 
    new_itr = 56;
    
#line 717 
    goto ldv_54438;
    case (unsigned int)1: 
#line 718 
    ;
    
#line 719 
    new_itr = 196;
    
#line 720 
    goto ldv_54438;
    case (unsigned int)2: 
#line 721 
    ;
    
#line 722 
    new_itr = 980;
    
#line 723 
    goto ldv_54438;
    default: 
#line 724 
    ;
    
#line 725 
    new_itr = 488;
    
#line 726 
    goto ldv_54438;
  }
  ldv_54438: 
#line 728 
  ;
  
#line 728 
  return new_itr;
}


#line 731  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_set_itr(struct igbvf_adapter *adapter)
{
  u32 new_itr;
  int tmp;
  int tmp_2;
  
#line 735 
  (adapter->tx_ring)->itr_range = igbvf_update_itr(adapter,(enum latency_range)(adapter->tx_ring)->itr_val,(int)adapter->total_tx_packets,(int)adapter->total_tx_bytes);
  
#line 742 
  if (adapter->requested_itr == 3U && (adapter->tx_ring)->itr_range == (unsigned int)lowest_latency) 
    
#line 744 
    (adapter->tx_ring)->itr_range = low_latency; else ;
  
#line 746 
  tmp = igbvf_range_to_itr((adapter->tx_ring)->itr_range);
  
#line 746 
  new_itr = (unsigned int)tmp;
  
#line 748 
  if ((adapter->tx_ring)->itr_val != new_itr) {
    
#line 749 
    u32 current_itr = (adapter->tx_ring)->itr_val;
    
#line 754 
    if (new_itr > current_itr) {
      u32 tmp_1;
      {
        u32 tmp_0;
        
#line 755 
        u32 _min1 = (new_itr >> 2) + current_itr;
        
#line 755 
        u32 _min2 = new_itr;
        
#line 755 
        if (_min1 < _min2) 
#line 755 
                           tmp_0 = _min1; else 
#line 755 
                                               tmp_0 = _min2;
        
#line 755 
        tmp_1 = tmp_0;
      }
      
#line 754 
      new_itr = tmp_1;
    }
    else 
#line 754 
         new_itr = new_itr;
    
#line 757 
    (adapter->tx_ring)->itr_val = new_itr;
    
#line 759 
    (adapter->tx_ring)->set_itr = 1;
  }
  else ;
  
#line 762 
  (adapter->rx_ring)->itr_range = igbvf_update_itr(adapter,(enum latency_range)(adapter->rx_ring)->itr_val,(int)adapter->total_rx_packets,(int)adapter->total_rx_bytes);
  
#line 766 
  if (adapter->requested_itr == 3U && (adapter->rx_ring)->itr_range == (unsigned int)lowest_latency) 
    
#line 768 
    (adapter->rx_ring)->itr_range = low_latency; else ;
  
#line 770 
  tmp_2 = igbvf_range_to_itr((adapter->rx_ring)->itr_range);
  
#line 770 
  new_itr = (unsigned int)tmp_2;
  
#line 772 
  if ((adapter->rx_ring)->itr_val != new_itr) {
    
#line 773 
    u32 current_itr_0 = (adapter->rx_ring)->itr_val;
    
#line 775 
    if (new_itr > current_itr_0) {
      u32 tmp_4;
      {
        u32 tmp_3;
        
#line 776 
        u32 _min1_0 = (new_itr >> 2) + current_itr_0;
        
#line 776 
        u32 _min2_0 = new_itr;
        
#line 776 
        if (_min1_0 < _min2_0) 
#line 776 
                               tmp_3 = _min1_0; else 
#line 776 
                                                     tmp_3 = _min2_0;
        
#line 776 
        tmp_4 = tmp_3;
      }
      
#line 775 
      new_itr = tmp_4;
    }
    else 
#line 775 
         new_itr = new_itr;
    
#line 778 
    (adapter->rx_ring)->itr_val = new_itr;
    
#line 780 
    (adapter->rx_ring)->set_itr = 1;
  }
  else ;
  
#line 782 
  return;
}


#line 790  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static bool igbvf_clean_tx_irq(struct igbvf_ring *tx_ring)
{
  bool __retres;
  struct igbvf_buffer *buffer_info;
  struct sk_buff *skb;
  union e1000_adv_tx_desc *tx_desc;
  union e1000_adv_tx_desc *eop_desc;
  unsigned int i;
  int tmp_6;
  
#line 792 
  struct igbvf_adapter *adapter = tx_ring->adapter;
  
#line 793 
  struct net_device *netdev = adapter->netdev;
  
#line 797 
  unsigned int total_bytes = 0U;
  
#line 797 
  unsigned int total_packets = 0U;
  
#line 798 
  unsigned int count = 0U;
  
#line 799 
  bool cleaned = (_Bool)0;
  
#line 801 
  i = (unsigned int)tx_ring->next_to_clean;
  
#line 802 
  buffer_info = tx_ring->buffer_info + i;
  
#line 803 
  eop_desc = buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.next_to_watch;
  ldv_54474: 
#line 804 
  ;
  
#line 807 
  if (eop_desc == (union e1000_adv_tx_desc *)0) 
#line 808 
                                                goto ldv_54468; else ;
  
#line 814 
  if ((eop_desc->wb.status & 1U) == 0U) 
#line 815 
                                        goto ldv_54468; else ;
  
#line 818 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.next_to_watch = (union e1000_adv_tx_desc *)0;
  
#line 820 
  cleaned = (_Bool)0;
  
#line 820 
  goto ldv_54472;
  ldv_54471: 
#line 821 
  ;
  
#line 821 
  tx_desc = & (tx_ring->desc + i)->tx_desc;
  
#line 822 
  cleaned = (_Bool)(tx_desc == eop_desc);
  
#line 823 
  skb = buffer_info->skb;
  
#line 825 
  if (skb != (struct sk_buff *)0) {
    unsigned int segs;
    unsigned int bytecount;
    int tmp_0;
    unsigned char *tmp_1;
    unsigned int tmp_2;
    
#line 829 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 829 
    tmp_0 = (int)((struct skb_shared_info *)tmp_1)->gso_segs != 0;
    
#line 829 
    if (tmp_0) ; else 
#line 829 
                      tmp_0 = 1;
    
#line 829 
    segs = (unsigned int)tmp_0;
    
#line 831 
    tmp_2 = skb_headlen((struct sk_buff const *)skb);
    
#line 831 
    bytecount = (segs + 4294967295U) * tmp_2 + skb->len;
    
#line 833 
    total_packets += segs;
    
#line 834 
    total_bytes += bytecount;
  }
  else ;
  
#line 837 
  igbvf_put_txbuf(adapter,buffer_info);
  
#line 838 
  tx_desc->wb.status = 0U;
  
#line 840 
  i += 1U;
  
#line 841 
  if (tx_ring->count == i) 
#line 842 
                           i = 0U; else ;
  
#line 844 
  buffer_info = tx_ring->buffer_info + i;
  
#line 820 
  count += 1U;
  ldv_54472: 
#line 821 
  ;
  
#line 820 
  if (! cleaned) 
#line 822 
                 goto ldv_54471; else 
#line 825 
                                      goto ldv_54473;
  ldv_54473: 
#line 826 
  ;
  
#line 847 
  eop_desc = buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.next_to_watch;
  
#line 848 
  if (tx_ring->count > count) 
#line 850 
                              goto ldv_54474; else 
#line 853 
                                                   goto ldv_54468;
  ldv_54468: 
#line 854 
  ;
  
#line 850 
  tx_ring->next_to_clean = (unsigned short)i;
  
#line 852 
  if ((long)(count != 0U) != 0L) {
    bool tmp_5;
    
#line 852 
    tmp_5 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 852 
    if ((long)((int)tmp_5 != 0) != 0L) 
#line 852 
                                       tmp_6 = 1; else 
#line 852 
                                                       tmp_6 = 0;
  }
  else 
#line 852 
       tmp_6 = 0;
  
#line 852 
  if (tmp_6 != 0) {
    int tmp_7;
    
#line 852 
    tmp_7 = igbvf_desc_unused(tx_ring);
    
#line 852 
    if ((long)(tmp_7 > 31) != 0L) {
      bool tmp_3;
      
#line 854 
      ldv_inline_asm();
      
#line 858 
      tmp_3 = netif_queue_stopped((struct net_device const *)netdev);
      
#line 858 
      if ((int)tmp_3 != 0) {
        int tmp_4;
        
#line 858 
        tmp_4 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
        
#line 858 
        if (tmp_4 == 0) {
          
#line 860 
          netif_wake_queue(netdev);
          
#line 861 
          adapter->restart_queue += 1U;
        }
        else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 865 
  adapter->net_stats.tx_bytes += (unsigned long)total_bytes;
  
#line 866 
  adapter->net_stats.tx_packets += (unsigned long)total_packets;
  
#line 867 
  __retres = (_Bool)(tx_ring->count > count);
  
#line 867 
  return __retres;
}


#line 870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static irqreturn_t igbvf_msix_other(int irq, void *data)
{
  irqreturn_t __retres;
  int tmp_0;
  
#line 872 
  struct net_device *netdev = (struct net_device *)data;
  
#line 873 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 874 
  struct e1000_hw *hw = & adapter->hw;
  
#line 876 
  adapter->int_counter1 += 1U;
  
#line 878 
  netif_carrier_off(netdev);
  
#line 879 
  hw->mac.get_link_status = (_Bool)1;
  
#line 880 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 880 
  if (tmp_0 == 0) 
#line 881 
                  ldv_mod_timer_73(& adapter->watchdog_timer,jiffies + 1UL); else ;
  
#line 883 
  writel(adapter->eims_other,(void volatile *)(hw->hw_addr + 5412U));
  
#line 885 
  __retres = IRQ_HANDLED;
  
#line 885 
  return __retres;
}


#line 888  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static irqreturn_t igbvf_intr_msix_tx(int irq, void *data)
{
  irqreturn_t __retres;
  int tmp_1;
  bool tmp_0;
  
#line 890 
  struct net_device *netdev = (struct net_device *)data;
  
#line 891 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 892 
  struct e1000_hw *hw = & adapter->hw;
  
#line 893 
  struct igbvf_ring *tx_ring = adapter->tx_ring;
  
#line 895 
  if (tx_ring->set_itr != 0) {
    
#line 896 
    writel(tx_ring->itr_val,(void volatile *)(adapter->hw.hw_addr + (int)tx_ring->itr_register));
    
#line 898 
    (adapter->tx_ring)->set_itr = 0;
  }
  else ;
  
#line 901 
  adapter->total_tx_bytes = 0U;
  
#line 902 
  adapter->total_tx_packets = 0U;
  
#line 907 
  tmp_0 = igbvf_clean_tx_irq(tx_ring);
  
#line 907 
  if (tmp_0) 
#line 907 
             tmp_1 = 0; else 
#line 907 
                             tmp_1 = 1;
  
#line 907 
  if (tmp_1) 
#line 909 
             writel(tx_ring->eims_value,(void volatile *)(hw->hw_addr + 5408U)); else 
                                                                    
#line 911 
                                                                    writel(tx_ring->eims_value,(void volatile *)(hw->hw_addr + 5412U));
  
#line 913 
  __retres = IRQ_HANDLED;
  
#line 913 
  return __retres;
}


#line 916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static irqreturn_t igbvf_intr_msix_rx(int irq, void *data)
{
  irqreturn_t __retres;
  bool tmp_0;
  
#line 918 
  struct net_device *netdev = (struct net_device *)data;
  
#line 919 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 921 
  adapter->int_counter0 += 1U;
  
#line 926 
  if ((adapter->rx_ring)->set_itr != 0) {
    
#line 927 
    writel((adapter->rx_ring)->itr_val,(void volatile *)(adapter->hw.hw_addr + (int)(adapter->rx_ring)->itr_register));
    
#line 929 
    (adapter->rx_ring)->set_itr = 0;
  }
  else ;
  
#line 932 
  tmp_0 = napi_schedule_prep(& (adapter->rx_ring)->napi);
  
#line 932 
  if ((int)tmp_0 != 0) {
    
#line 933 
    adapter->total_rx_bytes = 0U;
    
#line 934 
    adapter->total_rx_packets = 0U;
    
#line 935 
    __napi_schedule(& (adapter->rx_ring)->napi);
  }
  else ;
  
#line 938 
  __retres = IRQ_HANDLED;
  
#line 938 
  return __retres;
}


#line 943  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_assign_vector(struct igbvf_adapter *adapter, int rx_queue, int tx_queue, int msix_vector)
{
  u32 ivar;
  u32 index;
  
#line 946 
  struct e1000_hw *hw = & adapter->hw;
  
#line 954 
  if (rx_queue >= 0) {
    
#line 955 
    index = (unsigned int)(rx_queue >> 1);
    
#line 956 
    ivar = readl((void const volatile *)(hw->hw_addr + ((index << 2) + 5888U)));
    
#line 957 
    if ((rx_queue & 1) != 0) {
      
#line 959 
      ivar &= 4278255615U;
      
#line 960 
      ivar = ((unsigned int)(msix_vector << 16) | ivar) | 8388608U;
    }
    else {
      
#line 963 
      ivar &= 4294967040U;
      
#line 964 
      ivar = ((unsigned int)msix_vector | ivar) | 128U;
    }
    
#line 966 
    (adapter->rx_ring + rx_queue)->eims_value = (unsigned int)(1 << msix_vector);
    
#line 967 
    writel(ivar,(void volatile *)(hw->hw_addr + ((index << 2) + 5888U)));
  }
  else ;
  
#line 969 
  if (tx_queue >= 0) {
    
#line 970 
    index = (unsigned int)(tx_queue >> 1);
    
#line 971 
    ivar = readl((void const volatile *)(hw->hw_addr + ((index << 2) + 5888U)));
    
#line 972 
    if ((tx_queue & 1) != 0) {
      
#line 974 
      ivar &= 16777215U;
      
#line 975 
      ivar = ((unsigned int)(msix_vector << 24) | ivar) | 2147483648U;
    }
    else {
      
#line 978 
      ivar &= 4294902015U;
      
#line 979 
      ivar = ((unsigned int)(msix_vector << 8) | ivar) | 32768U;
    }
    
#line 981 
    (adapter->tx_ring + tx_queue)->eims_value = (unsigned int)(1 << msix_vector);
    
#line 982 
    writel(ivar,(void volatile *)(hw->hw_addr + ((index << 2) + 5888U)));
  }
  else ;
  
#line 984 
  return;
}


#line 993  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_configure_msix(struct igbvf_adapter *adapter)
{
  u32 tmp;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  
#line 996 
  struct e1000_hw *hw = & adapter->hw;
  
#line 997 
  struct igbvf_ring *tx_ring = adapter->tx_ring;
  
#line 998 
  struct igbvf_ring *rx_ring = adapter->rx_ring;
  
#line 999 
  int vector = 0;
  
#line 1001 
  adapter->eims_enable_mask = 0U;
  
#line 1003 
  tmp_0 = vector;
  
#line 1003 
  vector += 1;
  
#line 1003 
  ;
  
#line 1003 
  ;
  
#line 1003 
  igbvf_assign_vector(adapter,-1,0,tmp_0);
  
#line 1004 
  adapter->eims_enable_mask |= tx_ring->eims_value;
  
#line 1005 
  writel(tx_ring->itr_val,(void volatile *)(hw->hw_addr + (int)tx_ring->itr_register));
  
#line 1006 
  tmp_1 = vector;
  
#line 1006 
  vector += 1;
  
#line 1006 
  ;
  
#line 1006 
  ;
  
#line 1006 
  igbvf_assign_vector(adapter,0,-1,tmp_1);
  
#line 1007 
  adapter->eims_enable_mask |= rx_ring->eims_value;
  
#line 1008 
  writel(rx_ring->itr_val,(void volatile *)(hw->hw_addr + (int)rx_ring->itr_register));
  
#line 1012 
  tmp_2 = vector;
  
#line 1012 
  vector += 1;
  
#line 1012 
  tmp = (unsigned int)(tmp_2 | 128);
  
#line 1014 
  writel(tmp,(void volatile *)(hw->hw_addr + 5952U));
  
#line 1016 
  adapter->eims_enable_mask = (unsigned int)((1 << vector) + -1);
  
#line 1017 
  adapter->eims_other = (unsigned int)(1 << (vector + -1));
  
#line 1018 
  readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 1019 
  return;
}


#line 1021  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_reset_interrupt_capability(struct igbvf_adapter *adapter)
{
  
#line 1023 
  if (adapter->msix_entries != (struct msix_entry *)0) {
    
#line 1024 
    pci_disable_msix(adapter->pdev);
    
#line 1025 
    kfree((void const *)adapter->msix_entries);
    
#line 1026 
    adapter->msix_entries = (struct msix_entry *)0;
  }
  else ;
  
#line 1028 
  return;
}


#line 1037  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_set_interrupt_capability(struct igbvf_adapter *adapter)
{
  int i;
  
#line 1039 
  int err = -12;
  
#line 1043 
  adapter->msix_entries = (struct msix_entry *)kcalloc(3UL,8UL,208U);
  
#line 1045 
  if (adapter->msix_entries != (struct msix_entry *)0) {
    
#line 1046 
    i = 0;
    
#line 1046 
    goto ldv_54522;
    ldv_54521: 
#line 1047 
    ;
    
#line 1047 
    (adapter->msix_entries + i)->entry = (unsigned short)i;
    
#line 1046 
    i += 1;
    ldv_54522: 
#line 1047 
    ;
    
#line 1046 
    if (i <= 2) 
#line 1048 
                goto ldv_54521; else 
#line 1051 
                                     goto ldv_54523;
    ldv_54523: 
#line 1052 
    ;
    
#line 1049 
    err = pci_enable_msix_range(adapter->pdev,adapter->msix_entries,3,3);
  }
  else ;
  
#line 1053 
  if (err < 0) {
    
#line 1055 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Failed to initialize MSI-X interrupts.\n");
    
#line 1057 
    igbvf_reset_interrupt_capability(adapter);
  }
  else ;
  
#line 1059 
  return;
}


#line 1068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_request_msix(struct igbvf_adapter *adapter)
{
  int __retres;
  size_t tmp;
  
#line 1070 
  struct net_device *netdev = adapter->netdev;
  
#line 1071 
  int err = 0;
  
#line 1071 
  int vector = 0;
  
#line 1073 
  tmp = strlen((char const *)(& netdev->name));
  
#line 1073 
  if (tmp <= 10UL) {
    
#line 1074 
    sprintf((char *)(& (adapter->tx_ring)->name),"%s-tx-0",(char *)(& netdev->name));
    
#line 1075 
    sprintf((char *)(& (adapter->rx_ring)->name),"%s-rx-0",(char *)(& netdev->name));
  }
  else {
    
#line 1077 
    memcpy((void *)(& (adapter->tx_ring)->name),(void const *)(& netdev->name),16UL);
    
#line 1078 
    memcpy((void *)(& (adapter->rx_ring)->name),(void const *)(& netdev->name),16UL);
  }
  
#line 1081 
  err = ldv_request_irq_74((adapter->msix_entries + vector)->vector,& igbvf_intr_msix_tx,0UL,(char const *)(& (adapter->tx_ring)->name),(void *)netdev);
  
#line 1084 
  if (err != 0) 
#line 1085 
                goto out; else ;
  
#line 1087 
  (adapter->tx_ring)->itr_register = (unsigned short)((unsigned int)((unsigned short)(vector + 1440)) * 4U);
  
#line 1088 
  (adapter->tx_ring)->itr_val = adapter->current_itr;
  
#line 1089 
  vector += 1;
  
#line 1091 
  err = ldv_request_irq_75((adapter->msix_entries + vector)->vector,& igbvf_intr_msix_rx,0UL,(char const *)(& (adapter->rx_ring)->name),(void *)netdev);
  
#line 1094 
  if (err != 0) 
#line 1095 
                goto out; else ;
  
#line 1097 
  (adapter->rx_ring)->itr_register = (unsigned short)((unsigned int)((unsigned short)(vector + 1440)) * 4U);
  
#line 1098 
  (adapter->rx_ring)->itr_val = adapter->current_itr;
  
#line 1099 
  vector += 1;
  
#line 1101 
  err = ldv_request_irq_76((adapter->msix_entries + vector)->vector,& igbvf_msix_other,0UL,(char const *)(& netdev->name),(void *)netdev);
  
#line 1103 
  if (err != 0) 
#line 1104 
                goto out; else ;
  
#line 1106 
  igbvf_configure_msix(adapter);
  
#line 1107 
  __retres = 0;
  
#line 1107 
  goto return_label;
  out: 
#line 1108 
  ;
  
#line 1109 
  __retres = err;
  return_label: 
#line 1109 
                return __retres;
}


#line 1116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_alloc_queues(struct igbvf_adapter *adapter)
{
  int __retres;
  
#line 1118 
  struct net_device *netdev = adapter->netdev;
  
#line 1120 
  adapter->tx_ring = (struct igbvf_ring *)kzalloc(400UL,208U);
  
#line 1121 
  if (adapter->tx_ring == (struct igbvf_ring *)0) {
    
#line 1122 
    __retres = -12;
    
#line 1122 
    goto return_label;
  }
  else ;
  
#line 1124 
  adapter->rx_ring = (struct igbvf_ring *)kzalloc(400UL,208U);
  
#line 1125 
  if (adapter->rx_ring == (struct igbvf_ring *)0) {
    
#line 1126 
    kfree((void const *)adapter->tx_ring);
    
#line 1127 
    __retres = -12;
    
#line 1127 
    goto return_label;
  }
  else ;
  
#line 1130 
  netif_napi_add(netdev,& (adapter->rx_ring)->napi,& igbvf_poll,64);
  
#line 1132 
  __retres = 0;
  return_label: 
#line 1132 
                return __retres;
}


#line 1142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_request_irq(struct igbvf_adapter *adapter)
{
  int __retres;
  
#line 1144 
  int err = -1;
  
#line 1147 
  if (adapter->msix_entries != (struct msix_entry *)0) 
#line 1148 
                                                       err = igbvf_request_msix(adapter); else ;
  
#line 1150 
  if (err == 0) {
    
#line 1151 
    __retres = err;
    
#line 1151 
    goto return_label;
  }
  else ;
  
#line 1153 
  dev_err((struct device const *)(& (adapter->pdev)->dev),"Unable to allocate interrupt, Error: %d\n",err);
  
#line 1156 
  __retres = err;
  return_label: 
#line 1156 
                return __retres;
}


#line 1159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_free_irq(struct igbvf_adapter *adapter)
{
  int vector;
  
#line 1161 
  struct net_device *netdev = adapter->netdev;
  
#line 1164 
  if (adapter->msix_entries != (struct msix_entry *)0) {
    
#line 1165 
    vector = 0;
    
#line 1165 
    goto ldv_54545;
    ldv_54544: 
#line 1166 
    ;
    
#line 1166 
    ldv_free_irq_77((adapter->msix_entries + vector)->vector,(void *)netdev);
    
#line 1165 
    vector += 1;
    ldv_54545: 
#line 1166 
    ;
    
#line 1165 
    if (vector <= 2) 
#line 1167 
                     goto ldv_54544; else 
#line 1170 
                                          goto ldv_54546;
    ldv_54546: 
#line 1171 
    ;
  }
  else ;
  
#line 1173 
  return;
}


#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_irq_disable(struct igbvf_adapter *adapter)
{
  
#line 1176 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1178 
  writel(4294967295U,(void volatile *)(hw->hw_addr + 5416U));
  
#line 1180 
  if (adapter->msix_entries != (struct msix_entry *)0) 
#line 1181 
                                                       writel(0U,(void volatile *)(hw->hw_addr + 5420U)); else ;
  
#line 1182 
  return;
}


#line 1188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_irq_enable(struct igbvf_adapter *adapter)
{
  
#line 1190 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1192 
  writel(adapter->eims_enable_mask,(void volatile *)(hw->hw_addr + 5420U));
  
#line 1193 
  writel(adapter->eims_enable_mask,(void volatile *)(hw->hw_addr + 5424U));
  
#line 1194 
  writel(adapter->eims_enable_mask,(void volatile *)(hw->hw_addr + 5412U));
  
#line 1195 
  return;
}


#line 1202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_poll(struct napi_struct *napi, int budget)
{
  struct igbvf_ring *tmp;
  {
    
#line 1204 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 1204 
    tmp = (struct igbvf_ring *)__mptr + 18446744073709551568U;
  }
  
#line 1204 
  struct igbvf_ring *rx_ring = tmp;
  
#line 1205 
  struct igbvf_adapter *adapter = rx_ring->adapter;
  
#line 1206 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1207 
  int work_done = 0;
  
#line 1209 
  igbvf_clean_rx_irq(adapter,& work_done,budget);
  
#line 1212 
  if (work_done < budget) {
    int tmp_0;
    
#line 1213 
    napi_complete(napi);
    
#line 1215 
    if ((adapter->requested_itr & 3U) != 0U) 
#line 1216 
                                             igbvf_set_itr(adapter); else ;
    
#line 1218 
    tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
    
#line 1218 
    if (tmp_0 == 0) 
#line 1219 
                    writel((adapter->rx_ring)->eims_value,(void volatile *)(hw->hw_addr + 5412U)); else ;
  }
  else ;
  
#line 1222 
  return work_done;
}


#line 1231  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_set_rlpml(struct igbvf_adapter *adapter)
{
  int max_frame_size;
  
#line 1234 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1236 
  max_frame_size = (int)(adapter->max_frame_size + 4U);
  
#line 1237 
  e1000_rlpml_set_vf(hw,(unsigned short)((int)((unsigned short)max_frame_size)));
  
#line 1238 
  return;
}


#line 1240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_vlan_rx_add_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  s32 tmp_0;
  
#line 1243 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1244 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1246 
  tmp_0 = (*(hw->mac.ops.set_vfta))(hw,(unsigned short)((int)vid),(_Bool)1);
  
#line 1246 
  if (tmp_0 != 0) {
    
#line 1247 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Failed to add vlan id %d\n",(int)vid);
    
#line 1248 
    __retres = -22;
    
#line 1248 
    goto return_label;
  }
  else ;
  
#line 1250 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 1251 
  __retres = 0;
  return_label: 
#line 1251 
                return __retres;
}


#line 1254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_vlan_rx_kill_vid(struct net_device *netdev, __be16 proto, u16 vid)
{
  int __retres;
  s32 tmp_0;
  
#line 1257 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1258 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1260 
  tmp_0 = (*(hw->mac.ops.set_vfta))(hw,(unsigned short)((int)vid),(_Bool)0);
  
#line 1260 
  if (tmp_0 != 0) {
    
#line 1261 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"Failed to remove vlan id %d\n",(int)vid);
    
#line 1263 
    __retres = -22;
    
#line 1263 
    goto return_label;
  }
  else ;
  
#line 1265 
  set_bit((long)vid,(unsigned long volatile *)(& adapter->active_vlans));
  
#line 1266 
  __retres = 0;
  return_label: 
#line 1266 
                return __retres;
}


#line 1269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_restore_vlan(struct igbvf_adapter *adapter)
{
  u16 vid;
  unsigned long tmp;
  unsigned long tmp_0;
  
#line 1273 
  tmp = find_first_bit((unsigned long const *)(& adapter->active_vlans),4096UL);
  
#line 1273 
  vid = (unsigned short)tmp;
  
#line 1273 
  goto ldv_54589;
  ldv_54588: 
#line 1274 
  ;
  
#line 1274 
  igbvf_vlan_rx_add_vid(adapter->netdev,(unsigned short)129,(unsigned short)((int)vid));
  
#line 1273 
  tmp_0 = find_next_bit((unsigned long const *)(& adapter->active_vlans),4096UL,(unsigned long)((int)vid + 1));
  
#line 1273 
  vid = (unsigned short)tmp_0;
  ldv_54589: 
#line 1274 
  ;
  
#line 1273 
  if ((unsigned int)vid <= 4095U) 
#line 1275 
                                  goto ldv_54588; else 
#line 1278 
                                                       goto ldv_54590;
  ldv_54590: 
#line 1279 
  ;
  
#line 1280 
  return;
}


#line 1283  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_configure_tx(struct igbvf_adapter *adapter)
{
  u64 tdba;
  u32 txdctl;
  u32 dca_txctrl;
  
#line 1285 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1286 
  struct igbvf_ring *tx_ring = adapter->tx_ring;
  
#line 1291 
  txdctl = readl((void const volatile *)(hw->hw_addr + 14376U));
  
#line 1292 
  writel(txdctl & 4261412863U,(void volatile *)(hw->hw_addr + 14376U));
  
#line 1293 
  readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 1294 
  msleep(10U);
  
#line 1297 
  writel(tx_ring->count * 16U,(void volatile *)(hw->hw_addr + 14344U));
  
#line 1298 
  tdba = tx_ring->dma;
  
#line 1299 
  writel((unsigned int)tdba,(void volatile *)(hw->hw_addr + 14336U));
  
#line 1300 
  writel((unsigned int)(tdba >> 32),(void volatile *)(hw->hw_addr + 14340U));
  
#line 1301 
  writel(0U,(void volatile *)(hw->hw_addr + 14352U));
  
#line 1302 
  writel(0U,(void volatile *)(hw->hw_addr + 14360U));
  
#line 1303 
  tx_ring->head = (unsigned short)14352U;
  
#line 1304 
  tx_ring->tail = (unsigned short)14360U;
  
#line 1310 
  dca_txctrl = readl((void const volatile *)(hw->hw_addr + 14356U));
  
#line 1311 
  dca_txctrl &= 4294965247U;
  
#line 1312 
  writel(dca_txctrl,(void volatile *)(hw->hw_addr + 14356U));
  
#line 1315 
  txdctl |= 33554432U;
  
#line 1316 
  writel(txdctl,(void volatile *)(hw->hw_addr + 14376U));
  
#line 1319 
  adapter->txd_cmd = 50331648U;
  
#line 1322 
  adapter->txd_cmd |= 134217728U;
  
#line 1323 
  return;
}


#line 1329  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_setup_srrctl(struct igbvf_adapter *adapter)
{
  
#line 1331 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1332 
  u32 srrctl = 0U;
  
#line 1334 
  srrctl &= 4060070016U;
  
#line 1339 
  srrctl |= 2147483648U;
  
#line 1342 
  srrctl = ((adapter->rx_buffer_len + 1023U) >> 10) | srrctl;
  
#line 1345 
  if (adapter->rx_buffer_len <= 2047U) {
    
#line 1346 
    adapter->rx_ps_hdr_size = 0U;
    
#line 1347 
    srrctl |= 33554432U;
  }
  else {
    
#line 1349 
    adapter->rx_ps_hdr_size = 128U;
    
#line 1350 
    srrctl = (adapter->rx_ps_hdr_size << 2) | srrctl;
    
#line 1352 
    srrctl |= 167772160U;
  }
  
#line 1355 
  writel(srrctl,(void volatile *)(hw->hw_addr + 10252U));
  
#line 1356 
  return;
}


#line 1364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_configure_rx(struct igbvf_adapter *adapter)
{
  u64 rdba;
  u32 rdlen;
  u32 rxdctl;
  
#line 1366 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1367 
  struct igbvf_ring *rx_ring = adapter->rx_ring;
  
#line 1372 
  rxdctl = readl((void const volatile *)(hw->hw_addr + 10280U));
  
#line 1373 
  writel(rxdctl & 4261412863U,(void volatile *)(hw->hw_addr + 10280U));
  
#line 1374 
  readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 1375 
  msleep(10U);
  
#line 1377 
  rdlen = rx_ring->count * 16U;
  
#line 1382 
  rdba = rx_ring->dma;
  
#line 1383 
  writel((unsigned int)rdba,(void volatile *)(hw->hw_addr + 10240U));
  
#line 1384 
  writel((unsigned int)(rdba >> 32),(void volatile *)(hw->hw_addr + 10244U));
  
#line 1385 
  writel(rx_ring->count * 16U,(void volatile *)(hw->hw_addr + 10248U));
  
#line 1386 
  rx_ring->head = (unsigned short)10256U;
  
#line 1387 
  rx_ring->tail = (unsigned short)10264U;
  
#line 1388 
  writel(0U,(void volatile *)(hw->hw_addr + 10256U));
  
#line 1389 
  writel(0U,(void volatile *)(hw->hw_addr + 10264U));
  
#line 1391 
  rxdctl |= 33554432U;
  
#line 1392 
  rxdctl &= 4293918720U;
  
#line 1393 
  rxdctl |= 16U;
  
#line 1394 
  rxdctl |= 2048U;
  
#line 1395 
  rxdctl |= 65536U;
  
#line 1397 
  igbvf_set_rlpml(adapter);
  
#line 1400 
  writel(rxdctl,(void volatile *)(hw->hw_addr + 10280U));
  
#line 1401 
  return;
}


#line 1412  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_set_multi(struct net_device *netdev)
{
  struct netdev_hw_addr *ha;
  int i;
  struct netdev_hw_addr *tmp_1;
  int tmp_2;
  struct netdev_hw_addr *tmp_3;
  
#line 1414 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1415 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1417 
  u8 *mta_list = (u8 *)0U;
  
#line 1420 
  if (netdev->mc.count != 0) {
    
#line 1421 
    mta_list = (u8 *)kmalloc_array((unsigned long)netdev->mc.count,6UL,32U);
    
#line 1423 
    if (mta_list == (u8 *)0U) 
#line 1424 
                              goto return_label; else ;
  }
  else ;
  
#line 1428 
  i = 0;
  {
    
#line 1429 
    struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
    
#line 1429 
    tmp_1 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 1429 
  ha = tmp_1;
  
#line 1429 
  goto ldv_54625;
  ldv_54624: 
#line 1430 
  ;
  
#line 1430 
  ;
  
#line 1430 
  tmp_2 = i;
  
#line 1430 
  i += 1;
  
#line 1430 
  ;
  
#line 1430 
  memcpy((void *)(mta_list + tmp_2 * 6),(void const *)(& ha->addr),6UL);
  {
    
#line 1429 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 1429 
    tmp_3 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 1429 
  ha = tmp_3;
  ldv_54625: 
#line 1431 
  ;
  
#line 1429 
  if (& ha->list != & netdev->mc.list) 
#line 1431 
                                       goto ldv_54624; else 
#line 1434 
                                                            goto ldv_54626;
  ldv_54626: 
#line 1435 
  ;
  
#line 1432 
  (*(hw->mac.ops.update_mc_addr_list))(hw,mta_list,(unsigned int)i,0U,0U);
  
#line 1433 
  kfree((void const *)mta_list);
  return_label: 
#line 1434 
                return;
}


#line 1440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_configure(struct igbvf_adapter *adapter)
{
  int tmp;
  
#line 1442 
  igbvf_set_multi(adapter->netdev);
  
#line 1444 
  igbvf_restore_vlan(adapter);
  
#line 1446 
  igbvf_configure_tx(adapter);
  
#line 1447 
  igbvf_setup_srrctl(adapter);
  
#line 1448 
  igbvf_configure_rx(adapter);
  
#line 1449 
  tmp = igbvf_desc_unused(adapter->rx_ring);
  
#line 1449 
  ;
  
#line 1449 
  igbvf_alloc_rx_buffers(adapter->rx_ring,tmp);
  
#line 1451 
  return;
}


#line 1461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_reset(struct igbvf_adapter *adapter)
{
  s32 tmp;
  bool tmp_0;
  
#line 1463 
  struct e1000_mac_info *mac = & adapter->hw.mac;
  
#line 1464 
  struct net_device *netdev = adapter->netdev;
  
#line 1465 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1468 
  tmp = (*(mac->ops.reset_hw))(hw);
  
#line 1468 
  if (tmp != 0) 
#line 1469 
                dev_err((struct device const *)(& (adapter->pdev)->dev),"PF still resetting\n"); else ;
  
#line 1471 
  (*(mac->ops.init_hw))(hw);
  
#line 1473 
  tmp_0 = is_valid_ether_addr((u8 const *)(& adapter->hw.mac.addr));
  
#line 1473 
  if ((int)tmp_0 != 0) {
    
#line 1474 
    memcpy((void *)netdev->dev_addr,(void const *)(& adapter->hw.mac.addr),(unsigned long)netdev->addr_len);
    
#line 1476 
    memcpy((void *)(& netdev->perm_addr),(void const *)(& adapter->hw.mac.addr),(unsigned long)netdev->addr_len);
  }
  else ;
  
#line 1480 
  adapter->last_reset = jiffies;
  
#line 1481 
  return;
}


#line 1483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
int igbvf_up(struct igbvf_adapter *adapter)
{
  int __retres;
  
#line 1485 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1488 
  igbvf_configure(adapter);
  
#line 1490 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1492 
  napi_enable(& (adapter->rx_ring)->napi);
  
#line 1493 
  if (adapter->msix_entries != (struct msix_entry *)0) 
#line 1494 
                                                       igbvf_configure_msix(adapter); else ;
  
#line 1497 
  readl((void const volatile *)(hw->hw_addr + 5504U));
  
#line 1498 
  igbvf_irq_enable(adapter);
  
#line 1501 
  hw->mac.get_link_status = (_Bool)1;
  
#line 1502 
  ldv_mod_timer_78(& adapter->watchdog_timer,jiffies + 1UL);
  
#line 1504 
  __retres = 0;
  
#line 1504 
  return __retres;
}


#line 1507  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
void igbvf_down(struct igbvf_adapter *adapter)
{
  u32 rxdctl;
  u32 txdctl;
  
#line 1509 
  struct net_device *netdev = adapter->netdev;
  
#line 1510 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1516 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1519 
  rxdctl = readl((void const volatile *)(hw->hw_addr + 10280U));
  
#line 1520 
  writel(rxdctl & 4261412863U,(void volatile *)(hw->hw_addr + 10280U));
  
#line 1522 
  netif_carrier_off(netdev);
  
#line 1523 
  netif_stop_queue(netdev);
  
#line 1526 
  txdctl = readl((void const volatile *)(hw->hw_addr + 14376U));
  
#line 1527 
  writel(txdctl & 4261412863U,(void volatile *)(hw->hw_addr + 14376U));
  
#line 1530 
  readl((void const volatile *)(hw->hw_addr + 8U));
  
#line 1531 
  msleep(10U);
  
#line 1533 
  napi_disable(& (adapter->rx_ring)->napi);
  
#line 1535 
  igbvf_irq_disable(adapter);
  
#line 1537 
  ldv_del_timer_sync_79(& adapter->watchdog_timer);
  
#line 1540 
  igbvf_update_stats(adapter);
  
#line 1542 
  adapter->link_speed = (unsigned short)0U;
  
#line 1543 
  adapter->link_duplex = (unsigned short)0U;
  
#line 1545 
  igbvf_reset(adapter);
  
#line 1546 
  igbvf_clean_tx_ring(adapter->tx_ring);
  
#line 1547 
  igbvf_clean_rx_ring(adapter->rx_ring);
  
#line 1548 
  return;
}


#line 1550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
void igbvf_reinit_locked(struct igbvf_adapter *adapter)
{
  int tmp;
  
#line 1552 
  __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c",1552,0);
  
#line 1553 
  goto ldv_54651;
  ldv_54650: 
#line 1554 
  ;
  
#line 1554 
  usleep_range(1000UL,2000UL);
  ldv_54651: 
#line 1555 
  ;
  
#line 1553 
  tmp = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 1553 
  if (tmp != 0) 
#line 1555 
                goto ldv_54650; else 
#line 1558 
                                     goto ldv_54652;
  ldv_54652: 
#line 1559 
  ;
  
#line 1555 
  igbvf_down(adapter);
  
#line 1556 
  igbvf_up(adapter);
  
#line 1557 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 1558 
  return;
}


#line 1568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_sw_init(struct igbvf_adapter *adapter)
{
  int __retres;
  s32 rc;
  int tmp;
  
#line 1570 
  struct net_device *netdev = adapter->netdev;
  
#line 1573 
  adapter->rx_buffer_len = 1522U;
  
#line 1574 
  adapter->rx_ps_hdr_size = 0U;
  
#line 1575 
  adapter->max_frame_size = netdev->mtu + 18U;
  
#line 1576 
  adapter->min_frame_size = 64U;
  
#line 1578 
  adapter->tx_int_delay = 8U;
  
#line 1579 
  adapter->tx_abs_int_delay = 32U;
  
#line 1580 
  adapter->rx_int_delay = 0U;
  
#line 1581 
  adapter->rx_abs_int_delay = 8U;
  
#line 1582 
  adapter->requested_itr = 3U;
  
#line 1583 
  adapter->current_itr = 488U;
  
#line 1586 
  (*((adapter->ei)->init_ops))(& adapter->hw);
  
#line 1588 
  rc = (*(adapter->hw.mac.ops.init_params))(& adapter->hw);
  
#line 1589 
  if (rc != 0) {
    
#line 1590 
    __retres = rc;
    
#line 1590 
    goto return_label;
  }
  else ;
  
#line 1592 
  rc = (*(adapter->hw.mbx.ops.init_params))(& adapter->hw);
  
#line 1593 
  if (rc != 0) {
    
#line 1594 
    __retres = rc;
    
#line 1594 
    goto return_label;
  }
  else ;
  
#line 1596 
  igbvf_set_interrupt_capability(adapter);
  
#line 1598 
  tmp = igbvf_alloc_queues(adapter);
  
#line 1598 
  if (tmp != 0) {
    
#line 1599 
    __retres = -12;
    
#line 1599 
    goto return_label;
  }
  else ;
  
#line 1601 
  spinlock_check(& adapter->tx_queue_lock);
  {
    struct lock_class_key __key;
    
#line 1601 
    __raw_spin_lock_init(& adapter->tx_queue_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->tx_queue_lock)->rlock",& __key);
  }
  
#line 1604 
  igbvf_irq_disable(adapter);
  
#line 1606 
  spinlock_check(& adapter->stats_lock);
  {
    struct lock_class_key __key_0;
    
#line 1606 
    __raw_spin_lock_init(& adapter->stats_lock.__anonCompField_spinlock_18.rlock,"&(&adapter->stats_lock)->rlock",& __key_0);
  }
  
#line 1608 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1609 
  __retres = 0;
  return_label: 
#line 1609 
                return __retres;
}


#line 1612  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_initialize_last_counter_stats(struct igbvf_adapter *adapter)
{
  unsigned int tmp;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  unsigned int tmp_3;
  unsigned int tmp_4;
  unsigned int tmp_5;
  unsigned int tmp_6;
  unsigned int tmp_7;
  
#line 1614 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1616 
  adapter->stats.last_gprc = readl((void const volatile *)(hw->hw_addr + 3856U));
  
#line 1617 
  adapter->stats.last_gorc = readl((void const volatile *)(hw->hw_addr + 3864U));
  
#line 1618 
  adapter->stats.last_gptc = readl((void const volatile *)(hw->hw_addr + 3860U));
  
#line 1619 
  adapter->stats.last_gotc = readl((void const volatile *)(hw->hw_addr + 3892U));
  
#line 1620 
  adapter->stats.last_mprc = readl((void const volatile *)(hw->hw_addr + 3900U));
  
#line 1621 
  adapter->stats.last_gotlbc = readl((void const volatile *)(hw->hw_addr + 3920U));
  
#line 1622 
  adapter->stats.last_gptlbc = readl((void const volatile *)(hw->hw_addr + 3908U));
  
#line 1623 
  adapter->stats.last_gorlbc = readl((void const volatile *)(hw->hw_addr + 3912U));
  
#line 1624 
  adapter->stats.last_gprlbc = readl((void const volatile *)(hw->hw_addr + 3904U));
  
#line 1626 
  tmp = readl((void const volatile *)(hw->hw_addr + 3856U));
  
#line 1626 
  adapter->stats.base_gprc = (unsigned long long)tmp;
  
#line 1627 
  tmp_0 = readl((void const volatile *)(hw->hw_addr + 3864U));
  
#line 1627 
  adapter->stats.base_gorc = (unsigned long long)tmp_0;
  
#line 1628 
  tmp_1 = readl((void const volatile *)(hw->hw_addr + 3860U));
  
#line 1628 
  adapter->stats.base_gptc = (unsigned long long)tmp_1;
  
#line 1629 
  tmp_2 = readl((void const volatile *)(hw->hw_addr + 3892U));
  
#line 1629 
  adapter->stats.base_gotc = (unsigned long long)tmp_2;
  
#line 1630 
  tmp_3 = readl((void const volatile *)(hw->hw_addr + 3900U));
  
#line 1630 
  adapter->stats.base_mprc = (unsigned long long)tmp_3;
  
#line 1631 
  tmp_4 = readl((void const volatile *)(hw->hw_addr + 3920U));
  
#line 1631 
  adapter->stats.base_gotlbc = (unsigned long long)tmp_4;
  
#line 1632 
  tmp_5 = readl((void const volatile *)(hw->hw_addr + 3908U));
  
#line 1632 
  adapter->stats.base_gptlbc = (unsigned long long)tmp_5;
  
#line 1633 
  tmp_6 = readl((void const volatile *)(hw->hw_addr + 3912U));
  
#line 1633 
  adapter->stats.base_gorlbc = (unsigned long long)tmp_6;
  
#line 1634 
  tmp_7 = readl((void const volatile *)(hw->hw_addr + 3904U));
  
#line 1634 
  adapter->stats.base_gprlbc = (unsigned long long)tmp_7;
  
#line 1635 
  return;
}


#line 1649  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_open(struct net_device *netdev)
{
  int __retres;
  int err;
  int tmp_0;
  
#line 1651 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1652 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1656 
  tmp_0 = constant_test_bit(0L,(unsigned long const volatile *)(& adapter->state));
  
#line 1656 
  if (tmp_0 != 0) {
    
#line 1657 
    __retres = -16;
    
#line 1657 
    goto return_label;
  }
  else ;
  
#line 1660 
  err = igbvf_setup_tx_resources(adapter,adapter->tx_ring);
  
#line 1661 
  if (err != 0) 
#line 1662 
                goto err_setup_tx; else ;
  
#line 1665 
  err = igbvf_setup_rx_resources(adapter,adapter->rx_ring);
  
#line 1666 
  if (err != 0) 
#line 1667 
                goto err_setup_rx; else ;
  
#line 1674 
  igbvf_configure(adapter);
  
#line 1676 
  err = igbvf_request_irq(adapter);
  
#line 1677 
  if (err != 0) 
#line 1678 
                goto err_req_irq; else ;
  
#line 1681 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 1683 
  napi_enable(& (adapter->rx_ring)->napi);
  
#line 1686 
  readl((void const volatile *)(hw->hw_addr + 5504U));
  
#line 1688 
  igbvf_irq_enable(adapter);
  
#line 1691 
  hw->mac.get_link_status = (_Bool)1;
  
#line 1692 
  ldv_mod_timer_80(& adapter->watchdog_timer,jiffies + 1UL);
  
#line 1694 
  __retres = 0;
  
#line 1694 
  goto return_label;
  err_req_irq: 
#line 1696 
  ;
  
#line 1697 
  igbvf_free_rx_resources(adapter->rx_ring);
  err_setup_rx: 
#line 1698 
  ;
  
#line 1699 
  igbvf_free_tx_resources(adapter->tx_ring);
  err_setup_tx: 
#line 1700 
  ;
  
#line 1701 
  igbvf_reset(adapter);
  
#line 1703 
  __retres = err;
  return_label: 
#line 1703 
                return __retres;
}


#line 1717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_close(struct net_device *netdev)
{
  int __retres;
  
#line 1719 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  {
    int tmp_0;
    
#line 1721 
    tmp_0 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
    
#line 1721 
    int __ret_warn_on = tmp_0 != 0;
    
#line 1721 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 1721 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c",1721); else ;
    
#line 1721 
    long tmp_2 = (long)(__ret_warn_on != 0);
  }
  
#line 1722 
  igbvf_down(adapter);
  
#line 1724 
  igbvf_free_irq(adapter);
  
#line 1726 
  igbvf_free_tx_resources(adapter->tx_ring);
  
#line 1727 
  igbvf_free_rx_resources(adapter->rx_ring);
  
#line 1729 
  __retres = 0;
  
#line 1729 
  return __retres;
}


#line 1739  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_set_mac(struct net_device *netdev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  int tmp_3;
  bool tmp_2;
  
#line 1741 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 1742 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1743 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 1745 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 1745 
  if (tmp_0) 
#line 1745 
             tmp_1 = 0; else 
#line 1745 
                             tmp_1 = 1;
  
#line 1745 
  if (tmp_1) {
    
#line 1746 
    __retres = -99;
    
#line 1746 
    goto return_label;
  }
  else ;
  
#line 1748 
  memcpy((void *)(& hw->mac.addr),(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 1750 
  (*(hw->mac.ops.rar_set))(hw,(u8 *)(& hw->mac.addr),0U);
  
#line 1752 
  tmp_2 = ether_addr_equal((u8 const *)(& addr->sa_data),(u8 const *)(& hw->mac.addr));
  
#line 1752 
  if (tmp_2) 
#line 1752 
             tmp_3 = 0; else 
#line 1752 
                             tmp_3 = 1;
  
#line 1752 
  if (tmp_3) {
    
#line 1753 
    __retres = -99;
    
#line 1753 
    goto return_label;
  }
  else ;
  
#line 1755 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 1757 
  __retres = 0;
  return_label: 
#line 1757 
                return __retres;
}


#line 1774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
void igbvf_update_stats(struct igbvf_adapter *adapter)
{
  int tmp;
  int tmp_0;
  
#line 1776 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1777 
  struct pci_dev *pdev = adapter->pdev;
  
#line 1782 
  if ((unsigned int)adapter->link_speed == 0U) 
#line 1783 
                                               goto return_label; else ;
  
#line 1785 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
  
#line 1785 
  if (tmp != 0) 
#line 1786 
                goto return_label; else ;
  
#line 1788 
  tmp_0 = pci_channel_offline(pdev);
  
#line 1788 
  if (tmp_0 != 0) 
#line 1789 
                  goto return_label; else ;
  {
    
#line 1791 
    u32 current_counter = readl((void const volatile *)(hw->hw_addr + 3856U));
    
#line 1791 
    if (adapter->stats.last_gprc > current_counter) 
#line 1791 
                                                    adapter->stats.gprc += 4294967296ULL; else ;
    
#line 1791 
    adapter->stats.last_gprc = current_counter;
    
#line 1791 
    adapter->stats.gprc &= 18446744069414584320ULL;
    
#line 1791 
    adapter->stats.gprc |= (unsigned long long)current_counter;
  }
  {
    
#line 1792 
    u32 current_counter_0 = readl((void const volatile *)(hw->hw_addr + 3864U));
    
#line 1792 
    if (adapter->stats.last_gorc > current_counter_0) 
#line 1792 
                                                      adapter->stats.gorc += 4294967296ULL; else ;
    
#line 1792 
    adapter->stats.last_gorc = current_counter_0;
    
#line 1792 
    adapter->stats.gorc &= 18446744069414584320ULL;
    
#line 1792 
    adapter->stats.gorc |= (unsigned long long)current_counter_0;
  }
  {
    
#line 1793 
    u32 current_counter_1 = readl((void const volatile *)(hw->hw_addr + 3860U));
    
#line 1793 
    if (adapter->stats.last_gptc > current_counter_1) 
#line 1793 
                                                      adapter->stats.gptc += 4294967296ULL; else ;
    
#line 1793 
    adapter->stats.last_gptc = current_counter_1;
    
#line 1793 
    adapter->stats.gptc &= 18446744069414584320ULL;
    
#line 1793 
    adapter->stats.gptc |= (unsigned long long)current_counter_1;
  }
  {
    
#line 1794 
    u32 current_counter_2 = readl((void const volatile *)(hw->hw_addr + 3892U));
    
#line 1794 
    if (adapter->stats.last_gotc > current_counter_2) 
#line 1794 
                                                      adapter->stats.gotc += 4294967296ULL; else ;
    
#line 1794 
    adapter->stats.last_gotc = current_counter_2;
    
#line 1794 
    adapter->stats.gotc &= 18446744069414584320ULL;
    
#line 1794 
    adapter->stats.gotc |= (unsigned long long)current_counter_2;
  }
  {
    
#line 1795 
    u32 current_counter_3 = readl((void const volatile *)(hw->hw_addr + 3900U));
    
#line 1795 
    if (adapter->stats.last_mprc > current_counter_3) 
#line 1795 
                                                      adapter->stats.mprc += 4294967296ULL; else ;
    
#line 1795 
    adapter->stats.last_mprc = current_counter_3;
    
#line 1795 
    adapter->stats.mprc &= 18446744069414584320ULL;
    
#line 1795 
    adapter->stats.mprc |= (unsigned long long)current_counter_3;
  }
  {
    
#line 1796 
    u32 current_counter_4 = readl((void const volatile *)(hw->hw_addr + 3920U));
    
#line 1796 
    if (adapter->stats.last_gotlbc > current_counter_4) 
#line 1796 
                                                        adapter->stats.gotlbc += 4294967296ULL; else ;
    
#line 1796 
    adapter->stats.last_gotlbc = current_counter_4;
    
#line 1796 
    adapter->stats.gotlbc &= 18446744069414584320ULL;
    
#line 1796 
    adapter->stats.gotlbc |= (unsigned long long)current_counter_4;
  }
  {
    
#line 1797 
    u32 current_counter_5 = readl((void const volatile *)(hw->hw_addr + 3908U));
    
#line 1797 
    if (adapter->stats.last_gptlbc > current_counter_5) 
#line 1797 
                                                        adapter->stats.gptlbc += 4294967296ULL; else ;
    
#line 1797 
    adapter->stats.last_gptlbc = current_counter_5;
    
#line 1797 
    adapter->stats.gptlbc &= 18446744069414584320ULL;
    
#line 1797 
    adapter->stats.gptlbc |= (unsigned long long)current_counter_5;
  }
  {
    
#line 1798 
    u32 current_counter_6 = readl((void const volatile *)(hw->hw_addr + 3912U));
    
#line 1798 
    if (adapter->stats.last_gorlbc > current_counter_6) 
#line 1798 
                                                        adapter->stats.gorlbc += 4294967296ULL; else ;
    
#line 1798 
    adapter->stats.last_gorlbc = current_counter_6;
    
#line 1798 
    adapter->stats.gorlbc &= 18446744069414584320ULL;
    
#line 1798 
    adapter->stats.gorlbc |= (unsigned long long)current_counter_6;
  }
  {
    
#line 1799 
    u32 current_counter_7 = readl((void const volatile *)(hw->hw_addr + 3904U));
    
#line 1799 
    if (adapter->stats.last_gprlbc > current_counter_7) 
#line 1799 
                                                        adapter->stats.gprlbc += 4294967296ULL; else ;
    
#line 1799 
    adapter->stats.last_gprlbc = current_counter_7;
    
#line 1799 
    adapter->stats.gprlbc &= 18446744069414584320ULL;
    
#line 1799 
    adapter->stats.gprlbc |= (unsigned long long)current_counter_7;
  }
  
#line 1802 
  adapter->net_stats.multicast = (unsigned long)adapter->stats.mprc;
  return_label: 
#line 1803 
                return;
}


#line 1805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_print_link_info(struct igbvf_adapter *adapter)
{
  char *tmp;
  
#line 1807 
  if ((unsigned int)adapter->link_duplex == 2U) 
#line 1807 
                                                tmp = (char *)"Full"; else 
                                                                    
#line 1807 
                                                                    tmp = (char *)"Half";
  
#line 1807 
  ;
  
#line 1807 
  ;
  
#line 1807 
  _dev_info((struct device const *)(& (adapter->pdev)->dev),"Link is Up %d Mbps %s Duplex\n",(int)adapter->link_speed,tmp);
  
#line 1808 
  return;
}


#line 1812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static bool igbvf_has_link(struct igbvf_adapter *adapter)
{
  bool __retres;
  bool link_active;
  int tmp;
  
#line 1814 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1815 
  s32 ret_val = 0;
  
#line 1819 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 1819 
  if (tmp != 0) {
    
#line 1820 
    __retres = (_Bool)0;
    
#line 1820 
    goto return_label;
  }
  else ;
  
#line 1822 
  ret_val = (*(hw->mac.ops.check_for_link))(hw);
  
#line 1823 
  link_active = (_Bool)(! ((int)hw->mac.get_link_status != 0));
  
#line 1826 
  if (ret_val != 0) {
    int tmp_0;
    {
      unsigned long __dummy;
      unsigned long volatile __dummy2;
      
#line 1826 
      tmp_0 = 1;
    }
    
#line 1826 
    if (tmp_0 != 0) {
      int tmp_1;
      {
        unsigned long __dummy_0;
        unsigned long __dummy2_0;
        
#line 1826 
        tmp_1 = 1;
      }
      
#line 1826 
      if (tmp_1 != 0) {
        
#line 1826 
        if ((long)((adapter->last_reset - jiffies) + 2500UL) < 0L) 
#line 1827 
                                                                   ldv_schedule_work_81(& adapter->reset_task); else ;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1829 
  __retres = link_active;
  return_label: 
#line 1829 
                return __retres;
}


#line 1836  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_watchdog(unsigned long data)
{
  
#line 1838 
  struct igbvf_adapter *adapter = (struct igbvf_adapter *)data;
  
#line 1841 
  ldv_schedule_work_82(& adapter->watchdog_task);
  
#line 1842 
  return;
}


#line 1844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_watchdog_task(struct work_struct *work)
{
  struct igbvf_adapter *tmp;
  u32 link;
  bool tmp_0;
  bool tmp_5;
  int tmp_7;
  {
    
#line 1846 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 1846 
    tmp = (struct igbvf_adapter *)__mptr + 18446744073709551280U;
  }
  
#line 1846 
  struct igbvf_adapter *adapter = tmp;
  
#line 1849 
  struct net_device *netdev = adapter->netdev;
  
#line 1850 
  struct e1000_mac_info *mac = & adapter->hw.mac;
  
#line 1851 
  struct igbvf_ring *tx_ring = adapter->tx_ring;
  
#line 1852 
  struct e1000_hw *hw = & adapter->hw;
  
#line 1854 
  int tx_pending = 0;
  
#line 1856 
  tmp_0 = igbvf_has_link(adapter);
  
#line 1856 
  link = (unsigned int)tmp_0;
  
#line 1858 
  if (link != 0U) {
    int tmp_2;
    bool tmp_1;
    
#line 1859 
    tmp_1 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 1859 
    if (tmp_1) 
#line 1859 
               tmp_2 = 0; else 
#line 1859 
                               tmp_2 = 1;
    
#line 1859 
    if (tmp_2) {
      
#line 1860 
      (*(mac->ops.get_link_up_info))(& adapter->hw,& adapter->link_speed,& adapter->link_duplex);
      
#line 1863 
      igbvf_print_link_info(adapter);
      
#line 1865 
      netif_carrier_on(netdev);
      
#line 1866 
      netif_wake_queue(netdev);
    }
    else ;
  }
  else {
    bool tmp_3;
    
#line 1869 
    tmp_3 = netif_carrier_ok((struct net_device const *)netdev);
    
#line 1869 
    if ((int)tmp_3 != 0) {
      
#line 1870 
      adapter->link_speed = (unsigned short)0U;
      
#line 1871 
      adapter->link_duplex = (unsigned short)0U;
      
#line 1872 
      _dev_info((struct device const *)(& (adapter->pdev)->dev),"Link is Down\n");
      
#line 1873 
      netif_carrier_off(netdev);
      
#line 1874 
      netif_stop_queue(netdev);
    }
    else ;
  }
  
#line 1878 
  tmp_5 = netif_carrier_ok((struct net_device const *)netdev);
  
#line 1878 
  if ((int)tmp_5 != 0) 
#line 1879 
                       igbvf_update_stats(adapter);
  else {
    int tmp_4;
    
#line 1881 
    tmp_4 = igbvf_desc_unused(tx_ring);
    
#line 1881 
    tx_pending = (unsigned int)(tmp_4 + 1) < tx_ring->count;
    
#line 1883 
    if (tx_pending != 0) {
      
#line 1889 
      adapter->tx_timeout_count += 1U;
      
#line 1890 
      ldv_schedule_work_83(& adapter->reset_task);
    }
    else ;
  }
  
#line 1895 
  writel((adapter->rx_ring)->eims_value,(void volatile *)(hw->hw_addr + 5408U));
  
#line 1898 
  tmp_7 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 1898 
  if (tmp_7 == 0) {
    unsigned long tmp_6;
    
#line 1899 
    tmp_6 = round_jiffies(jiffies + 500UL);
    
#line 1899 
    ;
    
#line 1899 
    ldv_mod_timer_84(& adapter->watchdog_timer,tmp_6);
  }
  else ;
  
#line 1901 
  return;
}


#line 1910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_tso(struct igbvf_adapter *adapter, struct igbvf_ring *tx_ring, struct sk_buff *skb, u32 tx_flags, u8 *hdr_len, __be16 protocol)
{
  int __retres;
  struct e1000_adv_tx_context_desc *context_desc;
  struct igbvf_buffer *buffer_info;
  u32 mss_l4len_idx;
  u32 l4len;
  unsigned int i;
  int err;
  int tmp_8;
  int tmp_9;
  unsigned char *tmp_10;
  unsigned char *tmp_11;
  unsigned char *tmp_12;
  unsigned char *tmp_13;
  unsigned char *tmp_14;
  
#line 1917 
  u32 info = 0U;
  
#line 1917 
  u32 tu_cmd = 0U;
  
#line 1922 
  *hdr_len = (unsigned char)0U;
  
#line 1924 
  err = skb_cow_head(skb,0U);
  
#line 1925 
  if (err < 0) {
    
#line 1926 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"igbvf_tso returning an error\n");
    
#line 1927 
    __retres = err;
    
#line 1927 
    goto return_label;
  }
  else ;
  
#line 1930 
  l4len = tcp_hdrlen((struct sk_buff const *)skb);
  
#line 1931 
  *hdr_len = (unsigned char)((int)*hdr_len + (int)((unsigned char)l4len));
  
#line 1933 
  if ((unsigned int)protocol == 8U) {
    struct tcphdr *tmp_0;
    __sum16 tmp_1;
    
#line 1934 
    struct iphdr *iph = ip_hdr((struct sk_buff const *)skb);
    
#line 1936 
    iph->tot_len = (unsigned short)0U;
    
#line 1937 
    iph->check = (unsigned short)0U;
    
#line 1938 
    tmp_0 = tcp_hdr((struct sk_buff const *)skb);
    
#line 1938 
    tmp_1 = csum_tcpudp_magic(iph->saddr,iph->daddr,(unsigned short)0,(unsigned short)6,0U);
    
#line 1938 
    tmp_0->check = (unsigned short)(~ ((int)tmp_1));
  }
  else {
    bool tmp_7;
    
#line 1942 
    tmp_7 = skb_is_gso_v6((struct sk_buff const *)skb);
    
#line 1942 
    if ((int)tmp_7 != 0) {
      struct ipv6hdr *tmp_2;
      struct tcphdr *tmp_3;
      __sum16 tmp_6;
      struct ipv6hdr *tmp_4;
      struct ipv6hdr *tmp_5;
      
#line 1943 
      tmp_2 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 1943 
      tmp_2->payload_len = (unsigned short)0U;
      
#line 1944 
      tmp_3 = tcp_hdr((struct sk_buff const *)skb);
      
#line 1945 
      tmp_4 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 1944 
      tmp_5 = ipv6_hdr((struct sk_buff const *)skb);
      
#line 1944 
      tmp_6 = csum_ipv6_magic((struct in6_addr const *)(& tmp_5->saddr),(struct in6_addr const *)(& tmp_4->daddr),0U,(unsigned short)6,0U);
      
#line 1944 
      tmp_3->check = (unsigned short)(~ ((int)tmp_6));
    }
    else ;
  }
  
#line 1949 
  i = (unsigned int)tx_ring->next_to_use;
  
#line 1951 
  buffer_info = tx_ring->buffer_info + i;
  
#line 1952 
  context_desc = & (tx_ring->desc + i)->tx_context_desc;
  
#line 1954 
  if ((tx_flags & 2U) != 0U) 
#line 1955 
                             info = (tx_flags & 4294901760U) | info; else ;
  
#line 1956 
  tmp_8 = skb_network_offset((struct sk_buff const *)skb);
  
#line 1956 
  info = (unsigned int)(tmp_8 << 9) | info;
  
#line 1957 
  tmp_9 = skb_network_offset((struct sk_buff const *)skb);
  
#line 1957 
  *hdr_len = (unsigned char)((int)*hdr_len + (int)((unsigned char)tmp_9));
  
#line 1958 
  tmp_10 = skb_transport_header((struct sk_buff const *)skb);
  
#line 1958 
  tmp_11 = skb_network_header((struct sk_buff const *)skb);
  
#line 1958 
  info = (unsigned int)(((long)tmp_10 - (long)tmp_11) | (long)info);
  
#line 1959 
  tmp_12 = skb_transport_header((struct sk_buff const *)skb);
  
#line 1959 
  tmp_13 = skb_network_header((struct sk_buff const *)skb);
  
#line 1959 
  *hdr_len = (unsigned char)((int)*hdr_len + (int)((unsigned char)((long)tmp_12 - (long)tmp_13)));
  
#line 1960 
  context_desc->vlan_macip_lens = info;
  
#line 1963 
  tu_cmd |= 538968064U;
  
#line 1965 
  if ((unsigned int)protocol == 8U) 
#line 1966 
                                    tu_cmd |= 1024U; else ;
  
#line 1967 
  tu_cmd |= 2048U;
  
#line 1969 
  context_desc->type_tucmd_mlhl = tu_cmd;
  
#line 1972 
  tmp_14 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 1972 
  mss_l4len_idx = (unsigned int)((int)((struct skb_shared_info *)tmp_14)->gso_size << 16);
  
#line 1973 
  mss_l4len_idx = (l4len << 8) | mss_l4len_idx;
  
#line 1975 
  context_desc->mss_l4len_idx = mss_l4len_idx;
  
#line 1976 
  context_desc->seqnum_seed = 0U;
  
#line 1978 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = jiffies;
  
#line 1979 
  buffer_info->dma = 0ULL;
  
#line 1980 
  i += 1U;
  
#line 1981 
  if (tx_ring->count == i) 
#line 1982 
                           i = 0U; else ;
  
#line 1984 
  tx_ring->next_to_use = (unsigned short)i;
  
#line 1986 
  __retres = 1;
  return_label: 
#line 1986 
                return __retres;
}


#line 1989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
__inline static bool igbvf_tx_csum(struct igbvf_adapter *adapter, struct igbvf_ring *tx_ring, struct sk_buff *skb, u32 tx_flags, __be16 protocol)
{
  bool __retres;
  struct e1000_adv_tx_context_desc *context_desc;
  unsigned int i;
  struct igbvf_buffer *buffer_info;
  
#line 1997 
  u32 info = 0U;
  
#line 1997 
  u32 tu_cmd = 0U;
  
#line 1999 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U || (tx_flags & 2U) != 0U) {
    int tmp;
    
#line 2001 
    i = (unsigned int)tx_ring->next_to_use;
    
#line 2002 
    buffer_info = tx_ring->buffer_info + i;
    
#line 2003 
    context_desc = & (tx_ring->desc + i)->tx_context_desc;
    
#line 2005 
    if ((tx_flags & 2U) != 0U) 
#line 2006 
                               info = (tx_flags & 4294901760U) | info; else ;
    
#line 2008 
    tmp = skb_network_offset((struct sk_buff const *)skb);
    
#line 2008 
    info = (unsigned int)(tmp << 9) | info;
    
#line 2009 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      unsigned char *tmp_0;
      unsigned char *tmp_1;
      
#line 2010 
      tmp_0 = skb_transport_header((struct sk_buff const *)skb);
      
#line 2010 
      tmp_1 = skb_network_header((struct sk_buff const *)skb);
      
#line 2011 
      info = (unsigned int)(((long)tmp_0 - (long)tmp_1) | (long)info);
    }
    else ;
    
#line 2013 
    context_desc->vlan_macip_lens = info;
    
#line 2015 
    tu_cmd |= 538968064U;
    
#line 2017 
    if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) {
      
#line 2018 
      switch ((int)protocol) {
        struct iphdr *tmp_2;
        struct ipv6hdr *tmp_3;
        case 8: 
#line 2019 
        ;
        
#line 2020 
        tu_cmd |= 1024U;
        
#line 2021 
        tmp_2 = ip_hdr((struct sk_buff const *)skb);
        
#line 2021 
        ;
        
#line 2021 
        if ((unsigned int)tmp_2->protocol == 6U) 
#line 2022 
                                                 tu_cmd |= 2048U; else ;
        
#line 2023 
        goto ldv_54761;
        case 56710: 
#line 2024 
        ;
        
#line 2025 
        tmp_3 = ipv6_hdr((struct sk_buff const *)skb);
        
#line 2025 
        ;
        
#line 2025 
        if ((unsigned int)tmp_3->nexthdr == 6U) 
#line 2026 
                                                tu_cmd |= 2048U; else ;
        
#line 2027 
        goto ldv_54761;
        default: 
#line 2028 
        ;
        
#line 2029 
        goto ldv_54761;
      }
      ldv_54761: 
#line 2031 
      ;
    }
    else ;
    
#line 2033 
    context_desc->type_tucmd_mlhl = tu_cmd;
    
#line 2034 
    context_desc->seqnum_seed = 0U;
    
#line 2035 
    context_desc->mss_l4len_idx = 0U;
    
#line 2037 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = jiffies;
    
#line 2038 
    buffer_info->dma = 0ULL;
    
#line 2039 
    i += 1U;
    
#line 2040 
    if (tx_ring->count == i) 
#line 2041 
                             i = 0U; else ;
    
#line 2042 
    tx_ring->next_to_use = (unsigned short)i;
    
#line 2044 
    __retres = (_Bool)1;
    
#line 2044 
    goto return_label;
  }
  else ;
  
#line 2047 
  __retres = (_Bool)0;
  return_label: 
#line 2047 
                return __retres;
}


#line 2050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_maybe_stop_tx(struct net_device *netdev, int size)
{
  int __retres;
  int tmp_0;
  int tmp_1;
  
#line 2052 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2055 
  tmp_0 = igbvf_desc_unused(adapter->tx_ring);
  
#line 2055 
  ;
  
#line 2055 
  if (tmp_0 >= size) {
    
#line 2056 
    __retres = 0;
    
#line 2056 
    goto return_label;
  }
  else ;
  
#line 2058 
  netif_stop_queue(netdev);
  
#line 2059 
  ldv_inline_asm();
  
#line 2067 
  tmp_1 = igbvf_desc_unused(adapter->tx_ring);
  
#line 2067 
  ;
  
#line 2067 
  if (tmp_1 < size) {
    
#line 2068 
    __retres = -16;
    
#line 2068 
    goto return_label;
  }
  else ;
  
#line 2070 
  netif_wake_queue(netdev);
  
#line 2072 
  adapter->restart_queue += 1U;
  
#line 2073 
  __retres = 0;
  return_label: 
#line 2073 
                return __retres;
}


#line 2079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
__inline static int igbvf_tx_map_adv(struct igbvf_adapter *adapter, struct igbvf_ring *tx_ring, struct sk_buff *skb)
{
  int __retres;
  struct igbvf_buffer *buffer_info;
  unsigned int i;
  unsigned int f;
  int tmp_0;
  unsigned char *tmp_3;
  unsigned int tmp_4;
  
#line 2084 
  struct pci_dev *pdev = adapter->pdev;
  
#line 2085 
  unsigned int len = skb_headlen((struct sk_buff const *)skb);
  
#line 2086 
  unsigned int count = 0U;
  
#line 2089 
  i = (unsigned int)tx_ring->next_to_use;
  
#line 2091 
  buffer_info = tx_ring->buffer_info + i;
  
#line 2092 
  if ((long)(len > 65535U) != 0L) {
    
#line 2094 
    ldv_inline_asm();
    
#line 2092 
    ;
  }
  else ;
  
#line 2093 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.length = (unsigned short)len;
  
#line 2095 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = jiffies;
  
#line 2096 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.mapped_as_page = (unsigned short)0U;
  
#line 2097 
  buffer_info->dma = dma_map_single_attrs(& pdev->dev,(void *)skb->data,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE,(struct dma_attrs *)0);
  
#line 2099 
  tmp_0 = dma_mapping_error(& pdev->dev,buffer_info->dma);
  
#line 2099 
  if (tmp_0 != 0) 
#line 2100 
                  goto dma_error; else ;
  
#line 2102 
  f = 0U;
  
#line 2102 
  goto ldv_54783;
  ldv_54782: 
#line 2103 
  ;
  {
    struct skb_frag_struct const *frag;
    unsigned char *tmp_1;
    int tmp_2;
    
#line 2105 
    count += 1U;
    
#line 2106 
    i += 1U;
    
#line 2107 
    if (tx_ring->count == i) 
#line 2108 
                             i = 0U; else ;
    
#line 2110 
    tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2110 
    frag = (struct skb_frag_struct const *)(& ((struct skb_shared_info *)tmp_1)->frags[f]);
    
#line 2111 
    len = skb_frag_size(frag);
    
#line 2113 
    buffer_info = tx_ring->buffer_info + i;
    
#line 2114 
    if ((long)(len > 65535U) != 0L) {
      
#line 2116 
      ldv_inline_asm();
      
#line 2114 
      ;
    }
    else ;
    
#line 2115 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.length = (unsigned short)len;
    
#line 2116 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = jiffies;
    
#line 2117 
    buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.mapped_as_page = (unsigned short)1U;
    
#line 2118 
    buffer_info->dma = skb_frag_dma_map(& pdev->dev,frag,0UL,(unsigned long)len,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 2120 
    tmp_2 = dma_mapping_error(& pdev->dev,buffer_info->dma);
    
#line 2120 
    if (tmp_2 != 0) 
#line 2121 
                    goto dma_error; else ;
  }
  
#line 2102 
  f += 1U;
  ldv_54783: 
#line 2103 
  ;
  
#line 2102 
  tmp_3 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2102 
  ;
  
#line 2102 
  if ((unsigned int)((struct skb_shared_info *)tmp_3)->nr_frags > f) 
    
#line 2104 
    goto ldv_54782; else 
#line 2107 
                         goto ldv_54784;
  ldv_54784: 
#line 2108 
  ;
  
#line 2124 
  (tx_ring->buffer_info + i)->skb = skb;
  
#line 2126 
  count += 1U;
  
#line 2126 
  __retres = (int)count;
  
#line 2126 
  goto return_label;
  dma_error: 
#line 2128 
  ;
  
#line 2129 
  dev_err((struct device const *)(& pdev->dev),"TX DMA map failed\n");
  
#line 2132 
  buffer_info->dma = 0ULL;
  
#line 2133 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = 0UL;
  
#line 2134 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.length = (unsigned short)0U;
  
#line 2135 
  buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.mapped_as_page = (unsigned short)0U;
  
#line 2136 
  if (count != 0U) 
#line 2137 
                   count -= 1U; else ;
  
#line 2140 
  goto ldv_54786;
  ldv_54785: 
#line 2141 
  ;
  
#line 2141 
  if (i == 0U) 
#line 2142 
               i = tx_ring->count + i; else ;
  
#line 2143 
  i -= 1U;
  
#line 2144 
  buffer_info = tx_ring->buffer_info + i;
  
#line 2145 
  igbvf_put_txbuf(adapter,buffer_info);
  ldv_54786: 
#line 2146 
  ;
  
#line 2140 
  tmp_4 = count;
  
#line 2140 
  count -= 1U;
  
#line 2140 
  ;
  
#line 2140 
  if (tmp_4 != 0U) 
#line 2142 
                   goto ldv_54785; else 
#line 2145 
                                        goto ldv_54787;
  ldv_54787: 
#line 2146 
  ;
  
#line 2148 
  __retres = 0;
  return_label: 
#line 2148 
                return __retres;
}


#line 2151  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
__inline static void igbvf_tx_queue_adv(struct igbvf_adapter *adapter, struct igbvf_ring *tx_ring, int tx_flags, int count, unsigned int first, u32 paylen, u8 hdr_len)
{
  struct igbvf_buffer *buffer_info;
  u32 cmd_type_len;
  unsigned int i;
  int tmp;
  
#line 2157 
  union e1000_adv_tx_desc *tx_desc = (union e1000_adv_tx_desc *)0;
  
#line 2159 
  u32 olinfo_status = 0U;
  
#line 2162 
  cmd_type_len = 573571072U;
  
#line 2165 
  if ((tx_flags & 2) != 0) 
#line 2166 
                           cmd_type_len |= 1073741824U; else ;
  
#line 2168 
  if ((tx_flags & 4) != 0) {
    
#line 2169 
    cmd_type_len |= 2147483648U;
    
#line 2172 
    olinfo_status |= 512U;
    
#line 2175 
    if ((tx_flags & 8) != 0) 
#line 2176 
                             olinfo_status |= 256U; else ;
  }
  else 
    
#line 2178 
    if ((tx_flags & 1) != 0) 
#line 2179 
                             olinfo_status |= 512U; else ;
  
#line 2182 
  olinfo_status = ((paylen - (unsigned int)hdr_len) << 14) | olinfo_status;
  
#line 2184 
  i = (unsigned int)tx_ring->next_to_use;
  
#line 2185 
  goto ldv_54803;
  ldv_54802: 
#line 2186 
  ;
  
#line 2186 
  buffer_info = tx_ring->buffer_info + i;
  
#line 2187 
  tx_desc = & (tx_ring->desc + i)->tx_desc;
  
#line 2188 
  tx_desc->read.buffer_addr = buffer_info->dma;
  
#line 2189 
  tx_desc->read.cmd_type_len = (unsigned int)buffer_info->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.length | cmd_type_len;
  
#line 2191 
  tx_desc->read.olinfo_status = olinfo_status;
  
#line 2192 
  i += 1U;
  
#line 2193 
  if (tx_ring->count == i) 
#line 2194 
                           i = 0U; else ;
  ldv_54803: 
#line 2195 
  ;
  
#line 2185 
  tmp = count;
  
#line 2185 
  count -= 1;
  
#line 2185 
  ;
  
#line 2185 
  if (tmp != 0) 
#line 2187 
                goto ldv_54802; else 
#line 2190 
                                     goto ldv_54804;
  ldv_54804: 
#line 2191 
  ;
  
#line 2197 
  tx_desc->read.cmd_type_len |= adapter->txd_cmd;
  
#line 2198 
  ldv_inline_asm();
  
#line 2205 
  (tx_ring->buffer_info + first)->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.next_to_watch = tx_desc;
  
#line 2206 
  tx_ring->next_to_use = (unsigned short)i;
  
#line 2207 
  writel(i,(void volatile *)(adapter->hw.hw_addr + (int)tx_ring->tail));
  
#line 2208 
  ldv_inline_asm();
  
#line 2209 
  return;
}


#line 2214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static netdev_tx_t igbvf_xmit_frame_ring_adv(struct sk_buff *skb, struct net_device *netdev, struct igbvf_ring *tx_ring)
{
  netdev_tx_t __retres;
  unsigned int first;
  int tmp_1;
  int tmp_3;
  unsigned char *tmp_2;
  bool tmp_4;
  
#line 2218 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2219 
  unsigned int tx_flags = 0U;
  
#line 2220 
  u8 hdr_len = (unsigned char)0U;
  
#line 2221 
  int count = 0;
  
#line 2222 
  int tso = 0;
  
#line 2223 
  __be16 protocol = vlan_get_protocol(skb);
  
#line 2225 
  tmp_1 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2225 
  if (tmp_1 != 0) {
    
#line 2226 
    dev_kfree_skb_any(skb);
    
#line 2227 
    __retres = NETDEV_TX_OK;
    
#line 2227 
    goto return_label;
  }
  else ;
  
#line 2230 
  if (skb->len == 0U) {
    
#line 2231 
    dev_kfree_skb_any(skb);
    
#line 2232 
    __retres = NETDEV_TX_OK;
    
#line 2232 
    goto return_label;
  }
  else ;
  
#line 2241 
  tmp_2 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2241 
  ;
  
#line 2241 
  ;
  
#line 2241 
  tmp_3 = igbvf_maybe_stop_tx(netdev,(int)((struct skb_shared_info *)tmp_2)->nr_frags + 4);
  
#line 2241 
  if (tmp_3 != 0) {
    
#line 2243 
    __retres = NETDEV_TX_BUSY;
    
#line 2243 
    goto return_label;
  }
  else ;
  
#line 2246 
  if (((int)skb->vlan_tci & 4096) != 0) {
    
#line 2247 
    tx_flags |= 2U;
    
#line 2248 
    tx_flags = ((unsigned int)((int)skb->vlan_tci << 16) & 4026466304U) | tx_flags;
  }
  else ;
  
#line 2252 
  if ((unsigned int)protocol == 8U) 
#line 2253 
                                    tx_flags |= 8U; else ;
  
#line 2255 
  first = (unsigned int)tx_ring->next_to_use;
  
#line 2257 
  tmp_4 = skb_is_gso((struct sk_buff const *)skb);
  
#line 2257 
  if ((int)tmp_4 != 0) 
#line 2257 
                       tso = igbvf_tso(adapter,tx_ring,skb,tx_flags,& hdr_len,(unsigned short)((int)protocol)); else 
                                                                    
#line 2257 
                                                                    tso = 0;
  
#line 2259 
  if ((long)(tso < 0) != 0L) {
    
#line 2260 
    dev_kfree_skb_any(skb);
    
#line 2261 
    __retres = NETDEV_TX_OK;
    
#line 2261 
    goto return_label;
  }
  else ;
  
#line 2264 
  if (tso != 0) 
#line 2265 
                tx_flags |= 4U;
  else {
    bool tmp_6;
    
#line 2266 
    tmp_6 = igbvf_tx_csum(adapter,tx_ring,skb,tx_flags,(unsigned short)((int)protocol));
    
#line 2266 
    if ((int)tmp_6 != 0) {
      
#line 2266 
      if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
#line 2268 
                                                               tx_flags |= 1U; else ;
    }
    else ;
  }
  
#line 2273 
  count = igbvf_tx_map_adv(adapter,tx_ring,skb);
  
#line 2275 
  if (count != 0) {
    
#line 2276 
    igbvf_tx_queue_adv(adapter,tx_ring,(int)tx_flags,count,first,skb->len,(unsigned char)((int)hdr_len));
    
#line 2279 
    igbvf_maybe_stop_tx(netdev,21);
  }
  else {
    
#line 2281 
    dev_kfree_skb_any(skb);
    
#line 2282 
    (tx_ring->buffer_info + first)->__anonCompField_igbvf_buffer_97.__anonCompField___anonunion_331_95.time_stamp = 0UL;
    
#line 2283 
    tx_ring->next_to_use = (unsigned short)first;
  }
  
#line 2286 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2286 
                return __retres;
}


#line 2289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static netdev_tx_t igbvf_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  struct igbvf_ring *tx_ring;
  int tmp_0;
  netdev_tx_t tmp_1;
  
#line 2292 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2295 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& adapter->state));
  
#line 2295 
  if (tmp_0 != 0) {
    
#line 2296 
    dev_kfree_skb_any(skb);
    
#line 2297 
    __retres = NETDEV_TX_OK;
    
#line 2297 
    goto return_label;
  }
  else ;
  
#line 2300 
  tx_ring = adapter->tx_ring;
  
#line 2302 
  tmp_1 = igbvf_xmit_frame_ring_adv(skb,netdev,tx_ring);
  
#line 2302 
  __retres = tmp_1;
  return_label: 
#line 2302 
                return __retres;
}


#line 2309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_tx_timeout(struct net_device *netdev)
{
  
#line 2311 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2314 
  adapter->tx_timeout_count += 1U;
  
#line 2315 
  ldv_schedule_work_85(& adapter->reset_task);
  
#line 2316 
  return;
}


#line 2318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_reset_task(struct work_struct *work)
{
  struct igbvf_adapter *adapter;
  struct igbvf_adapter *tmp;
  {
    
#line 2322 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2322 
    tmp = (struct igbvf_adapter *)__mptr + 18446744073709551360U;
  }
  
#line 2322 
  adapter = tmp;
  
#line 2324 
  igbvf_reinit_locked(adapter);
  
#line 2325 
  return;
}


#line 2334  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct net_device_stats *igbvf_get_stats(struct net_device *netdev)
{
  struct net_device_stats *__retres;
  
#line 2336 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2339 
  __retres = & adapter->net_stats;
  
#line 2339 
  return __retres;
}


#line 2349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  int tmp_0;
  bool tmp_1;
  bool tmp_2;
  
#line 2351 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2352 
  int max_frame = new_mtu + 18;
  
#line 2354 
  if ((unsigned int)new_mtu + 4294967228U > 2147483561U || max_frame > 16128) {
    
#line 2356 
    __retres = -22;
    
#line 2356 
    goto return_label;
  }
  else ;
  
#line 2359 
  if (max_frame > 9234) {
    
#line 2360 
    dev_err((struct device const *)(& (adapter->pdev)->dev),"MTU > 9216 not supported.\n");
    
#line 2361 
    __retres = -22;
    
#line 2361 
    goto return_label;
  }
  else ;
  
#line 2364 
  goto ldv_54844;
  ldv_54843: 
#line 2365 
  ;
  
#line 2365 
  usleep_range(1000UL,2000UL);
  ldv_54844: 
#line 2366 
  ;
  
#line 2364 
  tmp_0 = test_and_set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 2364 
  if (tmp_0 != 0) 
#line 2366 
                  goto ldv_54843; else 
#line 2369 
                                       goto ldv_54845;
  ldv_54845: 
#line 2370 
  ;
  
#line 2367 
  adapter->max_frame_size = (unsigned int)max_frame;
  
#line 2368 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 2368 
  if ((int)tmp_1 != 0) 
#line 2369 
                       igbvf_down(adapter); else ;
  
#line 2379 
  if (max_frame <= 1024) 
#line 2380 
                         adapter->rx_buffer_len = 1024U;
  else 
    
#line 2381 
    if (max_frame <= 2048) 
#line 2382 
                           adapter->rx_buffer_len = 2048U; else 
#line 2387 
                                                                adapter->rx_buffer_len = 2048U;
  
#line 2391 
  if (max_frame == 1518 || max_frame == 1522) 
#line 2393 
                                              adapter->rx_buffer_len = 1522U; else ;
  
#line 2396 
  _dev_info((struct device const *)(& (adapter->pdev)->dev),"changing MTU from %d to %d\n",netdev->mtu,new_mtu);
  
#line 2398 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 2400 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 2400 
  if ((int)tmp_2 != 0) 
#line 2401 
                       igbvf_up(adapter); else 
#line 2403 
                                               igbvf_reset(adapter);
  
#line 2405 
  set_bit(1L,(unsigned long volatile *)(& adapter->state));
  
#line 2407 
  __retres = 0;
  return_label: 
#line 2407 
                return __retres;
}


#line 2410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)
{
  int __retres;
  
#line 2412 
  switch (cmd) {
    default: 
#line 2413 
    ;
    
#line 2414 
    __retres = -95;
    
#line 2414 
    goto return_label;
  }
  return_label: 
#line 2412 
                return __retres;
}


#line 2418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  bool tmp_2_0;
  
#line 2420 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2421 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2423 
  int retval = 0;
  
#line 2426 
  netif_device_detach(netdev);
  
#line 2428 
  tmp_2_0 = netif_running((struct net_device const *)netdev);
  
#line 2428 
  if ((int)tmp_2_0 != 0) {
    {
      int tmp_1;
      
#line 2429 
      tmp_1 = constant_test_bit(1L,(unsigned long const volatile *)(& adapter->state));
      
#line 2429 
      int __ret_warn_on = tmp_1 != 0;
      
#line 2429 
      if ((long)(__ret_warn_on != 0) != 0L) 
#line 2429 
                                            warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c",2429); else ;
      
#line 2429 
      long tmp_2 = (long)(__ret_warn_on != 0);
    }
    
#line 2430 
    igbvf_down(adapter);
    
#line 2431 
    igbvf_free_irq(adapter);
  }
  else ;
  
#line 2435 
  retval = pci_save_state(pdev);
  
#line 2436 
  if (retval != 0) {
    
#line 2437 
    __retres = retval;
    
#line 2437 
    goto return_label;
  }
  else ;
  
#line 2440 
  pci_disable_device(pdev);
  
#line 2442 
  __retres = 0;
  return_label: 
#line 2442 
                return __retres;
}


#line 2446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_resume(struct pci_dev *pdev)
{
  int __retres;
  u32 err;
  int tmp_1;
  bool tmp_3;
  bool tmp_4;
  
#line 2448 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2449 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2452 
  pci_restore_state(pdev);
  
#line 2453 
  tmp_1 = pci_enable_device_mem(pdev);
  
#line 2453 
  err = (unsigned int)tmp_1;
  
#line 2454 
  if (err != 0U) {
    
#line 2455 
    dev_err((struct device const *)(& pdev->dev),"Cannot enable PCI device from suspend\n");
    
#line 2456 
    __retres = (int)err;
    
#line 2456 
    goto return_label;
  }
  else ;
  
#line 2459 
  pci_set_master(pdev);
  
#line 2461 
  tmp_3 = netif_running((struct net_device const *)netdev);
  
#line 2461 
  if ((int)tmp_3 != 0) {
    int tmp_2;
    
#line 2462 
    tmp_2 = igbvf_request_irq(adapter);
    
#line 2462 
    err = (unsigned int)tmp_2;
    
#line 2463 
    if (err != 0U) {
      
#line 2464 
      __retres = (int)err;
      
#line 2464 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2467 
  igbvf_reset(adapter);
  
#line 2469 
  tmp_4 = netif_running((struct net_device const *)netdev);
  
#line 2469 
  if ((int)tmp_4 != 0) 
#line 2470 
                       igbvf_up(adapter); else ;
  
#line 2472 
  netif_device_attach(netdev);
  
#line 2474 
  __retres = 0;
  return_label: 
#line 2474 
                return __retres;
}


#line 2478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_shutdown(struct pci_dev *pdev)
{
  
#line 2480 
  struct pm_message __constr_expr_37 = {.event = 2};
  
#line 2480 
  ;
  
#line 2480 
  igbvf_suspend(pdev,__constr_expr_37);
  
#line 2481 
  return;
}


#line 2488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_netpoll(struct net_device *netdev)
{
  
#line 2490 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2492 
  disable_irq((adapter->pdev)->irq);
  
#line 2494 
  igbvf_clean_tx_irq(adapter->tx_ring);
  
#line 2496 
  enable_irq((adapter->pdev)->irq);
  
#line 2497 
  return;
}


#line 2508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static pci_ers_result_t igbvf_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  bool tmp_1;
  
#line 2511 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2512 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2514 
  netif_device_detach(netdev);
  
#line 2516 
  if (state == 3U) {
    
#line 2517 
    __retres = 4U;
    
#line 2517 
    goto return_label;
  }
  else ;
  
#line 2519 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 2519 
  if ((int)tmp_1 != 0) 
#line 2520 
                       igbvf_down(adapter); else ;
  
#line 2521 
  pci_disable_device(pdev);
  
#line 2524 
  __retres = 3U;
  return_label: 
#line 2524 
                return __retres;
}


#line 2534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static pci_ers_result_t igbvf_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_1;
  
#line 2536 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2537 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2539 
  tmp_1 = pci_enable_device_mem(pdev);
  
#line 2539 
  if (tmp_1 != 0) {
    
#line 2540 
    dev_err((struct device const *)(& pdev->dev),"Cannot re-enable PCI device after reset.\n");
    
#line 2542 
    __retres = 4U;
    
#line 2542 
    goto return_label;
  }
  else ;
  
#line 2544 
  pci_set_master(pdev);
  
#line 2546 
  igbvf_reset(adapter);
  
#line 2548 
  __retres = 5U;
  return_label: 
#line 2548 
                return __retres;
}


#line 2559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_io_resume(struct pci_dev *pdev)
{
  bool tmp_2;
  
#line 2561 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2562 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2564 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 2564 
  if ((int)tmp_2 != 0) {
    int tmp_1;
    
#line 2565 
    tmp_1 = igbvf_up(adapter);
    
#line 2565 
    if (tmp_1 != 0) {
      
#line 2566 
      dev_err((struct device const *)(& pdev->dev),"can\'t bring device back up after reset\n");
      
#line 2568 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2572 
  netif_device_attach(netdev);
  return_label: 
#line 2573 
                return;
}


#line 2575  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_print_device_info(struct igbvf_adapter *adapter)
{
  
#line 2577 
  struct e1000_hw *hw = & adapter->hw;
  
#line 2578 
  struct net_device *netdev = adapter->netdev;
  
#line 2579 
  struct pci_dev *pdev = adapter->pdev;
  
#line 2581 
  if (hw->mac.type == (unsigned int)e1000_vfadapt_i350) 
#line 2582 
                                                        _dev_info((struct device const *)(& pdev->dev),"Intel(R) I350 Virtual Function\n"); else 
                                                                    
#line 2584 
                                                                    _dev_info((struct device const *)(& pdev->dev),"Intel(R) 82576 Virtual Function\n");
  
#line 2585 
  _dev_info((struct device const *)(& pdev->dev),"Address: %pM\n",netdev->dev_addr);
  
#line 2586 
  return;
}


#line 2588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  
#line 2591 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2593 
  if ((features & 17179869184ULL) != 0ULL) 
#line 2594 
                                           adapter->flags &= 4294967294U; else 
                                                                    
#line 2596 
                                                                    adapter->flags |= 1U;
  
#line 2598 
  __retres = 0;
  
#line 2598 
  return __retres;
}


#line 2601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct net_device_ops const igbvf_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & igbvf_open, .ndo_stop = & igbvf_close, .ndo_start_xmit = & igbvf_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & igbvf_set_multi, .ndo_set_mac_address = & igbvf_set_mac, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = & igbvf_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & igbvf_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & igbvf_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & igbvf_get_stats, .ndo_vlan_rx_add_vid = & igbvf_vlan_rx_add_vid, .ndo_vlan_rx_kill_vid = & igbvf_vlan_rx_kill_vid, .ndo_poll_controller = & igbvf_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & igbvf_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *netdev;
  struct igbvf_adapter *adapter;
  struct e1000_hw *hw;
  int cards_found;
  int err;
  int pci_using_dac;
  void *tmp_1;
  resource_size_t tmp_0;
  char const *tmp_2;
  int tmp_3;
  int tmp_6;
  bool tmp_5;
  
#line 2635 
  struct igbvf_info const *ei = igbvf_info_tbl[ent->driver_data];
  
#line 2640 
  err = pci_enable_device_mem(pdev);
  
#line 2641 
  if (err != 0) {
    
#line 2642 
    __retres = err;
    
#line 2642 
    goto return_label;
  }
  else ;
  
#line 2644 
  pci_using_dac = 0;
  
#line 2645 
  err = dma_set_mask_and_coherent(& pdev->dev,18446744073709551615ULL);
  
#line 2646 
  if (err == 0) 
#line 2647 
                pci_using_dac = 1;
  else {
    
#line 2649 
    err = dma_set_mask_and_coherent(& pdev->dev,4294967295ULL);
    
#line 2650 
    if (err != 0) {
      
#line 2651 
      dev_err((struct device const *)(& pdev->dev),"No usable DMA configuration, aborting\n");
      
#line 2653 
      goto err_dma;
    }
    else ;
  }
  
#line 2657 
  err = pci_request_regions(pdev,(char const *)(& igbvf_driver_name));
  
#line 2658 
  if (err != 0) 
#line 2659 
                goto err_pci_reg; else ;
  
#line 2661 
  pci_set_master(pdev);
  
#line 2663 
  err = -12;
  
#line 2664 
  netdev = ldv_alloc_etherdev_mqs_86(2880,1U,1U);
  
#line 2665 
  if (netdev == (struct net_device *)0) 
#line 2666 
                                        goto err_alloc_etherdev; else ;
  
#line 2668 
  netdev->dev.parent = & pdev->dev;
  
#line 2670 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 2671 
  adapter = (struct igbvf_adapter *)netdev_priv((struct net_device const *)netdev);
  
#line 2672 
  hw = & adapter->hw;
  
#line 2673 
  adapter->netdev = netdev;
  
#line 2674 
  adapter->pdev = pdev;
  
#line 2675 
  adapter->ei = ei;
  
#line 2676 
  adapter->pba = ei->pba;
  
#line 2677 
  adapter->flags = ei->flags;
  
#line 2678 
  adapter->hw.back = (void *)adapter;
  
#line 2679 
  adapter->hw.mac.type = ei->mac;
  
#line 2680 
  adapter->msg_enable = netif_msg_init(debug,7);
  
#line 2684 
  hw->vendor_id = pdev->vendor;
  
#line 2685 
  hw->device_id = pdev->device;
  
#line 2686 
  hw->subsystem_vendor_id = pdev->subsystem_vendor;
  
#line 2687 
  hw->subsystem_device_id = pdev->subsystem_device;
  
#line 2688 
  hw->revision_id = pdev->revision;
  
#line 2690 
  err = -5;
  
#line 2692 
  if (pdev->resource[0].start != 0ULL || pdev->resource[0].end != pdev->resource[0].start) 
    
#line 2692 
    tmp_0 = (pdev->resource[0].end - pdev->resource[0].start) + 1ULL; else 
                                                                    
#line 2692 
                                                                    tmp_0 = 0ULL;
  
#line 2691 
  ;
  
#line 2691 
  tmp_1 = ioremap(pdev->resource[0].start,(unsigned long)tmp_0);
  
#line 2691 
  adapter->hw.hw_addr = (u8 *)tmp_1;
  
#line 2694 
  if (adapter->hw.hw_addr == (u8 *)0U) 
#line 2695 
                                       goto err_ioremap; else ;
  
#line 2697 
  if (ei->get_variants != (s32 (*)(struct igbvf_adapter *))0) {
    
#line 2698 
    err = (*(ei->get_variants))(adapter);
    
#line 2699 
    if (err != 0) 
#line 2700 
                  goto err_get_variants; else ;
  }
  else ;
  
#line 2704 
  err = igbvf_sw_init(adapter);
  
#line 2705 
  if (err != 0) 
#line 2706 
                goto err_sw_init; else ;
  
#line 2709 
  netdev->netdev_ops = & igbvf_netdev_ops;
  
#line 2711 
  igbvf_set_ethtool_ops(netdev);
  
#line 2712 
  netdev->watchdog_timeo = 1250;
  
#line 2713 
  tmp_2 = pci_name((struct pci_dev const *)pdev);
  
#line 2713 
  ;
  
#line 2713 
  strncpy((char *)(& netdev->name),tmp_2,15UL);
  
#line 2715 
  tmp_3 = cards_found;
  
#line 2715 
  cards_found += 1;
  
#line 2715 
  adapter->bd_number = (unsigned int)tmp_3;
  
#line 2717 
  netdev->hw_features = 17180983315ULL;
  
#line 2724 
  netdev->features = netdev->hw_features | 896ULL;
  
#line 2729 
  if (pci_using_dac != 0) 
#line 2730 
                          netdev->features |= 32ULL; else ;
  
#line 2732 
  netdev->vlan_features |= 65536ULL;
  
#line 2733 
  netdev->vlan_features |= 1048576ULL;
  
#line 2734 
  netdev->vlan_features |= 2ULL;
  
#line 2735 
  netdev->vlan_features |= 16ULL;
  
#line 2736 
  netdev->vlan_features |= 1ULL;
  
#line 2739 
  err = (*(hw->mac.ops.reset_hw))(hw);
  
#line 2740 
  if (err != 0) 
#line 2741 
                _dev_info((struct device const *)(& pdev->dev),"PF still in reset state. Is the PF interface up?\n");
  else {
    
#line 2744 
    err = (*(hw->mac.ops.read_mac_addr))(hw);
    
#line 2745 
    if (err != 0) 
#line 2746 
                  _dev_info((struct device const *)(& pdev->dev),"Error reading MAC address.\n");
    else {
      bool tmp_4;
      
#line 2747 
      tmp_4 = is_zero_ether_addr((u8 const *)(& adapter->hw.mac.addr));
      
#line 2747 
      if ((int)tmp_4 != 0) 
#line 2748 
                           _dev_info((struct device const *)(& pdev->dev),"MAC address not assigned by administrator.\n"); else ;
    }
    
#line 2750 
    memcpy((void *)netdev->dev_addr,(void const *)(& adapter->hw.mac.addr),(unsigned long)netdev->addr_len);
  }
  
#line 2754 
  tmp_5 = is_valid_ether_addr((u8 const *)netdev->dev_addr);
  
#line 2754 
  if (tmp_5) 
#line 2754 
             tmp_6 = 0; else 
#line 2754 
                             tmp_6 = 1;
  
#line 2754 
  if (tmp_6) {
    
#line 2755 
    _dev_info((struct device const *)(& pdev->dev),"Assigning random MAC address.\n");
    
#line 2756 
    eth_hw_addr_random(netdev);
    
#line 2757 
    memcpy((void *)(& adapter->hw.mac.addr),(void const *)netdev->dev_addr,(unsigned long)netdev->addr_len);
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 2761 
    init_timer_key(& adapter->watchdog_timer,0U,"((&adapter->watchdog_timer))",& __key);
  }
  
#line 2761 
  adapter->watchdog_timer.function = & igbvf_watchdog;
  
#line 2761 
  adapter->watchdog_timer.data = (unsigned long)adapter;
  {
    struct lock_class_key __key_0;
    
#line 2764 
    __init_work(& adapter->reset_task,0);
    
#line 2764 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2764 
    adapter->reset_task.data = __constr_expr_38;
    
#line 2764 
    lockdep_init_map(& adapter->reset_task.lockdep_map,"(&adapter->reset_task)",& __key_0,0);
    
#line 2764 
    INIT_LIST_HEAD(& adapter->reset_task.entry);
    
#line 2764 
    adapter->reset_task.func = & igbvf_reset_task;
  }
  {
    struct lock_class_key __key_1;
    
#line 2765 
    __init_work(& adapter->watchdog_task,0);
    
#line 2765 
    atomic_long_t __constr_expr_39 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2765 
    adapter->watchdog_task.data = __constr_expr_39;
    
#line 2765 
    lockdep_init_map(& adapter->watchdog_task.lockdep_map,"(&adapter->watchdog_task)",& __key_1,0);
    
#line 2765 
    INIT_LIST_HEAD(& adapter->watchdog_task.entry);
    
#line 2765 
    adapter->watchdog_task.func = & igbvf_watchdog_task;
  }
  
#line 2768 
  (adapter->rx_ring)->count = 1024U;
  
#line 2769 
  (adapter->tx_ring)->count = 1024U;
  
#line 2772 
  igbvf_reset(adapter);
  
#line 2775 
  if (adapter->hw.mac.type == (unsigned int)e1000_vfadapt_i350) 
#line 2776 
                                                                adapter->flags |= 2U; else ;
  
#line 2778 
  strcpy((char *)(& netdev->name),"eth%d");
  
#line 2779 
  err = ldv_register_netdev_87(netdev);
  
#line 2780 
  if (err != 0) 
#line 2781 
                goto err_hw_init; else ;
  
#line 2784 
  netif_carrier_off(netdev);
  
#line 2785 
  netif_stop_queue(netdev);
  
#line 2787 
  igbvf_print_device_info(adapter);
  
#line 2789 
  igbvf_initialize_last_counter_stats(adapter);
  
#line 2791 
  __retres = 0;
  
#line 2791 
  goto return_label;
  err_hw_init: 
#line 2793 
  ;
  
#line 2794 
  kfree((void const *)adapter->tx_ring);
  
#line 2795 
  kfree((void const *)adapter->rx_ring);
  err_sw_init: 
#line 2796 
  ;
  
#line 2797 
  igbvf_reset_interrupt_capability(adapter);
  err_get_variants: 
#line 2798 
  ;
  
#line 2799 
  iounmap((void volatile *)adapter->hw.hw_addr);
  err_ioremap: 
#line 2800 
  ;
  
#line 2801 
  ldv_free_netdev_88(netdev);
  err_alloc_etherdev: 
#line 2802 
  ;
  
#line 2803 
  pci_release_regions(pdev);
  err_pci_reg: 
#line 2804 
  ;
  err_dma: 
#line 2805 
  ;
  
#line 2806 
  pci_disable_device(pdev);
  
#line 2807 
  __retres = err;
  return_label: 
#line 2807 
                return __retres;
}


#line 2819  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_remove(struct pci_dev *pdev)
{
  
#line 2821 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2822 
  struct igbvf_adapter *adapter = netdev_priv((struct net_device const *)netdev);
  
#line 2823 
  struct e1000_hw *hw = & adapter->hw;
  
#line 2828 
  set_bit(2L,(unsigned long volatile *)(& adapter->state));
  
#line 2829 
  ldv_del_timer_sync_89(& adapter->watchdog_timer);
  
#line 2831 
  cancel_work_sync(& adapter->reset_task);
  
#line 2832 
  cancel_work_sync(& adapter->watchdog_task);
  
#line 2834 
  ldv_unregister_netdev_90(netdev);
  
#line 2836 
  igbvf_reset_interrupt_capability(adapter);
  
#line 2841 
  netif_napi_del(& (adapter->rx_ring)->napi);
  
#line 2842 
  kfree((void const *)adapter->tx_ring);
  
#line 2843 
  kfree((void const *)adapter->rx_ring);
  
#line 2845 
  iounmap((void volatile *)hw->hw_addr);
  
#line 2846 
  if (hw->flash_address != (u8 *)0U) 
#line 2847 
                                     iounmap((void volatile *)hw->flash_address); else ;
  
#line 2848 
  pci_release_regions(pdev);
  
#line 2850 
  ldv_free_netdev_91(netdev);
  
#line 2852 
  pci_disable_device(pdev);
  
#line 2853 
  return;
}


#line 2856  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct pci_error_handlers const igbvf_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& igbvf_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & igbvf_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & igbvf_io_resume};

#line 2862  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct pci_device_id const igbvf_pci_tbl[3U] = {{.vendor = 32902U, .device = 4298U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 32902U, .device = 5408U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 1UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 2867  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
struct pci_device_id const __mod_pci__igbvf_pci_tbl_device_table[3U];

#line 2870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static struct pci_driver igbvf_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = (char const *)(& igbvf_driver_name), .id_table = (struct pci_device_id const *)(& igbvf_pci_tbl), .probe = & igbvf_probe, .remove = & igbvf_remove, .suspend = & igbvf_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & igbvf_resume, .shutdown = & igbvf_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & igbvf_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 2890  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static int igbvf_init_module(void)
{
  int ret;
  
#line 2894 
  printk("\001",(char const *)(& igbvf_driver_string),(char const *)(& igbvf_driver_version));
  
#line 2895 
  printk("\001",(char const *)(& igbvf_copyright));
  
#line 2897 
  ret = ldv___pci_register_driver_92(& igbvf_driver,& __this_module,"igbvf");
  
#line 2899 
  return ret;
}


#line 2909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/netdev.c"
static void igbvf_exit_module(void)
{
  
#line 2911 
  ldv_pci_unregister_driver_93(& igbvf_driver);
  
#line 2912 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
struct pci_driver *ldv_emg_alias_igbvf_driver_2 = & igbvf_driver;

#line 59 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 60 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 61 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 62 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 63 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 64 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 65 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 66 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 67 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 68 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 69 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 73  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_emg_wrapper_igbvf_tx_timeout_19(struct net_device *arg0)
{
  
#line 74 
  igbvf_tx_timeout(arg0);
  
#line 75 
  return;
}


#line 78  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_vlan_rx_kill_vid_34(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 79 
  tmp = igbvf_vlan_rx_kill_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 79 
  return tmp;
}


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
enum netdev_tx ldv_emg_wrapper_igbvf_xmit_frame_16(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 84 
  tmp = igbvf_xmit_frame(arg0,arg1);
  
#line 84 
  return tmp;
}


#line 88  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
enum irqreturn ldv_emg_wrapper_igbvf_intr_msix_tx_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 89 
  tmp = igbvf_intr_msix_tx(arg0,arg1);
  
#line 89 
  return tmp;
}


#line 93  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
enum irqreturn ldv_emg_wrapper_igbvf_msix_other_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 94 
  tmp = igbvf_msix_other(arg0,arg1);
  
#line 94 
  return tmp;
}


#line 98  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
struct net_device_stats *ldv_emg_wrapper_igbvf_get_stats_27(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 99 
  tmp = igbvf_get_stats(arg0);
  
#line 99 
  return tmp;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_emg_igbvf_exit_module(void)
{
  
#line 104 
  igbvf_exit_module();
  
#line 105 
  return;
}


#line 107  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_vlan_rx_add_vid_22(struct net_device *arg0, unsigned short arg1, unsigned short arg2)
{
  int tmp;
  
#line 108 
  tmp = igbvf_vlan_rx_add_vid(arg0,(unsigned short)((int)arg1),(unsigned short)((int)arg2));
  
#line 108 
  return tmp;
}


#line 112  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_change_mtu_9(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 113 
  tmp = igbvf_change_mtu(arg0,arg1);
  
#line 113 
  return tmp;
}


#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_igbvf_init_module(void)
{
  int tmp;
  
#line 118 
  tmp = igbvf_init_module();
  
#line 118 
  return tmp;
}


#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 122 
  tmp = igbvf_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 122 
  return tmp;
}


#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_set_features_11(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 127 
  tmp = igbvf_set_features(arg0,arg1);
  
#line 127 
  return tmp;
}


#line 131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_suspend_4(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 132 
  tmp = igbvf_suspend(arg0,arg1);
  
#line 132 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_emg_wrapper_igbvf_netpoll_35(struct net_device *arg0)
{
  
#line 137 
  igbvf_netpoll(arg0);
  
#line 138 
  return;
}


#line 141  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_emg_wrapper_igbvf_set_multi_6(struct net_device *arg0)
{
  
#line 142 
  igbvf_set_multi(arg0);
  
#line 143 
  return;
}


#line 146  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
enum irqreturn ldv_emg_wrapper_igbvf_intr_msix_rx_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 147 
  tmp = igbvf_intr_msix_rx(arg0,arg1);
  
#line 147 
  return tmp;
}


#line 151  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_set_mac_17(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 152 
  tmp = igbvf_set_mac(arg0,arg1);
  
#line 152 
  return tmp;
}


#line 156  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_emg_wrapper_igbvf_remove_5(struct pci_dev *arg0)
{
  
#line 157 
  igbvf_remove(arg0);
  
#line 158 
  return;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 162 
  tmp = igbvf_open(arg0);
  
#line 162 
  return tmp;
}


#line 166  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_resume_6(struct pci_dev *arg0)
{
  int tmp;
  
#line 167 
  tmp = igbvf_resume(arg0);
  
#line 167 
  return tmp;
}


#line 171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_ioctl_23(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 172 
  tmp = igbvf_ioctl(arg0,arg1,arg2);
  
#line 172 
  return tmp;
}


#line 176  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
void ldv_emg_wrapper_igbvf_shutdown_2(struct pci_dev *arg0)
{
  
#line 177 
  igbvf_shutdown(arg0);
  
#line 178 
  return;
}


#line 181  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
int ldv_emg_wrapper_igbvf_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 182 
  tmp = igbvf_close(arg0);
  
#line 182 
  return tmp;
}


#line 240  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void atomic_inc(atomic_t *v)
{
  
#line 243 
  ldv_atomic_inc(v);
  
#line 244 
  return;
}


#line 597  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void *kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 600 
  tmp = ldv_kmalloc_array(n,size,flags);
  
#line 600 
  return tmp;
}


#line 604  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 607 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 607 
  return tmp;
}


#line 611  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 614 
  tmp = ldv_kzalloc(size,flags);
  
#line 614 
  return tmp;
}


#line 867  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_mod_timer_73(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 871 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 871 
  return tmp;
}


#line 875  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_request_irq_74(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 879 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 879 
  return tmp;
}


#line 883  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_request_irq_75(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 887 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 887 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_request_irq_76(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 895 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 895 
  return tmp;
}


#line 899  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void ldv_free_irq_77(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 903 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 904 
  return;
}


#line 907  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_mod_timer_78(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 911 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 911 
  return tmp;
}


#line 915  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_del_timer_sync_79(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 919 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 919 
  return tmp;
}


#line 923  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_mod_timer_80(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 927 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 927 
  return tmp;
}


#line 931  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static bool ldv_schedule_work_81(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 935 
  tmp = ldv_emg_schedule_work(work);
  
#line 935 
  __retres = tmp != 0;
  
#line 935 
  return __retres;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static bool ldv_schedule_work_82(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 943 
  tmp = ldv_emg_schedule_work(work);
  
#line 943 
  __retres = tmp != 0;
  
#line 943 
  return __retres;
}


#line 947  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static bool ldv_schedule_work_83(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 951 
  tmp = ldv_emg_schedule_work(work);
  
#line 951 
  __retres = tmp != 0;
  
#line 951 
  return __retres;
}


#line 955  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_mod_timer_84(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 959 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 959 
  return tmp;
}


#line 963  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static bool ldv_schedule_work_85(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 967 
  tmp = ldv_emg_schedule_work(work);
  
#line 967 
  __retres = tmp != 0;
  
#line 967 
  return __retres;
}


#line 971  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_86(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 975 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 975 
  return tmp;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_register_netdev_87(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 983 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 983 
  return tmp;
}


#line 987  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void ldv_free_netdev_88(struct net_device *ldv_func_arg1)
{
  
#line 991 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 992 
  return;
}


#line 995  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv_del_timer_sync_89(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 999 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 999 
  return tmp;
}


#line 1003  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void ldv_unregister_netdev_90(struct net_device *ldv_func_arg1)
{
  
#line 1007 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1008 
  return;
}


#line 1011  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void ldv_free_netdev_91(struct net_device *ldv_func_arg1)
{
  
#line 1015 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1016 
  return;
}


#line 1019  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static int ldv___pci_register_driver_92(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1023 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1023 
  return tmp;
}


#line 1027  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/weaver/.tmp_netdev.c.aux"
static void ldv_pci_unregister_driver_93(struct pci_driver *ldv_func_arg1)
{
  
#line 1031 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1032 
  return;
}


#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __bad_udelay(void);


#line 8 
void __udelay(unsigned long);


#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_poll_for_msg(struct e1000_hw *hw)
{
  int tmp_0;
  
#line 37 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 38 
  int countdown = (int)mbx->timeout;
  
#line 40 
  if (mbx->ops.check_for_msg == (s32 (*)(struct e1000_hw *))0) 
#line 41 
                                                               goto out; else ;
  
#line 43 
  goto ldv_31099;
  ldv_31098: 
#line 44 
  ;
  
#line 44 
  countdown -= 1;
  
#line 45 
  if (0 != 0) 
    
#line 45 
    if (mbx->usec_delay > 19999U) 
#line 45 
                                  __bad_udelay(); else 
#line 45 
                                                       __const_udelay((unsigned long)mbx->usec_delay * 4295UL);
  else 
#line 45 
       __udelay((unsigned long)mbx->usec_delay);
  ldv_31099: 
#line 47 
  ;
  
#line 43 
  if (countdown != 0) {
    s32 tmp;
    
#line 43 
    tmp = (*(mbx->ops.check_for_msg))(hw);
    
#line 43 
    if (tmp != 0) 
#line 45 
                  goto ldv_31098; else 
#line 48 
                                       goto ldv_31100;
  }
  else 
#line 48 
       goto ldv_31100;
  ldv_31100: 
#line 49 
  ;
  
#line 49 
  if (countdown == 0) 
#line 50 
                      mbx->timeout = 0U; else ;
  out: 
#line 51 
  ;
  
#line 52 
  if (countdown != 0) 
#line 52 
                      tmp_0 = 0; else 
#line 52 
                                      tmp_0 = -15;
  
#line 52 
  return tmp_0;
}


#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_poll_for_ack(struct e1000_hw *hw)
{
  int tmp_0;
  
#line 63 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 64 
  int countdown = (int)mbx->timeout;
  
#line 66 
  if (mbx->ops.check_for_ack == (s32 (*)(struct e1000_hw *))0) 
#line 67 
                                                               goto out; else ;
  
#line 69 
  goto ldv_31108;
  ldv_31107: 
#line 70 
  ;
  
#line 70 
  countdown -= 1;
  
#line 71 
  if (0 != 0) 
    
#line 71 
    if (mbx->usec_delay > 19999U) 
#line 71 
                                  __bad_udelay(); else 
#line 71 
                                                       __const_udelay((unsigned long)mbx->usec_delay * 4295UL);
  else 
#line 71 
       __udelay((unsigned long)mbx->usec_delay);
  ldv_31108: 
#line 73 
  ;
  
#line 69 
  if (countdown != 0) {
    s32 tmp;
    
#line 69 
    tmp = (*(mbx->ops.check_for_ack))(hw);
    
#line 69 
    if (tmp != 0) 
#line 71 
                  goto ldv_31107; else 
#line 74 
                                       goto ldv_31109;
  }
  else 
#line 74 
       goto ldv_31109;
  ldv_31109: 
#line 75 
  ;
  
#line 75 
  if (countdown == 0) 
#line 76 
                      mbx->timeout = 0U; else ;
  out: 
#line 77 
  ;
  
#line 78 
  if (countdown != 0) 
#line 78 
                      tmp_0 = 0; else 
#line 78 
                                      tmp_0 = -15;
  
#line 78 
  return tmp_0;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_read_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size)
{
  
#line 92 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 93 
  s32 ret_val = -15;
  
#line 95 
  if (mbx->ops.read == (s32 (*)(struct e1000_hw *, u32 *, u16 ))0) 
#line 96 
                                                                   goto out; else ;
  
#line 98 
  ret_val = e1000_poll_for_msg(hw);
  
#line 101 
  if (ret_val == 0) 
#line 102 
                    ret_val = (*(mbx->ops.read))(hw,msg,(unsigned short)((int)size)); else ;
  out: 
#line 103 
  ;
  
#line 104 
  return ret_val;
}


#line 116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_write_posted_mbx(struct e1000_hw *hw, u32 *msg, u16 size)
{
  
#line 118 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 119 
  s32 ret_val = -15;
  
#line 122 
  if (mbx->ops.write == (s32 (*)(struct e1000_hw *, u32 *, u16 ))0 || mbx->timeout == 0U) 
    
#line 123 
    goto out; else ;
  
#line 126 
  ret_val = (*(mbx->ops.write))(hw,msg,(unsigned short)((int)size));
  
#line 129 
  if (ret_val == 0) 
#line 130 
                    ret_val = e1000_poll_for_ack(hw); else ;
  out: 
#line 131 
  ;
  
#line 132 
  return ret_val;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static u32 e1000_read_v2p_mailbox(struct e1000_hw *hw)
{
  
#line 144 
  u32 v2p_mailbox = readl((void const volatile *)(hw->hw_addr + 3136U));
  
#line 146 
  v2p_mailbox = hw->dev_spec.vf.v2p_mailbox | v2p_mailbox;
  
#line 147 
  hw->dev_spec.vf.v2p_mailbox |= v2p_mailbox & 176U;
  
#line 149 
  return v2p_mailbox;
}


#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_check_for_bit_vf(struct e1000_hw *hw, u32 mask)
{
  
#line 162 
  u32 v2p_mailbox = e1000_read_v2p_mailbox(hw);
  
#line 163 
  s32 ret_val = -15;
  
#line 165 
  if ((v2p_mailbox & mask) != 0U) 
#line 166 
                                  ret_val = 0; else ;
  
#line 168 
  hw->dev_spec.vf.v2p_mailbox &= ~ mask;
  
#line 170 
  return ret_val;
}


#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_check_for_msg_vf(struct e1000_hw *hw)
{
  s32 tmp;
  
#line 181 
  s32 ret_val = -15;
  
#line 183 
  tmp = e1000_check_for_bit_vf(hw,16U);
  
#line 183 
  if (tmp == 0) {
    
#line 184 
    ret_val = 0;
    
#line 185 
    hw->mbx.stats.reqs += 1U;
  }
  else ;
  
#line 188 
  return ret_val;
}


#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_check_for_ack_vf(struct e1000_hw *hw)
{
  s32 tmp;
  
#line 199 
  s32 ret_val = -15;
  
#line 201 
  tmp = e1000_check_for_bit_vf(hw,32U);
  
#line 201 
  if (tmp == 0) {
    
#line 202 
    ret_val = 0;
    
#line 203 
    hw->mbx.stats.acks += 1U;
  }
  else ;
  
#line 206 
  return ret_val;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_check_for_rst_vf(struct e1000_hw *hw)
{
  s32 tmp;
  
#line 217 
  s32 ret_val = -15;
  
#line 219 
  tmp = e1000_check_for_bit_vf(hw,192U);
  
#line 219 
  if (tmp == 0) {
    
#line 221 
    ret_val = 0;
    
#line 222 
    hw->mbx.stats.rsts += 1U;
  }
  else ;
  
#line 225 
  return ret_val;
}


#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_obtain_mbx_lock_vf(struct e1000_hw *hw)
{
  u32 tmp;
  
#line 236 
  s32 ret_val = -15;
  
#line 239 
  writel(4U,(void volatile *)(hw->hw_addr + 3136U));
  
#line 242 
  tmp = e1000_read_v2p_mailbox(hw);
  
#line 242 
  if ((tmp & 4U) != 0U) 
#line 243 
                        ret_val = 0; else ;
  
#line 245 
  return ret_val;
}


#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_write_mbx_vf(struct e1000_hw *hw, u32 *msg, u16 size)
{
  s32 err;
  u16 i;
  
#line 262 
  err = e1000_obtain_mbx_lock_vf(hw);
  
#line 263 
  if (err != 0) 
#line 264 
                goto out_no_write; else ;
  
#line 267 
  e1000_check_for_ack_vf(hw);
  
#line 268 
  e1000_check_for_msg_vf(hw);
  
#line 271 
  i = (unsigned short)0U;
  
#line 271 
  goto ldv_31161;
  ldv_31160: 
#line 272 
  ;
  
#line 272 
  writel(*(msg + (int)i),(void volatile *)(hw->hw_addr + ((unsigned int)((int)i << 2) + 2048U)));
  
#line 271 
  i = (u16)((int)i + 1);
  ldv_31161: 
#line 272 
  ;
  
#line 271 
  if ((int)i < (int)size) 
#line 273 
                          goto ldv_31160; else 
#line 276 
                                               goto ldv_31162;
  ldv_31162: 
#line 277 
  ;
  
#line 275 
  hw->mbx.stats.msgs_tx += 1U;
  
#line 278 
  writel(1U,(void volatile *)(hw->hw_addr + 3136U));
  out_no_write: 
#line 280 
  ;
  
#line 281 
  return err;
}


#line 292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
static s32 e1000_read_mbx_vf(struct e1000_hw *hw, u32 *msg, u16 size)
{
  s32 err;
  u16 i;
  
#line 298 
  err = e1000_obtain_mbx_lock_vf(hw);
  
#line 299 
  if (err != 0) 
#line 300 
                goto out_no_read; else ;
  
#line 303 
  i = (unsigned short)0U;
  
#line 303 
  goto ldv_31172;
  ldv_31171: 
#line 304 
  ;
  
#line 304 
  *(msg + (int)i) = readl((void const volatile *)(hw->hw_addr + ((unsigned int)((int)i << 2) + 2048U)));
  
#line 303 
  i = (u16)((int)i + 1);
  ldv_31172: 
#line 304 
  ;
  
#line 303 
  if ((int)i < (int)size) 
#line 305 
                          goto ldv_31171; else 
#line 308 
                                               goto ldv_31173;
  ldv_31173: 
#line 309 
  ;
  
#line 307 
  writel(2U,(void volatile *)(hw->hw_addr + 3136U));
  
#line 310 
  hw->mbx.stats.msgs_rx += 1U;
  out_no_read: 
#line 312 
  ;
  
#line 313 
  return err;
}


#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/igbvf/mbx.c"
s32 e1000_init_mbx_params_vf(struct e1000_hw *hw)
{
  s32 __retres;
  
#line 324 
  struct e1000_mbx_info *mbx = & hw->mbx;
  
#line 329 
  mbx->timeout = 0U;
  
#line 330 
  mbx->usec_delay = 500U;
  
#line 332 
  mbx->size = (unsigned short)16U;
  
#line 334 
  mbx->ops.read = & e1000_read_mbx_vf;
  
#line 335 
  mbx->ops.write = & e1000_write_mbx_vf;
  
#line 336 
  mbx->ops.read_posted = & e1000_read_posted_mbx;
  
#line 337 
  mbx->ops.write_posted = & e1000_write_posted_mbx;
  
#line 338 
  mbx->ops.check_for_msg = & e1000_check_for_msg_vf;
  
#line 339 
  mbx->ops.check_for_ack = & e1000_check_for_ack_vf;
  
#line 340 
  mbx->ops.check_for_rst = & e1000_check_for_rst_vf;
  
#line 342 
  mbx->stats.msgs_tx = 0U;
  
#line 343 
  mbx->stats.msgs_rx = 0U;
  
#line 344 
  mbx->stats.reqs = 0U;
  
#line 345 
  mbx->stats.acks = 0U;
  
#line 346 
  mbx->stats.rsts = 0U;
  
#line 348 
  __retres = 0;
  
#line 348 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 98 
int main(void);


#line 99 
void *ldv_timer_scenario_15(void *arg0);


#line 100 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 101 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 103 
void *ldv_interrupt_scenario_17(void *arg0);


#line 104 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 106 
void *ldv_interrupt_scenario_16(void *arg0);


#line 107 
void *ldv_random_allocationless_scenario_13(void *arg0);


#line 109 
void *ldv_initialization_1(void *arg0);


#line 110 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 111 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 116 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 117 
void *ldv_pci_scenario_18(void *arg0);


#line 118 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 120 
void *ldv_interrupt_scenario_14(void *arg0);


#line 124  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 126  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 127  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 128  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 133  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 136 
  tmp = ldv_undef_int();
  
#line 136 
  switch (tmp) {
    case 0: 
#line 137 
    ;
    
#line 138 
    cf_arg_13 = (struct ldv_struct_random_allocationless_scenario_13 *)ldv_xmalloc(16UL);
    
#line 139 
    cf_arg_13->arg0 = arg0;
    
#line 140 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_13,(void *)cf_arg_13);
    
#line 141 
    __VERIFIER_assume(ret == 0);
    
#line 142 
    goto ldv_44774;
    default: 
#line 144 
    ;
    
#line 144 
    __VERIFIER_assume(0);
  }
  ldv_44774: 
#line 145 
  ;
  
#line 146 
  return;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 156 
  ldv_9_timer_list = arg0;
  
#line 160 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 161 
  ;
  
#line 161 
  __retres = 0;
  
#line 161 
  return __retres;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 172 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_igbvf_driver_2;
  
#line 176 
  tmp_0 = ldv_undef_int();
  
#line 176 
  if (tmp_0 != 0) {
    
#line 178 
    ldv_7_pci_driver = arg0;
    
#line 182 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 186 
    __retres = 0;
    
#line 186 
    goto return_label;
  }
  else {
    int tmp;
    
#line 193 
    tmp = ldv_undef_int_negative();
    
#line 193 
    __retres = tmp;
    
#line 193 
    goto return_label;
  }
  return_label: 
#line 176 
                return __retres;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 206 
  ldv_initialize();
  
#line 209 
  ldv_initialization_1((void *)0);
  
#line 211 
  __retres = 0;
  
#line 211 
  return __retres;
}


#line 216  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_15(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_15_container;
  
#line 221 
  struct ldv_struct_timer_scenario_15 *data = (struct ldv_struct_timer_scenario_15 *)arg0;
  
#line 226 
  if (data != (struct ldv_struct_timer_scenario_15 *)0) {
    
#line 227 
    ldv_15_container = data->arg0;
    
#line 228 
    ldv_free((void *)data);
  }
  else ;
  
#line 233 
  if (ldv_15_container->function != (void (*)(unsigned long ))0) {
    
#line 235 
    ldv_switch_to_interrupt_context();
    
#line 237 
    (*(ldv_15_container->function))(ldv_15_container->data);
    
#line 239 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 248 
  __retres = (void *)0;
  
#line 248 
  goto return_label;
  
#line 250 
  __retres = (void *)0;
  return_label: 
#line 250 
                return __retres;
}


#line 255  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_16;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_17;
  struct ldv_struct_interrupt_scenario_14 *cf_arg_14;
  int tmp;
  
#line 260 
  tmp = ldv_undef_int();
  
#line 260 
  switch (tmp) {
    case 0: 
#line 261 
    ;
    
#line 262 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 263 
    cf_arg_16->arg0 = arg0;
    
#line 264 
    cf_arg_16->arg1 = arg1;
    
#line 265 
    cf_arg_16->arg2 = arg2;
    
#line 266 
    cf_arg_16->arg3 = arg3;
    
#line 267 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 268 
    __VERIFIER_assume(ret == 0);
    
#line 269 
    goto ldv_44809;
    case 1: 
#line 271 
    ;
    
#line 272 
    cf_arg_17 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 273 
    cf_arg_17->arg0 = arg0;
    
#line 274 
    cf_arg_17->arg1 = arg1;
    
#line 275 
    cf_arg_17->arg2 = arg2;
    
#line 276 
    cf_arg_17->arg3 = arg3;
    
#line 277 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_interrupt_scenario_17,(void *)cf_arg_17);
    
#line 278 
    __VERIFIER_assume(ret == 0);
    
#line 279 
    goto ldv_44809;
    case 2: 
#line 281 
    ;
    
#line 282 
    cf_arg_14 = (struct ldv_struct_interrupt_scenario_14 *)ldv_xmalloc(32UL);
    
#line 283 
    cf_arg_14->arg0 = arg0;
    
#line 284 
    cf_arg_14->arg1 = arg1;
    
#line 285 
    cf_arg_14->arg2 = arg2;
    
#line 286 
    cf_arg_14->arg3 = arg3;
    
#line 287 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_interrupt_scenario_14,(void *)cf_arg_14);
    
#line 288 
    __VERIFIER_assume(ret == 0);
    
#line 289 
    goto ldv_44809;
    default: 
#line 291 
    ;
    
#line 291 
    __VERIFIER_assume(0);
  }
  ldv_44809: 
#line 292 
  ;
  
#line 293 
  return;
}


#line 297  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  struct ldv_struct_free_irq_3 *cf_arg_17;
  struct ldv_struct_free_irq_3 *cf_arg_14;
  int tmp;
  
#line 302 
  tmp = ldv_undef_int();
  
#line 302 
  switch (tmp) {
    case 0: 
#line 303 
    ;
    
#line 304 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 305 
    __VERIFIER_assume(ret == 0);
    
#line 306 
    goto ldv_44821;
    case 1: 
#line 308 
    ;
    
#line 309 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 310 
    __VERIFIER_assume(ret == 0);
    
#line 311 
    goto ldv_44821;
    case 2: 
#line 313 
    ;
    
#line 314 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 315 
    __VERIFIER_assume(ret == 0);
    
#line 316 
    goto ldv_44821;
    default: 
#line 318 
    ;
    
#line 318 
    __VERIFIER_assume(0);
  }
  ldv_44821: 
#line 319 
  ;
  
#line 320 
  return;
}


#line 324  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 331 
  tmp_0 = ldv_undef_int();
  
#line 331 
  if (tmp_0 != 0) {
    
#line 333 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 337 
    __retres = ldv_5_netdev;
    
#line 337 
    goto return_label;
  }
  else {
    
#line 344 
    __retres = (struct net_device *)0;
    
#line 344 
    goto return_label;
  }
  return_label: 
#line 331 
                return __retres;
}


#line 354  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_17(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_17_ret_val;
  int ldv_17_line;
  void *ldv_17_data;
  enum irqreturn (*ldv_17_thread)(int , void *);
  int tmp;
  
#line 360 
  enum irqreturn (*ldv_17_callback)(int , void *) = & ldv_emg_wrapper_igbvf_msix_other_2;
  
#line 363 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 368 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 369 
    ldv_17_line = data->arg0;
    
#line 370 
    ldv_17_callback = data->arg1;
    
#line 371 
    ldv_17_thread = data->arg2;
    
#line 372 
    ldv_17_data = data->arg3;
    
#line 373 
    ldv_free((void *)data);
  }
  else ;
  
#line 379 
  ldv_switch_to_interrupt_context();
  
#line 381 
  ldv_17_ret_val = ldv_emg_wrapper_igbvf_msix_other_2(ldv_17_line,ldv_17_data);
  
#line 383 
  ldv_switch_to_process_context();
  
#line 386 
  tmp = ldv_undef_int();
  
#line 386 
  if (tmp != 0) {
    
#line 388 
    __VERIFIER_assume(ldv_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 392 
    if (ldv_17_thread != (enum irqreturn (*)(int , void *))0) 
#line 394 
                                                              (*ldv_17_thread)(ldv_17_line,ldv_17_data); else ;
  }
  else 
#line 401 
       __VERIFIER_assume(ldv_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 410 
  __retres = (void *)0;
  
#line 410 
  goto return_label;
  
#line 412 
  __retres = (void *)0;
  return_label: 
#line 412 
                return __retres;
}


#line 417  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 420 
  tmp = ldv_undef_int();
  
#line 420 
  switch (tmp) {
    case 0: 
#line 421 
    ;
    
#line 422 
    cf_arg_18 = (struct ldv_struct_pci_scenario_18 *)ldv_xmalloc(16UL);
    
#line 423 
    cf_arg_18->arg0 = arg0;
    
#line 424 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_pci_scenario_18,(void *)cf_arg_18);
    
#line 425 
    __VERIFIER_assume(ret == 0);
    
#line 426 
    goto ldv_44850;
    default: 
#line 428 
    ;
    
#line 428 
    __VERIFIER_assume(0);
  }
  ldv_44850: 
#line 429 
  ;
  
#line 430 
  return;
}


#line 434  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 439 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_igbvf_intr_msix_rx_2;
  
#line 444 
  tmp_0 = ldv_undef_int();
  
#line 444 
  if (tmp_0 != 0) {
    
#line 446 
    ldv_12_line = (int)arg0;
    
#line 447 
    ldv_12_callback = arg1;
    
#line 448 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 449 
    ldv_12_data = arg4;
    
#line 453 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 457 
    __retres = 0;
    
#line 457 
    goto return_label;
  }
  else {
    int tmp;
    
#line 464 
    tmp = ldv_undef_int_negative();
    
#line 464 
    __retres = tmp;
    
#line 464 
    goto return_label;
  }
  return_label: 
#line 444 
                return __retres;
}


#line 474  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 480 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_igbvf_intr_msix_tx_2;
  
#line 483 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 488 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 489 
    ldv_16_line = data->arg0;
    
#line 490 
    ldv_16_callback = data->arg1;
    
#line 491 
    ldv_16_thread = data->arg2;
    
#line 492 
    ldv_16_data = data->arg3;
    
#line 493 
    ldv_free((void *)data);
  }
  else ;
  
#line 499 
  ldv_switch_to_interrupt_context();
  
#line 501 
  ldv_16_ret_val = ldv_emg_wrapper_igbvf_intr_msix_tx_2(ldv_16_line,ldv_16_data);
  
#line 503 
  ldv_switch_to_process_context();
  
#line 506 
  tmp = ldv_undef_int();
  
#line 506 
  if (tmp != 0) {
    
#line 508 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 512 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 514 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 521 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 530 
  __retres = (void *)0;
  
#line 530 
  goto return_label;
  
#line 532 
  __retres = (void *)0;
  return_label: 
#line 532 
                return __retres;
}


#line 537  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_13(void *arg0)
{
  void *__retres;
  struct ethtool_regs *ldv_13_ldv_param_1_28;
  struct ethtool_cmd *ldv_13_ldv_param_1_3;
  unsigned long long ldv_13_ldv_param_1_10;
  unsigned short ldv_13_ldv_param_1_23;
  int ldv_13_ldv_param_2_26;
  struct ethtool_pauseparam *ldv_13_ldv_param_1_34;
  struct ifreq *ldv_13_ldv_param_1_25;
  unsigned short ldv_13_ldv_param_2_24;
  struct ethtool_ringparam *ldv_13_ldv_param_1_14;
  struct ethtool_pauseparam *ldv_13_ldv_param_1_2;
  struct ethtool_cmd *ldv_13_ldv_param_1_4;
  struct sk_buff *ldv_13_ldv_param_0_15;
  struct ethtool_drvinfo *ldv_13_ldv_param_1_11;
  unsigned long long *ldv_13_ldv_param_2_8;
  unsigned char *ldv_13_ldv_param_2_31;
  unsigned short ldv_13_ldv_param_2_36;
  unsigned long long *ldv_13_ldv_param_2_21;
  void *ldv_13_ldv_param_2_29;
  void *ldv_13_ldv_param_1_16;
  unsigned char *ldv_13_ldv_param_2_18;
  struct ethtool_test *ldv_13_ldv_param_1_20;
  unsigned short ldv_13_ldv_param_1_35;
  struct ethtool_eeprom *ldv_13_ldv_param_1_12;
  struct ethtool_coalesce *ldv_13_ldv_param_1_33;
  struct ethtool_stats *ldv_13_ldv_param_1_7;
  struct net_device *ldv_13_container;
  struct ethtool_ringparam *ldv_13_ldv_param_1_6;
  int ldv_13_ldv_param_1_9;
  struct ethtool_coalesce *ldv_13_ldv_param_1_32;
  int ldv_13_ldv_param_1_19;
  struct ethtool_eeprom *ldv_13_ldv_param_1_17;
  unsigned char *ldv_13_ldv_param_2_13;
  unsigned int ldv_13_ldv_param_1_5;
  struct ethtool_wolinfo *ldv_13_ldv_param_1_22;
  struct ethtool_wolinfo *ldv_13_ldv_param_1_27;
  unsigned int ldv_13_ldv_param_1_30;
  int tmp_23;
  
#line 577 
  struct ldv_struct_random_allocationless_scenario_13 *data = (struct ldv_struct_random_allocationless_scenario_13 *)arg0;
  
#line 582 
  if (data != (struct ldv_struct_random_allocationless_scenario_13 *)0) {
    
#line 583 
    ldv_13_container = data->arg0;
    
#line 584 
    ldv_free((void *)data);
  }
  else ;
  
#line 592 
  goto ldv_call_13;
  
#line 594 
  __retres = (void *)0;
  
#line 594 
  goto return_label;
  ldv_call_13: 
#line 597 
  ;
  
#line 600 
  tmp_23 = ldv_undef_int();
  
#line 600 
  if (tmp_23 != 0) {
    int tmp_0;
    
#line 602 
    ldv_13_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 605 
    tmp_0 = ldv_undef_int();
    
#line 605 
    switch (tmp_0) {
      case 1: 
#line 606 
      ;
      
#line 609 
      ldv_emg_wrapper_igbvf_get_pauseparam_2(ldv_13_container,ldv_13_ldv_param_1_2);
      
#line 612 
      goto ldv_44924;
      case 2: 
#line 614 
      ;
      
#line 617 
      ldv_emg_wrapper_igbvf_set_multi_6(ldv_13_container);
      
#line 620 
      goto ldv_44924;
      case 3: 
#line 622 
      ;
      
#line 625 
      ldv_emg_wrapper_igbvf_nway_reset_28(ldv_13_container);
      
#line 628 
      goto ldv_44924;
      case 4: 
#line 630 
      ;
      
#line 636 
      ldv_emg_wrapper_igbvf_vlan_rx_kill_vid_34(ldv_13_container,(unsigned short)((int)ldv_13_ldv_param_1_35),(unsigned short)((int)ldv_13_ldv_param_2_36));
      
#line 642 
      goto ldv_44924;
      case 5: 
#line 644 
      ;
      
#line 646 
      ldv_13_ldv_param_1_34 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 651 
      ldv_emg_wrapper_igbvf_set_pauseparam_33(ldv_13_container,ldv_13_ldv_param_1_34);
      
#line 655 
      ldv_free((void *)ldv_13_ldv_param_1_34);
      
#line 658 
      goto ldv_44924;
      case 6: 
#line 660 
      ;
      
#line 662 
      ldv_13_ldv_param_1_33 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 667 
      ldv_emg_wrapper_igbvf_set_coalesce_32(ldv_13_container,ldv_13_ldv_param_1_33);
      
#line 671 
      ldv_free((void *)ldv_13_ldv_param_1_33);
      
#line 674 
      goto ldv_44924;
      case 7: 
#line 676 
      ;
      
#line 679 
      ldv_emg_wrapper_igbvf_get_regs_len_31(ldv_13_container);
      
#line 682 
      goto ldv_44924;
      case 8: 
#line 684 
      ;
      
#line 686 
      ldv_13_ldv_param_1_32 = (struct ethtool_coalesce *)ldv_xmalloc_unknown_size(0UL);
      
#line 691 
      ldv_emg_wrapper_igbvf_get_coalesce_30(ldv_13_container,ldv_13_ldv_param_1_32);
      
#line 695 
      ldv_free((void *)ldv_13_ldv_param_1_32);
      
#line 698 
      goto ldv_44924;
      case 9: 
#line 700 
      ;
      
#line 702 
      ldv_13_ldv_param_2_31 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 707 
      ldv_emg_wrapper_igbvf_get_strings_5(ldv_13_container,ldv_13_ldv_param_1_30,ldv_13_ldv_param_2_31);
      
#line 711 
      ldv_free((void *)ldv_13_ldv_param_2_31);
      
#line 714 
      goto ldv_44924;
      case 10: 
#line 716 
      ;
      
#line 719 
      ldv_emg_wrapper_igbvf_netpoll_35(ldv_13_container);
      
#line 722 
      goto ldv_44924;
      case 11: 
#line 724 
      ;
      
#line 727 
      ldv_emg_wrapper_igbvf_get_stats_27(ldv_13_container);
      
#line 730 
      goto ldv_44924;
      case 12: 
#line 732 
      ;
      
#line 735 
      ldv_emg_wrapper_igbvf_tx_timeout_19(ldv_13_container);
      
#line 738 
      goto ldv_44924;
      case 13: 
#line 740 
      ;
      
#line 742 
      ldv_13_ldv_param_1_28 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 743 
      ldv_13_ldv_param_2_29 = ldv_xmalloc_unknown_size(0UL);
      
#line 748 
      ldv_emg_wrapper_igbvf_get_regs_25(ldv_13_container,ldv_13_ldv_param_1_28,ldv_13_ldv_param_2_29);
      
#line 752 
      ldv_free((void *)ldv_13_ldv_param_1_28);
      
#line 753 
      ldv_free(ldv_13_ldv_param_2_29);
      
#line 756 
      goto ldv_44924;
      case 14: 
#line 758 
      ;
      
#line 760 
      ldv_13_ldv_param_1_27 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 765 
      ldv_emg_wrapper_igbvf_set_wol_24(ldv_13_container,ldv_13_ldv_param_1_27);
      
#line 769 
      ldv_free((void *)ldv_13_ldv_param_1_27);
      
#line 772 
      goto ldv_44924;
      case 15: 
#line 774 
      ;
      
#line 776 
      ldv_13_ldv_param_1_25 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 781 
      ldv_emg_wrapper_igbvf_ioctl_23(ldv_13_container,ldv_13_ldv_param_1_25,ldv_13_ldv_param_2_26);
      
#line 785 
      ldv_free((void *)ldv_13_ldv_param_1_25);
      
#line 788 
      goto ldv_44924;
      case 16: 
#line 790 
      ;
      
#line 796 
      ldv_emg_wrapper_igbvf_vlan_rx_add_vid_22(ldv_13_container,(unsigned short)((int)ldv_13_ldv_param_1_23),(unsigned short)((int)ldv_13_ldv_param_2_24));
      
#line 802 
      goto ldv_44924;
      case 17: 
#line 804 
      ;
      
#line 806 
      ldv_13_ldv_param_1_22 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 811 
      ldv_emg_wrapper_igbvf_get_wol_21(ldv_13_container,ldv_13_ldv_param_1_22);
      
#line 815 
      ldv_free((void *)ldv_13_ldv_param_1_22);
      
#line 818 
      goto ldv_44924;
      case 18: 
#line 820 
      ;
      
#line 822 
      ldv_13_ldv_param_2_21 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 823 
      ldv_13_ldv_param_1_20 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 828 
      ldv_emg_wrapper_igbvf_diag_test_20(ldv_13_container,ldv_13_ldv_param_1_20,ldv_13_ldv_param_2_21);
      
#line 832 
      ldv_free((void *)ldv_13_ldv_param_2_21);
      
#line 833 
      ldv_free((void *)ldv_13_ldv_param_1_20);
      
#line 836 
      goto ldv_44924;
      case 19: 
#line 838 
      ;
      
#line 844 
      ldv_emg_wrapper_igbvf_get_sset_count_26(ldv_13_container,ldv_13_ldv_param_1_19);
      
#line 850 
      goto ldv_44924;
      case 20: 
#line 852 
      ;
      
#line 854 
      ldv_13_ldv_param_2_18 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 855 
      ldv_13_ldv_param_1_17 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 860 
      ldv_emg_wrapper_igbvf_get_eeprom_3(ldv_13_container,ldv_13_ldv_param_1_17,ldv_13_ldv_param_2_18);
      
#line 864 
      ldv_free((void *)ldv_13_ldv_param_2_18);
      
#line 865 
      ldv_free((void *)ldv_13_ldv_param_1_17);
      
#line 868 
      goto ldv_44924;
      case 21: 
#line 870 
      ;
      
#line 872 
      ldv_13_ldv_param_1_16 = ldv_xmalloc_unknown_size(0UL);
      
#line 877 
      ldv_emg_wrapper_igbvf_set_mac_17(ldv_13_container,ldv_13_ldv_param_1_16);
      
#line 881 
      ldv_free(ldv_13_ldv_param_1_16);
      
#line 884 
      goto ldv_44924;
      case 22: 
#line 886 
      ;
      
#line 888 
      ldv_13_ldv_param_0_15 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 893 
      ldv_emg_wrapper_igbvf_xmit_frame_16(ldv_13_ldv_param_0_15,ldv_13_container);
      
#line 897 
      ldv_free((void *)ldv_13_ldv_param_0_15);
      
#line 900 
      goto ldv_44924;
      case 23: 
#line 902 
      ;
      
#line 905 
      ldv_emg_wrapper_igbvf_get_msglevel_15(ldv_13_container);
      
#line 908 
      goto ldv_44924;
      case 24: 
#line 910 
      ;
      
#line 912 
      ldv_13_ldv_param_1_14 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 917 
      ldv_emg_wrapper_igbvf_set_ringparam_14(ldv_13_container,ldv_13_ldv_param_1_14);
      
#line 921 
      ldv_free((void *)ldv_13_ldv_param_1_14);
      
#line 924 
      goto ldv_44924;
      case 25: 
#line 926 
      ;
      
#line 928 
      ldv_13_ldv_param_1_12 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 929 
      ldv_13_ldv_param_2_13 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 934 
      ldv_emg_wrapper_igbvf_set_eeprom_13(ldv_13_container,ldv_13_ldv_param_1_12,ldv_13_ldv_param_2_13);
      
#line 938 
      ldv_free((void *)ldv_13_ldv_param_1_12);
      
#line 939 
      ldv_free((void *)ldv_13_ldv_param_2_13);
      
#line 942 
      goto ldv_44924;
      case 26: 
#line 944 
      ;
      
#line 947 
      ldv_emg_wrapper_igbvf_get_eeprom_len_36(ldv_13_container);
      
#line 950 
      goto ldv_44924;
      case 27: 
#line 952 
      ;
      
#line 954 
      ldv_13_ldv_param_1_11 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 959 
      ldv_emg_wrapper_igbvf_get_drvinfo_12(ldv_13_container,ldv_13_ldv_param_1_11);
      
#line 963 
      ldv_free((void *)ldv_13_ldv_param_1_11);
      
#line 966 
      goto ldv_44924;
      case 28: 
#line 968 
      ;
      
#line 974 
      ldv_emg_wrapper_igbvf_set_features_11(ldv_13_container,ldv_13_ldv_param_1_10);
      
#line 980 
      goto ldv_44924;
      case 29: 
#line 982 
      ;
      
#line 985 
      (*ldv_emg_alias_ethtool_op_get_link_10)(ldv_13_container);
      
#line 988 
      goto ldv_44924;
      case 30: 
#line 990 
      ;
      
#line 996 
      ldv_emg_wrapper_igbvf_change_mtu_9(ldv_13_container,ldv_13_ldv_param_1_9);
      
#line 1002 
      goto ldv_44924;
      case 31: 
#line 1004 
      ;
      
#line 1006 
      ldv_13_ldv_param_2_8 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1007 
      ldv_13_ldv_param_1_7 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1012 
      ldv_emg_wrapper_igbvf_get_ethtool_stats_8(ldv_13_container,ldv_13_ldv_param_1_7,ldv_13_ldv_param_2_8);
      
#line 1016 
      ldv_free((void *)ldv_13_ldv_param_2_8);
      
#line 1017 
      ldv_free((void *)ldv_13_ldv_param_1_7);
      
#line 1020 
      goto ldv_44924;
      case 32: 
#line 1022 
      ;
      
#line 1024 
      ldv_13_ldv_param_1_6 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1029 
      ldv_emg_wrapper_igbvf_get_ringparam_7(ldv_13_container,ldv_13_ldv_param_1_6);
      
#line 1033 
      ldv_free((void *)ldv_13_ldv_param_1_6);
      
#line 1036 
      goto ldv_44924;
      case 33: 
#line 1038 
      ;
      
#line 1044 
      ldv_emg_wrapper_igbvf_set_msglevel_29(ldv_13_container,ldv_13_ldv_param_1_5);
      
#line 1050 
      goto ldv_44924;
      case 34: 
#line 1052 
      ;
      
#line 1054 
      ldv_13_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1059 
      ldv_emg_wrapper_igbvf_set_settings_4(ldv_13_container,ldv_13_ldv_param_1_4);
      
#line 1063 
      ldv_free((void *)ldv_13_ldv_param_1_4);
      
#line 1066 
      goto ldv_44924;
      case 35: 
#line 1068 
      ;
      
#line 1070 
      ldv_13_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1075 
      ldv_emg_wrapper_igbvf_get_settings_18(ldv_13_container,ldv_13_ldv_param_1_3);
      
#line 1079 
      ldv_free((void *)ldv_13_ldv_param_1_3);
      
#line 1082 
      goto ldv_44924;
      default: 
#line 1084 
      ;
      
#line 1084 
      __VERIFIER_assume(0);
    }
    ldv_44924: 
#line 1087 
    ;
    
#line 1087 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 1094 
    goto ldv_call_13;
  }
  else {
    
#line 1102 
    __retres = (void *)0;
    
#line 1102 
    goto return_label;
  }
  
#line 1105 
  __retres = (void *)0;
  return_label: 
#line 1105 
                return __retres;
}


#line 1110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 1117 
  tmp = ldv_undef_int();
  
#line 1117 
  if (tmp != 0) {
    
#line 1119 
    ldv_8_work_struct = arg0;
    
#line 1123 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1125 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 1130 
    __retres = (_Bool)1;
    
#line 1130 
    goto return_label;
  }
  else {
    
#line 1137 
    __retres = (_Bool)0;
    
#line 1137 
    goto return_label;
  }
  return_label: 
#line 1117 
                return __retres;
}


#line 1147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 1154 
  ldv_1_ret = ldv_emg_igbvf_init_module();
  
#line 1155 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 1158 
  tmp = ldv_undef_int();
  
#line 1158 
  if (tmp != 0) {
    
#line 1160 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 1164 
    __retres = (void *)0;
    
#line 1164 
    goto return_label;
  }
  else {
    
#line 1168 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 1173 
    ldv_emg_igbvf_exit_module();
    
#line 1177 
    __retres = (void *)0;
    
#line 1177 
    goto return_label;
  }
  
#line 1180 
  __retres = (void *)0;
  return_label: 
#line 1180 
                return __retres;
}


#line 1185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1188 
  tmp = ldv_undef_int();
  
#line 1188 
  switch (tmp) {
    case 0: 
#line 1189 
    ;
    
#line 1190 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1191 
    __VERIFIER_assume(ret == 0);
    
#line 1192 
    goto ldv_44974;
    default: 
#line 1194 
    ;
    
#line 1194 
    __VERIFIER_assume(0);
  }
  ldv_44974: 
#line 1195 
  ;
  
#line 1196 
  return;
}


#line 1200  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_18 *cf_arg_18;
  int tmp;
  
#line 1203 
  tmp = ldv_undef_int();
  
#line 1203 
  switch (tmp) {
    case 0: 
#line 1204 
    ;
    
#line 1205 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 1206 
    __VERIFIER_assume(ret == 0);
    
#line 1207 
    goto ldv_44982;
    default: 
#line 1209 
    ;
    
#line 1209 
    __VERIFIER_assume(0);
  }
  ldv_44982: 
#line 1210 
  ;
  
#line 1211 
  return;
}


#line 1215  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1218 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_igbvf_driver_2;
  
#line 1221 
  ldv_10_pci_driver = arg0;
  
#line 1225 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 1229 
  goto return_label;
  return_label: 
#line 1231 
                return;
}


#line 1236  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 1240 
  int ldv_11_ret = ldv_undef_int();
  
#line 1243 
  ldv_11_ret = ldv_undef_int();
  
#line 1246 
  tmp_3 = ldv_undef_int();
  
#line 1246 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1248 
    ldv_11_netdev = arg0;
    
#line 1253 
    ldv_11_ret = ldv_emg_wrapper_igbvf_open_2(ldv_11_netdev);
    
#line 1256 
    tmp_1 = ldv_undef_int();
    
#line 1256 
    if (tmp_1 != 0) {
      
#line 1258 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1262 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 1266 
      __retres = 0;
      
#line 1266 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1273 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1274 
      ldv_failed_register_netdev();
      
#line 1275 
      tmp_0 = ldv_undef_int_negative();
      
#line 1275 
      __retres = tmp_0;
      
#line 1275 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1283 
    ldv_failed_register_netdev();
    
#line 1284 
    tmp_2 = ldv_undef_int_negative();
    
#line 1284 
    __retres = tmp_2;
    
#line 1284 
    goto return_label;
  }
  return_label: 
#line 1246 
                return __retres;
}


#line 1294  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1300 
  ldv_6_netdev = arg0;
  
#line 1305 
  ldv_emg_wrapper_igbvf_close_2(ldv_6_netdev);
  
#line 1309 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1313 
  goto return_label;
  return_label: 
#line 1315 
                return;
}


#line 1320  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1326 
  ldv_3_line = (int)arg0;
  
#line 1330 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1334 
  goto return_label;
  return_label: 
#line 1336 
                return;
}


#line 1341  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1344 
  tmp = ldv_undef_int();
  
#line 1344 
  switch (tmp) {
    case 0: 
#line 1345 
    ;
    
#line 1346 
    cf_arg_15 = (struct ldv_struct_timer_scenario_15 *)ldv_xmalloc(16UL);
    
#line 1347 
    cf_arg_15->arg0 = arg0;
    
#line 1348 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_timer_scenario_15,(void *)cf_arg_15);
    
#line 1349 
    __VERIFIER_assume(ret == 0);
    
#line 1350 
    goto ldv_45008;
    default: 
#line 1352 
    ;
    
#line 1352 
    __VERIFIER_assume(0);
  }
  ldv_45008: 
#line 1353 
  ;
  
#line 1354 
  return;
}


#line 1358  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_18(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_18_resource_1;
  struct pci_device_id *ldv_18_ldv_param_1_2;
  struct pm_message ldv_18_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 1363 
  struct pci_driver *ldv_18_container = ldv_emg_alias_igbvf_driver_2;
  
#line 1364 
  int ldv_18_ret = ldv_undef_int();
  
#line 1367 
  struct ldv_struct_pci_scenario_18 *data = (struct ldv_struct_pci_scenario_18 *)arg0;
  
#line 1371 
  ldv_18_ret = ldv_undef_int();
  
#line 1374 
  if (data != (struct ldv_struct_pci_scenario_18 *)0) {
    
#line 1375 
    ldv_18_container = data->arg0;
    
#line 1376 
    ldv_free((void *)data);
  }
  else ;
  
#line 1387 
  goto ldv_main_18;
  
#line 1389 
  __retres = (void *)0;
  
#line 1389 
  goto return_label;
  ldv_main_18: 
#line 1392 
  ;
  
#line 1395 
  tmp_2 = ldv_undef_int();
  
#line 1395 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 1397 
    ldv_18_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 1402 
    ldv_pre_probe();
    
#line 1404 
    ldv_18_ret = ldv_emg_wrapper_igbvf_probe_3(ldv_18_resource_1,ldv_18_ldv_param_1_2);
    
#line 1406 
    ldv_18_ret = ldv_post_probe(ldv_18_ret);
    
#line 1410 
    ldv_free((void *)ldv_18_ldv_param_1_2);
    
#line 1413 
    tmp_1 = ldv_undef_int();
    
#line 1413 
    if (tmp_1 != 0) {
      
#line 1415 
      __VERIFIER_assume(ldv_18_ret == 0);
      
#line 1422 
      goto ldv_call_18;
    }
    else {
      
#line 1426 
      __VERIFIER_assume(ldv_18_ret != 0);
      
#line 1433 
      goto ldv_main_18;
    }
  }
  else {
    
#line 1445 
    __retres = (void *)0;
    
#line 1445 
    goto return_label;
  }
  
#line 1448 
  __retres = (void *)0;
  
#line 1448 
  goto return_label;
  ldv_call_18: 
#line 1451 
  ;
  
#line 1454 
  tmp_3 = ldv_undef_int();
  
#line 1454 
  switch (tmp_3) {
    case 1: 
#line 1455 
    ;
    
#line 1464 
    goto ldv_call_18;
    case 2: 
#line 1467 
    ;
    
#line 1470 
    ldv_18_ret = ldv_emg_wrapper_igbvf_suspend_4(ldv_18_resource_1,ldv_18_resource_0);
    
#line 1472 
    ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    
#line 1476 
    if (ldv_18_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 1478 
      ldv_18_ret = (*(ldv_18_container->suspend_late))(ldv_18_resource_1,ldv_18_resource_0);
      
#line 1480 
      ldv_18_ret = ldv_filter_err_code(ldv_18_ret);
    }
    else 
#line 1482 
         ldv_18_ret = ldv_undef_int();
    
#line 1487 
    if (ldv_18_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 1489 
      (*(ldv_18_container->resume_early))(ldv_18_resource_1); else ;
    
#line 1495 
    ldv_emg_wrapper_igbvf_resume_6(ldv_18_resource_1);
    
#line 1502 
    goto ldv_call_18;
    case 3: 
#line 1505 
    ;
    
#line 1508 
    ldv_emg_wrapper_igbvf_shutdown_2(ldv_18_resource_1);
    
#line 1513 
    ldv_emg_wrapper_igbvf_remove_5(ldv_18_resource_1);
    
#line 1520 
    goto ldv_main_18;
    default: 
#line 1523 
    ;
    
#line 1523 
    __VERIFIER_assume(0);
  }
  
#line 1526 
  __retres = (void *)0;
  return_label: 
#line 1526 
                return __retres;
}


#line 1531  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1534 
  tmp = ldv_undef_int();
  
#line 1534 
  switch (tmp) {
    case 0: 
#line 1535 
    ;
    
#line 1536 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 1537 
    __VERIFIER_assume(ret == 0);
    
#line 1538 
    goto ldv_45031;
    default: 
#line 1540 
    ;
    
#line 1540 
    __VERIFIER_assume(0);
  }
  ldv_45031: 
#line 1541 
  ;
  
#line 1542 
  return;
}


#line 1546  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1552 
  ldv_2_netdev = arg0;
  
#line 1553 
  ldv_free((void *)ldv_2_netdev);
  
#line 1557 
  goto return_label;
  return_label: 
#line 1559 
                return;
}


#line 1564  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_14(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_14_ret_val;
  int ldv_14_line;
  void *ldv_14_data;
  enum irqreturn (*ldv_14_thread)(int , void *);
  int tmp;
  
#line 1570 
  enum irqreturn (*ldv_14_callback)(int , void *) = & ldv_emg_wrapper_igbvf_intr_msix_rx_2;
  
#line 1573 
  struct ldv_struct_interrupt_scenario_14 *data = (struct ldv_struct_interrupt_scenario_14 *)arg0;
  
#line 1578 
  if (data != (struct ldv_struct_interrupt_scenario_14 *)0) {
    
#line 1579 
    ldv_14_line = data->arg0;
    
#line 1580 
    ldv_14_callback = data->arg1;
    
#line 1581 
    ldv_14_thread = data->arg2;
    
#line 1582 
    ldv_14_data = data->arg3;
    
#line 1583 
    ldv_free((void *)data);
  }
  else ;
  
#line 1589 
  ldv_switch_to_interrupt_context();
  
#line 1591 
  ldv_14_ret_val = ldv_emg_wrapper_igbvf_intr_msix_rx_2(ldv_14_line,ldv_14_data);
  
#line 1593 
  ldv_switch_to_process_context();
  
#line 1596 
  tmp = ldv_undef_int();
  
#line 1596 
  if (tmp != 0) {
    
#line 1598 
    __VERIFIER_assume(ldv_14_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1602 
    if (ldv_14_thread != (enum irqreturn (*)(int , void *))0) 
#line 1604 
                                                              (*ldv_14_thread)(ldv_14_line,ldv_14_data); else ;
  }
  else 
#line 1611 
       __VERIFIER_assume(ldv_14_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1620 
  __retres = (void *)0;
  
#line 1620 
  goto return_label;
  
#line 1622 
  __retres = (void *)0;
  return_label: 
#line 1622 
                return __retres;
}


#line 1627  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/igbvf/igbvf.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1634 
  tmp_0 = ldv_undef_int();
  
#line 1634 
  if (tmp_0 != 0) {
    
#line 1636 
    ldv_4_timer_list = arg0;
    
#line 1640 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1644 
    __retres = 0;
    
#line 1644 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1651 
    tmp = ldv_undef_int_negative();
    
#line 1651 
    __retres = tmp;
    
#line 1651 
    goto return_label;
  }
  return_label: 
#line 1634 
                return __retres;
}


