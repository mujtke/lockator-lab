/* Generated by Frama-C */

#line 6  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/fvtp/.tmp_airo.c"
struct __va_list_tag;

#line 6  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/fvtp/.tmp_airo.c"
typedef struct __va_list_tag __va_list_tag;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned char u_char;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 239 
enum hrtimer_restart;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_node;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_186 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_185 {
   struct __anonstruct_186 __anonCompField___anonunion_185_50 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_185 __anonCompField_lockref_51 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct path;

#line 51 
struct vfsmount;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_188 {
   u32 hash ;
   u32 len ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_187 {
   struct __anonstruct_188 __anonCompField___anonunion_187_52 ;
   u64 hash_len ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_187 __anonCompField_qstr_53 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_189 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_189 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_193 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_192 {
   struct __anonstruct_193 __anonCompField___anonunion_192_54 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_192 __anonCompField_radix_tree_node_55 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 428 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 435 
struct pid_namespace;

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 250  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct semaphore {
   raw_spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct block_device;

#line 31 
struct io_context;

#line 32 
struct cgroup_subsys_state;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct backing_dev_info;

#line 61 
struct bdi_writeback;

#line 62 
struct export_operations;

#line 64 
struct iovec;

#line 65 
struct kiocb;

#line 66 
struct pipe_inode_info;

#line 67 
struct poll_table_struct;

#line 68 
struct kstatfs;

#line 69 
struct swap_info_struct;

#line 70 
struct iov_iter;

#line 71 
struct vm_fault;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 263  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_198 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_198 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_199 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_199 __anonCompField_kqid_57 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526 
struct writeback_control;

#line 527  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_202 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_203 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_204 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_202 __anonCompField_inode_58 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_203 __anonCompField_inode_59 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_204 __anonCompField_inode_60 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_205 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_205 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_207 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_206 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_207 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_206 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1061 
struct files_struct;

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 3043 
struct proc_dir_entry;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_208 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_208 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_210 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_211 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_212 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_213 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_215 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_214 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_215 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_216 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_217 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_209 {
   int _pad[28U] ;
   struct __anonstruct__kill_210 _kill ;
   struct __anonstruct__timer_211 _timer ;
   struct __anonstruct__rt_212 _rt ;
   struct __anonstruct__sigchld_213 _sigchld ;
   struct __anonstruct__sigfault_214 _sigfault ;
   struct __anonstruct__sigpoll_216 _sigpoll ;
   struct __anonstruct__sigsys_217 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_209 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_220 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_221 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_223 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_222 {
   struct keyring_index_key index_key ;
   struct __anonstruct_223 __anonCompField___anonunion_222_63 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_224 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_226 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_225 {
   union __anonunion_payload_226 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_220 __anonCompField_key_61 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_221 __anonCompField_key_62 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_222 __anonCompField_key_64 ;
   union __anonunion_type_data_224 type_data ;
   union __anonunion_225 __anonCompField_key_65 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 327 
struct cgroup;

#line 328 
struct cgroup_root;

#line 329 
struct cgroup_subsys;

#line 330 
struct cgroup_taskset;

#line 372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 134 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct reclaim_state;

#line 846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1172 
struct uts_namespace;

#line 1173  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291 
struct mnt_namespace;

#line 2292 
struct ipc_namespace;

#line 2293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct proc_ns_operations;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nsproxy.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct pidmap {
   atomic_t nr_free ;
   void *page ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct fs_pin;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid_namespace.h"
struct pid_namespace {
   struct kref kref ;
   struct pidmap pidmap[128U] ;
   struct callback_head rcu ;
   int last_pid ;
   unsigned int nr_hashed ;
   struct task_struct *child_reaper ;
   struct kmem_cache *pid_cachep ;
   unsigned int level ;
   struct pid_namespace *parent ;
   struct vfsmount *proc_mnt ;
   struct dentry *proc_self ;
   struct dentry *proc_thread_self ;
   struct fs_pin *bacct ;
   struct user_namespace *user_ns ;
   struct work_struct proc_work ;
   kgid_t pid_gid ;
   int hide_pid ;
   int reboot ;
   struct ns_common ns ;
};

#line 603  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_253 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_253 __anonCompField_iov_iter_76 ;
   unsigned long nr_segs ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct crypto_ablkcipher;

#line 132 
struct crypto_async_request;

#line 133 
struct crypto_aead;

#line 134 
struct crypto_blkcipher;

#line 135 
struct crypto_hash;

#line 136 
struct crypto_tfm;

#line 137 
struct crypto_type;

#line 138 
struct aead_request;

#line 139 
struct aead_givcrypt_request;

#line 140 
struct skcipher_givcrypt_request;

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_async_request {
   struct list_head list ;
   void (*complete)(struct crypto_async_request *, int ) ;
   void *data ;
   struct crypto_tfm *tfm ;
   u32 flags ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct ablkcipher_request {
   struct crypto_async_request base ;
   unsigned int nbytes ;
   void *info ;
   struct scatterlist *src ;
   struct scatterlist *dst ;
   void *__ctx[] ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct blkcipher_desc {
   struct crypto_blkcipher *tfm ;
   void *info ;
   u32 flags ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct hash_desc {
   struct crypto_hash *tfm ;
   u32 flags ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct ablkcipher_alg {
   int (*setkey)(struct crypto_ablkcipher *, u8 const *, unsigned int ) ;
   int (*encrypt)(struct ablkcipher_request *) ;
   int (*decrypt)(struct ablkcipher_request *) ;
   int (*givencrypt)(struct skcipher_givcrypt_request *) ;
   int (*givdecrypt)(struct skcipher_givcrypt_request *) ;
   char const *geniv ;
   unsigned int min_keysize ;
   unsigned int max_keysize ;
   unsigned int ivsize ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct old_aead_alg {
   int (*setkey)(struct crypto_aead *, u8 const *, unsigned int ) ;
   int (*setauthsize)(struct crypto_aead *, unsigned int ) ;
   int (*encrypt)(struct aead_request *) ;
   int (*decrypt)(struct aead_request *) ;
   int (*givencrypt)(struct aead_givcrypt_request *) ;
   int (*givdecrypt)(struct aead_givcrypt_request *) ;
   char const *geniv ;
   unsigned int ivsize ;
   unsigned int maxauthsize ;
};

#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct blkcipher_alg {
   int (*setkey)(struct crypto_tfm *, u8 const *, unsigned int ) ;
   int (*encrypt)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int ) ;
   int (*decrypt)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int ) ;
   char const *geniv ;
   unsigned int min_keysize ;
   unsigned int max_keysize ;
   unsigned int ivsize ;
};

#line 346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct cipher_alg {
   unsigned int cia_min_keysize ;
   unsigned int cia_max_keysize ;
   int (*cia_setkey)(struct crypto_tfm *, u8 const *, unsigned int ) ;
   void (*cia_encrypt)(struct crypto_tfm *, u8 *, u8 const *) ;
   void (*cia_decrypt)(struct crypto_tfm *, u8 *, u8 const *) ;
};

#line 402  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct compress_alg {
   int (*coa_compress)(struct crypto_tfm *, u8 const *, unsigned int , u8 *, unsigned int *) ;
   int (*coa_decompress)(struct crypto_tfm *, u8 const *, unsigned int , u8 *, unsigned int *) ;
};

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
union __anonunion_cra_u_254 {
   struct ablkcipher_alg ablkcipher ;
   struct old_aead_alg aead ;
   struct blkcipher_alg blkcipher ;
   struct cipher_alg cipher ;
   struct compress_alg compress ;
};

#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_alg {
   struct list_head cra_list ;
   struct list_head cra_users ;
   u32 cra_flags ;
   unsigned int cra_blocksize ;
   unsigned int cra_ctxsize ;
   unsigned int cra_alignmask ;
   int cra_priority ;
   atomic_t cra_refcnt ;
   char cra_name[64U] ;
   char cra_driver_name[64U] ;
   struct crypto_type const *cra_type ;
   union __anonunion_cra_u_254 cra_u ;
   int (*cra_init)(struct crypto_tfm *) ;
   void (*cra_exit)(struct crypto_tfm *) ;
   void (*cra_destroy)(struct crypto_alg *) ;
   struct module *cra_module ;
};

#line 536  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct ablkcipher_tfm {
   int (*setkey)(struct crypto_ablkcipher *, u8 const *, unsigned int ) ;
   int (*encrypt)(struct ablkcipher_request *) ;
   int (*decrypt)(struct ablkcipher_request *) ;
   int (*givencrypt)(struct skcipher_givcrypt_request *) ;
   int (*givdecrypt)(struct skcipher_givcrypt_request *) ;
   struct crypto_ablkcipher *base ;
   unsigned int ivsize ;
   unsigned int reqsize ;
};

#line 556  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct blkcipher_tfm {
   void *iv ;
   int (*setkey)(struct crypto_tfm *, u8 const *, unsigned int ) ;
   int (*encrypt)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int ) ;
   int (*decrypt)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int ) ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct cipher_tfm {
   int (*cit_setkey)(struct crypto_tfm *, u8 const *, unsigned int ) ;
   void (*cit_encrypt_one)(struct crypto_tfm *, u8 *, u8 const *) ;
   void (*cit_decrypt_one)(struct crypto_tfm *, u8 *, u8 const *) ;
};

#line 573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct hash_tfm {
   int (*init)(struct hash_desc *) ;
   int (*update)(struct hash_desc *, struct scatterlist *, unsigned int ) ;
   int (*final)(struct hash_desc *, u8 *) ;
   int (*digest)(struct hash_desc *, struct scatterlist *, unsigned int , u8 *) ;
   int (*setkey)(struct crypto_hash *, u8 const *, unsigned int ) ;
   unsigned int digestsize ;
};

#line 585  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct compress_tfm {
   int (*cot_compress)(struct crypto_tfm *, u8 const *, unsigned int , u8 *, unsigned int *) ;
   int (*cot_decompress)(struct crypto_tfm *, u8 const *, unsigned int , u8 *, unsigned int *) ;
};

#line 592  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
union __anonunion_crt_u_255 {
   struct ablkcipher_tfm ablkcipher ;
   struct blkcipher_tfm blkcipher ;
   struct cipher_tfm cipher ;
   struct hash_tfm hash ;
   struct compress_tfm compress ;
};

#line 592  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_tfm {
   u32 crt_flags ;
   union __anonunion_crt_u_255 crt_u ;
   void (*exit)(struct crypto_tfm *) ;
   struct crypto_alg *__crt_alg ;
   void *__crt_ctx[] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_ablkcipher {
   struct crypto_tfm base ;
};

#line 623  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_blkcipher {
   struct crypto_tfm base ;
};

#line 627  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_cipher {
   struct crypto_tfm base ;
};

#line 635  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_hash {
   struct crypto_tfm base ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203 
struct of_device_id;

#line 203 
struct acpi_device_id;

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_257 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_257 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_258 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_258 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_259 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_259 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_260 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_260 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_261 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_261 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_262 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_262 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_263 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_263 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_264 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_264 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_265 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_266 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_265 ifr_ifrn ;
   union __anonunion_ifr_ifru_266 ifr_ifru ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_26149 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_26149 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_282 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_282 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27014 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27014 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_287 __anonCompField_nf_bridge_info_80 ;
   union __anonunion_288 __anonCompField_nf_bridge_info_81 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_291 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   u64 v64 ;
   struct __anonstruct_291 __anonCompField___anonunion_290_82 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_290 __anonCompField_skb_mstamp_83 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_294 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_293 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_294 __anonCompField___anonstruct_293_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   struct __anonstruct_293 __anonCompField___anonunion_292_85 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_296 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   __wsum csum ;
   struct __anonstruct_296 __anonCompField___anonunion_295_87 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_298 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_299 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_292 __anonCompField_sk_buff_86 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_295 __anonCompField_sk_buff_88 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_297 __anonCompField_sk_buff_89 ;
   __u32 secmark ;
   union __anonunion_298 __anonCompField_sk_buff_90 ;
   union __anonunion_299 __anonCompField_sk_buff_91 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net_generic;

#line 17 
struct netns_ipvs;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_308 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_308 possible_net_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 659  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_28964 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_28964 phy_interface_t;

#line 126 
enum ldv_29017 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29017 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30710 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30711 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_321 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_322 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_323 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_321 adj_list ;
   struct __anonstruct_all_adj_list_322 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30710 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30711 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_323 __anonCompField_net_device_94 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_332 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_332 __anonCompField_pci_dev_95 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 470  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugfs.h"
enum nl80211_iftype {
    NL80211_IFTYPE_UNSPECIFIED = 0,
    NL80211_IFTYPE_ADHOC = 1,
    NL80211_IFTYPE_STATION = 2,
    NL80211_IFTYPE_AP = 3,
    NL80211_IFTYPE_AP_VLAN = 4,
    NL80211_IFTYPE_WDS = 5,
    NL80211_IFTYPE_MONITOR = 6,
    NL80211_IFTYPE_MESH_POINT = 7,
    NL80211_IFTYPE_P2P_CLIENT = 8,
    NL80211_IFTYPE_P2P_GO = 9,
    NL80211_IFTYPE_P2P_DEVICE = 10,
    NL80211_IFTYPE_OCB = 11,
    NUM_NL80211_IFTYPES = 12,
    NL80211_IFTYPE_MAX = 11
};

#line 2431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
enum nl80211_reg_initiator {
    NL80211_REGDOM_SET_BY_CORE = 0,
    NL80211_REGDOM_SET_BY_USER = 1,
    NL80211_REGDOM_SET_BY_DRIVER = 2,
    NL80211_REGDOM_SET_BY_COUNTRY_IE = 3
};

#line 2484 
enum nl80211_dfs_regions {
    NL80211_DFS_UNSET = 0,
    NL80211_DFS_FCC = 1,
    NL80211_DFS_ETSI = 2,
    NL80211_DFS_JP = 3
};

#line 2491 
enum nl80211_user_reg_hint_type {
    NL80211_USER_REG_HINT_USER = 0,
    NL80211_USER_REG_HINT_CELL_BASE = 1,
    NL80211_USER_REG_HINT_INDOOR = 2
};

#line 2607 
enum nl80211_chan_width {
    NL80211_CHAN_WIDTH_20_NOHT = 0,
    NL80211_CHAN_WIDTH_20 = 1,
    NL80211_CHAN_WIDTH_40 = 2,
    NL80211_CHAN_WIDTH_80 = 3,
    NL80211_CHAN_WIDTH_80P80 = 4,
    NL80211_CHAN_WIDTH_160 = 5,
    NL80211_CHAN_WIDTH_5 = 6,
    NL80211_CHAN_WIDTH_10 = 7
};

#line 2618 
enum nl80211_bss_scan_width {
    NL80211_BSS_CHAN_WIDTH_20 = 0,
    NL80211_BSS_CHAN_WIDTH_10 = 1,
    NL80211_BSS_CHAN_WIDTH_5 = 2
};

#line 2650 
enum nl80211_auth_type {
    NL80211_AUTHTYPE_OPEN_SYSTEM = 0,
    NL80211_AUTHTYPE_SHARED_KEY = 1,
    NL80211_AUTHTYPE_FT = 2,
    NL80211_AUTHTYPE_NETWORK_EAP = 3,
    NL80211_AUTHTYPE_SAE = 4,
    __NL80211_AUTHTYPE_NUM = 5,
    NL80211_AUTHTYPE_MAX = 4,
    NL80211_AUTHTYPE_AUTOMATIC = 5
};

#line 2668 
enum nl80211_mfp {
    NL80211_MFP_NO = 0,
    NL80211_MFP_REQUIRED = 1
};

#line 3734  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_seq {
   __u32 start ;
   __u32 offset ;
   __u32 len ;
};

#line 3871  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token {
   __u32 offset ;
   __u32 len ;
   __u8 token_stream[] ;
};

#line 3883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_wowlan_tcp_data_token_feature {
   __u32 min_len ;
   __u32 max_len ;
   __u32 bufsize ;
};

#line 4131 
enum nl80211_dfs_state {
    NL80211_DFS_USABLE = 0,
    NL80211_DFS_UNAVAILABLE = 1,
    NL80211_DFS_AVAILABLE = 2
};

#line 4153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/nl80211.h"
struct nl80211_vendor_cmd_info {
   __u32 vendor_id ;
   __u32 subcmd ;
};

#line 1204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_mcs_info {
   u8 rx_mask[10U] ;
   __le16 rx_highest ;
   u8 tx_params ;
   u8 reserved[3U] ;
};

#line 1229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_ht_cap {
   __le16 cap_info ;
   u8 ampdu_params_info ;
   struct ieee80211_mcs_info mcs ;
   __le16 extended_ht_cap_info ;
   __le32 tx_BF_cap_info ;
   u8 antenna_selection_info ;
};

#line 1354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_mcs_info {
   __le16 rx_mcs_map ;
   __le16 rx_highest ;
   __le16 tx_mcs_map ;
   __le16 tx_highest ;
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct ieee80211_vht_cap {
   __le32 vht_cap_info ;
   struct ieee80211_vht_mcs_info supp_mcs ;
};

#line 2547 
enum environment_cap {
    ENVIRON_ANY = 0,
    ENVIRON_INDOOR = 1,
    ENVIRON_OUTDOOR = 2
};

#line 2553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ieee80211.h"
struct regulatory_request {
   struct callback_head callback_head ;
   int wiphy_idx ;
   enum nl80211_reg_initiator initiator ;
   enum nl80211_user_reg_hint_type user_reg_hint_type ;
   char alpha2[2U] ;
   enum nl80211_dfs_regions dfs_region ;
   bool intersect ;
   bool processed ;
   enum environment_cap country_ie_env ;
   struct list_head list ;
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_freq_range {
   u32 start_freq_khz ;
   u32 end_freq_khz ;
   u32 max_bandwidth_khz ;
};

#line 185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_power_rule {
   u32 max_antenna_gain ;
   u32 max_eirp ;
};

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_reg_rule {
   struct ieee80211_freq_range freq_range ;
   struct ieee80211_power_rule power_rule ;
   u32 flags ;
   u32 dfs_cac_ms ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_regdomain {
   struct callback_head callback_head ;
   u32 n_reg_rules ;
   char alpha2[3U] ;
   enum nl80211_dfs_regions dfs_region ;
   struct ieee80211_reg_rule reg_rules[] ;
};

#line 205 
struct wiphy;

#line 206 
enum ieee80211_band {
    IEEE80211_BAND_2GHZ = 0,
    IEEE80211_BAND_5GHZ = 1,
    IEEE80211_BAND_60GHZ = 2,
    IEEE80211_NUM_BANDS = 3
};

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/regulatory.h"
struct ieee80211_channel {
   enum ieee80211_band band ;
   u16 center_freq ;
   u16 hw_value ;
   u32 flags ;
   int max_antenna_gain ;
   int max_power ;
   int max_reg_power ;
   bool beacon_found ;
   u32 orig_flags ;
   int orig_mag ;
   int orig_mpwr ;
   enum nl80211_dfs_state dfs_state ;
   unsigned long dfs_state_entered ;
   unsigned int dfs_cac_ms ;
};

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_rate {
   u32 flags ;
   u16 bitrate ;
   u16 hw_value ;
   u16 hw_value_short ;
};

#line 269  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_ht_cap {
   u16 cap ;
   bool ht_supported ;
   u8 ampdu_factor ;
   u8 ampdu_density ;
   struct ieee80211_mcs_info mcs ;
};

#line 289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_sta_vht_cap {
   bool vht_supported ;
   u32 cap ;
   struct ieee80211_vht_mcs_info vht_mcs ;
};

#line 305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_supported_band {
   struct ieee80211_channel *channels ;
   struct ieee80211_rate *bitrates ;
   enum ieee80211_band band ;
   int n_channels ;
   int n_bitrates ;
   struct ieee80211_sta_ht_cap ht_cap ;
   struct ieee80211_sta_vht_cap vht_cap ;
};

#line 387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_chan_def {
   struct ieee80211_channel *chan ;
   enum nl80211_chan_width width ;
   u32 center_freq1 ;
   u32 center_freq2 ;
};

#line 608  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_crypto_settings {
   u32 wpa_versions ;
   u32 cipher_group ;
   int n_ciphers_pairwise ;
   u32 ciphers_pairwise[5U] ;
   int n_akm_suites ;
   u32 akm_suites[2U] ;
   bool control_port ;
   __be16 control_port_ethertype ;
   bool control_port_no_encrypt ;
};

#line 671  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct mac_address {
   u8 addr[6U] ;
};

#line 1395  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ssid {
   u8 ssid[32U] ;
   u8 ssid_len ;
};

#line 1491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_match_set {
   struct cfg80211_ssid ssid ;
   s32 rssi_thold ;
};

#line 1499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_sched_scan_request {
   struct cfg80211_ssid *ssids ;
   int n_ssids ;
   u32 n_channels ;
   enum nl80211_bss_scan_width scan_width ;
   u32 interval ;
   u8 const *ie ;
   size_t ie_len ;
   u32 flags ;
   struct cfg80211_match_set *match_sets ;
   int n_match_sets ;
   s32 min_rssi_thold ;
   u32 delay ;
   u8 mac_addr[6U] ;
   u8 mac_addr_mask[6U] ;
   struct wiphy *wiphy ;
   struct net_device *dev ;
   unsigned long scan_start ;
   struct callback_head callback_head ;
   u32 owner_nlportid ;
   struct ieee80211_channel *channels[0U] ;
};

#line 1561 
enum cfg80211_signal_type {
    CFG80211_SIGNAL_TYPE_NONE = 0,
    CFG80211_SIGNAL_TYPE_MBM = 1,
    CFG80211_SIGNAL_TYPE_UNSPEC = 2
};

#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_ibss_params {
   u8 const *ssid ;
   u8 const *bssid ;
   struct cfg80211_chan_def chandef ;
   u8 const *ie ;
   u8 ssid_len ;
   u8 ie_len ;
   u16 beacon_interval ;
   u32 basic_rates ;
   bool channel_fixed ;
   bool privacy ;
   bool control_port ;
   bool userspace_handles_dfs ;
   int mcast_rate[3U] ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
};

#line 1814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_connect_params {
   struct ieee80211_channel *channel ;
   struct ieee80211_channel *channel_hint ;
   u8 const *bssid ;
   u8 const *bssid_hint ;
   u8 const *ssid ;
   size_t ssid_len ;
   enum nl80211_auth_type auth_type ;
   u8 const *ie ;
   size_t ie_len ;
   bool privacy ;
   enum nl80211_mfp mfp ;
   struct cfg80211_crypto_settings crypto ;
   u8 const *key ;
   u8 key_len ;
   u8 key_idx ;
   u32 flags ;
   int bg_scan_period ;
   struct ieee80211_ht_cap ht_capa ;
   struct ieee80211_ht_cap ht_capa_mask ;
   struct ieee80211_vht_cap vht_capa ;
   struct ieee80211_vht_cap vht_capa_mask ;
};

#line 1916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_pkt_pattern {
   u8 const *mask ;
   u8 const *pattern ;
   int pattern_len ;
   int pkt_offset ;
};

#line 1933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan_tcp {
   struct socket *sock ;
   __be32 src ;
   __be32 dst ;
   u16 src_port ;
   u16 dst_port ;
   u8 dst_mac[6U] ;
   int payload_len ;
   u8 const *payload ;
   struct nl80211_wowlan_tcp_data_seq payload_seq ;
   u32 data_interval ;
   u32 wake_len ;
   u8 const *wake_data ;
   u8 const *wake_mask ;
   u32 tokens_size ;
   struct nl80211_wowlan_tcp_data_token payload_tok ;
};

#line 1968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct cfg80211_wowlan {
   bool any ;
   bool disconnect ;
   bool magic_pkt ;
   bool gtk_rekey_failure ;
   bool eap_identity_req ;
   bool four_way_handshake ;
   bool rfkill_release ;
   struct cfg80211_pkt_pattern *patterns ;
   struct cfg80211_wowlan_tcp *tcp ;
   int n_patterns ;
   struct cfg80211_sched_scan_request *nd_config ;
};

#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_limit {
   u16 max ;
   u16 types ;
};

#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_iface_combination {
   struct ieee80211_iface_limit const *limits ;
   u32 num_different_channels ;
   u16 max_interfaces ;
   u8 n_limits ;
   bool beacon_int_infra_match ;
   u8 radar_detect_widths ;
   u8 radar_detect_regions ;
};

#line 2869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct ieee80211_txrx_stypes {
   u16 tx ;
   u16 rx ;
};

#line 2885  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_tcp_support {
   struct nl80211_wowlan_tcp_data_token_feature const *tok ;
   u32 data_payload_max ;
   u32 data_interval_max ;
   u32 wake_payload_max ;
   bool seq ;
};

#line 2910  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_wowlan_support {
   u32 flags ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
   int max_nd_match_sets ;
   struct wiphy_wowlan_tcp_support const *tcp ;
};

#line 2935  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_coalesce_support {
   int n_rules ;
   int max_delay ;
   int n_patterns ;
   int pattern_max_len ;
   int pattern_min_len ;
   int max_pkt_offset ;
};

#line 2960  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy_vendor_command {
   struct nl80211_vendor_cmd_info info ;
   u32 flags ;
   int (*doit)(struct wiphy *, struct wireless_dev *, void const *, int ) ;
};

#line 2981  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wiphy {
   u8 perm_addr[6U] ;
   u8 addr_mask[6U] ;
   struct mac_address *addresses ;
   struct ieee80211_txrx_stypes const *mgmt_stypes ;
   struct ieee80211_iface_combination const *iface_combinations ;
   int n_iface_combinations ;
   u16 software_iftypes ;
   u16 n_addresses ;
   u16 interface_modes ;
   u16 max_acl_mac_addrs ;
   u32 flags ;
   u32 regulatory_flags ;
   u32 features ;
   u8 ext_features[1U] ;
   u32 ap_sme_capa ;
   enum cfg80211_signal_type signal_type ;
   int bss_priv_size ;
   u8 max_scan_ssids ;
   u8 max_sched_scan_ssids ;
   u8 max_match_sets ;
   u16 max_scan_ie_len ;
   u16 max_sched_scan_ie_len ;
   int n_cipher_suites ;
   u32 const *cipher_suites ;
   u8 retry_short ;
   u8 retry_long ;
   u32 frag_threshold ;
   u32 rts_threshold ;
   u8 coverage_class ;
   char fw_version[32U] ;
   u32 hw_version ;
   struct wiphy_wowlan_support const *wowlan ;
   struct cfg80211_wowlan *wowlan_config ;
   u16 max_remain_on_channel_duration ;
   u8 max_num_pmkids ;
   u32 available_antennas_tx ;
   u32 available_antennas_rx ;
   u32 probe_resp_offload ;
   u8 const *extended_capabilities ;
   u8 const *extended_capabilities_mask ;
   u8 extended_capabilities_len ;
   void const *privid ;
   struct ieee80211_supported_band *bands[3U] ;
   void (*reg_notifier)(struct wiphy *, struct regulatory_request *) ;
   struct ieee80211_regdomain const *regd ;
   struct device dev ;
   bool registered ;
   struct dentry *debugfsdir ;
   struct ieee80211_ht_cap const *ht_capa_mod_mask ;
   struct ieee80211_vht_cap const *vht_capa_mod_mask ;
   possible_net_t _net ;
   struct iw_handler_def const *wext ;
   struct wiphy_coalesce_support const *coalesce ;
   struct wiphy_vendor_command const *vendor_commands ;
   struct nl80211_vendor_cmd_info const *vendor_events ;
   int n_vendor_commands ;
   int n_vendor_events ;
   u16 max_ap_assoc_sta ;
   u8 max_num_csa_counters ;
   u8 max_adj_channel_rssi_comp ;
   char priv[0U] ;
};

#line 3369 
struct cfg80211_conn;

#line 3370 
struct cfg80211_internal_bss;

#line 3371 
struct cfg80211_cached_keys;

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct __anonstruct_wext_373 {
   struct cfg80211_ibss_params ibss ;
   struct cfg80211_connect_params connect ;
   struct cfg80211_cached_keys *keys ;
   u8 const *ie ;
   size_t ie_len ;
   u8 bssid[6U] ;
   u8 prev_bssid[6U] ;
   u8 ssid[32U] ;
   s8 default_key ;
   s8 default_mgmt_key ;
   bool prev_bssid_valid ;
};

#line 3372  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct wireless_dev {
   struct wiphy *wiphy ;
   enum nl80211_iftype iftype ;
   struct list_head list ;
   struct net_device *netdev ;
   u32 identifier ;
   struct list_head mgmt_registrations ;
   spinlock_t mgmt_registrations_lock ;
   struct mutex mtx ;
   bool use_4addr ;
   bool p2p_started ;
   u8 address[6U] ;
   u8 ssid[32U] ;
   u8 ssid_len ;
   u8 mesh_id_len ;
   u8 mesh_id_up_len ;
   struct cfg80211_conn *conn ;
   struct cfg80211_cached_keys *connect_keys ;
   struct list_head event_list ;
   spinlock_t event_lock ;
   struct cfg80211_internal_bss *current_bss ;
   struct cfg80211_chan_def preset_chandef ;
   struct cfg80211_chan_def chandef ;
   bool ibss_fixed ;
   bool ibss_dfs_possible ;
   bool ps ;
   int ps_timeout ;
   int beacon_interval ;
   u32 ap_unexpected_nlportid ;
   bool cac_started ;
   unsigned long cac_start_time ;
   unsigned int cac_time_ms ;
   u32 owner_nlportid ;
   struct __anonstruct_wext_373 wext ;
};

#line 5232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
struct iw_param {
   __s32 value ;
   __u8 fixed ;
   __u8 disabled ;
   __u16 flags ;
};

#line 680  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_point {
   void *pointer ;
   __u16 length ;
   __u16 flags ;
};

#line 691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_freq {
   __s32 m ;
   __s16 e ;
   __u8 i ;
   __u8 flags ;
};

#line 708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_quality {
   __u8 qual ;
   __u8 level ;
   __u8 noise ;
   __u8 updated ;
};

#line 720  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_discarded {
   __u32 nwid ;
   __u32 code ;
   __u32 fragment ;
   __u32 retries ;
   __u32 misc ;
};

#line 736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_missed {
   __u32 beacon ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_encode_ext {
   __u32 ext_flags ;
   __u8 tx_seq[8U] ;
   __u8 rx_seq[8U] ;
   struct sockaddr addr ;
   __u16 alg ;
   __u16 key_len ;
   __u8 key[0U] ;
};

#line 882  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_statistics {
   __u16 status ;
   struct iw_quality qual ;
   struct iw_discarded discard ;
   struct iw_missed miss ;
};

#line 897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
union iwreq_data {
   char name[16U] ;
   struct iw_point essid ;
   struct iw_param nwid ;
   struct iw_freq freq ;
   struct iw_param sens ;
   struct iw_param bitrate ;
   struct iw_param txpower ;
   struct iw_param rts ;
   struct iw_param frag ;
   __u32 mode ;
   struct iw_param retry ;
   struct iw_point encoding ;
   struct iw_param power ;
   struct iw_quality qual ;
   struct sockaddr ap_addr ;
   struct sockaddr addr ;
   struct iw_param param ;
   struct iw_point data ;
};

#line 957  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_range {
   __u32 throughput ;
   __u32 min_nwid ;
   __u32 max_nwid ;
   __u16 old_num_channels ;
   __u8 old_num_frequency ;
   __u8 scan_capa ;
   __u32 event_capa[6U] ;
   __s32 sensitivity ;
   struct iw_quality max_qual ;
   struct iw_quality avg_qual ;
   __u8 num_bitrates ;
   __s32 bitrate[32U] ;
   __s32 min_rts ;
   __s32 max_rts ;
   __s32 min_frag ;
   __s32 max_frag ;
   __s32 min_pmp ;
   __s32 max_pmp ;
   __s32 min_pmt ;
   __s32 max_pmt ;
   __u16 pmp_flags ;
   __u16 pmt_flags ;
   __u16 pm_capa ;
   __u16 encoding_size[8U] ;
   __u8 num_encoding_sizes ;
   __u8 max_encoding_tokens ;
   __u8 encoding_login_index ;
   __u16 txpower_capa ;
   __u8 num_txpower ;
   __s32 txpower[8U] ;
   __u8 we_version_compiled ;
   __u8 we_version_source ;
   __u16 retry_capa ;
   __u16 retry_flags ;
   __u16 r_time_flags ;
   __s32 min_retry ;
   __s32 max_retry ;
   __s32 min_r_time ;
   __s32 max_r_time ;
   __u16 num_channels ;
   __u8 num_frequency ;
   struct iw_freq freq[32U] ;
   __u32 enc_capa ;
};

#line 1068  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_priv_args {
   __u32 cmd ;
   __u16 set_args ;
   __u16 get_args ;
   char name[16U] ;
};

#line 1080  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/wireless.h"
struct iw_event {
   __u16 len ;
   __u16 cmd ;
   union iwreq_data u ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wireless.h"
struct iw_request_info {
   __u16 cmd ;
   __u16 flags ;
};

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
typedef int (*iw_handler)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);

#line 315  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_handler_def {
   iw_handler (* const *standard)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   __u16 num_standard ;
   __u16 num_private ;
   __u16 num_private_args ;
   iw_handler (* const *private)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *) ;
   struct iw_priv_args const *private_args ;
   struct iw_statistics *(*get_wireless_stats)(struct net_device *) ;
};

#line 381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_spy_data {
   int spy_number ;
   u_char spy_address[8U][6U] ;
   struct iw_quality spy_stat[8U] ;
   struct iw_quality spy_thr_low ;
   struct iw_quality spy_thr_high ;
   u_char spy_thr_under[8U] ;
};

#line 405 
struct libipw_device;

#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
struct iw_public_data {
   struct iw_spy_data *spy_data ;
   struct libipw_device *libipw ;
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_Cmd_375 {
   u16 cmd ;
   u16 parm0 ;
   u16 parm1 ;
   u16 parm2 ;
};

#line 484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_Cmd_375 Cmd;

#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_Resp_376 {
   u16 status ;
   u16 rsp0 ;
   u16 rsp1 ;
   u16 rsp2 ;
};

#line 491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_Resp_376 Resp;

#line 501 
struct WepKeyRid;

#line 501  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct WepKeyRid WepKeyRid;

#line 502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct WepKeyRid {
   __le16 len ;
   __le16 kindex ;
   u8 mac[6U] ;
   __le16 klen ;
   u8 key[16U] ;
};

#line 511 
struct Ssid;

#line 511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct Ssid Ssid;

#line 512  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct Ssid {
   __le16 len ;
   u8 ssid[32U] ;
};

#line 517 
struct SsidRid;

#line 517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct SsidRid SsidRid;

#line 518  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct SsidRid {
   __le16 len ;
   Ssid ssids[3U] ;
};

#line 532 
struct ConfigRid;

#line 532  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct ConfigRid ConfigRid;

#line 533  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct ConfigRid {
   __le16 len ;
   __le16 opmode ;
   __le16 rmode ;
   __le16 fragThresh ;
   __le16 rtsThres ;
   u8 macAddr[6U] ;
   u8 rates[8U] ;
   __le16 shortRetryLimit ;
   __le16 longRetryLimit ;
   __le16 txLifetime ;
   __le16 rxLifetime ;
   __le16 stationary ;
   __le16 ordering ;
   __le16 u16deviceType ;
   __le16 cfpRate ;
   __le16 cfpDuration ;
   __le16 _reserved1[3U] ;
   __le16 scanMode ;
   __le16 probeDelay ;
   __le16 probeEnergyTimeout ;
   __le16 probeResponseTimeout ;
   __le16 beaconListenTimeout ;
   __le16 joinNetTimeout ;
   __le16 authTimeout ;
   __le16 authType ;
   __le16 associationTimeout ;
   __le16 specifiedApTimeout ;
   __le16 offlineScanInterval ;
   __le16 offlineScanDuration ;
   __le16 linkLossDelay ;
   __le16 maxBeaconLostTime ;
   __le16 refreshInterval ;
   __le16 _reserved1a[1U] ;
   __le16 powerSaveMode ;
   __le16 sleepForDtims ;
   __le16 listenInterval ;
   __le16 fastListenInterval ;
   __le16 listenDecay ;
   __le16 fastListenDelay ;
   __le16 _reserved2[2U] ;
   __le16 beaconPeriod ;
   __le16 atimDuration ;
   __le16 hopPeriod ;
   __le16 channelSet ;
   __le16 channel ;
   __le16 dtimPeriod ;
   __le16 bridgeDistance ;
   __le16 radioID ;
   __le16 radioType ;
   u8 rxDiversity ;
   u8 txDiversity ;
   __le16 txPower ;
   __le16 rssiThreshold ;
   __le16 modulation ;
   __le16 preamble ;
   __le16 homeProduct ;
   __le16 radioSpecific ;
   u8 nodeName[16U] ;
   __le16 arlThreshold ;
   __le16 arlDecay ;
   __le16 arlDelay ;
   __le16 _reserved4[1U] ;
   u8 magicAction ;
   u8 magicControl ;
   __le16 autoWake ;
};

#line 656 
struct StatusRid;

#line 656  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct StatusRid StatusRid;

#line 657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct StatusRid {
   __le16 len ;
   u8 mac[6U] ;
   __le16 mode ;
   __le16 errorCode ;
   __le16 sigQuality ;
   __le16 SSIDlen ;
   char SSID[32U] ;
   char apName[16U] ;
   u8 bssid[4U][6U] ;
   __le16 beaconPeriod ;
   __le16 dimPeriod ;
   __le16 atimDuration ;
   __le16 hopPeriod ;
   __le16 channelSet ;
   __le16 channel ;
   __le16 hopsToBackbone ;
   __le16 apTotalLoad ;
   __le16 generatedLoad ;
   __le16 accumulatedArl ;
   __le16 signalQuality ;
   __le16 currentXmitRate ;
   __le16 apDevExtensions ;
   __le16 normalizedSignalStrength ;
   __le16 shortPreamble ;
   u8 apIP[4U] ;
   u8 noisePercent ;
   u8 noisedBm ;
   u8 noiseAvePercent ;
   u8 noiseAvedBm ;
   u8 noiseMaxPercent ;
   u8 noiseMaxdBm ;
   __le16 load ;
   u8 carrier[4U] ;
   __le16 assocStatus ;
};

#line 715 
struct StatsRid;

#line 715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct StatsRid StatsRid;

#line 716  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct StatsRid {
   __le16 len ;
   __le16 spacer ;
   __le32 vals[100U] ;
};

#line 722 
struct APListRid;

#line 722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct APListRid APListRid;

#line 723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct APListRid {
   __le16 len ;
   u8 ap[4U][6U] ;
};

#line 728 
struct CapabilityRid;

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct CapabilityRid CapabilityRid;

#line 729  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct CapabilityRid {
   __le16 len ;
   char oui[3U] ;
   char zero ;
   __le16 prodNum ;
   char manName[32U] ;
   char prodName[16U] ;
   char prodVer[8U] ;
   char factoryAddr[6U] ;
   char aironetAddr[6U] ;
   __le16 radioType ;
   __le16 country ;
   char callid[6U] ;
   char supportedRates[8U] ;
   char rxDiversity ;
   char txDiversity ;
   __le16 txPowerLevels[8U] ;
   __le16 hardVer ;
   __le16 hardCap ;
   __le16 tempRange ;
   __le16 softVer ;
   __le16 softSubVer ;
   __le16 interfaceVer ;
   __le16 softCap ;
   __le16 bootBlockVer ;
   __le16 requiredHard ;
   __le16 extSoftCap ;
};

#line 759 
struct BSSListRidExtra;

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct BSSListRidExtra BSSListRidExtra;

#line 760  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct BSSListRidExtra {
   __le16 unknown[4U] ;
   u8 fixed[12U] ;
   u8 iep[624U] ;
};

#line 766 
struct BSSListRid;

#line 766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct BSSListRid BSSListRid;

#line 767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_fh_377 {
   __le16 dwell ;
   u8 hopSet ;
   u8 hopPattern ;
   u8 hopIndex ;
   u8 fill ;
};

#line 767  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct BSSListRid {
   __le16 len ;
   __le16 index ;
   __le16 radioType ;
   u8 bssid[6U] ;
   u8 zero ;
   u8 ssidLen ;
   u8 ssid[32U] ;
   __le16 dBm ;
   __le16 cap ;
   __le16 beaconInterval ;
   u8 rates[8U] ;
   struct __anonstruct_fh_377 fh ;
   __le16 dsChannel ;
   __le16 atimWindow ;
   BSSListRidExtra extra ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_BSSListElement_378 {
   BSSListRid bss ;
   struct list_head list ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_BSSListElement_378 BSSListElement;

#line 805 
struct tdsRssiEntry;

#line 805  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct tdsRssiEntry tdsRssiEntry;

#line 806  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct tdsRssiEntry {
   u8 rssipct ;
   u8 rssidBm ;
};

#line 811 
struct tdsRssiRid;

#line 811  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct tdsRssiRid tdsRssiRid;

#line 812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct tdsRssiRid {
   u16 len ;
   tdsRssiEntry x[256U] ;
};

#line 817 
struct MICRid;

#line 817  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct MICRid MICRid;

#line 818  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct MICRid {
   __le16 len ;
   __le16 state ;
   __le16 multicastValid ;
   u8 multicast[16U] ;
   __le16 unicastValid ;
   u8 unicast[16U] ;
};

#line 827 
struct MICBuffer;

#line 827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct MICBuffer MICBuffer;

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_llc_380 {
   u8 dsap ;
   u8 ssap ;
   u8 control ;
   u8 orgcode[3U] ;
   u8 fieldtype[2U] ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
union __anonunion_u_379 {
   u8 snap[8U] ;
   struct __anonstruct_llc_380 llc ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct MICBuffer {
   __be16 typelen ;
   union __anonunion_u_379 u ;
   __be32 mic ;
   __be32 seq ;
};

#line 848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_etherHead_381 {
   u8 da[6U] ;
   u8 sa[6U] ;
};

#line 848  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_etherHead_381 etherHead;

#line 849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct aironet_ioctl {
   unsigned short command ;
   unsigned short len ;
   unsigned short ridnum ;
   unsigned char *data ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct aironet_ioctl aironet_ioctl;

#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_mic_statistics_382 {
   u32 size ;
   u8 enabled ;
   u32 rxSuccess ;
   u32 rxIncorrectMIC ;
   u32 rxNotMICed ;
   u32 rxMICPlummed ;
   u32 rxWrongSequence ;
   u32 reserve[32U] ;
};

#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_mic_statistics_382 mic_statistics;

#line 961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
union __anonunion_part_384 {
   u8 d8[4U] ;
   __be32 d32 ;
};

#line 961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_emmh32_context_383 {
   u32 coeff[600U] ;
   u64 accum ;
   int position ;
   union __anonunion_part_384 part ;
};

#line 961  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_emmh32_context_383 emmh32_context;

#line 970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_miccntx_385 {
   emmh32_context seed ;
   u32 rx ;
   u32 tx ;
   u32 window ;
   u8 valid ;
   u8 key[16U] ;
};

#line 970  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_miccntx_385 miccntx;

#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_mic_module_386 {
   miccntx mCtx ;
   miccntx uCtx ;
};

#line 975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_mic_module_386 mic_module;

#line 982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_Rid_387 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rid : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) len : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
   dma_addr_t host_addr ;
};

#line 982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_Rid_387 Rid;

#line 990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_TxFid_388 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) offset : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) eoc : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) len : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
   dma_addr_t host_addr ;
};

#line 990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_TxFid_388 TxFid;

#line 991  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct rx_hdr {
   __le16 status ;
   __le16 len ;
   u8 rssi[2U] ;
   u8 rate ;
   u8 freq ;
   __le16 tmp[4U] ;
};

#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_RxFid_389 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) ctl : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rdy : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) len : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) valid : 1 ;
   dma_addr_t host_addr ;
};

#line 1006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_RxFid_389 RxFid;

#line 1018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_HostRxDesc_390 {
   unsigned char *card_ram_off ;
   RxFid rx_desc ;
   char *virtual_host_addr ;
   int pending ;
};

#line 1018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_HostRxDesc_390 HostRxDesc;

#line 1030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_HostTxDesc_391 {
   unsigned char *card_ram_off ;
   TxFid tx_desc ;
   char *virtual_host_addr ;
   int pending ;
};

#line 1030  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_HostTxDesc_391 HostTxDesc;

#line 1041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_HostRidDesc_392 {
   unsigned char *card_ram_off ;
   Rid rid_desc ;
   char *virtual_host_addr ;
};

#line 1041  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_HostRidDesc_392 HostRidDesc;

#line 1061  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_TxCtlHdr_393 {
   u16 sw0 ;
   u16 sw1 ;
   u16 status ;
   u16 len ;
   u16 ctl ;
   u16 aid ;
   u16 retries ;
   u16 fill ;
};

#line 1061  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_TxCtlHdr_393 TxCtlHdr;

#line 1071  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_WifiHdr_394 {
   u16 ctl ;
   u16 duration ;
   char addr1[6U] ;
   char addr2[6U] ;
   char addr3[6U] ;
   u16 seq ;
   char addr4[6U] ;
};

#line 1071  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_WifiHdr_394 WifiHdr;

#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_WifiCtlHdr_395 {
   TxCtlHdr ctlhdr ;
   u16 fill1 ;
   u16 fill2 ;
   WifiHdr wifihdr ;
   u16 gaplen ;
   u16 status ;
};

#line 1081  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct __anonstruct_WifiCtlHdr_395 WifiCtlHdr;

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct wep_key_t {
   u16 len ;
   u8 key[16U] ;
};

#line 1095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef struct wep_key_t wep_key_t;

#line 1101 
struct airo_info;

#line 1156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_xmit_396 {
   struct sk_buff *skb ;
   int fid ;
};

#line 1156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct __anonstruct_xmit11_397 {
   struct sk_buff *skb ;
   int fid ;
};

#line 1156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct airo_info {
   struct net_device *dev ;
   struct list_head dev_list ;
   u32 fids[6U] ;
   ConfigRid config ;
   char keyindex ;
   char defindex ;
   struct proc_dir_entry *proc_entry ;
   spinlock_t aux_lock ;
   unsigned long flags ;
   unsigned long jobs ;
   int (*bap_read)(struct airo_info *, __le16 *, int , int ) ;
   unsigned short *flash ;
   tdsRssiEntry *rssi ;
   struct task_struct *list_bss_task ;
   struct task_struct *airo_thread_task ;
   struct semaphore sem ;
   wait_queue_head_t thr_wait ;
   unsigned long expires ;
   struct __anonstruct_xmit_396 xmit ;
   struct __anonstruct_xmit11_397 xmit11 ;
   struct net_device *wifidev ;
   struct iw_statistics wstats ;
   unsigned long scan_timeout ;
   struct iw_spy_data spy_data ;
   struct iw_public_data wireless_data ;
   struct crypto_cipher *tfm ;
   mic_module mod[2U] ;
   mic_statistics micstats ;
   HostRxDesc rxfids[1U] ;
   HostTxDesc txfids[1U] ;
   HostRidDesc config_desc ;
   unsigned long ridbus ;
   struct sk_buff_head txq ;
   struct pci_dev *pci ;
   unsigned char *pcimem ;
   unsigned char *pciaux ;
   unsigned char *shared ;
   dma_addr_t shared_dma ;
   pm_message_t power ;
   SsidRid *SSID ;
   APListRid *APList ;
   char proc_name[16U] ;
   int wep_capable ;
   int max_wep_idx ;
   unsigned int bssListFirst ;
   unsigned int bssListNext ;
   unsigned int bssListRidLen ;
   struct list_head network_list ;
   struct list_head network_free_list ;
   BSSListElement *networks ;
};

#line 1428 
enum ldv_35882 {
    NONE = 0,
    NOMIC = 1,
    NOMICPLUMMED = 2,
    SEQUENCE = 3,
    INCORRECTMIC = 4
};

#line 1435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
typedef enum ldv_35882 mic_error;

#line 4491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct proc_data {
   int release_buffer ;
   int readlen ;
   char *rbuffer ;
   int writelen ;
   int maxwritelen ;
   char *wbuffer ;
   void (*on_close)(struct inode *, struct file *) ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 17  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_11 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_13 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_12 {
   struct net_device *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

void __builtin_va_start(__builtin_va_list);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/fvtp/.tmp_airo.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 63  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/byteorder/little_endian.h"
__inline static __u16 __le16_to_cpup(__le16 const *p)
{
  __u16 __retres;
  
#line 65 
  __retres = *p;
  
#line 65 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 248 
void __might_fault(char const *, int);


#line 402 
int sprintf(char *, char const * , ...);


#line 515 
int hex_to_bin(char);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 48 
void __list_add(struct list_head *, struct list_head *, struct list_head *);


#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new, struct list_head *head)
{
  
#line 77 
  __list_add(new,head->prev,head);
  
#line 78 
  return;
}


#line 112 
void __list_del_entry(struct list_head *);


#line 113 
void list_del(struct list_head *);


#line 165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void list_move_tail(struct list_head *list, struct list_head *head)
{
  
#line 168 
  __list_del_entry(list);
  
#line 169 
  list_add_tail(list,head);
  
#line 170 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static int list_empty(struct list_head const *head)
{
  int __retres;
  
#line 189 
  __retres = (struct list_head const *)head->next == head;
  
#line 189 
  return __retres;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/bug.h"
void warn_slowpath_null(char const *, int const);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void)
{
  struct task_struct *tmp;
  {
    struct task_struct *pfo_ret__;
    
#line 14 
    switch (8UL) {
      case (unsigned long)1: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)2: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)4: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      case (unsigned long)8: 
#line 14 
      ;
      
#line 15 
      ldv_inline_asm();
      
#line 14 
      goto ldv_3477;
      default: 
#line 14 
      ;
      
#line 14 
      __bad_percpu_size();
    }
    ldv_3477: 
#line 14 
    ;
    
#line 14 
    tmp = pfo_ret__;
  }
  
#line 14 
  return tmp;
}


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 64 
size_t strlen(char const *);


#line 65 
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 41 
int strncmp(char const *, char const *, __kernel_size_t);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cmpxchg.h"
void __xchg_wrong_size(void);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const *v)
{
  int __retres;
  int const volatile *tmp;
  {
    
#line 27 
    int const __var = 0;
    
#line 27 
    tmp = (int const volatile *)(& v->counter);
  }
  
#line 27 
  __retres = *tmp;
  
#line 27 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
void debug_check_no_locks_held(void);


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 444 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 445 
  return;
}


#line 474 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 478 
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_92(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_93(spinlock_t *ldv_func_arg1);


#line 86 
void ldv_spin_model_lock(char *);


#line 87 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
extern struct user_namespace init_user_ns;


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
__inline static uid_t __kuid_val(kuid_t uid)
{
  uid_t __retres;
  
#line 35 
  __retres = uid.val;
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
__inline static gid_t __kgid_val(kgid_t gid)
{
  gid_t __retres;
  
#line 40 
  __retres = gid.val;
  
#line 40 
  return __retres;
}


#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
__inline static bool uid_valid(kuid_t uid)
{
  bool __retres;
  uid_t tmp;
  
#line 112 
  tmp = __kuid_val(uid);
  
#line 112 
  __retres = (_Bool)(tmp != 4294967295U);
  
#line 112 
  return __retres;
}


#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
__inline static bool gid_valid(kgid_t gid)
{
  bool __retres;
  gid_t tmp;
  
#line 117 
  tmp = __kgid_val(gid);
  
#line 117 
  __retres = (_Bool)(tmp != 4294967295U);
  
#line 117 
  return __retres;
}


#line 122 
kuid_t make_kuid(struct user_namespace *, uid_t);


#line 123 
kgid_t make_kgid(struct user_namespace *, gid_t);


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
int default_wake_function(wait_queue_t *, unsigned int, int, void *);


#line 72 
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
__inline static void init_waitqueue_entry(wait_queue_t *q, struct task_struct *p)
{
  
#line 92 
  q->flags = 0U;
  
#line 93 
  q->private = (void *)p;
  
#line 94 
  q->func = & default_wake_function;
  
#line 95 
  return;
}


#line 110 
void add_wait_queue(wait_queue_head_t *, wait_queue_t *);


#line 112 
void remove_wait_queue(wait_queue_head_t *, wait_queue_t *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ioport.h"
extern struct resource ioport_resource;


#line 139 
extern struct resource iomem_resource;


#line 192 
struct resource *__request_region(struct resource *, resource_size_t, resource_size_t, char const *, int);


#line 201 
void __release_region(struct resource *, resource_size_t, resource_size_t);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
void *ioremap_nocache(resource_size_t, unsigned long);


#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void *ioremap(resource_size_t offset, unsigned long size)
{
  void *tmp;
  
#line 192 
  tmp = ioremap_nocache(offset,size);
  
#line 192 
  return tmp;
}


#line 195 
void iounmap(void volatile *);


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void memcpy_fromio(void *dst, void const volatile *src, size_t count)
{
  
#line 217 
  memcpy(dst,(void const *)src,count);
  
#line 218 
  return;
}


#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void memcpy_toio(void volatile *dst, void const *src, size_t count)
{
  
#line 223 
  memcpy((void *)dst,src,count);
  
#line 224 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outb(unsigned char value, int port)
{
  
#line 322 
  ldv_inline_asm();
  
#line 323 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char inb(int port)
{
  unsigned char value;
  
#line 321 
  ldv_inline_asm();
  
#line 320 
  return value;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outsb(int port, void const *addr, unsigned long count)
{
  
#line 322 
  ldv_inline_asm();
  
#line 323 
  return;
}


#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void insb(int port, void *addr, unsigned long count)
{
  
#line 322 
  ldv_inline_asm();
  
#line 323 
  return;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void outw(unsigned short value, int port)
{
  
#line 323 
  ldv_inline_asm();
  
#line 324 
  return;
}


#line 321  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned short inw(int port)
{
  unsigned short value;
  
#line 322 
  ldv_inline_asm();
  
#line 321 
  return value;
}


#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
bool capable(int);


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
__inline static void sema_init(struct semaphore *sem, int val)
{
  struct lock_class_key __key;
  
#line 35 
  struct semaphore __constr_expr_18 = {.lock = {.raw_lock = {.val = {.counter = 0}}, .magic = 3735899821U, .owner_cpu = 4294967295U, .owner = (void *)(-1), .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = "(*sem).lock", .cpu = 0, .ip = 0UL}}, .count = (unsigned int)val, .wait_list = {.next = & sem->wait_list, .prev = & sem->wait_list}};
  
#line 35 
  *sem = __constr_expr_18;
  
#line 36 
  lockdep_init_map(& sem->lock.dep_map,"semaphore->lock",& __key,0);
  
#line 37 
  return;
}


#line 40 
int down_interruptible(struct semaphore *);


#line 42 
int down_trylock(struct semaphore *);


#line 44 
void up(struct semaphore *);


#line 2547  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
loff_t default_llseek(struct file *, loff_t, int);


#line 2843 
ssize_t simple_read_from_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 2845 
ssize_t simple_write_to_buffer(void *, size_t, loff_t *, void const *, size_t);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/proc_fs.h"
struct proc_dir_entry *proc_mkdir_mode(char const *, umode_t, struct proc_dir_entry *);


#line 25 
struct proc_dir_entry *proc_create_data(char const *, umode_t, struct proc_dir_entry *, struct file_operations const *, void *);


#line 38 
void proc_set_user(struct proc_dir_entry *, kuid_t, kgid_t);


#line 39 
void *PDE_DATA(struct inode const *);


#line 42 
void remove_proc_entry(char const *, struct proc_dir_entry *);


#line 43 
int remove_proc_subtree(char const *, struct proc_dir_entry *);


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 424 
long schedule_timeout_uninterruptible(long);


#line 425 
void schedule(void);


#line 2434 
int wake_up_process(struct task_struct *);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
unsigned long _copy_from_user(void *, void const *, unsigned int);


#line 652 
unsigned long _copy_to_user(void *, void const *, unsigned int);


#line 662 
void copy_from_user_overflow(void);


#line 664 
void copy_to_user_overflow(void);


#line 672 
void __copy_from_user_overflow(void);


#line 677 
void __copy_to_user_overflow(void);


#line 693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_from_user(void *to, void const *from, unsigned long n)
{
  
#line 695 
  int sz = -1;
  
#line 697 
  __might_fault("./arch/x86/include/asm/uaccess.h",697);
  
#line 717 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 718 
                                                                    n = _copy_from_user(to,from,(unsigned int)n);
  else 
    
#line 719 
    if (0 != 0) 
#line 720 
                copy_from_user_overflow(); else 
#line 722 
                                                __copy_from_user_overflow();
  
#line 724 
  return n;
}


#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
__inline static unsigned long copy_to_user(void *to, void const *from, unsigned long n)
{
  
#line 730 
  int sz = -1;
  
#line 732 
  __might_fault("./arch/x86/include/asm/uaccess.h",732);
  
#line 735 
  if ((long)(sz < 0) != 0L || (long)((unsigned long)sz >= n) != 0L) 
#line 736 
                                                                    n = _copy_to_user(to,from,(unsigned int)n);
  else 
    
#line 737 
    if (0 != 0) 
#line 738 
                copy_to_user_overflow(); else 
#line 740 
                                              __copy_to_user_overflow();
  
#line 742 
  return n;
}


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_73(unsigned int irq_0, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_76(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 670  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
struct crypto_tfm *crypto_alloc_base(char const *, u32, u32);


#line 671 
void crypto_destroy_tfm(void *, struct crypto_tfm *);


#line 673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static void crypto_free_tfm(struct crypto_tfm *tfm)
{
  
#line 675 
  crypto_destroy_tfm((void *)tfm,tfm);
  
#line 676 
  return;
}


#line 1467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static struct crypto_cipher *__crypto_cipher_cast(struct crypto_tfm *tfm)
{
  struct crypto_cipher *__retres;
  
#line 1469 
  __retres = (struct crypto_cipher *)tfm;
  
#line 1469 
  return __retres;
}


#line 1492  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static struct crypto_cipher *crypto_alloc_cipher(char const *alg_name, u32 type, u32 mask)
{
  struct crypto_cipher *tmp_0;
  struct crypto_tfm *tmp;
  
#line 1495 
  type &= 4294967280U;
  
#line 1496 
  type |= 1U;
  
#line 1497 
  mask |= 15U;
  
#line 1499 
  tmp = crypto_alloc_base(alg_name,type,mask);
  
#line 1499 
  tmp_0 = __crypto_cipher_cast(tmp);
  
#line 1499 
  return tmp_0;
}


#line 1502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static struct crypto_tfm *crypto_cipher_tfm(struct crypto_cipher *tfm)
{
  struct crypto_tfm *__retres;
  
#line 1504 
  __retres = & tfm->base;
  
#line 1504 
  return __retres;
}


#line 1511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static void crypto_free_cipher(struct crypto_cipher *tfm)
{
  struct crypto_tfm *tmp;
  
#line 1513 
  tmp = crypto_cipher_tfm(tfm);
  
#line 1513 
  crypto_free_tfm(tmp);
  
#line 1514 
  return;
}


#line 1535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static struct cipher_tfm *crypto_cipher_crt(struct crypto_cipher *tfm)
{
  struct cipher_tfm *__retres;
  struct crypto_tfm *tmp;
  
#line 1537 
  tmp = crypto_cipher_tfm(tfm);
  
#line 1537 
  __retres = & tmp->crt_u.cipher;
  
#line 1537 
  return __retres;
}


#line 1593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static int crypto_cipher_setkey(struct crypto_cipher *tfm, u8 const *key, unsigned int keylen)
{
  int tmp_1;
  struct cipher_tfm *tmp;
  struct crypto_tfm *tmp_0;
  
#line 1596 
  tmp = crypto_cipher_crt(tfm);
  
#line 1596 
  ;
  
#line 1596 
  ;
  
#line 1596 
  tmp_0 = crypto_cipher_tfm(tfm);
  
#line 1596 
  tmp_1 = (*(tmp->cit_setkey))(tmp_0,key,keylen);
  
#line 1596 
  return tmp_1;
}


#line 1609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/crypto.h"
__inline static void crypto_cipher_encrypt_one(struct crypto_cipher *tfm, u8 *dst, u8 const *src)
{
  struct cipher_tfm *tmp;
  struct crypto_tfm *tmp_0;
  
#line 1612 
  tmp = crypto_cipher_crt(tfm);
  
#line 1612 
  ;
  
#line 1612 
  ;
  
#line 1612 
  tmp_0 = crypto_cipher_tfm(tfm);
  
#line 1612 
  (*(tmp->cit_encrypt_one))(tmp_0,dst,src);
  
#line 1613 
  return;
}


#line 7  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static u16 get_unaligned_le16(void const *p)
{
  u16 tmp;
  
#line 9 
  tmp = __le16_to_cpup((__le16 const *)p);
  
#line 9 
  return tmp;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
__inline static void ssleep(unsigned int seconds)
{
  
#line 52 
  msleep(seconds * 1000U);
  
#line 53 
  return;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 1011  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static int skb_queue_empty(struct sk_buff_head const *list)
{
  int __retres;
  
#line 1013 
  __retres = (struct sk_buff const *)list->next == (struct sk_buff const *)list;
  
#line 1013 
  return __retres;
}


#line 1316  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static __u32 skb_queue_len(struct sk_buff_head const *list_)
{
  __u32 __retres;
  
#line 1318 
  __retres = list_->qlen;
  
#line 1318 
  return __retres;
}


#line 1331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void __skb_queue_head_init(struct sk_buff_head *list)
{
  struct sk_buff *tmp;
  
#line 1333 
  tmp = (struct sk_buff *)list;
  
#line 1333 
  list->next = tmp;
  
#line 1333 
  list->prev = tmp;
  
#line 1334 
  list->qlen = 0U;
  
#line 1335 
  return;
}


#line 1345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_queue_head_init(struct sk_buff_head *list)
{
  
#line 1347 
  spinlock_check(& list->lock);
  {
    struct lock_class_key __key;
    
#line 1347 
    __raw_spin_lock_init(& list->lock.__anonCompField_spinlock_18.rlock,"&(&list->lock)->rlock",& __key);
  }
  
#line 1348 
  __skb_queue_head_init(list);
  
#line 1349 
  return;
}


#line 1508 
void skb_queue_tail(struct sk_buff_head *, struct sk_buff *);


#line 1540 
struct sk_buff *skb_dequeue(struct sk_buff_head *);


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1913  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_mac_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1915 
  __retres = skb->head + (int)skb->mac_header;
  
#line 1915 
  return __retres;
}


#line 1923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_mac_header(struct sk_buff *skb)
{
  
#line 1925 
  skb->mac_header = (unsigned short)((long)skb->data - (long)skb->head);
  
#line 1926 
  return;
}


#line 2057 
void skb_trim(struct sk_buff *, unsigned int);


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *dev_alloc_skb(unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2172 
  tmp = netdev_alloc_skb((struct net_device *)0,length);
  
#line 2172 
  return tmp;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 2205 
static void ldv_free_netdev_79(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_80(struct net_device *ldv_func_arg1);


#line 2213 
static void ldv_free_netdev_83(struct net_device *ldv_func_arg1);


#line 2217 
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1);


#line 2221 
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_start_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2528 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2528 
  netif_tx_start_queue(tmp);
  
#line 2529 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 3112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_device_present(struct net_device *dev)
{
  bool __retres;
  int tmp;
  
#line 3114 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& dev->state));
  
#line 3114 
  __retres = (_Bool)(tmp != 0);
  
#line 3114 
  return __retres;
}


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3338 
void ether_setup(struct net_device *);


#line 3347 
static struct net_device *ldv_alloc_netdev_mqs_81(int ldv_func_arg1, char const *ldv_func_arg2, unsigned char ldv_func_arg3, void (*ldv_func_arg4)(struct net_device *), unsigned int ldv_func_arg5, unsigned int ldv_func_arg6);


#line 3351 
static struct net_device *ldv_alloc_netdev_mqs_84(int ldv_func_arg1, char const *ldv_func_arg2, unsigned char ldv_func_arg3, void (*ldv_func_arg4)(struct net_device *), unsigned int ldv_func_arg5, unsigned int ldv_func_arg6);


#line 3363 
static int ldv_register_netdev_82(struct net_device *ldv_func_arg1);


#line 3367 
static int ldv_register_netdev_85(struct net_device *ldv_func_arg1);


#line 3372 
static void ldv_unregister_netdev_77(struct net_device *ldv_func_arg1);


#line 3376 
static void ldv_unregister_netdev_78(struct net_device *ldv_func_arg1);


#line 3380 
static void ldv_unregister_netdev_86(struct net_device *ldv_func_arg1);


#line 3384 
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_broadcast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 161 
  __retres = (_Bool)((unsigned int)(((int)*((u16 const *)addr) & (int)*((u16 const *)(addr + 2U))) & (int)*((u16 const *)(addr + 4U))) == 65535U);
  
#line 161 
  return __retres;
}


#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_broadcast_addr(u8 *addr)
{
  
#line 235 
  memset((void *)addr,255,6UL);
  
#line 236 
  return;
}


#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_zero_addr(u8 *addr)
{
  
#line 246 
  memset((void *)addr,0,6UL);
  
#line 247 
  return;
}


#line 271  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void ether_addr_copy(u8 *dst, u8 const *src)
{
  
#line 274 
  *((u32 *)dst) = *((u32 const *)src);
  
#line 275 
  *((u16 *)(dst + 4U)) = *((u16 const *)(src + 4U));
  
#line 276 
  return;
}


#line 294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static void eth_hw_addr_inherit(struct net_device *dst, struct net_device *src)
{
  
#line 297 
  dst->addr_assign_type = src->addr_assign_type;
  
#line 298 
  ether_addr_copy(dst->dev_addr,(u8 const *)src->dev_addr);
  
#line 299 
  return;
}


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1041 
pci_power_t pci_choose_state(struct pci_dev *, pm_message_t);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1146 
static int ldv___pci_register_driver_95(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_96(struct pci_driver *ldv_func_arg1);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
static struct task_struct *ldv_kthread_create_on_node_72(int (*ldv_func_arg1)(void *), void *ldv_func_arg2, int ldv_func_arg3, char const *ldv_func_arg4 , ...);


#line 41 
int kthread_stop(struct task_struct *);


#line 42 
bool kthread_should_stop(void);


#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/freezer.h"
extern atomic_t system_freezing_cnt;


#line 29 
bool freezing_slow_path(struct task_struct *);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/freezer.h"
__inline static bool freezing(struct task_struct *p)
{
  bool __retres;
  int tmp;
  bool tmp_0;
  
#line 36 
  tmp = atomic_read((atomic_t const *)(& system_freezing_cnt));
  
#line 36 
  if ((long)(tmp == 0) != 0L) {
    
#line 37 
    __retres = (_Bool)0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 38 
  tmp_0 = freezing_slow_path(p);
  
#line 38 
  __retres = tmp_0;
  return_label: 
#line 38 
                return __retres;
}


#line 44 
bool __refrigerator(bool);


#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/freezer.h"
__inline static bool try_to_freeze_unsafe(void)
{
  bool __retres;
  int tmp_1;
  bool tmp_0;
  struct task_struct *tmp;
  bool tmp_2;
  
#line 56 
  __might_sleep("include/linux/freezer.h",56,0);
  
#line 57 
  tmp = get_current();
  
#line 57 
  tmp_0 = freezing(tmp);
  
#line 57 
  if (tmp_0) 
#line 57 
             tmp_1 = 0; else 
#line 57 
                             tmp_1 = 1;
  
#line 57 
  if ((long)tmp_1 != 0L) {
    
#line 58 
    __retres = (_Bool)0;
    
#line 58 
    goto return_label;
  }
  else ;
  
#line 59 
  tmp_2 = __refrigerator((_Bool)0);
  
#line 59 
  __retres = tmp_2;
  return_label: 
#line 59 
                return __retres;
}


#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/freezer.h"
__inline static bool try_to_freeze(void)
{
  struct task_struct *tmp;
  bool tmp_0;
  
#line 64 
  tmp = get_current();
  
#line 64 
  ;
  
#line 64 
  if ((tmp->flags & 32768U) == 0U) 
#line 65 
                                   debug_check_no_locks_held(); else ;
  
#line 66 
  tmp_0 = try_to_freeze_unsafe();
  
#line 66 
  return tmp_0;
}


#line 70 
bool set_freezable(void);


#line 3528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/cfg80211.h"
int ieee80211_channel_to_frequency(int, enum ieee80211_band);


#line 3535 
int ieee80211_frequency_to_channel(int);


#line 440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
void wireless_send_event(struct net_device *, unsigned int, union iwreq_data *, char const *);


#line 447 
int iw_handler_set_spy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 450 
int iw_handler_get_spy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 453 
int iw_handler_set_thrspy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 456 
int iw_handler_get_thrspy(struct net_device *, struct iw_request_info *, union iwreq_data *, char *);


#line 459 
void wireless_spy_update(struct net_device *, unsigned char *, struct iw_quality *);


#line 467  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static int iwe_stream_lcp_len(struct iw_request_info *info)
{
  int __retres;
  
#line 470 
  if (((int)info->flags & 1) != 0) {
    
#line 471 
    __retres = 4;
    
#line 471 
    goto return_label;
  }
  else ;
  
#line 473 
  __retres = 8;
  return_label: 
#line 473 
                return __retres;
}


#line 476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static int iwe_stream_point_len(struct iw_request_info *info)
{
  int __retres;
  
#line 479 
  if (((int)info->flags & 1) != 0) {
    
#line 480 
    __retres = 8;
    
#line 480 
    goto return_label;
  }
  else ;
  
#line 482 
  __retres = 16;
  return_label: 
#line 482 
                return __retres;
}


#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static int iwe_stream_event_len_adjust(struct iw_request_info *info, int event_len)
{
  
#line 489 
  if (((int)info->flags & 1) != 0) {
    
#line 490 
    event_len = (int)((unsigned int)event_len + 4294967288U);
    
#line 491 
    event_len = (int)((unsigned int)event_len + 4U);
  }
  else ;
  
#line 495 
  return event_len;
}


#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static char *iwe_stream_add_event(struct iw_request_info *info, char *stream, char *ends, struct iw_event *iwe, int event_len)
{
  
#line 506 
  int lcp_len = iwe_stream_lcp_len(info);
  
#line 508 
  event_len = iwe_stream_event_len_adjust(info,event_len);
  
#line 511 
  if ((long)(stream + event_len < ends) != 0L) {
    
#line 512 
    iwe->len = (unsigned short)event_len;
    
#line 514 
    memcpy((void *)stream,(void const *)iwe,4UL);
    
#line 515 
    memcpy((void *)(stream + lcp_len),(void const *)(& iwe->u),(unsigned long)(event_len - lcp_len));
    
#line 517 
    stream += event_len;
  }
  else ;
  
#line 519 
  return stream;
}


#line 539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static char *iwe_stream_add_point(struct iw_request_info *info, char *stream, char *ends, struct iw_event *iwe, char *extra)
{
  int tmp;
  
#line 542 
  tmp = iwe_stream_point_len(info);
  
#line 542 
  int event_len = tmp + (int)iwe->u.data.length;
  
#line 543 
  int point_len = iwe_stream_point_len(info);
  
#line 544 
  int lcp_len = iwe_stream_lcp_len(info);
  
#line 547 
  if ((long)(stream + event_len < ends) != 0L) {
    
#line 548 
    iwe->len = (unsigned short)event_len;
    
#line 549 
    memcpy((void *)stream,(void const *)iwe,4UL);
    
#line 550 
    memcpy((void *)(stream + lcp_len),(void const *)(& iwe->u) + 8U,4UL);
    
#line 553 
    memcpy((void *)(stream + point_len),(void const *)extra,(unsigned long)iwe->u.data.length);
    
#line 554 
    stream += event_len;
  }
  else ;
  
#line 556 
  return stream;
}


#line 577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/iw_handler.h"
__inline static char *iwe_stream_add_value(struct iw_request_info *info, char *event, char *value, char *ends, struct iw_event *iwe, int event_len)
{
  
#line 580 
  int lcp_len = iwe_stream_lcp_len(info);
  
#line 583 
  event_len = (int)((unsigned int)event_len + 4294967288U);
  
#line 586 
  if ((long)(value + event_len < ends) != 0L) {
    
#line 588 
    memcpy((void *)value,(void const *)(& iwe->u),(unsigned long)event_len);
    
#line 589 
    value += event_len;
    
#line 591 
    iwe->len = (unsigned short)((long)value - (long)event);
    
#line 592 
    memcpy((void *)event,(void const *)iwe,(unsigned long)lcp_len);
  }
  else ;
  
#line 594 
  return value;
}


#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.h"
struct net_device *init_airo_card(unsigned short irq_0, int port, int is_pcmcia, struct device *dmdev);


#line 6 
int reset_airo_card(struct net_device *dev);


#line 7 
void stop_airo_card(struct net_device *dev, int freeres);


#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct pci_device_id const card_ids[8U] = {{.vendor = 5305U, .device = 1U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5305U, .device = 17664U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5305U, .device = 18432U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5305U, .device = 832U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5305U, .device = 848U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5305U, .device = 20480U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 5305U, .device = 42244U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct pci_device_id const __mod_pci__card_ids_device_table[8U];

#line 72 
static int airo_pci_probe(struct pci_dev *pdev, struct pci_device_id const *pent);


#line 73 
static void airo_pci_remove(struct pci_dev *pdev);


#line 74 
static int airo_pci_suspend(struct pci_dev *pdev, pm_message_t state);


#line 75 
static int airo_pci_resume(struct pci_dev *pdev);


#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct pci_driver airo_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "airo", .id_table = (struct pci_device_id const *)(& card_ids), .probe = & airo_pci_probe, .remove = & airo_pci_remove, .suspend = & airo_pci_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & airo_pci_resume, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = (struct pci_error_handlers const *)0, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const *statsLabels[101U] = {"RxOverrun", (char const *)0, (char const *)0, (char const *)0, "RxMacCrcErr", "RxMacCrcOk", "RxWepErr", "RxWepOk", "RetryLong", "RetryShort", "MaxRetries", "NoAck", "NoCts", "RxAck", "RxCts", "TxAck", "TxRts", "TxCts", "TxMc", "TxBc", "TxUcFrags", "TxUcPackets", "TxBeacon", "RxBeacon", "TxSinColl", "TxMulColl", "DefersNo", "DefersProt", "DefersEngy", "DupFram", "RxFragDisc", "TxAged", "RxAged", "LostSync-MaxRetry", "LostSync-MissedBeacons", "LostSync-ArlExceeded", "LostSync-Deauth", "LostSync-Disassoced", "LostSync-TsfTiming", "HostTxMc", "HostTxBc", "HostTxUc", "HostTxFail", "HostRxMc", "HostRxBc", "HostRxUc", "HostRxDiscard", (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, "SsidMismatch", "ApMismatch", "RatesMismatch", "AuthReject", "AuthTimeout", "AssocReject", "AssocTimeout", (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, (char const *)0, "RxMan", "TxMan", "RxRefresh", "TxRefresh", "RxPoll", "TxPoll", "HostRetries", "LostSync-HostReq", "HostTxBytes", "HostRxBytes", "ElapsedUsec", "ElapsedSec", "LostSyncBetterAP", "PrivacyMismatch", "Jammed", "DiscRxNotWepped", "PhyEleMismatch", (char const *)(-1)};

#line 217  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int rates[8U];

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char *ssids[3U];

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int io[4U];

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int irq[4U];

#line 224  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int maxencrypt;

#line 227  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int auto_wep;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int aux_bap;

#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int adhoc;

#line 232  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int probe = 1;

#line 234  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static kuid_t proc_kuid;

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_uid;

#line 237  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static kgid_t proc_kgid;

#line 238  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_gid;

#line 240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_perm = 365;

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_perm = 420;

#line 285  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int do8bitIO;

#line 934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const swversion[4U] = {(char)'2', (char)'.', (char)'1', (char)'\000'};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static WifiCtlHdr wifictlhdr8023 = {.ctlhdr = {.sw0 = (unsigned short)0, .sw1 = (unsigned short)0, .status = (unsigned short)0, .len = (unsigned short)0, .ctl = (unsigned short)32U, .aid = (unsigned short)0, .retries = (unsigned short)0, .fill = (unsigned short)0}, .fill1 = (unsigned short)0, .fill2 = (unsigned short)0, .wifihdr = {.ctl = (unsigned short)0, .duration = (unsigned short)0, .addr1 = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .addr2 = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .addr3 = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0}, .seq = (unsigned short)0, .addr4 = {(char)0, (char)0, (char)0, (char)0, (char)0, (char)0}}, .gaplen = (unsigned short)0, .status = (unsigned short)0};

#line 1098 
static struct iw_handler_def const airo_handler_def;


#line 1100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const version[40U] = {(char)'a', (char)'i', (char)'r', (char)'o', (char)'.', (char)'c', (char)' ', (char)'0', (char)'.', (char)'6', (char)' ', (char)'(', (char)'B', (char)'e', (char)'n', (char)' ', (char)'R', (char)'e', (char)'e', (char)'d', (char)' ', (char)'&', (char)' ', (char)'J', (char)'a', (char)'v', (char)'i', (char)'e', (char)'r', (char)' ', (char)'A', (char)'c', (char)'h', (char)'i', (char)'r', (char)'i', (char)'c', (char)'a', (char)')', (char)'\000'};

#line 1104 
static int get_dec_u16(char *buffer, int *start, int limit);


#line 1105 
static void OUT4500(struct airo_info *ai, u16 reg, u16 val);


#line 1106 
static unsigned short IN4500(struct airo_info *ai, u16 reg);


#line 1107 
static u16 setup_card(struct airo_info *ai, u8 *mac, int lock);


#line 1108 
static int enable_MAC(struct airo_info *ai, int lock);


#line 1109 
static void disable_MAC(struct airo_info *ai, int lock);


#line 1110 
static void enable_interrupts(struct airo_info *ai);


#line 1111 
static void disable_interrupts(struct airo_info *ai);


#line 1112 
static u16 issuecommand(struct airo_info *ai, Cmd *pCmd, Resp *pRsp);


#line 1113 
static int bap_setup(struct airo_info *ai, u16 rid, u16 offset, int whichbap);


#line 1114 
static int aux_bap_read(struct airo_info *ai, __le16 *pu16Dst, int bytelen, int whichbap);


#line 1116 
static int fast_bap_read(struct airo_info *ai, __le16 *pu16Dst, int bytelen, int whichbap);


#line 1118 
static int bap_write(struct airo_info *ai, __le16 const *pu16Src, int bytelen, int whichbap);


#line 1120 
static int PC4500_accessrid(struct airo_info *ai, u16 rid, u16 accmd);


#line 1121 
static int PC4500_readrid(struct airo_info *ai, u16 rid, void *pBuf, int len, int lock);


#line 1122 
static int PC4500_writerid(struct airo_info *ai, u16 rid, void const *pBuf, int len, int lock);


#line 1124 
static int do_writerid(struct airo_info *ai, u16 rid, void const *rid_data, int len, int dummy);


#line 1126 
static u16 transmit_allocate(struct airo_info *ai, int lenPayload, int raw);


#line 1127 
static int transmit_802_3_packet(struct airo_info *ai, int len, char *pPacket);


#line 1128 
static int transmit_802_11_packet(struct airo_info *ai, int len, char *pPacket);


#line 1130 
static int mpi_send_packet(struct net_device *dev);


#line 1131 
static void mpi_unmap_card(struct pci_dev *pci);


#line 1132 
static void mpi_receive_802_3(struct airo_info *ai);


#line 1133 
static void mpi_receive_802_11(struct airo_info *ai);


#line 1134 
static int waitbusy(struct airo_info *ai);


#line 1136 
static irqreturn_t airo_interrupt(int irq_0, void *dev_id);


#line 1137 
static int airo_thread(void *data);


#line 1138 
static void timer_func(struct net_device *dev);


#line 1139 
static int airo_ioctl(struct net_device *dev, struct ifreq *rq, int cmd);


#line 1140 
static struct iw_statistics *airo_get_wireless_stats(struct net_device *dev);


#line 1141 
static void airo_read_wireless_stats(struct airo_info *local);


#line 1143 
static int readrids(struct net_device *dev, aironet_ioctl *comp);


#line 1144 
static int writerids(struct net_device *dev, aironet_ioctl *comp);


#line 1145 
static int flashcard(struct net_device *dev, aironet_ioctl *comp);


#line 1147 
static void micinit(struct airo_info *ai);


#line 1148 
static int micsetup(struct airo_info *ai);


#line 1149 
static int encapsulate(struct airo_info *ai, etherHead *frame, MICBuffer *mic, int payLen);


#line 1150 
static int decapsulate(struct airo_info *ai, MICBuffer *mic, etherHead *eth, u16 payLen);


#line 1152 
static u8 airo_rssi_to_dbm(tdsRssiEntry *rssi_rid, u8 rssi);


#line 1153 
static u8 airo_dbm_to_pct(tdsRssiEntry *rssi_rid, u8 dbm);


#line 1155 
static void airo_networks_free(struct airo_info *ai);


#line 1251  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
__inline static int bap_read(struct airo_info *ai, __le16 *pu16Dst, int bytelen, int whichbap)
{
  int tmp;
  
#line 1254 
  tmp = (*(ai->bap_read))(ai,pu16Dst,bytelen,whichbap);
  
#line 1254 
  return tmp;
}


#line 1257 
static int setup_proc_entry(struct net_device *dev, struct airo_info *apriv);


#line 1259 
static int takedown_proc_entry(struct net_device *dev, struct airo_info *apriv);


#line 1262 
static int cmdreset(struct airo_info *ai);


#line 1263 
static int setflashmode(struct airo_info *ai);


#line 1264 
static int flashgchar(struct airo_info *ai, int matchbyte, int dwelltime);


#line 1265 
static int flashputbuf(struct airo_info *ai);


#line 1266 
static int flashrestart(struct airo_info *ai, struct net_device *dev);


#line 1290 
static int RxSeqValid(struct airo_info *ai, miccntx *context, int mcast, u32 micSeq);


#line 1291 
static void MoveWindow(miccntx *context, u32 micSeq);


#line 1292 
static void emmh32_setseed(emmh32_context *context, u8 *pkey, int keylen, struct crypto_cipher *tfm);


#line 1294 
static void emmh32_init(emmh32_context *context);


#line 1295 
static void emmh32_update(emmh32_context *context, u8 *pOctets, int len);


#line 1296 
static void emmh32_final(emmh32_context *context, u8 *digest);


#line 1297 
static int flashpchar(struct airo_info *ai, int byte, int dwelltime);


#line 1299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void age_mic_context(miccntx *cur, miccntx *old, u8 *key, int key_len, struct crypto_cipher *tfm)
{
  
#line 1305 
  if ((unsigned int)cur->valid != 0U) {
    int tmp;
    
#line 1305 
    tmp = memcmp((void const *)(& cur->key),(void const *)key,(unsigned long)key_len);
    
#line 1305 
    if (tmp == 0) 
#line 1306 
                  goto return_label; else ;
  }
  else ;
  
#line 1309 
  memcpy((void *)old,(void const *)cur,2448UL);
  
#line 1312 
  memcpy((void *)(& cur->key),(void const *)key,(unsigned long)key_len);
  
#line 1313 
  cur->window = 33U;
  
#line 1314 
  cur->rx = 0U;
  
#line 1315 
  cur->tx = 0U;
  
#line 1316 
  cur->valid = (unsigned char)1U;
  
#line 1319 
  emmh32_setseed(& cur->seed,key,key_len,tfm);
  return_label: 
#line 1320 
                return;
}


#line 1324  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void micinit(struct airo_info *ai)
{
  MICRid mic_rid;
  
#line 1328 
  set_bit(5L,(unsigned long volatile *)(& ai->jobs));
  
#line 1329 
  PC4500_readrid(ai,(unsigned short)65367,(void *)(& mic_rid),40,0);
  
#line 1330 
  up(& ai->sem);
  
#line 1332 
  ai->micstats.enabled = (unsigned char)(((int)mic_rid.state & 255) != 0);
  
#line 1333 
  if ((unsigned int)ai->micstats.enabled == 0U) {
    
#line 1337 
    ai->mod[0].uCtx.valid = (unsigned char)0U;
    
#line 1338 
    ai->mod[0].mCtx.valid = (unsigned char)0U;
    
#line 1339 
    goto return_label;
  }
  else ;
  
#line 1342 
  if ((unsigned int)mic_rid.multicastValid != 0U) 
#line 1343 
                                                  age_mic_context(& ai->mod[0].mCtx,& ai->mod[1].mCtx,(u8 *)(& mic_rid.multicast),16,ai->tfm); else ;
  
#line 1348 
  if ((unsigned int)mic_rid.unicastValid != 0U) 
#line 1349 
                                                age_mic_context(& ai->mod[0].uCtx,& ai->mod[1].uCtx,(u8 *)(& mic_rid.unicast),16,ai->tfm); else ;
  return_label: 
#line 1352 
                return;
}


#line 1357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int micsetup(struct airo_info *ai)
{
  int __retres;
  int i;
  bool tmp;
  
#line 1360 
  if (ai->tfm == (struct crypto_cipher *)0) 
#line 1361 
                                            ai->tfm = crypto_alloc_cipher("aes",0U,128U); else ;
  
#line 1363 
  tmp = IS_ERR((void const *)ai->tfm);
  
#line 1363 
  if ((int)tmp != 0) {
    
#line 1364 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 1365 
    ai->tfm = (struct crypto_cipher *)0;
    
#line 1366 
    __retres = -1;
    
#line 1366 
    goto return_label;
  }
  else ;
  
#line 1369 
  i = 0;
  
#line 1369 
  goto ldv_52592;
  ldv_52591: 
#line 1370 
  ;
  
#line 1370 
  memset((void *)(& ai->mod[i].mCtx),0,2448UL);
  
#line 1371 
  memset((void *)(& ai->mod[i].uCtx),0,2448UL);
  
#line 1369 
  i += 1;
  ldv_52592: 
#line 1370 
  ;
  
#line 1369 
  if (i <= 1) 
#line 1371 
              goto ldv_52591; else 
#line 1374 
                                   goto ldv_52593;
  ldv_52593: 
#line 1375 
  ;
  
#line 1373 
  __retres = 0;
  return_label: 
#line 1373 
                return __retres;
}


#line 1376  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u8 const micsnap[8U] = {(unsigned char)170U, (unsigned char)170U, (unsigned char)3U, (unsigned char)0U, (unsigned char)64U, (unsigned char)150U, (unsigned char)0U, (unsigned char)2U};

#line 1394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int encapsulate(struct airo_info *ai, etherHead *frame, MICBuffer *mic, int payLen)
{
  int __retres;
  miccntx *context;
  int tmp;
  
#line 1401 
  tmp = constant_test_bit(3L,(unsigned long const volatile *)(& ai->flags));
  
#line 1401 
  if (tmp != 0) 
    
#line 1401 
    if (((int)frame->da[0] & 1) != 0) 
#line 1402 
                                      context = & ai->mod[0].mCtx; else 
                                                                    
#line 1404 
                                                                    context = & ai->mod[0].uCtx;
  else 
#line 1404 
       context = & ai->mod[0].uCtx;
  
#line 1406 
  if ((unsigned int)context->valid == 0U) {
    
#line 1407 
    __retres = -1;
    
#line 1407 
    goto return_label;
  }
  else ;
  
#line 1409 
  if (0 != 0) 
#line 1409 
              mic->typelen = (unsigned short)((unsigned int)((int)((unsigned int)((unsigned short)payLen) + 16U) << 8) | (((unsigned int)((unsigned short)payLen) + 16U) >> 8)); else 
                                                                    
#line 1409 
                                                                    mic->typelen = __fswab16((unsigned short)((int)((unsigned int)((unsigned short)payLen) + 16U)));
  
#line 1411 
  memcpy((void *)(& mic->u.snap),(void const *)(& micsnap),8UL);
  
#line 1414 
  if (0 != 0) 
#line 1414 
              mic->seq = (((context->tx << 24) | ((context->tx << 8) & 16711680U)) | ((context->tx >> 8) & 65280U)) | (context->tx >> 24); else 
                                                                    
#line 1414 
                                                                    mic->seq = __fswab32(context->tx);
  
#line 1415 
  context->tx += 2U;
  
#line 1417 
  emmh32_init(& context->seed);
  
#line 1418 
  emmh32_update(& context->seed,(u8 *)(& frame->da),12);
  
#line 1419 
  emmh32_update(& context->seed,(u8 *)(& mic->typelen),10);
  
#line 1420 
  emmh32_update(& context->seed,(u8 *)(& mic->seq),4);
  
#line 1421 
  emmh32_update(& context->seed,(u8 *)(frame + 1U),payLen);
  
#line 1422 
  emmh32_final(& context->seed,(u8 *)(& mic->mic));
  
#line 1425 
  mic->typelen = (unsigned short)0U;
  
#line 1426 
  __retres = 0;
  return_label: 
#line 1426 
                return __retres;
}


#line 1450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int decapsulate(struct airo_info *ai, MICBuffer *mic, etherHead *eth, u16 payLen)
{
  int __retres;
  int i;
  u32 micSEQ;
  miccntx *context;
  u8 digest[4U];
  int tmp_1;
  int tmp_2;
  
#line 1456 
  mic_error micError = NONE;
  
#line 1460 
  if ((unsigned int)ai->micstats.enabled == 0U) {
    int tmp;
    
#line 1462 
    tmp = memcmp((void const *)eth + 14U,(void const *)(& micsnap),8UL);
    
#line 1462 
    if (tmp == 0) {
      
#line 1463 
      ai->micstats.rxMICPlummed += 1U;
      
#line 1464 
      __retres = -1;
      
#line 1464 
      goto return_label;
    }
    else ;
    
#line 1466 
    __retres = 0;
    
#line 1466 
    goto return_label;
  }
  else ;
  
#line 1469 
  if (0 != 0) 
#line 1469 
              tmp_1 = (((int)mic->typelen << 8) | ((int)mic->typelen >> 8)) == -30578;
  else {
    __u16 tmp_0;
    
#line 1469 
    tmp_0 = __fswab16((unsigned short)((int)mic->typelen));
    
#line 1469 
    tmp_1 = (unsigned int)tmp_0 == 34958U;
  }
  
#line 1469 
  if (tmp_1) {
    
#line 1470 
    __retres = 0;
    
#line 1470 
    goto return_label;
  }
  else ;
  
#line 1472 
  tmp_2 = memcmp((void const *)(& mic->u.snap),(void const *)(& micsnap),8UL);
  
#line 1472 
  if (tmp_2 != 0) {
    
#line 1474 
    ai->micstats.rxMICPlummed += 1U;
    
#line 1475 
    __retres = -1;
    
#line 1475 
    goto return_label;
  }
  else ;
  
#line 1478 
  if (0 != 0) 
#line 1478 
              micSEQ = (((mic->seq << 24) | ((mic->seq << 8) & 16711680U)) | ((mic->seq >> 8) & 65280U)) | (mic->seq >> 24); else 
                                                                    
#line 1478 
                                                                    micSEQ = __fswab32(mic->seq);
  
#line 1484 
  if ((micSEQ & 1U) == 0U) {
    
#line 1485 
    ai->micstats.rxWrongSequence += 1U;
    
#line 1486 
    __retres = -1;
    
#line 1486 
    goto return_label;
  }
  else ;
  
#line 1489 
  i = 0;
  
#line 1489 
  goto ldv_52623;
  ldv_52622: 
#line 1490 
  ;
  {
    int tmp_5;
    int tmp_6;
    
#line 1490 
    int mcast = (int)eth->da[0] & 1;
    
#line 1492 
    if (mcast != 0) 
#line 1492 
                    context = & ai->mod[i].mCtx; else 
#line 1492 
                                                      context = & ai->mod[i].uCtx;
    
#line 1495 
    if ((unsigned int)context->valid == 0U) {
      
#line 1496 
      if (i == 0) 
#line 1497 
                  micError = NOMICPLUMMED; else ;
      
#line 1498 
      goto ldv_52621;
    }
    else ;
    
#line 1502 
    if ((unsigned int)mic->typelen == 0U) 
      
#line 1503 
      if (0 != 0) 
#line 1503 
                  mic->typelen = (unsigned short)((unsigned int)((int)((unsigned int)payLen + 16U) << 8) | (((unsigned int)payLen + 16U) >> 8)); else 
                                                                    
#line 1503 
                                                                    mic->typelen = __fswab16((unsigned short)((int)((unsigned int)payLen + 16U)));
    else ;
    
#line 1505 
    emmh32_init(& context->seed);
    
#line 1506 
    emmh32_update(& context->seed,(u8 *)(& eth->da),12);
    
#line 1507 
    emmh32_update(& context->seed,(u8 *)(& mic->typelen),10);
    
#line 1508 
    emmh32_update(& context->seed,(u8 *)(& mic->seq),4);
    
#line 1509 
    emmh32_update(& context->seed,(u8 *)(eth + 1U),(int)payLen);
    
#line 1511 
    emmh32_final(& context->seed,(u8 *)(& digest));
    
#line 1513 
    tmp_5 = memcmp((void const *)(& digest),(void const *)(& mic->mic),4UL);
    
#line 1513 
    if (tmp_5 != 0) {
      
#line 1515 
      if (i == 0) 
#line 1516 
                  micError = INCORRECTMIC; else ;
      
#line 1517 
      goto ldv_52621;
    }
    else ;
    
#line 1521 
    tmp_6 = RxSeqValid(ai,context,mcast,micSEQ);
    
#line 1521 
    if (tmp_6 == 0) {
      
#line 1522 
      ai->micstats.rxSuccess += 1U;
      
#line 1523 
      __retres = 0;
      
#line 1523 
      goto return_label;
    }
    else ;
    
#line 1525 
    if (i == 0) 
#line 1526 
                micError = SEQUENCE; else ;
  }
  ldv_52621: 
#line 1528 
  ;
  
#line 1489 
  i += 1;
  ldv_52623: 
#line 1490 
  ;
  
#line 1489 
  if (i <= 1) 
#line 1491 
              goto ldv_52622; else 
#line 1494 
                                   goto ldv_52624;
  ldv_52624: 
#line 1495 
  ;
  
#line 1530 
  switch ((unsigned int)micError) {
    case (unsigned int)2: 
#line 1531 
    ;
    
#line 1531 
    ai->micstats.rxMICPlummed += 1U;
    
#line 1531 
    goto ldv_52626;
    case (unsigned int)3: 
#line 1532 
    ;
    
#line 1532 
    ai->micstats.rxWrongSequence += 1U;
    
#line 1532 
    goto ldv_52626;
    case (unsigned int)4: 
#line 1533 
    ;
    
#line 1533 
    ai->micstats.rxIncorrectMIC += 1U;
    
#line 1533 
    goto ldv_52626;
    case (unsigned int)0: 
#line 1534 
    ;
    
#line 1534 
    goto ldv_52626;
    case (unsigned int)1: 
#line 1535 
    ;
    
#line 1535 
    goto ldv_52626;
  }
  ldv_52626: 
#line 1537 
  ;
  
#line 1537 
  __retres = -1;
  return_label: 
#line 1537 
                return __retres;
}


#line 1554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int RxSeqValid(struct airo_info *ai, miccntx *context, int mcast, u32 micSeq)
{
  int __retres;
  u32 seq;
  u32 index;
  
#line 1561 
  if (mcast != 0) {
    int tmp;
    
#line 1562 
    tmp = constant_test_bit(5L,(unsigned long const volatile *)(& ai->flags));
    
#line 1562 
    if (tmp != 0) {
      
#line 1563 
      set_bit(5L,(unsigned long volatile *)(& ai->flags));
      
#line 1564 
      if (33U > micSeq) 
#line 1564 
                        context->window = 33U; else 
#line 1564 
                                                    context->window = micSeq;
      
#line 1565 
      context->rx = 0U;
    }
    else ;
  }
  else {
    int tmp_0;
    
#line 1567 
    tmp_0 = constant_test_bit(6L,(unsigned long const volatile *)(& ai->flags));
    
#line 1567 
    if (tmp_0 != 0) {
      
#line 1568 
      set_bit(6L,(unsigned long volatile *)(& ai->flags));
      
#line 1569 
      if (33U > micSeq) 
#line 1569 
                        context->window = 33U; else 
#line 1569 
                                                    context->window = micSeq;
      
#line 1570 
      context->rx = 0U;
    }
    else ;
  }
  
#line 1574 
  seq = (micSeq - context->window) + 33U;
  
#line 1577 
  if ((int)seq < 0) {
    
#line 1578 
    __retres = -1;
    
#line 1578 
    goto return_label;
  }
  else ;
  
#line 1580 
  if (seq > 64U) {
    
#line 1582 
    MoveWindow(context,micSeq);
    
#line 1583 
    __retres = 0;
    
#line 1583 
    goto return_label;
  }
  else ;
  
#line 1587 
  seq >>= 1;
  
#line 1588 
  index = (unsigned int)(1 << seq);
  
#line 1590 
  if ((context->rx & index) == 0U) {
    
#line 1593 
    context->rx |= index;
    
#line 1595 
    MoveWindow(context,micSeq);
    
#line 1597 
    __retres = 0;
    
#line 1597 
    goto return_label;
  }
  else ;
  
#line 1599 
  __retres = -1;
  return_label: 
#line 1599 
                return __retres;
}


#line 1602  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void MoveWindow(miccntx *context, u32 micSeq)
{
  u32 shift;
  
#line 1607 
  if (context->window < micSeq) {
    
#line 1608 
    shift = (micSeq - context->window) >> 1;
    
#line 1611 
    if (shift <= 31U) 
#line 1612 
                      context->rx >>= shift; else 
#line 1614 
                                                  context->rx = 0U;
    
#line 1616 
    context->window = micSeq;
  }
  else ;
  
#line 1618 
  return;
}


#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static unsigned char aes_counter[16U];

#line 1631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void emmh32_setseed(emmh32_context *context, u8 *pkey, int keylen, struct crypto_cipher *tfm)
{
  int i;
  int j;
  u32 counter;
  u8 *cipher;
  u8 plain[16U];
  
#line 1641 
  crypto_cipher_setkey(tfm,(u8 const *)pkey,16U);
  
#line 1642 
  counter = 0U;
  
#line 1643 
  i = 0;
  
#line 1643 
  goto ldv_52666;
  ldv_52665: 
#line 1644 
  ;
  {
    int tmp;
    
#line 1644 
    aes_counter[15] = (unsigned char)counter;
    
#line 1645 
    aes_counter[14] = (unsigned char)(counter >> 8);
    
#line 1646 
    aes_counter[13] = (unsigned char)(counter >> 16);
    
#line 1647 
    aes_counter[12] = (unsigned char)(counter >> 24);
    
#line 1648 
    counter += 1U;
    
#line 1649 
    memcpy((void *)(& plain),(void const *)(& aes_counter),16UL);
    
#line 1650 
    crypto_cipher_encrypt_one(tfm,(u8 *)(& plain),(u8 const *)(& plain));
    
#line 1651 
    cipher = (u8 *)(& plain);
    
#line 1652 
    j = 0;
    
#line 1652 
    goto ldv_52663;
    ldv_52662: 
#line 1653 
    ;
    
#line 1653 
    tmp = i;
    
#line 1653 
    i += 1;
    
#line 1653 
    if (0 != 0) 
#line 1653 
                context->coeff[tmp] = (((*((__be32 *)(cipher + j)) << 24) | ((*((__be32 *)(cipher + j)) << 8) & 16711680U)) | ((*((__be32 *)(cipher + j)) >> 8) & 65280U)) | (*((__be32 *)(cipher + j)) >> 24); else 
                                                                    
#line 1653 
                                                                    context->coeff[tmp] = __fswab32(*((__be32 *)(cipher + j)));
    
#line 1654 
    j += 4;
    ldv_52663: 
#line 1655 
    ;
    
#line 1652 
    if (j <= 15 && (unsigned int)i <= 599U) 
#line 1654 
                                            goto ldv_52662; else 
#line 1657 
                                                                 goto ldv_52664;
    ldv_52664: 
#line 1658 
    ;
  }
  ldv_52666: 
#line 1660 
  ;
  
#line 1643 
  if ((unsigned int)i <= 599U) 
#line 1645 
                               goto ldv_52665; else 
#line 1648 
                                                    goto ldv_52667;
  ldv_52667: 
#line 1649 
  ;
  
#line 1650 
  return;
}


#line 1660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void emmh32_init(emmh32_context *context)
{
  
#line 1663 
  context->accum = 0ULL;
  
#line 1664 
  context->position = 0;
  
#line 1665 
  return;
}


#line 1668  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void emmh32_update(emmh32_context *context, u8 *pOctets, int len)
{
  int coeff_position;
  int byte_position;
  unsigned int tmp_5;
  int tmp_6;
  int tmp_7;
  u8 *tmp_8;
  
#line 1672 
  if (len == 0) 
#line 1672 
                goto return_label; else ;
  
#line 1674 
  coeff_position = context->position >> 2;
  
#line 1677 
  byte_position = context->position & 3;
  
#line 1678 
  if (byte_position != 0) {
    int tmp;
    u8 *tmp_0;
    unsigned int tmp_2;
    int tmp_3;
    ldv_52678: 
#line 1680 
    ;
    
#line 1681 
    if (len == 0) 
#line 1681 
                  goto return_label; else ;
    
#line 1682 
    tmp = byte_position;
    
#line 1682 
    byte_position += 1;
    
#line 1682 
    tmp_0 = pOctets;
    
#line 1682 
    pOctets += 1;
    
#line 1682 
    context->part.d8[tmp] = *tmp_0;
    
#line 1683 
    context->position += 1;
    
#line 1684 
    len -= 1;
    
#line 1685 
    if (byte_position <= 3) 
#line 1687 
                            goto ldv_52678; else 
#line 1690 
                                                 goto ldv_52679;
    ldv_52679: 
#line 1691 
    ;
    
#line 1686 
    if (0 != 0) 
#line 1686 
                tmp_2 = (((context->part.d32 << 24) | ((context->part.d32 << 8) & 16711680U)) | ((context->part.d32 >> 8) & 65280U)) | (context->part.d32 >> 24); else 
                                                                    
#line 1686 
                                                                    tmp_2 = __fswab32(context->part.d32);
    
#line 1686 
    tmp_3 = coeff_position;
    
#line 1686 
    coeff_position += 1;
    
#line 1686 
    context->accum += (unsigned long long)tmp_2 * (unsigned long long)context->coeff[tmp_3];
  }
  else ;
  
#line 1690 
  goto ldv_52681;
  ldv_52680: 
#line 1691 
  ;
  
#line 1691 
  if (0 != 0) 
#line 1691 
              tmp_5 = (((*((__be32 *)pOctets) << 24) | ((*((__be32 *)pOctets) << 8) & 16711680U)) | ((*((__be32 *)pOctets) >> 8) & 65280U)) | (*((__be32 *)pOctets) >> 24); else 
                                                                    
#line 1691 
                                                                    tmp_5 = __fswab32(*((__be32 *)pOctets));
  
#line 1691 
  tmp_6 = coeff_position;
  
#line 1691 
  coeff_position += 1;
  
#line 1691 
  context->accum += (unsigned long long)tmp_5 * (unsigned long long)context->coeff[tmp_6];
  
#line 1692 
  context->position += 4;
  
#line 1693 
  pOctets += 4U;
  
#line 1694 
  len += -4;
  ldv_52681: 
#line 1695 
  ;
  
#line 1690 
  if (len > 3) 
#line 1692 
               goto ldv_52680; else 
#line 1695 
                                    goto ldv_52682;
  ldv_52682: 
#line 1696 
  ;
  
#line 1698 
  byte_position = 0;
  
#line 1699 
  goto ldv_52684;
  ldv_52683: 
#line 1700 
  ;
  
#line 1700 
  tmp_7 = byte_position;
  
#line 1700 
  byte_position += 1;
  
#line 1700 
  tmp_8 = pOctets;
  
#line 1700 
  pOctets += 1;
  
#line 1700 
  context->part.d8[tmp_7] = *tmp_8;
  
#line 1701 
  context->position += 1;
  
#line 1702 
  len -= 1;
  ldv_52684: 
#line 1703 
  ;
  
#line 1699 
  if (len > 0) 
#line 1701 
               goto ldv_52683; else 
#line 1704 
                                    goto ldv_52685;
  ldv_52685: 
#line 1705 
  ;
  return_label: 
#line 1706 
                return;
}


#line 1707  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u32 mask32[4U] = {0U, 4278190080U, 4294901760U, 4294967040U};

#line 1710  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void emmh32_final(emmh32_context *context, u8 *digest)
{
  int coeff_position;
  int byte_position;
  u32 val;
  u64 sum;
  u64 utmp;
  s64 stmp;
  
#line 1718 
  coeff_position = context->position >> 2;
  
#line 1721 
  byte_position = context->position & 3;
  
#line 1722 
  if (byte_position != 0) {
    int tmp_0;
    
#line 1724 
    if (0 != 0) 
#line 1724 
                val = (((context->part.d32 << 24) | ((context->part.d32 << 8) & 16711680U)) | ((context->part.d32 >> 8) & 65280U)) | (context->part.d32 >> 24); else 
                                                                    
#line 1724 
                                                                    val = __fswab32(context->part.d32);
    
#line 1725 
    tmp_0 = coeff_position;
    
#line 1725 
    coeff_position += 1;
    
#line 1725 
    context->accum += (unsigned long long)(mask32[byte_position] & val) * (unsigned long long)context->coeff[tmp_0];
  }
  else ;
  
#line 1729 
  sum = context->accum;
  
#line 1730 
  stmp = (long long)((sum & 4294967295ULL) - (sum >> 32) * 15ULL);
  
#line 1731 
  utmp = (unsigned long long)((stmp & 4294967295LL) + (stmp >> 32) * -15LL);
  
#line 1732 
  sum = utmp & 4294967295ULL;
  
#line 1733 
  if (utmp > 4294967311ULL) 
#line 1734 
                            sum += 18446744073709551601ULL; else ;
  
#line 1736 
  val = (unsigned int)sum;
  
#line 1737 
  *digest = (unsigned char)(val >> 24);
  
#line 1738 
  *(digest + 1U) = (unsigned char)(val >> 16);
  
#line 1739 
  *(digest + 2U) = (unsigned char)(val >> 8);
  
#line 1740 
  *(digest + 3U) = (unsigned char)val;
  
#line 1741 
  return;
}


#line 1743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readBSSListRid(struct airo_info *ai, int first, BSSListRid *list)
{
  int __retres;
  Cmd cmd;
  Resp rsp;
  int tmp_1;
  int tmp_0;
  
#line 1749 
  if (first == 1) {
    int tmp;
    
#line 1750 
    if ((ai->flags & 3UL) != 0UL) {
      
#line 1750 
      __retres = -100;
      
#line 1750 
      goto return_label;
    }
    else ;
    
#line 1751 
    memset((void *)(& cmd),0,8UL);
    
#line 1752 
    cmd.cmd = (unsigned short)259U;
    
#line 1753 
    tmp = down_interruptible(& ai->sem);
    
#line 1753 
    if (tmp != 0) {
      
#line 1754 
      __retres = -512;
      
#line 1754 
      goto return_label;
    }
    else ;
    
#line 1755 
    ai->list_bss_task = get_current();
    
#line 1756 
    issuecommand(ai,& cmd,& rsp);
    
#line 1757 
    up(& ai->sem);
    
#line 1759 
    schedule_timeout_uninterruptible(750L);
    
#line 1760 
    ai->list_bss_task = (struct task_struct *)0;
  }
  else ;
  
#line 1762 
  ;
  
#line 1762 
  ;
  
#line 1762 
  if (first != 0) 
#line 1762 
                  tmp_0 = (int)((unsigned short)ai->bssListFirst); else 
                                                                    
#line 1762 
                                                                    tmp_0 = (int)((unsigned short)ai->bssListNext);
  
#line 1762 
  ;
  
#line 1762 
  tmp_1 = PC4500_readrid(ai,(unsigned short)tmp_0,(void *)list,(int)ai->bssListRidLen,1);
  
#line 1762 
  __retres = tmp_1;
  return_label: 
#line 1762 
                return __retres;
}


#line 1766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readWepKeyRid(struct airo_info *ai, WepKeyRid *wkr, int temp, int lock)
{
  int tmp_0;
  unsigned int tmp;
  
#line 1768 
  ;
  
#line 1768 
  ;
  
#line 1768 
  if (temp != 0) 
#line 1768 
                 tmp = 65301U; else 
#line 1768 
                                    tmp = 65302U;
  
#line 1768 
  ;
  
#line 1768 
  tmp_0 = PC4500_readrid(ai,(unsigned short)((int)tmp),(void *)wkr,28,lock);
  
#line 1768 
  return tmp_0;
}


#line 1772  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int writeWepKeyRid(struct airo_info *ai, WepKeyRid *wkr, int perm, int lock)
{
  int rc;
  
#line 1775 
  rc = PC4500_writerid(ai,(unsigned short)65301,(void const *)wkr,28,lock);
  
#line 1776 
  if (rc != 0) 
#line 1777 
               printk("\001",(char *)(& (ai->dev)->name),rc); else ;
  
#line 1778 
  if (perm != 0) {
    
#line 1779 
    rc = PC4500_writerid(ai,(unsigned short)65302,(void const *)wkr,28,lock);
    
#line 1780 
    if (rc != 0) 
#line 1781 
                 printk("\001",(char *)(& (ai->dev)->name),rc); else ;
  }
  else ;
  
#line 1783 
  return rc;
}


#line 1786  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readSsidRid(struct airo_info *ai, SsidRid *ssidr)
{
  int tmp;
  
#line 1788 
  tmp = PC4500_readrid(ai,(unsigned short)65297,(void *)ssidr,104,1);
  
#line 1788 
  return tmp;
}


#line 1791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int writeSsidRid(struct airo_info *ai, SsidRid *pssidr, int lock)
{
  int tmp;
  
#line 1793 
  tmp = PC4500_writerid(ai,(unsigned short)65297,(void const *)pssidr,104,lock);
  
#line 1793 
  return tmp;
}


#line 1796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readConfigRid(struct airo_info *ai, int lock)
{
  int __retres;
  int rc;
  ConfigRid cfg;
  
#line 1801 
  if ((unsigned int)ai->config.len != 0U) {
    
#line 1802 
    __retres = 0;
    
#line 1802 
    goto return_label;
  }
  else ;
  
#line 1804 
  rc = PC4500_readrid(ai,(unsigned short)65312,(void *)(& cfg),156,lock);
  
#line 1805 
  if (rc != 0) {
    
#line 1806 
    __retres = rc;
    
#line 1806 
    goto return_label;
  }
  else ;
  
#line 1808 
  ai->config = cfg;
  
#line 1809 
  __retres = 0;
  return_label: 
#line 1809 
                return __retres;
}


#line 1812  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
__inline static void checkThrottle(struct airo_info *ai)
{
  int i;
  
#line 1816 
  if ((unsigned int)ai->config.authType != 1U && maxencrypt != 0) {
    
#line 1817 
    i = 0;
    
#line 1817 
    goto ldv_52737;
    ldv_52736: 
#line 1818 
    ;
    
#line 1818 
    if ((int)ai->config.rates[i] > maxencrypt) 
#line 1819 
                                               ai->config.rates[i] = (unsigned char)0U; else ;
    
#line 1817 
    i += 1;
    ldv_52737: 
#line 1818 
    ;
    
#line 1817 
    if (i <= 7) 
#line 1819 
                goto ldv_52736; else 
#line 1822 
                                     goto ldv_52738;
    ldv_52738: 
#line 1823 
    ;
  }
  else ;
  
#line 1825 
  return;
}


#line 1825  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int writeConfigRid(struct airo_info *ai, int lock)
{
  int __retres;
  ConfigRid cfgr;
  int tmp;
  int tmp_0;
  
#line 1829 
  tmp = constant_test_bit(13L,(unsigned long const volatile *)(& ai->flags));
  
#line 1829 
  if (tmp == 0) {
    
#line 1830 
    __retres = 0;
    
#line 1830 
    goto return_label;
  }
  else ;
  
#line 1832 
  set_bit(13L,(unsigned long volatile *)(& ai->flags));
  
#line 1833 
  set_bit(14L,(unsigned long volatile *)(& ai->flags));
  
#line 1834 
  checkThrottle(ai);
  
#line 1835 
  cfgr = ai->config;
  
#line 1837 
  if (((int)cfgr.opmode & 255) == 0) 
#line 1838 
                                     set_bit(3L,(unsigned long volatile *)(& ai->flags)); else 
                                                                    
#line 1840 
                                                                    set_bit(3L,(unsigned long volatile *)(& ai->flags));
  
#line 1842 
  tmp_0 = PC4500_writerid(ai,(unsigned short)65296,(void const *)(& cfgr),156,lock);
  
#line 1842 
  __retres = tmp_0;
  return_label: 
#line 1842 
                return __retres;
}


#line 1845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readStatusRid(struct airo_info *ai, StatusRid *statr, int lock)
{
  int tmp;
  
#line 1847 
  tmp = PC4500_readrid(ai,(unsigned short)65360,(void *)statr,136,lock);
  
#line 1847 
  return tmp;
}


#line 1850  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readAPListRid(struct airo_info *ai, APListRid *aplr)
{
  int tmp;
  
#line 1852 
  tmp = PC4500_readrid(ai,(unsigned short)65298,(void *)aplr,26,1);
  
#line 1852 
  return tmp;
}


#line 1855  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int writeAPListRid(struct airo_info *ai, APListRid *aplr, int lock)
{
  int tmp;
  
#line 1857 
  tmp = PC4500_writerid(ai,(unsigned short)65298,(void const *)aplr,26,lock);
  
#line 1857 
  return tmp;
}


#line 1860  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readCapabilityRid(struct airo_info *ai, CapabilityRid *capr, int lock)
{
  int tmp;
  
#line 1862 
  tmp = PC4500_readrid(ai,(unsigned short)65280,(void *)capr,132,lock);
  
#line 1862 
  return tmp;
}


#line 1865  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readStatsRid(struct airo_info *ai, StatsRid *sr, int rid, int lock)
{
  int tmp;
  
#line 1867 
  tmp = PC4500_readrid(ai,(unsigned short)((int)((unsigned short)rid)),(void *)sr,404,lock);
  
#line 1867 
  return tmp;
}


#line 1870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void try_auto_wep(struct airo_info *ai)
{
  
#line 1872 
  if (auto_wep != 0) {
    int tmp;
    
#line 1872 
    tmp = constant_test_bit(1L,(unsigned long const volatile *)(& ai->flags));
    
#line 1872 
    if (tmp == 0) {
      
#line 1873 
      ai->expires = jiffies + 750UL;
      
#line 1874 
      __wake_up(& ai->thr_wait,1U,1,(void *)0);
    }
    else ;
  }
  else ;
  
#line 1876 
  return;
}


#line 1878  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_open(struct net_device *dev)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 1879 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 1880 
  int rc = 0;
  
#line 1882 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& ai->flags));
  
#line 1882 
  if (tmp != 0) {
    
#line 1883 
    __retres = -5;
    
#line 1883 
    goto return_label;
  }
  else ;
  
#line 1889 
  tmp_0 = constant_test_bit(13L,(unsigned long const volatile *)(& ai->flags));
  
#line 1889 
  if (tmp_0 != 0) {
    
#line 1890 
    disable_MAC(ai,1);
    
#line 1891 
    writeConfigRid(ai,1);
  }
  else ;
  
#line 1894 
  if (ai->wifidev != dev) {
    struct task_struct *tmp_4;
    bool tmp_6;
    
#line 1895 
    set_bit(0L,(unsigned long volatile *)(& ai->jobs));
    {
      
#line 1896 
      struct task_struct *__k = ldv_kthread_create_on_node_72(& airo_thread,(void *)dev,-1,"%s",(char *)(& dev->name));
      {
        int tmp_3;
        bool tmp_2;
        
#line 1896 
        tmp_2 = IS_ERR((void const *)__k);
        
#line 1896 
        if (tmp_2) 
#line 1896 
                   tmp_3 = 0; else 
#line 1896 
                                   tmp_3 = 1;
        
#line 1896 
        if (tmp_3) 
#line 1896 
                   wake_up_process(__k); else ;
      }
      
#line 1896 
      tmp_4 = __k;
    }
    
#line 1896 
    ai->airo_thread_task = tmp_4;
    
#line 1898 
    tmp_6 = IS_ERR((void const *)ai->airo_thread_task);
    
#line 1898 
    if ((int)tmp_6 != 0) {
      long tmp_5;
      
#line 1899 
      tmp_5 = PTR_ERR((void const *)ai->airo_thread_task);
      
#line 1899 
      __retres = (int)tmp_5;
      
#line 1899 
      goto return_label;
    }
    else ;
    
#line 1901 
    rc = ldv_request_irq_73((unsigned int)dev->irq,& airo_interrupt,128UL,(char const *)(& dev->name),(void *)dev);
    
#line 1903 
    if (rc != 0) {
      
#line 1904 
      printk("\001",(char *)(& dev->name),dev->irq,rc);
      
#line 1907 
      set_bit(0L,(unsigned long volatile *)(& ai->jobs));
      
#line 1908 
      kthread_stop(ai->airo_thread_task);
      
#line 1909 
      __retres = rc;
      
#line 1909 
      goto return_label;
    }
    else ;
    
#line 1913 
    set_bit(1L,(unsigned long volatile *)(& ai->flags));
    
#line 1914 
    enable_interrupts(ai);
    
#line 1916 
    try_auto_wep(ai);
  }
  else ;
  
#line 1918 
  enable_MAC(ai,1);
  
#line 1920 
  netif_start_queue(dev);
  
#line 1921 
  __retres = 0;
  return_label: 
#line 1921 
                return __retres;
}


#line 1924  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static netdev_tx_t mpi_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  int npacks;
  int pending;
  unsigned long flags;
  __u32 tmp;
  
#line 1929 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 1931 
  if (skb == (struct sk_buff *)0) {
    
#line 1932 
    printk("\001",(char *)(& dev->name),"mpi_start_xmit");
    
#line 1933 
    __retres = NETDEV_TX_OK;
    
#line 1933 
    goto return_label;
  }
  else ;
  
#line 1935 
  tmp = skb_queue_len((struct sk_buff_head const *)(& ai->txq));
  
#line 1935 
  npacks = (int)tmp;
  
#line 1937 
  if (npacks > 62) {
    
#line 1938 
    netif_start_queue(dev);
    
#line 1939 
    if (npacks > 64) {
      
#line 1940 
      dev->stats.tx_fifo_errors += 1UL;
      
#line 1941 
      __retres = NETDEV_TX_BUSY;
      
#line 1941 
      goto return_label;
    }
    else ;
    
#line 1943 
    skb_queue_tail(& ai->txq,skb);
    
#line 1944 
    __retres = NETDEV_TX_OK;
    
#line 1944 
    goto return_label;
  }
  else ;
  
#line 1947 
  ldv___ldv_spin_lock_74(& ai->aux_lock);
  
#line 1948 
  skb_queue_tail(& ai->txq,skb);
  
#line 1949 
  pending = constant_test_bit(9L,(unsigned long const volatile *)(& ai->flags));
  
#line 1950 
  ldv_spin_unlock_irqrestore_75(& ai->aux_lock,flags);
  
#line 1951 
  netif_wake_queue(dev);
  
#line 1953 
  if (pending == 0) {
    
#line 1954 
    set_bit(9L,(unsigned long volatile *)(& ai->flags));
    
#line 1955 
    mpi_send_packet(dev);
  }
  else ;
  
#line 1957 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1957 
                return __retres;
}


#line 1967  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int mpi_send_packet(struct net_device *dev)
{
  int __retres;
  struct sk_buff *skb;
  unsigned char *buffer;
  s16 len;
  __le16 *payloadLen;
  u8 *sendbuf;
  unsigned int tmp;
  int tmp_1;
  
#line 1973 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 1978 
  skb = skb_dequeue(& ai->txq);
  
#line 1978 
  if (skb == (struct sk_buff *)0) {
    
#line 1979 
    printk("\001",(char *)(& dev->name),"mpi_send_packet");
    
#line 1982 
    __retres = 0;
    
#line 1982 
    goto return_label;
  }
  else ;
  
#line 1986 
  if (60U > skb->len) 
#line 1986 
                      tmp = 60U; else 
#line 1986 
                                      tmp = skb->len;
  
#line 1986 
  len = (short)tmp;
  
#line 1987 
  buffer = skb->data;
  
#line 1989 
  ai->txfids[0].tx_desc.offset = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))0U;
  
#line 1990 
  ai->txfids[0].tx_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1991 
  ai->txfids[0].tx_desc.eoc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1992 
  ai->txfids[0].tx_desc.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))((unsigned int)((unsigned short)len) + 30U);
  
#line 2002 
  memcpy((void *)ai->txfids[0].virtual_host_addr,(void const *)(& wifictlhdr8023),54UL);
  
#line 2005 
  payloadLen = (__le16 *)(ai->txfids[0].virtual_host_addr + 54U);
  
#line 2007 
  sendbuf = (u8 *)(ai->txfids[0].virtual_host_addr + 56U);
  
#line 2014 
  tmp_1 = constant_test_bit(4L,(unsigned long const volatile *)(& ai->flags));
  
#line 2014 
  if (tmp_1 != 0) {
    
#line 2014 
    if ((unsigned int)ai->micstats.enabled != 0U) {
      int tmp_3;
      
#line 2014 
      if (0 != 0) 
#line 2014 
                  tmp_3 = (((int)*((__be16 *)buffer + 6U) << 8) | ((int)*((__be16 *)buffer + 6U) >> 8)) != -30578;
      else {
        __u16 tmp_2;
        
#line 2015 
        tmp_2 = __fswab16((unsigned short)((int)*((__be16 *)buffer + 6U)));
        
#line 2014 
        tmp_3 = (unsigned int)tmp_2 != 34958U;
      }
      
#line 2014 
      if (tmp_3) {
        MICBuffer pMic;
        int tmp_0;
        
#line 2018 
        tmp_0 = encapsulate(ai,(etherHead *)buffer,& pMic,(int)((unsigned int)len + 4294967284U));
        
#line 2018 
        if (tmp_0 != 0) {
          
#line 2019 
          __retres = -1;
          
#line 2019 
          goto return_label;
        }
        else ;
        
#line 2021 
        *payloadLen = (unsigned short)((unsigned int)((unsigned short)len) + 6U);
        
#line 2022 
        ai->txfids[0].tx_desc.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))((unsigned int)((unsigned short)ai->txfids[0].tx_desc.len) + 18U);
        
#line 2024 
        memcpy((void *)sendbuf,(void const *)buffer,12UL);
        
#line 2025 
        buffer += 12U;
        
#line 2026 
        sendbuf += 12U;
        
#line 2027 
        memcpy((void *)sendbuf,(void const *)(& pMic),18UL);
        
#line 2028 
        sendbuf += 18U;
        
#line 2029 
        memcpy((void *)sendbuf,(void const *)buffer,(unsigned long)len + 18446744073709551604UL);
      }
      else 
#line 2014 
           goto _LAND_0;
    }
    else 
#line 2014 
         goto _LAND_0;
  }
  else {
    _LAND_0: {
               
#line 2031 
               *payloadLen = (unsigned short)((unsigned int)((unsigned short)len) + 65524U);
               
#line 2033 
               dev->trans_start = jiffies;
               
#line 2036 
               memcpy((void *)sendbuf,(void const *)buffer,(unsigned long)len);
             }
  }
  
#line 2039 
  memcpy_toio((void volatile *)ai->txfids[0].card_ram_off,(void const *)(& ai->txfids[0].tx_desc),16UL);
  
#line 2042 
  OUT4500(ai,(unsigned short)52,(unsigned short)8);
  
#line 2044 
  dev_kfree_skb_any(skb);
  
#line 2045 
  __retres = 1;
  return_label: 
#line 2045 
                return __retres;
}


#line 2048  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void get_tx_error(struct airo_info *ai, s32 fid)
{
  __le16 status;
  
#line 2052 
  if (fid < 0) 
#line 2053 
               status = ((WifiCtlHdr *)ai->txfids[0].virtual_host_addr)->ctlhdr.status;
  else {
    int tmp;
    
#line 2055 
    tmp = bap_setup(ai,(unsigned short)((int)((unsigned short)ai->fids[fid])),(unsigned short)4,0);
    
#line 2055 
    if (tmp != 0) 
#line 2056 
                  goto return_label; else ;
    
#line 2057 
    bap_read(ai,& status,2,0);
  }
  
#line 2059 
  if (((int)status & 2) != 0) 
#line 2060 
                              (ai->dev)->stats.tx_aborted_errors += 1UL; else ;
  
#line 2061 
  if (((int)status & 4) != 0) 
#line 2062 
                              (ai->dev)->stats.tx_heartbeat_errors += 1UL; else ;
  
#line 2063 
  if (((int)status & 8) != 0) ; else ;
  
#line 2065 
  if (((int)status & 16) != 0) 
#line 2066 
                               (ai->dev)->stats.tx_carrier_errors += 1UL; else ;
  
#line 2067 
  if (((int)status & 32) != 0) ; else ;
  
#line 2073 
  if (((int)status & 2) != 0 || ((int)status & 4) != 0) {
    union iwreq_data wrqu;
    char junk[24U];
    
#line 2081 
    bap_read(ai,(__le16 *)(& junk),24,0);
    
#line 2091 
    memcpy((void *)(& wrqu.addr.sa_data),(void const *)(& junk) + 18U,6UL);
    
#line 2092 
    wrqu.addr.sa_family = (unsigned short)1U;
    
#line 2095 
    wireless_send_event(ai->dev,35840U,& wrqu,(char const *)0);
  }
  else ;
  return_label: 
#line 2097 
                return;
}


#line 2099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_end_xmit(struct net_device *dev)
{
  u16 status;
  int i;
  int tmp;
  
#line 2102 
  struct airo_info *priv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2103 
  struct sk_buff *skb = priv->xmit.skb;
  
#line 2104 
  int fid = priv->xmit.fid;
  
#line 2105 
  u32 *fids = (u32 *)(& priv->fids);
  
#line 2107 
  set_bit(1L,(unsigned long volatile *)(& priv->jobs));
  
#line 2108 
  set_bit(9L,(unsigned long volatile *)(& priv->flags));
  
#line 2109 
  tmp = transmit_802_3_packet(priv,(int)*(fids + fid),(char *)skb->data);
  
#line 2109 
  status = (unsigned short)tmp;
  
#line 2110 
  up(& priv->sem);
  
#line 2112 
  i = 0;
  
#line 2113 
  if ((unsigned int)status == 0U) {
    
#line 2114 
    dev->trans_start = jiffies;
    
#line 2115 
    goto ldv_52816;
    ldv_52815: 
#line 2116 
    ;
    
#line 2115 
    i += 1;
    ldv_52816: 
#line 2116 
    ;
    
#line 2115 
    if (i <= 2 && (priv->fids[i] & 4294901760U) != 0U) 
#line 2117 
                                                       goto ldv_52815; else 
                                                                    
#line 2120 
                                                                    goto ldv_52817;
    ldv_52817: 
#line 2121 
    ;
  }
  else {
    
#line 2117 
    priv->fids[fid] &= 65535U;
    
#line 2118 
    dev->stats.tx_window_errors += 1UL;
  }
  
#line 2120 
  if (i <= 2) 
#line 2121 
              netif_wake_queue(dev); else ;
  
#line 2122 
  consume_skb(skb);
  
#line 2123 
  return;
}


#line 2125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static netdev_tx_t airo_start_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  s16 len;
  int i;
  int j;
  unsigned int tmp;
  int tmp_0;
  
#line 2130 
  struct airo_info *priv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2131 
  u32 *fids = (u32 *)(& priv->fids);
  
#line 2133 
  if (skb == (struct sk_buff *)0) {
    
#line 2134 
    printk("\001",(char *)(& dev->name),"airo_start_xmit");
    
#line 2135 
    __retres = NETDEV_TX_OK;
    
#line 2135 
    goto return_label;
  }
  else ;
  
#line 2139 
  i = 0;
  
#line 2139 
  goto ldv_52829;
  ldv_52828: 
#line 2140 
  ;
  
#line 2139 
  i += 1;
  ldv_52829: 
#line 2140 
  ;
  
#line 2139 
  if (i <= 2 && (*(fids + i) & 4294901760U) != 0U) 
#line 2141 
                                                   goto ldv_52828; else 
                                                                    
#line 2144 
                                                                    goto ldv_52830;
  ldv_52830: 
#line 2145 
  ;
  
#line 2140 
  j = i + 1;
  
#line 2140 
  goto ldv_52832;
  ldv_52831: 
#line 2141 
  ;
  
#line 2140 
  j += 1;
  ldv_52832: 
#line 2141 
  ;
  
#line 2140 
  if (j <= 2 && (*(fids + j) & 4294901760U) != 0U) 
#line 2142 
                                                   goto ldv_52831; else 
                                                                    
#line 2145 
                                                                    goto ldv_52833;
  ldv_52833: 
#line 2146 
  ;
  
#line 2142 
  if (j > 2) {
    
#line 2143 
    netif_start_queue(dev);
    
#line 2145 
    if (i == 3) {
      
#line 2146 
      dev->stats.tx_fifo_errors += 1UL;
      
#line 2147 
      __retres = NETDEV_TX_BUSY;
      
#line 2147 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2151 
  if (60U > skb->len) 
#line 2151 
                      tmp = 60U; else 
#line 2151 
                                      tmp = skb->len;
  
#line 2151 
  len = (short)tmp;
  
#line 2153 
  *(fids + i) |= (unsigned int)((int)len << 16);
  
#line 2154 
  priv->xmit.skb = skb;
  
#line 2155 
  priv->xmit.fid = i;
  
#line 2156 
  tmp_0 = down_trylock(& priv->sem);
  
#line 2156 
  if (tmp_0 != 0) {
    
#line 2157 
    set_bit(9L,(unsigned long volatile *)(& priv->flags));
    
#line 2158 
    netif_start_queue(dev);
    
#line 2159 
    set_bit(1L,(unsigned long volatile *)(& priv->jobs));
    
#line 2160 
    __wake_up(& priv->thr_wait,1U,1,(void *)0);
  }
  else 
#line 2162 
       airo_end_xmit(dev);
  
#line 2163 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2163 
                return __retres;
}


#line 2166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_end_xmit11(struct net_device *dev)
{
  u16 status;
  int i;
  int tmp;
  
#line 2169 
  struct airo_info *priv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2170 
  struct sk_buff *skb = priv->xmit11.skb;
  
#line 2171 
  int fid = priv->xmit11.fid;
  
#line 2172 
  u32 *fids = (u32 *)(& priv->fids);
  
#line 2174 
  set_bit(2L,(unsigned long volatile *)(& priv->jobs));
  
#line 2175 
  set_bit(10L,(unsigned long volatile *)(& priv->flags));
  
#line 2176 
  tmp = transmit_802_11_packet(priv,(int)*(fids + fid),(char *)skb->data);
  
#line 2176 
  status = (unsigned short)tmp;
  
#line 2177 
  up(& priv->sem);
  
#line 2179 
  i = 3;
  
#line 2180 
  if ((unsigned int)status == 0U) {
    
#line 2181 
    dev->trans_start = jiffies;
    
#line 2182 
    goto ldv_52844;
    ldv_52843: 
#line 2183 
    ;
    
#line 2182 
    i += 1;
    ldv_52844: 
#line 2183 
    ;
    
#line 2182 
    if (i <= 5 && (priv->fids[i] & 4294901760U) != 0U) 
#line 2184 
                                                       goto ldv_52843; else 
                                                                    
#line 2187 
                                                                    goto ldv_52845;
    ldv_52845: 
#line 2188 
    ;
  }
  else {
    
#line 2184 
    priv->fids[fid] &= 65535U;
    
#line 2185 
    dev->stats.tx_window_errors += 1UL;
  }
  
#line 2187 
  if (i <= 5) 
#line 2188 
              netif_wake_queue(dev); else ;
  
#line 2189 
  consume_skb(skb);
  
#line 2190 
  return;
}


#line 2192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static netdev_tx_t airo_start_xmit11(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  s16 len;
  int i;
  int j;
  int tmp;
  unsigned int tmp_0;
  int tmp_1;
  
#line 2197 
  struct airo_info *priv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2198 
  u32 *fids = (u32 *)(& priv->fids);
  
#line 2200 
  tmp = constant_test_bit(11L,(unsigned long const volatile *)(& priv->flags));
  
#line 2200 
  if (tmp != 0) {
    
#line 2202 
    netif_start_queue(dev);
    
#line 2203 
    dev_kfree_skb_any(skb);
    
#line 2204 
    __retres = NETDEV_TX_OK;
    
#line 2204 
    goto return_label;
  }
  else ;
  
#line 2207 
  if (skb == (struct sk_buff *)0) {
    
#line 2208 
    printk("\001",(char *)(& dev->name),"airo_start_xmit11");
    
#line 2209 
    __retres = NETDEV_TX_OK;
    
#line 2209 
    goto return_label;
  }
  else ;
  
#line 2213 
  i = 3;
  
#line 2213 
  goto ldv_52857;
  ldv_52856: 
#line 2214 
  ;
  
#line 2213 
  i += 1;
  ldv_52857: 
#line 2214 
  ;
  
#line 2213 
  if (i <= 5 && (*(fids + i) & 4294901760U) != 0U) 
#line 2215 
                                                   goto ldv_52856; else 
                                                                    
#line 2218 
                                                                    goto ldv_52858;
  ldv_52858: 
#line 2219 
  ;
  
#line 2214 
  j = i + 1;
  
#line 2214 
  goto ldv_52860;
  ldv_52859: 
#line 2215 
  ;
  
#line 2214 
  j += 1;
  ldv_52860: 
#line 2215 
  ;
  
#line 2214 
  if (j <= 5 && (*(fids + j) & 4294901760U) != 0U) 
#line 2216 
                                                   goto ldv_52859; else 
                                                                    
#line 2219 
                                                                    goto ldv_52861;
  ldv_52861: 
#line 2220 
  ;
  
#line 2216 
  if (j > 5) {
    
#line 2217 
    netif_start_queue(dev);
    
#line 2219 
    if (i == 6) {
      
#line 2220 
      dev->stats.tx_fifo_errors += 1UL;
      
#line 2221 
      __retres = NETDEV_TX_BUSY;
      
#line 2221 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2225 
  if (60U > skb->len) 
#line 2225 
                      tmp_0 = 60U; else 
#line 2225 
                                        tmp_0 = skb->len;
  
#line 2225 
  len = (short)tmp_0;
  
#line 2227 
  *(fids + i) |= (unsigned int)((int)len << 16);
  
#line 2228 
  priv->xmit11.skb = skb;
  
#line 2229 
  priv->xmit11.fid = i;
  
#line 2230 
  tmp_1 = down_trylock(& priv->sem);
  
#line 2230 
  if (tmp_1 != 0) {
    
#line 2231 
    set_bit(10L,(unsigned long volatile *)(& priv->flags));
    
#line 2232 
    netif_start_queue(dev);
    
#line 2233 
    set_bit(2L,(unsigned long volatile *)(& priv->jobs));
    
#line 2234 
    __wake_up(& priv->thr_wait,1U,1,(void *)0);
  }
  else 
#line 2236 
       airo_end_xmit11(dev);
  
#line 2237 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 2237 
                return __retres;
}


#line 2240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_read_stats(struct net_device *dev)
{
  StatsRid stats_rid;
  
#line 2242 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2244 
  __le32 *vals = (__le32 *)(& stats_rid.vals);
  
#line 2246 
  set_bit(3L,(unsigned long volatile *)(& ai->jobs));
  
#line 2247 
  if (ai->power.event != 0) {
    
#line 2248 
    up(& ai->sem);
    
#line 2249 
    goto return_label;
  }
  else ;
  
#line 2251 
  readStatsRid(ai,& stats_rid,65384,0);
  
#line 2252 
  up(& ai->sem);
  
#line 2254 
  dev->stats.rx_packets = (unsigned long)((*(vals + 43U) + *(vals + 44U)) + *(vals + 45U));
  
#line 2256 
  dev->stats.tx_packets = (unsigned long)((*(vals + 39U) + *(vals + 40U)) + *(vals + 41U));
  
#line 2258 
  dev->stats.rx_bytes = (unsigned long)*(vals + 92U);
  
#line 2259 
  dev->stats.tx_bytes = (unsigned long)*(vals + 91U);
  
#line 2260 
  dev->stats.rx_errors = (unsigned long)(((*vals + *(vals + 2U)) + *(vals + 3U)) + *(vals + 4U));
  
#line 2262 
  dev->stats.tx_errors = (unsigned long)*(vals + 42U) + dev->stats.tx_fifo_errors;
  
#line 2264 
  dev->stats.multicast = (unsigned long)*(vals + 43U);
  
#line 2265 
  dev->stats.collisions = (unsigned long)*(vals + 89U);
  
#line 2268 
  dev->stats.rx_length_errors = (unsigned long)*(vals + 3U);
  
#line 2269 
  dev->stats.rx_crc_errors = (unsigned long)*(vals + 4U);
  
#line 2270 
  dev->stats.rx_frame_errors = (unsigned long)*(vals + 2U);
  
#line 2271 
  dev->stats.rx_fifo_errors = (unsigned long)*vals;
  return_label: 
#line 2272 
                return;
}


#line 2274  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct net_device_stats *airo_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  int tmp_0;
  
#line 2276 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2278 
  tmp_0 = constant_test_bit(3L,(unsigned long const volatile *)(& local->jobs));
  
#line 2278 
  if (tmp_0 == 0) {
    int tmp;
    
#line 2280 
    tmp = down_trylock(& local->sem);
    
#line 2280 
    if (tmp != 0) {
      
#line 2281 
      set_bit(3L,(unsigned long volatile *)(& local->jobs));
      
#line 2282 
      __wake_up(& local->thr_wait,1U,1,(void *)0);
    }
    else 
#line 2284 
         airo_read_stats(dev);
  }
  else ;
  
#line 2287 
  __retres = & dev->stats;
  
#line 2287 
  return __retres;
}


#line 2290  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_set_promisc(struct airo_info *ai)
{
  Cmd cmd;
  Resp rsp;
  
#line 2294 
  memset((void *)(& cmd),0,8UL);
  
#line 2295 
  cmd.cmd = (unsigned short)9U;
  
#line 2296 
  set_bit(4L,(unsigned long volatile *)(& ai->jobs));
  
#line 2297 
  if ((ai->flags & 256UL) != 0UL) 
#line 2297 
                                  cmd.parm0 = (unsigned short)65535U; else 
                                                                    
#line 2297 
                                                                    cmd.parm0 = (unsigned short)0U;
  
#line 2298 
  issuecommand(ai,& cmd,& rsp);
  
#line 2299 
  up(& ai->sem);
  
#line 2300 
  return;
}


#line 2302  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_set_multicast_list(struct net_device *dev)
{
  
#line 2303 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2305 
  if ((((unsigned long)dev->flags ^ ai->flags) & 256UL) != 0UL) {
    int tmp;
    
#line 2306 
    set_bit(8L,(unsigned long volatile *)(& ai->flags));
    
#line 2307 
    tmp = down_trylock(& ai->sem);
    
#line 2307 
    if (tmp != 0) {
      
#line 2308 
      set_bit(4L,(unsigned long volatile *)(& ai->jobs));
      
#line 2309 
      __wake_up(& ai->thr_wait,1U,1,(void *)0);
    }
    else 
#line 2311 
         airo_set_promisc(ai);
  }
  else ;
  
#line 2314 
  if ((dev->flags & 512U) != 0U || dev->mc.count != 0) ; else ;
  
#line 2317 
  return;
}


#line 2319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_mac_address(struct net_device *dev, void *p)
{
  int __retres;
  
#line 2321 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2322 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 2324 
  readConfigRid(ai,1);
  
#line 2325 
  memcpy((void *)(& ai->config.macAddr),(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 2326 
  set_bit(13L,(unsigned long volatile *)(& ai->flags));
  
#line 2327 
  disable_MAC(ai,1);
  
#line 2328 
  writeConfigRid(ai,1);
  
#line 2329 
  enable_MAC(ai,1);
  
#line 2330 
  memcpy((void *)(ai->dev)->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 2331 
  if (ai->wifidev != (struct net_device *)0) 
#line 2332 
                                             memcpy((void *)(ai->wifidev)->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len); else ;
  
#line 2333 
  __retres = 0;
  
#line 2333 
  return __retres;
}


#line 2336  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  
#line 2338 
  if ((unsigned int)new_mtu + 4294967228U > 2332U) {
    
#line 2339 
    __retres = -22;
    
#line 2339 
    goto return_label;
  }
  else ;
  
#line 2340 
  dev->mtu = (unsigned int)new_mtu;
  
#line 2341 
  __retres = 0;
  return_label: 
#line 2341 
                return __retres;
}


#line 2344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct list_head airo_devices = {.next = & airo_devices, .prev = & airo_devices};

#line 2346  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void add_airo_dev(struct airo_info *ai)
{
  
#line 2350 
  if (ai->pci == (struct pci_dev *)0) 
#line 2351 
                                      list_add_tail(& ai->dev_list,& airo_devices); else ;
  
#line 2352 
  return;
}


#line 2354  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void del_airo_dev(struct airo_info *ai)
{
  
#line 2356 
  if (ai->pci == (struct pci_dev *)0) 
#line 2357 
                                      list_del(& ai->dev_list); else ;
  
#line 2358 
  return;
}


#line 2360  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_close(struct net_device *dev)
{
  int __retres;
  
#line 2361 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2363 
  netif_start_queue(dev);
  
#line 2365 
  if (ai->wifidev != dev) {
    
#line 2372 
    set_bit(1L,(unsigned long volatile *)(& ai->flags));
    
#line 2373 
    disable_MAC(ai,1);
    
#line 2375 
    disable_interrupts(ai);
    
#line 2377 
    ldv_free_irq_76((unsigned int)dev->irq,(void *)dev);
    
#line 2379 
    set_bit(0L,(unsigned long volatile *)(& ai->jobs));
    
#line 2380 
    kthread_stop(ai->airo_thread_task);
  }
  else ;
  
#line 2382 
  __retres = 0;
  
#line 2382 
  return __retres;
}


#line 2385  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
void stop_airo_card(struct net_device *dev, int freeres)
{
  int tmp;
  int tmp_0;
  
#line 2387 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2389 
  set_bit(1L,(unsigned long volatile *)(& ai->flags));
  
#line 2390 
  disable_MAC(ai,1);
  
#line 2391 
  disable_interrupts(ai);
  
#line 2392 
  takedown_proc_entry(dev,ai);
  
#line 2393 
  tmp = constant_test_bit(12L,(unsigned long const volatile *)(& ai->flags));
  
#line 2393 
  if (tmp != 0) {
    
#line 2394 
    ldv_unregister_netdev_77(dev);
    
#line 2395 
    if (ai->wifidev != (struct net_device *)0) {
      
#line 2396 
      ldv_unregister_netdev_78(ai->wifidev);
      
#line 2397 
      ldv_free_netdev_79(ai->wifidev);
      
#line 2398 
      ai->wifidev = (struct net_device *)0;
    }
    else ;
    
#line 2400 
    set_bit(12L,(unsigned long volatile *)(& ai->flags));
  }
  else ;
  
#line 2405 
  tmp_0 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 2405 
  if (tmp_0 != 0) {
    int tmp_1;
    
#line 2405 
    tmp_1 = skb_queue_empty((struct sk_buff_head const *)(& ai->txq));
    
#line 2405 
    if (tmp_1 == 0) {
      
#line 2406 
      struct sk_buff *skb = (struct sk_buff *)0;
      
#line 2407 
      goto ldv_52909;
      ldv_52908: 
#line 2408 
      ;
      
#line 2408 
      consume_skb(skb);
      ldv_52909: 
#line 2409 
      ;
      
#line 2407 
      skb = skb_dequeue(& ai->txq);
      
#line 2407 
      if (skb != (struct sk_buff *)0) 
#line 2409 
                                      goto ldv_52908; else 
#line 2412 
                                                           goto ldv_52910;
      ldv_52910: 
#line 2413 
      ;
    }
    else ;
  }
  else ;
  
#line 2411 
  airo_networks_free(ai);
  
#line 2413 
  kfree((void const *)ai->flash);
  
#line 2414 
  kfree((void const *)ai->rssi);
  
#line 2415 
  kfree((void const *)ai->APList);
  
#line 2416 
  kfree((void const *)ai->SSID);
  
#line 2417 
  if (freeres != 0) {
    int tmp_2;
    
#line 2419 
    __release_region(& ioport_resource,(unsigned long long)dev->base_addr,64ULL);
    
#line 2420 
    tmp_2 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
    
#line 2420 
    if (tmp_2 != 0) {
      
#line 2421 
      if (ai->pci != (struct pci_dev *)0) 
#line 2422 
                                          mpi_unmap_card(ai->pci); else ;
      
#line 2423 
      if (ai->pcimem != (unsigned char *)0U) 
#line 2424 
                                             iounmap((void volatile *)ai->pcimem); else ;
      
#line 2425 
      if (ai->pciaux != (unsigned char *)0U) 
#line 2426 
                                             iounmap((void volatile *)ai->pciaux); else ;
      
#line 2427 
      pci_free_consistent(ai->pci,5728UL,(void *)ai->shared,ai->shared_dma);
    }
    else ;
  }
  else ;
  
#line 2431 
  crypto_free_cipher(ai->tfm);
  
#line 2432 
  del_airo_dev(ai);
  
#line 2433 
  ldv_free_netdev_80(dev);
  
#line 2434 
  return;
}


#line 2436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const __kstrtab_stop_airo_card[15U] = {(char)'s', (char)'t', (char)'o', (char)'p', (char)'_', (char)'a', (char)'i', (char)'r', (char)'o', (char)'_', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'};

#line 2436 
struct kernel_symbol const __ksymtab_stop_airo_card;


#line 2436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct kernel_symbol const __ksymtab_stop_airo_card = {.value = (unsigned long)(& stop_airo_card), .name = (char const *)(& __kstrtab_stop_airo_card)};

#line 2438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int wll_header_parse(struct sk_buff const *skb, unsigned char *haddr)
{
  int __retres;
  unsigned char *tmp;
  
#line 2440 
  tmp = skb_mac_header(skb);
  
#line 2440 
  ;
  
#line 2440 
  memcpy((void *)haddr,(void const *)(tmp + 10U),6UL);
  
#line 2441 
  __retres = 6;
  
#line 2441 
  return __retres;
}


#line 2444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void mpi_unmap_card(struct pci_dev *pci)
{
  resource_size_t tmp;
  
#line 2446 
  unsigned long mem_start = (unsigned long)pci->resource[1].start;
  
#line 2447 
  if (pci->resource[1].start != 0ULL || pci->resource[1].end != pci->resource[1].start) 
    
#line 2447 
    tmp = (pci->resource[1].end - pci->resource[1].start) + 1ULL; else 
                                                                    
#line 2447 
                                                                    tmp = 0ULL;
  
#line 2447 
  unsigned long mem_len = (unsigned long)tmp;
  
#line 2448 
  unsigned long aux_start = (unsigned long)pci->resource[2].start;
  
#line 2449 
  unsigned long aux_len = 262144UL;
  
#line 2451 
  __release_region(& iomem_resource,(unsigned long long)aux_start,(unsigned long long)aux_len);
  
#line 2452 
  __release_region(& iomem_resource,(unsigned long long)mem_start,(unsigned long long)mem_len);
  
#line 2453 
  return;
}


#line 2462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int mpi_init_descriptors(struct airo_info *ai)
{
  int __retres;
  Cmd cmd;
  Resp rsp;
  int i;
  u16 tmp;
  u16 tmp_0;
  u16 tmp_1;
  
#line 2467 
  int rc = 0;
  
#line 2470 
  netif_start_queue(ai->dev);
  
#line 2472 
  memset((void *)(& rsp),0,8UL);
  
#line 2473 
  memset((void *)(& cmd),0,8UL);
  
#line 2475 
  cmd.cmd = (unsigned short)32U;
  
#line 2476 
  cmd.parm0 = (unsigned short)2U;
  
#line 2477 
  cmd.parm1 = (unsigned short)((long)ai->rxfids[0].card_ram_off - (long)ai->pciaux);
  
#line 2478 
  cmd.parm2 = (unsigned short)1U;
  
#line 2479 
  tmp = issuecommand(ai,& cmd,& rsp);
  
#line 2479 
  rc = (int)tmp;
  
#line 2480 
  if (rc != 0) {
    
#line 2481 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 2482 
    __retres = rc;
    
#line 2482 
    goto return_label;
  }
  else ;
  
#line 2485 
  i = 0;
  
#line 2485 
  goto ldv_52938;
  ldv_52937: 
#line 2486 
  ;
  
#line 2486 
  memcpy_toio((void volatile *)ai->rxfids[i].card_ram_off,(void const *)(& ai->rxfids[i].rx_desc),16UL);
  
#line 2485 
  i += 1;
  ldv_52938: 
#line 2486 
  ;
  
#line 2485 
  if (i <= 0) 
#line 2487 
              goto ldv_52937; else 
#line 2490 
                                   goto ldv_52939;
  ldv_52939: 
#line 2491 
  ;
  
#line 2492 
  memset((void *)(& rsp),0,8UL);
  
#line 2493 
  memset((void *)(& cmd),0,8UL);
  
#line 2495 
  cmd.cmd = (unsigned short)32U;
  
#line 2496 
  cmd.parm0 = (unsigned short)1U;
  
#line 2497 
  cmd.parm1 = (unsigned short)((long)ai->txfids[0].card_ram_off - (long)ai->pciaux);
  
#line 2498 
  cmd.parm2 = (unsigned short)1U;
  
#line 2500 
  i = 0;
  
#line 2500 
  goto ldv_52941;
  ldv_52940: 
#line 2501 
  ;
  
#line 2501 
  ai->txfids[i].tx_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2502 
  memcpy_toio((void volatile *)ai->txfids[i].card_ram_off,(void const *)(& ai->txfids[i].tx_desc),16UL);
  
#line 2500 
  i += 1;
  ldv_52941: 
#line 2501 
  ;
  
#line 2500 
  if (i <= 0) 
#line 2502 
              goto ldv_52940; else 
#line 2505 
                                   goto ldv_52942;
  ldv_52942: 
#line 2506 
  ;
  
#line 2505 
  ai->txfids[i + -1].tx_desc.eoc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2507 
  tmp_0 = issuecommand(ai,& cmd,& rsp);
  
#line 2507 
  rc = (int)tmp_0;
  
#line 2508 
  if (rc != 0) {
    
#line 2509 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 2510 
    __retres = rc;
    
#line 2510 
    goto return_label;
  }
  else ;
  
#line 2514 
  memset((void *)(& rsp),0,8UL);
  
#line 2515 
  memset((void *)(& cmd),0,8UL);
  
#line 2517 
  cmd.cmd = (unsigned short)32U;
  
#line 2518 
  cmd.parm0 = (unsigned short)32U;
  
#line 2519 
  cmd.parm1 = (unsigned short)((long)ai->config_desc.card_ram_off - (long)ai->pciaux);
  
#line 2520 
  cmd.parm2 = (unsigned short)1U;
  
#line 2521 
  tmp_1 = issuecommand(ai,& cmd,& rsp);
  
#line 2521 
  rc = (int)tmp_1;
  
#line 2522 
  if (rc != 0) {
    
#line 2523 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 2524 
    __retres = rc;
    
#line 2524 
    goto return_label;
  }
  else ;
  
#line 2527 
  memcpy_toio((void volatile *)ai->config_desc.card_ram_off,(void const *)(& ai->config_desc.rid_desc),16UL);
  
#line 2530 
  __retres = rc;
  return_label: 
#line 2530 
                return __retres;
}


#line 2539  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int mpi_map_card(struct airo_info *ai, struct pci_dev *pci)
{
  int __retres;
  unsigned long mem_start;
  unsigned long mem_len;
  unsigned long aux_start;
  unsigned long aux_len;
  int i;
  dma_addr_t busaddroff;
  unsigned char *vpackoff;
  unsigned char *pciaddroff;
  resource_size_t tmp;
  struct resource *tmp_0;
  struct resource *tmp_1;
  int tmp_5;
  
#line 2542 
  int rc = -1;
  
#line 2548 
  mem_start = (unsigned long)pci->resource[1].start;
  
#line 2549 
  if (pci->resource[1].start != 0ULL || pci->resource[1].end != pci->resource[1].start) 
    
#line 2549 
    tmp = (pci->resource[1].end - pci->resource[1].start) + 1ULL; else 
                                                                    
#line 2549 
                                                                    tmp = 0ULL;
  
#line 2549 
  mem_len = (unsigned long)tmp;
  
#line 2550 
  aux_start = (unsigned long)pci->resource[2].start;
  
#line 2551 
  aux_len = 262144UL;
  
#line 2553 
  tmp_0 = __request_region(& iomem_resource,(unsigned long long)mem_start,(unsigned long long)mem_len,"airo",0);
  
#line 2553 
  if (tmp_0 == (struct resource *)0) {
    
#line 2554 
    printk("\001",(char *)"",(int)mem_start,(int)mem_len);
    
#line 2556 
    goto out;
  }
  else ;
  
#line 2558 
  tmp_1 = __request_region(& iomem_resource,(unsigned long long)aux_start,(unsigned long long)aux_len,"airo",0);
  
#line 2558 
  if (tmp_1 == (struct resource *)0) {
    
#line 2559 
    printk("\001",(char *)"",(int)aux_start,(int)aux_len);
    
#line 2561 
    goto free_region1;
  }
  else ;
  
#line 2564 
  ai->pcimem = (unsigned char *)ioremap((unsigned long long)mem_start,mem_len);
  
#line 2565 
  if (ai->pcimem == (unsigned char *)0U) {
    
#line 2566 
    printk("\001",(char *)"",(int)mem_start,(int)mem_len);
    
#line 2568 
    goto free_region2;
  }
  else ;
  
#line 2570 
  ai->pciaux = (unsigned char *)ioremap((unsigned long long)aux_start,aux_len);
  
#line 2571 
  if (ai->pciaux == (unsigned char *)0U) {
    
#line 2572 
    printk("\001",(char *)"",(int)aux_start,(int)aux_len);
    
#line 2574 
    goto free_memmap;
  }
  else ;
  
#line 2578 
  ai->shared = (unsigned char *)pci_alloc_consistent(pci,5728UL,& ai->shared_dma);
  
#line 2579 
  if (ai->shared == (unsigned char *)0U) {
    
#line 2580 
    printk("\001",(char *)"",5728);
    
#line 2582 
    goto free_auxmap;
  }
  else ;
  
#line 2588 
  busaddroff = ai->shared_dma;
  
#line 2589 
  pciaddroff = ai->pciaux + 2048U;
  
#line 2590 
  vpackoff = ai->shared;
  
#line 2593 
  i = 0;
  
#line 2593 
  goto ldv_52962;
  ldv_52961: 
#line 2594 
  ;
  
#line 2594 
  ai->rxfids[i].pending = 0;
  
#line 2595 
  ai->rxfids[i].card_ram_off = pciaddroff;
  
#line 2596 
  ai->rxfids[i].virtual_host_addr = (char *)vpackoff;
  
#line 2597 
  ai->rxfids[i].rx_desc.host_addr = busaddroff;
  
#line 2598 
  ai->rxfids[i].rx_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2599 
  ai->rxfids[i].rx_desc.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))1840U;
  
#line 2600 
  ai->rxfids[i].rx_desc.rdy = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 2602 
  pciaddroff += 16U;
  
#line 2603 
  busaddroff += 1840ULL;
  
#line 2604 
  vpackoff += 1840U;
  
#line 2593 
  i += 1;
  ldv_52962: 
#line 2594 
  ;
  
#line 2593 
  if (i <= 0) 
#line 2595 
              goto ldv_52961; else 
#line 2598 
                                   goto ldv_52963;
  ldv_52963: 
#line 2599 
  ;
  
#line 2608 
  i = 0;
  
#line 2608 
  goto ldv_52965;
  ldv_52964: 
#line 2609 
  ;
  
#line 2609 
  ai->txfids[i].card_ram_off = pciaddroff;
  
#line 2610 
  ai->txfids[i].virtual_host_addr = (char *)vpackoff;
  
#line 2611 
  ai->txfids[i].tx_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2612 
  ai->txfids[i].tx_desc.host_addr = busaddroff;
  
#line 2613 
  memcpy((void *)ai->txfids[i].virtual_host_addr,(void const *)(& wifictlhdr8023),54UL);
  
#line 2616 
  pciaddroff += 16U;
  
#line 2617 
  busaddroff += 1840ULL;
  
#line 2618 
  vpackoff += 1840U;
  
#line 2608 
  i += 1;
  ldv_52965: 
#line 2609 
  ;
  
#line 2608 
  if (i <= 0) 
#line 2610 
              goto ldv_52964; else 
#line 2613 
                                   goto ldv_52966;
  ldv_52966: 
#line 2614 
  ;
  
#line 2620 
  ai->txfids[i + -1].tx_desc.eoc = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2623 
  ai->config_desc.card_ram_off = pciaddroff;
  
#line 2624 
  ai->config_desc.virtual_host_addr = (char *)vpackoff;
  
#line 2625 
  ai->config_desc.rid_desc.host_addr = busaddroff;
  
#line 2626 
  ai->ridbus = (unsigned long)busaddroff;
  
#line 2627 
  ai->config_desc.rid_desc.rid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))))0U;
  
#line 2628 
  ai->config_desc.rid_desc.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))2048U;
  
#line 2629 
  ai->config_desc.rid_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 2630 
  pciaddroff += 16U;
  
#line 2631 
  busaddroff += 2048ULL;
  
#line 2632 
  vpackoff += 2048U;
  
#line 2635 
  tmp_5 = mpi_init_descriptors(ai);
  
#line 2635 
  if (tmp_5 != 0) 
#line 2636 
                  goto free_shared; else ;
  
#line 2638 
  __retres = 0;
  
#line 2638 
  goto return_label;
  free_shared: 
#line 2639 
  ;
  
#line 2640 
  pci_free_consistent(pci,5728UL,(void *)ai->shared,ai->shared_dma);
  free_auxmap: 
#line 2641 
  ;
  
#line 2642 
  iounmap((void volatile *)ai->pciaux);
  free_memmap: 
#line 2643 
  ;
  
#line 2644 
  iounmap((void volatile *)ai->pcimem);
  free_region2: 
#line 2645 
  ;
  
#line 2646 
  __release_region(& iomem_resource,(unsigned long long)aux_start,(unsigned long long)aux_len);
  free_region1: 
#line 2647 
  ;
  
#line 2648 
  __release_region(& iomem_resource,(unsigned long long)mem_start,(unsigned long long)mem_len);
  out: 
#line 2649 
  ;
  
#line 2650 
  __retres = rc;
  return_label: 
#line 2650 
                return __retres;
}


#line 2653  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct header_ops const airo_header_ops = {.create = (int (*)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ))0, .parse = & wll_header_parse, .cache = (int (*)(struct neighbour const *, struct hh_cache *, __be16 ))0, .cache_update = (void (*)(struct hh_cache *, struct net_device const *, unsigned char const *))0};

#line 2657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct net_device_ops const airo11_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & airo_open, .ndo_stop = & airo_close, .ndo_start_xmit = & airo_start_xmit11, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = (void (*)(struct net_device *))0, .ndo_set_mac_address = & airo_set_mac_address, .ndo_validate_addr = (int (*)(struct net_device *))0, .ndo_do_ioctl = & airo_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & airo_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & airo_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2667  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void wifi_setup(struct net_device *dev)
{
  
#line 2669 
  dev->netdev_ops = & airo11_netdev_ops;
  
#line 2670 
  dev->header_ops = & airo_header_ops;
  
#line 2671 
  dev->wireless_handlers = & airo_handler_def;
  
#line 2673 
  dev->type = (unsigned short)801U;
  
#line 2674 
  dev->hard_header_len = (unsigned short)14U;
  
#line 2675 
  dev->mtu = 2312U;
  
#line 2676 
  dev->addr_len = (unsigned char)6U;
  
#line 2677 
  dev->tx_queue_len = 100UL;
  
#line 2679 
  eth_broadcast_addr((u8 *)(& dev->broadcast));
  
#line 2681 
  dev->flags = 4098U;
  
#line 2682 
  return;
}


#line 2684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct net_device *init_wifidev(struct airo_info *ai, struct net_device *ethdev)
{
  struct net_device *__retres;
  int err;
  
#line 2688 
  struct net_device *dev = ldv_alloc_netdev_mqs_81(0,"wifi%d",(unsigned char)0,& wifi_setup,1U,1U);
  
#line 2690 
  if (dev == (struct net_device *)0) {
    
#line 2691 
    __retres = (struct net_device *)0;
    
#line 2691 
    goto return_label;
  }
  else ;
  
#line 2692 
  dev->__anonCompField_net_device_94.ml_priv = ethdev->__anonCompField_net_device_94.ml_priv;
  
#line 2693 
  dev->irq = ethdev->irq;
  
#line 2694 
  dev->base_addr = ethdev->base_addr;
  
#line 2695 
  dev->wireless_data = ethdev->wireless_data;
  
#line 2696 
  dev->dev.parent = ethdev->dev.parent;
  
#line 2697 
  eth_hw_addr_inherit(dev,ethdev);
  
#line 2698 
  err = ldv_register_netdev_82(dev);
  
#line 2699 
  if (err < 0) {
    
#line 2700 
    ldv_free_netdev_83(dev);
    
#line 2701 
    __retres = (struct net_device *)0;
    
#line 2701 
    goto return_label;
  }
  else ;
  
#line 2703 
  __retres = dev;
  return_label: 
#line 2703 
                return __retres;
}


#line 2706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int reset_card(struct net_device *dev, int lock)
{
  int __retres;
  
#line 2707 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2709 
  if (lock != 0) {
    int tmp;
    
#line 2709 
    tmp = down_interruptible(& ai->sem);
    
#line 2709 
    if (tmp != 0) {
      
#line 2710 
      __retres = -1;
      
#line 2710 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 2711 
  waitbusy(ai);
  
#line 2712 
  OUT4500(ai,(unsigned short)0,(unsigned short)4);
  
#line 2713 
  msleep(200U);
  
#line 2714 
  waitbusy(ai);
  
#line 2715 
  msleep(200U);
  
#line 2716 
  if (lock != 0) 
#line 2717 
                 up(& ai->sem); else ;
  
#line 2718 
  __retres = 0;
  return_label: 
#line 2718 
                return __retres;
}


#line 2722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_networks_allocate(struct airo_info *ai)
{
  int __retres;
  
#line 2724 
  if (ai->networks != (BSSListElement *)0) {
    
#line 2725 
    __retres = 0;
    
#line 2725 
    goto return_label;
  }
  else ;
  
#line 2727 
  ai->networks = (BSSListElement *)kcalloc(64UL,736UL,208U);
  
#line 2729 
  if (ai->networks == (BSSListElement *)0) {
    
#line 2730 
    printk("\001",(char *)"");
    
#line 2731 
    __retres = -12;
    
#line 2731 
    goto return_label;
  }
  else ;
  
#line 2734 
  __retres = 0;
  return_label: 
#line 2734 
                return __retres;
}


#line 2737  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_networks_free(struct airo_info *ai)
{
  
#line 2739 
  kfree((void const *)ai->networks);
  
#line 2740 
  ai->networks = (BSSListElement *)0;
  
#line 2741 
  return;
}


#line 2743  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_networks_initialize(struct airo_info *ai)
{
  int i;
  
#line 2747 
  INIT_LIST_HEAD(& ai->network_free_list);
  
#line 2748 
  INIT_LIST_HEAD(& ai->network_list);
  
#line 2749 
  i = 0;
  
#line 2749 
  goto ldv_52995;
  ldv_52994: 
#line 2750 
  ;
  
#line 2750 
  list_add_tail(& (ai->networks + i)->list,& ai->network_free_list);
  
#line 2749 
  i += 1;
  ldv_52995: 
#line 2750 
  ;
  
#line 2749 
  if (i <= 63) 
#line 2751 
               goto ldv_52994; else 
#line 2754 
                                    goto ldv_52996;
  ldv_52996: 
#line 2755 
  ;
  
#line 2756 
  return;
}


#line 2754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct net_device_ops const airo_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & airo_open, .ndo_stop = & airo_close, .ndo_start_xmit = & airo_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & airo_set_multicast_list, .ndo_set_mac_address = & airo_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & airo_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & airo_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & airo_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2766  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct net_device_ops const mpi_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & airo_open, .ndo_stop = & airo_close, .ndo_start_xmit = & mpi_start_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & airo_set_multicast_list, .ndo_set_mac_address = & airo_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & airo_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & airo_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = (void (*)(struct net_device *))0, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & airo_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = (void (*)(struct net_device *))0, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = (int (*)(struct net_device *, netdev_features_t ))0, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct net_device *_init_airo_card(unsigned short irq_0, int port, int is_pcmcia, struct pci_dev *pci, struct device *dmdev)
{
  struct net_device *__retres;
  struct net_device *dev;
  struct airo_info *ai;
  int i;
  int rc;
  CapabilityRid cap_rid;
  void *tmp;
  int tmp_0;
  int tmp_1;
  int tmp_4;
  int tmp_9;
  int tmp_10;
  
#line 2789 
  dev = ldv_alloc_netdev_mqs_84(11056,"",(unsigned char)0,& ether_setup,1U,1U);
  
#line 2790 
  if (dev == (struct net_device *)0) {
    
#line 2791 
    printk("\001",(char *)"");
    
#line 2792 
    __retres = (struct net_device *)0;
    
#line 2792 
    goto return_label;
  }
  else ;
  
#line 2795 
  tmp = netdev_priv((struct net_device const *)dev);
  
#line 2795 
  dev->__anonCompField_net_device_94.ml_priv = tmp;
  
#line 2795 
  ai = (struct airo_info *)tmp;
  
#line 2796 
  ai->wifidev = (struct net_device *)0;
  
#line 2797 
  ai->flags = 2UL;
  
#line 2798 
  ai->jobs = 0UL;
  
#line 2799 
  ai->dev = dev;
  
#line 2800 
  if (pci != (struct pci_dev *)0 && ((unsigned int)pci->device == 20480U || (unsigned int)pci->device == 42244U)) {
    
#line 2801 
    printk("\001",(char *)"");
    
#line 2802 
    set_bit(11L,(unsigned long volatile *)(& ai->flags));
  }
  else ;
  
#line 2804 
  spinlock_check(& ai->aux_lock);
  {
    struct lock_class_key __key;
    
#line 2804 
    __raw_spin_lock_init(& ai->aux_lock.__anonCompField_spinlock_18.rlock,"&(&ai->aux_lock)->rlock",& __key);
  }
  
#line 2805 
  sema_init(& ai->sem,1);
  
#line 2806 
  ai->config.len = (unsigned short)0U;
  
#line 2807 
  ai->pci = pci;
  {
    struct lock_class_key __key_0;
    
#line 2808 
    __init_waitqueue_head(& ai->thr_wait,"&ai->thr_wait",& __key_0);
  }
  
#line 2809 
  ai->tfm = (struct crypto_cipher *)0;
  
#line 2810 
  add_airo_dev(ai);
  
#line 2812 
  tmp_0 = airo_networks_allocate(ai);
  
#line 2812 
  if (tmp_0 != 0) 
#line 2813 
                  goto err_out_free; else ;
  
#line 2814 
  airo_networks_initialize(ai);
  
#line 2816 
  skb_queue_head_init(& ai->txq);
  
#line 2819 
  tmp_1 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 2819 
  if (tmp_1 != 0) 
#line 2820 
                  dev->netdev_ops = & mpi_netdev_ops; else 
#line 2822 
                                                           dev->netdev_ops = & airo_netdev_ops;
  
#line 2823 
  dev->wireless_handlers = & airo_handler_def;
  
#line 2824 
  ai->wireless_data.spy_data = & ai->spy_data;
  
#line 2825 
  dev->wireless_data = & ai->wireless_data;
  
#line 2826 
  dev->irq = (int)irq_0;
  
#line 2827 
  dev->base_addr = (unsigned long)port;
  
#line 2828 
  dev->priv_flags &= 4294901759U;
  
#line 2830 
  dev->dev.parent = dmdev;
  
#line 2832 
  reset_card(dev,1);
  
#line 2833 
  msleep(400U);
  
#line 2835 
  if (is_pcmcia == 0) {
    struct resource *tmp_2;
    
#line 2836 
    tmp_2 = __request_region(& ioport_resource,(unsigned long long)dev->base_addr,64ULL,"airo",0);
    
#line 2836 
    if (tmp_2 == (struct resource *)0) {
      
#line 2837 
      rc = -16;
      
#line 2838 
      printk("\001",(char *)(& dev->name));
      
#line 2839 
      goto err_out_nets;
    }
    else ;
  }
  else ;
  
#line 2843 
  tmp_4 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 2843 
  if (tmp_4 != 0) {
    int tmp_3;
    
#line 2844 
    tmp_3 = mpi_map_card(ai,pci);
    
#line 2844 
    if (tmp_3 != 0) {
      
#line 2845 
      printk("\001",(char *)"");
      
#line 2846 
      goto err_out_res;
    }
    else ;
  }
  else ;
  
#line 2850 
  if (probe != 0) {
    u16 tmp_5;
    
#line 2851 
    tmp_5 = setup_card(ai,dev->dev_addr,1);
    
#line 2851 
    if ((unsigned int)tmp_5 != 0U) {
      
#line 2852 
      printk("\001",(char *)(& dev->name));
      
#line 2853 
      rc = -5;
      
#line 2854 
      goto err_out_map;
    }
    else ;
  }
  else {
    int tmp_6;
    
#line 2856 
    tmp_6 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
    
#line 2856 
    if (tmp_6 == 0) {
      
#line 2857 
      ai->bap_read = & fast_bap_read;
      
#line 2858 
      set_bit(15L,(unsigned long volatile *)(& ai->flags));
    }
    else ;
  }
  
#line 2861 
  strcpy((char *)(& dev->name),"eth%d");
  
#line 2862 
  rc = ldv_register_netdev_85(dev);
  
#line 2863 
  if (rc != 0) {
    
#line 2864 
    printk("\001",(char *)(& dev->name));
    
#line 2865 
    goto err_out_map;
  }
  else ;
  
#line 2867 
  ai->wifidev = init_wifidev(ai,dev);
  
#line 2868 
  if (ai->wifidev == (struct net_device *)0) 
#line 2869 
                                             goto err_out_reg; else ;
  
#line 2871 
  rc = readCapabilityRid(ai,& cap_rid,1);
  
#line 2872 
  if (rc != 0) {
    
#line 2873 
    rc = -5;
    
#line 2874 
    goto err_out_wifi;
  }
  else ;
  
#line 2877 
  ai->wep_capable = ((int)cap_rid.softCap >> 1) & 1;
  
#line 2878 
  if (((int)cap_rid.softCap & 128) != 0) 
#line 2878 
                                         ai->max_wep_idx = 3; else 
#line 2878 
                                                                   ai->max_wep_idx = 0;
  
#line 2880 
  printk("\001",(char *)(& dev->name),((int)cap_rid.softVer >> 8) & 15,(int)cap_rid.softVer & 255,(int)cap_rid.softSubVer);
  
#line 2887 
  if ((unsigned int)cap_rid.softVer > 1328U || ((unsigned int)cap_rid.softVer == 1328U && (unsigned int)cap_rid.softSubVer > 16U)) {
    
#line 2890 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 2892 
    set_bit(16L,(unsigned long volatile *)(& ai->flags));
    
#line 2893 
    ai->bssListFirst = 65396U;
    
#line 2894 
    ai->bssListNext = 65397U;
    
#line 2895 
    ai->bssListRidLen = 714U;
  }
  else {
    
#line 2897 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 2900 
    ai->bssListFirst = 65394U;
    
#line 2901 
    ai->bssListNext = 65395U;
    
#line 2902 
    ai->bssListRidLen = 70U;
  }
  
#line 2905 
  set_bit(12L,(unsigned long volatile *)(& ai->flags));
  
#line 2906 
  printk("\001",(char *)(& dev->name),dev->dev_addr);
  
#line 2909 
  if (probe != 0) {
    int tmp_8;
    
#line 2909 
    tmp_8 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
    
#line 2909 
    if (tmp_8 == 0) {
      u16 tmp_7;
      
#line 2910 
      i = 0;
      
#line 2910 
      goto ldv_53020;
      ldv_53019: 
#line 2911 
      ;
      
#line 2911 
      tmp_7 = transmit_allocate(ai,2312,i > 2);
      
#line 2911 
      ai->fids[i] = (unsigned int)tmp_7;
      
#line 2910 
      i += 1;
      ldv_53020: 
#line 2911 
      ;
      
#line 2910 
      if (i <= 5) 
#line 2912 
                  goto ldv_53019; else 
#line 2915 
                                       goto ldv_53021;
      ldv_53021: 
#line 2916 
      ;
    }
    else ;
  }
  else ;
  
#line 2913 
  tmp_9 = setup_proc_entry(dev,(struct airo_info *)dev->__anonCompField_net_device_94.ml_priv);
  
#line 2913 
  if (tmp_9 < 0) 
#line 2914 
                 goto err_out_wifi; else ;
  
#line 2916 
  __retres = dev;
  
#line 2916 
  goto return_label;
  err_out_wifi: 
#line 2918 
  ;
  
#line 2919 
  ldv_unregister_netdev_86(ai->wifidev);
  
#line 2920 
  ldv_free_netdev_87(ai->wifidev);
  err_out_reg: 
#line 2921 
  ;
  
#line 2922 
  ldv_unregister_netdev_88(dev);
  err_out_map: 
#line 2923 
  ;
  
#line 2924 
  tmp_10 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 2924 
  if (tmp_10 != 0) {
    
#line 2924 
    if (pci != (struct pci_dev *)0) {
      
#line 2925 
      pci_free_consistent(pci,5728UL,(void *)ai->shared,ai->shared_dma);
      
#line 2926 
      iounmap((void volatile *)ai->pciaux);
      
#line 2927 
      iounmap((void volatile *)ai->pcimem);
      
#line 2928 
      mpi_unmap_card(ai->pci);
    }
    else ;
  }
  else ;
  err_out_res: 
#line 2930 
  ;
  
#line 2931 
  if (is_pcmcia == 0) 
#line 2932 
                      __release_region(& ioport_resource,(unsigned long long)dev->base_addr,64ULL); else ;
  err_out_nets: 
#line 2933 
  ;
  
#line 2934 
  airo_networks_free(ai);
  err_out_free: 
#line 2935 
  ;
  
#line 2936 
  del_airo_dev(ai);
  
#line 2937 
  ldv_free_netdev_89(dev);
  
#line 2938 
  __retres = (struct net_device *)0;
  return_label: 
#line 2938 
                return __retres;
}


#line 2941  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct net_device *init_airo_card(unsigned short irq_0, int port, int is_pcmcia, struct device *dmdev)
{
  struct net_device *tmp;
  
#line 2944 
  tmp = _init_airo_card((unsigned short)((int)irq_0),port,is_pcmcia,(struct pci_dev *)0,dmdev);
  
#line 2944 
  return tmp;
}


#line 2947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const __kstrtab_init_airo_card[15U] = {(char)'i', (char)'n', (char)'i', (char)'t', (char)'_', (char)'a', (char)'i', (char)'r', (char)'o', (char)'_', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'};

#line 2947 
struct kernel_symbol const __ksymtab_init_airo_card;


#line 2947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct kernel_symbol const __ksymtab_init_airo_card = {.value = (unsigned long)(& init_airo_card), .name = (char const *)(& __kstrtab_init_airo_card)};

#line 2949  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int waitbusy(struct airo_info *ai)
{
  int __retres;
  unsigned short tmp;
  
#line 2950 
  int delay = 0;
  
#line 2951 
  goto ldv_53043;
  ldv_53042: 
#line 2952 
  ;
  
#line 2952 
  __const_udelay(42950UL);
  
#line 2953 
  delay += 1;
  
#line 2953 
  if (delay % 20 == 0) 
#line 2954 
                       OUT4500(ai,(unsigned short)52,(unsigned short)16384); else ;
  ldv_53043: 
#line 2955 
  ;
  
#line 2951 
  tmp = IN4500(ai,(unsigned short)0);
  
#line 2951 
  if ((int)tmp < 0) {
    
#line 2951 
    if (delay <= 9999) 
#line 2953 
                       goto ldv_53042; else 
#line 2956 
                                            goto ldv_53044;
  }
  else 
#line 2956 
       goto ldv_53044;
  ldv_53044: 
#line 2957 
  ;
  
#line 2956 
  __retres = delay <= 9999;
  
#line 2956 
  return __retres;
}


#line 2959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
int reset_airo_card(struct net_device *dev)
{
  int __retres;
  int i;
  int tmp;
  u16 tmp_0;
  int tmp_2;
  
#line 2962 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2964 
  tmp = reset_card(dev,1);
  
#line 2964 
  if (tmp != 0) {
    
#line 2965 
    __retres = -1;
    
#line 2965 
    goto return_label;
  }
  else ;
  
#line 2967 
  tmp_0 = setup_card(ai,dev->dev_addr,1);
  
#line 2967 
  if ((unsigned int)tmp_0 != 0U) {
    
#line 2968 
    printk("\001",(char *)(& dev->name));
    
#line 2969 
    __retres = -1;
    
#line 2969 
    goto return_label;
  }
  else ;
  
#line 2971 
  printk("\001",(char *)(& dev->name),dev->dev_addr);
  
#line 2973 
  tmp_2 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 2973 
  if (tmp_2 == 0) {
    u16 tmp_1;
    
#line 2974 
    i = 0;
    
#line 2974 
    goto ldv_53051;
    ldv_53050: 
#line 2975 
    ;
    
#line 2975 
    tmp_1 = transmit_allocate(ai,2312,i > 2);
    
#line 2975 
    ai->fids[i] = (unsigned int)tmp_1;
    
#line 2974 
    i += 1;
    ldv_53051: 
#line 2975 
    ;
    
#line 2974 
    if (i <= 5) 
#line 2976 
                goto ldv_53050; else 
#line 2979 
                                     goto ldv_53052;
    ldv_53052: 
#line 2980 
    ;
  }
  else ;
  
#line 2977 
  enable_interrupts(ai);
  
#line 2978 
  netif_wake_queue(dev);
  
#line 2979 
  __retres = 0;
  return_label: 
#line 2979 
                return __retres;
}


#line 2982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const __kstrtab_reset_airo_card[16U] = {(char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'_', (char)'a', (char)'i', (char)'r', (char)'o', (char)'_', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'};

#line 2982 
struct kernel_symbol const __ksymtab_reset_airo_card;


#line 2982  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
struct kernel_symbol const __ksymtab_reset_airo_card = {.value = (unsigned long)(& reset_airo_card), .name = (char const *)(& __kstrtab_reset_airo_card)};

#line 2984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_send_event(struct net_device *dev)
{
  union iwreq_data wrqu;
  StatusRid status_rid;
  
#line 2985 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 2989 
  set_bit(6L,(unsigned long volatile *)(& ai->jobs));
  
#line 2990 
  PC4500_readrid(ai,(unsigned short)65360,(void *)(& status_rid),136,0);
  
#line 2991 
  up(& ai->sem);
  
#line 2992 
  wrqu.data.length = (unsigned short)0U;
  
#line 2993 
  wrqu.data.flags = (unsigned short)0U;
  
#line 2994 
  memcpy((void *)(& wrqu.ap_addr.sa_data),(void const *)(& status_rid.bssid[0]),6UL);
  
#line 2995 
  wrqu.ap_addr.sa_family = (unsigned short)1U;
  
#line 2998 
  wireless_send_event(dev,35605U,& wrqu,(char const *)0);
  
#line 2999 
  return;
}


#line 3001  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_process_scan_results(struct airo_info *ai)
{
  union iwreq_data wrqu;
  BSSListRid bss;
  int rc;
  BSSListElement *loop_net;
  BSSListElement *tmp_net;
  BSSListElement *tmp;
  BSSListElement *tmp_0;
  BSSListElement *tmp_1;
  int tmp_3;
  {
    
#line 3009 
    struct list_head const *__mptr = (struct list_head const *)ai->network_list.next;
    
#line 3009 
    tmp = (BSSListElement *)__mptr + 18446744073709550896U;
  }
  
#line 3009 
  loop_net = tmp;
  {
    
#line 3009 
    struct list_head const *__mptr_0 = (struct list_head const *)loop_net->list.next;
    
#line 3009 
    tmp_0 = (BSSListElement *)__mptr_0 + 18446744073709550896U;
  }
  
#line 3010 
  tmp_net = tmp_0;
  
#line 3009 
  goto ldv_53081;
  ldv_53080: 
#line 3010 
  ;
  
#line 3010 
  list_move_tail(& loop_net->list,& ai->network_free_list);
  
#line 3012 
  memset((void *)loop_net,0,714UL);
  
#line 3009 
  loop_net = tmp_net;
  {
    
#line 3009 
    struct list_head const *__mptr_1 = (struct list_head const *)tmp_net->list.next;
    
#line 3009 
    tmp_1 = (BSSListElement *)__mptr_1 + 18446744073709550896U;
  }
  
#line 3009 
  tmp_net = tmp_1;
  ldv_53081: 
#line 3011 
  ;
  
#line 3009 
  if (& loop_net->list != & ai->network_list) 
#line 3011 
                                              goto ldv_53080; else 
#line 3014 
                                                                   goto ldv_53082;
  ldv_53082: 
#line 3015 
  ;
  
#line 3016 
  rc = PC4500_readrid(ai,(unsigned short)((int)((unsigned short)ai->bssListFirst)),(void *)(& bss),(int)ai->bssListRidLen,0);
  
#line 3017 
  if (rc != 0 || (unsigned int)bss.index == 65535U) 
#line 3019 
                                                    goto out; else ;
  
#line 3023 
  tmp_net = (BSSListElement *)0;
  
#line 3024 
  goto ldv_53087;
  ldv_53086: 
#line 3025 
  ;
  
#line 3026 
  tmp_3 = list_empty((struct list_head const *)(& ai->network_free_list));
  
#line 3026 
  if (tmp_3 == 0) {
    BSSListElement *tmp_2;
    {
      
#line 3027 
      struct list_head const *__mptr_2 = (struct list_head const *)ai->network_free_list.next;
      
#line 3027 
      tmp_2 = (BSSListElement *)__mptr_2 + 18446744073709550896U;
    }
    
#line 3027 
    tmp_net = tmp_2;
    
#line 3029 
    list_del(ai->network_free_list.next);
  }
  else ;
  
#line 3032 
  if (tmp_net != (BSSListElement *)0) {
    
#line 3033 
    memcpy((void *)tmp_net,(void const *)(& bss),714UL);
    
#line 3034 
    list_add_tail(& tmp_net->list,& ai->network_list);
    
#line 3035 
    tmp_net = (BSSListElement *)0;
  }
  else ;
  
#line 3039 
  rc = PC4500_readrid(ai,(unsigned short)((int)((unsigned short)ai->bssListNext)),(void *)(& bss),(int)ai->bssListRidLen,0);
  ldv_53087: 
#line 3041 
  ;
  
#line 3024 
  if (rc == 0 && (unsigned int)bss.index != 65535U) 
#line 3026 
                                                    goto ldv_53086; else 
                                                                    
#line 3029 
                                                                    goto ldv_53088;
  ldv_53088: 
#line 3030 
  ;
  out: 
#line 3043 
  ;
  
#line 3044 
  ai->scan_timeout = 0UL;
  
#line 3045 
  set_bit(9L,(unsigned long volatile *)(& ai->jobs));
  
#line 3046 
  up(& ai->sem);
  
#line 3055 
  wrqu.data.length = (unsigned short)0U;
  
#line 3056 
  wrqu.data.flags = (unsigned short)0U;
  
#line 3057 
  wireless_send_event(ai->dev,35609U,& wrqu,(char const *)0);
  
#line 3058 
  return;
}


#line 3060  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_thread(void *data)
{
  int __retres;
  int locked;
  int tmp;
  int tmp_21;
  int tmp_31;
  
#line 3061 
  struct net_device *dev = (struct net_device *)data;
  
#line 3062 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 3065 
  set_freezable();
  ldv_53130: 
#line 3066 
  ;
  
#line 3068 
  try_to_freeze();
  
#line 3070 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& ai->jobs));
  
#line 3070 
  if (tmp != 0) 
#line 3071 
                goto ldv_53095; else ;
  
#line 3073 
  if (ai->jobs != 0UL) 
#line 3074 
                       locked = down_interruptible(& ai->sem);
  else {
    wait_queue_t wait;
    struct task_struct *tmp_0;
    struct task_struct *tmp_1;
    struct task_struct *tmp_20;
    
#line 3078 
    tmp_0 = get_current();
    
#line 3078 
    init_waitqueue_entry(& wait,tmp_0);
    
#line 3079 
    add_wait_queue(& ai->thr_wait,& wait);
    ldv_53128: 
#line 3080 
    ;
    
#line 3081 
    tmp_1 = get_current();
    __here_0: 
#line 3081 
    ;
    
#line 3081 
    tmp_1->task_state_change = (unsigned long)((void *)0);
    {
      
#line 3081 
      long volatile __ret = 1L;
      
#line 3081 
      switch (8UL) {
        case (unsigned long)1: 
#line 3081 
        ;
        
#line 3082 
        ldv_inline_asm();
        
#line 3081 
        goto ldv_53101;
        case (unsigned long)2: 
#line 3081 
        ;
        
#line 3082 
        ldv_inline_asm();
        
#line 3081 
        goto ldv_53101;
        case (unsigned long)4: 
#line 3081 
        ;
        
#line 3082 
        ldv_inline_asm();
        
#line 3081 
        goto ldv_53101;
        case (unsigned long)8: 
#line 3081 
        ;
        
#line 3082 
        ldv_inline_asm();
        
#line 3081 
        goto ldv_53101;
        default: 
#line 3081 
        ;
        
#line 3081 
        __xchg_wrong_size();
      }
      ldv_53101: 
#line 3081 
      ;
      
#line 3081 
      long tmp_2 = __ret;
    }
    
#line 3082 
    if (ai->jobs != 0UL) 
#line 3083 
                         goto ldv_53107; else ;
    
#line 3084 
    if (ai->expires != 0UL || ai->scan_timeout != 0UL) {
      int tmp_11;
      bool tmp_10;
      
#line 3085 
      if (ai->scan_timeout != 0UL) {
        int tmp_4;
        {
          unsigned long __dummy_1;
          unsigned long volatile __dummy2_1;
          
#line 3086 
          tmp_4 = 1;
        }
        
#line 3085 
        if (tmp_4 != 0) {
          int tmp_5;
          {
            unsigned long __dummy_2;
            unsigned long __dummy2_2;
            
#line 3086 
            tmp_5 = 1;
          }
          
#line 3086 
          if (tmp_5 != 0) {
            
#line 3086 
            if ((long)(jiffies - ai->scan_timeout) >= 0L) {
              
#line 3087 
              set_bit(9L,(unsigned long volatile *)(& ai->jobs));
              
#line 3088 
              goto ldv_53107;
            }
            else 
#line 3085 
                 goto _LAND;
          }
          else 
#line 3085 
               goto _LAND;
        }
        else 
#line 3085 
             goto _LAND;
      }
      else {
        _LAND: 
#line 3089 
        ;
        
#line 3089 
        if (ai->expires != 0UL) {
          int tmp_2_0;
          {
            unsigned long __dummy;
            unsigned long volatile __dummy2;
            
#line 3090 
            tmp_2_0 = 1;
          }
          
#line 3089 
          if (tmp_2_0 != 0) {
            int tmp_3;
            {
              unsigned long __dummy_0;
              unsigned long __dummy2_0;
              
#line 3090 
              tmp_3 = 1;
            }
            
#line 3090 
            if (tmp_3 != 0) {
              
#line 3090 
              if ((long)(jiffies - ai->expires) >= 0L) {
                
#line 3091 
                set_bit(7L,(unsigned long volatile *)(& ai->jobs));
                
#line 3092 
                goto ldv_53107;
              }
              else ;
            }
            else ;
          }
          else ;
        }
        else ;
      }
      
#line 3094 
      tmp_10 = kthread_should_stop();
      
#line 3094 
      if (tmp_10) 
#line 3094 
                  tmp_11 = 0; else 
#line 3094 
                                   tmp_11 = 1;
      
#line 3094 
      if (tmp_11) {
        int tmp_14;
        bool tmp_13;
        struct task_struct *tmp_12;
        
#line 3095 
        tmp_12 = get_current();
        
#line 3095 
        tmp_13 = freezing(tmp_12);
        
#line 3095 
        if (tmp_13) 
#line 3095 
                    tmp_14 = 0; else 
#line 3095 
                                     tmp_14 = 1;
        
#line 3095 
        if (tmp_14) {
          unsigned long wake_at;
          
#line 3097 
          if (ai->expires == 0UL || ai->scan_timeout == 0UL) {
            unsigned long tmp_7;
            {
              unsigned long tmp_6;
              
#line 3098 
              unsigned long _max1 = ai->expires;
              
#line 3098 
              unsigned long _max2 = ai->scan_timeout;
              
#line 3098 
              if (_max1 > _max2) 
#line 3098 
                                 tmp_6 = _max1; else 
#line 3098 
                                                     tmp_6 = _max2;
              
#line 3098 
              tmp_7 = tmp_6;
            }
            
#line 3098 
            wake_at = tmp_7;
          }
          else {
            unsigned long tmp_9;
            {
              unsigned long tmp_8;
              
#line 3101 
              unsigned long _min1 = ai->expires;
              
#line 3101 
              unsigned long _min2 = ai->scan_timeout;
              
#line 3101 
              if (_min1 < _min2) 
#line 3101 
                                 tmp_8 = _min1; else 
#line 3101 
                                                     tmp_8 = _min2;
              
#line 3101 
              tmp_9 = tmp_8;
            }
            
#line 3101 
            wake_at = tmp_9;
          }
          
#line 3104 
          schedule_timeout((long)(wake_at - jiffies));
          
#line 3105 
          goto ldv_53127;
        }
        else ;
      }
      else ;
    }
    else {
      int tmp_16;
      bool tmp_15;
      
#line 3107 
      tmp_15 = kthread_should_stop();
      
#line 3107 
      if (tmp_15) 
#line 3107 
                  tmp_16 = 0; else 
#line 3107 
                                   tmp_16 = 1;
      
#line 3107 
      if (tmp_16) {
        int tmp_19;
        bool tmp_18;
        struct task_struct *tmp_17;
        
#line 3108 
        tmp_17 = get_current();
        
#line 3108 
        tmp_18 = freezing(tmp_17);
        
#line 3108 
        if (tmp_18) 
#line 3108 
                    tmp_19 = 0; else 
#line 3108 
                                     tmp_19 = 1;
        
#line 3108 
        if (tmp_19) {
          
#line 3109 
          schedule();
          
#line 3110 
          goto ldv_53127;
        }
        else ;
      }
      else ;
    }
    
#line 3112 
    goto ldv_53107;
    ldv_53127: 
#line 3113 
    ;
    
#line 3081 
    goto ldv_53128;
    ldv_53107: 
#line 3082 
    ;
    
#line 3114 
    tmp_20 = get_current();
    
#line 3114 
    tmp_20->state = 0L;
    
#line 3115 
    remove_wait_queue(& ai->thr_wait,& wait);
    
#line 3116 
    locked = 1;
  }
  
#line 3119 
  if (locked != 0) 
#line 3120 
                   goto ldv_53129; else ;
  
#line 3122 
  tmp_21 = constant_test_bit(0L,(unsigned long const volatile *)(& ai->jobs));
  
#line 3122 
  if (tmp_21 != 0) {
    
#line 3123 
    up(& ai->sem);
    
#line 3124 
    goto ldv_53095;
  }
  else ;
  
#line 3127 
  if (ai->power.event != 0) 
#line 3127 
                            goto _LOR;
  else {
    int tmp_22;
    
#line 3127 
    tmp_22 = constant_test_bit(15L,(unsigned long const volatile *)(& ai->flags));
    
#line 3127 
    if (tmp_22 != 0) {
      _LOR: {
              
#line 3128 
              up(& ai->sem);
              
#line 3129 
              goto ldv_53129;
            }
    }
    else ;
  }
  
#line 3132 
  tmp_31 = constant_test_bit(1L,(unsigned long const volatile *)(& ai->jobs));
  
#line 3132 
  if (tmp_31 != 0) 
#line 3133 
                   airo_end_xmit(dev);
  else {
    int tmp_30;
    
#line 3134 
    tmp_30 = constant_test_bit(2L,(unsigned long const volatile *)(& ai->jobs));
    
#line 3134 
    if (tmp_30 != 0) 
#line 3135 
                     airo_end_xmit11(dev);
    else {
      int tmp_29;
      
#line 3136 
      tmp_29 = constant_test_bit(3L,(unsigned long const volatile *)(& ai->jobs));
      
#line 3136 
      if (tmp_29 != 0) 
#line 3137 
                       airo_read_stats(dev);
      else {
        int tmp_28;
        
#line 3138 
        tmp_28 = constant_test_bit(8L,(unsigned long const volatile *)(& ai->jobs));
        
#line 3138 
        if (tmp_28 != 0) 
#line 3139 
                         airo_read_wireless_stats(ai);
        else {
          int tmp_27;
          
#line 3140 
          tmp_27 = constant_test_bit(4L,(unsigned long const volatile *)(& ai->jobs));
          
#line 3140 
          if (tmp_27 != 0) 
#line 3141 
                           airo_set_promisc(ai);
          else {
            int tmp_26;
            
#line 3142 
            tmp_26 = constant_test_bit(5L,(unsigned long const volatile *)(& ai->jobs));
            
#line 3142 
            if (tmp_26 != 0) 
#line 3143 
                             micinit(ai);
            else {
              int tmp_25;
              
#line 3144 
              tmp_25 = constant_test_bit(6L,(unsigned long const volatile *)(& ai->jobs));
              
#line 3144 
              if (tmp_25 != 0) 
#line 3145 
                               airo_send_event(dev);
              else {
                int tmp_24;
                
#line 3146 
                tmp_24 = constant_test_bit(7L,(unsigned long const volatile *)(& ai->jobs));
                
#line 3146 
                if (tmp_24 != 0) 
#line 3147 
                                 timer_func(dev);
                else {
                  int tmp_23;
                  
#line 3148 
                  tmp_23 = constant_test_bit(9L,(unsigned long const volatile *)(& ai->jobs));
                  
#line 3148 
                  if (tmp_23 != 0) 
#line 3149 
                                   airo_process_scan_results(ai); else 
                                                                    
#line 3151 
                                                                    up(& ai->sem);
                }
              }
            }
          }
        }
      }
    }
  }
  ldv_53129: 
#line 3152 
  ;
  
#line 3068 
  goto ldv_53130;
  ldv_53095: 
#line 3069 
  ;
  
#line 3154 
  __retres = 0;
  
#line 3154 
  return __retres;
}


#line 3157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int header_len(__le16 ctl)
{
  int __retres;
  
#line 3159 
  u16 fc = ctl;
  
#line 3160 
  switch ((int)fc & 12) {
    case 4: 
#line 3161 
    ;
    
#line 3162 
    if (((int)fc & 224) == 192) {
      
#line 3163 
      __retres = 10;
      
#line 3163 
      goto return_label;
    }
    else ;
    
#line 3164 
    __retres = 16;
    
#line 3164 
    goto return_label;
    case 8: 
#line 3165 
    ;
    
#line 3166 
    if (((int)fc & 768) == 768) {
      
#line 3167 
      __retres = 30;
      
#line 3167 
      goto return_label;
    }
    else ;
  }
  
#line 3169 
  __retres = 24;
  return_label: 
#line 3169 
                return __retres;
}


#line 3172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_handle_cisco_mic(struct airo_info *ai)
{
  int tmp;
  
#line 3174 
  tmp = constant_test_bit(4L,(unsigned long const volatile *)(& ai->flags));
  
#line 3174 
  if (tmp != 0) {
    
#line 3175 
    set_bit(5L,(unsigned long volatile *)(& ai->jobs));
    
#line 3176 
    __wake_up(& ai->thr_wait,1U,1,(void *)0);
  }
  else ;
  
#line 3178 
  return;
}


#line 3193  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_print_status(char const *devname, u16 status)
{
  
#line 3195 
  u8 reason = (unsigned char)status;
  
#line 3197 
  switch ((int)status & 65280) {
    case 32768: 
#line 3198 
    ;
    
#line 3199 
    switch ((int)status) {
      case 32768: 
#line 3200 
      ;
      
#line 3201 
      printk("\001",devname);
      
#line 3202 
      goto ldv_53147;
      case 32769: 
#line 3203 
      ;
      case 32770: 
#line 3204 
      ;
      
#line 3205 
      printk("\001",devname);
      
#line 3206 
      goto ldv_53147;
      case 32771: 
#line 3207 
      ;
      
#line 3208 
      printk("\001",devname);
      
#line 3209 
      goto ldv_53147;
      case 32772: 
#line 3210 
      ;
      
#line 3211 
      printk("\001",devname);
      
#line 3212 
      goto ldv_53147;
      default: 
#line 3213 
      ;
      
#line 3214 
      printk("\001",devname,(int)status);
      
#line 3215 
      goto ldv_53147;
    }
    ldv_53147: 
#line 3217 
    ;
    
#line 3217 
    goto ldv_53153;
    case 33024: 
#line 3218 
    ;
    
#line 3219 
    printk("\001",devname,(int)reason);
    
#line 3220 
    goto ldv_53153;
    case 33280: 
#line 3221 
    ;
    
#line 3222 
    printk("\001",devname,(int)reason);
    
#line 3223 
    goto ldv_53153;
    case 33792: 
#line 3224 
    ;
    
#line 3225 
    printk("\001",devname,(int)reason);
    
#line 3227 
    goto ldv_53153;
    case 768: 
#line 3228 
    ;
    
#line 3229 
    printk("\001",devname,(int)reason);
    
#line 3231 
    goto ldv_53153;
    case 1024: 
#line 3232 
    ;
    case 1536: 
#line 3233 
    ;
    
#line 3234 
    goto ldv_53153;
    default: 
#line 3235 
    ;
    
#line 3236 
    printk("\001",devname,(int)status);
    
#line 3237 
    goto ldv_53153;
  }
  ldv_53153: 
#line 3239 
  ;
  
#line 3240 
  return;
}


#line 3241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_handle_link(struct airo_info *ai)
{
  union iwreq_data wrqu;
  u16 status;
  
#line 3244 
  int scan_forceloss = 0;
  
#line 3248 
  status = IN4500(ai,(unsigned short)16);
  
#line 3249 
  OUT4500(ai,(unsigned short)52,(unsigned short)128);
  
#line 3251 
  if ((unsigned int)status == 32771U && ai->scan_timeout != 0UL) 
#line 3252 
                                                                 scan_forceloss = 1; else ;
  
#line 3254 
  airo_print_status((char const *)(& (ai->dev)->name),(unsigned short)((int)status));
  
#line 3256 
  if ((unsigned int)status == 1024U || (unsigned int)status == 1536U) {
    int tmp;
    
#line 3257 
    if (auto_wep != 0) 
#line 3258 
                       ai->expires = 0UL; else ;
    
#line 3259 
    if (ai->list_bss_task != (struct task_struct *)0) 
#line 3260 
                                                      wake_up_process(ai->list_bss_task); else ;
    
#line 3261 
    set_bit(6L,(unsigned long volatile *)(& ai->flags));
    
#line 3262 
    set_bit(5L,(unsigned long volatile *)(& ai->flags));
    
#line 3264 
    tmp = down_trylock(& ai->sem);
    
#line 3264 
    if (tmp != 0) {
      
#line 3265 
      set_bit(6L,(unsigned long volatile *)(& ai->jobs));
      
#line 3266 
      __wake_up(& ai->thr_wait,1U,1,(void *)0);
    }
    else 
#line 3268 
         airo_send_event(ai->dev);
  }
  else 
    
#line 3269 
    if (scan_forceloss == 0) {
      
#line 3270 
      if (auto_wep != 0 && ai->expires == 0UL) {
        
#line 3271 
        ai->expires = jiffies + 750UL;
        
#line 3272 
        __wake_up(& ai->thr_wait,1U,1,(void *)0);
      }
      else ;
      
#line 3276 
      eth_zero_addr((u8 *)(& wrqu.ap_addr.sa_data));
      
#line 3277 
      wrqu.ap_addr.sa_family = (unsigned short)1U;
      
#line 3278 
      wireless_send_event(ai->dev,35605U,& wrqu,(char const *)0);
    }
    else ;
  
#line 3280 
  return;
}


#line 3282  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_handle_rx(struct airo_info *ai)
{
  __le16 fc;
  __le16 v;
  __le16 *buffer;
  __le16 tmpbuf[4U];
  u16 len;
  u16 gap;
  u16 fid;
  struct rx_hdr hdr;
  int tmp_0;
  int tmp_1;
  int tmp_3;
  int tmp_8;
  
#line 3284 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 3286 
  u16 hdrlen = (unsigned short)0U;
  
#line 3288 
  int success = 0;
  
#line 3290 
  tmp_0 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 3290 
  if (tmp_0 != 0) {
    int tmp;
    
#line 3291 
    tmp = constant_test_bit(7L,(unsigned long const volatile *)(& ai->flags));
    
#line 3291 
    if (tmp != 0) 
#line 3292 
                  mpi_receive_802_11(ai); else 
#line 3294 
                                               mpi_receive_802_3(ai);
    
#line 3295 
    OUT4500(ai,(unsigned short)52,(unsigned short)1);
    
#line 3296 
    goto return_label;
  }
  else ;
  
#line 3299 
  fid = IN4500(ai,(unsigned short)32);
  
#line 3302 
  tmp_1 = constant_test_bit(7L,(unsigned long const volatile *)(& ai->flags));
  
#line 3302 
  if (tmp_1 != 0) {
    
#line 3303 
    bap_setup(ai,(unsigned short)((int)fid),(unsigned short)4,0);
    
#line 3304 
    bap_read(ai,(__le16 *)(& hdr),16,0);
    
#line 3306 
    if (((int)hdr.status & 2) != 0) 
#line 3307 
                                    hdr.len = (unsigned short)0U; else ;
    
#line 3308 
    if (ai->wifidev == (struct net_device *)0) 
#line 3309 
                                               hdr.len = (unsigned short)0U; else ;
  }
  else {
    
#line 3311 
    bap_setup(ai,(unsigned short)((int)fid),(unsigned short)54,0);
    
#line 3312 
    bap_read(ai,& hdr.len,2,0);
  }
  
#line 3314 
  len = hdr.len;
  
#line 3316 
  if ((unsigned int)len > 2312U) {
    
#line 3317 
    printk("\001",(char *)(& (ai->dev)->name),(int)len);
    
#line 3318 
    goto done;
  }
  else ;
  
#line 3320 
  if ((unsigned int)len == 0U) 
#line 3321 
                               goto done; else ;
  
#line 3323 
  tmp_3 = constant_test_bit(7L,(unsigned long const volatile *)(& ai->flags));
  
#line 3323 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 3324 
    bap_read(ai,& fc,2,0);
    
#line 3325 
    tmp_2 = header_len((unsigned short)((int)fc));
    
#line 3325 
    hdrlen = (unsigned short)tmp_2;
  }
  else 
#line 3327 
       hdrlen = (unsigned short)12U;
  
#line 3329 
  skb = dev_alloc_skb((unsigned int)(((int)len + (int)hdrlen) + 4));
  
#line 3330 
  if (skb == (struct sk_buff *)0) {
    
#line 3331 
    (ai->dev)->stats.rx_dropped += 1UL;
    
#line 3332 
    goto done;
  }
  else ;
  
#line 3335 
  skb_reserve(skb,2);
  
#line 3336 
  buffer = (__le16 *)skb_put(skb,(unsigned int)((int)len + (int)hdrlen));
  
#line 3337 
  tmp_8 = constant_test_bit(7L,(unsigned long const volatile *)(& ai->flags));
  
#line 3337 
  if (tmp_8 != 0) {
    
#line 3338 
    *buffer = fc;
    
#line 3339 
    bap_read(ai,buffer + 1U,(int)hdrlen + -2,0);
    
#line 3340 
    if ((unsigned int)hdrlen == 24U) 
#line 3341 
                                     bap_read(ai,(__le16 *)(& tmpbuf),6,0); else ;
    
#line 3343 
    bap_read(ai,& v,2,0);
    
#line 3344 
    gap = v;
    
#line 3345 
    if ((unsigned int)gap != 0U) 
      
#line 3346 
      if ((unsigned int)gap <= 8U) 
#line 3347 
                                   bap_read(ai,(__le16 *)(& tmpbuf),(int)gap,0); else 
                                                                    
#line 3349 
                                                                    printk("\001",(char *)(& (ai->dev)->name));
    else ;
    
#line 3353 
    bap_read(ai,buffer + (unsigned int)hdrlen / 2U,(int)len,0);
  }
  else {
    MICBuffer micbuf;
    int tmp_7;
    
#line 3357 
    bap_read(ai,buffer,12,0);
    
#line 3358 
    if ((unsigned int)ai->micstats.enabled != 0U) {
      int tmp_6;
      
#line 3359 
      bap_read(ai,(__le16 *)(& micbuf),18,0);
      
#line 3360 
      if (0 != 0) 
#line 3360 
                  tmp_6 = (unsigned int)((unsigned short)(((int)micbuf.typelen << 8) | ((int)micbuf.typelen >> 8))) > 1500U;
      else {
        __u16 tmp_5;
        
#line 3360 
        tmp_5 = __fswab16((unsigned short)((int)micbuf.typelen));
        
#line 3360 
        tmp_6 = (unsigned int)tmp_5 > 1500U;
      }
      
#line 3360 
      if (tmp_6) 
#line 3361 
                 bap_setup(ai,(unsigned short)((int)fid),(unsigned short)68,0);
      else {
        
#line 3363 
        if ((unsigned int)len <= 18U) {
          
#line 3364 
          dev_kfree_skb_irq(skb);
          
#line 3365 
          goto done;
        }
        else ;
        
#line 3368 
        len = (unsigned short)((unsigned int)len + 65518U);
        
#line 3369 
        skb_trim(skb,(unsigned int)((int)len + (int)hdrlen));
      }
    }
    else ;
    
#line 3373 
    bap_read(ai,buffer + 6U,(int)len,0);
    
#line 3374 
    tmp_7 = decapsulate(ai,& micbuf,(etherHead *)buffer,(unsigned short)((int)len));
    
#line 3374 
    if (tmp_7 != 0) 
#line 3375 
                    dev_kfree_skb_irq(skb); else 
#line 3377 
                                                 success = 1;
  }
  
#line 3381 
  if (success != 0 && ai->spy_data.spy_number > 0) {
    char *sa;
    struct iw_quality wstats;
    int tmp_9;
    
#line 3386 
    tmp_9 = constant_test_bit(7L,(unsigned long const volatile *)(& ai->flags));
    
#line 3386 
    if (tmp_9 == 0) {
      
#line 3387 
      sa = (char *)buffer + 6U;
      
#line 3388 
      bap_setup(ai,(unsigned short)((int)fid),(unsigned short)8,0);
      
#line 3389 
      bap_read(ai,(__le16 *)(& hdr.rssi),2,0);
    }
    else 
#line 3391 
         sa = (char *)buffer + 10U;
    
#line 3392 
    wstats.qual = hdr.rssi[0];
    
#line 3393 
    if (ai->rssi != (tdsRssiEntry *)0) 
#line 3394 
                                       wstats.level = (unsigned char)(- ((int)(ai->rssi + (int)hdr.rssi[1])->rssidBm)); else 
                                                                    
#line 3396 
                                                                    wstats.level = (unsigned char)(((int)hdr.rssi[1] + 321) / 2);
    
#line 3397 
    wstats.noise = ai->wstats.qual.noise;
    
#line 3398 
    wstats.updated = (unsigned char)11U;
    
#line 3402 
    wireless_spy_update(ai->dev,(unsigned char *)sa,& wstats);
  }
  else ;
  done: 
#line 3406 
  ;
  
#line 3407 
  OUT4500(ai,(unsigned short)52,(unsigned short)1);
  
#line 3409 
  if (success != 0) {
    int tmp_10;
    
#line 3410 
    tmp_10 = constant_test_bit(7L,(unsigned long const volatile *)(& ai->flags));
    
#line 3410 
    if (tmp_10 != 0) {
      
#line 3411 
      skb_reset_mac_header(skb);
      
#line 3412 
      skb->pkt_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))3U;
      
#line 3413 
      skb->dev = ai->wifidev;
      
#line 3414 
      skb->protocol = (unsigned short)1024U;
    }
    else 
#line 3416 
         skb->protocol = eth_type_trans(skb,ai->dev);
    
#line 3417 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
    
#line 3419 
    netif_rx(skb);
  }
  else ;
  return_label: 
#line 3421 
                return;
}


#line 3423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_handle_tx(struct airo_info *ai, u16 status)
{
  int i;
  u16 fid;
  int tmp_0;
  
#line 3425 
  int len = 0;
  
#line 3425 
  int index = -1;
  
#line 3428 
  tmp_0 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 3428 
  if (tmp_0 != 0) {
    unsigned long flags;
    int tmp;
    
#line 3431 
    if (((int)status & 4) != 0) 
#line 3432 
                                get_tx_error(ai,-1); else ;
    
#line 3434 
    ldv___ldv_spin_lock_90(& ai->aux_lock);
    
#line 3435 
    tmp = skb_queue_empty((struct sk_buff_head const *)(& ai->txq));
    
#line 3435 
    if (tmp == 0) {
      
#line 3436 
      ldv_spin_unlock_irqrestore_91(& ai->aux_lock,flags);
      
#line 3437 
      mpi_send_packet(ai->dev);
    }
    else {
      
#line 3439 
      set_bit(9L,(unsigned long volatile *)(& ai->flags));
      
#line 3440 
      ldv_spin_unlock_irqrestore_92(& ai->aux_lock,flags);
      
#line 3441 
      netif_wake_queue(ai->dev);
    }
    
#line 3443 
    OUT4500(ai,(unsigned short)52,(unsigned short)((int)status & 1030));
    
#line 3444 
    goto return_label;
  }
  else ;
  
#line 3447 
  fid = IN4500(ai,(unsigned short)36);
  
#line 3449 
  i = 0;
  
#line 3449 
  goto ldv_53195;
  ldv_53194: 
#line 3450 
  ;
  
#line 3450 
  if ((ai->fids[i] & 65535U) == (unsigned int)fid) {
    
#line 3451 
    len = (int)(ai->fids[i] >> 16);
    
#line 3452 
    index = i;
  }
  else ;
  
#line 3449 
  i += 1;
  ldv_53195: 
#line 3450 
  ;
  
#line 3449 
  if (i <= 5) 
#line 3451 
              goto ldv_53194; else 
#line 3454 
                                   goto ldv_53196;
  ldv_53196: 
#line 3455 
  ;
  
#line 3456 
  if (index != -1) {
    
#line 3457 
    if (((int)status & 4) != 0) 
#line 3458 
                                get_tx_error(ai,index); else ;
    
#line 3460 
    OUT4500(ai,(unsigned short)52,(unsigned short)((int)status & 6));
    
#line 3463 
    ai->fids[index] &= 65535U;
    
#line 3464 
    if (index <= 2) {
      int tmp_1;
      
#line 3465 
      tmp_1 = constant_test_bit(9L,(unsigned long const volatile *)(& ai->flags));
      
#line 3465 
      if (tmp_1 == 0) 
#line 3466 
                      netif_wake_queue(ai->dev); else ;
    }
    else {
      int tmp_2;
      
#line 3468 
      tmp_2 = constant_test_bit(10L,(unsigned long const volatile *)(& ai->flags));
      
#line 3468 
      if (tmp_2 == 0) 
#line 3469 
                      netif_wake_queue(ai->wifidev); else ;
    }
  }
  else {
    
#line 3472 
    OUT4500(ai,(unsigned short)52,(unsigned short)((int)status & 1030));
    
#line 3473 
    printk("\001",(char *)(& (ai->dev)->name));
  }
  return_label: 
#line 3475 
                return;
}


#line 3477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static irqreturn_t airo_interrupt(int irq_0, void *dev_id)
{
  irqreturn_t __retres;
  u16 status;
  int tmp_0;
  bool tmp;
  
#line 3479 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 3480 
  u16 savedInterrupts = (unsigned short)0U;
  
#line 3481 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 3482 
  int handled = 0;
  
#line 3484 
  tmp = netif_device_present(dev);
  
#line 3484 
  if (tmp) 
#line 3484 
           tmp_0 = 0; else 
#line 3484 
                           tmp_0 = 1;
  
#line 3484 
  if (tmp_0) {
    
#line 3485 
    __retres = IRQ_NONE;
    
#line 3485 
    goto return_label;
  }
  else ;
  ldv_53207: 
#line 3486 
  ;
  
#line 3488 
  status = IN4500(ai,(unsigned short)48);
  
#line 3489 
  if (((int)status & 5511) == 0 || (unsigned int)status == 65535U) 
#line 3490 
                                                                   goto ldv_53206; else ;
  
#line 3492 
  handled = 1;
  
#line 3494 
  if (((int)status & 256) != 0) {
    
#line 3495 
    OUT4500(ai,(unsigned short)52,(unsigned short)256);
    
#line 3496 
    OUT4500(ai,(unsigned short)52,(unsigned short)256);
  }
  else ;
  
#line 3499 
  if ((unsigned int)savedInterrupts == 0U) {
    
#line 3500 
    savedInterrupts = IN4500(ai,(unsigned short)50);
    
#line 3501 
    OUT4500(ai,(unsigned short)50,(unsigned short)0);
  }
  else ;
  
#line 3504 
  if (((int)status & 4096) != 0) {
    
#line 3505 
    OUT4500(ai,(unsigned short)52,(unsigned short)4096);
    
#line 3506 
    airo_handle_cisco_mic(ai);
  }
  else ;
  
#line 3509 
  if (((int)status & 128) != 0) 
#line 3511 
                                airo_handle_link(ai); else ;
  
#line 3515 
  if (((int)status & 1) != 0) 
#line 3516 
                              airo_handle_rx(ai); else ;
  
#line 3519 
  if (((int)status & 1030) != 0) 
#line 3520 
                                 airo_handle_tx(ai,(unsigned short)((int)status)); else ;
  
#line 3488 
  goto ldv_53207;
  ldv_53206: 
#line 3489 
  ;
  
#line 3528 
  if ((unsigned int)savedInterrupts != 0U) 
#line 3529 
                                           OUT4500(ai,(unsigned short)50,(unsigned short)((int)savedInterrupts)); else ;
  
#line 3531 
  __retres = (enum irqreturn)(handled != 0);
  return_label: 
#line 3531 
                return __retres;
}


#line 3543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void OUT4500(struct airo_info *ai, u16 reg, u16 val)
{
  int tmp;
  
#line 3544 
  tmp = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 3544 
  if (tmp != 0) 
#line 3545 
                reg = (unsigned short)((int)reg << 1U); else ;
  
#line 3546 
  if (do8bitIO == 0) 
#line 3547 
                     outw((unsigned short)((int)val),(int)((ai->dev)->base_addr + (unsigned long)reg));
  else {
    
#line 3549 
    outb((unsigned char)((int)((unsigned char)val)),(int)((ai->dev)->base_addr + (unsigned long)reg));
    
#line 3550 
    outb((unsigned char)((int)((unsigned char)((int)val >> 8))),(int)(((ai->dev)->base_addr + (unsigned long)reg) + (unsigned long)1U));
  }
  
#line 3552 
  return;
}


#line 3554  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static unsigned short IN4500(struct airo_info *ai, u16 reg)
{
  unsigned short rc;
  int tmp;
  
#line 3557 
  tmp = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 3557 
  if (tmp != 0) 
#line 3558 
                reg = (unsigned short)((int)reg << 1U); else ;
  
#line 3559 
  if (do8bitIO == 0) 
#line 3560 
                     rc = inw((int)((ai->dev)->base_addr + (unsigned long)reg));
  else {
    unsigned char tmp_0;
    unsigned char tmp_1;
    
#line 3562 
    tmp_0 = inb((int)((ai->dev)->base_addr + (unsigned long)reg));
    
#line 3562 
    rc = (unsigned short)tmp_0;
    
#line 3563 
    tmp_1 = inb((int)(((ai->dev)->base_addr + (unsigned long)reg) + (unsigned long)1U));
    
#line 3563 
    rc = (unsigned short)((int)((unsigned short)((int)tmp_1 << 8)) + (int)rc);
  }
  
#line 3565 
  return rc;
}


#line 3568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int enable_MAC(struct airo_info *ai, int lock)
{
  int __retres;
  int rc;
  Cmd cmd;
  Resp rsp;
  int tmp_1;
  
#line 3580 
  if ((ai->flags & 3UL) != 0UL) {
    
#line 3580 
    __retres = 0;
    
#line 3580 
    goto return_label;
  }
  else ;
  
#line 3582 
  if (lock != 0) {
    int tmp;
    
#line 3582 
    tmp = down_interruptible(& ai->sem);
    
#line 3582 
    if (tmp != 0) {
      
#line 3583 
      __retres = -512;
      
#line 3583 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3585 
  tmp_1 = constant_test_bit(2L,(unsigned long const volatile *)(& ai->flags));
  
#line 3585 
  if (tmp_1 == 0) {
    u16 tmp_0;
    
#line 3586 
    memset((void *)(& cmd),0,8UL);
    
#line 3587 
    cmd.cmd = (unsigned short)1U;
    
#line 3588 
    tmp_0 = issuecommand(ai,& cmd,& rsp);
    
#line 3588 
    rc = (int)tmp_0;
    
#line 3589 
    if (rc == 0) 
#line 3590 
                 set_bit(2L,(unsigned long volatile *)(& ai->flags)); else ;
  }
  else 
#line 3592 
       rc = 0;
  
#line 3594 
  if (lock != 0) 
#line 3595 
                 up(& ai->sem); else ;
  
#line 3597 
  if (rc != 0) 
#line 3598 
               printk("\001",(char *)(& (ai->dev)->name));
  else 
    
#line 3599 
    if (((int)rsp.status & 65280) != 0) {
      
#line 3600 
      printk("\001",(char *)(& (ai->dev)->name),(int)rsp.rsp0,(int)rsp.rsp1,(int)rsp.rsp2);
      
#line 3602 
      rc = -1;
    }
    else ;
  
#line 3604 
  __retres = rc;
  return_label: 
#line 3604 
                return __retres;
}


#line 3607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void disable_MAC(struct airo_info *ai, int lock)
{
  Cmd cmd;
  Resp rsp;
  int tmp_0;
  
#line 3611 
  if (lock != 0) {
    int tmp;
    
#line 3611 
    tmp = down_interruptible(& ai->sem);
    
#line 3611 
    if (tmp != 0) 
#line 3612 
                  goto return_label; else ;
  }
  else ;
  
#line 3614 
  tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& ai->flags));
  
#line 3614 
  if (tmp_0 != 0) {
    
#line 3615 
    memset((void *)(& cmd),0,8UL);
    
#line 3616 
    cmd.cmd = (unsigned short)2U;
    
#line 3617 
    issuecommand(ai,& cmd,& rsp);
    
#line 3618 
    set_bit(2L,(unsigned long volatile *)(& ai->flags));
  }
  else ;
  
#line 3620 
  if (lock != 0) 
#line 3621 
                 up(& ai->sem); else ;
  return_label: 
#line 3622 
                return;
}


#line 3624  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void enable_interrupts(struct airo_info *ai)
{
  
#line 3626 
  OUT4500(ai,(unsigned short)50,(unsigned short)5511);
  
#line 3627 
  return;
}


#line 3629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void disable_interrupts(struct airo_info *ai)
{
  
#line 3630 
  OUT4500(ai,(unsigned short)50,(unsigned short)0);
  
#line 3631 
  return;
}


#line 3633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void mpi_receive_802_3(struct airo_info *ai)
{
  RxFid rxd;
  struct sk_buff *skb;
  char *buffer;
  MICBuffer micbuf;
  
#line 3636 
  int len = 0;
  
#line 3639 
  int off = 0;
  
#line 3642 
  memcpy_fromio((void *)(& rxd),(void const volatile *)ai->rxfids[0].card_ram_off,16UL);
  
#line 3644 
  if ((unsigned int)*((unsigned char *)(& rxd) + 1UL) != 0U && (unsigned int)*((unsigned char *)(& rxd) + 3UL) == 0U) {
    int tmp_2;
    
#line 3645 
    len = (int)rxd.len + 12;
    
#line 3646 
    if ((unsigned int)len + 4294967284U > 2036U) 
#line 3647 
                                                 goto badrx; else ;
    
#line 3649 
    skb = dev_alloc_skb((unsigned int)len);
    
#line 3650 
    if (skb == (struct sk_buff *)0) {
      
#line 3651 
      (ai->dev)->stats.rx_dropped += 1UL;
      
#line 3652 
      goto badrx;
    }
    else ;
    
#line 3654 
    buffer = (char *)skb_put(skb,(unsigned int)len);
    
#line 3655 
    memcpy((void *)buffer,(void const *)ai->rxfids[0].virtual_host_addr,12UL);
    
#line 3656 
    if ((unsigned int)ai->micstats.enabled != 0U) {
      int tmp_1;
      
#line 3657 
      memcpy((void *)(& micbuf),(void const *)(ai->rxfids[0].virtual_host_addr + 12U),18UL);
      
#line 3660 
      if (0 != 0) 
#line 3660 
                  tmp_1 = (unsigned int)((unsigned short)(((int)micbuf.typelen << 8) | ((int)micbuf.typelen >> 8))) <= 1500U;
      else {
        __u16 tmp_0;
        
#line 3660 
        tmp_0 = __fswab16((unsigned short)((int)micbuf.typelen));
        
#line 3660 
        tmp_1 = (unsigned int)tmp_0 <= 1500U;
      }
      
#line 3660 
      if (tmp_1) {
        
#line 3661 
        if ((unsigned int)len <= 30U) 
#line 3662 
                                      goto badmic; else ;
        
#line 3664 
        off = 18;
        
#line 3665 
        skb_trim(skb,(unsigned int)(len - off));
      }
      else ;
    }
    else ;
    
#line 3668 
    memcpy((void *)(buffer + 12U),(void const *)(ai->rxfids[0].virtual_host_addr + ((unsigned int)off + 12U)),(unsigned long)((len + -12) - off));
    
#line 3671 
    tmp_2 = decapsulate(ai,& micbuf,(etherHead *)buffer,(unsigned short)((int)((unsigned int)((int)((unsigned short)len) - (int)((unsigned short)off)) + 65524U)));
    
#line 3671 
    if (tmp_2 != 0) {
      badmic: 
#line 3672 
      ;
      
#line 3673 
      dev_kfree_skb_irq(skb);
      
#line 3674 
      goto badrx;
    }
    else ;
    
#line 3677 
    if (ai->spy_data.spy_number > 0) {
      char *sa;
      struct iw_quality wstats;
      
#line 3681 
      sa = buffer + 6U;
      
#line 3682 
      wstats.qual = (unsigned char)0U;
      
#line 3683 
      wstats.level = (unsigned char)0U;
      
#line 3684 
      wstats.updated = (unsigned char)0U;
      
#line 3686 
      wireless_spy_update(ai->dev,(unsigned char *)sa,& wstats);
    }
    else ;
    
#line 3690 
    skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
    
#line 3691 
    skb->protocol = eth_type_trans(skb,ai->dev);
    
#line 3692 
    netif_rx(skb);
  }
  else ;
  badrx: 
#line 3694 
  ;
  
#line 3695 
  if ((unsigned int)*((unsigned char *)(& rxd) + 3UL) == 0U) {
    
#line 3696 
    rxd.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 3697 
    rxd.rdy = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
    
#line 3698 
    rxd.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))1840U;
    
#line 3699 
    memcpy_toio((void volatile *)ai->rxfids[0].card_ram_off,(void const *)(& rxd),16UL);
  }
  else ;
  
#line 3701 
  return;
}


#line 3703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void mpi_receive_802_11(struct airo_info *ai)
{
  RxFid rxd;
  u16 len;
  __le16 fc;
  struct rx_hdr hdr;
  u16 gap;
  u16 *buffer;
  int tmp_0;
  
#line 3706 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 3707 
  u16 hdrlen = (unsigned short)0U;
  
#line 3712 
  char *ptr = ai->rxfids[0].virtual_host_addr + 4U;
  
#line 3714 
  memcpy_fromio((void *)(& rxd),(void const volatile *)ai->rxfids[0].card_ram_off,16UL);
  
#line 3715 
  memcpy((void *)(& hdr),(void const *)ptr,16UL);
  
#line 3716 
  ptr += 16U;
  
#line 3718 
  if (((int)hdr.status & 2) != 0) 
#line 3719 
                                  hdr.len = (unsigned short)0U; else ;
  
#line 3720 
  if (ai->wifidev == (struct net_device *)0) 
#line 3721 
                                             hdr.len = (unsigned short)0U; else ;
  
#line 3722 
  len = hdr.len;
  
#line 3723 
  if ((unsigned int)len > 2312U) {
    
#line 3724 
    printk("\001",(char *)(& (ai->dev)->name),(int)len);
    
#line 3725 
    goto badrx;
  }
  else ;
  
#line 3727 
  if ((unsigned int)len == 0U) 
#line 3728 
                               goto badrx; else ;
  
#line 3730 
  fc = get_unaligned_le16((void const *)ptr);
  
#line 3731 
  tmp_0 = header_len((unsigned short)((int)fc));
  
#line 3731 
  hdrlen = (unsigned short)tmp_0;
  
#line 3733 
  skb = dev_alloc_skb((unsigned int)(((int)len + (int)hdrlen) + 2));
  
#line 3734 
  if (skb == (struct sk_buff *)0) {
    
#line 3735 
    (ai->dev)->stats.rx_dropped += 1UL;
    
#line 3736 
    goto badrx;
  }
  else ;
  
#line 3738 
  buffer = (u16 *)skb_put(skb,(unsigned int)((int)len + (int)hdrlen));
  
#line 3739 
  memcpy((void *)buffer,(void const *)ptr,(unsigned long)hdrlen);
  
#line 3740 
  ptr += (int)hdrlen;
  
#line 3741 
  if ((unsigned int)hdrlen == 24U) 
#line 3742 
                                   ptr += 6U; else ;
  
#line 3743 
  gap = get_unaligned_le16((void const *)ptr);
  
#line 3744 
  ptr += 2U;
  
#line 3745 
  if ((unsigned int)gap != 0U) 
    
#line 3746 
    if ((unsigned int)gap <= 8U) 
#line 3747 
                                 ptr += (int)gap; else 
#line 3749 
                                                       printk("\001",(char *)(& (ai->dev)->name));
  else ;
  
#line 3752 
  memcpy((void *)buffer + (int)hdrlen,(void const *)ptr,(unsigned long)len);
  
#line 3753 
  ptr += (int)len;
  
#line 3755 
  if (ai->spy_data.spy_number > 0) {
    char *sa;
    struct iw_quality wstats;
    
#line 3759 
    sa = (char *)buffer + 10U;
    
#line 3760 
    wstats.qual = hdr.rssi[0];
    
#line 3761 
    if (ai->rssi != (tdsRssiEntry *)0) 
#line 3762 
                                       wstats.level = (unsigned char)(- ((int)(ai->rssi + (int)hdr.rssi[1])->rssidBm)); else 
                                                                    
#line 3764 
                                                                    wstats.level = (unsigned char)(((int)hdr.rssi[1] + 321) / 2);
    
#line 3765 
    wstats.noise = ai->wstats.qual.noise;
    
#line 3766 
    wstats.updated = (unsigned char)11U;
    
#line 3770 
    wireless_spy_update(ai->dev,(unsigned char *)sa,& wstats);
  }
  else ;
  
#line 3773 
  skb_reset_mac_header(skb);
  
#line 3774 
  skb->pkt_type = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))3U;
  
#line 3775 
  skb->dev = ai->wifidev;
  
#line 3776 
  skb->protocol = (unsigned short)1024U;
  
#line 3777 
  skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))0U;
  
#line 3778 
  netif_rx(skb);
  badrx: 
#line 3780 
  ;
  
#line 3781 
  if ((unsigned int)*((unsigned char *)(& rxd) + 3UL) == 0U) {
    
#line 3782 
    rxd.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 3783 
    rxd.rdy = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
    
#line 3784 
    rxd.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))1840U;
    
#line 3785 
    memcpy_toio((void volatile *)ai->rxfids[0].card_ram_off,(void const *)(& rxd),16UL);
  }
  else ;
  
#line 3787 
  return;
}


#line 3789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u16 setup_card(struct airo_info *ai, u8 *mac, int lock)
{
  u16 __retres;
  Cmd cmd;
  Resp rsp;
  int status;
  SsidRid mySsid;
  __le16 lastindex;
  WepKeyRid wkr;
  int rc;
  u16 tmp_0;
  int tmp_2;
  
#line 3799 
  memset((void *)(& mySsid),0,104UL);
  
#line 3800 
  kfree((void const *)ai->flash);
  
#line 3801 
  ai->flash = (unsigned short *)0U;
  
#line 3804 
  cmd.cmd = (unsigned short)16U;
  
#line 3805 
  cmd.parm2 = (unsigned short)0U;
  
#line 3805 
  cmd.parm1 = cmd.parm2;
  
#line 3805 
  cmd.parm0 = cmd.parm1;
  
#line 3806 
  if (lock != 0) {
    int tmp;
    
#line 3806 
    tmp = down_interruptible(& ai->sem);
    
#line 3806 
    if (tmp != 0) {
      
#line 3807 
      __retres = (unsigned short)65535U;
      
#line 3807 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3808 
  tmp_0 = issuecommand(ai,& cmd,& rsp);
  
#line 3808 
  if ((unsigned int)tmp_0 != 0U) {
    
#line 3809 
    if (lock != 0) 
#line 3810 
                   up(& ai->sem); else ;
    
#line 3811 
    __retres = (unsigned short)65535U;
    
#line 3811 
    goto return_label;
  }
  else ;
  
#line 3813 
  disable_MAC(ai,0);
  
#line 3816 
  tmp_2 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 3816 
  if (tmp_2 == 0) {
    u16 tmp_1;
    
#line 3817 
    cmd.cmd = (unsigned short)273U;
    
#line 3818 
    tmp_1 = issuecommand(ai,& cmd,& rsp);
    
#line 3818 
    if ((unsigned int)tmp_1 != 0U) {
      
#line 3819 
      if (lock != 0) 
#line 3820 
                     up(& ai->sem); else ;
      
#line 3821 
      printk("\001",(char *)(& (ai->dev)->name));
      
#line 3822 
      __retres = (unsigned short)65535U;
      
#line 3822 
      goto return_label;
    }
    else ;
    
#line 3824 
    if (aux_bap == 0 || ((int)rsp.status & 65280) != 0) {
      
#line 3825 
      ai->bap_read = & fast_bap_read;
      
#line 3826 
      printk("\001",(char *)(& (ai->dev)->name));
    }
    else {
      
#line 3828 
      ai->bap_read = & aux_bap_read;
      
#line 3829 
      printk("\001",(char *)(& (ai->dev)->name));
    }
  }
  else ;
  
#line 3832 
  if (lock != 0) 
#line 3833 
                 up(& ai->sem); else ;
  
#line 3834 
  if ((unsigned int)ai->config.len == 0U) {
    int i;
    tdsRssiRid rssi_rid;
    CapabilityRid cap_rid;
    
#line 3839 
    kfree((void const *)ai->APList);
    
#line 3840 
    ai->APList = (APListRid *)0;
    
#line 3841 
    kfree((void const *)ai->SSID);
    
#line 3842 
    ai->SSID = (SsidRid *)0;
    
#line 3844 
    status = readConfigRid(ai,lock);
    
#line 3845 
    if (status != 0) {
      
#line 3845 
      __retres = (unsigned short)65535U;
      
#line 3845 
      goto return_label;
    }
    else ;
    
#line 3847 
    status = readCapabilityRid(ai,& cap_rid,lock);
    
#line 3848 
    if (status != 0) {
      
#line 3848 
      __retres = (unsigned short)65535U;
      
#line 3848 
      goto return_label;
    }
    else ;
    
#line 3850 
    status = PC4500_readrid(ai,(unsigned short)65284,(void *)(& rssi_rid),514,lock);
    
#line 3851 
    if (status == 0) 
      
#line 3852 
      if (ai->rssi != (tdsRssiEntry *)0) 
#line 3853 
                                         memcpy((void *)ai->rssi,(void const *)(& rssi_rid) + 2U,512UL);
      else {
        tdsRssiEntry *tmp_3;
        
#line 3852 
        tmp_3 = (tdsRssiEntry *)kmalloc(512UL,208U);
        
#line 3852 
        ai->rssi = tmp_3;
        
#line 3852 
        if (tmp_3 != (tdsRssiEntry *)0) 
#line 3853 
                                        memcpy((void *)ai->rssi,(void const *)(& rssi_rid) + 2U,512UL); else ;
      }
    else {
      
#line 3856 
      kfree((void const *)ai->rssi);
      
#line 3857 
      ai->rssi = (tdsRssiEntry *)0;
      
#line 3858 
      if (((int)cap_rid.softCap & 8) != 0) 
#line 3859 
                                           ai->config.rmode = (unsigned short)((unsigned int)ai->config.rmode | 512U); else 
                                                                    
#line 3861 
                                                                    printk("\001",(char *)(& (ai->dev)->name));
    }
    
#line 3864 
    ai->config.opmode = (unsigned short)(adhoc == 0);
    
#line 3865 
    ai->config.authType = (unsigned short)1U;
    
#line 3866 
    ai->config.modulation = (unsigned short)1U;
    
#line 3868 
    if ((unsigned int)cap_rid.len > 131U && ((int)cap_rid.extSoftCap & 1) != 0) {
      int tmp_5;
      
#line 3869 
      tmp_5 = micsetup(ai);
      
#line 3869 
      if (tmp_5 == 0) {
        
#line 3871 
        ai->config.opmode = (unsigned short)((unsigned int)ai->config.opmode | 32768U);
        
#line 3872 
        set_bit(4L,(unsigned long volatile *)(& ai->flags));
      }
      else ;
    }
    else ;
    
#line 3876 
    i = 0;
    
#line 3876 
    goto ldv_53281;
    ldv_53280: 
#line 3877 
    ;
    
#line 3877 
    *(mac + i) = ai->config.macAddr[i];
    
#line 3876 
    i += 1;
    ldv_53281: 
#line 3877 
    ;
    
#line 3876 
    if (i <= 5) 
#line 3878 
                goto ldv_53280; else 
#line 3881 
                                     goto ldv_53282;
    ldv_53282: 
#line 3882 
    ;
    
#line 3882 
    if (rates[0] != 0) {
      
#line 3883 
      memset((void *)(& ai->config.rates),0,8UL);
      
#line 3884 
      i = 0;
      
#line 3884 
      goto ldv_53284;
      ldv_53283: 
#line 3885 
      ;
      
#line 3885 
      ai->config.rates[i] = (unsigned char)rates[i];
      
#line 3884 
      i += 1;
      ldv_53284: 
#line 3885 
      ;
      
#line 3884 
      if (i <= 7 && rates[i] != 0) 
#line 3886 
                                   goto ldv_53283; else 
#line 3889 
                                                        goto ldv_53285;
      ldv_53285: 
#line 3890 
      ;
    }
    else ;
    
#line 3888 
    set_bit(13L,(unsigned long volatile *)(& ai->flags));
  }
  else ;
  
#line 3892 
  if (ssids[0] != (char *)0) {
    int i_0;
    
#line 3894 
    i_0 = 0;
    
#line 3894 
    goto ldv_53289;
    ldv_53288: 
#line 3895 
    ;
    {
      
#line 3895 
      size_t len = strlen((char const *)ssids[i_0]);
      
#line 3896 
      if (len > 32UL) 
#line 3897 
                      len = 32UL; else ;
      
#line 3898 
      mySsid.ssids[i_0].len = (unsigned short)len;
      
#line 3899 
      memcpy((void *)(& mySsid.ssids[i_0].ssid),(void const *)ssids[i_0],len);
    }
    
#line 3894 
    i_0 += 1;
    ldv_53289: 
#line 3895 
    ;
    
#line 3894 
    if (i_0 <= 2 && ssids[i_0] != (char *)0) 
#line 3896 
                                             goto ldv_53288; else 
#line 3899 
                                                                  goto ldv_53290;
    ldv_53290: 
#line 3900 
    ;
    
#line 3901 
    mySsid.len = (unsigned short)104U;
  }
  else ;
  
#line 3904 
  status = writeConfigRid(ai,lock);
  
#line 3905 
  if (status != 0) {
    
#line 3905 
    __retres = (unsigned short)65535U;
    
#line 3905 
    goto return_label;
  }
  else ;
  
#line 3908 
  if (ssids[0] != (char *)0) {
    
#line 3909 
    status = writeSsidRid(ai,& mySsid,lock);
    
#line 3910 
    if (status != 0) {
      
#line 3910 
      __retres = (unsigned short)65535U;
      
#line 3910 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3913 
  status = enable_MAC(ai,lock);
  
#line 3914 
  if (status != 0) {
    
#line 3915 
    __retres = (unsigned short)65535U;
    
#line 3915 
    goto return_label;
  }
  else ;
  
#line 3918 
  rc = readWepKeyRid(ai,& wkr,1,lock);
  
#line 3919 
  if (rc == 0) {
    ldv_53291: 
#line 3921 
    ;
    
#line 3920 
    lastindex = wkr.kindex;
    
#line 3921 
    if ((unsigned int)wkr.kindex == 65535U) 
#line 3922 
                                            ai->defindex = (char)wkr.mac[0]; else ;
    
#line 3924 
    rc = readWepKeyRid(ai,& wkr,0,lock);
    
#line 3925 
    if ((int)wkr.kindex != (int)lastindex) 
#line 3927 
                                           goto ldv_53291; else 
#line 3930 
                                                                goto ldv_53292;
    ldv_53292: 
#line 3931 
    ;
  }
  else ;
  
#line 3927 
  try_auto_wep(ai);
  
#line 3929 
  __retres = (unsigned short)0U;
  return_label: 
#line 3929 
                return __retres;
}


#line 3932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u16 issuecommand(struct airo_info *ai, Cmd *pCmd, Resp *pRsp)
{
  u16 __retres;
  unsigned short tmp;
  unsigned short tmp_0;
  int tmp_1;
  int tmp_2;
  unsigned short tmp_5;
  
#line 3934 
  int max_tries = 600000;
  
#line 3936 
  tmp = IN4500(ai,(unsigned short)48);
  
#line 3936 
  if (((int)tmp & 16) != 0) 
#line 3937 
                            OUT4500(ai,(unsigned short)52,(unsigned short)16); else ;
  
#line 3939 
  OUT4500(ai,(unsigned short)2,(unsigned short)((int)pCmd->parm0));
  
#line 3940 
  OUT4500(ai,(unsigned short)4,(unsigned short)((int)pCmd->parm1));
  
#line 3941 
  OUT4500(ai,(unsigned short)6,(unsigned short)((int)pCmd->parm2));
  
#line 3942 
  OUT4500(ai,(unsigned short)0,(unsigned short)((int)pCmd->cmd));
  
#line 3944 
  goto ldv_53300;
  ldv_53299: 
#line 3945 
  ;
  
#line 3945 
  tmp_0 = IN4500(ai,(unsigned short)0);
  
#line 3945 
  ;
  
#line 3945 
  if ((int)tmp_0 == (int)pCmd->cmd) 
#line 3947 
                                    OUT4500(ai,(unsigned short)0,(unsigned short)((int)pCmd->cmd)); else ;
  
#line 3948 
  tmp_1 = preempt_count();
  
#line 3948 
  if (tmp_1 == 0) {
    
#line 3948 
    if ((max_tries & 255) == 0) 
#line 3949 
                                schedule(); else ;
  }
  else ;
  ldv_53300: 
#line 3950 
  ;
  
#line 3944 
  tmp_2 = max_tries;
  
#line 3944 
  max_tries -= 1;
  
#line 3944 
  ;
  
#line 3944 
  if (tmp_2 != 0) {
    unsigned short tmp_3;
    
#line 3944 
    tmp_3 = IN4500(ai,(unsigned short)48);
    
#line 3944 
    if (((int)tmp_3 & 16) == 0) 
#line 3946 
                                goto ldv_53299; else 
#line 3949 
                                                     goto ldv_53301;
  }
  else 
#line 3949 
       goto ldv_53301;
  ldv_53301: 
#line 3950 
  ;
  
#line 3952 
  if (max_tries == -1) {
    unsigned short tmp_4;
    
#line 3953 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 3955 
    tmp_4 = IN4500(ai,(unsigned short)0);
    
#line 3955 
    if ((int)tmp_4 < 0) 
#line 3956 
                        OUT4500(ai,(unsigned short)52,(unsigned short)16384); else ;
    
#line 3957 
    __retres = (unsigned short)65535U;
    
#line 3957 
    goto return_label;
  }
  else ;
  
#line 3961 
  pRsp->status = IN4500(ai,(unsigned short)8);
  
#line 3962 
  pRsp->rsp0 = IN4500(ai,(unsigned short)10);
  
#line 3963 
  pRsp->rsp1 = IN4500(ai,(unsigned short)12);
  
#line 3964 
  pRsp->rsp2 = IN4500(ai,(unsigned short)14);
  
#line 3965 
  if (((int)pRsp->status & 65280) != 0 && (unsigned int)pCmd->cmd != 4U) 
    
#line 3966 
    printk("\001",(char *)(& (ai->dev)->name),(int)pCmd->cmd,(int)pRsp->status,(int)pRsp->rsp0,(int)pRsp->rsp1,(int)pRsp->rsp2); else ;
  
#line 3972 
  tmp_5 = IN4500(ai,(unsigned short)0);
  
#line 3972 
  if ((int)tmp_5 < 0) 
#line 3973 
                      OUT4500(ai,(unsigned short)52,(unsigned short)16384); else ;
  
#line 3976 
  OUT4500(ai,(unsigned short)52,(unsigned short)16);
  
#line 3978 
  __retres = (unsigned short)0U;
  return_label: 
#line 3978 
                return __retres;
}


#line 3984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int bap_setup(struct airo_info *ai, u16 rid, u16 offset, int whichbap)
{
  int __retres;
  
#line 3986 
  int timeout = 50;
  
#line 3987 
  int max_tries = 3;
  
#line 3989 
  OUT4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 24U)),(unsigned short)((int)rid));
  
#line 3990 
  OUT4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 28U)),(unsigned short)((int)offset));
  ldv_53312: 
#line 3991 
  ;
  {
    unsigned short tmp;
    int tmp_1;
    
#line 3992 
    tmp = IN4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 28U)));
    
#line 3992 
    int status = (int)tmp;
    
#line 3993 
    if ((status & 32768) != 0) {
      int tmp_0;
      
#line 3996 
      tmp_0 = timeout;
      
#line 3996 
      timeout -= 1;
      
#line 3996 
      ;
      
#line 3996 
      if (tmp_0 != 0) 
#line 3997 
                      goto ldv_53311; else ;
    }
    else 
      
#line 3999 
      if ((status & 16384) != 0) {
        
#line 4001 
        printk("\001",(char *)(& (ai->dev)->name),status,whichbap);
        
#line 4003 
        __retres = -1;
        
#line 4003 
        goto return_label;
      }
      else 
        
#line 4004 
        if ((status & 8192) != 0) {
          
#line 4005 
          __retres = 0;
          
#line 4005 
          goto return_label;
        }
        else ;
    
#line 4007 
    tmp_1 = max_tries;
    
#line 4007 
    max_tries -= 1;
    
#line 4007 
    ;
    
#line 4007 
    if (tmp_1 == 0) {
      
#line 4008 
      printk("\001",(char *)(& (ai->dev)->name));
      
#line 4010 
      __retres = -1;
      
#line 4010 
      goto return_label;
    }
    else ;
    
#line 4013 
    OUT4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 24U)),(unsigned short)((int)rid));
    
#line 4014 
    OUT4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 28U)),(unsigned short)((int)offset));
    
#line 4015 
    timeout = 50;
  }
  ldv_53311: 
#line 4017 
  ;
  
#line 3991 
  goto ldv_53312;
  return_label: 
#line 3991 
                return __retres;
}


#line 4022  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u16 aux_setup(struct airo_info *ai, u16 page, u16 offset, u16 *len)
{
  u16 next;
  unsigned short tmp;
  
#line 4027 
  OUT4500(ai,(unsigned short)58,(unsigned short)((int)page));
  
#line 4028 
  OUT4500(ai,(unsigned short)60,(unsigned short)0);
  
#line 4029 
  next = IN4500(ai,(unsigned short)62);
  
#line 4030 
  tmp = IN4500(ai,(unsigned short)62);
  
#line 4030 
  *len = (unsigned short)((unsigned int)tmp & 255U);
  
#line 4031 
  if ((unsigned int)offset != 4U) 
#line 4031 
                                  OUT4500(ai,(unsigned short)60,(unsigned short)((int)offset)); else ;
  
#line 4032 
  return next;
}


#line 4036  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int aux_bap_read(struct airo_info *ai, __le16 *pu16Dst, int bytelen, int whichbap)
{
  int __retres;
  u16 len;
  u16 page;
  u16 offset;
  u16 next;
  int words;
  int i;
  unsigned long flags;
  
#line 4047 
  ldv___ldv_spin_lock_93(& ai->aux_lock);
  
#line 4048 
  page = IN4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 40U)));
  
#line 4049 
  offset = IN4500(ai,(unsigned short)((int)((unsigned int)((unsigned short)whichbap) + 44U)));
  
#line 4050 
  next = aux_setup(ai,(unsigned short)((int)page),(unsigned short)((int)offset),& len);
  
#line 4051 
  words = (bytelen + 1) >> 1;
  
#line 4053 
  i = 0;
  
#line 4053 
  goto ldv_53335;
  ldv_53334: 
#line 4054 
  ;
  {
    int count;
    
#line 4055 
    if ((int)len >> 1 < words - i) 
#line 4055 
                                   count = (int)len >> 1; else 
#line 4055 
                                                               count = words - i;
    
#line 4056 
    if (do8bitIO == 0) 
#line 4057 
                       insb((int)(((ai->dev)->base_addr + (unsigned long)whichbap) + (unsigned long)54U),(void *)(pu16Dst + i),(unsigned long)count); else 
                                                                    
#line 4060 
                                                                    insb((int)(((ai->dev)->base_addr + (unsigned long)whichbap) + (unsigned long)54U),(void *)(pu16Dst + i),(unsigned long)(count << 1));
    
#line 4062 
    i += count;
    
#line 4063 
    if (i < words) 
#line 4064 
                   next = aux_setup(ai,(unsigned short)((int)next),(unsigned short)4,& len); else ;
  }
  ldv_53335: 
#line 4066 
  ;
  
#line 4053 
  if (i < words) 
#line 4055 
                 goto ldv_53334; else 
#line 4058 
                                      goto ldv_53336;
  ldv_53336: 
#line 4059 
  ;
  
#line 4067 
  ldv_spin_unlock_irqrestore_94(& ai->aux_lock,flags);
  
#line 4068 
  __retres = 0;
  
#line 4068 
  return __retres;
}


#line 4073  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int fast_bap_read(struct airo_info *ai, __le16 *pu16Dst, int bytelen, int whichbap)
{
  int __retres;
  
#line 4076 
  bytelen = (bytelen + 1) & -2;
  
#line 4077 
  if (do8bitIO == 0) 
#line 4078 
                     insb((int)(((ai->dev)->base_addr + (unsigned long)whichbap) + (unsigned long)54U),(void *)pu16Dst,(unsigned long)(bytelen >> 1)); else 
                                                                    
#line 4080 
                                                                    insb((int)(((ai->dev)->base_addr + (unsigned long)whichbap) + (unsigned long)54U),(void *)pu16Dst,(unsigned long)bytelen);
  
#line 4081 
  __retres = 0;
  
#line 4081 
  return __retres;
}


#line 4085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int bap_write(struct airo_info *ai, __le16 const *pu16Src, int bytelen, int whichbap)
{
  int __retres;
  
#line 4088 
  bytelen = (bytelen + 1) & -2;
  
#line 4089 
  if (do8bitIO == 0) 
#line 4090 
                     outsb((int)(((ai->dev)->base_addr + (unsigned long)whichbap) + (unsigned long)54U),(void const *)pu16Src,(unsigned long)(bytelen >> 1)); else 
                                                                    
#line 4093 
                                                                    outsb((int)(((ai->dev)->base_addr + (unsigned long)whichbap) + (unsigned long)54U),(void const *)pu16Src,(unsigned long)bytelen);
  
#line 4094 
  __retres = 0;
  
#line 4094 
  return __retres;
}


#line 4097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int PC4500_accessrid(struct airo_info *ai, u16 rid, u16 accmd)
{
  int __retres;
  Cmd cmd;
  Resp rsp;
  u16 status;
  
#line 4103 
  memset((void *)(& cmd),0,8UL);
  
#line 4104 
  cmd.cmd = accmd;
  
#line 4105 
  cmd.parm0 = rid;
  
#line 4106 
  status = issuecommand(ai,& cmd,& rsp);
  
#line 4107 
  if ((unsigned int)status != 0U) {
    
#line 4107 
    __retres = (int)status;
    
#line 4107 
    goto return_label;
  }
  else ;
  
#line 4108 
  if (((int)rsp.status & 32512) != 0) {
    
#line 4109 
    __retres = ((int)accmd << 8) + ((int)rsp.rsp0 & 255);
    
#line 4109 
    goto return_label;
  }
  else ;
  
#line 4111 
  __retres = 0;
  return_label: 
#line 4111 
                return __retres;
}


#line 4116  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int PC4500_readrid(struct airo_info *ai, u16 rid, void *pBuf, int len, int lock)
{
  int __retres;
  u16 status;
  int tmp_5;
  
#line 4119 
  int rc = 0;
  
#line 4121 
  if (lock != 0) {
    int tmp;
    
#line 4122 
    tmp = down_interruptible(& ai->sem);
    
#line 4122 
    if (tmp != 0) {
      
#line 4123 
      __retres = -1;
      
#line 4123 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4125 
  tmp_5 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 4125 
  if (tmp_5 != 0) {
    Cmd cmd;
    Resp rsp;
    u16 tmp_0;
    
#line 4129 
    memset((void *)(& cmd),0,8UL);
    
#line 4130 
    memset((void *)(& rsp),0,8UL);
    
#line 4131 
    ai->config_desc.rid_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 4132 
    ai->config_desc.rid_desc.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))2048U;
    
#line 4133 
    ai->config_desc.rid_desc.rid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))))0U;
    
#line 4134 
    ai->config_desc.rid_desc.host_addr = (unsigned long long)ai->ridbus;
    
#line 4136 
    cmd.cmd = (unsigned short)33U;
    
#line 4137 
    cmd.parm0 = rid;
    
#line 4139 
    memcpy_toio((void volatile *)ai->config_desc.card_ram_off,(void const *)(& ai->config_desc.rid_desc),16UL);
    
#line 4142 
    tmp_0 = issuecommand(ai,& cmd,& rsp);
    
#line 4142 
    rc = (int)tmp_0;
    
#line 4144 
    if (((int)rsp.status & 32512) != 0) 
#line 4145 
                                        rc = (int)rsp.rsp0; else ;
    
#line 4146 
    if (rc == 0) 
#line 4147 
                 memcpy(pBuf,(void const *)ai->config_desc.virtual_host_addr,(unsigned long)len); else ;
    
#line 4148 
    goto done;
  }
  else {
    int tmp_1;
    int tmp_2;
    int tmp_4;
    
#line 4150 
    tmp_1 = PC4500_accessrid(ai,(unsigned short)((int)rid),(unsigned short)33);
    
#line 4150 
    status = (unsigned short)tmp_1;
    
#line 4150 
    if ((unsigned int)status != 0U) {
      
#line 4151 
      rc = (int)status;
      
#line 4152 
      goto done;
    }
    else ;
    
#line 4154 
    tmp_2 = bap_setup(ai,(unsigned short)((int)rid),(unsigned short)0,2);
    
#line 4154 
    if (tmp_2 != 0) {
      
#line 4155 
      rc = -1;
      
#line 4156 
      goto done;
    }
    else ;
    
#line 4159 
    bap_read(ai,(__le16 *)pBuf,2,2);
    {
      int tmp_3;
      
#line 4161 
      int _min1 = len;
      
#line 4161 
      int _min2 = (int)*((__le16 *)pBuf);
      
#line 4161 
      if (_min1 < _min2) 
#line 4161 
                         tmp_3 = _min1; else 
#line 4161 
                                             tmp_3 = _min2;
      
#line 4161 
      tmp_4 = tmp_3;
    }
    
#line 4161 
    len = tmp_4 + -2;
    
#line 4163 
    if (len <= 2) {
      
#line 4164 
      printk("\001",(char *)(& (ai->dev)->name),(int)rid,len);
      
#line 4167 
      rc = -1;
      
#line 4168 
      goto done;
    }
    else ;
    
#line 4171 
    rc = bap_read(ai,(__le16 *)pBuf + 1U,len,2);
  }
  done: 
#line 4173 
  ;
  
#line 4174 
  if (lock != 0) 
#line 4175 
                 up(& ai->sem); else ;
  
#line 4176 
  __retres = rc;
  return_label: 
#line 4176 
                return __retres;
}


#line 4181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int PC4500_writerid(struct airo_info *ai, u16 rid, void const *pBuf, int len, int lock)
{
  int __retres;
  u16 status;
  int tmp_4;
  
#line 4185 
  int rc = 0;
  
#line 4187 
  *((__le16 *)pBuf) = (unsigned short)len;
  
#line 4189 
  if (lock != 0) {
    int tmp;
    
#line 4190 
    tmp = down_interruptible(& ai->sem);
    
#line 4190 
    if (tmp != 0) {
      
#line 4191 
      __retres = -1;
      
#line 4191 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 4193 
  tmp_4 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 4193 
  if (tmp_4 != 0) {
    Cmd cmd;
    Resp rsp;
    int tmp_0;
    
#line 4197 
    tmp_0 = constant_test_bit(2L,(unsigned long const volatile *)(& ai->flags));
    
#line 4197 
    if (tmp_0 != 0) {
      
#line 4197 
      if ((unsigned int)rid != 65301U) 
#line 4198 
                                       printk("\001",(char *)(& (ai->dev)->name),"PC4500_writerid",(int)rid); else ;
    }
    else ;
    
#line 4201 
    memset((void *)(& cmd),0,8UL);
    
#line 4202 
    memset((void *)(& rsp),0,8UL);
    
#line 4204 
    ai->config_desc.rid_desc.valid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 4205 
    ai->config_desc.rid_desc.len = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))))*((u16 *)pBuf);
    
#line 4206 
    ai->config_desc.rid_desc.rid = (unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))))0U;
    
#line 4208 
    cmd.cmd = (unsigned short)289U;
    
#line 4209 
    cmd.parm0 = rid;
    
#line 4211 
    memcpy_toio((void volatile *)ai->config_desc.card_ram_off,(void const *)(& ai->config_desc.rid_desc),16UL);
    
#line 4214 
    if ((unsigned int)len + 4294967292U > 2043U) {
      
#line 4215 
      printk("\001",(char *)(& (ai->dev)->name),"PC4500_writerid",len);
      
#line 4216 
      rc = -1;
    }
    else {
      u16 tmp_1;
      
#line 4218 
      memcpy((void *)ai->config_desc.virtual_host_addr,pBuf,(unsigned long)len);
      
#line 4221 
      tmp_1 = issuecommand(ai,& cmd,& rsp);
      
#line 4221 
      rc = (int)tmp_1;
      
#line 4222 
      if ((rc & 65280) != 0) {
        
#line 4223 
        printk("\001",(char *)(& (ai->dev)->name),"PC4500_writerid",rc);
        
#line 4225 
        printk("\001",(char *)(& (ai->dev)->name),"PC4500_writerid",(int)cmd.cmd);
      }
      else ;
      
#line 4229 
      if (((int)rsp.status & 32512) != 0) 
#line 4230 
                                          rc = (int)rsp.rsp0; else ;
    }
  }
  else {
    int tmp_2;
    int tmp_3;
    
#line 4234 
    tmp_2 = PC4500_accessrid(ai,(unsigned short)((int)rid),(unsigned short)33);
    
#line 4234 
    status = (unsigned short)tmp_2;
    
#line 4234 
    if ((unsigned int)status != 0U) {
      
#line 4235 
      rc = (int)status;
      
#line 4236 
      goto done;
    }
    else ;
    
#line 4239 
    tmp_3 = bap_setup(ai,(unsigned short)((int)rid),(unsigned short)0,2);
    
#line 4239 
    if (tmp_3 != 0) {
      
#line 4240 
      rc = -1;
      
#line 4241 
      goto done;
    }
    else ;
    
#line 4243 
    bap_write(ai,(__le16 const *)pBuf,len,2);
    
#line 4245 
    rc = PC4500_accessrid(ai,(unsigned short)((int)rid),(unsigned short)289);
  }
  done: 
#line 4247 
  ;
  
#line 4248 
  if (lock != 0) 
#line 4249 
                 up(& ai->sem); else ;
  
#line 4250 
  __retres = rc;
  return_label: 
#line 4250 
                return __retres;
}


#line 4255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u16 transmit_allocate(struct airo_info *ai, int lenPayload, int raw)
{
  u16 __retres;
  Cmd cmd;
  Resp rsp;
  u16 txFid;
  __le16 txControl;
  int tmp;
  u16 tmp_0;
  unsigned short tmp_1;
  int tmp_2;
  
#line 4257 
  unsigned int loop = 3000U;
  
#line 4263 
  cmd.cmd = (unsigned short)10U;
  
#line 4264 
  cmd.parm0 = (unsigned short)lenPayload;
  
#line 4265 
  tmp = down_interruptible(& ai->sem);
  
#line 4265 
  if (tmp != 0) {
    
#line 4266 
    __retres = (unsigned short)65535U;
    
#line 4266 
    goto return_label;
  }
  else ;
  
#line 4267 
  tmp_0 = issuecommand(ai,& cmd,& rsp);
  
#line 4267 
  if ((unsigned int)tmp_0 != 0U) {
    
#line 4268 
    txFid = (unsigned short)65535U;
    
#line 4269 
    goto done;
  }
  else ;
  
#line 4271 
  if (((int)rsp.status & 65280) != 0) {
    
#line 4272 
    txFid = (unsigned short)65535U;
    
#line 4273 
    goto done;
  }
  else ;
  
#line 4278 
  goto ldv_53397;
  ldv_53396: 
#line 4279 
  ;
  ldv_53397: 
#line 4280 
  ;
  
#line 4278 
  tmp_1 = IN4500(ai,(unsigned short)48);
  
#line 4278 
  if (((int)tmp_1 & 8) == 0) {
    
#line 4278 
    loop -= 1U;
    
#line 4278 
    if (loop != 0U) 
#line 4280 
                    goto ldv_53396; else 
#line 4283 
                                         goto ldv_53398;
  }
  else 
#line 4283 
       goto ldv_53398;
  ldv_53398: 
#line 4284 
  ;
  
#line 4279 
  if (loop == 0U) {
    
#line 4280 
    txFid = (unsigned short)65535U;
    
#line 4281 
    goto done;
  }
  else ;
  
#line 4285 
  txFid = IN4500(ai,(unsigned short)34);
  
#line 4286 
  OUT4500(ai,(unsigned short)52,(unsigned short)8);
  
#line 4293 
  if (raw != 0) 
#line 4294 
                txControl = (unsigned short)46U; else 
#line 4297 
                                                      txControl = (unsigned short)38U;
  
#line 4299 
  tmp_2 = bap_setup(ai,(unsigned short)((int)txFid),(unsigned short)8,2);
  
#line 4299 
  if (tmp_2 != 0) 
#line 4300 
                  txFid = (unsigned short)65535U; else 
#line 4302 
                                                       bap_write(ai,(__le16 const *)(& txControl),2,2);
  done: 
#line 4304 
  ;
  
#line 4305 
  up(& ai->sem);
  
#line 4307 
  __retres = txFid;
  return_label: 
#line 4307 
                return __retres;
}


#line 4313  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int transmit_802_3_packet(struct airo_info *ai, int len, char *pPacket)
{
  int __retres;
  __le16 payloadLen;
  Cmd cmd;
  Resp rsp;
  MICBuffer pMic;
  int tmp_0;
  int tmp_3;
  u16 tmp_4;
  
#line 4318 
  int miclen = 0;
  
#line 4319 
  u16 txFid = (unsigned short)len;
  
#line 4322 
  len >>= 16;
  
#line 4324 
  if (len <= 12) {
    
#line 4325 
    printk("\001",(char *)(& (ai->dev)->name),len);
    
#line 4326 
    __retres = -1;
    
#line 4326 
    goto return_label;
  }
  else ;
  
#line 4328 
  len += -12;
  
#line 4330 
  tmp_0 = constant_test_bit(4L,(unsigned long const volatile *)(& ai->flags));
  
#line 4330 
  if (tmp_0 != 0) {
    
#line 4330 
    if ((unsigned int)ai->micstats.enabled != 0U) {
      int tmp_2;
      
#line 4330 
      if (0 != 0) 
#line 4330 
                  tmp_2 = (((int)*((__be16 *)pPacket + 6U) << 8) | ((int)*((__be16 *)pPacket + 6U) >> 8)) != -30578;
      else {
        __u16 tmp_1;
        
#line 4331 
        tmp_1 = __fswab16((unsigned short)((int)*((__be16 *)pPacket + 6U)));
        
#line 4330 
        tmp_2 = (unsigned int)tmp_1 != 34958U;
      }
      
#line 4330 
      if (tmp_2) {
        int tmp;
        
#line 4332 
        tmp = encapsulate(ai,(etherHead *)pPacket,& pMic,len);
        
#line 4332 
        if (tmp != 0) {
          
#line 4333 
          __retres = -1;
          
#line 4333 
          goto return_label;
        }
        else ;
        
#line 4334 
        miclen = 18;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 4338 
  tmp_3 = bap_setup(ai,(unsigned short)((int)txFid),(unsigned short)54,2);
  
#line 4338 
  if (tmp_3 != 0) {
    
#line 4338 
    __retres = -1;
    
#line 4338 
    goto return_label;
  }
  else ;
  
#line 4341 
  payloadLen = (unsigned short)((int)((unsigned short)len) + (int)((unsigned short)miclen));
  
#line 4342 
  bap_write(ai,(__le16 const *)(& payloadLen),2,2);
  
#line 4343 
  bap_write(ai,(__le16 const *)pPacket,12,2);
  
#line 4344 
  if (miclen != 0) 
#line 4345 
                   bap_write(ai,(__le16 const *)(& pMic),miclen,2); else ;
  
#line 4346 
  bap_write(ai,(__le16 const *)(pPacket + 12U),len,2);
  
#line 4348 
  memset((void *)(& cmd),0,8UL);
  
#line 4349 
  cmd.cmd = (unsigned short)11U;
  
#line 4350 
  cmd.parm0 = txFid;
  
#line 4351 
  tmp_4 = issuecommand(ai,& cmd,& rsp);
  
#line 4351 
  if ((unsigned int)tmp_4 != 0U) {
    
#line 4351 
    __retres = -1;
    
#line 4351 
    goto return_label;
  }
  else ;
  
#line 4352 
  if (((int)rsp.status & 65280) != 0) {
    
#line 4352 
    __retres = -1;
    
#line 4352 
    goto return_label;
  }
  else ;
  
#line 4353 
  __retres = 0;
  return_label: 
#line 4353 
                return __retres;
}


#line 4356  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int transmit_802_11_packet(struct airo_info *ai, int len, char *pPacket)
{
  int __retres;
  __le16 fc;
  __le16 payloadLen;
  Cmd cmd;
  Resp rsp;
  int hdrlen;
  int tmp;
  int tmp_0;
  u16 tmp_1;
  
#line 4362 
  u8 tail[28U] = {[20] = (unsigned char)6U};
  
#line 4364 
  u16 txFid = (unsigned short)len;
  
#line 4365 
  len >>= 16;
  
#line 4367 
  fc = *((__le16 *)pPacket);
  
#line 4368 
  hdrlen = header_len((unsigned short)((int)fc));
  
#line 4370 
  if (len < hdrlen) {
    
#line 4371 
    printk("\001",(char *)(& (ai->dev)->name),len);
    
#line 4372 
    __retres = -1;
    
#line 4372 
    goto return_label;
  }
  else ;
  
#line 4377 
  tmp = bap_setup(ai,(unsigned short)((int)txFid),(unsigned short)6,2);
  
#line 4377 
  if (tmp != 0) {
    
#line 4377 
    __retres = -1;
    
#line 4377 
    goto return_label;
  }
  else ;
  
#line 4380 
  payloadLen = (unsigned short)((int)((unsigned short)len) - (int)((unsigned short)hdrlen));
  
#line 4381 
  bap_write(ai,(__le16 const *)(& payloadLen),2,2);
  
#line 4382 
  tmp_0 = bap_setup(ai,(unsigned short)((int)txFid),(unsigned short)20,2);
  
#line 4382 
  if (tmp_0 != 0) {
    
#line 4382 
    __retres = -1;
    
#line 4382 
    goto return_label;
  }
  else ;
  
#line 4383 
  bap_write(ai,(__le16 const *)pPacket,hdrlen,2);
  
#line 4384 
  bap_write(ai,(__le16 const *)(& tail) + ((unsigned long)hdrlen + 18446744073709551606U),38 - hdrlen,2);
  
#line 4386 
  bap_write(ai,(__le16 const *)(pPacket + hdrlen),len - hdrlen,2);
  
#line 4388 
  memset((void *)(& cmd),0,8UL);
  
#line 4389 
  cmd.cmd = (unsigned short)11U;
  
#line 4390 
  cmd.parm0 = txFid;
  
#line 4391 
  tmp_1 = issuecommand(ai,& cmd,& rsp);
  
#line 4391 
  if ((unsigned int)tmp_1 != 0U) {
    
#line 4391 
    __retres = -1;
    
#line 4391 
    goto return_label;
  }
  else ;
  
#line 4392 
  if (((int)rsp.status & 65280) != 0) {
    
#line 4392 
    __retres = -1;
    
#line 4392 
    goto return_label;
  }
  else ;
  
#line 4393 
  __retres = 0;
  return_label: 
#line 4393 
                return __retres;
}


#line 4401 
static ssize_t proc_read(struct file *file, char *buffer, size_t len, loff_t *offset);


#line 4406 
static ssize_t proc_write(struct file *file, char const *buffer, size_t len, loff_t *offset);


#line 4410 
static int proc_close(struct inode *inode, struct file *file);


#line 4412 
static int proc_stats_open(struct inode *inode, struct file *file);


#line 4413 
static int proc_statsdelta_open(struct inode *inode, struct file *file);


#line 4414 
static int proc_status_open(struct inode *inode, struct file *file);


#line 4415 
static int proc_SSID_open(struct inode *inode, struct file *file);


#line 4416 
static int proc_APList_open(struct inode *inode, struct file *file);


#line 4417 
static int proc_BSSList_open(struct inode *inode, struct file *file);


#line 4418 
static int proc_config_open(struct inode *inode, struct file *file);


#line 4419 
static int proc_wepkey_open(struct inode *inode, struct file *file);


#line 4421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_statsdelta_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_statsdelta_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_stats_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_stats_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_status_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = (ssize_t (*)(struct file *, char const *, size_t , loff_t *))0, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_status_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4445  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_SSID_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = & proc_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_SSID_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_BSSList_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = & proc_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_BSSList_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_APList_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = & proc_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_APList_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4472  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_config_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = & proc_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_config_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4481  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct file_operations const proc_wepkey_ops = {.owner = & __this_module, .llseek = & default_llseek, .read = & proc_read, .write = & proc_write, .read_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .write_iter = (ssize_t (*)(struct kiocb *, struct iov_iter *))0, .iterate = (int (*)(struct file *, struct dir_context *))0, .poll = (unsigned int (*)(struct file *, struct poll_table_struct *))0, .unlocked_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .compat_ioctl = (long (*)(struct file *, unsigned int , unsigned long ))0, .mmap = (int (*)(struct file *, struct vm_area_struct *))0, .mremap = (int (*)(struct file *, struct vm_area_struct *))0, .open = & proc_wepkey_open, .flush = (int (*)(struct file *, fl_owner_t ))0, .release = & proc_close, .fsync = (int (*)(struct file *, loff_t , loff_t , int ))0, .aio_fsync = (int (*)(struct kiocb *, int ))0, .fasync = (int (*)(int , struct file *, int ))0, .lock = (int (*)(struct file *, int , struct file_lock *))0, .sendpage = (ssize_t (*)(struct file *, struct page *, int , size_t , loff_t *, int ))0, .get_unmapped_area = (unsigned long (*)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ))0, .check_flags = (int (*)(int ))0, .flock = (int (*)(struct file *, int , struct file_lock *))0, .splice_write = (ssize_t (*)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ))0, .splice_read = (ssize_t (*)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ))0, .setlease = (int (*)(struct file *, long , struct file_lock **, void **))0, .fallocate = (long (*)(struct file *, int , loff_t , loff_t ))0, .show_fdinfo = (void (*)(struct seq_file *, struct file *))0};

#line 4490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct proc_dir_entry *airo_entry;

#line 4502  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int setup_proc_entry(struct net_device *dev, struct airo_info *apriv)
{
  int __retres;
  struct proc_dir_entry *entry;
  
#line 4507 
  strcpy((char *)(& apriv->proc_name),(char const *)(& dev->name));
  
#line 4508 
  apriv->proc_entry = proc_mkdir_mode((char const *)(& apriv->proc_name),(unsigned short)((int)((unsigned short)airo_perm)),airo_entry);
  
#line 4510 
  if (apriv->proc_entry == (struct proc_dir_entry *)0) {
    
#line 4511 
    __retres = -12;
    
#line 4511 
    goto return_label;
  }
  else ;
  
#line 4512 
  proc_set_user(apriv->proc_entry,proc_kuid,proc_kgid);
  
#line 4515 
  entry = proc_create_data("StatsDelta",(unsigned short)((int)((unsigned short)proc_perm) & 292),apriv->proc_entry,& proc_statsdelta_ops,(void *)dev);
  
#line 4517 
  if (entry == (struct proc_dir_entry *)0) 
#line 4518 
                                           goto fail; else ;
  
#line 4519 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4522 
  entry = proc_create_data("Stats",(unsigned short)((int)((unsigned short)proc_perm) & 292),apriv->proc_entry,& proc_stats_ops,(void *)dev);
  
#line 4524 
  if (entry == (struct proc_dir_entry *)0) 
#line 4525 
                                           goto fail; else ;
  
#line 4526 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4529 
  entry = proc_create_data("Status",(unsigned short)((int)((unsigned short)proc_perm) & 292),apriv->proc_entry,& proc_status_ops,(void *)dev);
  
#line 4531 
  if (entry == (struct proc_dir_entry *)0) 
#line 4532 
                                           goto fail; else ;
  
#line 4533 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4536 
  entry = proc_create_data("Config",(unsigned short)((int)((unsigned short)proc_perm)),apriv->proc_entry,& proc_config_ops,(void *)dev);
  
#line 4538 
  if (entry == (struct proc_dir_entry *)0) 
#line 4539 
                                           goto fail; else ;
  
#line 4540 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4543 
  entry = proc_create_data("SSID",(unsigned short)((int)((unsigned short)proc_perm)),apriv->proc_entry,& proc_SSID_ops,(void *)dev);
  
#line 4545 
  if (entry == (struct proc_dir_entry *)0) 
#line 4546 
                                           goto fail; else ;
  
#line 4547 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4550 
  entry = proc_create_data("APList",(unsigned short)((int)((unsigned short)proc_perm)),apriv->proc_entry,& proc_APList_ops,(void *)dev);
  
#line 4552 
  if (entry == (struct proc_dir_entry *)0) 
#line 4553 
                                           goto fail; else ;
  
#line 4554 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4557 
  entry = proc_create_data("BSSList",(unsigned short)((int)((unsigned short)proc_perm)),apriv->proc_entry,& proc_BSSList_ops,(void *)dev);
  
#line 4559 
  if (entry == (struct proc_dir_entry *)0) 
#line 4560 
                                           goto fail; else ;
  
#line 4561 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4564 
  entry = proc_create_data("WepKey",(unsigned short)((int)((unsigned short)proc_perm)),apriv->proc_entry,& proc_wepkey_ops,(void *)dev);
  
#line 4566 
  if (entry == (struct proc_dir_entry *)0) 
#line 4567 
                                           goto fail; else ;
  
#line 4568 
  proc_set_user(entry,proc_kuid,proc_kgid);
  
#line 4569 
  __retres = 0;
  
#line 4569 
  goto return_label;
  fail: 
#line 4571 
  ;
  
#line 4572 
  remove_proc_subtree((char const *)(& apriv->proc_name),airo_entry);
  
#line 4573 
  __retres = -12;
  return_label: 
#line 4573 
                return __retres;
}


#line 4576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int takedown_proc_entry(struct net_device *dev, struct airo_info *apriv)
{
  int __retres;
  
#line 4579 
  remove_proc_subtree((char const *)(& apriv->proc_name),airo_entry);
  
#line 4580 
  __retres = 0;
  
#line 4580 
  return __retres;
}


#line 4595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static ssize_t proc_read(struct file *file, char *buffer, size_t len, loff_t *offset)
{
  ssize_t __retres;
  ssize_t tmp;
  
#line 4600 
  struct proc_data *priv = (struct proc_data *)file->private_data;
  
#line 4602 
  if (priv->rbuffer == (char *)0) {
    
#line 4603 
    __retres = -22L;
    
#line 4603 
    goto return_label;
  }
  else ;
  
#line 4605 
  tmp = simple_read_from_buffer((void *)buffer,len,offset,(void const *)priv->rbuffer,(unsigned long)priv->readlen);
  
#line 4605 
  __retres = tmp;
  return_label: 
#line 4605 
                return __retres;
}


#line 4613  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static ssize_t proc_write(struct file *file, char const *buffer, size_t len, loff_t *offset)
{
  ssize_t __retres;
  ssize_t ret;
  
#line 4619 
  struct proc_data *priv = (struct proc_data *)file->private_data;
  
#line 4621 
  if (priv->wbuffer == (char *)0) {
    
#line 4622 
    __retres = -22L;
    
#line 4622 
    goto return_label;
  }
  else ;
  
#line 4624 
  ret = simple_write_to_buffer((void *)priv->wbuffer,(unsigned long)priv->maxwritelen,offset,(void const *)buffer,len);
  
#line 4626 
  if (ret > 0L) {
    int tmp_0;
    {
      int tmp;
      
#line 4627 
      int __max1 = priv->writelen;
      
#line 4627 
      int __max2 = (int)*offset;
      
#line 4627 
      if (__max1 > __max2) 
#line 4627 
                           tmp = __max1; else 
#line 4627 
                                              tmp = __max2;
      
#line 4627 
      tmp_0 = tmp;
    }
    
#line 4627 
    priv->writelen = tmp_0;
  }
  else ;
  
#line 4629 
  __retres = ret;
  return_label: 
#line 4629 
                return __retres;
}


#line 4632  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_status_open(struct inode *inode, struct file *file)
{
  int __retres;
  struct proc_data *data;
  CapabilityRid cap_rid;
  StatusRid status_rid;
  u16 mode;
  int i;
  void *tmp_0;
  char *tmp_1;
  char *tmp_3;
  char *tmp_4;
  char *tmp_5;
  char *tmp_6;
  char *tmp_7;
  char *tmp_8;
  char *tmp_9;
  char *tmp_10;
  char *tmp_11;
  size_t tmp_12;
  
#line 4635 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 4636 
  struct airo_info *apriv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 4642 
  tmp_0 = kzalloc(40UL,208U);
  
#line 4642 
  file->private_data = tmp_0;
  
#line 4642 
  if (tmp_0 == (void *)0) {
    
#line 4643 
    __retres = -12;
    
#line 4643 
    goto return_label;
  }
  else ;
  
#line 4644 
  data = (struct proc_data *)file->private_data;
  
#line 4645 
  tmp_1 = (char *)kmalloc(2048UL,208U);
  
#line 4645 
  data->rbuffer = tmp_1;
  
#line 4645 
  if (tmp_1 == (char *)0) {
    
#line 4646 
    kfree((void const *)file->private_data);
    
#line 4647 
    __retres = -12;
    
#line 4647 
    goto return_label;
  }
  else ;
  
#line 4650 
  readStatusRid(apriv,& status_rid,1);
  
#line 4651 
  readCapabilityRid(apriv,& cap_rid,1);
  
#line 4653 
  mode = status_rid.mode;
  
#line 4663 
  if ((int)mode < 0) 
#line 4663 
                     tmp_3 = (char *)"ERR "; else 
#line 4663 
                                                  tmp_3 = (char *)"";
  
#line 4662 
  if (((int)mode & 512) != 0) 
#line 4662 
                              tmp_4 = (char *)"WEP "; else 
#line 4662 
                                                           tmp_4 = (char *)"";
  
#line 4661 
  if (((int)mode & 256) != 0) 
#line 4661 
                              tmp_5 = (char *)"KEY "; else 
#line 4661 
                                                           tmp_5 = (char *)"";
  
#line 4660 
  if (((int)mode & 128) != 0) 
#line 4660 
                              tmp_6 = (char *)"PRIV "; else 
#line 4660 
                                                            tmp_6 = (char *)"";
  
#line 4659 
  if (((int)mode & 64) != 0) 
#line 4659 
                             tmp_7 = (char *)"LEAP "; else 
#line 4659 
                                                           tmp_7 = (char *)"";
  
#line 4658 
  if (((int)mode & 32) != 0) 
#line 4658 
                             tmp_8 = (char *)"LNK "; else 
#line 4658 
                                                          tmp_8 = (char *)"";
  
#line 4657 
  if (((int)mode & 16) != 0) 
#line 4657 
                             tmp_9 = (char *)"SYN "; else 
#line 4657 
                                                          tmp_9 = (char *)"";
  
#line 4656 
  if (((int)mode & 2) != 0) 
#line 4656 
                            tmp_10 = (char *)"ACT "; else 
#line 4656 
                                                          tmp_10 = (char *)"";
  
#line 4655 
  if (((int)mode & 1) != 0) 
#line 4655 
                            tmp_11 = (char *)"CFG "; else 
#line 4655 
                                                          tmp_11 = (char *)"";
  
#line 4655 
  ;
  
#line 4655 
  i = sprintf(data->rbuffer,"Status: %s%s%s%s%s%s%s%s%s\n",tmp_11,tmp_10,tmp_9,tmp_8,tmp_7,tmp_6,tmp_5,tmp_4,tmp_3);
  
#line 4665 
  sprintf(data->rbuffer + i,"Mode: %x\n",(int)status_rid.mode,(int)status_rid.normalizedSignalStrength,(int)status_rid.signalQuality,(int)status_rid.SSIDlen,(char *)(& status_rid.SSID),(char *)(& status_rid.apName),(int)status_rid.channel,(int)((unsigned int)status_rid.currentXmitRate / 2U),(char const *)(& version),(char *)(& cap_rid.prodName),(char *)(& cap_rid.manName),(char *)(& cap_rid.prodVer),(int)cap_rid.radioType,(int)cap_rid.country,(int)cap_rid.hardVer,(int)cap_rid.softVer,(int)cap_rid.softSubVer,(int)cap_rid.bootBlockVer);
  
#line 4695 
  tmp_12 = strlen((char const *)data->rbuffer);
  
#line 4695 
  data->readlen = (int)tmp_12;
  
#line 4696 
  __retres = 0;
  return_label: 
#line 4696 
                return __retres;
}


#line 4699 
static int proc_stats_rid_open(struct inode *inode, struct file *file, u16 rid);


#line 4700  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_statsdelta_open(struct inode *inode, struct file *file)
{
  int __retres;
  int tmp_0;
  
#line 4702 
  if ((file->f_mode & 2U) != 0U) {
    int tmp;
    
#line 4703 
    tmp = proc_stats_rid_open(inode,file,(unsigned short)65386);
    
#line 4703 
    __retres = tmp;
    
#line 4703 
    goto return_label;
  }
  else ;
  
#line 4705 
  tmp_0 = proc_stats_rid_open(inode,file,(unsigned short)65385);
  
#line 4705 
  __retres = tmp_0;
  return_label: 
#line 4705 
                return __retres;
}


#line 4708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_stats_open(struct inode *inode, struct file *file)
{
  int tmp;
  
#line 4709 
  tmp = proc_stats_rid_open(inode,file,(unsigned short)65384);
  
#line 4709 
  return tmp;
}


#line 4712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_stats_rid_open(struct inode *inode, struct file *file, u16 rid)
{
  int __retres;
  struct proc_data *data;
  StatsRid stats;
  int i;
  int j;
  int len;
  void *tmp_0;
  char *tmp_1;
  size_t tmp_3;
  int tmp_4;
  
#line 4717 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 4718 
  struct airo_info *apriv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 4721 
  __le32 *vals = (__le32 *)(& stats.vals);
  
#line 4724 
  tmp_0 = kzalloc(40UL,208U);
  
#line 4724 
  file->private_data = tmp_0;
  
#line 4724 
  if (tmp_0 == (void *)0) {
    
#line 4725 
    __retres = -12;
    
#line 4725 
    goto return_label;
  }
  else ;
  
#line 4726 
  data = (struct proc_data *)file->private_data;
  
#line 4727 
  tmp_1 = (char *)kmalloc(4096UL,208U);
  
#line 4727 
  data->rbuffer = tmp_1;
  
#line 4727 
  if (tmp_1 == (char *)0) {
    
#line 4728 
    kfree((void const *)file->private_data);
    
#line 4729 
    __retres = -12;
    
#line 4729 
    goto return_label;
  }
  else ;
  
#line 4732 
  readStatsRid(apriv,& stats,(int)rid,1);
  
#line 4733 
  len = (int)stats.len;
  
#line 4735 
  j = 0;
  
#line 4736 
  i = 0;
  
#line 4736 
  goto ldv_53545;
  ldv_53544: 
#line 4737 
  ;
  
#line 4737 
  if (statsLabels[i] == (char const *)0) 
#line 4737 
                                         goto ldv_53542; else ;
  
#line 4738 
  tmp_3 = strlen(statsLabels[i]);
  
#line 4738 
  ;
  
#line 4738 
  if (((unsigned long)j + tmp_3) + 16UL > 4096UL) {
    
#line 4739 
    printk("\001",(char *)(& (apriv->dev)->name));
    
#line 4741 
    goto ldv_53543;
  }
  else ;
  
#line 4743 
  tmp_4 = sprintf(data->rbuffer + j,"%s: %u\n",statsLabels[i],*(vals + i));
  
#line 4744 
  j = tmp_4 + j;
  ldv_53542: 
#line 4744 
  ;
  
#line 4736 
  i += 1;
  ldv_53545: 
#line 4737 
  ;
  
#line 4736 
  if (statsLabels[i] != (char const *)(-1) && i * 4 < len) 
#line 4738 
                                                           goto ldv_53544; else 
                                                                    
#line 4741 
                                                                    goto ldv_53543;
  ldv_53543: 
#line 4742 
  ;
  
#line 4746 
  if (i * 4 >= len) 
#line 4747 
                    printk("\001",(char *)(& (apriv->dev)->name)); else ;
  
#line 4749 
  data->readlen = j;
  
#line 4750 
  __retres = 0;
  return_label: 
#line 4750 
                return __retres;
}


#line 4753  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int get_dec_u16(char *buffer, int *start, int limit)
{
  int __retres;
  u16 value;
  
#line 4755 
  int valid = 0;
  
#line 4756 
  value = (unsigned short)0U;
  
#line 4756 
  goto ldv_53554;
  ldv_53553: 
#line 4757 
  ;
  
#line 4758 
  valid = 1;
  
#line 4759 
  value = (unsigned short)((unsigned int)value * 10U);
  
#line 4760 
  value = (unsigned short)((unsigned int)((int)((unsigned short)*(buffer + *start)) + (int)value) + 65488U);
  
#line 4757 
  *start += 1;
  ldv_53554: 
#line 4758 
  ;
  
#line 4756 
  if ((*start < limit && (int)*(buffer + *start) > 47) && (int)*(buffer + *start) <= 57) 
    
#line 4759 
    goto ldv_53553; else 
#line 4762 
                         goto ldv_53555;
  ldv_53555: 
#line 4763 
  ;
  
#line 4762 
  if (valid == 0) {
    
#line 4762 
    __retres = -1;
    
#line 4762 
    goto return_label;
  }
  else ;
  
#line 4763 
  __retres = (int)value;
  return_label: 
#line 4763 
                return __retres;
}


#line 4766 
static int airo_config_commit(struct net_device *dev, struct iw_request_info *info, void *zwrq, char *extra);


#line 4770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
__inline static int sniffing_mode(struct airo_info *ai)
{
  int __retres;
  
#line 4772 
  __retres = ((int)ai->config.rmode & 255) > 2;
  
#line 4772 
  return __retres;
}


#line 4776  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void proc_config_on_close(struct inode *inode, struct file *file)
{
  char *line;
  int tmp_28;
  
#line 4778 
  struct proc_data *data = (struct proc_data *)file->private_data;
  
#line 4779 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 4780 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 4783 
  if (data->writelen == 0) 
#line 4783 
                           goto return_label; else ;
  
#line 4785 
  readConfigRid(ai,1);
  
#line 4786 
  set_bit(13L,(unsigned long volatile *)(& ai->flags));
  
#line 4788 
  line = data->wbuffer;
  
#line 4789 
  goto ldv_53616;
  ldv_53615: 
#line 4790 
  ;
  
#line 4791 
  tmp_28 = strncmp((char const *)line,"Mode: ",6UL);
  
#line 4791 
  if (tmp_28 == 0) {
    int tmp_0;
    
#line 4792 
    line += 6U;
    
#line 4793 
    tmp_0 = sniffing_mode(ai);
    
#line 4793 
    if (tmp_0 != 0) 
#line 4794 
                    set_bit(14L,(unsigned long volatile *)(& ai->flags)); else ;
    
#line 4795 
    ai->config.rmode = (unsigned short)((unsigned int)ai->config.rmode & 65024U);
    
#line 4796 
    set_bit(7L,(unsigned long volatile *)(& ai->flags));
    
#line 4797 
    ai->config.opmode = (unsigned short)((unsigned int)ai->config.opmode & 65280U);
    
#line 4798 
    ai->config.scanMode = (unsigned short)0U;
    
#line 4799 
    if ((int)*line == 97) 
#line 4800 
                          ai->config.opmode = ai->config.opmode;
    else {
      
#line 4802 
      ai->config.opmode = (unsigned short)((unsigned int)ai->config.opmode | 1U);
      
#line 4803 
      if ((int)*line == 114) {
        
#line 4804 
        ai->config.rmode = (unsigned short)((unsigned int)ai->config.rmode | 259U);
        
#line 4805 
        ai->config.scanMode = (unsigned short)1U;
        
#line 4806 
        set_bit(7L,(unsigned long volatile *)(& ai->flags));
      }
      else 
        
#line 4807 
        if ((int)*line == 121) {
          
#line 4808 
          ai->config.rmode = (unsigned short)((unsigned int)ai->config.rmode | 260U);
          
#line 4809 
          ai->config.scanMode = (unsigned short)1U;
          
#line 4810 
          set_bit(7L,(unsigned long volatile *)(& ai->flags));
        }
        else 
          
#line 4811 
          if ((int)*line == 108) 
#line 4812 
                                 ai->config.rmode = (unsigned short)((unsigned int)ai->config.rmode | 5U); else ;
    }
    
#line 4814 
    set_bit(13L,(unsigned long volatile *)(& ai->flags));
  }
  else {
    int tmp_27;
    
#line 4818 
    tmp_27 = strncmp((char const *)line,"Radio: ",7UL);
    
#line 4818 
    if (tmp_27 == 0) {
      int tmp_1;
      
#line 4819 
      line += 7U;
      
#line 4820 
      tmp_1 = strncmp((char const *)line,"off",3UL);
      
#line 4820 
      if (tmp_1 == 0) 
#line 4821 
                      set_bit(0L,(unsigned long volatile *)(& ai->flags)); else 
                                                                    
#line 4823 
                                                                    set_bit(0L,(unsigned long volatile *)(& ai->flags));
    }
    else {
      int tmp_26;
      
#line 4827 
      tmp_26 = strncmp((char const *)line,"NodeName: ",10UL);
      
#line 4827 
      if (tmp_26 == 0) {
        int j;
        
#line 4830 
        line += 10U;
        
#line 4831 
        memset((void *)(& ai->config.nodeName),0,16UL);
        
#line 4833 
        j = 0;
        
#line 4833 
        goto ldv_53574;
        ldv_53573: 
#line 4834 
        ;
        
#line 4834 
        ai->config.nodeName[j] = (unsigned char)*(line + j);
        
#line 4833 
        j += 1;
        ldv_53574: 
#line 4834 
        ;
        
#line 4833 
        if (j <= 15 && (int)*(line + j) != 10) 
#line 4835 
                                               goto ldv_53573; else 
#line 4838 
                                                                    goto ldv_53575;
        ldv_53575: 
#line 4839 
        ;
        
#line 4836 
        set_bit(13L,(unsigned long volatile *)(& ai->flags));
      }
      else {
        int tmp_25;
        
#line 4840 
        tmp_25 = strncmp((char const *)line,"PowerMode: ",11UL);
        
#line 4840 
        if (tmp_25 == 0) {
          int tmp_3;
          
#line 4841 
          line += 11U;
          
#line 4842 
          tmp_3 = strncmp((char const *)line,"PSPCAM",6UL);
          
#line 4842 
          if (tmp_3 == 0) {
            
#line 4843 
            ai->config.powerSaveMode = (unsigned short)2U;
            
#line 4844 
            set_bit(13L,(unsigned long volatile *)(& ai->flags));
          }
          else {
            int tmp_2;
            
#line 4845 
            tmp_2 = strncmp((char const *)line,"PSP",3UL);
            
#line 4845 
            if (tmp_2 == 0) {
              
#line 4846 
              ai->config.powerSaveMode = (unsigned short)1U;
              
#line 4847 
              set_bit(13L,(unsigned long volatile *)(& ai->flags));
            }
            else {
              
#line 4849 
              ai->config.powerSaveMode = (unsigned short)0U;
              
#line 4850 
              set_bit(13L,(unsigned long volatile *)(& ai->flags));
            }
          }
        }
        else {
          int tmp_24;
          
#line 4852 
          tmp_24 = strncmp((char const *)line,"DataRates: ",11UL);
          
#line 4852 
          if (tmp_24 == 0) {
            int v;
            int tmp_4;
            
#line 4853 
            int i = 0;
            
#line 4853 
            int k = 0;
            
#line 4856 
            line += 11U;
            
#line 4857 
            goto ldv_53580;
            ldv_53579: 
#line 4858 
            ;
            
#line 4858 
            tmp_4 = k;
            
#line 4858 
            k += 1;
            
#line 4858 
            ai->config.rates[tmp_4] = (unsigned char)v;
            
#line 4859 
            line += (unsigned int)i + 1U;
            
#line 4860 
            i = 0;
            ldv_53580: 
#line 4861 
            ;
            
#line 4857 
            v = get_dec_u16(line,& i,3);
            
#line 4857 
            if (v != -1) 
#line 4859 
                         goto ldv_53579; else 
#line 4862 
                                              goto ldv_53581;
            ldv_53581: 
#line 4863 
            ;
            
#line 4862 
            set_bit(13L,(unsigned long volatile *)(& ai->flags));
          }
          else {
            int tmp_23;
            
#line 4863 
            tmp_23 = strncmp((char const *)line,"Channel: ",9UL);
            
#line 4863 
            if (tmp_23 == 0) {
              int v_0;
              
#line 4864 
              int i_0 = 0;
              
#line 4865 
              line += 9U;
              
#line 4866 
              v_0 = get_dec_u16(line,& i_0,i_0 + 3);
              
#line 4867 
              if (v_0 != -1) {
                
#line 4868 
                ai->config.channelSet = (unsigned short)v_0;
                
#line 4869 
                set_bit(13L,(unsigned long volatile *)(& ai->flags));
              }
              else ;
            }
            else {
              int tmp_22;
              
#line 4871 
              tmp_22 = strncmp((char const *)line,"XmitPower: ",11UL);
              
#line 4871 
              if (tmp_22 == 0) {
                int v_1;
                
#line 4872 
                int i_1 = 0;
                
#line 4873 
                line += 11U;
                
#line 4874 
                v_1 = get_dec_u16(line,& i_1,i_1 + 3);
                
#line 4875 
                if (v_1 != -1) {
                  
#line 4876 
                  ai->config.txPower = (unsigned short)v_1;
                  
#line 4877 
                  set_bit(13L,(unsigned long volatile *)(& ai->flags));
                }
                else ;
              }
              else {
                int tmp_21;
                
#line 4879 
                tmp_21 = strncmp((char const *)line,"WEP: ",5UL);
                
#line 4879 
                if (tmp_21 == 0) {
                  
#line 4880 
                  line += 5U;
                  
#line 4881 
                  switch ((int)*line) {
                    case 115: 
#line 4882 
                    ;
                    
#line 4883 
                    ai->config.authType = (unsigned short)258U;
                    
#line 4884 
                    goto ldv_53587;
                    case 101: 
#line 4885 
                    ;
                    
#line 4886 
                    ai->config.authType = (unsigned short)257U;
                    
#line 4887 
                    goto ldv_53587;
                    default: 
#line 4888 
                    ;
                    
#line 4889 
                    ai->config.authType = (unsigned short)1U;
                    
#line 4890 
                    goto ldv_53587;
                  }
                  ldv_53587: 
#line 4892 
                  ;
                  
#line 4892 
                  set_bit(13L,(unsigned long volatile *)(& ai->flags));
                }
                else {
                  int tmp_20;
                  
#line 4893 
                  tmp_20 = strncmp((char const *)line,"LongRetryLimit: ",16UL);
                  
#line 4893 
                  if (tmp_20 == 0) {
                    int v_2;
                    
#line 4894 
                    int i_2 = 0;
                    
#line 4896 
                    line += 16U;
                    
#line 4897 
                    v_2 = get_dec_u16(line,& i_2,3);
                    
#line 4898 
                    if (v_2 >= 0) {
                      int tmp_5;
                      
#line 4898 
                      if (255 < v_2) 
#line 4898 
                                     tmp_5 = 255; else 
#line 4898 
                                                       tmp_5 = v_2;
                      
#line 4898 
                      v_2 = tmp_5;
                    }
                    else 
#line 4898 
                         v_2 = 0;
                    
#line 4899 
                    ai->config.longRetryLimit = (unsigned short)v_2;
                    
#line 4900 
                    set_bit(13L,(unsigned long volatile *)(& ai->flags));
                  }
                  else {
                    int tmp_19;
                    
#line 4901 
                    tmp_19 = strncmp((char const *)line,"ShortRetryLimit: ",17UL);
                    
#line 4901 
                    if (tmp_19 == 0) {
                      int v_3;
                      
#line 4902 
                      int i_3 = 0;
                      
#line 4904 
                      line += 17U;
                      
#line 4905 
                      v_3 = get_dec_u16(line,& i_3,3);
                      
#line 4906 
                      if (v_3 >= 0) {
                        int tmp_6;
                        
#line 4906 
                        if (255 < v_3) 
#line 4906 
                                       tmp_6 = 255; else 
#line 4906 
                                                         tmp_6 = v_3;
                        
#line 4906 
                        v_3 = tmp_6;
                      }
                      else 
#line 4906 
                           v_3 = 0;
                      
#line 4907 
                      ai->config.shortRetryLimit = (unsigned short)v_3;
                      
#line 4908 
                      set_bit(13L,(unsigned long volatile *)(& ai->flags));
                    }
                    else {
                      int tmp_18;
                      
#line 4909 
                      tmp_18 = strncmp((char const *)line,"RTSThreshold: ",14UL);
                      
#line 4909 
                      if (tmp_18 == 0) {
                        int v_4;
                        
#line 4910 
                        int i_4 = 0;
                        
#line 4912 
                        line += 14U;
                        
#line 4913 
                        v_4 = get_dec_u16(line,& i_4,4);
                        
#line 4914 
                        if (v_4 >= 0) {
                          int tmp_7;
                          
#line 4914 
                          if (2312 < v_4) 
#line 4914 
                                          tmp_7 = 2312; else 
#line 4914 
                                                             tmp_7 = v_4;
                          
#line 4914 
                          v_4 = tmp_7;
                        }
                        else 
#line 4914 
                             v_4 = 0;
                        
#line 4915 
                        ai->config.rtsThres = (unsigned short)v_4;
                        
#line 4916 
                        set_bit(13L,(unsigned long volatile *)(& ai->flags));
                      }
                      else {
                        int tmp_17;
                        
#line 4917 
                        tmp_17 = strncmp((char const *)line,"TXMSDULifetime: ",16UL);
                        
#line 4917 
                        if (tmp_17 == 0) {
                          int v_5;
                          
#line 4918 
                          int i_5 = 0;
                          
#line 4920 
                          line += 16U;
                          
#line 4921 
                          v_5 = get_dec_u16(line,& i_5,5);
                          
#line 4922 
                          if (0 > v_5) 
#line 4922 
                                       v_5 = 0; else 
#line 4922 
                                                     v_5 = v_5;
                          
#line 4923 
                          ai->config.txLifetime = (unsigned short)v_5;
                          
#line 4924 
                          set_bit(13L,(unsigned long volatile *)(& ai->flags));
                        }
                        else {
                          int tmp_16;
                          
#line 4925 
                          tmp_16 = strncmp((char const *)line,"RXMSDULifetime: ",16UL);
                          
#line 4925 
                          if (tmp_16 == 0) {
                            int v_6;
                            
#line 4926 
                            int i_6 = 0;
                            
#line 4928 
                            line += 16U;
                            
#line 4929 
                            v_6 = get_dec_u16(line,& i_6,5);
                            
#line 4930 
                            if (0 > v_6) 
#line 4930 
                                         v_6 = 0; else 
#line 4930 
                                                       v_6 = v_6;
                            
#line 4931 
                            ai->config.rxLifetime = (unsigned short)v_6;
                            
#line 4932 
                            set_bit(13L,(unsigned long volatile *)(& ai->flags));
                          }
                          else {
                            int tmp_15;
                            
#line 4933 
                            tmp_15 = strncmp((char const *)line,"TXDiversity: ",13UL);
                            
#line 4933 
                            if (tmp_15 == 0) {
                              
#line 4935 
                              if ((int)*(line + 13U) != 108) {
                                unsigned int tmp_8;
                                
#line 4936 
                                if ((int)*(line + 13U) == 114) 
#line 4936 
                                                               tmp_8 = 2U; else 
                                                                    
#line 4936 
                                                                    tmp_8 = 3U;
                                
#line 4935 
                                ai->config.txDiversity = (unsigned char)tmp_8;
                              }
                              else 
#line 4935 
                                   ai->config.txDiversity = (unsigned char)1U;
                              
#line 4937 
                              set_bit(13L,(unsigned long volatile *)(& ai->flags));
                            }
                            else {
                              int tmp_14;
                              
#line 4938 
                              tmp_14 = strncmp((char const *)line,"RXDiversity: ",13UL);
                              
#line 4938 
                              if (tmp_14 == 0) {
                                
#line 4940 
                                if ((int)*(line + 13U) != 108) {
                                  unsigned int tmp_9;
                                  
#line 4941 
                                  if ((int)*(line + 13U) == 114) 
#line 4941 
                                                                 tmp_9 = 2U; else 
                                                                    
#line 4941 
                                                                    tmp_9 = 3U;
                                  
#line 4940 
                                  ai->config.rxDiversity = (unsigned char)tmp_9;
                                }
                                else 
#line 4940 
                                     ai->config.rxDiversity = (unsigned char)1U;
                                
#line 4942 
                                set_bit(13L,(unsigned long volatile *)(& ai->flags));
                              }
                              else {
                                int tmp_13;
                                
#line 4943 
                                tmp_13 = strncmp((char const *)line,"FragThreshold: ",15UL);
                                
#line 4943 
                                if (tmp_13 == 0) {
                                  int v_7;
                                  
#line 4944 
                                  int i_7 = 0;
                                  
#line 4946 
                                  line += 15U;
                                  
#line 4947 
                                  v_7 = get_dec_u16(line,& i_7,4);
                                  
#line 4948 
                                  if (v_7 > 255) {
                                    int tmp_10;
                                    
#line 4948 
                                    if (2312 < v_7) 
#line 4948 
                                                    tmp_10 = 2312; else 
                                                                    
#line 4948 
                                                                    tmp_10 = v_7;
                                    
#line 4948 
                                    v_7 = tmp_10;
                                  }
                                  else 
#line 4948 
                                       v_7 = 256;
                                  
#line 4949 
                                  v_7 &= 65534;
                                  
#line 4950 
                                  ai->config.fragThresh = (unsigned short)v_7;
                                  
#line 4951 
                                  set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                }
                                else {
                                  int tmp_12;
                                  
#line 4952 
                                  tmp_12 = strncmp((char const *)line,"Modulation: ",12UL);
                                  
#line 4952 
                                  if (tmp_12 == 0) {
                                    
#line 4953 
                                    line += 12U;
                                    
#line 4954 
                                    switch ((int)*line) {
                                      case 100: 
#line 4955 
                                      ;
                                      
#line 4955 
                                      ai->config.modulation = (unsigned short)0U;
                                      
#line 4955 
                                      set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                      
#line 4955 
                                      goto ldv_53603;
                                      case 99: 
#line 4956 
                                      ;
                                      
#line 4956 
                                      ai->config.modulation = (unsigned short)1U;
                                      
#line 4956 
                                      set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                      
#line 4956 
                                      goto ldv_53603;
                                      case 109: 
#line 4957 
                                      ;
                                      
#line 4957 
                                      ai->config.modulation = (unsigned short)2U;
                                      
#line 4957 
                                      set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                      
#line 4957 
                                      goto ldv_53603;
                                      default: 
#line 4958 
                                      ;
                                      
#line 4958 
                                      printk("\001",(char *)(& (ai->dev)->name));
                                    }
                                    ldv_53603: 
#line 4960 
                                    ;
                                  }
                                  else {
                                    int tmp_11;
                                    
#line 4960 
                                    tmp_11 = strncmp((char const *)line,"Preamble: ",10UL);
                                    
#line 4960 
                                    if (tmp_11 == 0) {
                                      
#line 4961 
                                      line += 10U;
                                      
#line 4962 
                                      switch ((int)*line) {
                                        case 97: 
#line 4963 
                                        ;
                                        
#line 4963 
                                        ai->config.preamble = (unsigned short)0U;
                                        
#line 4963 
                                        set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                        
#line 4963 
                                        goto ldv_53608;
                                        case 108: 
#line 4964 
                                        ;
                                        
#line 4964 
                                        ai->config.preamble = (unsigned short)1U;
                                        
#line 4964 
                                        set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                        
#line 4964 
                                        goto ldv_53608;
                                        case 115: 
#line 4965 
                                        ;
                                        
#line 4965 
                                        ai->config.preamble = (unsigned short)2U;
                                        
#line 4965 
                                        set_bit(13L,(unsigned long volatile *)(& ai->flags));
                                        
#line 4965 
                                        goto ldv_53608;
                                        default: 
#line 4966 
                                        ;
                                        
#line 4966 
                                        printk("\001",(char *)(& (ai->dev)->name));
                                      }
                                      ldv_53608: 
#line 4968 
                                      ;
                                    }
                                    else 
#line 4969 
                                         printk("\001",(char *)(& (ai->dev)->name),line);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
#line 4971 
  goto ldv_53613;
  ldv_53612: 
#line 4972 
  ;
  
#line 4971 
  line += 1;
  ldv_53613: 
#line 4972 
  ;
  
#line 4971 
  if ((int)*line != 0 && (int)*line != 10) 
#line 4973 
                                           goto ldv_53612; else 
#line 4976 
                                                                goto ldv_53614;
  ldv_53614: 
#line 4977 
  ;
  
#line 4972 
  if ((int)*line != 0) 
#line 4972 
                       line += 1; else ;
  ldv_53616: 
#line 4973 
  ;
  
#line 4789 
  if ((int)*line != 0) 
#line 4791 
                       goto ldv_53615; else 
#line 4794 
                                            goto ldv_53617;
  ldv_53617: 
#line 4795 
  ;
  
#line 4974 
  airo_config_commit(dev,(struct iw_request_info *)0,(void *)0,(char *)0);
  return_label: 
#line 4975 
                return;
}


#line 4977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static char const *get_rmode(__le16 mode)
{
  char const *__retres;
  
#line 4979 
  switch ((int)mode & 255) {
    case 3: 
#line 4980 
    ;
    
#line 4980 
    __retres = "rfmon";
    
#line 4980 
    goto return_label;
    case 4: 
#line 4981 
    ;
    
#line 4981 
    __retres = "yna (any) bss rfmon";
    
#line 4981 
    goto return_label;
    case 5: 
#line 4982 
    ;
    
#line 4982 
    __retres = "lanmon";
    
#line 4982 
    goto return_label;
  }
  
#line 4984 
  __retres = "ESS";
  return_label: 
#line 4984 
                return __retres;
}


#line 4987  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_config_open(struct inode *inode, struct file *file)
{
  int __retres;
  struct proc_data *data;
  int i;
  __le16 mode;
  void *tmp_0;
  char *tmp_1;
  char *tmp_3;
  char *tmp_7;
  char *tmp_9;
  int tmp_8;
  char const *tmp_14;
  char *tmp_17;
  char *tmp_20;
  char *tmp_22;
  char *tmp_24;
  char *tmp_26;
  size_t tmp_27;
  
#line 4990 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 4991 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 4995 
  tmp_0 = kzalloc(40UL,208U);
  
#line 4995 
  file->private_data = tmp_0;
  
#line 4995 
  if (tmp_0 == (void *)0) {
    
#line 4996 
    __retres = -12;
    
#line 4996 
    goto return_label;
  }
  else ;
  
#line 4997 
  data = (struct proc_data *)file->private_data;
  
#line 4998 
  tmp_1 = (char *)kmalloc(2048UL,208U);
  
#line 4998 
  data->rbuffer = tmp_1;
  
#line 4998 
  if (tmp_1 == (char *)0) {
    
#line 4999 
    kfree((void const *)file->private_data);
    
#line 5000 
    __retres = -12;
    
#line 5000 
    goto return_label;
  }
  else ;
  
#line 5002 
  tmp_3 = (char *)kzalloc(2048UL,208U);
  
#line 5002 
  data->wbuffer = tmp_3;
  
#line 5002 
  if (tmp_3 == (char *)0) {
    
#line 5003 
    kfree((void const *)data->rbuffer);
    
#line 5004 
    kfree((void const *)file->private_data);
    
#line 5005 
    __retres = -12;
    
#line 5005 
    goto return_label;
  }
  else ;
  
#line 5007 
  data->maxwritelen = 2048;
  
#line 5008 
  data->on_close = & proc_config_on_close;
  
#line 5010 
  readConfigRid(ai,1);
  
#line 5012 
  mode = (unsigned short)((unsigned int)ai->config.opmode & 255U);
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5013 
  ;
  
#line 5026 
  if ((unsigned int)ai->config.powerSaveMode != 0U) {
    char *tmp_6;
    
#line 5027 
    if ((unsigned int)ai->config.powerSaveMode != 1U) {
      char *tmp_5;
      
#line 5028 
      if ((unsigned int)ai->config.powerSaveMode == 2U) 
#line 5028 
                                                        tmp_5 = (char *)"PSPCAM"; else 
                                                                    
#line 5028 
                                                                    tmp_5 = (char *)"Error";
      
#line 5027 
      tmp_6 = tmp_5;
    }
    else 
#line 5027 
         tmp_6 = (char *)"PSP";
    
#line 5026 
    tmp_7 = tmp_6;
  }
  else 
#line 5026 
       tmp_7 = (char *)"CAM";
  
#line 5013 
  ;
  
#line 5021 
  tmp_8 = constant_test_bit(0L,(unsigned long const volatile *)(& ai->flags));
  
#line 5021 
  if (tmp_8 != 0) 
#line 5021 
                  tmp_9 = (char *)"off"; else 
#line 5021 
                                              tmp_9 = (char *)"on";
  
#line 5014 
  if ((unsigned int)mode != 0U) {
    char const *tmp_13;
    
#line 5021 
    if ((unsigned int)mode == 1U) 
#line 5022 
                                  tmp_13 = get_rmode((unsigned short)((int)ai->config.rmode));
    else {
      char *tmp_12;
      
#line 5023 
      if ((unsigned int)mode != 2U) {
        char *tmp_11;
        
#line 5023 
        if ((unsigned int)mode == 3U) 
#line 5023 
                                      tmp_11 = (char *)"AP RPTR"; else 
                                                                    
#line 5023 
                                                                    tmp_11 = (char *)"Error";
        
#line 5023 
        tmp_12 = tmp_11;
      }
      else 
#line 5023 
           tmp_12 = (char *)"AP";
      
#line 5021 
      tmp_13 = (char const *)tmp_12;
    }
    
#line 5014 
    tmp_14 = tmp_13;
  }
  else 
#line 5014 
       tmp_14 = "adhoc";
  
#line 5013 
  ;
  
#line 5013 
  i = sprintf(data->rbuffer,"Mode: %s\n",tmp_14,tmp_9,(u8 *)(& ai->config.nodeName),tmp_7,(int)ai->config.rates[0],(int)ai->config.rates[1],(int)ai->config.rates[2],(int)ai->config.rates[3],(int)ai->config.rates[4],(int)ai->config.rates[5],(int)ai->config.rates[6],(int)ai->config.rates[7],(int)ai->config.channelSet,(int)ai->config.txPower);
  
#line 5066 
  if ((unsigned int)ai->config.preamble != 0U) {
    char *tmp_16;
    
#line 5069 
    if ((unsigned int)ai->config.preamble != 1U) {
      char *tmp_15;
      
#line 5070 
      if ((unsigned int)ai->config.preamble == 2U) 
#line 5070 
                                                   tmp_15 = (char *)"short"; else 
                                                                    
#line 5070 
                                                                    tmp_15 = (char *)"error";
      
#line 5069 
      tmp_16 = tmp_15;
    }
    else 
#line 5069 
         tmp_16 = (char *)"long";
    
#line 5066 
    tmp_17 = tmp_16;
  }
  else 
#line 5066 
       tmp_17 = (char *)"auto";
  
#line 5064 
  if ((unsigned int)ai->config.modulation != 0U) {
    char *tmp_19;
    
#line 5066 
    if ((unsigned int)ai->config.modulation != 1U) {
      char *tmp_18;
      
#line 5067 
      if ((unsigned int)ai->config.modulation == 2U) 
#line 5067 
                                                     tmp_18 = (char *)"mok"; else 
                                                                    
#line 5067 
                                                                    tmp_18 = (char *)"error";
      
#line 5066 
      tmp_19 = tmp_18;
    }
    else 
#line 5066 
         tmp_19 = (char *)"cck";
    
#line 5064 
    tmp_20 = tmp_19;
  }
  else 
#line 5064 
       tmp_20 = (char *)"default";
  
#line 5063 
  if ((unsigned int)ai->config.authType != 257U) {
    char *tmp_21;
    
#line 5064 
    if ((unsigned int)ai->config.authType == 258U) 
#line 5064 
                                                   tmp_21 = (char *)"shared"; else 
                                                                    
#line 5064 
                                                                    tmp_21 = (char *)"open";
    
#line 5063 
    tmp_22 = tmp_21;
  }
  else 
#line 5063 
       tmp_22 = (char *)"encrypt";
  
#line 5042 
  ;
  
#line 5059 
  if ((unsigned int)ai->config.rxDiversity != 1U) {
    char *tmp_23;
    
#line 5061 
    if ((unsigned int)ai->config.rxDiversity == 2U) 
#line 5061 
                                                    tmp_23 = (char *)"right"; else 
                                                                    
#line 5061 
                                                                    tmp_23 = (char *)"both";
    
#line 5059 
    tmp_24 = tmp_23;
  }
  else 
#line 5059 
       tmp_24 = (char *)"left";
  
#line 5058 
  if ((unsigned int)ai->config.txDiversity != 1U) {
    char *tmp_25;
    
#line 5059 
    if ((unsigned int)ai->config.txDiversity == 2U) 
#line 5059 
                                                    tmp_25 = (char *)"right"; else 
                                                                    
#line 5059 
                                                                    tmp_25 = (char *)"both";
    
#line 5058 
    tmp_26 = tmp_25;
  }
  else 
#line 5058 
       tmp_26 = (char *)"left";
  
#line 5042 
  ;
  
#line 5042 
  ;
  
#line 5042 
  ;
  
#line 5042 
  ;
  
#line 5042 
  ;
  
#line 5042 
  ;
  
#line 5042 
  sprintf(data->rbuffer + i,"LongRetryLimit: %d\n",(int)ai->config.longRetryLimit,(int)ai->config.shortRetryLimit,(int)ai->config.rtsThres,(int)ai->config.txLifetime,(int)ai->config.rxLifetime,tmp_26,tmp_24,(int)ai->config.fragThresh,tmp_22,tmp_20,tmp_17);
  
#line 5073 
  tmp_27 = strlen((char const *)data->rbuffer);
  
#line 5073 
  data->readlen = (int)tmp_27;
  
#line 5074 
  __retres = 0;
  return_label: 
#line 5074 
                return __retres;
}


#line 5077  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void proc_SSID_on_close(struct inode *inode, struct file *file)
{
  SsidRid SSID_rid;
  int i;
  
#line 5079 
  struct proc_data *data = (struct proc_data *)file->private_data;
  
#line 5080 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5081 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5084 
  char *p = data->wbuffer;
  
#line 5085 
  char *end = p + data->writelen;
  
#line 5087 
  if (data->writelen == 0) 
#line 5088 
                           goto return_label; else ;
  
#line 5090 
  *end = (char)10;
  
#line 5092 
  memset((void *)(& SSID_rid),0,104UL);
  
#line 5094 
  i = 0;
  
#line 5094 
  goto ldv_53653;
  ldv_53652: 
#line 5095 
  ;
  {
    int tmp_0;
    char *tmp_1;
    char *tmp_2;
    
#line 5095 
    int j = 0;
    
#line 5097 
    goto ldv_53646;
    ldv_53645: 
#line 5098 
    ;
    
#line 5098 
    tmp_0 = j;
    
#line 5098 
    j += 1;
    
#line 5098 
    tmp_1 = p;
    
#line 5098 
    p += 1;
    
#line 5098 
    SSID_rid.ssids[i].ssid[tmp_0] = (unsigned char)*tmp_1;
    ldv_53646: 
#line 5099 
    ;
    
#line 5097 
    if ((int)*p != 10 && j <= 31) 
#line 5099 
                                  goto ldv_53645; else 
#line 5102 
                                                       goto ldv_53647;
    ldv_53647: 
#line 5103 
    ;
    
#line 5099 
    if (j == 0) 
#line 5100 
                goto ldv_53648; else ;
    
#line 5101 
    SSID_rid.ssids[i].len = (unsigned short)j;
    
#line 5103 
    goto ldv_53650;
    ldv_53649: 
#line 5104 
    ;
    ldv_53650: 
#line 5105 
    ;
    
#line 5103 
    tmp_2 = p;
    
#line 5103 
    p += 1;
    
#line 5103 
    ;
    
#line 5103 
    if ((int)*tmp_2 != 10) 
#line 5105 
                           goto ldv_53649; else 
#line 5108 
                                                goto ldv_53651;
    ldv_53651: 
#line 5109 
    ;
  }
  
#line 5094 
  i += 1;
  ldv_53653: 
#line 5095 
  ;
  
#line 5094 
  if (i <= 2 && p < end) 
#line 5096 
                         goto ldv_53652; else 
#line 5099 
                                              goto ldv_53648;
  ldv_53648: 
#line 5100 
  ;
  
#line 5106 
  if (i != 0) 
#line 5107 
              SSID_rid.len = (unsigned short)104U; else ;
  
#line 5108 
  disable_MAC(ai,1);
  
#line 5109 
  writeSsidRid(ai,& SSID_rid,1);
  
#line 5110 
  enable_MAC(ai,1);
  return_label: 
#line 5111 
                return;
}


#line 5113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void proc_APList_on_close(struct inode *inode, struct file *file)
{
  APListRid APList_rid;
  int i;
  
#line 5114 
  struct proc_data *data = (struct proc_data *)file->private_data;
  
#line 5115 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5116 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5120 
  if (data->writelen == 0) 
#line 5120 
                           goto return_label; else ;
  
#line 5122 
  memset((void *)(& APList_rid),0,26UL);
  
#line 5123 
  APList_rid.len = (unsigned short)26U;
  
#line 5125 
  i = 0;
  
#line 5125 
  goto ldv_53671;
  ldv_53670: 
#line 5126 
  ;
  {
    int j;
    
#line 5127 
    j = 0;
    
#line 5127 
    goto ldv_53668;
    ldv_53667: 
#line 5128 
    ;
    
#line 5128 
    switch (j % 3) {
      int tmp_0;
      int tmp_1;
      case 0: 
#line 5129 
      ;
      
#line 5130 
      tmp_0 = hex_to_bin((char)((int)*(data->wbuffer + (i * 18 + j))));
      
#line 5130 
      APList_rid.ap[i][j / 3] = (unsigned char)((int)((unsigned char)tmp_0) << 4U);
      
#line 5132 
      goto ldv_53665;
      case 1: 
#line 5133 
      ;
      
#line 5134 
      tmp_1 = hex_to_bin((char)((int)*(data->wbuffer + (i * 18 + j))));
      
#line 5135 
      APList_rid.ap[i][j / 3] = (unsigned char)((int)APList_rid.ap[i][j / 3] | tmp_1);
      
#line 5136 
      goto ldv_53665;
    }
    ldv_53665: 
#line 5138 
    ;
    
#line 5127 
    j += 1;
    ldv_53668: 
#line 5128 
    ;
    
#line 5127 
    if (j <= 17 && (int)*(data->wbuffer + (i * 18 + j)) != 0) 
#line 5129 
                                                              goto ldv_53667; else 
                                                                    
#line 5132 
                                                                    goto ldv_53669;
    ldv_53669: 
#line 5133 
    ;
  }
  
#line 5125 
  i += 1;
  ldv_53671: 
#line 5126 
  ;
  
#line 5125 
  if (i <= 3 && data->writelen >= (i + 1) * 18) 
#line 5127 
                                                goto ldv_53670; else 
                                                                  
#line 5130 
                                                                  goto ldv_53672;
  ldv_53672: 
#line 5131 
  ;
  
#line 5140 
  disable_MAC(ai,1);
  
#line 5141 
  writeAPListRid(ai,& APList_rid,1);
  
#line 5142 
  enable_MAC(ai,1);
  return_label: 
#line 5143 
                return;
}


#line 5146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int do_writerid(struct airo_info *ai, u16 rid, void const *rid_data, int len, int dummy)
{
  int rc;
  
#line 5150 
  disable_MAC(ai,1);
  
#line 5151 
  rc = PC4500_writerid(ai,(unsigned short)((int)rid),rid_data,len,1);
  
#line 5152 
  enable_MAC(ai,1);
  
#line 5153 
  return rc;
}


#line 5159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int get_wep_key(struct airo_info *ai, u16 index, char *buf, u16 buflen)
{
  int __retres;
  WepKeyRid wkr;
  int rc;
  __le16 lastindex;
  
#line 5165 
  rc = readWepKeyRid(ai,& wkr,1,1);
  
#line 5166 
  if (rc != 0) {
    
#line 5167 
    __retres = -1;
    
#line 5167 
    goto return_label;
  }
  else ;
  ldv_53694: 
#line 5168 
  ;
  
#line 5169 
  lastindex = wkr.kindex;
  
#line 5170 
  if ((int)wkr.kindex == (int)index) {
    int tmp_0;
    {
      int tmp;
      
#line 5171 
      int __min1 = (int)buflen;
      
#line 5171 
      int __min2 = (int)wkr.klen;
      
#line 5171 
      if (__min1 < __min2) 
#line 5171 
                           tmp = __min1; else 
#line 5171 
                                              tmp = __min2;
      
#line 5171 
      tmp_0 = tmp;
    }
    
#line 5171 
    int klen = tmp_0;
    
#line 5172 
    memcpy((void *)buf,(void const *)(& wkr.key),(unsigned long)klen);
    
#line 5173 
    __retres = klen;
    
#line 5173 
    goto return_label;
  }
  else ;
  
#line 5175 
  rc = readWepKeyRid(ai,& wkr,0,1);
  
#line 5176 
  if (rc != 0) {
    
#line 5177 
    __retres = -1;
    
#line 5177 
    goto return_label;
  }
  else ;
  
#line 5178 
  if ((int)wkr.kindex != (int)lastindex) 
#line 5180 
                                         goto ldv_53694; else 
#line 5183 
                                                              goto ldv_53695;
  ldv_53695: 
#line 5184 
  ;
  
#line 5179 
  __retres = -1;
  return_label: 
#line 5179 
                return __retres;
}


#line 5182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int get_wep_tx_idx(struct airo_info *ai)
{
  int __retres;
  WepKeyRid wkr;
  int rc;
  __le16 lastindex;
  
#line 5188 
  rc = readWepKeyRid(ai,& wkr,1,1);
  
#line 5189 
  if (rc != 0) {
    
#line 5190 
    __retres = -1;
    
#line 5190 
    goto return_label;
  }
  else ;
  ldv_53702: 
#line 5191 
  ;
  
#line 5192 
  lastindex = wkr.kindex;
  
#line 5193 
  if ((unsigned int)wkr.kindex == 65535U) {
    
#line 5194 
    __retres = (int)wkr.mac[0];
    
#line 5194 
    goto return_label;
  }
  else ;
  
#line 5195 
  rc = readWepKeyRid(ai,& wkr,0,1);
  
#line 5196 
  if (rc != 0) {
    
#line 5197 
    __retres = -1;
    
#line 5197 
    goto return_label;
  }
  else ;
  
#line 5198 
  if ((int)wkr.kindex != (int)lastindex) 
#line 5200 
                                         goto ldv_53702; else 
#line 5203 
                                                              goto ldv_53703;
  ldv_53703: 
#line 5204 
  ;
  
#line 5199 
  __retres = -1;
  return_label: 
#line 5199 
                return __retres;
}


#line 5202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int set_wep_key(struct airo_info *ai, u16 index, char const *key, u16 keylen, int perm, int lock)
{
  int __retres;
  WepKeyRid wkr;
  int rc;
  int tmp;
  
#line 5205 
  unsigned char const macaddr[6U] = {(unsigned char)1U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U, (unsigned char)0U};
  {
    
#line 5209 
    int __ret_warn_on = (unsigned int)keylen == 0U;
    
#line 5209 
    if ((long)(__ret_warn_on != 0) != 0L) 
#line 5209 
                                          warn_slowpath_null("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c",5209); else ;
    
#line 5209 
    tmp = (long)(__ret_warn_on != 0);
  }
  
#line 5209 
  if ((long)tmp != 0L) {
    
#line 5210 
    __retres = -1;
    
#line 5210 
    goto return_label;
  }
  else ;
  
#line 5212 
  memset((void *)(& wkr),0,28UL);
  
#line 5213 
  wkr.len = (unsigned short)28U;
  
#line 5214 
  wkr.kindex = index;
  
#line 5215 
  wkr.klen = keylen;
  
#line 5216 
  memcpy((void *)(& wkr.key),(void const *)key,(unsigned long)keylen);
  
#line 5217 
  memcpy((void *)(& wkr.mac),(void const *)(& macaddr),6UL);
  
#line 5219 
  if (perm != 0) 
#line 5219 
                 disable_MAC(ai,lock); else ;
  
#line 5220 
  rc = writeWepKeyRid(ai,& wkr,perm,lock);
  
#line 5221 
  if (perm != 0) 
#line 5221 
                 enable_MAC(ai,lock); else ;
  
#line 5222 
  __retres = rc;
  return_label: 
#line 5222 
                return __retres;
}


#line 5225  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int set_wep_tx_idx(struct airo_info *ai, u16 index, int perm, int lock)
{
  WepKeyRid wkr;
  int rc;
  
#line 5230 
  memset((void *)(& wkr),0,28UL);
  
#line 5231 
  wkr.len = (unsigned short)28U;
  
#line 5232 
  wkr.kindex = (unsigned short)65535U;
  
#line 5233 
  wkr.mac[0] = (unsigned char)index;
  
#line 5235 
  if (perm != 0) {
    
#line 5236 
    ai->defindex = (char)index;
    
#line 5237 
    disable_MAC(ai,lock);
  }
  else ;
  
#line 5240 
  rc = writeWepKeyRid(ai,& wkr,perm,lock);
  
#line 5242 
  if (perm != 0) 
#line 5243 
                 enable_MAC(ai,lock); else ;
  
#line 5244 
  return rc;
}


#line 5247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void proc_wepkey_on_close(struct inode *inode, struct file *file)
{
  struct proc_data *data;
  int i;
  int rc;
  char key[16U];
  
#line 5249 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5250 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5253 
  u16 index = (unsigned short)0U;
  
#line 5254 
  int j = 0;
  
#line 5256 
  memset((void *)(& key),0,16UL);
  
#line 5258 
  data = (struct proc_data *)file->private_data;
  
#line 5259 
  if (data->writelen == 0) 
#line 5259 
                           goto return_label; else ;
  
#line 5261 
  if ((unsigned int)*(data->wbuffer) + 208U <= 3U && ((int)*(data->wbuffer + 1U) == 32 || (int)*(data->wbuffer + 1U) == 10)) {
    
#line 5263 
    index = (unsigned short)((unsigned int)((unsigned short)*(data->wbuffer)) + 65488U);
    
#line 5264 
    if ((int)*(data->wbuffer + 1U) == 10) {
      
#line 5265 
      rc = set_wep_tx_idx(ai,(unsigned short)((int)index),1,1);
      
#line 5266 
      if (rc < 0) 
#line 5267 
                  printk("\001",(char *)(& (ai->dev)->name),(int)index,rc); else ;
      
#line 5271 
      goto return_label;
    }
    else ;
    
#line 5273 
    j = 2;
  }
  else {
    
#line 5275 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 5276 
    goto return_label;
  }
  
#line 5279 
  i = 0;
  
#line 5279 
  goto ldv_53741;
  ldv_53740: 
#line 5280 
  ;
  
#line 5280 
  switch (i % 3) {
    int tmp_0;
    int tmp_1;
    case 0: 
#line 5281 
    ;
    
#line 5282 
    tmp_0 = hex_to_bin((char)((int)*(data->wbuffer + (i + j))));
    
#line 5282 
    key[i / 3] = (char)(tmp_0 << 4);
    
#line 5283 
    goto ldv_53738;
    case 1: 
#line 5284 
    ;
    
#line 5285 
    tmp_1 = hex_to_bin((char)((int)*(data->wbuffer + (i + j))));
    
#line 5285 
    key[i / 3] = (char)((int)key[i / 3] | (int)((char)tmp_1));
    
#line 5286 
    goto ldv_53738;
  }
  ldv_53738: 
#line 5288 
  ;
  
#line 5279 
  i += 1;
  ldv_53741: 
#line 5280 
  ;
  
#line 5279 
  if (i <= 47 && (int)*(data->wbuffer + (i + j)) != 0) 
#line 5281 
                                                       goto ldv_53740; else 
                                                                    
#line 5284 
                                                                    goto ldv_53742;
  ldv_53742: 
#line 5285 
  ;
  
#line 5290 
  rc = set_wep_key(ai,(unsigned short)((int)index),(char const *)(& key),(unsigned short)((int)((unsigned short)(i / 3))),1,1);
  
#line 5291 
  if (rc < 0) 
#line 5292 
              printk("\001",(char *)(& (ai->dev)->name),(int)index,rc); else ;
  return_label: 
#line 5293 
                return;
}


#line 5297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_wepkey_open(struct inode *inode, struct file *file)
{
  int __retres;
  struct proc_data *data;
  char *ptr;
  WepKeyRid wkr;
  __le16 lastindex;
  int rc;
  void *tmp_0;
  char *tmp_1;
  char *tmp_3;
  size_t tmp_7;
  
#line 5300 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5301 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5305 
  int j = 0;
  
#line 5308 
  tmp_0 = kzalloc(40UL,208U);
  
#line 5308 
  file->private_data = tmp_0;
  
#line 5308 
  if (tmp_0 == (void *)0) {
    
#line 5309 
    __retres = -12;
    
#line 5309 
    goto return_label;
  }
  else ;
  
#line 5310 
  memset((void *)(& wkr),0,28UL);
  
#line 5311 
  data = (struct proc_data *)file->private_data;
  
#line 5312 
  tmp_1 = (char *)kzalloc(180UL,208U);
  
#line 5312 
  data->rbuffer = tmp_1;
  
#line 5312 
  if (tmp_1 == (char *)0) {
    
#line 5313 
    kfree((void const *)file->private_data);
    
#line 5314 
    __retres = -12;
    
#line 5314 
    goto return_label;
  }
  else ;
  
#line 5316 
  data->writelen = 0;
  
#line 5317 
  data->maxwritelen = 80;
  
#line 5318 
  tmp_3 = (char *)kzalloc(80UL,208U);
  
#line 5318 
  data->wbuffer = tmp_3;
  
#line 5318 
  if (tmp_3 == (char *)0) {
    
#line 5319 
    kfree((void const *)data->rbuffer);
    
#line 5320 
    kfree((void const *)file->private_data);
    
#line 5321 
    __retres = -12;
    
#line 5321 
    goto return_label;
  }
  else ;
  
#line 5323 
  data->on_close = & proc_wepkey_on_close;
  
#line 5325 
  ptr = data->rbuffer;
  
#line 5326 
  strcpy(ptr,"No wep keys\n");
  
#line 5327 
  rc = readWepKeyRid(ai,& wkr,1,1);
  
#line 5328 
  if (rc == 0) {
    ldv_53755: 
#line 5330 
    ;
    
#line 5329 
    lastindex = wkr.kindex;
    
#line 5330 
    if ((unsigned int)wkr.kindex == 65535U) {
      int tmp_5;
      
#line 5331 
      tmp_5 = sprintf(ptr + j,"Tx key = %d\n",(int)wkr.mac[0]);
      
#line 5332 
      j = tmp_5 + j;
    }
    else {
      int tmp_6;
      
#line 5334 
      tmp_6 = sprintf(ptr + j,"Key %d set with length = %d\n",(int)wkr.kindex,(int)wkr.klen);
      
#line 5336 
      j = tmp_6 + j;
    }
    
#line 5338 
    readWepKeyRid(ai,& wkr,0,1);
    
#line 5339 
    if ((int)wkr.kindex != (int)lastindex && j <= 149) 
#line 5341 
                                                       goto ldv_53755; else 
                                                                    
#line 5344 
                                                                    goto ldv_53756;
    ldv_53756: 
#line 5345 
    ;
  }
  else ;
  
#line 5341 
  tmp_7 = strlen((char const *)data->rbuffer);
  
#line 5341 
  data->readlen = (int)tmp_7;
  
#line 5342 
  __retres = 0;
  return_label: 
#line 5342 
                return __retres;
}


#line 5345  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_SSID_open(struct inode *inode, struct file *file)
{
  int __retres;
  struct proc_data *data;
  int i;
  char *ptr;
  SsidRid SSID_rid;
  void *tmp_0;
  char *tmp_1;
  char *tmp_3;
  size_t tmp_7;
  
#line 5348 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5349 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5354 
  tmp_0 = kzalloc(40UL,208U);
  
#line 5354 
  file->private_data = tmp_0;
  
#line 5354 
  if (tmp_0 == (void *)0) {
    
#line 5355 
    __retres = -12;
    
#line 5355 
    goto return_label;
  }
  else ;
  
#line 5356 
  data = (struct proc_data *)file->private_data;
  
#line 5357 
  tmp_1 = (char *)kmalloc(104UL,208U);
  
#line 5357 
  data->rbuffer = tmp_1;
  
#line 5357 
  if (tmp_1 == (char *)0) {
    
#line 5358 
    kfree((void const *)file->private_data);
    
#line 5359 
    __retres = -12;
    
#line 5359 
    goto return_label;
  }
  else ;
  
#line 5361 
  data->writelen = 0;
  
#line 5362 
  data->maxwritelen = 99;
  
#line 5364 
  tmp_3 = (char *)kzalloc(100UL,208U);
  
#line 5364 
  data->wbuffer = tmp_3;
  
#line 5364 
  if (tmp_3 == (char *)0) {
    
#line 5365 
    kfree((void const *)data->rbuffer);
    
#line 5366 
    kfree((void const *)file->private_data);
    
#line 5367 
    __retres = -12;
    
#line 5367 
    goto return_label;
  }
  else ;
  
#line 5369 
  data->on_close = & proc_SSID_on_close;
  
#line 5371 
  readSsidRid(ai,& SSID_rid);
  
#line 5372 
  ptr = data->rbuffer;
  
#line 5373 
  i = 0;
  
#line 5373 
  goto ldv_53774;
  ldv_53773: 
#line 5374 
  ;
  {
    int j;
    char *tmp_5;
    char *tmp_6;
    
#line 5375 
    size_t len = (unsigned long)SSID_rid.ssids[i].len;
    
#line 5376 
    if (len == 0UL) 
#line 5377 
                    goto ldv_53769; else ;
    
#line 5378 
    if (len > 32UL) 
#line 5379 
                    len = 32UL; else ;
    
#line 5380 
    j = 0;
    
#line 5380 
    goto ldv_53771;
    ldv_53770: 
#line 5381 
    ;
    
#line 5381 
    tmp_5 = ptr;
    
#line 5381 
    ptr += 1;
    
#line 5381 
    *tmp_5 = (char)SSID_rid.ssids[i].ssid[j];
    
#line 5380 
    j += 1;
    ldv_53771: 
#line 5381 
    ;
    
#line 5380 
    if ((unsigned long)j < len && (unsigned int)SSID_rid.ssids[i].ssid[j] != 0U) 
      
#line 5382 
      goto ldv_53770; else 
#line 5385 
                           goto ldv_53772;
    ldv_53772: 
#line 5386 
    ;
    
#line 5382 
    tmp_6 = ptr;
    
#line 5382 
    ptr += 1;
    
#line 5382 
    *tmp_6 = (char)10;
  }
  
#line 5373 
  i += 1;
  ldv_53774: 
#line 5374 
  ;
  
#line 5373 
  if (i <= 2) 
#line 5375 
              goto ldv_53773; else 
#line 5378 
                                   goto ldv_53769;
  ldv_53769: 
#line 5379 
  ;
  
#line 5384 
  *ptr = (char)0;
  
#line 5385 
  tmp_7 = strlen((char const *)data->rbuffer);
  
#line 5385 
  data->readlen = (int)tmp_7;
  
#line 5386 
  __retres = 0;
  return_label: 
#line 5386 
                return __retres;
}


#line 5389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_APList_open(struct inode *inode, struct file *file)
{
  int __retres;
  struct proc_data *data;
  int i;
  char *ptr;
  APListRid APList_rid;
  void *tmp_0;
  char *tmp_1;
  char *tmp_3;
  int tmp_5;
  size_t tmp_7;
  
#line 5391 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5392 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5397 
  tmp_0 = kzalloc(40UL,208U);
  
#line 5397 
  file->private_data = tmp_0;
  
#line 5397 
  if (tmp_0 == (void *)0) {
    
#line 5398 
    __retres = -12;
    
#line 5398 
    goto return_label;
  }
  else ;
  
#line 5399 
  data = (struct proc_data *)file->private_data;
  
#line 5400 
  tmp_1 = (char *)kmalloc(104UL,208U);
  
#line 5400 
  data->rbuffer = tmp_1;
  
#line 5400 
  if (tmp_1 == (char *)0) {
    
#line 5401 
    kfree((void const *)file->private_data);
    
#line 5402 
    __retres = -12;
    
#line 5402 
    goto return_label;
  }
  else ;
  
#line 5404 
  data->writelen = 0;
  
#line 5405 
  data->maxwritelen = 72;
  
#line 5406 
  tmp_3 = (char *)kzalloc((unsigned long)data->maxwritelen,208U);
  
#line 5406 
  data->wbuffer = tmp_3;
  
#line 5406 
  if (tmp_3 == (char *)0) {
    
#line 5407 
    kfree((void const *)data->rbuffer);
    
#line 5408 
    kfree((void const *)file->private_data);
    
#line 5409 
    __retres = -12;
    
#line 5409 
    goto return_label;
  }
  else ;
  
#line 5411 
  data->on_close = & proc_APList_on_close;
  
#line 5413 
  readAPListRid(ai,& APList_rid);
  
#line 5414 
  ptr = data->rbuffer;
  
#line 5415 
  i = 0;
  
#line 5415 
  goto ldv_53787;
  ldv_53786: 
#line 5416 
  ;
  
#line 5417 
  if (*((int *)(& APList_rid.ap[i])) == 0 && *((int *)(& APList_rid.ap[i][2])) == 0) 
    
#line 5418 
    goto ldv_53785; else ;
  
#line 5419 
  tmp_5 = sprintf(ptr,"%pM\n",(u8 *)(& APList_rid.ap[i]));
  
#line 5419 
  ptr += tmp_5;
  
#line 5415 
  i += 1;
  ldv_53787: 
#line 5416 
  ;
  
#line 5415 
  if (i <= 3) 
#line 5417 
              goto ldv_53786; else 
#line 5420 
                                   goto ldv_53785;
  ldv_53785: 
#line 5421 
  ;
  
#line 5421 
  if (i == 0) {
    int tmp_6;
    
#line 5421 
    tmp_6 = sprintf(ptr,"Not using specific APs\n");
    
#line 5421 
    ptr += tmp_6;
  }
  else ;
  
#line 5423 
  *ptr = (char)0;
  
#line 5424 
  tmp_7 = strlen((char const *)data->rbuffer);
  
#line 5424 
  data->readlen = (int)tmp_7;
  
#line 5425 
  __retres = 0;
  return_label: 
#line 5425 
                return __retres;
}


#line 5428  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_BSSList_open(struct inode *inode, struct file *file)
{
  int __retres;
  struct proc_data *data;
  char *ptr;
  BSSListRid BSSList_rid;
  int rc;
  void *tmp_0;
  char *tmp_1;
  int tmp_4;
  int tmp_9;
  char *tmp_5;
  char *tmp_6;
  char *tmp_7;
  char *tmp_8;
  size_t tmp_10;
  
#line 5430 
  struct net_device *dev = PDE_DATA((struct inode const *)inode);
  
#line 5431 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5436 
  int doLoseSync = -1;
  
#line 5438 
  tmp_0 = kzalloc(40UL,208U);
  
#line 5438 
  file->private_data = tmp_0;
  
#line 5438 
  if (tmp_0 == (void *)0) {
    
#line 5439 
    __retres = -12;
    
#line 5439 
    goto return_label;
  }
  else ;
  
#line 5440 
  data = (struct proc_data *)file->private_data;
  
#line 5441 
  tmp_1 = (char *)kmalloc(1024UL,208U);
  
#line 5441 
  data->rbuffer = tmp_1;
  
#line 5441 
  if (tmp_1 == (char *)0) {
    
#line 5442 
    kfree((void const *)file->private_data);
    
#line 5443 
    __retres = -12;
    
#line 5443 
    goto return_label;
  }
  else ;
  
#line 5445 
  data->writelen = 0;
  
#line 5446 
  data->maxwritelen = 0;
  
#line 5447 
  data->wbuffer = (char *)0;
  
#line 5448 
  data->on_close = (void (*)(struct inode *, struct file *))0;
  
#line 5450 
  if ((file->f_mode & 2U) != 0U) {
    
#line 5451 
    if ((file->f_mode & 1U) == 0U) {
      Cmd cmd;
      Resp rsp;
      int tmp_3;
      
#line 5455 
      if ((ai->flags & 3UL) != 0UL) {
        
#line 5455 
        __retres = -100;
        
#line 5455 
        goto return_label;
      }
      else ;
      
#line 5456 
      memset((void *)(& cmd),0,8UL);
      
#line 5457 
      cmd.cmd = (unsigned short)259U;
      
#line 5458 
      tmp_3 = down_interruptible(& ai->sem);
      
#line 5458 
      if (tmp_3 != 0) {
        
#line 5459 
        __retres = -512;
        
#line 5459 
        goto return_label;
      }
      else ;
      
#line 5460 
      issuecommand(ai,& cmd,& rsp);
      
#line 5461 
      up(& ai->sem);
      
#line 5462 
      data->readlen = 0;
      
#line 5463 
      __retres = 0;
      
#line 5463 
      goto return_label;
    }
    else ;
    
#line 5465 
    doLoseSync = 1;
  }
  else ;
  
#line 5467 
  ptr = data->rbuffer;
  
#line 5471 
  rc = readBSSListRid(ai,doLoseSync,& BSSList_rid);
  
#line 5472 
  goto ldv_53802;
  ldv_53801: 
#line 5473 
  ;
  
#line 5473 
  tmp_4 = sprintf(ptr,"%pM %*s rssi = %d",(u8 *)(& BSSList_rid.bssid),(int)BSSList_rid.ssidLen,(u8 *)(& BSSList_rid.ssid),(int)BSSList_rid.dBm);
  
#line 5477 
  ptr += tmp_4;
  
#line 5482 
  if (((int)BSSList_rid.cap & 32) != 0) 
#line 5482 
                                        tmp_5 = (char *)"shorthdr"; else 
                                                                    
#line 5482 
                                                                    tmp_5 = (char *)"";
  
#line 5481 
  if (((int)BSSList_rid.cap & 16) != 0) 
#line 5481 
                                        tmp_6 = (char *)"wep"; else 
#line 5481 
                                                                    tmp_6 = (char *)"";
  
#line 5480 
  if (((int)BSSList_rid.cap & 2) != 0) 
#line 5480 
                                       tmp_7 = (char *)"adhoc"; else 
                                                                  
#line 5480 
                                                                  tmp_7 = (char *)"";
  
#line 5479 
  if (((int)BSSList_rid.cap & 1) != 0) 
#line 5479 
                                       tmp_8 = (char *)"ESS"; else 
#line 5479 
                                                                   tmp_8 = (char *)"";
  
#line 5478 
  ;
  
#line 5478 
  tmp_9 = sprintf(ptr," channel = %d %s %s %s %s\n",(int)BSSList_rid.dsChannel,tmp_8,tmp_7,tmp_6,tmp_5);
  
#line 5483 
  ptr += tmp_9;
  
#line 5484 
  rc = readBSSListRid(ai,0,& BSSList_rid);
  ldv_53802: 
#line 5485 
  ;
  
#line 5472 
  if (rc == 0 && (unsigned int)BSSList_rid.index != 65535U) 
#line 5474 
                                                            goto ldv_53801; else 
                                                                    
#line 5477 
                                                                    goto ldv_53803;
  ldv_53803: 
#line 5478 
  ;
  
#line 5486 
  *ptr = (char)0;
  
#line 5487 
  tmp_10 = strlen((char const *)data->rbuffer);
  
#line 5487 
  data->readlen = (int)tmp_10;
  
#line 5488 
  __retres = 0;
  return_label: 
#line 5488 
                return __retres;
}


#line 5491  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int proc_close(struct inode *inode, struct file *file)
{
  int __retres;
  
#line 5493 
  struct proc_data *data = (struct proc_data *)file->private_data;
  
#line 5495 
  if (data->on_close != (void (*)(struct inode *, struct file *))0) 
#line 5496 
                                                                    (*(data->on_close))(inode,file); else ;
  
#line 5497 
  kfree((void const *)data->rbuffer);
  
#line 5498 
  kfree((void const *)data->wbuffer);
  
#line 5499 
  kfree((void const *)data);
  
#line 5500 
  __retres = 0;
  
#line 5500 
  return __retres;
}


#line 5508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void timer_func(struct net_device *dev)
{
  
#line 5509 
  struct airo_info *apriv = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5512 
  readConfigRid(apriv,0);
  
#line 5513 
  disable_MAC(apriv,0);
  
#line 5514 
  switch ((int)apriv->config.authType) {
    case 257: 
#line 5515 
    ;
    
#line 5517 
    apriv->config.authType = (unsigned short)1U;
    
#line 5518 
    goto ldv_53814;
    case 258: 
#line 5519 
    ;
    
#line 5520 
    if ((int)apriv->keyindex < auto_wep) {
      
#line 5521 
      set_wep_tx_idx(apriv,(unsigned short)((int)((unsigned short)apriv->keyindex)),0,0);
      
#line 5522 
      apriv->config.authType = (unsigned short)258U;
      
#line 5523 
      apriv->keyindex = (char)((int)apriv->keyindex + 1);
    }
    else {
      
#line 5526 
      apriv->keyindex = (char)0;
      
#line 5527 
      set_wep_tx_idx(apriv,(unsigned short)((int)((unsigned short)apriv->defindex)),0,0);
      
#line 5528 
      apriv->config.authType = (unsigned short)257U;
    }
    
#line 5530 
    goto ldv_53814;
    default: 
#line 5531 
    ;
    
#line 5532 
    apriv->config.authType = (unsigned short)258U;
  }
  ldv_53814: 
#line 5534 
  ;
  
#line 5534 
  set_bit(13L,(unsigned long volatile *)(& apriv->flags));
  
#line 5535 
  writeConfigRid(apriv,0);
  
#line 5536 
  enable_MAC(apriv,0);
  
#line 5537 
  up(& apriv->sem);
  
#line 5540 
  set_bit(7L,(unsigned long volatile *)(& apriv->jobs));
  
#line 5541 
  apriv->expires = jiffies + 750UL;
  
#line 5542 
  return;
}


#line 5545  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_pci_probe(struct pci_dev *pdev, struct pci_device_id const *pent)
{
  int __retres;
  struct net_device *dev;
  int tmp;
  
#line 5550 
  tmp = pci_enable_device(pdev);
  
#line 5550 
  if (tmp != 0) {
    
#line 5551 
    __retres = -19;
    
#line 5551 
    goto return_label;
  }
  else ;
  
#line 5552 
  pci_set_master(pdev);
  
#line 5554 
  if ((unsigned int)pdev->device == 20480U || (unsigned int)pdev->device == 42244U) 
    
#line 5555 
    dev = _init_airo_card((unsigned short)((int)((unsigned short)pdev->irq)),(int)pdev->resource[0].start,0,pdev,& pdev->dev); else 
                                                                    
#line 5557 
                                                                    dev = _init_airo_card((unsigned short)((int)((unsigned short)pdev->irq)),(int)pdev->resource[2].start,0,pdev,& pdev->dev);
  
#line 5558 
  if (dev == (struct net_device *)0) {
    
#line 5559 
    pci_disable_device(pdev);
    
#line 5560 
    __retres = -19;
    
#line 5560 
    goto return_label;
  }
  else ;
  
#line 5563 
  pci_set_drvdata(pdev,(void *)dev);
  
#line 5564 
  __retres = 0;
  return_label: 
#line 5564 
                return __retres;
}


#line 5567  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_pci_remove(struct pci_dev *pdev)
{
  
#line 5569 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 5571 
  printk("\001",(char *)(& dev->name));
  
#line 5572 
  stop_airo_card(dev,1);
  
#line 5573 
  pci_disable_device(pdev);
  
#line 5574 
  return;
}


#line 5576  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_pci_suspend(struct pci_dev *pdev, pm_message_t state)
{
  int __retres;
  Cmd cmd;
  Resp rsp;
  int tmp_2;
  pci_power_t tmp_3;
  pci_power_t tmp_4;
  
#line 5578 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 5579 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5583 
  if (ai->APList == (APListRid *)0) 
#line 5584 
                                    ai->APList = (APListRid *)kmalloc(26UL,208U); else ;
  
#line 5585 
  if (ai->APList == (APListRid *)0) {
    
#line 5586 
    __retres = -12;
    
#line 5586 
    goto return_label;
  }
  else ;
  
#line 5587 
  if (ai->SSID == (SsidRid *)0) 
#line 5588 
                                ai->SSID = (SsidRid *)kmalloc(104UL,208U); else ;
  
#line 5589 
  if (ai->SSID == (SsidRid *)0) {
    
#line 5590 
    __retres = -12;
    
#line 5590 
    goto return_label;
  }
  else ;
  
#line 5591 
  readAPListRid(ai,ai->APList);
  
#line 5592 
  readSsidRid(ai,ai->SSID);
  
#line 5593 
  memset((void *)(& cmd),0,8UL);
  
#line 5595 
  tmp_2 = down_interruptible(& ai->sem);
  
#line 5595 
  if (tmp_2 != 0) {
    
#line 5596 
    __retres = -11;
    
#line 5596 
    goto return_label;
  }
  else ;
  
#line 5597 
  disable_MAC(ai,0);
  
#line 5598 
  netif_device_detach(dev);
  
#line 5599 
  ai->power = state;
  
#line 5600 
  cmd.cmd = (unsigned short)5U;
  
#line 5601 
  issuecommand(ai,& cmd,& rsp);
  
#line 5603 
  tmp_3 = pci_choose_state(pdev,state);
  
#line 5603 
  ;
  
#line 5603 
  pci_enable_wake(pdev,tmp_3,(_Bool)1);
  
#line 5604 
  pci_save_state(pdev);
  
#line 5605 
  tmp_4 = pci_choose_state(pdev,state);
  
#line 5605 
  ;
  
#line 5605 
  pci_set_power_state(pdev,tmp_4);
  
#line 5606 
  __retres = 0;
  return_label: 
#line 5606 
                return __retres;
}


#line 5609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_pci_resume(struct pci_dev *pdev)
{
  int __retres;
  
#line 5611 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 5612 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5613 
  pci_power_t prev_state = pdev->current_state;
  
#line 5615 
  pci_set_power_state(pdev,0);
  
#line 5616 
  pci_restore_state(pdev);
  
#line 5617 
  pci_enable_wake(pdev,0,(_Bool)0);
  
#line 5619 
  if (prev_state != 1) {
    
#line 5620 
    reset_card(dev,0);
    
#line 5621 
    mpi_init_descriptors(ai);
    
#line 5622 
    setup_card(ai,dev->dev_addr,0);
    
#line 5623 
    set_bit(0L,(unsigned long volatile *)(& ai->flags));
    
#line 5624 
    set_bit(9L,(unsigned long volatile *)(& ai->flags));
  }
  else {
    
#line 5626 
    OUT4500(ai,(unsigned short)52,(unsigned short)8192);
    
#line 5627 
    OUT4500(ai,(unsigned short)52,(unsigned short)8192);
    
#line 5628 
    msleep(100U);
  }
  
#line 5631 
  set_bit(13L,(unsigned long volatile *)(& ai->flags));
  
#line 5632 
  disable_MAC(ai,0);
  
#line 5633 
  msleep(200U);
  
#line 5634 
  if (ai->SSID != (SsidRid *)0) {
    
#line 5635 
    writeSsidRid(ai,ai->SSID,0);
    
#line 5636 
    kfree((void const *)ai->SSID);
    
#line 5637 
    ai->SSID = (SsidRid *)0;
  }
  else ;
  
#line 5639 
  if (ai->APList != (APListRid *)0) {
    
#line 5640 
    writeAPListRid(ai,ai->APList,0);
    
#line 5641 
    kfree((void const *)ai->APList);
    
#line 5642 
    ai->APList = (APListRid *)0;
  }
  else ;
  
#line 5644 
  writeConfigRid(ai,0);
  
#line 5645 
  enable_MAC(ai,0);
  
#line 5646 
  struct pm_message __constr_expr_37 = {.event = 0};
  
#line 5646 
  ai->power = __constr_expr_37;
  
#line 5647 
  netif_device_attach(dev);
  
#line 5648 
  netif_wake_queue(dev);
  
#line 5649 
  enable_interrupts(ai);
  
#line 5650 
  up(& ai->sem);
  
#line 5651 
  __retres = 0;
  
#line 5651 
  return __retres;
}


#line 5655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_init_module(void)
{
  int __retres;
  int i;
  int tmp_0;
  bool tmp;
  struct net_device *tmp_3;
  
#line 5659 
  proc_kuid = make_kuid(& init_user_ns,(unsigned int)proc_uid);
  
#line 5660 
  proc_kgid = make_kgid(& init_user_ns,(unsigned int)proc_gid);
  
#line 5661 
  tmp = uid_valid(proc_kuid);
  
#line 5661 
  if (tmp) 
#line 5661 
           tmp_0 = 0; else 
#line 5661 
                           tmp_0 = 1;
  
#line 5661 
  if (tmp_0) {
    
#line 5662 
    __retres = -22;
    
#line 5662 
    goto return_label;
  }
  else {
    int tmp_2;
    bool tmp_1;
    
#line 5661 
    tmp_1 = gid_valid(proc_kgid);
    
#line 5661 
    if (tmp_1) 
#line 5661 
               tmp_2 = 0; else 
#line 5661 
                               tmp_2 = 1;
    
#line 5661 
    if (tmp_2) {
      
#line 5662 
      __retres = -22;
      
#line 5662 
      goto return_label;
    }
    else ;
  }
  
#line 5664 
  airo_entry = proc_mkdir_mode("driver/aironet",(unsigned short)((int)((unsigned short)airo_perm)),(struct proc_dir_entry *)0);
  
#line 5666 
  if (airo_entry != (struct proc_dir_entry *)0) 
#line 5667 
                                                proc_set_user(airo_entry,proc_kuid,proc_kgid); else ;
  
#line 5669 
  i = 0;
  
#line 5669 
  goto ldv_53846;
  ldv_53845: 
#line 5670 
  ;
  
#line 5670 
  printk("\001",(char *)"",irq[i],io[i]);
  
#line 5672 
  tmp_3 = init_airo_card((unsigned short)((int)((unsigned short)irq[i])),io[i],0,(struct device *)0);
  
#line 5669 
  i += 1;
  ldv_53846: 
#line 5670 
  ;
  
#line 5669 
  if ((i <= 3 && io[i] != 0) && irq[i] != 0) 
#line 5671 
                                             goto ldv_53845; else 
#line 5674 
                                                                  goto ldv_53847;
  ldv_53847: 
#line 5675 
  ;
  
#line 5677 
  printk("\001",(char *)"");
  
#line 5678 
  i = ldv___pci_register_driver_95(& airo_driver,& __this_module,"airo");
  
#line 5679 
  printk("\001",(char *)"");
  
#line 5681 
  if (i != 0) {
    
#line 5682 
    remove_proc_entry("driver/aironet",(struct proc_dir_entry *)0);
    
#line 5683 
    __retres = i;
    
#line 5683 
    goto return_label;
  }
  else ;
  
#line 5690 
  __retres = 0;
  return_label: 
#line 5690 
                return __retres;
}


#line 5693  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_cleanup_module(void)
{
  struct airo_info *ai;
  struct airo_info *tmp;
  int tmp_0;
  
#line 5696 
  goto ldv_53855;
  ldv_53854: 
#line 5697 
  ;
  {
    
#line 5697 
    struct list_head const *__mptr = (struct list_head const *)airo_devices.next;
    
#line 5697 
    tmp = (struct airo_info *)__mptr + 18446744073709551608U;
  }
  
#line 5697 
  ai = tmp;
  
#line 5698 
  printk("\001",(char *)(& (ai->dev)->name));
  
#line 5699 
  stop_airo_card(ai->dev,1);
  ldv_53855: 
#line 5700 
  ;
  
#line 5696 
  tmp_0 = list_empty((struct list_head const *)(& airo_devices));
  
#line 5696 
  if (tmp_0 == 0) 
#line 5698 
                  goto ldv_53854; else 
#line 5701 
                                       goto ldv_53856;
  ldv_53856: 
#line 5702 
  ;
  
#line 5702 
  ldv_pci_unregister_driver_96(& airo_driver);
  
#line 5704 
  remove_proc_entry("driver/aironet",(struct proc_dir_entry *)0);
  
#line 5705 
  return;
}


#line 5717  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u8 airo_rssi_to_dbm(tdsRssiEntry *rssi_rid, u8 rssi)
{
  u8 __retres;
  
#line 5719 
  if (rssi_rid == (tdsRssiEntry *)0) {
    
#line 5720 
    __retres = (unsigned char)0U;
    
#line 5720 
    goto return_label;
  }
  else ;
  
#line 5722 
  __retres = (unsigned char)(- ((int)(rssi_rid + (int)rssi)->rssidBm));
  return_label: 
#line 5722 
                return __retres;
}


#line 5725  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static u8 airo_dbm_to_pct(tdsRssiEntry *rssi_rid, u8 dbm)
{
  u8 __retres;
  int i;
  
#line 5729 
  if (rssi_rid == (tdsRssiEntry *)0) {
    
#line 5730 
    __retres = (unsigned char)0U;
    
#line 5730 
    goto return_label;
  }
  else ;
  
#line 5732 
  i = 0;
  
#line 5732 
  goto ldv_53867;
  ldv_53866: 
#line 5733 
  ;
  
#line 5733 
  if ((int)(rssi_rid + i)->rssidBm == (int)dbm) {
    
#line 5734 
    __retres = (rssi_rid + i)->rssipct;
    
#line 5734 
    goto return_label;
  }
  else ;
  
#line 5732 
  i += 1;
  ldv_53867: 
#line 5733 
  ;
  
#line 5732 
  if (i <= 255) 
#line 5734 
                goto ldv_53866; else 
#line 5737 
                                     goto ldv_53868;
  ldv_53868: 
#line 5738 
  ;
  
#line 5736 
  __retres = (unsigned char)0U;
  return_label: 
#line 5736 
                return __retres;
}


#line 5740  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_quality(StatusRid *status_rid, CapabilityRid *cap_rid)
{
  int __retres;
  u16 sq;
  int tmp;
  
#line 5742 
  int quality = 0;
  
#line 5745 
  if (((int)status_rid->mode & 63) != 63) {
    
#line 5746 
    __retres = 0;
    
#line 5746 
    goto return_label;
  }
  else ;
  
#line 5748 
  if (((int)cap_rid->hardCap & 8) == 0) {
    
#line 5749 
    __retres = 0;
    
#line 5749 
    goto return_label;
  }
  else ;
  
#line 5751 
  sq = status_rid->signalQuality;
  
#line 5752 
  tmp = memcmp((void const *)(& cap_rid->prodName),(void const *)"350",3UL);
  
#line 5752 
  if (tmp != 0) 
    
#line 5753 
    if ((unsigned int)sq > 32U) 
#line 5754 
                                quality = 0; else 
#line 5756 
                                                  quality = 32 - (int)sq;
  else 
    
#line 5758 
    if ((unsigned int)sq > 176U) 
#line 5759 
                                 quality = 0;
    else 
      
#line 5760 
      if ((unsigned int)sq <= 15U) 
#line 5761 
                                   quality = 160; else 
#line 5763 
                                                       quality = 176 - (int)sq;
  
#line 5764 
  __retres = quality;
  return_label: 
#line 5764 
                return __retres;
}


#line 5774  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_name(struct net_device *dev, struct iw_request_info *info, char *cwrq, char *extra)
{
  int __retres;
  
#line 5779 
  strcpy(cwrq,"IEEE 802.11-DS");
  
#line 5780 
  __retres = 0;
  
#line 5780 
  return __retres;
}


#line 5787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_freq(struct net_device *dev, struct iw_request_info *info, struct iw_freq *fwrq, char *extra)
{
  
#line 5792 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5793 
  int rc = -115;
  
#line 5796 
  if ((int)fwrq->e == 1) {
    
#line 5797 
    int f = fwrq->m / 100000;
    
#line 5800 
    fwrq->e = (short)0;
    
#line 5801 
    fwrq->m = ieee80211_frequency_to_channel(f);
  }
  else ;
  
#line 5804 
  if (fwrq->m > 1000 || (int)fwrq->e > 0) 
#line 5805 
                                          rc = -95;
  else {
    
#line 5807 
    int channel = fwrq->m;
    
#line 5810 
    if ((unsigned int)channel + 4294967295U > 13U) {
      
#line 5811 
      printk("\001",(char *)(& dev->name),fwrq->m);
      
#line 5813 
      rc = -22;
    }
    else {
      
#line 5815 
      readConfigRid(local,1);
      
#line 5817 
      local->config.channelSet = (unsigned short)channel;
      
#line 5818 
      set_bit(13L,(unsigned long volatile *)(& local->flags));
    }
  }
  
#line 5821 
  return rc;
}


#line 5828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_freq(struct net_device *dev, struct iw_request_info *info, struct iw_freq *fwrq, char *extra)
{
  int __retres;
  StatusRid status_rid;
  int ch;
  
#line 5833 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5837 
  readConfigRid(local,1);
  
#line 5838 
  if (((int)local->config.opmode & 255) == 1) 
#line 5839 
                                              status_rid.channel = local->config.channelSet; else 
                                                                    
#line 5841 
                                                                    readStatusRid(local,& status_rid,1);
  
#line 5843 
  ch = (int)status_rid.channel;
  
#line 5844 
  if ((unsigned int)ch + 4294967295U <= 13U) {
    int tmp;
    
#line 5845 
    tmp = ieee80211_channel_to_frequency(ch,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
    
#line 5845 
    fwrq->m = tmp * 100000;
    
#line 5847 
    fwrq->e = (short)1;
  }
  else {
    
#line 5849 
    fwrq->m = ch;
    
#line 5850 
    fwrq->e = (short)0;
  }
  
#line 5853 
  __retres = 0;
  
#line 5853 
  return __retres;
}


#line 5860  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_essid(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  SsidRid SSID_rid;
  
#line 5865 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5869 
  readSsidRid(local,& SSID_rid);
  
#line 5872 
  if ((unsigned int)dwrq->flags == 0U) 
#line 5874 
                                       memset((void *)(& SSID_rid),0,104UL);
  else {
    
#line 5876 
    unsigned int index = (unsigned int)(((int)dwrq->flags & 255) + -1);
    
#line 5879 
    if ((unsigned int)dwrq->length > 32U) {
      
#line 5880 
      __retres = -7;
      
#line 5880 
      goto return_label;
    }
    else ;
    
#line 5883 
    if (index > 2U) {
      
#line 5884 
      __retres = -22;
      
#line 5884 
      goto return_label;
    }
    else ;
    
#line 5887 
    memset((void *)(& SSID_rid.ssids[index].ssid),0,32UL);
    
#line 5889 
    memcpy((void *)(& SSID_rid.ssids[index].ssid),(void const *)extra,(unsigned long)dwrq->length);
    
#line 5890 
    SSID_rid.ssids[index].len = dwrq->length;
  }
  
#line 5892 
  SSID_rid.len = (unsigned short)104U;
  
#line 5894 
  disable_MAC(local,1);
  
#line 5895 
  writeSsidRid(local,& SSID_rid,1);
  
#line 5896 
  enable_MAC(local,1);
  
#line 5898 
  __retres = 0;
  return_label: 
#line 5898 
                return __retres;
}


#line 5905  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_essid(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  StatusRid status_rid;
  
#line 5910 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5913 
  readStatusRid(local,& status_rid,1);
  
#line 5919 
  memcpy((void *)extra,(void const *)(& status_rid.SSID),(unsigned long)status_rid.SSIDlen);
  
#line 5923 
  dwrq->length = status_rid.SSIDlen;
  
#line 5924 
  dwrq->flags = (unsigned short)1U;
  
#line 5926 
  __retres = 0;
  
#line 5926 
  return __retres;
}


#line 5933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_wap(struct net_device *dev, struct iw_request_info *info, struct sockaddr *awrq, char *extra)
{
  int __retres;
  Cmd cmd;
  Resp rsp;
  APListRid APList_rid;
  
#line 5938 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5943 
  if ((unsigned int)awrq->sa_family != 1U) {
    
#line 5944 
    __retres = -22;
    
#line 5944 
    goto return_label;
  }
  else {
    bool tmp_0;
    
#line 5945 
    tmp_0 = is_broadcast_ether_addr((u8 const *)(& awrq->sa_data));
    
#line 5945 
    if ((int)tmp_0 != 0) 
#line 5945 
                         goto _LOR;
    else {
      bool tmp_1;
      
#line 5945 
      tmp_1 = is_zero_ether_addr((u8 const *)(& awrq->sa_data));
      
#line 5945 
      if ((int)tmp_1 != 0) {
        _LOR: {
                int tmp;
                
#line 5947 
                memset((void *)(& cmd),0,8UL);
                
#line 5948 
                cmd.cmd = (unsigned short)3U;
                
#line 5949 
                tmp = down_interruptible(& local->sem);
                
#line 5949 
                if (tmp != 0) {
                  
#line 5950 
                  __retres = -512;
                  
#line 5950 
                  goto return_label;
                }
                else ;
                
#line 5951 
                issuecommand(local,& cmd,& rsp);
                
#line 5952 
                up(& local->sem);
              }
      }
      else {
        
#line 5954 
        memset((void *)(& APList_rid),0,26UL);
        
#line 5955 
        APList_rid.len = (unsigned short)26U;
        
#line 5956 
        memcpy((void *)(& APList_rid.ap[0]),(void const *)(& awrq->sa_data),6UL);
        
#line 5957 
        disable_MAC(local,1);
        
#line 5958 
        writeAPListRid(local,& APList_rid,1);
        
#line 5959 
        enable_MAC(local,1);
      }
    }
  }
  
#line 5961 
  __retres = 0;
  return_label: 
#line 5961 
                return __retres;
}


#line 5968  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_wap(struct net_device *dev, struct iw_request_info *info, struct sockaddr *awrq, char *extra)
{
  int __retres;
  StatusRid status_rid;
  
#line 5973 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5976 
  readStatusRid(local,& status_rid,1);
  
#line 5979 
  memcpy((void *)(& awrq->sa_data),(void const *)(& status_rid.bssid[0]),6UL);
  
#line 5980 
  awrq->sa_family = (unsigned short)1U;
  
#line 5982 
  __retres = 0;
  
#line 5982 
  return __retres;
}


#line 5989  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_nick(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  
#line 5994 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 5997 
  if ((unsigned int)dwrq->length > 16U) {
    
#line 5998 
    __retres = -7;
    
#line 5998 
    goto return_label;
  }
  else ;
  
#line 6000 
  readConfigRid(local,1);
  
#line 6001 
  memset((void *)(& local->config.nodeName),0,16UL);
  
#line 6002 
  memcpy((void *)(& local->config.nodeName),(void const *)extra,(unsigned long)dwrq->length);
  
#line 6003 
  set_bit(13L,(unsigned long volatile *)(& local->flags));
  
#line 6005 
  __retres = -115;
  return_label: 
#line 6005 
                return __retres;
}


#line 6012  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_nick(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  size_t tmp;
  
#line 6017 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6019 
  readConfigRid(local,1);
  
#line 6020 
  strncpy(extra,(char const *)(& local->config.nodeName),16UL);
  
#line 6021 
  *(extra + 16U) = (char)0;
  
#line 6022 
  tmp = strlen((char const *)extra);
  
#line 6022 
  dwrq->length = (unsigned short)tmp;
  
#line 6024 
  __retres = 0;
  
#line 6024 
  return __retres;
}


#line 6031  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_rate(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  CapabilityRid cap_rid;
  int i;
  
#line 6036 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6038 
  u8 brate = (unsigned char)0U;
  
#line 6042 
  readCapabilityRid(local,& cap_rid,1);
  
#line 6045 
  if ((unsigned int)vwrq->value <= 7U) 
#line 6048 
                                       brate = (unsigned char)cap_rid.supportedRates[vwrq->value];
  else {
    
#line 6051 
    u8 normvalue = (unsigned char)(vwrq->value / 500000);
    
#line 6054 
    i = 0;
    
#line 6054 
    goto ldv_53965;
    ldv_53964: 
#line 6055 
    ;
    
#line 6055 
    if ((int)normvalue == (int)cap_rid.supportedRates[i]) {
      
#line 6056 
      brate = normvalue;
      
#line 6057 
      goto ldv_53963;
    }
    else ;
    
#line 6054 
    i += 1;
    ldv_53965: 
#line 6055 
    ;
    
#line 6054 
    if (i <= 7) 
#line 6056 
                goto ldv_53964; else 
#line 6059 
                                     goto ldv_53963;
    ldv_53963: 
#line 6060 
    ;
  }
  
#line 6062 
  if (vwrq->value == -1) {
    
#line 6064 
    i = 0;
    
#line 6064 
    goto ldv_53968;
    ldv_53967: 
#line 6065 
    ;
    
#line 6065 
    if ((int)cap_rid.supportedRates[i] == 0) 
#line 6066 
                                             goto ldv_53966; else ;
    
#line 6064 
    i += 1;
    ldv_53968: 
#line 6065 
    ;
    
#line 6064 
    if (i <= 7) 
#line 6066 
                goto ldv_53967; else 
#line 6069 
                                     goto ldv_53966;
    ldv_53966: 
#line 6070 
    ;
    
#line 6068 
    if (i != 0) 
#line 6069 
                brate = (unsigned char)cap_rid.supportedRates[i + -1]; else ;
  }
  else ;
  
#line 6072 
  if ((unsigned int)brate == 0U) {
    
#line 6073 
    __retres = -22;
    
#line 6073 
    goto return_label;
  }
  else ;
  
#line 6076 
  readConfigRid(local,1);
  
#line 6078 
  if ((unsigned int)vwrq->fixed == 0U) {
    
#line 6080 
    memset((void *)(& local->config.rates),0,8UL);
    
#line 6081 
    i = 0;
    
#line 6081 
    goto ldv_53971;
    ldv_53970: 
#line 6082 
    ;
    
#line 6082 
    local->config.rates[i] = (unsigned char)cap_rid.supportedRates[i];
    
#line 6083 
    if ((int)local->config.rates[i] == (int)brate) 
#line 6084 
                                                   goto ldv_53969; else ;
    
#line 6081 
    i += 1;
    ldv_53971: 
#line 6082 
    ;
    
#line 6081 
    if (i <= 7) 
#line 6083 
                goto ldv_53970; else 
#line 6086 
                                     goto ldv_53969;
    ldv_53969: 
#line 6087 
    ;
  }
  else {
    
#line 6089 
    memset((void *)(& local->config.rates),0,8UL);
    
#line 6090 
    local->config.rates[0] = brate;
  }
  
#line 6092 
  set_bit(13L,(unsigned long volatile *)(& local->flags));
  
#line 6094 
  __retres = -115;
  return_label: 
#line 6094 
                return __retres;
}


#line 6101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_rate(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  StatusRid status_rid;
  
#line 6106 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6109 
  readStatusRid(local,& status_rid,1);
  
#line 6111 
  vwrq->value = (int)status_rid.currentXmitRate * 500000;
  
#line 6113 
  readConfigRid(local,1);
  
#line 6114 
  vwrq->fixed = (unsigned char)((unsigned int)local->config.rates[1] == 0U);
  
#line 6116 
  __retres = 0;
  
#line 6116 
  return __retres;
}


#line 6123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_rts(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 6128 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6129 
  int rthr = vwrq->value;
  
#line 6131 
  if ((unsigned int)vwrq->disabled != 0U) 
#line 6132 
                                          rthr = 2312; else ;
  
#line 6133 
  if ((unsigned int)rthr > 2312U) {
    
#line 6134 
    __retres = -22;
    
#line 6134 
    goto return_label;
  }
  else ;
  
#line 6136 
  readConfigRid(local,1);
  
#line 6137 
  local->config.rtsThres = (unsigned short)rthr;
  
#line 6138 
  set_bit(13L,(unsigned long volatile *)(& local->flags));
  
#line 6140 
  __retres = -115;
  return_label: 
#line 6140 
                return __retres;
}


#line 6147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_rts(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 6152 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6154 
  readConfigRid(local,1);
  
#line 6155 
  vwrq->value = (int)local->config.rtsThres;
  
#line 6156 
  vwrq->disabled = (unsigned char)(vwrq->value > 2311);
  
#line 6157 
  vwrq->fixed = (unsigned char)1U;
  
#line 6159 
  __retres = 0;
  
#line 6159 
  return __retres;
}


#line 6166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_frag(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 6171 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6172 
  int fthr = vwrq->value;
  
#line 6174 
  if ((unsigned int)vwrq->disabled != 0U) 
#line 6175 
                                          fthr = 2312; else ;
  
#line 6176 
  if ((unsigned int)fthr + 4294967040U > 2056U) {
    
#line 6177 
    __retres = -22;
    
#line 6177 
    goto return_label;
  }
  else ;
  
#line 6179 
  fthr &= -2;
  
#line 6180 
  readConfigRid(local,1);
  
#line 6181 
  local->config.fragThresh = (unsigned short)fthr;
  
#line 6182 
  set_bit(13L,(unsigned long volatile *)(& local->flags));
  
#line 6184 
  __retres = -115;
  return_label: 
#line 6184 
                return __retres;
}


#line 6191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_frag(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 6196 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6198 
  readConfigRid(local,1);
  
#line 6199 
  vwrq->value = (int)local->config.fragThresh;
  
#line 6200 
  vwrq->disabled = (unsigned char)(vwrq->value > 2311);
  
#line 6201 
  vwrq->fixed = (unsigned char)1U;
  
#line 6203 
  __retres = 0;
  
#line 6203 
  return __retres;
}


#line 6210  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_mode(struct net_device *dev, struct iw_request_info *info, __u32 *uwrq, char *extra)
{
  int __retres;
  int tmp;
  
#line 6215 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6216 
  int reset = 0;
  
#line 6218 
  readConfigRid(local,1);
  
#line 6219 
  tmp = sniffing_mode(local);
  
#line 6219 
  if (tmp != 0) 
#line 6220 
                reset = 1; else ;
  
#line 6222 
  switch (*uwrq) {
    case (__u32)1: 
#line 6223 
    ;
    
#line 6224 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode & 65280U);
    
#line 6225 
    local->config.opmode = local->config.opmode;
    
#line 6226 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65024U);
    
#line 6227 
    local->config.scanMode = (unsigned short)0U;
    
#line 6228 
    set_bit(7L,(unsigned long volatile *)(& local->flags));
    
#line 6229 
    goto ldv_54019;
    case (__u32)2: 
#line 6230 
    ;
    
#line 6231 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode & 65280U);
    
#line 6232 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode | 1U);
    
#line 6233 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65024U);
    
#line 6234 
    local->config.scanMode = (unsigned short)0U;
    
#line 6235 
    set_bit(7L,(unsigned long volatile *)(& local->flags));
    
#line 6236 
    goto ldv_54019;
    case (__u32)3: 
#line 6237 
    ;
    
#line 6238 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode & 65280U);
    
#line 6239 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode | 2U);
    
#line 6240 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65024U);
    
#line 6241 
    local->config.scanMode = (unsigned short)0U;
    
#line 6242 
    set_bit(7L,(unsigned long volatile *)(& local->flags));
    
#line 6243 
    goto ldv_54019;
    case (__u32)4: 
#line 6244 
    ;
    
#line 6245 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode & 65280U);
    
#line 6246 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode | 3U);
    
#line 6247 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65024U);
    
#line 6248 
    local->config.scanMode = (unsigned short)0U;
    
#line 6249 
    set_bit(7L,(unsigned long volatile *)(& local->flags));
    
#line 6250 
    goto ldv_54019;
    case (__u32)6: 
#line 6251 
    ;
    
#line 6252 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode & 65280U);
    
#line 6253 
    local->config.opmode = (unsigned short)((unsigned int)local->config.opmode | 1U);
    
#line 6254 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65024U);
    
#line 6255 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode | 259U);
    
#line 6256 
    local->config.scanMode = (unsigned short)1U;
    
#line 6257 
    set_bit(7L,(unsigned long volatile *)(& local->flags));
    
#line 6258 
    goto ldv_54019;
    default: 
#line 6259 
    ;
    
#line 6260 
    __retres = -22;
    
#line 6260 
    goto return_label;
  }
  ldv_54019: 
#line 6262 
  ;
  
#line 6262 
  if (reset != 0) 
#line 6263 
                  set_bit(14L,(unsigned long volatile *)(& local->flags)); else ;
  
#line 6264 
  set_bit(13L,(unsigned long volatile *)(& local->flags));
  
#line 6266 
  __retres = -115;
  return_label: 
#line 6266 
                return __retres;
}


#line 6273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_mode(struct net_device *dev, struct iw_request_info *info, __u32 *uwrq, char *extra)
{
  int __retres;
  
#line 6278 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6280 
  readConfigRid(local,1);
  
#line 6282 
  switch ((int)local->config.opmode & 255) {
    case 1: 
#line 6283 
    ;
    
#line 6284 
    *uwrq = 2U;
    
#line 6285 
    goto ldv_54033;
    case 2: 
#line 6286 
    ;
    
#line 6287 
    *uwrq = 3U;
    
#line 6288 
    goto ldv_54033;
    case 3: 
#line 6289 
    ;
    
#line 6290 
    *uwrq = 4U;
    
#line 6291 
    goto ldv_54033;
    default: 
#line 6292 
    ;
    
#line 6293 
    *uwrq = 1U;
  }
  ldv_54033: 
#line 6296 
  ;
  
#line 6296 
  __retres = 0;
  
#line 6296 
  return __retres;
}


#line 6299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
__inline static int valid_index(struct airo_info *ai, int index)
{
  int __retres;
  
#line 6301 
  __retres = (index >= 0 && ai->max_wep_idx >= index) != 0;
  
#line 6301 
  return __retres;
}


#line 6308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_encode(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  
#line 6313 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6314 
  int perm = ((int)dwrq->flags & 1024) == 0;
  
#line 6315 
  __le16 currentAuthType = local->config.authType;
  
#line 6316 
  int rc = 0;
  
#line 6318 
  if (local->wep_capable == 0) {
    
#line 6319 
    __retres = -95;
    
#line 6319 
    goto return_label;
  }
  else ;
  
#line 6321 
  readConfigRid(local,1);
  
#line 6329 
  if ((unsigned int)dwrq->length != 0U) {
    wep_key_t key;
    int current_index;
    int tmp;
    
#line 6331 
    int index = ((int)dwrq->flags & 255) + -1;
    
#line 6335 
    if ((unsigned int)dwrq->length > 13U) {
      
#line 6336 
      __retres = -22;
      
#line 6336 
      goto return_label;
    }
    else ;
    
#line 6339 
    current_index = get_wep_tx_idx(local);
    
#line 6340 
    if (current_index < 0) 
#line 6341 
                           current_index = 0; else ;
    
#line 6344 
    tmp = valid_index(local,index);
    
#line 6344 
    if (tmp == 0) 
#line 6345 
                  index = current_index; else ;
    
#line 6348 
    if ((unsigned int)dwrq->length > 5U) 
#line 6349 
                                         key.len = (unsigned short)13U; else 
                                                                    
#line 6351 
                                                                    key.len = (unsigned short)5U;
    
#line 6353 
    if (((int)dwrq->flags & 2048) == 0) {
      
#line 6355 
      memset((void *)(& key.key),0,13UL);
      
#line 6357 
      memcpy((void *)(& key.key),(void const *)extra,(unsigned long)dwrq->length);
      
#line 6359 
      rc = set_wep_key(local,(unsigned short)((int)((unsigned short)index)),(char const *)(& key.key),(unsigned short)((int)key.len),perm,1);
      
#line 6360 
      if (rc < 0) {
        
#line 6361 
        printk("\001",(char *)(& (local->dev)->name),index,rc);
        
#line 6364 
        __retres = rc;
        
#line 6364 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 6370 
    if ((index == current_index && (unsigned int)key.len != 0U) && (unsigned int)local->config.authType == 1U) 
      
#line 6372 
      local->config.authType = (unsigned short)257U; else ;
  }
  else {
    int tmp_0;
    
#line 6376 
    int index_0 = ((int)dwrq->flags & 255) + -1;
    
#line 6377 
    tmp_0 = valid_index(local,index_0);
    
#line 6377 
    if (tmp_0 != 0) {
      
#line 6378 
      rc = set_wep_tx_idx(local,(unsigned short)((int)((unsigned short)index_0)),perm,1);
      
#line 6379 
      if (rc < 0) {
        
#line 6380 
        printk("\001",(char *)(& (local->dev)->name),index_0,rc);
        
#line 6383 
        __retres = rc;
        
#line 6383 
        goto return_label;
      }
      else ;
    }
    else 
      
#line 6387 
      if (((int)dwrq->flags & 61440) == 0) {
        
#line 6388 
        __retres = -22;
        
#line 6388 
        goto return_label;
      }
      else ;
  }
  
#line 6392 
  if ((int)dwrq->flags < 0) 
#line 6393 
                            local->config.authType = (unsigned short)1U; else ;
  
#line 6394 
  if (((int)dwrq->flags & 16384) != 0) 
#line 6395 
                                       local->config.authType = (unsigned short)258U; else ;
  
#line 6396 
  if (((int)dwrq->flags & 8192) != 0) 
#line 6397 
                                      local->config.authType = (unsigned short)257U; else ;
  
#line 6399 
  if ((int)local->config.authType != (int)currentAuthType) 
#line 6400 
                                                           set_bit(13L,(unsigned long volatile *)(& local->flags)); else ;
  
#line 6401 
  __retres = -115;
  return_label: 
#line 6401 
                return __retres;
}


#line 6408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_encode(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  int wep_key_len;
  u8 buf[16U];
  int tmp;
  
#line 6413 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6414 
  int index = ((int)dwrq->flags & 255) + -1;
  
#line 6418 
  if (local->wep_capable == 0) {
    
#line 6419 
    __retres = -95;
    
#line 6419 
    goto return_label;
  }
  else ;
  
#line 6421 
  readConfigRid(local,1);
  
#line 6424 
  switch ((int)local->config.authType) {
    case 257: 
#line 6425 
    ;
    
#line 6426 
    dwrq->flags = (unsigned short)8192U;
    
#line 6427 
    goto ldv_54066;
    case 258: 
#line 6428 
    ;
    
#line 6429 
    dwrq->flags = (unsigned short)16384U;
    
#line 6430 
    goto ldv_54066;
    default: 
#line 6431 
    ;
    case 1: 
#line 6432 
    ;
    
#line 6433 
    dwrq->flags = (unsigned short)32768U;
    
#line 6434 
    goto ldv_54066;
  }
  ldv_54066: 
#line 6437 
  ;
  
#line 6437 
  dwrq->flags = (unsigned short)((unsigned int)dwrq->flags | 2048U);
  
#line 6438 
  memset((void *)extra,0,16UL);
  
#line 6441 
  tmp = valid_index(local,index);
  
#line 6441 
  if (tmp == 0) {
    
#line 6442 
    index = get_wep_tx_idx(local);
    
#line 6443 
    if (index < 0) 
#line 6444 
                   index = 0; else ;
  }
  else ;
  
#line 6446 
  dwrq->flags = (unsigned short)((unsigned int)dwrq->flags | ((unsigned int)index + 1U));
  
#line 6449 
  wep_key_len = get_wep_key(local,(unsigned short)((int)((unsigned short)index)),(char *)(&(buf[0])),(unsigned short)16);
  
#line 6450 
  if (wep_key_len < 0) 
#line 6451 
                       dwrq->length = (unsigned short)0U;
  else {
    
#line 6453 
    dwrq->length = (unsigned short)wep_key_len;
    
#line 6454 
    memcpy((void *)extra,(void const *)(& buf),(unsigned long)dwrq->length);
  }
  
#line 6457 
  __retres = 0;
  return_label: 
#line 6457 
                return __retres;
}


#line 6464  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_encodeext(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int idx;
  int key_len;
  int rc;
  wep_key_t key;
  
#line 6469 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6470 
  struct iw_point *encoding = & wrqu->encoding;
  
#line 6471 
  struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
  
#line 6472 
  int perm = ((int)encoding->flags & 1024) == 0;
  
#line 6473 
  __le16 currentAuthType = local->config.authType;
  
#line 6474 
  int alg = (int)ext->alg;
  
#line 6474 
  int set_key = 1;
  
#line 6477 
  if (local->wep_capable == 0) {
    
#line 6478 
    __retres = -95;
    
#line 6478 
    goto return_label;
  }
  else ;
  
#line 6480 
  readConfigRid(local,1);
  
#line 6483 
  idx = (int)encoding->flags & 255;
  
#line 6484 
  if (idx != 0) {
    int tmp;
    
#line 6485 
    tmp = valid_index(local,idx + -1);
    
#line 6485 
    if (tmp == 0) {
      
#line 6486 
      __retres = -22;
      
#line 6486 
      goto return_label;
    }
    else ;
    
#line 6487 
    idx -= 1;
  }
  else {
    
#line 6489 
    idx = get_wep_tx_idx(local);
    
#line 6490 
    if (idx < 0) 
#line 6491 
                 idx = 0; else ;
  }
  
#line 6494 
  if ((int)encoding->flags < 0) 
#line 6495 
                                alg = 0; else ;
  
#line 6497 
  if ((ext->ext_flags & 8U) != 0U) {
    
#line 6501 
    rc = set_wep_tx_idx(local,(unsigned short)((int)((unsigned short)idx)),perm,1);
    
#line 6502 
    if (rc < 0) {
      
#line 6503 
      printk("\001",(char *)(& (local->dev)->name),idx,rc);
      
#line 6506 
      __retres = rc;
      
#line 6506 
      goto return_label;
    }
    else ;
    
#line 6508 
    set_key = (unsigned int)ext->key_len != 0U;
  }
  else ;
  
#line 6511 
  if (set_key != 0) {
    
#line 6513 
    memset((void *)(& key.key),0,13UL);
    
#line 6514 
    switch (alg) {
      int tmp_1;
      case 0: 
#line 6515 
      ;
      
#line 6516 
      key.len = (unsigned short)0U;
      
#line 6517 
      goto ldv_54088;
      case 1: 
#line 6518 
      ;
      
#line 6519 
      if ((unsigned int)ext->key_len > 5U) 
#line 6520 
                                           key.len = (unsigned short)13U;
      else 
        
#line 6521 
        if ((unsigned int)ext->key_len != 0U) 
#line 6522 
                                              key.len = (unsigned short)5U;
        else {
          
#line 6524 
          __retres = -22;
          
#line 6524 
          goto return_label;
        }
      {
        int tmp_0;
        
#line 6526 
        __u16 _min1 = ext->key_len;
        
#line 6526 
        u16 _min2 = key.len;
        
#line 6526 
        if ((int)_min1 < (int)_min2) 
#line 6526 
                                     tmp_0 = (int)_min1; else 
#line 6526 
                                                              tmp_0 = (int)_min2;
        
#line 6526 
        tmp_1 = tmp_0;
      }
      
#line 6526 
      key_len = tmp_1;
      
#line 6527 
      memcpy((void *)(& key.key),(void const *)(& ext->key),(unsigned long)key_len);
      
#line 6528 
      goto ldv_54088;
      default: 
#line 6529 
      ;
      
#line 6530 
      __retres = -22;
      
#line 6530 
      goto return_label;
    }
    ldv_54088: 
#line 6532 
    ;
    
#line 6532 
    if ((unsigned int)key.len == 0U) {
      
#line 6533 
      rc = set_wep_tx_idx(local,(unsigned short)((int)((unsigned short)idx)),perm,1);
      
#line 6534 
      if (rc < 0) {
        
#line 6535 
        printk("\001",(char *)(& (local->dev)->name),idx,rc);
        
#line 6538 
        __retres = rc;
        
#line 6538 
        goto return_label;
      }
      else ;
    }
    else {
      
#line 6541 
      rc = set_wep_key(local,(unsigned short)((int)((unsigned short)idx)),(char const *)(& key.key),(unsigned short)((int)key.len),perm,1);
      
#line 6542 
      if (rc < 0) {
        
#line 6543 
        printk("\001",(char *)(& (local->dev)->name),idx,rc);
        
#line 6546 
        __retres = rc;
        
#line 6546 
        goto return_label;
      }
      else ;
    }
  }
  else ;
  
#line 6552 
  if ((int)encoding->flags < 0) 
#line 6553 
                                local->config.authType = (unsigned short)1U; else ;
  
#line 6554 
  if (((int)encoding->flags & 16384) != 0) 
#line 6555 
                                           local->config.authType = (unsigned short)258U; else ;
  
#line 6556 
  if (((int)encoding->flags & 8192) != 0) 
#line 6557 
                                          local->config.authType = (unsigned short)257U; else ;
  
#line 6559 
  if ((int)local->config.authType != (int)currentAuthType) 
#line 6560 
                                                           set_bit(13L,(unsigned long volatile *)(& local->flags)); else ;
  
#line 6562 
  __retres = -115;
  return_label: 
#line 6562 
                return __retres;
}


#line 6570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_encodeext(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  int idx;
  int max_key_len;
  int wep_key_len;
  u8 buf[16U];
  
#line 6575 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6576 
  struct iw_point *encoding = & wrqu->encoding;
  
#line 6577 
  struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
  
#line 6581 
  if (local->wep_capable == 0) {
    
#line 6582 
    __retres = -95;
    
#line 6582 
    goto return_label;
  }
  else ;
  
#line 6584 
  readConfigRid(local,1);
  
#line 6586 
  max_key_len = (int)((unsigned int)encoding->length + 4294967256U);
  
#line 6587 
  if (max_key_len < 0) {
    
#line 6588 
    __retres = -22;
    
#line 6588 
    goto return_label;
  }
  else ;
  
#line 6590 
  idx = (int)encoding->flags & 255;
  
#line 6591 
  if (idx != 0) {
    int tmp;
    
#line 6592 
    tmp = valid_index(local,idx + -1);
    
#line 6592 
    if (tmp == 0) {
      
#line 6593 
      __retres = -22;
      
#line 6593 
      goto return_label;
    }
    else ;
    
#line 6594 
    idx -= 1;
  }
  else {
    
#line 6596 
    idx = get_wep_tx_idx(local);
    
#line 6597 
    if (idx < 0) 
#line 6598 
                 idx = 0; else ;
  }
  
#line 6601 
  encoding->flags = (unsigned short)((unsigned int)((unsigned short)idx) + 1U);
  
#line 6602 
  memset((void *)ext,0,40UL);
  
#line 6605 
  switch ((int)local->config.authType) {
    case 257: 
#line 6606 
    ;
    
#line 6607 
    encoding->flags = (unsigned short)1U;
    
#line 6608 
    goto ldv_54108;
    case 258: 
#line 6609 
    ;
    
#line 6610 
    encoding->flags = (unsigned short)1U;
    
#line 6611 
    goto ldv_54108;
    default: 
#line 6612 
    ;
    case 1: 
#line 6613 
    ;
    
#line 6614 
    encoding->flags = (unsigned short)32768U;
    
#line 6615 
    goto ldv_54108;
  }
  ldv_54108: 
#line 6618 
  ;
  
#line 6618 
  encoding->flags = (unsigned short)((unsigned int)encoding->flags | 2048U);
  
#line 6619 
  memset((void *)extra,0,16UL);
  
#line 6622 
  wep_key_len = get_wep_key(local,(unsigned short)((int)((unsigned short)idx)),(char *)(&(buf[0])),(unsigned short)16);
  
#line 6623 
  if (wep_key_len < 0) 
#line 6624 
                       ext->key_len = (unsigned short)0U;
  else {
    
#line 6626 
    ext->key_len = (unsigned short)wep_key_len;
    
#line 6627 
    memcpy((void *)extra,(void const *)(& buf),(unsigned long)ext->key_len);
  }
  
#line 6630 
  __retres = 0;
  return_label: 
#line 6630 
                return __retres;
}


#line 6638  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_auth(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6642 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6643 
  struct iw_param *param = & wrqu->param;
  
#line 6644 
  __le16 currentAuthType = local->config.authType;
  
#line 6646 
  switch ((int)param->flags & 4095) {
    case 0: 
#line 6647 
    ;
    case 1: 
#line 6648 
    ;
    case 2: 
#line 6649 
    ;
    case 3: 
#line 6650 
    ;
    case 8: 
#line 6651 
    ;
    case 10: 
#line 6652 
    ;
    
#line 6656 
    goto ldv_54127;
    case 5: 
#line 6658 
    ;
    
#line 6659 
    if (param->value != 0) {
      
#line 6661 
      if ((unsigned int)currentAuthType == 1U) 
#line 6662 
                                               local->config.authType = (unsigned short)257U; else ;
    }
    else 
#line 6664 
         local->config.authType = (unsigned short)1U;
    
#line 6668 
    if ((int)local->config.authType != (int)currentAuthType) 
#line 6669 
                                                             set_bit(13L,(unsigned long volatile *)(& local->flags)); else ;
    
#line 6670 
    goto ldv_54127;
    case 6: 
#line 6672 
    ;
    
#line 6676 
    if ((param->value & 2) != 0) 
#line 6677 
                                 local->config.authType = (unsigned short)258U;
    else 
      
#line 6678 
      if ((param->value & 1) != 0) 
#line 6679 
                                   local->config.authType = (unsigned short)257U;
      else {
        
#line 6681 
        __retres = -22;
        
#line 6681 
        goto return_label;
      }
    
#line 6684 
    if ((int)local->config.authType != (int)currentAuthType) 
#line 6685 
                                                             set_bit(13L,(unsigned long volatile *)(& local->flags)); else ;
    
#line 6686 
    goto ldv_54127;
    case 7: 
#line 6689 
    ;
    
#line 6691 
    if (param->value > 0) {
      
#line 6692 
      __retres = -95;
      
#line 6692 
      goto return_label;
    }
    else ;
    
#line 6693 
    goto ldv_54127;
    default: 
#line 6695 
    ;
    
#line 6696 
    __retres = -95;
    
#line 6696 
    goto return_label;
  }
  ldv_54127: 
#line 6698 
  ;
  
#line 6698 
  __retres = -115;
  return_label: 
#line 6698 
                return __retres;
}


#line 6706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_auth(struct net_device *dev, struct iw_request_info *info, union iwreq_data *wrqu, char *extra)
{
  int __retres;
  
#line 6710 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6711 
  struct iw_param *param = & wrqu->param;
  
#line 6712 
  __le16 currentAuthType = local->config.authType;
  
#line 6714 
  switch ((int)param->flags & 4095) {
    case 5: 
#line 6715 
    ;
    
#line 6716 
    switch ((int)currentAuthType) {
      case 258: 
#line 6717 
      ;
      case 257: 
#line 6718 
      ;
      
#line 6719 
      param->value = 1;
      
#line 6720 
      goto ldv_54144;
      default: 
#line 6721 
      ;
      
#line 6722 
      param->value = 0;
      
#line 6723 
      goto ldv_54144;
    }
    ldv_54144: 
#line 6725 
    ;
    
#line 6725 
    goto ldv_54146;
    case 6: 
#line 6727 
    ;
    
#line 6728 
    switch ((int)currentAuthType) {
      case 258: 
#line 6729 
      ;
      
#line 6730 
      param->value = 2;
      
#line 6731 
      goto ldv_54149;
      case 257: 
#line 6732 
      ;
      default: 
#line 6733 
      ;
      
#line 6734 
      param->value = 1;
      
#line 6735 
      goto ldv_54149;
    }
    ldv_54149: 
#line 6737 
    ;
    
#line 6737 
    goto ldv_54146;
    case 7: 
#line 6739 
    ;
    
#line 6740 
    param->value = 0;
    
#line 6741 
    goto ldv_54146;
    default: 
#line 6743 
    ;
    
#line 6744 
    __retres = -95;
    
#line 6744 
    goto return_label;
  }
  ldv_54146: 
#line 6746 
  ;
  
#line 6746 
  __retres = 0;
  return_label: 
#line 6746 
                return __retres;
}


#line 6754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_txpow(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  CapabilityRid cap_rid;
  int i;
  
#line 6759 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6762 
  int rc = -22;
  
#line 6763 
  __le16 v = (unsigned short)vwrq->value;
  
#line 6765 
  readCapabilityRid(local,& cap_rid,1);
  
#line 6767 
  if ((unsigned int)vwrq->disabled != 0U) {
    
#line 6768 
    set_bit(0L,(unsigned long volatile *)(& local->flags));
    
#line 6769 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    
#line 6770 
    __retres = -115;
    
#line 6770 
    goto return_label;
  }
  else ;
  
#line 6772 
  if ((unsigned int)vwrq->flags != 1U) {
    
#line 6773 
    __retres = -22;
    
#line 6773 
    goto return_label;
  }
  else ;
  
#line 6775 
  set_bit(0L,(unsigned long volatile *)(& local->flags));
  
#line 6776 
  i = 0;
  
#line 6776 
  goto ldv_54167;
  ldv_54166: 
#line 6777 
  ;
  
#line 6777 
  if ((int)cap_rid.txPowerLevels[i] == (int)v) {
    
#line 6778 
    readConfigRid(local,1);
    
#line 6779 
    local->config.txPower = v;
    
#line 6780 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    
#line 6781 
    rc = -115;
    
#line 6782 
    goto ldv_54165;
  }
  else ;
  
#line 6776 
  i += 1;
  ldv_54167: 
#line 6777 
  ;
  
#line 6776 
  if (i <= 7 && (unsigned int)cap_rid.txPowerLevels[i] != 0U) 
#line 6778 
                                                              goto ldv_54166; else 
                                                                    
#line 6781 
                                                                    goto ldv_54165;
  ldv_54165: 
#line 6782 
  ;
  
#line 6784 
  __retres = rc;
  return_label: 
#line 6784 
                return __retres;
}


#line 6791  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_txpow(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  int tmp;
  
#line 6796 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6798 
  readConfigRid(local,1);
  
#line 6799 
  vwrq->value = (int)local->config.txPower;
  
#line 6800 
  vwrq->fixed = (unsigned char)1U;
  
#line 6801 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& local->flags));
  
#line 6801 
  vwrq->disabled = (unsigned char)tmp;
  
#line 6802 
  vwrq->flags = (unsigned short)1U;
  
#line 6804 
  __retres = 0;
  
#line 6804 
  return __retres;
}


#line 6811  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_retry(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 6816 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6817 
  int rc = -22;
  
#line 6819 
  if ((unsigned int)vwrq->disabled != 0U) {
    
#line 6820 
    __retres = -22;
    
#line 6820 
    goto return_label;
  }
  else ;
  
#line 6822 
  readConfigRid(local,1);
  
#line 6823 
  if (((int)vwrq->flags & 4096) != 0) {
    
#line 6824 
    __le16 v = (unsigned short)vwrq->value;
    
#line 6825 
    if (((int)vwrq->flags & 32) != 0) 
#line 6826 
                                      local->config.longRetryLimit = v;
    else 
      
#line 6827 
      if (((int)vwrq->flags & 16) != 0) 
#line 6828 
                                        local->config.shortRetryLimit = v;
      else {
        
#line 6831 
        local->config.longRetryLimit = v;
        
#line 6832 
        local->config.shortRetryLimit = v;
      }
    
#line 6834 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    
#line 6835 
    rc = -115;
  }
  else ;
  
#line 6837 
  if (((int)vwrq->flags & 8192) != 0) {
    
#line 6838 
    local->config.txLifetime = (unsigned short)(vwrq->value / 1024);
    
#line 6839 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    
#line 6840 
    rc = -115;
  }
  else ;
  
#line 6842 
  __retres = rc;
  return_label: 
#line 6842 
                return __retres;
}


#line 6849  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_retry(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 6854 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6856 
  vwrq->disabled = (unsigned char)0U;
  
#line 6858 
  readConfigRid(local,1);
  
#line 6860 
  if (((int)vwrq->flags & 61440) == 8192) {
    
#line 6861 
    vwrq->flags = (unsigned short)8192U;
    
#line 6862 
    vwrq->value = (int)local->config.txLifetime * 1024;
  }
  else 
    
#line 6863 
    if (((int)vwrq->flags & 32) != 0) {
      
#line 6864 
      vwrq->flags = (unsigned short)4128U;
      
#line 6865 
      vwrq->value = (int)local->config.longRetryLimit;
    }
    else {
      
#line 6867 
      vwrq->flags = (unsigned short)4096U;
      
#line 6868 
      vwrq->value = (int)local->config.shortRetryLimit;
      
#line 6869 
      if ((int)local->config.shortRetryLimit != (int)local->config.longRetryLimit) 
        
#line 6870 
        vwrq->flags = (unsigned short)((unsigned int)vwrq->flags | 16U); else ;
    }
  
#line 6873 
  __retres = 0;
  
#line 6873 
  return __retres;
}


#line 6880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_range(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  CapabilityRid cap_rid;
  int i;
  int k;
  int tmp;
  int tmp_0;
  
#line 6885 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 6886 
  struct iw_range *range = (struct iw_range *)extra;
  
#line 6891 
  readCapabilityRid(local,& cap_rid,1);
  
#line 6893 
  dwrq->length = (unsigned short)568U;
  
#line 6894 
  memset((void *)range,0,568UL);
  
#line 6895 
  range->min_nwid = 0U;
  
#line 6896 
  range->max_nwid = 0U;
  
#line 6897 
  range->num_channels = (unsigned short)14U;
  
#line 6900 
  k = 0;
  
#line 6901 
  i = 0;
  
#line 6901 
  goto ldv_54203;
  ldv_54202: 
#line 6902 
  ;
  
#line 6902 
  range->freq[k].i = (unsigned char)((unsigned int)((unsigned char)i) + 1U);
  
#line 6903 
  tmp = ieee80211_channel_to_frequency(i + 1,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
  
#line 6903 
  range->freq[k].m = tmp * 100000;
  
#line 6905 
  tmp_0 = k;
  
#line 6905 
  k += 1;
  
#line 6905 
  range->freq[tmp_0].e = (short)1;
  
#line 6901 
  i += 1;
  ldv_54203: 
#line 6902 
  ;
  
#line 6901 
  if (i <= 13) 
#line 6903 
               goto ldv_54202; else 
#line 6906 
                                    goto ldv_54204;
  ldv_54204: 
#line 6907 
  ;
  
#line 6907 
  range->num_frequency = (unsigned char)k;
  
#line 6909 
  range->sensitivity = 65535;
  
#line 6912 
  if (local->rssi != (tdsRssiEntry *)0) 
#line 6913 
                                        range->max_qual.qual = (unsigned char)100U;
  else {
    int tmp_1;
    
#line 6915 
    tmp_1 = memcmp((void const *)(& cap_rid.prodName),(void const *)"350",3UL);
    
#line 6915 
    if (tmp_1 != 0) 
#line 6915 
                    range->max_qual.qual = (unsigned char)32U; else 
#line 6915 
                                                                    range->max_qual.qual = (unsigned char)160U;
  }
  
#line 6916 
  range->max_qual.level = (unsigned char)136U;
  
#line 6917 
  range->max_qual.noise = (unsigned char)136U;
  
#line 6922 
  if (local->rssi != (tdsRssiEntry *)0) {
    
#line 6923 
    range->avg_qual.qual = (unsigned char)50U;
    
#line 6924 
    range->avg_qual.level = (unsigned char)186U;
  }
  else {
    int tmp_2;
    
#line 6926 
    tmp_2 = memcmp((void const *)(& cap_rid.prodName),(void const *)"350",3UL);
    
#line 6926 
    if (tmp_2 != 0) 
#line 6926 
                    range->avg_qual.qual = (unsigned char)16U; else 
#line 6926 
                                                                    range->avg_qual.qual = (unsigned char)80U;
    
#line 6927 
    range->avg_qual.level = (unsigned char)176U;
  }
  
#line 6929 
  range->avg_qual.noise = (unsigned char)171U;
  
#line 6931 
  i = 0;
  
#line 6931 
  goto ldv_54207;
  ldv_54206: 
#line 6932 
  ;
  
#line 6932 
  range->bitrate[i] = (int)cap_rid.supportedRates[i] * 500000;
  
#line 6933 
  if (range->bitrate[i] == 0) 
#line 6934 
                              goto ldv_54205; else ;
  
#line 6931 
  i += 1;
  ldv_54207: 
#line 6932 
  ;
  
#line 6931 
  if (i <= 7) 
#line 6933 
              goto ldv_54206; else 
#line 6936 
                                   goto ldv_54205;
  ldv_54205: 
#line 6937 
  ;
  
#line 6936 
  range->num_bitrates = (unsigned char)i;
  
#line 6941 
  if (i > 2) 
#line 6942 
             range->throughput = 5000000U; else 
#line 6944 
                                                range->throughput = 1500000U;
  
#line 6946 
  range->min_rts = 0;
  
#line 6947 
  range->max_rts = 2312;
  
#line 6948 
  range->min_frag = 256;
  
#line 6949 
  range->max_frag = 2312;
  
#line 6951 
  if (((int)cap_rid.softCap & 2) != 0) {
    
#line 6953 
    range->encoding_size[0] = (unsigned short)5U;
    
#line 6955 
    if (((int)cap_rid.softCap & 256) != 0) {
      
#line 6956 
      range->encoding_size[1] = (unsigned short)13U;
      
#line 6957 
      range->num_encoding_sizes = (unsigned char)2U;
    }
    else 
#line 6959 
         range->num_encoding_sizes = (unsigned char)1U;
    
#line 6960 
    if (((int)cap_rid.softCap & 128) != 0) 
#line 6960 
                                           range->max_encoding_tokens = (unsigned char)4U; else 
                                                                    
#line 6960 
                                                                    range->max_encoding_tokens = (unsigned char)1U;
  }
  else {
    
#line 6963 
    range->num_encoding_sizes = (unsigned char)0U;
    
#line 6964 
    range->max_encoding_tokens = (unsigned char)0U;
  }
  
#line 6966 
  range->min_pmp = 0;
  
#line 6967 
  range->max_pmp = 5000000;
  
#line 6968 
  range->min_pmt = 0;
  
#line 6969 
  range->max_pmt = 67107840;
  
#line 6970 
  range->pmp_flags = (unsigned short)4096U;
  
#line 6971 
  range->pmt_flags = (unsigned short)8192U;
  
#line 6972 
  range->pm_capa = (unsigned short)13056U;
  
#line 6975 
  i = 0;
  
#line 6975 
  goto ldv_54210;
  ldv_54209: 
#line 6976 
  ;
  
#line 6976 
  range->txpower[i] = (int)cap_rid.txPowerLevels[i];
  
#line 6977 
  if (range->txpower[i] == 0) 
#line 6978 
                              goto ldv_54208; else ;
  
#line 6975 
  i += 1;
  ldv_54210: 
#line 6976 
  ;
  
#line 6975 
  if (i <= 7) 
#line 6977 
              goto ldv_54209; else 
#line 6980 
                                   goto ldv_54208;
  ldv_54208: 
#line 6981 
  ;
  
#line 6980 
  range->num_txpower = (unsigned char)i;
  
#line 6981 
  range->txpower_capa = (unsigned short)1U;
  
#line 6982 
  range->we_version_source = (unsigned char)19U;
  
#line 6983 
  range->we_version_compiled = (unsigned char)22U;
  
#line 6984 
  range->retry_capa = (unsigned short)12288U;
  
#line 6985 
  range->retry_flags = (unsigned short)4096U;
  
#line 6986 
  range->r_time_flags = (unsigned short)8192U;
  
#line 6987 
  range->min_retry = 1;
  
#line 6988 
  range->max_retry = 65535;
  
#line 6989 
  range->min_r_time = 1024;
  
#line 6990 
  range->max_r_time = 67107840;
  
#line 6993 
  range->event_capa[0] = 103284816U;
  
#line 6997 
  range->event_capa[1] = 1024U;
  
#line 6998 
  range->event_capa[4] = 1U;
  
#line 6999 
  __retres = 0;
  
#line 6999 
  return __retres;
}


#line 7006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_power(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 7011 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7013 
  readConfigRid(local,1);
  
#line 7014 
  if ((unsigned int)vwrq->disabled != 0U) {
    int tmp;
    
#line 7015 
    tmp = sniffing_mode(local);
    
#line 7015 
    if (tmp != 0) {
      
#line 7016 
      __retres = -22;
      
#line 7016 
      goto return_label;
    }
    else ;
    
#line 7017 
    local->config.powerSaveMode = (unsigned short)0U;
    
#line 7018 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65280U);
    
#line 7019 
    local->config.rmode = local->config.rmode;
    
#line 7020 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    
#line 7021 
    __retres = -115;
    
#line 7021 
    goto return_label;
  }
  else ;
  
#line 7023 
  if (((int)vwrq->flags & 61440) == 8192) {
    
#line 7024 
    local->config.fastListenDelay = (unsigned short)((vwrq->value + 500) / 1024);
    
#line 7025 
    local->config.powerSaveMode = (unsigned short)2U;
    
#line 7026 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
  }
  else 
    
#line 7027 
    if (((int)vwrq->flags & 61440) == 4096) {
      __le16 tmp_0;
      
#line 7028 
      tmp_0 = (unsigned short)((vwrq->value + 500) / 1024);
      
#line 7028 
      local->config.listenInterval = tmp_0;
      
#line 7028 
      local->config.fastListenInterval = tmp_0;
      
#line 7031 
      local->config.powerSaveMode = (unsigned short)2U;
      
#line 7032 
      set_bit(13L,(unsigned long volatile *)(& local->flags));
    }
    else ;
  
#line 7034 
  switch ((int)vwrq->flags & 3840) {
    int tmp_1;
    int tmp_2;
    case 256: 
#line 7035 
    ;
    
#line 7036 
    tmp_1 = sniffing_mode(local);
    
#line 7036 
    if (tmp_1 != 0) {
      
#line 7037 
      __retres = -22;
      
#line 7037 
      goto return_label;
    }
    else ;
    
#line 7038 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65280U);
    
#line 7039 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode | 2U);
    
#line 7040 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    
#line 7041 
    goto ldv_54219;
    case 768: 
#line 7042 
    ;
    
#line 7043 
    tmp_2 = sniffing_mode(local);
    
#line 7043 
    if (tmp_2 != 0) {
      
#line 7044 
      __retres = -22;
      
#line 7044 
      goto return_label;
    }
    else ;
    
#line 7045 
    local->config.rmode = (unsigned short)((unsigned int)local->config.rmode & 65280U);
    
#line 7046 
    local->config.rmode = local->config.rmode;
    
#line 7047 
    set_bit(13L,(unsigned long volatile *)(& local->flags));
    case 0: 
#line 7048 
    ;
    
#line 7050 
    goto ldv_54219;
    default: 
#line 7051 
    ;
    
#line 7052 
    __retres = -22;
    
#line 7052 
    goto return_label;
  }
  ldv_54219: 
#line 7056 
  ;
  
#line 7056 
  __retres = -115;
  return_label: 
#line 7056 
                return __retres;
}


#line 7063  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_power(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  __le16 mode;
  __u8 tmp;
  
#line 7068 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7071 
  readConfigRid(local,1);
  
#line 7072 
  mode = local->config.powerSaveMode;
  
#line 7073 
  tmp = (unsigned char)((unsigned int)mode == 0U);
  
#line 7073 
  vwrq->disabled = tmp;
  
#line 7073 
  if ((unsigned int)tmp != 0U) {
    
#line 7074 
    __retres = 0;
    
#line 7074 
    goto return_label;
  }
  else ;
  
#line 7075 
  if (((int)vwrq->flags & 61440) == 8192) {
    
#line 7076 
    vwrq->value = (int)local->config.fastListenDelay * 1024;
    
#line 7077 
    vwrq->flags = (unsigned short)8192U;
  }
  else {
    
#line 7079 
    vwrq->value = (int)local->config.fastListenInterval * 1024;
    
#line 7080 
    vwrq->flags = (unsigned short)4096U;
  }
  
#line 7082 
  if (((int)local->config.rmode & 255) == 2) 
#line 7083 
                                             vwrq->flags = (unsigned short)((unsigned int)vwrq->flags | 256U); else 
                                                                    
#line 7085 
                                                                    vwrq->flags = (unsigned short)((unsigned int)vwrq->flags | 768U);
  
#line 7087 
  __retres = 0;
  return_label: 
#line 7087 
                return __retres;
}


#line 7094  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_sens(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 7099 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7101 
  readConfigRid(local,1);
  
#line 7102 
  if ((unsigned int)vwrq->disabled == 0U) 
#line 7102 
                                          local->config.rssiThreshold = (unsigned short)vwrq->value; else 
                                                                    
#line 7102 
                                                                    local->config.rssiThreshold = (unsigned short)0U;
  
#line 7104 
  set_bit(13L,(unsigned long volatile *)(& local->flags));
  
#line 7106 
  __retres = -115;
  
#line 7106 
  return __retres;
}


#line 7113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_sens(struct net_device *dev, struct iw_request_info *info, struct iw_param *vwrq, char *extra)
{
  int __retres;
  
#line 7118 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7120 
  readConfigRid(local,1);
  
#line 7121 
  vwrq->value = (int)local->config.rssiThreshold;
  
#line 7122 
  vwrq->disabled = (unsigned char)(vwrq->value == 0);
  
#line 7123 
  vwrq->fixed = (unsigned char)1U;
  
#line 7125 
  __retres = 0;
  
#line 7125 
  return __retres;
}


#line 7133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_aplist(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  struct iw_quality *qual;
  BSSListRid BSSList;
  int i;
  int tmp_0;
  bool tmp;
  
#line 7138 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7139 
  struct sockaddr *address = (struct sockaddr *)extra;
  
#line 7143 
  tmp = capable(12);
  
#line 7143 
  if ((int)tmp != 0) 
#line 7143 
                     tmp_0 = 1; else 
#line 7143 
                                     tmp_0 = -1;
  
#line 7143 
  int loseSync = tmp_0;
  
#line 7145 
  qual = (struct iw_quality *)kmalloc(256UL,208U);
  
#line 7146 
  if (qual == (struct iw_quality *)0) {
    
#line 7147 
    __retres = -12;
    
#line 7147 
    goto return_label;
  }
  else ;
  
#line 7149 
  i = 0;
  
#line 7149 
  goto ldv_54260;
  ldv_54259: 
#line 7150 
  ;
  {
    u16 dBm;
    int tmp_2;
    
#line 7151 
    tmp_2 = readBSSListRid(local,loseSync,& BSSList);
    
#line 7151 
    if (tmp_2 != 0) 
#line 7152 
                    goto ldv_54258; else ;
    
#line 7153 
    loseSync = 0;
    
#line 7154 
    memcpy((void *)(& (address + i)->sa_data),(void const *)(& BSSList.bssid),6UL);
    
#line 7155 
    (address + i)->sa_family = (unsigned short)1U;
    
#line 7156 
    dBm = BSSList.dBm;
    
#line 7157 
    if (local->rssi != (tdsRssiEntry *)0) {
      
#line 7158 
      (qual + i)->level = (unsigned char)(- ((int)((unsigned char)dBm)));
      
#line 7159 
      (qual + i)->qual = airo_dbm_to_pct(local->rssi,(unsigned char)((int)((unsigned char)dBm)));
      
#line 7160 
      (qual + i)->updated = (unsigned char)11U;
    }
    else {
      
#line 7164 
      (qual + i)->level = (unsigned char)(((int)dBm + 321) / 2);
      
#line 7165 
      (qual + i)->qual = (unsigned char)0U;
      
#line 7166 
      (qual + i)->updated = (unsigned char)26U;
    }
    
#line 7170 
    (qual + i)->noise = local->wstats.qual.noise;
    
#line 7171 
    if ((unsigned int)BSSList.index == 65535U) 
#line 7172 
                                               goto ldv_54258; else ;
  }
  
#line 7149 
  i += 1;
  ldv_54260: 
#line 7150 
  ;
  
#line 7149 
  if (i <= 63) 
#line 7151 
               goto ldv_54259; else 
#line 7154 
                                    goto ldv_54258;
  ldv_54258: 
#line 7155 
  ;
  
#line 7174 
  if (i == 0) {
    StatusRid status_rid;
    int tmp_4;
    
#line 7176 
    readStatusRid(local,& status_rid,1);
    
#line 7177 
    i = 0;
    
#line 7177 
    goto ldv_54266;
    ldv_54265: 
#line 7178 
    ;
    
#line 7192 
    memcpy((void *)(& (address + i)->sa_data),(void const *)(& status_rid.bssid[i]),6UL);
    
#line 7194 
    (address + i)->sa_family = (unsigned short)1U;
    
#line 7191 
    i += 1;
    ldv_54266: 
#line 7192 
    ;
    {
      int tmp_3;
      
#line 7178 
      int _min1 = 64;
      
#line 7178 
      int _min2 = 4;
      
#line 7178 
      if (_min1 < _min2) 
#line 7178 
                         tmp_3 = _min1; else 
#line 7178 
                                             tmp_3 = _min2;
      
#line 7178 
      tmp_4 = tmp_3;
    }
    
#line 7177 
    ;
    
#line 7177 
    if (tmp_4 > i) {
      
#line 7178 
      if ((unsigned int)((((((int)status_rid.bssid[i][0] & (int)status_rid.bssid[i][1]) & (int)status_rid.bssid[i][2]) & (int)status_rid.bssid[i][3]) & (int)status_rid.bssid[i][4]) & (int)status_rid.bssid[i][5]) != 255U) {
        
#line 7184 
        if ((unsigned int)((((((int)status_rid.bssid[i][0] | (int)status_rid.bssid[i][1]) | (int)status_rid.bssid[i][2]) | (int)status_rid.bssid[i][3]) | (int)status_rid.bssid[i][4]) | (int)status_rid.bssid[i][5]) != 0U) 
          
#line 7186 
          goto ldv_54265; else 
#line 7189 
                               goto ldv_54267;
      }
      else 
#line 7189 
           goto ldv_54267;
    }
    else 
#line 7189 
         goto ldv_54267;
    ldv_54267: 
#line 7190 
    ;
  }
  else {
    
#line 7197 
    dwrq->flags = (unsigned short)1U;
    
#line 7198 
    memcpy((void *)(extra + (unsigned long)i * 16UL),(void const *)qual,(unsigned long)i * 4UL);
  }
  
#line 7201 
  dwrq->length = (unsigned short)i;
  
#line 7203 
  kfree((void const *)qual);
  
#line 7204 
  __retres = 0;
  return_label: 
#line 7204 
                return __retres;
}


#line 7211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_set_scan(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  Cmd cmd;
  Resp rsp;
  int tmp;
  
#line 7216 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7219 
  int wake = 0;
  
#line 7227 
  if ((ai->flags & 3UL) != 0UL) {
    
#line 7227 
    __retres = -100;
    
#line 7227 
    goto return_label;
  }
  else ;
  
#line 7229 
  tmp = down_interruptible(& ai->sem);
  
#line 7229 
  if (tmp != 0) {
    
#line 7230 
    __retres = -512;
    
#line 7230 
    goto return_label;
  }
  else ;
  
#line 7234 
  if (ai->scan_timeout != 0UL) 
#line 7235 
                               goto out; else ;
  
#line 7238 
  ai->scan_timeout = jiffies + 750UL;
  
#line 7239 
  memset((void *)(& cmd),0,8UL);
  
#line 7240 
  cmd.cmd = (unsigned short)259U;
  
#line 7241 
  issuecommand(ai,& cmd,& rsp);
  
#line 7242 
  wake = 1;
  out: 
#line 7244 
  ;
  
#line 7245 
  up(& ai->sem);
  
#line 7246 
  if (wake != 0) 
#line 7247 
                 __wake_up(& ai->thr_wait,1U,1,(void *)0); else ;
  
#line 7248 
  __retres = 0;
  return_label: 
#line 7248 
                return __retres;
}


#line 7256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
__inline static char *airo_translate_scan(struct net_device *dev, struct iw_request_info *info, char *current_ev, char *end_buf, BSSListRid *bss)
{
  struct iw_event iwe;
  __le16 capabilities;
  char *current_val;
  int i;
  char *buf;
  u16 dBm;
  int tmp;
  int tmp_0;
  int tmp_1;
  int tmp_8;
  
#line 7262 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7271 
  iwe.cmd = (unsigned short)35605U;
  
#line 7272 
  iwe.u.ap_addr.sa_family = (unsigned short)1U;
  
#line 7273 
  memcpy((void *)(& iwe.u.ap_addr.sa_data),(void const *)(& bss->bssid),6UL);
  
#line 7274 
  current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,24);
  
#line 7280 
  iwe.u.data.length = (unsigned short)bss->ssidLen;
  
#line 7281 
  if ((unsigned int)iwe.u.data.length > 32U) 
#line 7282 
                                             iwe.u.data.length = (unsigned short)32U; else ;
  
#line 7283 
  iwe.cmd = (unsigned short)35611U;
  
#line 7284 
  iwe.u.data.flags = (unsigned short)1U;
  
#line 7285 
  current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& bss->ssid));
  
#line 7289 
  iwe.cmd = (unsigned short)35591U;
  
#line 7290 
  capabilities = bss->cap;
  
#line 7291 
  if (((int)capabilities & 3) != 0) {
    
#line 7292 
    if (((int)capabilities & 1) != 0) 
#line 7293 
                                      iwe.u.mode = 3U; else 
#line 7295 
                                                            iwe.u.mode = 1U;
    
#line 7296 
    current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,12);
  }
  else ;
  
#line 7301 
  iwe.cmd = (unsigned short)35589U;
  
#line 7302 
  iwe.u.freq.m = (int)bss->dsChannel;
  
#line 7303 
  tmp = ieee80211_channel_to_frequency(iwe.u.freq.m,(enum ieee80211_band)IEEE80211_BAND_2GHZ);
  
#line 7303 
  iwe.u.freq.m = tmp * 100000;
  
#line 7305 
  iwe.u.freq.e = (short)1;
  
#line 7306 
  current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,16);
  
#line 7309 
  dBm = bss->dBm;
  
#line 7312 
  iwe.cmd = (unsigned short)35841U;
  
#line 7313 
  if (ai->rssi != (tdsRssiEntry *)0) {
    
#line 7314 
    iwe.u.qual.level = (unsigned char)(- ((int)((unsigned char)dBm)));
    
#line 7315 
    iwe.u.qual.qual = airo_dbm_to_pct(ai->rssi,(unsigned char)((int)((unsigned char)dBm)));
    
#line 7316 
    iwe.u.qual.updated = (unsigned char)11U;
  }
  else {
    
#line 7320 
    iwe.u.qual.level = (unsigned char)(((int)dBm + 321) / 2);
    
#line 7321 
    iwe.u.qual.qual = (unsigned char)0U;
    
#line 7322 
    iwe.u.qual.updated = (unsigned char)26U;
  }
  
#line 7326 
  iwe.u.qual.noise = ai->wstats.qual.noise;
  
#line 7327 
  current_ev = iwe_stream_add_event(info,current_ev,end_buf,& iwe,12);
  
#line 7331 
  iwe.cmd = (unsigned short)35627U;
  
#line 7332 
  if (((int)capabilities & 16) != 0) 
#line 7333 
                                     iwe.u.data.flags = (unsigned short)2048U; else 
                                                                    
#line 7335 
                                                                    iwe.u.data.flags = (unsigned short)32768U;
  
#line 7336 
  iwe.u.data.length = (unsigned short)0U;
  
#line 7337 
  current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)(& bss->ssid));
  
#line 7342 
  tmp_0 = iwe_stream_lcp_len(info);
  
#line 7342 
  current_val = current_ev + tmp_0;
  
#line 7344 
  iwe.cmd = (unsigned short)35617U;
  
#line 7346 
  iwe.u.bitrate.disabled = (unsigned char)0U;
  
#line 7346 
  iwe.u.bitrate.fixed = iwe.u.bitrate.disabled;
  
#line 7348 
  i = 0;
  
#line 7348 
  goto ldv_54295;
  ldv_54294: 
#line 7349 
  ;
  
#line 7350 
  if ((unsigned int)bss->rates[i] == 0U) 
#line 7351 
                                         goto ldv_54293; else ;
  
#line 7353 
  iwe.u.bitrate.value = ((int)bss->rates[i] & 127) * 500000;
  
#line 7355 
  current_val = iwe_stream_add_value(info,current_ev,current_val,end_buf,& iwe,16);
  
#line 7348 
  i += 1;
  ldv_54295: 
#line 7349 
  ;
  
#line 7348 
  if (i <= 7) 
#line 7350 
              goto ldv_54294; else 
#line 7353 
                                   goto ldv_54293;
  ldv_54293: 
#line 7354 
  ;
  
#line 7360 
  tmp_1 = iwe_stream_lcp_len(info);
  
#line 7360 
  ;
  
#line 7360 
  if ((long)current_val - (long)current_ev > (long)tmp_1) 
#line 7361 
                                                          current_ev = current_val; else ;
  
#line 7364 
  buf = (char *)kmalloc(30UL,208U);
  
#line 7365 
  if (buf != (char *)0) {
    size_t tmp_3;
    
#line 7366 
    iwe.cmd = (unsigned short)35842U;
    
#line 7367 
    sprintf(buf,"bcn_int=%d",(int)bss->beaconInterval);
    
#line 7368 
    tmp_3 = strlen((char const *)buf);
    
#line 7368 
    iwe.u.data.length = (unsigned short)tmp_3;
    
#line 7369 
    current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,buf);
    
#line 7371 
    kfree((void const *)buf);
  }
  else ;
  
#line 7375 
  tmp_8 = constant_test_bit(16L,(unsigned long const volatile *)(& ai->flags));
  
#line 7375 
  if (tmp_8 != 0) {
    
#line 7376 
    unsigned int num_null_ies = 0U;
    
#line 7377 
    u16 length = (unsigned short)624U;
    
#line 7378 
    u8 *ie = (u8 *)(& bss->extra.iep);
    
#line 7380 
    goto ldv_54312;
    ldv_54311: 
#line 7381 
    ;
    
#line 7381 
    if ((int)*(ie + 1U) + 2 > (int)length) 
#line 7383 
                                           goto ldv_54299; else ;
    
#line 7386 
    switch ((int)*ie) {
      int tmp_7;
      case 0: 
#line 7387 
      ;
      
#line 7390 
      if ((unsigned int)*(ie + 1U) == 0U) 
#line 7391 
                                          num_null_ies += 1U; else ;
      
#line 7392 
      goto ldv_54301;
      case 221: 
#line 7394 
      ;
      
#line 7395 
      if (((((unsigned int)*(ie + 1U) > 3U && (unsigned int)*(ie + 2U) == 0U) && (unsigned int)*(ie + 3U) == 80U) && (unsigned int)*(ie + 4U) == 242U) && (unsigned int)*(ie + 5U) == 1U) {
        int tmp_5;
        
#line 7400 
        iwe.cmd = (unsigned short)35845U;
        {
          int tmp_4;
          
#line 7402 
          int _min1 = (int)*(ie + 1U) + 2;
          
#line 7402 
          int _min2 = 64;
          
#line 7402 
          if (_min1 < _min2) 
#line 7402 
                             tmp_4 = _min1; else 
#line 7402 
                                                 tmp_4 = _min2;
          
#line 7402 
          tmp_5 = tmp_4;
        }
        
#line 7402 
        iwe.u.data.length = (unsigned short)tmp_5;
        
#line 7404 
        current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)ie);
      }
      else ;
      
#line 7408 
      goto ldv_54301;
      case 48: 
#line 7410 
      ;
      
#line 7411 
      iwe.cmd = (unsigned short)35845U;
      {
        int tmp_6;
        
#line 7413 
        int _min1_0 = (int)*(ie + 1U) + 2;
        
#line 7413 
        int _min2_0 = 64;
        
#line 7413 
        if (_min1_0 < _min2_0) 
#line 7413 
                               tmp_6 = _min1_0; else 
#line 7413 
                                                     tmp_6 = _min2_0;
        
#line 7413 
        tmp_7 = tmp_6;
      }
      
#line 7413 
      iwe.u.data.length = (unsigned short)tmp_7;
      
#line 7414 
      current_ev = iwe_stream_add_point(info,current_ev,end_buf,& iwe,(char *)ie);
      
#line 7417 
      goto ldv_54301;
      default: 
#line 7419 
      ;
      
#line 7420 
      goto ldv_54301;
    }
    ldv_54301: 
#line 7423 
    ;
    
#line 7423 
    length = (unsigned short)((unsigned int)((int)length - (int)((unsigned short)*(ie + 1U))) + 65534U);
    
#line 7424 
    ie += (int)*(ie + 1U) + 2;
    ldv_54312: 
#line 7425 
    ;
    
#line 7380 
    if ((unsigned int)length > 1U && num_null_ies <= 1U) 
#line 7382 
                                                         goto ldv_54311; else 
                                                                    
#line 7385 
                                                                    goto ldv_54299;
    ldv_54299: 
#line 7386 
    ;
  }
  else ;
  
#line 7427 
  return current_ev;
}


#line 7434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_get_scan(struct net_device *dev, struct iw_request_info *info, struct iw_point *dwrq, char *extra)
{
  int __retres;
  BSSListElement *net;
  int tmp;
  BSSListElement *tmp_0;
  BSSListElement *tmp_1;
  
#line 7439 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7441 
  int err = 0;
  
#line 7442 
  char *current_ev = extra;
  
#line 7445 
  if (ai->scan_timeout != 0UL) {
    
#line 7446 
    __retres = -11;
    
#line 7446 
    goto return_label;
  }
  else ;
  
#line 7448 
  tmp = down_interruptible(& ai->sem);
  
#line 7448 
  if (tmp != 0) {
    
#line 7449 
    __retres = -11;
    
#line 7449 
    goto return_label;
  }
  else ;
  {
    
#line 7451 
    struct list_head const *__mptr = (struct list_head const *)ai->network_list.next;
    
#line 7451 
    tmp_0 = (BSSListElement *)__mptr + 18446744073709550896U;
  }
  
#line 7451 
  net = tmp_0;
  
#line 7451 
  goto ldv_54329;
  ldv_54328: 
#line 7452 
  ;
  
#line 7453 
  current_ev = airo_translate_scan(dev,info,current_ev,extra + (int)dwrq->length,& net->bss);
  
#line 7458 
  if ((unsigned long)((long)(extra + (int)dwrq->length) - (long)current_ev) <= 24UL) {
    
#line 7460 
    err = -7;
    
#line 7461 
    goto out;
  }
  else ;
  {
    
#line 7451 
    struct list_head const *__mptr_0 = (struct list_head const *)net->list.next;
    
#line 7451 
    tmp_1 = (BSSListElement *)__mptr_0 + 18446744073709550896U;
  }
  
#line 7451 
  net = tmp_1;
  ldv_54329: 
#line 7453 
  ;
  
#line 7451 
  if (& net->list != & ai->network_list) 
#line 7453 
                                         goto ldv_54328; else 
#line 7456 
                                                              goto ldv_54330;
  ldv_54330: 
#line 7457 
  ;
  
#line 7466 
  dwrq->length = (unsigned short)((long)current_ev - (long)extra);
  
#line 7467 
  dwrq->flags = (unsigned short)0U;
  out: 
#line 7469 
  ;
  
#line 7470 
  up(& ai->sem);
  
#line 7471 
  __retres = err;
  return_label: 
#line 7471 
                return __retres;
}


#line 7478  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_config_commit(struct net_device *dev, struct iw_request_info *info, void *zwrq, char *extra)
{
  int __retres;
  int tmp;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  
#line 7483 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7485 
  tmp = constant_test_bit(13L,(unsigned long const volatile *)(& local->flags));
  
#line 7485 
  if (tmp == 0) {
    
#line 7486 
    __retres = 0;
    
#line 7486 
    goto return_label;
  }
  else ;
  
#line 7490 
  disable_MAC(local,1);
  
#line 7491 
  tmp_1 = constant_test_bit(14L,(unsigned long const volatile *)(& local->flags));
  
#line 7491 
  if (tmp_1 != 0) {
    APListRid APList_rid;
    SsidRid SSID_rid;
    int tmp_0;
    
#line 7495 
    readAPListRid(local,& APList_rid);
    
#line 7496 
    readSsidRid(local,& SSID_rid);
    
#line 7497 
    tmp_0 = constant_test_bit(11L,(unsigned long const volatile *)(& local->flags));
    
#line 7497 
    if (tmp_0 != 0) 
#line 7498 
                    setup_card(local,dev->dev_addr,1); else 
#line 7500 
                                                            reset_airo_card(dev);
    
#line 7501 
    disable_MAC(local,1);
    
#line 7502 
    writeSsidRid(local,& SSID_rid,1);
    
#line 7503 
    writeAPListRid(local,& APList_rid,1);
  }
  else ;
  
#line 7505 
  tmp_2 = down_interruptible(& local->sem);
  
#line 7505 
  if (tmp_2 != 0) {
    
#line 7506 
    __retres = -512;
    
#line 7506 
    goto return_label;
  }
  else ;
  
#line 7507 
  writeConfigRid(local,0);
  
#line 7508 
  enable_MAC(local,0);
  
#line 7509 
  tmp_3 = constant_test_bit(14L,(unsigned long const volatile *)(& local->flags));
  
#line 7509 
  if (tmp_3 != 0) 
#line 7510 
                  airo_set_promisc(local); else 
#line 7512 
                                                up(& local->sem);
  
#line 7514 
  __retres = 0;
  return_label: 
#line 7514 
                return __retres;
}


#line 7522  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct iw_priv_args const airo_private_args[2U] = {{.cmd = 35808U, .set_args = (unsigned short)6160U, .get_args = (unsigned short)6143U, .name = {(char)'a', (char)'i', (char)'r', (char)'o', (char)'i', (char)'o', (char)'c', (char)'t', (char)'l', (char)'\000'}}, {.cmd = 35809U, .set_args = (unsigned short)6160U, .get_args = (unsigned short)18433U, .name = {(char)'a', (char)'i', (char)'r', (char)'o', (char)'i', (char)'d', (char)'i', (char)'f', (char)'c', (char)'\000'}}};

#line 7530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static iw_handler airo_handler[55U] = {(int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_config_commit), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_name), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_freq), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_freq), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_mode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_mode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_sens), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_sens), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_range), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, & iw_handler_set_spy, & iw_handler_get_spy, & iw_handler_set_thrspy, & iw_handler_get_thrspy, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_wap), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_wap), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_aplist), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_scan), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_scan), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_essid), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_essid), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_nick), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_nick), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_rate), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_rate), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_rts), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_rts), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_frag), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_frag), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_txpow), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_txpow), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_retry), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_retry), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_encode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_encode), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_set_power), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_get_power), (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0, & airo_set_auth, & airo_get_auth, & airo_set_encodeext, & airo_get_encodeext, (int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0};

#line 7596  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static iw_handler airo_private_handler[1U] = {(int (*)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))0};

#line 7601  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct iw_handler_def const airo_handler_def = {.standard = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_handler), .num_standard = (unsigned short)55U, .num_private = (unsigned short)1U, .num_private_args = (unsigned short)2U, .private = (iw_handler (* const *)(struct net_device *, struct iw_request_info *, union iwreq_data *, char *))(& airo_private_handler), .private_args = (struct iw_priv_args const *)(& airo_private_args), .get_wireless_stats = & airo_get_wireless_stats};

#line 7625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int airo_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int __retres;
  
#line 7627 
  int rc = 0;
  
#line 7628 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7630 
  if (ai->power.event != 0) {
    
#line 7631 
    __retres = 0;
    
#line 7631 
    goto return_label;
  }
  else ;
  
#line 7633 
  switch (cmd) {
    case 35809: 
#line 7635 
    ;
    case 35313: 
#line 7637 
    ;
    {
      aironet_ioctl com;
      unsigned long tmp_0;
      
#line 7640 
      int val = 42330;
      
#line 7642 
      tmp_0 = copy_from_user((void *)(& com),(void const *)rq->ifr_ifru.ifru_data,16UL);
      
#line 7642 
      if (tmp_0 != 0UL) 
#line 7643 
                        rc = -14;
      else {
        unsigned long tmp;
        
#line 7644 
        tmp = copy_to_user((void *)com.data,(void const *)(& val),4UL);
        
#line 7644 
        if (tmp != 0UL) 
#line 7645 
                        rc = -14; else ;
      }
    }
    
#line 7647 
    goto ldv_54364;
    case 35808: 
#line 7649 
    ;
    case 35312: 
#line 7651 
    ;
    {
      aironet_ioctl com_0;
      unsigned long tmp_1;
      
#line 7658 
      tmp_1 = copy_from_user((void *)(& com_0),(void const *)rq->ifr_ifru.ifru_data,16UL);
      
#line 7658 
      if (tmp_1 != 0UL) {
        
#line 7659 
        rc = -14;
        
#line 7660 
        goto ldv_54364;
      }
      else ;
      
#line 7665 
      if ((unsigned int)com_0.command == 17U) {
        unsigned long tmp_2;
        
#line 7666 
        tmp_2 = copy_to_user((void *)com_0.data,(void const *)(& swversion),4UL);
        
#line 7666 
        if (tmp_2 != 0UL) 
#line 7667 
                          rc = -14; else 
#line 7669 
                                         rc = 0;
      }
      else 
        
#line 7671 
        if ((unsigned int)com_0.command <= 15U) 
#line 7672 
                                                rc = readrids(dev,& com_0);
        else 
          
#line 7673 
          if ((unsigned int)com_0.command + 65486U <= 14U) 
#line 7674 
                                                           rc = writerids(dev,& com_0);
          else 
            
#line 7675 
            if ((unsigned int)com_0.command + 65436U <= 5U) 
#line 7676 
                                                            rc = flashcard(dev,& com_0); else 
                                                                    
#line 7678 
                                                                    rc = -22;
    }
    
#line 7680 
    goto ldv_54364;
    default: 
#line 7684 
    ;
    
#line 7685 
    rc = -95;
  }
  ldv_54364: 
#line 7687 
  ;
  
#line 7687 
  __retres = rc;
  return_label: 
#line 7687 
                return __retres;
}


#line 7699  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static void airo_read_wireless_stats(struct airo_info *local)
{
  StatusRid status_rid;
  StatsRid stats_rid;
  CapabilityRid cap_rid;
  
#line 7704 
  __le32 *vals = (__le32 *)(& stats_rid.vals);
  
#line 7707 
  set_bit(8L,(unsigned long volatile *)(& local->jobs));
  
#line 7708 
  if (local->power.event != 0) {
    
#line 7709 
    up(& local->sem);
    
#line 7710 
    goto return_label;
  }
  else ;
  
#line 7712 
  readCapabilityRid(local,& cap_rid,0);
  
#line 7713 
  readStatusRid(local,& status_rid,0);
  
#line 7714 
  readStatsRid(local,& stats_rid,65384,0);
  
#line 7715 
  up(& local->sem);
  
#line 7718 
  local->wstats.status = status_rid.mode;
  
#line 7721 
  if (local->rssi != (tdsRssiEntry *)0) {
    
#line 7722 
    local->wstats.qual.level = airo_rssi_to_dbm(local->rssi,(unsigned char)((int)((unsigned char)status_rid.sigQuality)));
    
#line 7726 
    local->wstats.qual.qual = (unsigned char)status_rid.normalizedSignalStrength;
  }
  else {
    int tmp;
    
#line 7729 
    local->wstats.qual.level = (unsigned char)(((int)status_rid.normalizedSignalStrength + 321) / 2);
    
#line 7731 
    tmp = airo_get_quality(& status_rid,& cap_rid);
    
#line 7731 
    local->wstats.qual.qual = (unsigned char)tmp;
  }
  
#line 7733 
  if ((unsigned int)status_rid.len > 123U) {
    
#line 7734 
    local->wstats.qual.noise = (unsigned char)(- ((int)status_rid.noisedBm));
    
#line 7735 
    local->wstats.qual.updated = (unsigned char)15U;
  }
  else {
    
#line 7737 
    local->wstats.qual.noise = (unsigned char)0U;
    
#line 7738 
    local->wstats.qual.updated = (unsigned char)75U;
  }
  
#line 7743 
  local->wstats.discard.nwid = (*(vals + 56U) + *(vals + 57U)) + *(vals + 58U);
  
#line 7746 
  local->wstats.discard.code = *(vals + 6U);
  
#line 7747 
  local->wstats.discard.fragment = *(vals + 30U);
  
#line 7748 
  local->wstats.discard.retries = *(vals + 10U);
  
#line 7749 
  local->wstats.discard.misc = *(vals + 1U) + *(vals + 32U);
  
#line 7751 
  local->wstats.miss.beacon = *(vals + 34U);
  return_label: 
#line 7752 
                return;
}


#line 7754  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static struct iw_statistics *airo_get_wireless_stats(struct net_device *dev)
{
  struct iw_statistics *__retres;
  int tmp_0;
  
#line 7756 
  struct airo_info *local = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7758 
  tmp_0 = constant_test_bit(8L,(unsigned long const volatile *)(& local->jobs));
  
#line 7758 
  if (tmp_0 == 0) {
    int tmp;
    
#line 7760 
    tmp = down_trylock(& local->sem);
    
#line 7760 
    if (tmp != 0) {
      
#line 7761 
      set_bit(8L,(unsigned long volatile *)(& local->jobs));
      
#line 7762 
      __wake_up(& local->thr_wait,1U,1,(void *)0);
    }
    else 
#line 7764 
         airo_read_wireless_stats(local);
  }
  else ;
  
#line 7767 
  __retres = & local->wstats;
  
#line 7767 
  return __retres;
}


#line 7777  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int readrids(struct net_device *dev, aironet_ioctl *comp)
{
  int __retres;
  unsigned short ridcode;
  unsigned char *iobuf;
  int len;
  int tmp;
  unsigned long tmp_11;
  int tmp_10;
  
#line 7781 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7783 
  tmp = constant_test_bit(15L,(unsigned long const volatile *)(& ai->flags));
  
#line 7783 
  if (tmp != 0) {
    
#line 7784 
    __retres = -5;
    
#line 7784 
    goto return_label;
  }
  else ;
  
#line 7786 
  switch ((int)comp->command) {
    int tmp_0;
    int tmp_2;
    bool tmp_1;
    int tmp_4;
    bool tmp_3;
    unsigned long tmp_7;
    int tmp_6;
    case 0: 
#line 7788 
    ;
    
#line 7788 
    ridcode = (unsigned short)65280U;
    
#line 7788 
    goto ldv_54389;
    case 1: 
#line 7789 
    ;
    
#line 7789 
    ridcode = (unsigned short)65296U;
    
#line 7790 
    tmp_0 = constant_test_bit(13L,(unsigned long const volatile *)(& ai->flags));
    
#line 7790 
    if (tmp_0 != 0) {
      
#line 7791 
      disable_MAC(ai,1);
      
#line 7792 
      writeConfigRid(ai,1);
      
#line 7793 
      enable_MAC(ai,1);
    }
    else ;
    
#line 7795 
    goto ldv_54389;
    case 2: 
#line 7796 
    ;
    
#line 7796 
    ridcode = (unsigned short)65297U;
    
#line 7796 
    goto ldv_54389;
    case 3: 
#line 7797 
    ;
    
#line 7797 
    ridcode = (unsigned short)65298U;
    
#line 7797 
    goto ldv_54389;
    case 4: 
#line 7798 
    ;
    
#line 7798 
    ridcode = (unsigned short)65299U;
    
#line 7798 
    goto ldv_54389;
    case 5: 
#line 7799 
    ;
    
#line 7799 
    ridcode = (unsigned short)65300U;
    
#line 7799 
    goto ldv_54389;
    case 6: 
#line 7800 
    ;
    
#line 7800 
    ridcode = (unsigned short)65301U;
    
#line 7802 
    tmp_1 = capable(12);
    
#line 7802 
    if (tmp_1) 
#line 7802 
               tmp_2 = 0; else 
#line 7802 
                               tmp_2 = 1;
    
#line 7802 
    if (tmp_2) {
      
#line 7803 
      __retres = -1;
      
#line 7803 
      goto return_label;
    }
    else ;
    
#line 7804 
    goto ldv_54389;
    case 7: 
#line 7805 
    ;
    
#line 7805 
    ridcode = (unsigned short)65302U;
    
#line 7807 
    tmp_3 = capable(12);
    
#line 7807 
    if (tmp_3) 
#line 7807 
               tmp_4 = 0; else 
#line 7807 
                               tmp_4 = 1;
    
#line 7807 
    if (tmp_4) {
      
#line 7808 
      __retres = -1;
      
#line 7808 
      goto return_label;
    }
    else ;
    
#line 7809 
    goto ldv_54389;
    case 8: 
#line 7810 
    ;
    
#line 7810 
    ridcode = (unsigned short)65360U;
    
#line 7810 
    goto ldv_54389;
    case 10: 
#line 7811 
    ;
    
#line 7811 
    ridcode = (unsigned short)65385U;
    
#line 7811 
    goto ldv_54389;
    case 9: 
#line 7812 
    ;
    
#line 7812 
    ridcode = (unsigned short)65384U;
    
#line 7812 
    goto ldv_54389;
    case 12: 
#line 7813 
    ;
    {
      int tmp_5;
      
#line 7815 
      int _min1 = (int)comp->len;
      
#line 7815 
      int _min2 = 156;
      
#line 7815 
      if (_min1 < _min2) 
#line 7815 
                         tmp_5 = _min1; else 
#line 7815 
                                             tmp_5 = _min2;
      
#line 7815 
      tmp_6 = tmp_5;
    }
    
#line 7814 
    ;
    
#line 7814 
    ;
    
#line 7814 
    tmp_7 = copy_to_user((void *)comp->data,(void const *)(& ai->micstats),(unsigned long)tmp_6);
    
#line 7814 
    if (tmp_7 != 0UL) {
      
#line 7816 
      __retres = -14;
      
#line 7816 
      goto return_label;
    }
    else ;
    
#line 7817 
    __retres = 0;
    
#line 7817 
    goto return_label;
    case 15: 
#line 7818 
    ;
    
#line 7818 
    ridcode = comp->ridnum;
    
#line 7818 
    goto ldv_54389;
    default: 
#line 7819 
    ;
    
#line 7820 
    __retres = -22;
    
#line 7820 
    goto return_label;
  }
  ldv_54389: 
#line 7823 
  ;
  
#line 7823 
  iobuf = (unsigned char *)kmalloc(2048UL,208U);
  
#line 7823 
  if (iobuf == (unsigned char *)0U) {
    
#line 7824 
    __retres = -12;
    
#line 7824 
    goto return_label;
  }
  else ;
  
#line 7826 
  PC4500_readrid(ai,(unsigned short)((int)ridcode),(void *)iobuf,2048,1);
  
#line 7831 
  len = (int)comp->len;
  {
    int tmp_9;
    
#line 7833 
    int _min1_0 = len;
    
#line 7833 
    int _min2_0 = 2048;
    
#line 7833 
    if (_min1_0 < _min2_0) 
#line 7833 
                           tmp_9 = _min1_0; else 
#line 7833 
                                                 tmp_9 = _min2_0;
    
#line 7833 
    tmp_10 = tmp_9;
  }
  
#line 7833 
  ;
  
#line 7833 
  ;
  
#line 7833 
  tmp_11 = copy_to_user((void *)comp->data,(void const *)iobuf,(unsigned long)tmp_10);
  
#line 7833 
  if (tmp_11 != 0UL) {
    
#line 7834 
    kfree((void const *)iobuf);
    
#line 7835 
    __retres = -14;
    
#line 7835 
    goto return_label;
  }
  else ;
  
#line 7837 
  kfree((void const *)iobuf);
  
#line 7838 
  __retres = 0;
  return_label: 
#line 7838 
                return __retres;
}


#line 7845  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int writerids(struct net_device *dev, aironet_ioctl *comp)
{
  int __retres;
  int ridcode;
  int enabled;
  int (*writer)(struct airo_info *, u16 , void const *, int , int );
  unsigned char *iobuf;
  int tmp_0;
  bool tmp;
  int tmp_1;
  unsigned long tmp_8;
  int tmp_10;
  
#line 7846 
  struct airo_info *ai = (struct airo_info *)dev->__anonCompField_net_device_94.ml_priv;
  
#line 7853 
  tmp = capable(12);
  
#line 7853 
  if (tmp) 
#line 7853 
           tmp_0 = 0; else 
#line 7853 
                           tmp_0 = 1;
  
#line 7853 
  if (tmp_0) {
    
#line 7854 
    __retres = -1;
    
#line 7854 
    goto return_label;
  }
  else ;
  
#line 7856 
  tmp_1 = constant_test_bit(15L,(unsigned long const volatile *)(& ai->flags));
  
#line 7856 
  if (tmp_1 != 0) {
    
#line 7857 
    __retres = -5;
    
#line 7857 
    goto return_label;
  }
  else ;
  
#line 7859 
  ridcode = 0;
  
#line 7860 
  writer = & do_writerid;
  
#line 7862 
  switch ((int)comp->command) {
    int tmp_2;
    unsigned long tmp_6;
    int tmp_5;
    case 54: 
#line 7864 
    ;
    
#line 7864 
    ridcode = 65297;
    
#line 7864 
    goto ldv_54424;
    case 50: 
#line 7865 
    ;
    
#line 7865 
    ridcode = 65280;
    
#line 7865 
    goto ldv_54424;
    case 55: 
#line 7866 
    ;
    
#line 7866 
    ridcode = 65298;
    
#line 7866 
    goto ldv_54424;
    case 53: 
#line 7867 
    ;
    
#line 7867 
    ai->config.len = (unsigned short)0U;
    
#line 7868 
    set_bit(13L,(unsigned long volatile *)(& ai->flags));
    
#line 7869 
    ridcode = 65296;
    
#line 7869 
    goto ldv_54424;
    case 60: 
#line 7870 
    ;
    
#line 7870 
    ridcode = 65302;
    
#line 7870 
    goto ldv_54424;
    case 62: 
#line 7871 
    ;
    
#line 7871 
    ridcode = 65315;
    
#line 7871 
    goto ldv_54424;
    case 61: 
#line 7872 
    ;
    
#line 7872 
    ridcode = 65316;
    
#line 7872 
    goto ldv_54424;
    case 59: 
#line 7873 
    ;
    
#line 7873 
    ridcode = 65301;
    
#line 7873 
    writer = & PC4500_writerid;
    
#line 7874 
    goto ldv_54424;
    case 63: 
#line 7875 
    ;
    
#line 7875 
    ridcode = 65322;
    
#line 7875 
    goto ldv_54424;
    case 64: 
#line 7876 
    ;
    
#line 7876 
    ridcode = 65323;
    
#line 7876 
    goto ldv_54424;
    case 56: 
#line 7881 
    ;
    
#line 7882 
    tmp_2 = enable_MAC(ai,1);
    
#line 7882 
    if (tmp_2 != 0) {
      
#line 7883 
      __retres = -5;
      
#line 7883 
      goto return_label;
    }
    else ;
    
#line 7884 
    __retres = 0;
    
#line 7884 
    goto return_label;
    case 57: 
#line 7890 
    ;
    
#line 7891 
    disable_MAC(ai,1);
    
#line 7892 
    __retres = 0;
    
#line 7892 
    goto return_label;
    case 58: 
#line 7898 
    ;
    
#line 7899 
    iobuf = (unsigned char *)kmalloc(2048UL,208U);
    
#line 7899 
    if (iobuf == (unsigned char *)0U) {
      
#line 7900 
      __retres = -12;
      
#line 7900 
      goto return_label;
    }
    else ;
    
#line 7902 
    PC4500_readrid(ai,(unsigned short)65386,(void *)iobuf,2048,1);
    
#line 7904 
    enabled = (int)ai->micstats.enabled;
    
#line 7905 
    memset((void *)(& ai->micstats),0,156UL);
    
#line 7906 
    ai->micstats.enabled = (unsigned char)enabled;
    {
      int tmp_4;
      
#line 7909 
      int _min1 = (int)comp->len;
      
#line 7909 
      int _min2 = 2048;
      
#line 7909 
      if (_min1 < _min2) 
#line 7909 
                         tmp_4 = _min1; else 
#line 7909 
                                             tmp_4 = _min2;
      
#line 7909 
      tmp_5 = tmp_4;
    }
    
#line 7908 
    ;
    
#line 7908 
    ;
    
#line 7908 
    tmp_6 = copy_to_user((void *)comp->data,(void const *)iobuf,(unsigned long)tmp_5);
    
#line 7908 
    if (tmp_6 != 0UL) {
      
#line 7910 
      kfree((void const *)iobuf);
      
#line 7911 
      __retres = -14;
      
#line 7911 
      goto return_label;
    }
    else ;
    
#line 7913 
    kfree((void const *)iobuf);
    
#line 7914 
    __retres = 0;
    
#line 7914 
    goto return_label;
    default: 
#line 7916 
    ;
    
#line 7917 
    __retres = -95;
    
#line 7917 
    goto return_label;
  }
  ldv_54424: 
#line 7919 
  ;
  
#line 7919 
  if ((unsigned int)comp->len > 2048U) {
    
#line 7920 
    __retres = -22;
    
#line 7920 
    goto return_label;
  }
  else ;
  
#line 7922 
  iobuf = (unsigned char *)kmalloc(2048UL,208U);
  
#line 7922 
  if (iobuf == (unsigned char *)0U) {
    
#line 7923 
    __retres = -12;
    
#line 7923 
    goto return_label;
  }
  else ;
  
#line 7925 
  tmp_8 = copy_from_user((void *)iobuf,(void const *)comp->data,(unsigned long)comp->len);
  
#line 7925 
  if (tmp_8 != 0UL) {
    
#line 7926 
    kfree((void const *)iobuf);
    
#line 7927 
    __retres = -14;
    
#line 7927 
    goto return_label;
  }
  else ;
  
#line 7930 
  if ((unsigned int)comp->command == 53U) {
    int tmp_9;
    
#line 7931 
    ConfigRid *cfg = (ConfigRid *)iobuf;
    
#line 7933 
    tmp_9 = constant_test_bit(4L,(unsigned long const volatile *)(& ai->flags));
    
#line 7933 
    if (tmp_9 != 0) 
#line 7934 
                    cfg->opmode = (unsigned short)((unsigned int)cfg->opmode | 32768U); else ;
    
#line 7936 
    if (((int)cfg->opmode & 255) == 0) 
#line 7937 
                                       set_bit(3L,(unsigned long volatile *)(& ai->flags)); else 
                                                                    
#line 7939 
                                                                    set_bit(3L,(unsigned long volatile *)(& ai->flags));
  }
  else ;
  
#line 7942 
  tmp_10 = (*writer)(ai,(unsigned short)((int)((unsigned short)ridcode)),(void const *)iobuf,(int)comp->len,1);
  
#line 7942 
  if (tmp_10 != 0) {
    
#line 7943 
    kfree((void const *)iobuf);
    
#line 7944 
    __retres = -5;
    
#line 7944 
    goto return_label;
  }
  else ;
  
#line 7946 
  kfree((void const *)iobuf);
  
#line 7947 
  __retres = 0;
  return_label: 
#line 7947 
                return __retres;
}


#line 7959  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int flashcard(struct net_device *dev, aironet_ioctl *comp)
{
  int __retres;
  int z;
  int tmp_0;
  bool tmp;
  
#line 7963 
  tmp = capable(12);
  
#line 7963 
  if (tmp) 
#line 7963 
           tmp_0 = 0; else 
#line 7963 
                           tmp_0 = 1;
  
#line 7963 
  if (tmp_0) {
    
#line 7964 
    __retres = -1;
    
#line 7964 
    goto return_label;
  }
  else ;
  
#line 7966 
  switch ((int)comp->command) {
    int tmp_1;
    int tmp_4;
    unsigned long tmp_5;
    int tmp_6;
    unsigned long tmp_7;
    int tmp_8;
    unsigned long tmp_9;
    int tmp_10;
    case 100: 
#line 7968 
    ;
    
#line 7969 
    tmp_1 = cmdreset((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv);
    
#line 7969 
    __retres = tmp_1;
    
#line 7969 
    goto return_label;
    case 102: 
#line 7971 
    ;
    
#line 7972 
    if (((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv)->flash == (unsigned short *)0U) {
      unsigned short *tmp_2;
      
#line 7973 
      tmp_2 = (unsigned short *)kmalloc(32768UL,208U);
      
#line 7972 
      ((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv)->flash = tmp_2;
      
#line 7972 
      if (tmp_2 == (unsigned short *)0U) {
        
#line 7974 
        __retres = -12;
        
#line 7974 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 7975 
    tmp_4 = setflashmode((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv);
    
#line 7975 
    __retres = tmp_4;
    
#line 7975 
    goto return_label;
    case 101: 
#line 7977 
    ;
    
#line 7978 
    if ((unsigned int)comp->len != 4U) {
      
#line 7979 
      __retres = -22;
      
#line 7979 
      goto return_label;
    }
    else ;
    
#line 7980 
    tmp_5 = copy_from_user((void *)(& z),(void const *)comp->data,(unsigned long)comp->len);
    
#line 7980 
    if (tmp_5 != 0UL) {
      
#line 7981 
      __retres = -14;
      
#line 7981 
      goto return_label;
    }
    else ;
    
#line 7982 
    tmp_6 = flashgchar((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv,z,8000);
    
#line 7982 
    __retres = tmp_6;
    
#line 7982 
    goto return_label;
    case 103: 
#line 7984 
    ;
    
#line 7985 
    if ((unsigned int)comp->len != 4U) {
      
#line 7986 
      __retres = -22;
      
#line 7986 
      goto return_label;
    }
    else ;
    
#line 7987 
    tmp_7 = copy_from_user((void *)(& z),(void const *)comp->data,(unsigned long)comp->len);
    
#line 7987 
    if (tmp_7 != 0UL) {
      
#line 7988 
      __retres = -14;
      
#line 7988 
      goto return_label;
    }
    else ;
    
#line 7989 
    tmp_8 = flashpchar((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv,z,8000);
    
#line 7989 
    __retres = tmp_8;
    
#line 7989 
    goto return_label;
    case 104: 
#line 7991 
    ;
    
#line 7992 
    if (((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv)->flash == (unsigned short *)0U) {
      
#line 7993 
      __retres = -12;
      
#line 7993 
      goto return_label;
    }
    else ;
    
#line 7994 
    if ((unsigned int)comp->len > 32768U) {
      
#line 7995 
      __retres = -22;
      
#line 7995 
      goto return_label;
    }
    else ;
    
#line 7996 
    tmp_9 = copy_from_user((void *)((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv)->flash,(void const *)comp->data,(unsigned long)comp->len);
    
#line 7996 
    if (tmp_9 != 0UL) {
      
#line 7997 
      __retres = -14;
      
#line 7997 
      goto return_label;
    }
    else ;
    
#line 7999 
    flashputbuf((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv);
    
#line 8000 
    __retres = 0;
    
#line 8000 
    goto return_label;
    case 105: 
#line 8002 
    ;
    
#line 8003 
    tmp_10 = flashrestart((struct airo_info *)dev->__anonCompField_net_device_94.ml_priv,dev);
    
#line 8003 
    if (tmp_10 != 0) {
      
#line 8004 
      __retres = -5;
      
#line 8004 
      goto return_label;
    }
    else ;
    
#line 8005 
    __retres = 0;
    
#line 8005 
    goto return_label;
  }
  
#line 8007 
  __retres = -22;
  return_label: 
#line 8007 
                return __retres;
}


#line 8018  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int cmdreset(struct airo_info *ai)
{
  int __retres;
  int tmp;
  int tmp_0;
  
#line 8019 
  disable_MAC(ai,1);
  
#line 8021 
  tmp = waitbusy(ai);
  
#line 8021 
  if (tmp == 0) {
    
#line 8022 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 8023 
    __retres = -16;
    
#line 8023 
    goto return_label;
  }
  else ;
  
#line 8026 
  OUT4500(ai,(unsigned short)0,(unsigned short)4);
  
#line 8028 
  ssleep(1U);
  
#line 8030 
  tmp_0 = waitbusy(ai);
  
#line 8030 
  if (tmp_0 == 0) {
    
#line 8031 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 8032 
    __retres = -16;
    
#line 8032 
    goto return_label;
  }
  else ;
  
#line 8034 
  __retres = 0;
  return_label: 
#line 8034 
                return __retres;
}


#line 8042  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int setflashmode(struct airo_info *ai)
{
  int __retres;
  int tmp;
  
#line 8043 
  set_bit(15L,(unsigned long volatile *)(& ai->flags));
  
#line 8045 
  OUT4500(ai,(unsigned short)40,(unsigned short)32382);
  
#line 8046 
  OUT4500(ai,(unsigned short)42,(unsigned short)32382);
  
#line 8047 
  if (probe != 0) {
    
#line 8048 
    OUT4500(ai,(unsigned short)40,(unsigned short)32382);
    
#line 8049 
    OUT4500(ai,(unsigned short)0,(unsigned short)16);
  }
  else {
    
#line 8051 
    OUT4500(ai,(unsigned short)44,(unsigned short)32382);
    
#line 8052 
    OUT4500(ai,(unsigned short)46,(unsigned short)32382);
    
#line 8053 
    OUT4500(ai,(unsigned short)0,(unsigned short)0);
  }
  
#line 8055 
  msleep(500U);
  
#line 8057 
  tmp = waitbusy(ai);
  
#line 8057 
  if (tmp == 0) {
    
#line 8058 
    set_bit(15L,(unsigned long volatile *)(& ai->flags));
    
#line 8059 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 8060 
    __retres = -5;
    
#line 8060 
    goto return_label;
  }
  else ;
  
#line 8062 
  __retres = 0;
  return_label: 
#line 8062 
                return __retres;
}


#line 8069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int flashpchar(struct airo_info *ai, int byte, int dwelltime)
{
  int __retres;
  int echo;
  int waittime;
  unsigned short tmp;
  unsigned short tmp_0;
  int tmp_1;
  
#line 8073 
  byte |= 32768;
  
#line 8075 
  if (dwelltime == 0) 
#line 8076 
                      dwelltime = 200; else ;
  
#line 8078 
  waittime = dwelltime;
  
#line 8081 
  goto ldv_54467;
  ldv_54466: 
#line 8082 
  ;
  
#line 8082 
  __const_udelay(214750UL);
  
#line 8083 
  waittime += -50;
  ldv_54467: 
#line 8084 
  ;
  
#line 8081 
  tmp = IN4500(ai,(unsigned short)40);
  
#line 8081 
  if ((int)tmp < 0) {
    
#line 8081 
    if (waittime > 0) 
#line 8083 
                      goto ldv_54466; else 
#line 8086 
                                           goto ldv_54468;
  }
  else 
#line 8086 
       goto ldv_54468;
  ldv_54468: 
#line 8087 
  ;
  
#line 8087 
  if (waittime <= 0) {
    
#line 8088 
    printk("\001",(char *)(& (ai->dev)->name));
    
#line 8089 
    __retres = -16;
    
#line 8089 
    goto return_label;
  }
  else ;
  ldv_54469: 
#line 8091 
  ;
  
#line 8094 
  OUT4500(ai,(unsigned short)40,(unsigned short)((int)((unsigned short)byte)));
  
#line 8095 
  __const_udelay(214750UL);
  
#line 8096 
  dwelltime += -50;
  
#line 8097 
  tmp_0 = IN4500(ai,(unsigned short)42);
  
#line 8097 
  echo = (int)tmp_0;
  
#line 8098 
  if (dwelltime >= 0 && echo != byte) 
#line 8100 
                                      goto ldv_54469; else 
#line 8103 
                                                           goto ldv_54470;
  ldv_54470: 
#line 8104 
  ;
  
#line 8100 
  OUT4500(ai,(unsigned short)42,(unsigned short)0);
  
#line 8102 
  if (echo == byte) 
#line 8102 
                    tmp_1 = 0; else 
#line 8102 
                                    tmp_1 = -5;
  
#line 8102 
  __retres = tmp_1;
  return_label: 
#line 8102 
                return __retres;
}


#line 8109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int flashgchar(struct airo_info *ai, int matchbyte, int dwelltime)
{
  int __retres;
  int rchar;
  unsigned short tmp;
  
#line 8111 
  unsigned char rbyte = (unsigned char)0U;
  ldv_54484: 
#line 8112 
  ;
  
#line 8114 
  tmp = IN4500(ai,(unsigned short)42);
  
#line 8114 
  rchar = (int)tmp;
  
#line 8116 
  if (dwelltime != 0 && (rchar & 32768) == 0) {
    
#line 8117 
    dwelltime += -10;
    {
      
#line 8118 
      unsigned long __ms = 10UL;
      {
        unsigned long tmp_0;
        
#line 8118 
        goto ldv_54480;
        ldv_54479: 
#line 8119 
        ;
        
#line 8118 
        __const_udelay(4295000UL);
        ldv_54480: 
#line 8120 
        ;
        
#line 8118 
        tmp_0 = __ms;
        
#line 8118 
        __ms -= 1UL;
        
#line 8118 
        ;
        
#line 8118 
        if (tmp_0 != 0UL) 
#line 8120 
                          goto ldv_54479; else 
#line 8123 
                                               goto ldv_54481;
        ldv_54481: 
#line 8124 
        ;
      }
    }
    
#line 8119 
    goto ldv_54482;
  }
  else ;
  
#line 8121 
  rbyte = (unsigned char)rchar;
  
#line 8123 
  if ((int)rbyte == matchbyte && (rchar & 32768) != 0) {
    
#line 8124 
    OUT4500(ai,(unsigned short)42,(unsigned short)0);
    
#line 8125 
    __retres = 0;
    
#line 8125 
    goto return_label;
  }
  else ;
  
#line 8127 
  if (((unsigned int)rbyte + 127U <= 2U || (unsigned int)rbyte == 26U) || rchar == 65535) 
    
#line 8128 
    goto ldv_54483; else ;
  
#line 8129 
  OUT4500(ai,(unsigned short)42,(unsigned short)0);
  ldv_54482: 
#line 8130 
  ;
  
#line 8131 
  if (dwelltime > 0) 
#line 8133 
                     goto ldv_54484; else 
#line 8136 
                                          goto ldv_54483;
  ldv_54483: 
#line 8137 
  ;
  
#line 8132 
  __retres = -5;
  return_label: 
#line 8132 
                return __retres;
}


#line 8140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int flashputbuf(struct airo_info *ai)
{
  int __retres;
  int nwords;
  int tmp;
  
#line 8144 
  tmp = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 8144 
  if (tmp != 0) 
#line 8145 
                memcpy_toio((void volatile *)(ai->pciaux + 32768U),(void const *)ai->flash,32768UL);
  else {
    
#line 8147 
    OUT4500(ai,(unsigned short)58,(unsigned short)256);
    
#line 8148 
    OUT4500(ai,(unsigned short)60,(unsigned short)0);
    
#line 8150 
    nwords = 0;
    
#line 8150 
    goto ldv_54490;
    ldv_54489: 
#line 8151 
    ;
    
#line 8151 
    OUT4500(ai,(unsigned short)62,(unsigned short)((int)*(ai->flash + nwords)));
    
#line 8150 
    nwords += 1;
    ldv_54490: 
#line 8151 
    ;
    
#line 8150 
    if (nwords != 16384) 
#line 8152 
                         goto ldv_54489; else 
#line 8155 
                                              goto ldv_54491;
    ldv_54491: 
#line 8156 
    ;
  }
  
#line 8154 
  OUT4500(ai,(unsigned short)40,(unsigned short)32768);
  
#line 8156 
  __retres = 0;
  
#line 8156 
  return __retres;
}


#line 8162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/wireless/airo.c"
static int flashrestart(struct airo_info *ai, struct net_device *dev)
{
  int __retres;
  int i;
  int status;
  int tmp;
  u16 tmp_0;
  int tmp_2;
  
#line 8165 
  ssleep(1U);
  
#line 8166 
  set_bit(15L,(unsigned long volatile *)(& ai->flags));
  
#line 8167 
  tmp = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 8167 
  if (tmp != 0) {
    
#line 8168 
    status = mpi_init_descriptors(ai);
    
#line 8169 
    if (status != 0) {
      
#line 8170 
      __retres = status;
      
#line 8170 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 8172 
  tmp_0 = setup_card(ai,dev->dev_addr,1);
  
#line 8172 
  status = (int)tmp_0;
  
#line 8174 
  tmp_2 = constant_test_bit(11L,(unsigned long const volatile *)(& ai->flags));
  
#line 8174 
  if (tmp_2 == 0) {
    u16 tmp_1;
    
#line 8175 
    i = 0;
    
#line 8175 
    goto ldv_54499;
    ldv_54498: 
#line 8176 
    ;
    
#line 8176 
    tmp_1 = transmit_allocate(ai,2312,i > 2);
    
#line 8176 
    ai->fids[i] = (unsigned int)tmp_1;
    
#line 8175 
    i += 1;
    ldv_54499: 
#line 8176 
    ;
    
#line 8175 
    if (i <= 5) 
#line 8177 
                goto ldv_54498; else 
#line 8180 
                                     goto ldv_54500;
    ldv_54500: 
#line 8181 
    ;
  }
  else ;
  
#line 8180 
  ssleep(1U);
  
#line 8181 
  __retres = status;
  return_label: 
#line 8181 
                return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int (*ldv_emg_alias_eth_validate_addr_5)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
struct pci_driver *ldv_emg_alias_airo_driver_2 = & airo_driver;

#line 60 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 61 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 62 
struct task_struct *ldv_emg_kthread_create_on_node(int (*arg0)(void *), void *arg1, int arg2, char *arg3 , ...);


#line 63 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 64 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 65 
struct net_device *ldv_emg_alloc_netdev_mqs(int arg0, char *arg1, unsigned char arg2, void (*arg3)(struct net_device *), unsigned int arg4, unsigned int arg5);


#line 66 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 67 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 68 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_ioctl_4(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 73 
  tmp = airo_ioctl(arg0,arg1,arg2);
  
#line 73 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
void ldv_emg_wrapper_airo_set_multicast_list_8(struct net_device *arg0)
{
  
#line 78 
  airo_set_multicast_list(arg0);
  
#line 79 
  return;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
enum netdev_tx ldv_emg_wrapper_airo_start_xmit_6(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 83 
  tmp = airo_start_xmit(arg0,arg1);
  
#line 83 
  return tmp;
}


#line 87  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
enum netdev_tx ldv_emg_wrapper_mpi_start_xmit_6(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 88 
  tmp = mpi_start_xmit(arg0,arg1);
  
#line 88 
  return tmp;
}


#line 92  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_pci_resume_5(struct pci_dev *arg0)
{
  int tmp;
  
#line 93 
  tmp = airo_pci_resume(arg0);
  
#line 93 
  return tmp;
}


#line 97  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_pci_suspend_3(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 98 
  tmp = airo_pci_suspend(arg0,arg1);
  
#line 98 
  return tmp;
}


#line 102  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_airo_init_module(void)
{
  int tmp;
  
#line 103 
  tmp = airo_init_module();
  
#line 103 
  return tmp;
}


#line 106  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
void ldv_emg_wrapper_airo_pci_remove_4(struct pci_dev *arg0)
{
  
#line 107 
  airo_pci_remove(arg0);
  
#line 108 
  return;
}


#line 111  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
enum irqreturn ldv_emg_wrapper_airo_interrupt_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 112 
  tmp = airo_interrupt(arg0,arg1);
  
#line 112 
  return tmp;
}


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
void ldv_emg_airo_cleanup_module(void)
{
  
#line 117 
  airo_cleanup_module();
  
#line 118 
  return;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_change_mtu_3(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 121 
  tmp = airo_change_mtu(arg0,arg1);
  
#line 121 
  return tmp;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_thread_2(void *arg0)
{
  int tmp;
  
#line 126 
  tmp = airo_thread(arg0);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
struct net_device_stats *ldv_emg_wrapper_airo_get_stats_2(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 131 
  tmp = airo_get_stats(arg0);
  
#line 131 
  return tmp;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
void ldv_emg_wrapper_wifi_setup_2(struct net_device *arg0)
{
  
#line 136 
  wifi_setup(arg0);
  
#line 137 
  return;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_pci_probe_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 141 
  tmp = airo_pci_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 141 
  return tmp;
}


#line 145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 146 
  tmp = airo_open(arg0);
  
#line 146 
  return tmp;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 151 
  tmp = airo_close(arg0);
  
#line 151 
  return tmp;
}


#line 155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
int ldv_emg_wrapper_airo_set_mac_address_7(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 156 
  tmp = airo_set_mac_address(arg0,arg1);
  
#line 156 
  return tmp;
}


#line 168  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 171 
  tmp = ldv_ptr_err(ptr);
  
#line 171 
  return tmp;
}


#line 175  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 179 
  ret = ldv_is_err(ptr);
  
#line 180 
  __retres = (_Bool)(ret != 0L);
  
#line 180 
  return __retres;
}


#line 615  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 618 
  tmp = ldv_kmalloc(size,flags);
  
#line 618 
  return tmp;
}


#line 629  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 632 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 632 
  return tmp;
}


#line 636  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 639 
  tmp = ldv_kzalloc(size,flags);
  
#line 639 
  return tmp;
}


#line 831  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static struct task_struct *ldv_kthread_create_on_node_72(int (*ldv_func_arg1)(void *), void *ldv_func_arg2, int ldv_func_arg3, char const *ldv_func_arg4 , ...)
{
  char *ldv_func_arg5;
  struct task_struct *tmp;
  
#line 835 
  __builtin_va_start((__builtin_va_list)((__va_list_tag *)ldv_func_arg5));
  
#line 838 
  tmp = ldv_emg_kthread_create_on_node(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3,(char *)ldv_func_arg4);
  
#line 838 
  return tmp;
}


#line 842  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static int ldv_request_irq_73(unsigned int irq_0, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 846 
  tmp = ldv_emg_request_irq(irq_0,handler,flags,(char *)name,dev);
  
#line 846 
  return tmp;
}


#line 850  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 854 
  ldv_spin_model_lock((char *)"aux_lock_of_airo_info");
  
#line 856 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 857 
  return;
}


#line 860  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 864 
  ldv_spin_model_unlock((char *)"aux_lock_of_airo_info");
  
#line 866 
  spin_unlock_irqrestore(lock,flags);
  
#line 867 
  return;
}


#line 870  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_free_irq_76(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 874 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 875 
  return;
}


#line 878  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_unregister_netdev_77(struct net_device *ldv_func_arg1)
{
  
#line 882 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 883 
  return;
}


#line 886  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_unregister_netdev_78(struct net_device *ldv_func_arg1)
{
  
#line 890 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 891 
  return;
}


#line 894  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_free_netdev_79(struct net_device *ldv_func_arg1)
{
  
#line 898 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 899 
  return;
}


#line 902  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_free_netdev_80(struct net_device *ldv_func_arg1)
{
  
#line 906 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 907 
  return;
}


#line 910  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static struct net_device *ldv_alloc_netdev_mqs_81(int ldv_func_arg1, char const *ldv_func_arg2, unsigned char ldv_func_arg3, void (*ldv_func_arg4)(struct net_device *), unsigned int ldv_func_arg5, unsigned int ldv_func_arg6)
{
  struct net_device *tmp;
  
#line 914 
  tmp = ldv_emg_alloc_netdev_mqs(ldv_func_arg1,(char *)ldv_func_arg2,(unsigned char)((int)ldv_func_arg3),ldv_func_arg4,ldv_func_arg5,ldv_func_arg6);
  
#line 914 
  return tmp;
}


#line 918  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static int ldv_register_netdev_82(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 922 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 922 
  return tmp;
}


#line 926  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_free_netdev_83(struct net_device *ldv_func_arg1)
{
  
#line 930 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 931 
  return;
}


#line 934  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static struct net_device *ldv_alloc_netdev_mqs_84(int ldv_func_arg1, char const *ldv_func_arg2, unsigned char ldv_func_arg3, void (*ldv_func_arg4)(struct net_device *), unsigned int ldv_func_arg5, unsigned int ldv_func_arg6)
{
  struct net_device *tmp;
  
#line 938 
  tmp = ldv_emg_alloc_netdev_mqs(ldv_func_arg1,(char *)ldv_func_arg2,(unsigned char)((int)ldv_func_arg3),ldv_func_arg4,ldv_func_arg5,ldv_func_arg6);
  
#line 938 
  return tmp;
}


#line 942  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static int ldv_register_netdev_85(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 946 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 946 
  return tmp;
}


#line 950  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_unregister_netdev_86(struct net_device *ldv_func_arg1)
{
  
#line 954 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 955 
  return;
}


#line 958  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_free_netdev_87(struct net_device *ldv_func_arg1)
{
  
#line 962 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 963 
  return;
}


#line 966  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_unregister_netdev_88(struct net_device *ldv_func_arg1)
{
  
#line 970 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 971 
  return;
}


#line 974  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_free_netdev_89(struct net_device *ldv_func_arg1)
{
  
#line 978 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 979 
  return;
}


#line 982  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv___ldv_spin_lock_90(spinlock_t *ldv_func_arg1)
{
  
#line 986 
  ldv_spin_model_lock((char *)"aux_lock_of_airo_info");
  
#line 988 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 989 
  return;
}


#line 992  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_spin_unlock_irqrestore_91(spinlock_t *lock, unsigned long flags)
{
  
#line 996 
  ldv_spin_model_unlock((char *)"aux_lock_of_airo_info");
  
#line 998 
  spin_unlock_irqrestore(lock,flags);
  
#line 999 
  return;
}


#line 1002  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_spin_unlock_irqrestore_92(spinlock_t *lock, unsigned long flags)
{
  
#line 1006 
  ldv_spin_model_unlock((char *)"aux_lock_of_airo_info");
  
#line 1008 
  spin_unlock_irqrestore(lock,flags);
  
#line 1009 
  return;
}


#line 1012  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv___ldv_spin_lock_93(spinlock_t *ldv_func_arg1)
{
  
#line 1016 
  ldv_spin_model_lock((char *)"aux_lock_of_airo_info");
  
#line 1018 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1019 
  return;
}


#line 1022  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_spin_unlock_irqrestore_94(spinlock_t *lock, unsigned long flags)
{
  
#line 1026 
  ldv_spin_model_unlock((char *)"aux_lock_of_airo_info");
  
#line 1028 
  spin_unlock_irqrestore(lock,flags);
  
#line 1029 
  return;
}


#line 1032  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static int ldv___pci_register_driver_95(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1036 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1036 
  return tmp;
}


#line 1040  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/weaver/.tmp_airo.c.aux"
static void ldv_pci_unregister_driver_96(struct pci_driver *ldv_func_arg1)
{
  
#line 1044 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1045 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_12(void *arg0);


#line 63 
void ldv_dispatch_register_9_4(struct net_device *arg0);


#line 65 
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0);


#line 66 
int main(void);


#line 67 
void *ldv_pci_scenario_13(void *arg0);


#line 68 
void ldv_dispatch_deregister_4_1(struct net_device *arg0);


#line 70 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 71 
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 75 
void *ldv_interrupt_scenario_11(void *arg0);


#line 77 
void ldv_dispatch_register_6_3(struct pci_driver *arg0);


#line 79 
void *ldv_initialization_1(void *arg0);


#line 83  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_12;

#line 84  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_11;

#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_12(void *arg0)
{
  void *__retres;
  int ldv_12_ldv_param_1_2;
  struct ifreq *ldv_12_ldv_param_1_3;
  int ldv_12_ldv_param_2_4;
  struct net_device *ldv_12_container;
  void *ldv_12_ldv_param_1_6;
  struct sk_buff *ldv_12_ldv_param_0_5;
  int tmp;
  
#line 99 
  struct ldv_struct_random_allocationless_scenario_12 *data = (struct ldv_struct_random_allocationless_scenario_12 *)arg0;
  
#line 104 
  if (data != (struct ldv_struct_random_allocationless_scenario_12 *)0) {
    
#line 105 
    ldv_12_container = data->arg0;
    
#line 106 
    ldv_free((void *)data);
  }
  else ;
  
#line 114 
  goto ldv_call_12;
  
#line 116 
  __retres = (void *)0;
  
#line 116 
  goto return_label;
  ldv_call_12: 
#line 119 
  ;
  
#line 122 
  tmp = ldv_undef_int();
  
#line 122 
  switch (tmp) {
    case 1: 
#line 123 
    ;
    
#line 126 
    ldv_emg_wrapper_airo_get_stats_2(ldv_12_container);
    
#line 133 
    goto ldv_call_12;
    case 2: 
#line 136 
    ;
    
#line 139 
    ldv_emg_wrapper_airo_set_multicast_list_8(ldv_12_container);
    
#line 146 
    goto ldv_call_12;
    case 3: 
#line 149 
    ;
    
#line 151 
    ldv_12_ldv_param_1_6 = ldv_xmalloc_unknown_size(0UL);
    
#line 156 
    ldv_emg_wrapper_airo_set_mac_address_7(ldv_12_container,ldv_12_ldv_param_1_6);
    
#line 160 
    ldv_free(ldv_12_ldv_param_1_6);
    
#line 167 
    goto ldv_call_12;
    case 4: 
#line 170 
    ;
    
#line 172 
    ldv_12_ldv_param_0_5 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
    
#line 177 
    ldv_emg_wrapper_airo_start_xmit_6(ldv_12_ldv_param_0_5,ldv_12_container);
    
#line 181 
    ldv_free((void *)ldv_12_ldv_param_0_5);
    
#line 188 
    goto ldv_call_12;
    case 5: 
#line 191 
    ;
    
#line 194 
    (*ldv_emg_alias_eth_validate_addr_5)(ldv_12_container);
    
#line 201 
    goto ldv_call_12;
    case 6: 
#line 204 
    ;
    
#line 206 
    ldv_12_ldv_param_1_3 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
    
#line 211 
    ldv_emg_wrapper_airo_ioctl_4(ldv_12_container,ldv_12_ldv_param_1_3,ldv_12_ldv_param_2_4);
    
#line 215 
    ldv_free((void *)ldv_12_ldv_param_1_3);
    
#line 222 
    goto ldv_call_12;
    case 7: 
#line 225 
    ;
    
#line 231 
    ldv_emg_wrapper_airo_change_mtu_3(ldv_12_container,ldv_12_ldv_param_1_2);
    
#line 241 
    goto ldv_call_12;
    case 8: 
#line 244 
    ;
    
#line 250 
    __retres = (void *)0;
    
#line 250 
    goto return_label;
    default: 
#line 253 
    ;
    
#line 253 
    __VERIFIER_assume(0);
  }
  
#line 256 
  __retres = (void *)0;
  return_label: 
#line 256 
                return __retres;
}


#line 261  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_4_netdev;
  
#line 267 
  ldv_4_netdev = arg0;
  
#line 272 
  ldv_emg_wrapper_airo_close_2(ldv_4_netdev);
  
#line 276 
  ldv_dispatch_deregister_4_1(ldv_4_netdev);
  
#line 280 
  goto return_label;
  return_label: 
#line 282 
                return;
}


#line 287  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_9_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_12 *cf_arg_12;
  int tmp;
  
#line 290 
  tmp = ldv_undef_int();
  
#line 290 
  switch (tmp) {
    case 0: 
#line 291 
    ;
    
#line 292 
    cf_arg_12 = (struct ldv_struct_random_allocationless_scenario_12 *)ldv_xmalloc(16UL);
    
#line 293 
    cf_arg_12->arg0 = arg0;
    
#line 294 
    ret = pthread_create(& ldv_thread_12,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_12,(void *)cf_arg_12);
    
#line 295 
    __VERIFIER_assume(ret == 0);
    
#line 296 
    goto ldv_44700;
    default: 
#line 298 
    ;
    
#line 298 
    __VERIFIER_assume(0);
  }
  ldv_44700: 
#line 299 
  ;
  
#line 300 
  return;
}


#line 304  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 307 
  struct pci_driver *ldv_6_pci_driver = ldv_emg_alias_airo_driver_2;
  
#line 311 
  tmp_0 = ldv_undef_int();
  
#line 311 
  if (tmp_0 != 0) {
    
#line 313 
    ldv_6_pci_driver = arg0;
    
#line 317 
    ldv_dispatch_register_6_3(ldv_6_pci_driver);
    
#line 321 
    __retres = 0;
    
#line 321 
    goto return_label;
  }
  else {
    int tmp;
    
#line 328 
    tmp = ldv_undef_int_negative();
    
#line 328 
    __retres = tmp;
    
#line 328 
    goto return_label;
  }
  return_label: 
#line 311 
                return __retres;
}


#line 338  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_8_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_13 *cf_arg_13;
  int tmp;
  
#line 341 
  tmp = ldv_undef_int();
  
#line 341 
  switch (tmp) {
    case 0: 
#line 342 
    ;
    
#line 343 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 344 
    __VERIFIER_assume(ret == 0);
    
#line 345 
    goto ldv_44714;
    default: 
#line 347 
    ;
    
#line 347 
    __VERIFIER_assume(0);
  }
  ldv_44714: 
#line 348 
  ;
  
#line 349 
  return;
}


#line 353  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 356 
  ldv_initialize();
  
#line 359 
  ldv_initialization_1((void *)0);
  
#line 361 
  __retres = 0;
  
#line 361 
  return __retres;
}


#line 366  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_13(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_13_resource_1;
  struct pci_device_id *ldv_13_ldv_param_1_2;
  struct pm_message ldv_13_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 371 
  struct pci_driver *ldv_13_container = ldv_emg_alias_airo_driver_2;
  
#line 372 
  int ldv_13_ret = ldv_undef_int();
  
#line 375 
  struct ldv_struct_pci_scenario_13 *data = (struct ldv_struct_pci_scenario_13 *)arg0;
  
#line 379 
  ldv_13_ret = ldv_undef_int();
  
#line 382 
  if (data != (struct ldv_struct_pci_scenario_13 *)0) {
    
#line 383 
    ldv_13_container = data->arg0;
    
#line 384 
    ldv_free((void *)data);
  }
  else ;
  
#line 395 
  goto ldv_main_13;
  
#line 397 
  __retres = (void *)0;
  
#line 397 
  goto return_label;
  ldv_main_13: 
#line 400 
  ;
  
#line 403 
  tmp_2 = ldv_undef_int();
  
#line 403 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 405 
    ldv_13_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 410 
    ldv_pre_probe();
    
#line 412 
    ldv_13_ret = ldv_emg_wrapper_airo_pci_probe_2(ldv_13_resource_1,ldv_13_ldv_param_1_2);
    
#line 414 
    ldv_13_ret = ldv_post_probe(ldv_13_ret);
    
#line 418 
    ldv_free((void *)ldv_13_ldv_param_1_2);
    
#line 421 
    tmp_1 = ldv_undef_int();
    
#line 421 
    if (tmp_1 != 0) {
      
#line 423 
      __VERIFIER_assume(ldv_13_ret == 0);
      
#line 430 
      goto ldv_call_13;
    }
    else {
      
#line 434 
      __VERIFIER_assume(ldv_13_ret != 0);
      
#line 441 
      goto ldv_main_13;
    }
  }
  else {
    
#line 453 
    __retres = (void *)0;
    
#line 453 
    goto return_label;
  }
  
#line 456 
  __retres = (void *)0;
  
#line 456 
  goto return_label;
  ldv_call_13: 
#line 459 
  ;
  
#line 462 
  tmp_3 = ldv_undef_int();
  
#line 462 
  switch (tmp_3) {
    case 1: 
#line 463 
    ;
    
#line 472 
    goto ldv_call_13;
    case 2: 
#line 475 
    ;
    
#line 478 
    ldv_13_ret = ldv_emg_wrapper_airo_pci_suspend_3(ldv_13_resource_1,ldv_13_resource_0);
    
#line 480 
    ldv_13_ret = ldv_filter_err_code(ldv_13_ret);
    
#line 484 
    if (ldv_13_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 486 
      ldv_13_ret = (*(ldv_13_container->suspend_late))(ldv_13_resource_1,ldv_13_resource_0);
      
#line 488 
      ldv_13_ret = ldv_filter_err_code(ldv_13_ret);
    }
    else 
#line 490 
         ldv_13_ret = ldv_undef_int();
    
#line 495 
    if (ldv_13_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 497 
      (*(ldv_13_container->resume_early))(ldv_13_resource_1); else ;
    
#line 503 
    ldv_emg_wrapper_airo_pci_resume_5(ldv_13_resource_1);
    
#line 510 
    goto ldv_call_13;
    case 3: 
#line 513 
    ;
    
#line 515 
    if (ldv_13_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 517 
      (*(ldv_13_container->shutdown))(ldv_13_resource_1); else ;
    
#line 523 
    ldv_emg_wrapper_airo_pci_remove_4(ldv_13_resource_1);
    
#line 530 
    goto ldv_main_13;
    default: 
#line 533 
    ;
    
#line 533 
    __VERIFIER_assume(0);
  }
  
#line 536 
  __retres = (void *)0;
  return_label: 
#line 536 
                return __retres;
}


#line 541  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_4_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_12 *cf_arg_12;
  int tmp;
  
#line 544 
  tmp = ldv_undef_int();
  
#line 544 
  switch (tmp) {
    case 0: 
#line 545 
    ;
    
#line 546 
    ret = pthread_join(ldv_thread_12,(void **)0);
    
#line 547 
    __VERIFIER_assume(ret == 0);
    
#line 548 
    goto ldv_44740;
    default: 
#line 550 
    ;
    
#line 550 
    __VERIFIER_assume(0);
  }
  ldv_44740: 
#line 551 
  ;
  
#line 552 
  return;
}


#line 556  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 559 
  struct pci_driver *ldv_8_pci_driver = ldv_emg_alias_airo_driver_2;
  
#line 562 
  ldv_8_pci_driver = arg0;
  
#line 566 
  ldv_dispatch_deregister_8_1(ldv_8_pci_driver);
  
#line 570 
  goto return_label;
  return_label: 
#line 572 
                return;
}


#line 577  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_11;
  int tmp;
  
#line 580 
  tmp = ldv_undef_int();
  
#line 580 
  switch (tmp) {
    case 0: 
#line 581 
    ;
    
#line 582 
    ret = pthread_join(ldv_thread_11,(void **)0);
    
#line 583 
    __VERIFIER_assume(ret == 0);
    
#line 584 
    goto ldv_44752;
    default: 
#line 586 
    ;
    
#line 586 
    __VERIFIER_assume(0);
  }
  ldv_44752: 
#line 587 
  ;
  
#line 588 
  return;
}


#line 592  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_10_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_11 *cf_arg_11;
  int tmp;
  
#line 595 
  tmp = ldv_undef_int();
  
#line 595 
  switch (tmp) {
    case 0: 
#line 596 
    ;
    
#line 597 
    cf_arg_11 = (struct ldv_struct_interrupt_scenario_11 *)ldv_xmalloc(32UL);
    
#line 598 
    cf_arg_11->arg0 = arg0;
    
#line 599 
    cf_arg_11->arg1 = arg1;
    
#line 600 
    cf_arg_11->arg2 = arg2;
    
#line 601 
    cf_arg_11->arg3 = arg3;
    
#line 602 
    ret = pthread_create(& ldv_thread_11,(pthread_attr_t const *)0,& ldv_interrupt_scenario_11,(void *)cf_arg_11);
    
#line 603 
    __VERIFIER_assume(ret == 0);
    
#line 604 
    goto ldv_44767;
    default: 
#line 606 
    ;
    
#line 606 
    __VERIFIER_assume(0);
  }
  ldv_44767: 
#line 607 
  ;
  
#line 608 
  return;
}


#line 612  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 618 
  ldv_3_line = (int)arg0;
  
#line 622 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 626 
  goto return_label;
  return_label: 
#line 628 
                return;
}


#line 633  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
struct task_struct *ldv_emg_kthread_create_on_node(int (*arg0)(void *), void *arg1, int arg2, char *arg3 , ...)
{
  struct task_struct *__retres;
  void *ldv_7_ptr;
  void *ldv_7_data;
  long tmp;
  
#line 637 
  int (*ldv_7_threadfn)(void *) = & ldv_emg_wrapper_airo_thread_2;
  
#line 641 
  ldv_7_data = arg1;
  
#line 642 
  ldv_7_threadfn = arg0;
  
#line 647 
  ldv_emg_wrapper_airo_thread_2(ldv_7_data);
  
#line 651 
  ldv_7_ptr = ldv_undef_ptr();
  
#line 652 
  tmp = ldv_is_err((void const *)ldv_7_ptr);
  
#line 652 
  __VERIFIER_assume((int)tmp);
  
#line 653 
  __retres = (struct task_struct *)ldv_7_ptr;
  
#line 653 
  return __retres;
}


#line 662  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_10_line;
  void *ldv_10_data;
  enum irqreturn (*ldv_10_thread)(int , void *);
  int tmp_0;
  
#line 667 
  enum irqreturn (*ldv_10_callback)(int , void *) = & ldv_emg_wrapper_airo_interrupt_2;
  
#line 672 
  tmp_0 = ldv_undef_int();
  
#line 672 
  if (tmp_0 != 0) {
    
#line 674 
    ldv_10_line = (int)arg0;
    
#line 675 
    ldv_10_callback = arg1;
    
#line 676 
    ldv_10_thread = (enum irqreturn (*)(int , void *))0;
    
#line 677 
    ldv_10_data = arg4;
    
#line 681 
    ldv_dispatch_irq_register_10_3(ldv_10_line,ldv_10_callback,ldv_10_thread,ldv_10_data);
    
#line 685 
    __retres = 0;
    
#line 685 
    goto return_label;
  }
  else {
    int tmp;
    
#line 692 
    tmp = ldv_undef_int_negative();
    
#line 692 
    __retres = tmp;
    
#line 692 
    goto return_label;
  }
  return_label: 
#line 672 
                return __retres;
}


#line 702  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_11(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_11_ret_val;
  int ldv_11_line;
  void *ldv_11_data;
  enum irqreturn (*ldv_11_thread)(int , void *);
  int tmp;
  
#line 708 
  enum irqreturn (*ldv_11_callback)(int , void *) = & ldv_emg_wrapper_airo_interrupt_2;
  
#line 711 
  struct ldv_struct_interrupt_scenario_11 *data = (struct ldv_struct_interrupt_scenario_11 *)arg0;
  
#line 716 
  if (data != (struct ldv_struct_interrupt_scenario_11 *)0) {
    
#line 717 
    ldv_11_line = data->arg0;
    
#line 718 
    ldv_11_callback = data->arg1;
    
#line 719 
    ldv_11_thread = data->arg2;
    
#line 720 
    ldv_11_data = data->arg3;
    
#line 721 
    ldv_free((void *)data);
  }
  else ;
  
#line 727 
  ldv_switch_to_interrupt_context();
  
#line 729 
  ldv_11_ret_val = ldv_emg_wrapper_airo_interrupt_2(ldv_11_line,ldv_11_data);
  
#line 731 
  ldv_switch_to_process_context();
  
#line 734 
  tmp = ldv_undef_int();
  
#line 734 
  if (tmp != 0) {
    
#line 736 
    __VERIFIER_assume(ldv_11_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 740 
    if (ldv_11_thread != (enum irqreturn (*)(int , void *))0) 
#line 742 
                                                              (*ldv_11_thread)(ldv_11_line,ldv_11_data); else ;
  }
  else 
#line 749 
       __VERIFIER_assume(ldv_11_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 758 
  __retres = (void *)0;
  
#line 758 
  goto return_label;
  
#line 760 
  __retres = (void *)0;
  return_label: 
#line 760 
                return __retres;
}


#line 765  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_netdev_mqs(int arg0, char *arg1, unsigned char arg2, void (*arg3)(struct net_device *), unsigned int arg4, unsigned int arg5)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 769 
  void (*ldv_5_setup)(struct net_device *) = & ether_setup;
  
#line 773 
  tmp_0 = ldv_undef_int();
  
#line 773 
  if (tmp_0 != 0) {
    
#line 775 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 776 
    ldv_5_setup = arg3;
    
#line 781 
    ether_setup(ldv_5_netdev);
    
#line 785 
    __retres = ldv_5_netdev;
    
#line 785 
    goto return_label;
  }
  else {
    
#line 792 
    __retres = (struct net_device *)0;
    
#line 792 
    goto return_label;
  }
  return_label: 
#line 773 
                return __retres;
}


#line 802  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_6_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_13 *cf_arg_13;
  int tmp;
  
#line 805 
  tmp = ldv_undef_int();
  
#line 805 
  switch (tmp) {
    case 0: 
#line 806 
    ;
    
#line 807 
    cf_arg_13 = (struct ldv_struct_pci_scenario_13 *)ldv_xmalloc(16UL);
    
#line 808 
    cf_arg_13->arg0 = arg0;
    
#line 809 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_pci_scenario_13,(void *)cf_arg_13);
    
#line 810 
    __VERIFIER_assume(ret == 0);
    
#line 811 
    goto ldv_44833;
    default: 
#line 813 
    ;
    
#line 813 
    __VERIFIER_assume(0);
  }
  ldv_44833: 
#line 814 
  ;
  
#line 815 
  return;
}


#line 819  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 825 
  ldv_2_netdev = arg0;
  
#line 826 
  ldv_free((void *)ldv_2_netdev);
  
#line 830 
  goto return_label;
  return_label: 
#line 832 
                return;
}


#line 837  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 844 
  ldv_1_ret = ldv_emg_airo_init_module();
  
#line 845 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 848 
  tmp = ldv_undef_int();
  
#line 848 
  if (tmp != 0) {
    
#line 850 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 854 
    __retres = (void *)0;
    
#line 854 
    goto return_label;
  }
  else {
    
#line 858 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 863 
    ldv_emg_airo_cleanup_module();
    
#line 867 
    __retres = (void *)0;
    
#line 867 
    goto return_label;
  }
  
#line 870 
  __retres = (void *)0;
  return_label: 
#line 870 
                return __retres;
}


#line 875  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/wireless/airo.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_9_netdev;
  int tmp_3;
  
#line 879 
  int ldv_9_ret = ldv_undef_int();
  
#line 882 
  ldv_9_ret = ldv_undef_int();
  
#line 885 
  tmp_3 = ldv_undef_int();
  
#line 885 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 887 
    ldv_9_netdev = arg0;
    
#line 892 
    ldv_9_ret = ldv_emg_wrapper_airo_open_2(ldv_9_netdev);
    
#line 895 
    tmp_1 = ldv_undef_int();
    
#line 895 
    if (tmp_1 != 0) {
      
#line 897 
      __VERIFIER_assume(ldv_9_ret == 0);
      
#line 901 
      ldv_dispatch_register_9_4(ldv_9_netdev);
      
#line 905 
      __retres = 0;
      
#line 905 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 912 
      __VERIFIER_assume(ldv_9_ret != 0);
      
#line 913 
      ldv_failed_register_netdev();
      
#line 914 
      tmp_0 = ldv_undef_int_negative();
      
#line 914 
      __retres = tmp_0;
      
#line 914 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 922 
    ldv_failed_register_netdev();
    
#line 923 
    tmp_2 = ldv_undef_int_negative();
    
#line 923 
    __retres = tmp_2;
    
#line 923 
    goto return_label;
  }
  return_label: 
#line 885 
                return __retres;
}


