/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
enum system_states {
    SYSTEM_BOOTING = 0,
    SYSTEM_RUNNING = 1,
    SYSTEM_HALT = 2,
    SYSTEM_POWER_OFF = 3,
    SYSTEM_RESTART = 4
};

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ftrace_irq.h"
struct vm_area_struct;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmdebug.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mpspec.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_109 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_109 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debugobjects.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 247 
enum hrtimer_restart;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 1170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1120  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_111 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_110 {
   struct __anonstruct_111 __anonCompField___anonunion_110_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_110 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11880 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_112 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_112 nodemask_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_113 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_113 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore;

#line 797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqhandler.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 398  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irq.h"
struct proc_dir_entry;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct kref {
   atomic_t refcount ;
};

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_148 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_148 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_149 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_149 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_156 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_157 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_155 {
   struct __anonstruct_156 __anonCompField___anonunion_155_40 ;
   struct __anonstruct_157 __anonCompField___anonunion_155_41 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_155 __anonCompField_uprobe_task_42 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_158 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_164 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_163 {
   atomic_t _mapcount ;
   struct __anonstruct_164 __anonCompField___anonunion_163_45 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_162 {
   union __anonunion_163 __anonCompField___anonstruct_162_46 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_161 {
   unsigned long counters ;
   struct __anonstruct_162 __anonCompField___anonunion_161_47 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   union __anonunion_160 __anonCompField___anonstruct_159_44 ;
   union __anonunion_161 __anonCompField___anonstruct_159_48 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_166 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_167 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_165 {
   struct list_head lru ;
   struct __anonstruct_166 __anonCompField___anonunion_165_50 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_167 __anonCompField___anonunion_165_51 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_168 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_158 __anonCompField_page_43 ;
   struct __anonstruct_159 __anonCompField_page_49 ;
   union __anonunion_165 __anonCompField_page_52 ;
   union __anonunion_168 __anonCompField_page_53 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_169 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_169 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_174 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_174 __anonCompField_idr_layer_54 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_179 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_179 __anonCompField_kernfs_node_55 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_180 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_180 __anonCompField_kernel_param_56 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_188 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_188 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_190 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_191 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_192 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_193 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_195 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_194 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_195 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_196 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_197 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_189 {
   int _pad[28U] ;
   struct __anonstruct__kill_190 _kill ;
   struct __anonstruct__timer_191 _timer ;
   struct __anonstruct__rt_192 _rt ;
   struct __anonstruct__sigchld_193 _sigchld ;
   struct __anonstruct__sigfault_194 _sigfault ;
   struct __anonstruct__sigpoll_196 _sigpoll ;
   struct __anonstruct__sigsys_197 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_189 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_205 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_207 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_206 {
   struct keyring_index_key index_key ;
   struct __anonstruct_207 __anonCompField___anonunion_206_59 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_208 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_210 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_209 {
   union __anonunion_payload_210 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_204 __anonCompField_key_57 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_205 __anonCompField_key_58 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_206 __anonCompField_key_60 ;
   union __anonunion_type_data_208 type_data ;
   union __anonunion_209 __anonCompField_key_61 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_228 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_228 __anonCompField_pci_dev_65 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct dma_pool;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_229 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_229 __anonCompField_iov_iter_66 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_231 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_231 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_232 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_232 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_233 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_233 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_234 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_234 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_235 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_235 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_236 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_236 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_237 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_237 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_238 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_238 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_239 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_240 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_239 ifr_ifrn ;
   union __anonunion_ifr_ifru_240 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_245 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_244 {
   struct __anonstruct_245 __anonCompField___anonunion_244_67 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_244 __anonCompField_lockref_68 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_247 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_246 {
   struct __anonstruct_247 __anonCompField___anonunion_246_69 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_246 __anonCompField_qstr_70 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_248 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_248 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_252 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_251 {
   struct __anonstruct_252 __anonCompField___anonunion_251_71 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_251 __anonCompField_radix_tree_node_72 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_256 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_256 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_257 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_257 __anonCompField_kqid_74 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_260 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_261 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_262 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_260 __anonCompField_inode_75 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_261 __anonCompField_inode_76 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_262 __anonCompField_inode_77 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_263 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_263 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_265 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_264 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_265 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_264 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_280 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_280 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_27316 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_286 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_27316 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_285 __anonCompField_nf_bridge_info_81 ;
   union __anonunion_286 __anonCompField_nf_bridge_info_82 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_287 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_287 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_289 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   u64 v64 ;
   struct __anonstruct_289 __anonCompField___anonunion_288_83 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_288 __anonCompField_skb_mstamp_84 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_292 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_291 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_292 __anonCompField___anonstruct_291_85 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_290 {
   struct __anonstruct_291 __anonCompField___anonunion_290_86 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_294 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_293 {
   __wsum csum ;
   struct __anonstruct_294 __anonCompField___anonunion_293_88 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_295 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_296 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_297 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_290 __anonCompField_sk_buff_87 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_293 __anonCompField_sk_buff_89 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_295 __anonCompField_sk_buff_90 ;
   __u32 secmark ;
   union __anonunion_296 __anonCompField_sk_buff_91 ;
   union __anonunion_297 __anonCompField_sk_buff_92 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 1084  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct mii_ioctl_data {
   __u16 phy_id ;
   __u16 reg_num ;
   __u16 val_in ;
   __u16 val_out ;
};

#line 160  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/mii.h"
struct mii_if_info {
   int phy_id ;
   int advertising ;
   int phy_id_mask ;
   int reg_num_mask ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) full_duplex : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_media : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) supports_gmii : 1 ;
   struct net_device *dev ;
   int (*mdio_read)(struct net_device *, int , int ) ;
   void (*mdio_write)(struct net_device *, int , int , int ) ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29168 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29168 phy_interface_t;

#line 126 
enum ldv_29221 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29221 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 1628  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30931 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30932 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30931 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30932 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct firmware {
   size_t size ;
   u8 const *data ;
   struct page **pages ;
   void *priv ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
enum mac {
    mac_82557_D100_A = 0,
    mac_82557_D100_B = 1,
    mac_82557_D100_C = 2,
    mac_82558_D101_A4 = 4,
    mac_82558_D101_B0 = 5,
    mac_82559_D101M = 8,
    mac_82559_D101S = 9,
    mac_82550_D102 = 12,
    mac_82550_D102_C = 13,
    mac_82551_E = 14,
    mac_82551_F = 15,
    mac_82551_10 = 16,
    mac_unknown = 255
};

#line 273 
enum phy {
    phy_100a = 992,
    phy_100c = 55575208,
    phy_82555_tx = 22020776,
    phy_nsc_tx = 1543512064,
    phy_82562_et = 53478056,
    phy_82562_em = 52429480,
    phy_82562_ek = 51380904,
    phy_82562_eh = 24117928,
    phy_82552_v = 3496017997,
    phy_unknown = 4294967295
};

#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct __anonstruct_scb_331 {
   u8 status ;
   u8 stat_ack ;
   u8 cmd_lo ;
   u8 cmd_hi ;
   u32 gen_ptr ;
};

#line 286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct csr {
   struct __anonstruct_scb_331 scb ;
   u32 port ;
   u16 flash_ctrl ;
   u8 eeprom_ctrl_lo ;
   u8 eeprom_ctrl_hi ;
   u32 mdi_ctrl ;
   u32 rx_dma_count ;
};

#line 309 
enum ru_state {
    RU_SUSPENDED = 0,
    RU_RUNNING = 1,
    RU_UNINITIALIZED = -1
};

#line 333 
enum scb_cmd_lo {
    cuc_nop = 0,
    ruc_start = 1,
    ruc_load_base = 6,
    cuc_start = 16,
    cuc_resume = 32,
    cuc_dump_addr = 64,
    cuc_dump_stats = 80,
    cuc_load_base = 96,
    cuc_dump_reset = 112
};

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct rfd {
   __le16 status ;
   __le16 command ;
   __le32 link ;
   __le32 rbd ;
   __le16 actual_size ;
   __le16 size ;
};

#line 443  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct rx {
   struct rx *next ;
   struct rx *prev ;
   struct sk_buff *skb ;
   dma_addr_t dma_addr ;
};

#line 449  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct config {
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) byte_count : 6 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) pad0 : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) rx_fifo_limit : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_fifo_limit : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pad1 : 1 ;
   u8 adaptive_ifs ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mwi_enable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) type_enable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) read_align_enable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) term_write_cache_line : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) pad3 : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) rx_dma_max_count : 7 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pad4 : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) tx_dma_max_count : 7 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) dma_max_count_enable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) late_scb_update : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_rx_dma : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tno_intr : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cna_intr : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) standard_tcb : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) standard_stat_counter : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_save_overruns : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_save_bad_frames : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_discard_short_frames : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) tx_underrun_retry : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) pad7 : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_extended_rfd : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tx_two_frames_in_fifo : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tx_dynamic_tbd : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mii_mode : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) pad8 : 6 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csma_disabled : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_tcpudp_checksum : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pad9 : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) vlan_arp_tco : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) link_status_wake : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) arp_wake : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mcmatch_wake : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pad10 : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_source_addr_insertion : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) preamble_length : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) loopback : 2 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) linear_priority : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pad11 : 5 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) linear_priority_mode : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pad12 : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ifs : 4 ;
   u8 ip_addr_lo ;
   u8 ip_addr_hi ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) promiscuous_mode : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broadcast_disabled : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wait_after_win : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pad15_1 : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_ul_bit : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crc_16_bit : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pad15_2 : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) crs_or_cdt : 1 ;
   u8 fc_delay_lo ;
   u8 fc_delay_hi ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_stripping : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) tx_padding : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_crc_transfer : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_long_ok : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) fc_priority_threshold : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pad18 : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) addr_wake : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) magic_packet_disable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fc_disable : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fc_restop : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fc_restart : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fc_reject : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) full_duplex_force : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) full_duplex_pin : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pad20_1 : 5 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fc_priority_location : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multi_ia : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pad20_2 : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pad21_1 : 3 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multicast_all : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) pad21_2 : 4 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_d102_mode : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rx_vlan_drop : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))) pad22 : 6 ;
   u8 pad_d102[9U] ;
};

#line 493  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct multi {
   __le16 count ;
   u8 addr[386U] ;
};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct __anonstruct_tbd_334 {
   __le32 buf_addr ;
   __le16 size ;
   u16 eol ;
};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct __anonstruct_tcb_333 {
   u32 tbd_array ;
   u16 tcb_byte_count ;
   u8 threshold ;
   u8 tbd_count ;
   struct __anonstruct_tbd_334 tbd ;
};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
union __anonunion_u_332 {
   u8 iaaddr[6U] ;
   __le32 ucode[134U] ;
   struct config config ;
   struct multi multi ;
   struct __anonstruct_tcb_333 tcb ;
   __le32 dump_buffer_addr ;
};

#line 499  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct cb {
   __le16 status ;
   __le16 command ;
   __le32 link ;
   union __anonunion_u_332 u ;
   struct cb *next ;
   struct cb *prev ;
   dma_addr_t dma_addr ;
   struct sk_buff *skb ;
};

#line 528 
enum loopback {
    lb_none = 0,
    lb_mac = 1,
    lb_phy = 3
};

#line 534  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct stats {
   __le32 tx_good_frames ;
   __le32 tx_max_collisions ;
   __le32 tx_late_collisions ;
   __le32 tx_underruns ;
   __le32 tx_lost_crs ;
   __le32 tx_deferred ;
   __le32 tx_single_collisions ;
   __le32 tx_multiple_collisions ;
   __le32 tx_total_collisions ;
   __le32 rx_good_frames ;
   __le32 rx_crc_errors ;
   __le32 rx_alignment_errors ;
   __le32 rx_resource_errors ;
   __le32 rx_overrun_errors ;
   __le32 rx_cdt_errors ;
   __le32 rx_short_frame_errors ;
   __le32 fc_xmt_pause ;
   __le32 fc_rcv_pause ;
   __le32 fc_rcv_unsupported ;
   __le16 xmt_tco_frames ;
   __le16 rcv_tco_frames ;
   __le32 complete ;
};

#line 544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct __anonstruct_selftest_335 {
   u32 signature ;
   u32 result ;
};

#line 544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct mem {
   struct __anonstruct_selftest_335 selftest ;
   struct stats stats ;
   u8 dump_buf[596U] ;
};

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct param_range {
   u32 min ;
   u32 max ;
   u32 count ;
};

#line 559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct params {
   struct param_range rfds ;
   struct param_range cbs ;
};

#line 564 
enum ldv_33170 {
    ich = 1,
    promiscuous = 2,
    multicast_all = 4,
    wol_magic = 8,
    ich_10h_workaround = 16
};

#line 572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct nic {
   u32 msg_enable ;
   struct net_device *netdev ;
   struct pci_dev *pdev ;
   u16 (*mdio_ctrl)(struct nic *, u32 , u32 , u32 , u16 ) ;
   struct rx *rxs ;
   struct rx *rx_to_use ;
   struct rx *rx_to_clean ;
   struct rfd blank_rfd ;
   enum ru_state ru_running ;
   spinlock_t cb_lock ;
   spinlock_t cmd_lock ;
   struct csr *csr ;
   enum scb_cmd_lo cuc_cmd ;
   unsigned int cbs_avail ;
   struct napi_struct napi ;
   struct cb *cbs ;
   struct cb *cb_to_use ;
   struct cb *cb_to_send ;
   struct cb *cb_to_clean ;
   __le16 tx_command ;
   enum ldv_33170 flags ;
   enum mac mac ;
   enum phy phy ;
   struct params params ;
   struct timer_list watchdog ;
   struct mii_if_info mii ;
   struct work_struct tx_timeout_task ;
   enum loopback loopback ;
   struct mem *mem ;
   dma_addr_t dma_addr ;
   struct dma_pool *cbs_pool ;
   dma_addr_t cbs_dma_addr ;
   u8 adaptive_ifs ;
   u8 tx_threshold ;
   u32 tx_frames ;
   u32 tx_collisions ;
   u32 tx_deferred ;
   u32 tx_single_collisions ;
   u32 tx_multiple_collisions ;
   u32 tx_fc_pause ;
   u32 tx_tco_frames ;
   u32 rx_fc_pause ;
   u32 rx_fc_unsupported ;
   u32 rx_tco_frames ;
   u32 rx_short_frame_errors ;
   u32 rx_over_length_errors ;
   u16 eeprom_wc ;
   __le16 eeprom[256U] ;
   spinlock_t mdio_lock ;
   struct firmware const *fw ;
};

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_13 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_16 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_15 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_14 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/fvtp/.tmp_e100.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
extern enum system_states system_state;


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 63 
int memcmp(void const *, void const *, size_t);


#line 65 
char *strcpy(char *, char const *);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
char *strncpy(char *, char const *, __kernel_size_t);


#line 26 
size_t strlcpy(char *, char const *, size_t);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/err.h"
static void *ERR_PTR(long error);


#line 32 
static long PTR_ERR(void const *ptr);


#line 41 
static bool IS_ERR(void const *ptr);


#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void rep_nop(void)
{
  
#line 567 
  ldv_inline_asm();
  
#line 568 
  return;
}


#line 570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
__inline static void cpu_relax(void)
{
  
#line 572 
  rep_nop();
  
#line 573 
  return;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_lock(raw_spinlock_t *);


#line 31 
void _raw_spin_lock_irq(raw_spinlock_t *);


#line 41 
void _raw_spin_unlock(raw_spinlock_t *);


#line 43 
void _raw_spin_unlock_irq(raw_spinlock_t *);


#line 45 
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock(spinlock_t *lock)
{
  
#line 312 
  _raw_spin_lock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 313 
  return;
}


#line 358 
static void ldv_spin_lock_87(spinlock_t *lock);


#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_lock_irq(spinlock_t *lock)
{
  
#line 346 
  _raw_spin_lock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 347 
  return;
}


#line 366 
static void ldv_spin_lock_irq_84(spinlock_t *lock);


#line 367  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock(spinlock_t *lock)
{
  
#line 369 
  _raw_spin_unlock(& lock->__anonCompField_spinlock_18.rlock);
  
#line 370 
  return;
}


#line 411 
static void ldv_spin_unlock_88(spinlock_t *lock);


#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irq(spinlock_t *lock)
{
  
#line 439 
  _raw_spin_unlock_irq(& lock->__anonCompField_spinlock_18.rlock);
  
#line 440 
  return;
}


#line 453 
static void ldv_spin_unlock_irq_85(spinlock_t *lock);


#line 454  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 456 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 457 
  return;
}


#line 486 
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 78 
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1);


#line 82 
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1);


#line 86 
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1);


#line 94 
void ldv_spin_model_lock(char *);


#line 95 
void ldv_spin_model_unlock(char *);


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_86(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_89(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 181 
static int ldv_mod_timer_100(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_91(struct timer_list *ldv_func_arg1);


#line 236 
static int ldv_del_timer_sync_93(struct timer_list *ldv_func_arg1);


#line 252 
unsigned long round_jiffies(unsigned long);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 560 
static bool ldv_schedule_work_79(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_94(struct work_struct *work);


#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/iomap.h"
unsigned int ioread8(void *);


#line 29 
unsigned int ioread16(void *);


#line 31 
unsigned int ioread32(void *);


#line 34 
void iowrite8(u8, void *);


#line 37 
void iowrite32(u32, void *);


#line 76 
void pci_iounmap(struct pci_dev *, void *);


#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci_iomap.h"
void *pci_iomap(struct pci_dev *, int, unsigned long);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_90(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static void ldv_free_irq_92(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 47 
unsigned long msleep_interruptible(unsigned int);


#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm_wakeup.h"
__inline static bool device_can_wakeup(struct device *dev)
{
  bool __retres;
  
#line 83 
  __retres = (_Bool)((int)dev->power.can_wakeup != 0);
  
#line 83 
  return __retres;
}


#line 104 
int device_set_wakeup_enable(struct device *, bool);


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 951  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 972 
void pci_clear_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1040 
int pci_set_power_state(struct pci_dev *, pci_power_t);


#line 1043 
void pci_pme_active(struct pci_dev *, bool);


#line 1044 
int __pci_enable_wake(struct pci_dev *, pci_power_t, bool, bool);


#line 1046 
int pci_wake_from_d3(struct pci_dev *, bool);


#line 1047 
int pci_prepare_to_sleep(struct pci_dev *);


#line 1053  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_enable_wake(struct pci_dev *dev, pci_power_t state, bool enable)
{
  int tmp;
  
#line 1056 
  tmp = __pci_enable_wake(dev,state,(_Bool)0,(_Bool)((bool)((int)enable) != 0));
  
#line 1056 
  return tmp;
}


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_101(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_102(struct pci_driver *ldv_func_arg1);


#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct dma_pool *dma_pool_create(char const *, struct device *, size_t, size_t, size_t);


#line 22 
void dma_pool_destroy(struct dma_pool *);


#line 24 
void *dma_pool_alloc(struct dma_pool *, gfp_t, dma_addr_t *);


#line 27 
void dma_pool_free(struct dma_pool *, void *, dma_addr_t);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 775  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
void consume_skb(struct sk_buff *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2176  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *__netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length, gfp_t gfp)
{
  
#line 2179 
  struct sk_buff *skb = __netdev_alloc_skb(dev,length,gfp);
  
#line 2183 
  return skb;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb_ip_align(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2189 
  tmp = __netdev_alloc_skb_ip_align(dev,length,32U);
  
#line 2189 
  return tmp;
}


#line 2803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_copy_to_linear_data(struct sk_buff *skb, void const *from, unsigned int const len)
{
  
#line 2807 
  memcpy((void *)skb->data,from,(unsigned long)len);
  
#line 2808 
  return;
}


#line 2865 
void skb_clone_tx_timestamp(struct sk_buff *);


#line 2911 
void skb_tstamp_tx(struct sk_buff *, struct skb_shared_hwtstamps *);


#line 2914  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void sw_tx_timestamp(struct sk_buff *skb)
{
  unsigned char *tmp;
  
#line 2916 
  tmp = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2916 
  ;
  
#line 2916 
  if (((int)((struct skb_shared_info *)tmp)->tx_flags & 2) != 0) {
    unsigned char *tmp_0;
    
#line 2917 
    tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 2916 
    ;
    
#line 2916 
    if (((int)((struct skb_shared_info *)tmp_0)->tx_flags & 4) == 0) 
      
#line 2918 
      skb_tstamp_tx(skb,(struct skb_shared_hwtstamps *)0); else ;
  }
  else ;
  
#line 2919 
  return;
}


#line 2933  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_tx_timestamp(struct sk_buff *skb)
{
  
#line 2935 
  skb_clone_tx_timestamp(skb);
  
#line 2936 
  sw_tx_timestamp(skb);
  
#line 2937 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
int ethtool_op_get_ts_info(struct net_device *, struct ethtool_ts_info *);


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
int mii_link_ok(struct mii_if_info *);


#line 32 
int mii_nway_restart(struct mii_if_info *);


#line 33 
int mii_ethtool_gset(struct mii_if_info *, struct ethtool_cmd *);


#line 34 
int mii_ethtool_sset(struct mii_if_info *, struct ethtool_cmd *);


#line 36 
void mii_check_link(struct mii_if_info *);


#line 40 
int generic_mii_ioctl(struct mii_if_info *, struct mii_ioctl_data *, int, unsigned int *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
__inline static struct mii_ioctl_data *if_mii(struct ifreq *rq)
{
  struct mii_ioctl_data *__retres;
  
#line 47 
  __retres = (struct mii_ioctl_data *)(& rq->ifr_ifru);
  
#line 47 
  return __retres;
}


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_97(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_99(struct net_device *ldv_func_arg1);


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_stop_queue(struct netdev_queue *dev_queue)
{
  
#line 2567 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2568 
  return;
}


#line 2577  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_stop_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2579 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2579 
  netif_tx_stop_queue(tmp);
  
#line 2580 
  return;
}


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_96(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_98(struct net_device *ldv_func_arg1);


#line 3819 
void netdev_printk(char const *, struct net_device const *, char const * , ...);


#line 3828 
void netdev_err(struct net_device const *, char const * , ...);


#line 3834 
void netdev_info(struct net_device const *, char const * , ...);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/unaligned/access_ok.h"
__inline static void put_unaligned_le32(u32 val, void *p)
{
  
#line 44 
  *((__le32 *)p) = val;
  
#line 45 
  return;
}


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_95(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 42  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/firmware.h"
int request_firmware(struct firmware const **, char const *, struct device *);


#line 51 
void release_firmware(struct firmware const *);


#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int debug = 3;

#line 199  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int eeprom_bad_csum_allow = 0;

#line 200  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int use_io = 0;

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static struct pci_device_id const e100_id_table[43U] = {{.vendor = 32902U, .device = 4137U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4144U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4145U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 3UL}, {.vendor = 32902U, .device = 4146U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 3UL}, {.vendor = 32902U, .device = 4147U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 3UL}, {.vendor = 32902U, .device = 4148U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 3UL}, {.vendor = 32902U, .device = 4152U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 3UL}, {.vendor = 32902U, .device = 4153U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 4UL}, {.vendor = 32902U, .device = 4154U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 4UL}, {.vendor = 32902U, .device = 4155U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 4UL}, {.vendor = 32902U, .device = 4156U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 4UL}, {.vendor = 32902U, .device = 4157U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 4UL}, {.vendor = 32902U, .device = 4158U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 4UL}, {.vendor = 32902U, .device = 4176U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4177U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4178U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4179U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4180U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4181U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4182U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4183U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 5UL}, {.vendor = 32902U, .device = 4185U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4196U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4197U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4198U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4199U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4200U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4201U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4202U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4203U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 6UL}, {.vendor = 32902U, .device = 4241U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 32902U, .device = 4242U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 32902U, .device = 4243U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 32902U, .device = 4244U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 32902U, .device = 4245U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 32902U, .device = 4350U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 32902U, .device = 4617U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 32902U, .device = 4649U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 0UL}, {.vendor = 32902U, .device = 9289U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 2UL}, {.vendor = 32902U, .device = 9305U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 2UL}, {.vendor = 32902U, .device = 9309U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 2UL}, {.vendor = 32902U, .device = 10204U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 131072U, .class_mask = 16776960U, .driver_data = 7UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
struct pci_device_id const __mod_pci__e100_id_table_device_table[43U];

#line 634  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
__inline static void e100_write_flush(struct nic *nic)
{
  
#line 638 
  ioread8((void *)(& (nic->csr)->scb.status));
  
#line 639 
  return;
}


#line 641  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_enable_irq(struct nic *nic)
{
  unsigned long flags;
  
#line 645 
  ldv___ldv_spin_lock_72(& nic->cmd_lock);
  
#line 646 
  iowrite8((unsigned char)0,(void *)(& (nic->csr)->scb.cmd_hi));
  
#line 647 
  e100_write_flush(nic);
  
#line 648 
  ldv_spin_unlock_irqrestore_73(& nic->cmd_lock,flags);
  
#line 649 
  return;
}


#line 651  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_disable_irq(struct nic *nic)
{
  unsigned long flags;
  
#line 655 
  ldv___ldv_spin_lock_74(& nic->cmd_lock);
  
#line 656 
  iowrite8((unsigned char)1,(void *)(& (nic->csr)->scb.cmd_hi));
  
#line 657 
  e100_write_flush(nic);
  
#line 658 
  ldv_spin_unlock_irqrestore_75(& nic->cmd_lock,flags);
  
#line 659 
  return;
}


#line 661  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_hw_reset(struct nic *nic)
{
  
#line 665 
  iowrite32(2U,(void *)(& (nic->csr)->port));
  
#line 666 
  e100_write_flush(nic);
  
#line 666 
  __const_udelay(85900UL);
  
#line 669 
  iowrite32(0U,(void *)(& (nic->csr)->port));
  
#line 670 
  e100_write_flush(nic);
  
#line 670 
  __const_udelay(85900UL);
  
#line 673 
  e100_disable_irq(nic);
  
#line 674 
  return;
}


#line 676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_self_test(struct nic *nic)
{
  int __retres;
  
#line 678 
  u32 dma_addr = (unsigned int)nic->dma_addr;
  
#line 683 
  (nic->mem)->selftest.signature = 0U;
  
#line 684 
  (nic->mem)->selftest.result = 4294967295U;
  
#line 686 
  iowrite32(dma_addr | 1U,(void *)(& (nic->csr)->port));
  
#line 687 
  e100_write_flush(nic);
  
#line 689 
  msleep(10U);
  
#line 692 
  e100_disable_irq(nic);
  
#line 695 
  if ((nic->mem)->selftest.result != 0U) {
    
#line 696 
    if ((nic->msg_enable & 8192U) != 0U) 
#line 696 
                                         netdev_err((struct net_device const *)nic->netdev,"Self-test failed: result=0x%08X\n",(nic->mem)->selftest.result); else ;
    
#line 699 
    __retres = -110;
    
#line 699 
    goto return_label;
  }
  else ;
  
#line 701 
  if ((nic->mem)->selftest.signature == 0U) {
    
#line 702 
    if ((nic->msg_enable & 8192U) != 0U) 
#line 702 
                                         netdev_err((struct net_device const *)nic->netdev,"Self-test failed: timed out\n"); else ;
    
#line 703 
    __retres = -110;
    
#line 703 
    goto return_label;
  }
  else ;
  
#line 706 
  __retres = 0;
  return_label: 
#line 706 
                return __retres;
}


#line 709  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_eeprom_write(struct nic *nic, u16 addr_len, u16 addr, __le16 data)
{
  u32 cmd_addr_data[3U];
  u8 ctrl;
  int i;
  int j;
  
#line 716 
  cmd_addr_data[0] = (unsigned int)(19 << ((int)addr_len + -2));
  
#line 717 
  cmd_addr_data[1] = (unsigned int)((((5 << (int)addr_len) | (int)addr) << 16) | (int)data);
  
#line 719 
  cmd_addr_data[2] = (unsigned int)(16 << ((int)addr_len + -2));
  
#line 722 
  j = 0;
  
#line 722 
  goto ldv_47276;
  ldv_47275: 
#line 723 
  ;
  
#line 725 
  iowrite8((unsigned char)3,(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 726 
  e100_write_flush(nic);
  
#line 726 
  __const_udelay(17180UL);
  
#line 728 
  i = 31;
  
#line 728 
  goto ldv_47273;
  ldv_47272: 
#line 729 
  ;
  
#line 729 
  if ((cmd_addr_data[j] & (unsigned int)(1 << i)) != 0U) 
#line 729 
                                                         ctrl = (unsigned char)6U; else 
                                                                    
#line 729 
                                                                    ctrl = (unsigned char)2U;
  
#line 731 
  iowrite8((unsigned char)((int)ctrl),(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 732 
  e100_write_flush(nic);
  
#line 732 
  __const_udelay(17180UL);
  
#line 734 
  iowrite8((unsigned char)((int)((unsigned int)ctrl | 1U)),(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 735 
  e100_write_flush(nic);
  
#line 735 
  __const_udelay(17180UL);
  
#line 728 
  i -= 1;
  ldv_47273: 
#line 729 
  ;
  
#line 728 
  if (i >= 0) 
#line 730 
              goto ldv_47272; else 
#line 733 
                                   goto ldv_47274;
  ldv_47274: 
#line 734 
  ;
  
#line 738 
  msleep(10U);
  
#line 741 
  iowrite8((unsigned char)0,(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 742 
  e100_write_flush(nic);
  
#line 742 
  __const_udelay(17180UL);
  
#line 722 
  j += 1;
  ldv_47276: 
#line 723 
  ;
  
#line 722 
  if (j <= 2) 
#line 724 
              goto ldv_47275; else 
#line 727 
                                   goto ldv_47277;
  ldv_47277: 
#line 728 
  ;
  
#line 729 
  return;
}


#line 747  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static __le16 e100_eeprom_read(struct nic *nic, u16 *addr_len, u16 addr)
{
  u32 cmd_addr_data;
  u8 ctrl;
  int i;
  unsigned int tmp;
  
#line 750 
  u16 data = (unsigned short)0U;
  
#line 754 
  cmd_addr_data = (unsigned int)(((6 << (int)*addr_len) | (int)addr) << 16);
  
#line 757 
  iowrite8((unsigned char)3,(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 758 
  e100_write_flush(nic);
  
#line 758 
  __const_udelay(17180UL);
  
#line 761 
  i = 31;
  
#line 761 
  goto ldv_47288;
  ldv_47287: 
#line 762 
  ;
  
#line 762 
  if (((unsigned int)(1 << i) & cmd_addr_data) != 0U) 
#line 762 
                                                      ctrl = (unsigned char)6U; else 
                                                                    
#line 762 
                                                                    ctrl = (unsigned char)2U;
  
#line 763 
  iowrite8((unsigned char)((int)ctrl),(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 764 
  e100_write_flush(nic);
  
#line 764 
  __const_udelay(17180UL);
  
#line 766 
  iowrite8((unsigned char)((int)((unsigned int)ctrl | 1U)),(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 767 
  e100_write_flush(nic);
  
#line 767 
  __const_udelay(17180UL);
  
#line 771 
  tmp = ioread8((void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 771 
  ctrl = (unsigned char)tmp;
  
#line 772 
  if (((int)ctrl & 8) == 0 && i > 16) {
    
#line 773 
    *addr_len = (unsigned short)((unsigned int)((int)*addr_len - (int)((unsigned short)i)) + 16U);
    
#line 774 
    i = 17;
  }
  else ;
  
#line 777 
  data = (unsigned short)(((int)data << 1) | (((int)ctrl >> 3) & 1));
  
#line 761 
  i -= 1;
  ldv_47288: 
#line 762 
  ;
  
#line 761 
  if (i >= 0) 
#line 763 
              goto ldv_47287; else 
#line 766 
                                   goto ldv_47289;
  ldv_47289: 
#line 767 
  ;
  
#line 781 
  iowrite8((unsigned char)0,(void *)(& (nic->csr)->eeprom_ctrl_lo));
  
#line 782 
  e100_write_flush(nic);
  
#line 782 
  __const_udelay(17180UL);
  
#line 784 
  return data;
}


#line 788  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_eeprom_load(struct nic *nic)
{
  int __retres;
  u16 addr;
  
#line 790 
  u16 addr_len = (unsigned short)8U;
  
#line 790 
  u16 checksum = (unsigned short)0U;
  
#line 793 
  e100_eeprom_read(nic,& addr_len,(unsigned short)0);
  
#line 794 
  nic->eeprom_wc = (unsigned short)(1 << (int)addr_len);
  
#line 796 
  addr = (unsigned short)0U;
  
#line 796 
  goto ldv_47297;
  ldv_47296: 
#line 797 
  ;
  
#line 797 
  nic->eeprom[(int)addr] = e100_eeprom_read(nic,& addr_len,(unsigned short)((int)addr));
  
#line 798 
  if ((int)addr < (int)nic->eeprom_wc + -1) 
#line 799 
                                            checksum = (unsigned short)((int)nic->eeprom[(int)addr] + (int)checksum); else ;
  
#line 796 
  addr = (u16)((int)addr + 1);
  ldv_47297: 
#line 797 
  ;
  
#line 796 
  if ((int)nic->eeprom_wc > (int)addr) 
#line 798 
                                       goto ldv_47296; else 
#line 801 
                                                            goto ldv_47298;
  ldv_47298: 
#line 802 
  ;
  
#line 804 
  if (47802U - (unsigned int)checksum != (unsigned int)nic->eeprom[(int)nic->eeprom_wc + -1]) {
    
#line 805 
    if ((nic->msg_enable & 2U) != 0U) 
#line 805 
                                      netdev_err((struct net_device const *)nic->netdev,"EEPROM corrupted\n"); else ;
    
#line 806 
    if (eeprom_bad_csum_allow == 0) {
      
#line 807 
      __retres = -11;
      
#line 807 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 810 
  __retres = 0;
  return_label: 
#line 810 
                return __retres;
}


#line 814  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_eeprom_save(struct nic *nic, u16 start, u16 count)
{
  int __retres;
  u16 addr;
  
#line 816 
  u16 addr_len = (unsigned short)8U;
  
#line 816 
  u16 checksum = (unsigned short)0U;
  
#line 819 
  e100_eeprom_read(nic,& addr_len,(unsigned short)0);
  
#line 820 
  nic->eeprom_wc = (unsigned short)(1 << (int)addr_len);
  
#line 822 
  if ((int)start + (int)count >= (int)nic->eeprom_wc) {
    
#line 823 
    __retres = -22;
    
#line 823 
    goto return_label;
  }
  else ;
  
#line 825 
  addr = start;
  
#line 825 
  goto ldv_47308;
  ldv_47307: 
#line 826 
  ;
  
#line 826 
  e100_eeprom_write(nic,(unsigned short)((int)addr_len),(unsigned short)((int)addr),(unsigned short)((int)nic->eeprom[(int)addr]));
  
#line 825 
  addr = (u16)((int)addr + 1);
  ldv_47308: 
#line 826 
  ;
  
#line 825 
  if ((int)addr < (int)start + (int)count) 
#line 827 
                                           goto ldv_47307; else 
#line 830 
                                                                goto ldv_47309;
  ldv_47309: 
#line 831 
  ;
  
#line 830 
  addr = (unsigned short)0U;
  
#line 830 
  goto ldv_47311;
  ldv_47310: 
#line 831 
  ;
  
#line 831 
  checksum = (unsigned short)((int)nic->eeprom[(int)addr] + (int)checksum);
  
#line 830 
  addr = (u16)((int)addr + 1);
  ldv_47311: 
#line 831 
  ;
  
#line 830 
  if ((int)addr < (int)nic->eeprom_wc + -1) 
#line 832 
                                            goto ldv_47310; else 
#line 835 
                                                                 goto ldv_47312;
  ldv_47312: 
#line 836 
  ;
  
#line 832 
  nic->eeprom[(int)nic->eeprom_wc + -1] = (unsigned short)(47802U - (unsigned int)checksum);
  
#line 833 
  e100_eeprom_write(nic,(unsigned short)((int)addr_len),(unsigned short)((int)((unsigned int)nic->eeprom_wc + 65535U)),(unsigned short)((int)nic->eeprom[(int)nic->eeprom_wc + -1]));
  
#line 836 
  __retres = 0;
  return_label: 
#line 836 
                return __retres;
}


#line 841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_exec_cmd(struct nic *nic, u8 cmd, dma_addr_t dma_addr)
{
  unsigned long flags;
  unsigned int i;
  unsigned int tmp;
  
#line 845 
  int err = 0;
  
#line 847 
  ldv___ldv_spin_lock_76(& nic->cmd_lock);
  
#line 850 
  i = 0U;
  
#line 850 
  goto ldv_47323;
  ldv_47322: 
#line 851 
  ;
  
#line 851 
  tmp = ioread8((void *)(& (nic->csr)->scb.cmd_lo));
  
#line 851 
  if ((long)(tmp == 0U) != 0L) 
#line 852 
                               goto ldv_47321; else ;
  
#line 853 
  cpu_relax();
  
#line 854 
  if ((long)(i > 20U) != 0L) 
#line 855 
                             __const_udelay(21475UL); else ;
  
#line 850 
  i += 1U;
  ldv_47323: 
#line 851 
  ;
  
#line 850 
  if (i <= 19999U) 
#line 852 
                   goto ldv_47322; else 
#line 855 
                                        goto ldv_47321;
  ldv_47321: 
#line 856 
  ;
  
#line 857 
  if ((long)(i == 20000U) != 0L) {
    
#line 858 
    err = -11;
    
#line 859 
    goto err_unlock;
  }
  else ;
  
#line 862 
  if ((long)((unsigned int)cmd != 32U) != 0L) 
#line 863 
                                              iowrite32((unsigned int)dma_addr,(void *)(& (nic->csr)->scb.gen_ptr)); else ;
  
#line 864 
  iowrite8((unsigned char)((int)cmd),(void *)(& (nic->csr)->scb.cmd_lo));
  err_unlock: 
#line 866 
  ;
  
#line 867 
  ldv_spin_unlock_irqrestore_77(& nic->cmd_lock,flags);
  
#line 869 
  return err;
}


#line 872  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_exec_cb(struct nic *nic, struct sk_buff *skb, int (*cb_prepare)(struct nic *, struct cb *, struct sk_buff *))
{
  struct cb *cb;
  unsigned long flags;
  int err;
  int tmp;
  
#line 879 
  ldv___ldv_spin_lock_78(& nic->cb_lock);
  
#line 881 
  if ((long)(nic->cbs_avail == 0U) != 0L) {
    
#line 882 
    err = -12;
    
#line 883 
    goto err_unlock;
  }
  else ;
  
#line 886 
  cb = nic->cb_to_use;
  
#line 887 
  nic->cb_to_use = cb->next;
  
#line 888 
  nic->cbs_avail -= 1U;
  
#line 889 
  cb->skb = skb;
  
#line 891 
  err = (*cb_prepare)(nic,cb,skb);
  
#line 892 
  if (err != 0) 
#line 893 
                goto err_unlock; else ;
  
#line 895 
  if ((long)(nic->cbs_avail == 0U) != 0L) 
#line 896 
                                          err = -28; else ;
  
#line 901 
  cb->command = (unsigned short)((unsigned int)cb->command | 16384U);
  
#line 902 
  ldv_inline_asm();
  
#line 903 
  (cb->prev)->command = (unsigned short)((unsigned int)(cb->prev)->command & 49151U);
  
#line 905 
  goto ldv_47339;
  ldv_47338: 
#line 906 
  ;
  
#line 906 
  tmp = e100_exec_cmd(nic,(unsigned char)((int)((unsigned char)nic->cuc_cmd)),(nic->cb_to_send)->dma_addr);
  
#line 906 
  if ((long)(tmp != 0) != 0L) {
    
#line 913 
    if (err == -28) 
#line 915 
                    ldv_schedule_work_79(& nic->tx_timeout_task); else ;
    
#line 917 
    goto ldv_47337;
  }
  else {
    
#line 919 
    nic->cuc_cmd = cuc_resume;
    
#line 920 
    nic->cb_to_send = (nic->cb_to_send)->next;
  }
  ldv_47339: 
#line 922 
  ;
  
#line 905 
  if (nic->cb_to_send != nic->cb_to_use) 
#line 907 
                                         goto ldv_47338; else 
#line 910 
                                                              goto ldv_47337;
  ldv_47337: 
#line 911 
  ;
  err_unlock: 
#line 924 
  ;
  
#line 925 
  ldv_spin_unlock_irqrestore_80(& nic->cb_lock,flags);
  
#line 927 
  return err;
}


#line 930  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int mdio_read(struct net_device *netdev, int addr, int reg)
{
  int __retres;
  u16 tmp_0;
  
#line 932 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 933 
  tmp_0 = (*(nic->mdio_ctrl))(nic,(unsigned int)addr,134217728U,(unsigned int)reg,(unsigned short)0);
  
#line 933 
  __retres = (int)tmp_0;
  
#line 933 
  return __retres;
}


#line 936  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void mdio_write(struct net_device *netdev, int addr, int reg, int data)
{
  
#line 938 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 940 
  (*(nic->mdio_ctrl))(nic,(unsigned int)addr,67108864U,(unsigned int)reg,(unsigned short)((int)((unsigned short)data)));
  
#line 941 
  return;
}


#line 944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static u16 mdio_ctrl_hw(struct nic *nic, u32 addr, u32 dir, u32 reg, u16 data)
{
  u16 __retres;
  unsigned int i;
  unsigned long flags;
  unsigned int tmp;
  
#line 946 
  u32 data_out = 0U;
  
#line 957 
  ldv___ldv_spin_lock_81(& nic->mdio_lock);
  
#line 958 
  i = 100U;
  
#line 958 
  goto ldv_47365;
  ldv_47364: 
#line 959 
  ;
  
#line 959 
  tmp = ioread32((void *)(& (nic->csr)->mdi_ctrl));
  
#line 959 
  if ((tmp & 268435456U) != 0U) 
#line 960 
                                goto ldv_47363; else ;
  
#line 961 
  __const_udelay(85900UL);
  
#line 958 
  i -= 1U;
  ldv_47365: 
#line 959 
  ;
  
#line 958 
  if (i != 0U) 
#line 960 
               goto ldv_47364; else 
#line 963 
                                    goto ldv_47363;
  ldv_47363: 
#line 964 
  ;
  
#line 963 
  if ((long)(i == 0U) != 0L) {
    
#line 964 
    netdev_err((struct net_device const *)nic->netdev,"e100.mdio_ctrl won\'t go Ready\n");
    
#line 965 
    ldv_spin_unlock_irqrestore_82(& nic->mdio_lock,flags);
    
#line 966 
    __retres = (unsigned short)0U;
    
#line 966 
    goto return_label;
  }
  else ;
  
#line 968 
  iowrite32((((reg << 16) | (addr << 21)) | dir) | (unsigned int)data,(void *)(& (nic->csr)->mdi_ctrl));
  
#line 970 
  i = 0U;
  
#line 970 
  goto ldv_47368;
  ldv_47367: 
#line 971 
  ;
  
#line 971 
  __const_udelay(85900UL);
  
#line 972 
  data_out = ioread32((void *)(& (nic->csr)->mdi_ctrl));
  
#line 972 
  if ((data_out & 268435456U) != 0U) 
#line 973 
                                     goto ldv_47366; else ;
  
#line 970 
  i += 1U;
  ldv_47368: 
#line 971 
  ;
  
#line 970 
  if (i <= 99U) 
#line 972 
                goto ldv_47367; else 
#line 975 
                                     goto ldv_47366;
  ldv_47366: 
#line 976 
  ;
  
#line 975 
  ldv_spin_unlock_irqrestore_83(& nic->mdio_lock,flags);
  
#line 976 
  if ((nic->msg_enable & 8192U) != 0U) {
    char *tmp_0;
    
#line 976 
    ;
    
#line 976 
    ;
    
#line 976 
    ;
    
#line 976 
    ;
    
#line 976 
    if (dir == 134217728U) 
#line 976 
                           tmp_0 = (char *)"READ"; else 
#line 976 
                                                        tmp_0 = (char *)"WRITE";
    
#line 976 
    ;
    
#line 976 
    netdev_printk("\001",(struct net_device const *)nic->netdev,"%s:addr=%d, reg=%d, data_in=0x%04X, data_out=0x%04X\n",tmp_0,addr,reg,(int)data,data_out);
  }
  else ;
  
#line 980 
  __retres = (unsigned short)data_out;
  return_label: 
#line 980 
                return __retres;
}


#line 984  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static u16 mdio_ctrl_phy_82552_v(struct nic *nic, u32 addr, u32 dir, u32 reg, u16 data)
{
  u16 tmp_0;
  
#line 990 
  if (reg == 0U && dir == 67108864U) {
    
#line 991 
    if (((int)data & 4608) != 0) {
      int tmp;
      
#line 992 
      tmp = mdio_read(nic->netdev,nic->mii.phy_id,4);
      
#line 992 
      u16 advert = (unsigned short)tmp;
      
#line 999 
      if (((int)advert & 256) != 0) 
#line 1000 
                                    data = (unsigned short)((unsigned int)data | 8448U);
      else 
        
#line 1001 
        if (((int)advert & 128) != 0) 
#line 1002 
                                      data = (unsigned short)((unsigned int)data | 8192U); else ;
    }
    else ;
  }
  else ;
  
#line 1005 
  tmp_0 = mdio_ctrl_hw(nic,addr,dir,reg,(unsigned short)((int)data));
  
#line 1005 
  return tmp_0;
}


#line 1014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static u16 mdio_ctrl_phy_mii_emulated(struct nic *nic, u32 addr, u32 dir, u32 reg, u16 data)
{
  u16 __retres;
  
#line 1024 
  if (dir == 134217728U) 
    
#line 1025 
    switch (reg) {
      case (u32)0: 
#line 1026 
      ;
      
#line 1028 
      __retres = (unsigned short)4352U;
      
#line 1028 
      goto return_label;
      case (u32)1: 
#line 1030 
      ;
      
#line 1031 
      __retres = (unsigned short)4108U;
      
#line 1031 
      goto return_label;
      case (u32)4: 
#line 1034 
      ;
      
#line 1036 
      __retres = (unsigned short)96U;
      
#line 1036 
      goto return_label;
      default: 
#line 1038 
      ;
      
#line 1039 
      if ((nic->msg_enable & 8192U) != 0U) {
        char *tmp;
        
#line 1039 
        ;
        
#line 1039 
        ;
        
#line 1039 
        ;
        
#line 1039 
        if (dir == 134217728U) 
#line 1039 
                               tmp = (char *)"READ"; else 
#line 1039 
                                                          tmp = (char *)"WRITE";
        
#line 1039 
        ;
        
#line 1039 
        netdev_printk("\001",(struct net_device const *)nic->netdev,"%s:addr=%d, reg=%d, data=0x%04X: unimplemented emulation!\n",tmp,addr,reg,(int)data);
      }
      else ;
      
#line 1043 
      __retres = (unsigned short)65535U;
      
#line 1043 
      goto return_label;
    }
  else 
    
#line 1046 
    switch (reg) {
      default: 
#line 1047 
      ;
      
#line 1048 
      if ((nic->msg_enable & 8192U) != 0U) {
        char *tmp_0;
        
#line 1048 
        ;
        
#line 1048 
        ;
        
#line 1048 
        ;
        
#line 1048 
        if (dir == 134217728U) 
#line 1048 
                               tmp_0 = (char *)"READ"; else 
#line 1048 
                                                            tmp_0 = (char *)"WRITE";
        
#line 1048 
        ;
        
#line 1048 
        netdev_printk("\001",(struct net_device const *)nic->netdev,"%s:addr=%d, reg=%d, data=0x%04X: unimplemented emulation!\n",tmp_0,addr,reg,(int)data);
      }
      else ;
      
#line 1052 
      __retres = (unsigned short)65535U;
      
#line 1052 
      goto return_label;
    }
  return_label: 
#line 1024 
                return __retres;
}


#line 1056  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
__inline static int e100_phy_supports_mii(struct nic *nic)
{
  int __retres;
  
#line 1061 
  __retres = nic->mdio_ctrl != & mdio_ctrl_phy_mii_emulated;
  
#line 1061 
  return __retres;
}


#line 1064  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_defaults(struct nic *nic)
{
  int tmp;
  int tmp_0;
  
#line 1066 
  struct param_range rfds = {.min = 16U, .max = 256U, .count = 256U};
  
#line 1067 
  struct param_range cbs = {.min = 64U, .max = 256U, .count = 128U};
  
#line 1070 
  if (((unsigned int)nic->flags & 1U) == 0U) 
#line 1070 
                                             tmp = (int)(nic->pdev)->revision; else 
                                                                    
#line 1070 
                                                                    tmp = 8;
  
#line 1070 
  nic->mac = (enum mac)tmp;
  
#line 1071 
  if (nic->mac == (unsigned int)mac_unknown) 
#line 1072 
                                             nic->mac = mac_82557_D100_A; else ;
  
#line 1074 
  nic->params.rfds = rfds;
  
#line 1075 
  nic->params.cbs = cbs;
  
#line 1078 
  nic->tx_threshold = (unsigned char)224U;
  
#line 1081 
  if (nic->mac > (unsigned int)3) 
#line 1081 
                                  tmp_0 = 7948; else 
#line 1081 
                                                     tmp_0 = 8204;
  
#line 1081 
  nic->tx_command = (unsigned short)tmp_0;
  
#line 1085 
  nic->blank_rfd.command = (unsigned short)0U;
  
#line 1086 
  nic->blank_rfd.rbd = 4294967295U;
  
#line 1087 
  nic->blank_rfd.size = (unsigned short)1522U;
  
#line 1090 
  nic->mii.phy_id_mask = 31;
  
#line 1091 
  nic->mii.reg_num_mask = 31;
  
#line 1092 
  nic->mii.dev = nic->netdev;
  
#line 1093 
  nic->mii.mdio_read = & mdio_read;
  
#line 1094 
  nic->mii.mdio_write = & mdio_write;
  
#line 1095 
  return;
}


#line 1097  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_configure(struct nic *nic, struct cb *cb, struct sk_buff *skb)
{
  int __retres;
  int tmp;
  bool tmp_0;
  
#line 1099 
  struct config *config = & cb->u.config;
  
#line 1100 
  u8 *c = (u8 *)config;
  
#line 1101 
  struct net_device *netdev = nic->netdev;
  
#line 1103 
  cb->command = (unsigned short)2U;
  
#line 1105 
  memset((void *)config,0,32UL);
  
#line 1107 
  config->byte_count = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))))22U;
  
#line 1108 
  config->rx_fifo_limit = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))8U;
  
#line 1109 
  config->direct_rx_dma = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1110 
  config->standard_tcb = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1111 
  config->standard_stat_counter = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1112 
  config->rx_discard_short_frames = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1113 
  config->tx_underrun_retry = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))3U;
  
#line 1114 
  tmp = e100_phy_supports_mii(nic);
  
#line 1114 
  if (tmp != 0) 
#line 1115 
                config->mii_mode = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1116 
  config->pad10 = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))6U;
  
#line 1117 
  config->no_source_addr_insertion = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1118 
  config->preamble_length = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))2U;
  
#line 1119 
  config->ifs = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))))6U;
  
#line 1120 
  config->ip_addr_hi = (unsigned char)242U;
  
#line 1121 
  config->pad15_1 = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1122 
  config->pad15_2 = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1123 
  config->crs_or_cdt = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  
#line 1124 
  config->fc_delay_hi = (unsigned char)64U;
  
#line 1125 
  config->tx_padding = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1126 
  config->fc_priority_threshold = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))7U;
  
#line 1127 
  config->pad18 = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1128 
  config->full_duplex_pin = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1129 
  config->pad20_1 = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))))31U;
  
#line 1130 
  config->fc_priority_location = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  
#line 1131 
  config->pad21_1 = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))))5U;
  
#line 1133 
  config->adaptive_ifs = nic->adaptive_ifs;
  
#line 1134 
  config->loopback = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))nic->loopback;
  
#line 1136 
  if ((unsigned int)*((unsigned char *)(& nic->mii) + 16UL) != 0U && (unsigned int)*((unsigned char *)(& nic->mii) + 16UL) != 0U) 
    
#line 1137 
    config->full_duplex_force = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1139 
  if (((unsigned int)nic->flags & 2U) != 0U || nic->loopback != (unsigned int)lb_none) {
    
#line 1140 
    config->rx_save_bad_frames = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1141 
    config->rx_discard_short_frames = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
    
#line 1142 
    config->promiscuous_mode = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  }
  else ;
  
#line 1145 
  if ((long)((netdev->features & 137438953472ULL) != 0ULL) != 0L) 
#line 1146 
                                                                  config->rx_crc_transfer = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1148 
  if (((unsigned int)nic->flags & 4U) != 0U) 
#line 1149 
                                             config->multicast_all = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1152 
  tmp_0 = netif_running((struct net_device const *)nic->netdev);
  
#line 1152 
  if ((int)tmp_0 != 0) 
#line 1153 
                       config->magic_packet_disable = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
  else 
    
#line 1152 
    if (((unsigned int)nic->flags & 8U) == 0U) 
#line 1153 
                                               config->magic_packet_disable = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U; else ;
  
#line 1155 
  if (nic->mac > (unsigned int)3) {
    
#line 1156 
    config->fc_disable = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1157 
    config->mwi_enable = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1158 
    config->standard_tcb = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
    
#line 1159 
    config->rx_long_ok = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1160 
    if (nic->mac > (unsigned int)7) {
      
#line 1161 
      config->tno_intr = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
      
#line 1163 
      if (nic->mac > (unsigned int)mac_82551_F) {
        
#line 1164 
        config->byte_count = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(6))))32U;
        
#line 1165 
        config->rx_d102_mode = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
      }
      else ;
    }
    else 
#line 1168 
         config->standard_stat_counter = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  }
  else ;
  
#line 1172 
  if ((netdev->features & 274877906944ULL) != 0ULL) {
    
#line 1173 
    config->rx_save_overruns = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1174 
    config->rx_save_bad_frames = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))1U;
    
#line 1175 
    config->rx_discard_short_frames = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))))0U;
  }
  else ;
  
#line 1178 
  if ((nic->msg_enable & 8192U) != 0U) 
#line 1178 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"[00-07]=%8ph\n",c); else ;
  
#line 1180 
  if ((nic->msg_enable & 8192U) != 0U) 
#line 1180 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"[08-15]=%8ph\n",c + 8U); else ;
  
#line 1182 
  if ((nic->msg_enable & 8192U) != 0U) 
#line 1182 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"[16-23]=%8ph\n",c + 16U); else ;
  
#line 1184 
  __retres = 0;
  
#line 1184 
  return __retres;
}


#line 1247  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static struct firmware const *e100_request_firmware(struct nic *nic)
{
  struct firmware const *__retres;
  char const *fw_name;
  u8 timer;
  u8 bundle;
  u8 min_size;
  
#line 1250 
  struct firmware const *fw = nic->fw;
  
#line 1252 
  int err = 0;
  
#line 1253 
  bool required = (_Bool)0;
  
#line 1256 
  if (((unsigned int)nic->flags & 1U) != 0U) {
    
#line 1257 
    __retres = (struct firmware const *)0;
    
#line 1257 
    goto return_label;
  }
  else ;
  
#line 1272 
  if (nic->mac == (unsigned int)mac_82559_D101M) 
#line 1273 
                                                 fw_name = "e100/d101m_ucode.bin";
  else 
    
#line 1274 
    if (nic->mac == (unsigned int)mac_82559_D101S) 
#line 1275 
                                                   fw_name = "e100/d101s_ucode.bin";
    else 
      
#line 1276 
      if ((unsigned int)nic->mac + 4294967281U <= 1U) {
        
#line 1277 
        fw_name = "e100/d102e_ucode.bin";
        
#line 1278 
        required = (_Bool)1;
      }
      else {
        
#line 1280 
        __retres = (struct firmware const *)0;
        
#line 1280 
        goto return_label;
      }
  
#line 1288 
  if (fw == (struct firmware const *)0) 
#line 1289 
                                        err = request_firmware(& fw,fw_name,& (nic->pdev)->dev); else ;
  
#line 1291 
  if (err != 0) 
    
#line 1292 
    if ((int)required != 0) {
      struct firmware const *tmp;
      
#line 1293 
      if ((nic->msg_enable & 2U) != 0U) 
#line 1293 
                                        netdev_err((struct net_device const *)nic->netdev,"Failed to load firmware \"%s\": %d\n",fw_name,err); else ;
      
#line 1296 
      tmp = (struct firmware const *)ERR_PTR((long)err);
      
#line 1296 
      __retres = tmp;
      
#line 1296 
      goto return_label;
    }
    else {
      
#line 1298 
      if ((nic->msg_enable & 2U) != 0U) 
#line 1298 
                                        netdev_info((struct net_device const *)nic->netdev,"CPUSaver disabled. Needs \"%s\": %d\n",fw_name,err); else ;
      
#line 1301 
      __retres = (struct firmware const *)0;
      
#line 1301 
      goto return_label;
    }
  else ;
  
#line 1307 
  if (fw->size != 539UL) {
    struct firmware const *tmp_0;
    
#line 1308 
    if ((nic->msg_enable & 2U) != 0U) 
#line 1308 
                                      netdev_err((struct net_device const *)nic->netdev,"Firmware \"%s\" has wrong size %zu\n",fw_name,fw->size); else ;
    
#line 1311 
    release_firmware(fw);
    
#line 1312 
    tmp_0 = (struct firmware const *)ERR_PTR(-22L);
    
#line 1312 
    __retres = tmp_0;
    
#line 1312 
    goto return_label;
  }
  else ;
  
#line 1316 
  timer = *(fw->data + 536U);
  
#line 1317 
  bundle = *(fw->data + 537U);
  
#line 1318 
  min_size = *(fw->data + 538U);
  
#line 1320 
  if (((unsigned int)timer > 133U || (unsigned int)bundle > 133U) || (unsigned int)min_size > 133U) {
    struct firmware const *tmp_1;
    
#line 1322 
    if ((nic->msg_enable & 2U) != 0U) 
#line 1322 
                                      netdev_err((struct net_device const *)nic->netdev,"\"%s\" has bogus offset values (0x%x,0x%x,0x%x)\n",fw_name,(int)timer,(int)bundle,(int)min_size); else ;
    
#line 1325 
    release_firmware(fw);
    
#line 1326 
    tmp_1 = (struct firmware const *)ERR_PTR(-22L);
    
#line 1326 
    __retres = tmp_1;
    
#line 1326 
    goto return_label;
  }
  else ;
  
#line 1331 
  nic->fw = fw;
  
#line 1332 
  __retres = fw;
  return_label: 
#line 1332 
                return __retres;
}


#line 1335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_setup_ucode(struct nic *nic, struct cb *cb, struct sk_buff *skb)
{
  int __retres;
  u8 timer;
  u8 bundle;
  u8 min_size;
  
#line 1338 
  struct firmware const *fw = (struct firmware const *)skb;
  
#line 1343 
  cb->skb = (struct sk_buff *)0;
  
#line 1346 
  memcpy((void *)(& cb->u.ucode),(void const *)fw->data,536UL);
  
#line 1349 
  timer = *(fw->data + 536U);
  
#line 1350 
  bundle = *(fw->data + 537U);
  
#line 1351 
  min_size = *(fw->data + 538U);
  
#line 1354 
  cb->u.ucode[(int)timer] &= 4294901760U;
  
#line 1355 
  cb->u.ucode[(int)timer] |= 1536U;
  
#line 1356 
  cb->u.ucode[(int)bundle] &= 4294901760U;
  
#line 1357 
  cb->u.ucode[(int)bundle] |= 6U;
  
#line 1358 
  cb->u.ucode[(int)min_size] &= 4294901760U;
  
#line 1359 
  cb->u.ucode[(int)min_size] |= 65535U;
  
#line 1361 
  cb->command = (unsigned short)32773U;
  
#line 1362 
  __retres = 0;
  
#line 1362 
  return __retres;
}


#line 1365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
__inline static int e100_load_ucode_wait(struct nic *nic)
{
  int __retres;
  struct firmware const *fw;
  
#line 1368 
  int err = 0;
  
#line 1368 
  int counter = 50;
  
#line 1369 
  struct cb *cb = nic->cb_to_clean;
  
#line 1371 
  fw = e100_request_firmware(nic);
  
#line 1373 
  if (fw == (struct firmware const *)0) 
#line 1373 
                                        goto _LOR;
  else {
    bool tmp_0;
    
#line 1373 
    tmp_0 = IS_ERR((void const *)fw);
    
#line 1373 
    if ((int)tmp_0 != 0) {
      long tmp;
      _LOR: 
#line 1374 
      tmp = PTR_ERR((void const *)fw);
      
#line 1374 
      __retres = (int)tmp;
      
#line 1374 
      goto return_label;
    }
    else ;
  }
  
#line 1376 
  err = e100_exec_cb(nic,(struct sk_buff *)fw,& e100_setup_ucode);
  
#line 1376 
  if (err != 0) {
    
#line 1377 
    if ((nic->msg_enable & 2U) != 0U) 
#line 1377 
                                      netdev_err((struct net_device const *)nic->netdev,"ucode cmd failed with error %d\n",err); else ;
  }
  else ;
  
#line 1381 
  nic->cuc_cmd = cuc_start;
  
#line 1384 
  e100_write_flush(nic);
  
#line 1385 
  __const_udelay(42950UL);
  
#line 1388 
  goto ldv_47433;
  ldv_47432: 
#line 1389 
  ;
  
#line 1389 
  msleep(10U);
  
#line 1390 
  counter -= 1;
  
#line 1390 
  if (counter == 0) 
#line 1390 
                    goto ldv_47431; else ;
  ldv_47433: 
#line 1391 
  ;
  
#line 1388 
  if ((int)cb->status >= 0) 
#line 1390 
                            goto ldv_47432; else 
#line 1393 
                                                 goto ldv_47431;
  ldv_47431: 
#line 1394 
  ;
  
#line 1394 
  iowrite8((unsigned char)255,(void *)(& (nic->csr)->scb.stat_ack));
  
#line 1397 
  if (counter == 0 || ((int)cb->status & 8192) == 0) {
    
#line 1398 
    if ((nic->msg_enable & 2U) != 0U) 
#line 1398 
                                      netdev_err((struct net_device const *)nic->netdev,"ucode load failed\n"); else ;
    
#line 1399 
    err = -1;
  }
  else ;
  
#line 1402 
  __retres = err;
  return_label: 
#line 1402 
                return __retres;
}


#line 1405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_setup_iaaddr(struct nic *nic, struct cb *cb, struct sk_buff *skb)
{
  int __retres;
  
#line 1408 
  cb->command = (unsigned short)1U;
  
#line 1409 
  memcpy((void *)(& cb->u.iaaddr),(void const *)(nic->netdev)->dev_addr,6UL);
  
#line 1410 
  __retres = 0;
  
#line 1410 
  return __retres;
}


#line 1413  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_dump(struct nic *nic, struct cb *cb, struct sk_buff *skb)
{
  int __retres;
  
#line 1415 
  cb->command = (unsigned short)6U;
  
#line 1416 
  cb->u.dump_buffer_addr = (unsigned int)nic->dma_addr + 92U;
  
#line 1418 
  __retres = 0;
  
#line 1418 
  return __retres;
}


#line 1421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_phy_check_without_mii(struct nic *nic)
{
  u8 phy_type;
  int without_mii;
  
#line 1426 
  phy_type = (unsigned char)((unsigned int)((unsigned char)((int)nic->eeprom[6] >> 8)) & 15U);
  
#line 1428 
  switch ((int)phy_type) {
    case 0: 
#line 1429 
    ;
    case 3: 
#line 1430 
    ;
    case 6: 
#line 1431 
    ;
    
#line 1438 
    if ((nic->msg_enable & 2U) != 0U) 
#line 1438 
                                      netdev_info((struct net_device const *)nic->netdev,"found MII-less i82503 or 80c24 or other PHY\n"); else ;
    
#line 1441 
    nic->mdio_ctrl = & mdio_ctrl_phy_mii_emulated;
    
#line 1442 
    nic->mii.phy_id = 0;
    
#line 1448 
    without_mii = 1;
    
#line 1449 
    goto ldv_47452;
    default: 
#line 1450 
    ;
    
#line 1451 
    without_mii = 0;
    
#line 1452 
    goto ldv_47452;
  }
  ldv_47452: 
#line 1454 
  ;
  
#line 1454 
  return without_mii;
}


#line 1462  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_phy_init(struct nic *nic)
{
  int __retres;
  u32 addr;
  u16 bmcr;
  u16 stat;
  u16 id_lo;
  u16 id_hi;
  u16 cong;
  u32 tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_5;
  int tmp_6;
  
#line 1464 
  struct net_device *netdev = nic->netdev;
  
#line 1469 
  addr = 0U;
  
#line 1469 
  goto ldv_47466;
  ldv_47465: 
#line 1470 
  ;
  
#line 1470 
  if (addr != 0U) {
    u32 tmp;
    
#line 1470 
    if (addr != 1U) 
#line 1470 
                    tmp = addr; else 
#line 1470 
                                     tmp = 0U;
    
#line 1470 
    tmp_0 = tmp;
  }
  else 
#line 1470 
       tmp_0 = 1U;
  
#line 1470 
  nic->mii.phy_id = (int)tmp_0;
  
#line 1471 
  tmp_1 = mdio_read(netdev,nic->mii.phy_id,0);
  
#line 1471 
  bmcr = (unsigned short)tmp_1;
  
#line 1472 
  tmp_2 = mdio_read(netdev,nic->mii.phy_id,1);
  
#line 1472 
  stat = (unsigned short)tmp_2;
  
#line 1473 
  tmp_3 = mdio_read(netdev,nic->mii.phy_id,1);
  
#line 1473 
  stat = (unsigned short)tmp_3;
  
#line 1474 
  if ((unsigned int)bmcr != 65535U && ((unsigned int)stat != 0U || (unsigned int)bmcr != 0U)) 
    
#line 1475 
    goto ldv_47464; else ;
  
#line 1469 
  addr += 1U;
  ldv_47466: 
#line 1470 
  ;
  
#line 1469 
  if (addr <= 31U) 
#line 1471 
                   goto ldv_47465; else 
#line 1474 
                                        goto ldv_47464;
  ldv_47464: 
#line 1475 
  ;
  
#line 1477 
  if (addr == 32U) {
    int tmp_4;
    
#line 1482 
    tmp_4 = e100_phy_check_without_mii(nic);
    
#line 1482 
    if (tmp_4 != 0) {
      
#line 1483 
      __retres = 0;
      
#line 1483 
      goto return_label;
    }
    else {
      
#line 1486 
      if ((nic->msg_enable & 8192U) != 0U) 
#line 1486 
                                           netdev_err((struct net_device const *)nic->netdev,"Failed to locate any known PHY, aborting\n"); else ;
      
#line 1488 
      __retres = -11;
      
#line 1488 
      goto return_label;
    }
  }
  else 
    
#line 1491 
    if ((nic->msg_enable & 8192U) != 0U) 
#line 1491 
                                         netdev_printk("\001",(struct net_device const *)nic->netdev,"phy_addr = %d\n",nic->mii.phy_id); else ;
  
#line 1495 
  tmp_5 = mdio_read(netdev,nic->mii.phy_id,2);
  
#line 1495 
  id_lo = (unsigned short)tmp_5;
  
#line 1496 
  tmp_6 = mdio_read(netdev,nic->mii.phy_id,3);
  
#line 1496 
  id_hi = (unsigned short)tmp_6;
  
#line 1497 
  nic->phy = (enum phy)(((unsigned int)id_hi << 16) | (unsigned int)id_lo);
  
#line 1498 
  if ((nic->msg_enable & 8192U) != 0U) 
#line 1498 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"phy ID = 0x%08X\n",(unsigned int)nic->phy); else ;
  
#line 1502 
  addr = 0U;
  
#line 1502 
  goto ldv_47468;
  ldv_47467: 
#line 1503 
  ;
  
#line 1503 
  if ((unsigned int)nic->mii.phy_id != addr) 
#line 1504 
                                             mdio_write(netdev,(int)addr,0,1024);
  else 
    
#line 1505 
    if (nic->phy != phy_82552_v) {
      int tmp_7;
      
#line 1506 
      tmp_7 = mdio_read(netdev,(int)addr,0);
      
#line 1506 
      bmcr = (unsigned short)tmp_7;
      
#line 1507 
      mdio_write(netdev,(int)addr,0,(int)bmcr & -1025);
    }
    else ;
  
#line 1502 
  addr += 1U;
  ldv_47468: 
#line 1503 
  ;
  
#line 1502 
  if (addr <= 31U) 
#line 1504 
                   goto ldv_47467; else 
#line 1507 
                                        goto ldv_47469;
  ldv_47469: 
#line 1508 
  ;
  
#line 1516 
  if (nic->phy == phy_82552_v) 
#line 1517 
                               mdio_write(netdev,nic->mii.phy_id,0,(int)bmcr & -1025); else ;
  
#line 1522 
  if (((unsigned int)nic->phy & 4293984255U) == 1543512064U) {
    int tmp_8;
    
#line 1524 
    tmp_8 = mdio_read(netdev,nic->mii.phy_id,23);
    
#line 1524 
    cong = (unsigned short)tmp_8;
    
#line 1525 
    cong = (unsigned short)((unsigned int)cong | 1024U);
    
#line 1526 
    cong = (unsigned short)((unsigned int)cong & 65279U);
    
#line 1527 
    mdio_write(netdev,nic->mii.phy_id,23,(int)cong);
  }
  else ;
  
#line 1530 
  if (nic->phy == phy_82552_v) {
    int tmp_9;
    int tmp_10;
    
#line 1531 
    tmp_9 = mdio_read(netdev,nic->mii.phy_id,4);
    
#line 1531 
    u16 advert = (unsigned short)tmp_9;
    
#line 1534 
    nic->mdio_ctrl = & mdio_ctrl_phy_82552_v;
    
#line 1537 
    advert = (unsigned short)((unsigned int)advert | 3072U);
    
#line 1538 
    mdio_write(netdev,nic->mii.phy_id,4,(int)advert);
    
#line 1541 
    tmp_10 = mdio_read(netdev,nic->mii.phy_id,0);
    
#line 1541 
    bmcr = (unsigned short)tmp_10;
    
#line 1542 
    bmcr = (unsigned short)((unsigned int)bmcr | 32768U);
    
#line 1543 
    mdio_write(netdev,nic->mii.phy_id,0,(int)bmcr);
  }
  else 
    
#line 1544 
    if (nic->mac > (unsigned int)11) 
#line 1544 
                                     goto _LOR;
    else 
      
#line 1544 
      if (((unsigned int)nic->flags & 1U) != 0U) {
        int tmp_12;
        
#line 1544 
        tmp_12 = mdio_read(netdev,nic->mii.phy_id,27);
        
#line 1544 
        if ((tmp_12 & 32768) != 0) {
          
#line 1545 
          if (((int)nic->eeprom[3] & 128) != 0) {
            int tmp_11;
            _LOR: { /* sequence */
                    
#line 1548 
                    if ((unsigned int)*((unsigned char *)(& nic->mii) + 16UL) != 0U) 
                      
#line 1548 
                      tmp_11 = 0; else 
#line 1548 
                                       tmp_11 = 128;
                    
#line 1548 
                    ;
                    
#line 1548 
                    ;
                  }
            
#line 1548 
            mdio_write(netdev,nic->mii.phy_id,28,tmp_11);
          }
          else ;
        }
        else ;
      }
      else ;
  
#line 1552 
  __retres = 0;
  return_label: 
#line 1552 
                return __retres;
}


#line 1555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_hw_init(struct nic *nic)
{
  int __retres;
  int tmp;
  
#line 1557 
  int err = 0;
  
#line 1559 
  e100_hw_reset(nic);
  
#line 1561 
  if ((nic->msg_enable & 8192U) != 0U) 
#line 1561 
                                       netdev_err((struct net_device const *)nic->netdev,"e100_hw_init\n"); else ;
  
#line 1562 
  tmp = preempt_count();
  
#line 1562 
  if (((unsigned long)tmp & 2096896UL) == 0UL) {
    
#line 1562 
    err = e100_self_test(nic);
    
#line 1562 
    if (err != 0) {
      
#line 1563 
      __retres = err;
      
#line 1563 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1565 
  err = e100_phy_init(nic);
  
#line 1565 
  if (err != 0) {
    
#line 1566 
    __retres = err;
    
#line 1566 
    goto return_label;
  }
  else ;
  
#line 1567 
  err = e100_exec_cmd(nic,(unsigned char)96,0ULL);
  
#line 1567 
  if (err != 0) {
    
#line 1568 
    __retres = err;
    
#line 1568 
    goto return_label;
  }
  else ;
  
#line 1569 
  err = e100_exec_cmd(nic,(unsigned char)6,0ULL);
  
#line 1569 
  if (err != 0) {
    
#line 1570 
    __retres = err;
    
#line 1570 
    goto return_label;
  }
  else ;
  
#line 1571 
  err = e100_load_ucode_wait(nic);
  
#line 1571 
  if (err != 0) {
    
#line 1572 
    __retres = err;
    
#line 1572 
    goto return_label;
  }
  else ;
  
#line 1573 
  err = e100_exec_cb(nic,(struct sk_buff *)0,& e100_configure);
  
#line 1573 
  if (err != 0) {
    
#line 1574 
    __retres = err;
    
#line 1574 
    goto return_label;
  }
  else ;
  
#line 1575 
  err = e100_exec_cb(nic,(struct sk_buff *)0,& e100_setup_iaaddr);
  
#line 1575 
  if (err != 0) {
    
#line 1576 
    __retres = err;
    
#line 1576 
    goto return_label;
  }
  else ;
  
#line 1577 
  err = e100_exec_cmd(nic,(unsigned char)64,nic->dma_addr + 8ULL);
  
#line 1577 
  if (err != 0) {
    
#line 1579 
    __retres = err;
    
#line 1579 
    goto return_label;
  }
  else ;
  
#line 1580 
  err = e100_exec_cmd(nic,(unsigned char)112,0ULL);
  
#line 1580 
  if (err != 0) {
    
#line 1581 
    __retres = err;
    
#line 1581 
    goto return_label;
  }
  else ;
  
#line 1583 
  e100_disable_irq(nic);
  
#line 1585 
  __retres = 0;
  return_label: 
#line 1585 
                return __retres;
}


#line 1588  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_multi(struct nic *nic, struct cb *cb, struct sk_buff *skb)
{
  int __retres;
  struct netdev_hw_addr *ha;
  u16 i;
  int tmp_0;
  struct netdev_hw_addr *tmp_1;
  u16 tmp_2;
  struct netdev_hw_addr *tmp_3;
  
#line 1590 
  struct net_device *netdev = nic->netdev;
  {
    int tmp;
    
#line 1592 
    int _min1 = netdev->mc.count;
    
#line 1592 
    int _min2 = 64;
    
#line 1592 
    if (_min1 < _min2) 
#line 1592 
                       tmp = _min1; else 
#line 1592 
                                         tmp = _min2;
    
#line 1592 
    tmp_0 = tmp;
  }
  
#line 1592 
  u16 count = (unsigned short)tmp_0;
  
#line 1594 
  cb->command = (unsigned short)3U;
  
#line 1595 
  cb->u.multi.count = (unsigned short)((unsigned int)count * 6U);
  
#line 1596 
  i = (unsigned short)0U;
  {
    
#line 1597 
    struct list_head const *__mptr = (struct list_head const *)netdev->mc.list.next;
    
#line 1597 
    tmp_1 = (struct netdev_hw_addr *)__mptr;
  }
  
#line 1597 
  ha = tmp_1;
  
#line 1597 
  goto ldv_47493;
  ldv_47492: 
#line 1598 
  ;
  
#line 1598 
  if ((int)i == (int)count) 
#line 1599 
                            goto ldv_47491; else ;
  
#line 1600 
  ;
  
#line 1600 
  tmp_2 = i;
  
#line 1600 
  i = (u16)((int)i + 1);
  
#line 1600 
  ;
  
#line 1600 
  memcpy((void *)(& cb->u.multi.addr[(int)tmp_2 * 6]),(void const *)(& ha->addr),6UL);
  {
    
#line 1597 
    struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
    
#line 1597 
    tmp_3 = (struct netdev_hw_addr *)__mptr_0;
  }
  
#line 1597 
  ha = tmp_3;
  ldv_47493: 
#line 1599 
  ;
  
#line 1597 
  if (& ha->list != & netdev->mc.list) 
#line 1599 
                                       goto ldv_47492; else 
#line 1602 
                                                            goto ldv_47491;
  ldv_47491: 
#line 1603 
  ;
  
#line 1603 
  __retres = 0;
  
#line 1603 
  return __retres;
}


#line 1606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_set_multicast_list(struct net_device *netdev)
{
  
#line 1608 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 1610 
  if ((nic->msg_enable & 8192U) != 0U) 
#line 1610 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"mc_count=%d, flags=0x%04X\n",netdev->mc.count,netdev->flags); else ;
  
#line 1614 
  if ((netdev->flags & 256U) != 0U) 
#line 1615 
                                    nic->flags = (enum ldv_33170)((unsigned int)nic->flags | 2U); else 
                                                                    
#line 1617 
                                                                    nic->flags = (enum ldv_33170)((unsigned int)nic->flags & 4294967293U);
  
#line 1619 
  if ((netdev->flags & 512U) != 0U || netdev->mc.count > 64) 
#line 1621 
                                                             nic->flags = (enum ldv_33170)((unsigned int)nic->flags | 4U); else 
                                                                    
#line 1623 
                                                                    nic->flags = (enum ldv_33170)((unsigned int)nic->flags & 4294967291U);
  
#line 1625 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_configure);
  
#line 1626 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_multi);
  
#line 1627 
  return;
}


#line 1629  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_update_stats(struct nic *nic)
{
  __le32 *tmp_0;
  int tmp_1;
  
#line 1631 
  struct net_device *dev = nic->netdev;
  
#line 1632 
  struct net_device_stats *ns = & dev->stats;
  
#line 1633 
  struct stats *s = & (nic->mem)->stats;
  
#line 1634 
  if (nic->mac <= (unsigned int)3) 
#line 1634 
                                   tmp_0 = & s->fc_xmt_pause;
  else {
    __le32 *tmp;
    
#line 1634 
    if (nic->mac <= (unsigned int)7) 
#line 1634 
                                     tmp = (__le32 *)(& s->xmt_tco_frames); else 
                                                                    
#line 1634 
                                                                    tmp = & s->complete;
    
#line 1634 
    tmp_0 = tmp;
  }
  
#line 1634 
  __le32 *complete_0 = tmp_0;
  
#line 1642 
  if (*complete_0 == 40967U) {
    
#line 1643 
    *complete_0 = 0U;
    
#line 1644 
    nic->tx_frames = s->tx_good_frames;
    
#line 1645 
    nic->tx_collisions = s->tx_total_collisions;
    
#line 1646 
    ns->tx_aborted_errors += (unsigned long)s->tx_max_collisions;
    
#line 1647 
    ns->tx_window_errors += (unsigned long)s->tx_late_collisions;
    
#line 1648 
    ns->tx_carrier_errors += (unsigned long)s->tx_lost_crs;
    
#line 1649 
    ns->tx_fifo_errors += (unsigned long)s->tx_underruns;
    
#line 1650 
    ns->collisions += (unsigned long)nic->tx_collisions;
    
#line 1651 
    ns->tx_errors += (unsigned long)(s->tx_max_collisions + s->tx_lost_crs);
    
#line 1653 
    nic->rx_short_frame_errors += s->rx_short_frame_errors;
    
#line 1655 
    ns->rx_length_errors = (unsigned long)(nic->rx_short_frame_errors + nic->rx_over_length_errors);
    
#line 1657 
    ns->rx_crc_errors += (unsigned long)s->rx_crc_errors;
    
#line 1658 
    ns->rx_frame_errors += (unsigned long)s->rx_alignment_errors;
    
#line 1659 
    ns->rx_over_errors += (unsigned long)s->rx_overrun_errors;
    
#line 1660 
    ns->rx_fifo_errors += (unsigned long)s->rx_overrun_errors;
    
#line 1661 
    ns->rx_missed_errors += (unsigned long)s->rx_resource_errors;
    
#line 1662 
    ns->rx_errors += (unsigned long)(((s->rx_crc_errors + s->rx_alignment_errors) + s->rx_short_frame_errors) + s->rx_cdt_errors);
    
#line 1666 
    nic->tx_deferred += s->tx_deferred;
    
#line 1667 
    nic->tx_single_collisions += s->tx_single_collisions;
    
#line 1669 
    nic->tx_multiple_collisions += s->tx_multiple_collisions;
    
#line 1671 
    if (nic->mac > (unsigned int)3) {
      
#line 1672 
      nic->tx_fc_pause += s->fc_xmt_pause;
      
#line 1673 
      nic->rx_fc_pause += s->fc_rcv_pause;
      
#line 1674 
      nic->rx_fc_unsupported += s->fc_rcv_unsupported;
      
#line 1676 
      if (nic->mac > (unsigned int)7) {
        
#line 1677 
        nic->tx_tco_frames += (unsigned int)s->xmt_tco_frames;
        
#line 1679 
        nic->rx_tco_frames += (unsigned int)s->rcv_tco_frames;
      }
      else ;
    }
    else ;
  }
  else ;
  
#line 1686 
  tmp_1 = e100_exec_cmd(nic,(unsigned char)112,0ULL);
  
#line 1686 
  if (tmp_1 != 0) {
    
#line 1687 
    if ((nic->msg_enable & 128U) != 0U) 
#line 1687 
                                        netdev_printk("\001",(struct net_device const *)nic->netdev,"exec cuc_dump_reset failed\n"); else ;
  }
  else ;
  
#line 1688 
  return;
}


#line 1691  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_adjust_adaptive_ifs(struct nic *nic, int speed, int duplex)
{
  
#line 1696 
  if (duplex == 0) {
    int tmp;
    
#line 1697 
    u32 prev = (unsigned int)nic->adaptive_ifs;
    
#line 1698 
    if (speed == 100) 
#line 1698 
                      tmp = 1000; else 
#line 1698 
                                       tmp = 100;
    
#line 1698 
    u32 min_frames = (unsigned int)tmp;
    
#line 1700 
    if (nic->tx_frames / 32U < nic->tx_collisions && nic->tx_frames > min_frames) {
      
#line 1702 
      if ((unsigned int)nic->adaptive_ifs <= 59U) 
#line 1703 
                                                  nic->adaptive_ifs = (unsigned char)((unsigned int)nic->adaptive_ifs + 5U); else ;
    }
    else 
      
#line 1704 
      if (nic->tx_frames < min_frames) {
        
#line 1705 
        if ((unsigned int)nic->adaptive_ifs > 4U) 
#line 1706 
                                                  nic->adaptive_ifs = (unsigned char)((unsigned int)nic->adaptive_ifs + 251U); else ;
      }
      else ;
    
#line 1708 
    if ((unsigned int)nic->adaptive_ifs != prev) 
#line 1709 
                                                 e100_exec_cb(nic,(struct sk_buff *)0,& e100_configure); else ;
  }
  else ;
  
#line 1711 
  return;
}


#line 1713  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_watchdog(unsigned long data)
{
  u32 speed;
  int tmp_3;
  unsigned int tmp_6;
  unsigned long tmp_7;
  
#line 1715 
  struct nic *nic = (struct nic *)data;
  
#line 1716 
  struct ethtool_cmd cmd = {.cmd = 1U, .supported = 0U, .advertising = 0U, .speed = (unsigned short)0, .duplex = (unsigned char)0, .port = (unsigned char)0, .phy_address = (unsigned char)0, .transceiver = (unsigned char)0, .autoneg = (unsigned char)0, .mdio_support = (unsigned char)0, .maxtxpkt = 0U, .maxrxpkt = 0U, .speed_hi = (unsigned short)0, .eth_tp_mdix = (unsigned char)0, .eth_tp_mdix_ctrl = (unsigned char)0, .lp_advertising = 0U, .reserved = {0U, 0U}};
  
#line 1719 
  if ((nic->msg_enable & 8U) != 0U) 
#line 1719 
                                    netdev_printk("\001",(struct net_device const *)nic->netdev,"right now = %ld\n",jiffies); else ;
  
#line 1724 
  mii_ethtool_gset(& nic->mii,& cmd);
  
#line 1725 
  speed = ethtool_cmd_speed((struct ethtool_cmd const *)(& cmd));
  
#line 1727 
  tmp_3 = mii_link_ok(& nic->mii);
  
#line 1727 
  if (tmp_3 != 0) {
    int tmp_5;
    bool tmp_4;
    
#line 1727 
    tmp_4 = netif_carrier_ok((struct net_device const *)nic->netdev);
    
#line 1727 
    if (tmp_4) 
#line 1727 
               tmp_5 = 0; else 
#line 1727 
                               tmp_5 = 1;
    
#line 1727 
    if (tmp_5) {
      char *tmp;
      int tmp_0;
      
#line 1729 
      if ((unsigned int)cmd.duplex == 1U) 
#line 1729 
                                          tmp = (char *)"Full"; else 
                                                                  
#line 1729 
                                                                  tmp = (char *)"Half";
      
#line 1728 
      if (speed == 100U) 
#line 1728 
                         tmp_0 = 100; else 
#line 1728 
                                           tmp_0 = 10;
      
#line 1728 
      ;
      
#line 1728 
      netdev_info((struct net_device const *)nic->netdev,"NIC Link is Up %u Mbps %s Duplex\n",tmp_0,tmp);
    }
    else 
#line 1727 
         goto _LAND;
  }
  else {
    int tmp_1;
    _LAND: 
#line 1731 
    tmp_1 = mii_link_ok(& nic->mii);
    
#line 1731 
    if (tmp_1 == 0) {
      bool tmp_2;
      
#line 1731 
      tmp_2 = netif_carrier_ok((struct net_device const *)nic->netdev);
      
#line 1731 
      if ((int)tmp_2 != 0) 
#line 1732 
                           netdev_info((struct net_device const *)nic->netdev,"NIC Link is Down\n"); else ;
    }
    else ;
  }
  
#line 1735 
  mii_check_link(& nic->mii);
  
#line 1742 
  ldv_spin_lock_irq_84(& nic->cmd_lock);
  
#line 1743 
  ;
  
#line 1743 
  tmp_6 = ioread8((void *)(& (nic->csr)->scb.cmd_hi));
  
#line 1743 
  iowrite8((unsigned char)((int)((unsigned int)((unsigned char)tmp_6) | 2U)),(void *)(& (nic->csr)->scb.cmd_hi));
  
#line 1744 
  e100_write_flush(nic);
  
#line 1745 
  ldv_spin_unlock_irq_85(& nic->cmd_lock);
  
#line 1747 
  e100_update_stats(nic);
  
#line 1748 
  e100_adjust_adaptive_ifs(nic,(int)speed,(int)cmd.duplex);
  
#line 1750 
  if (nic->mac <= (unsigned int)mac_82557_D100_C) 
#line 1752 
                                                  e100_set_multicast_list(nic->netdev); else ;
  
#line 1754 
  if ((((unsigned int)nic->flags & 1U) != 0U && speed == 10U) && (unsigned int)cmd.duplex == 0U) 
    
#line 1756 
    nic->flags = (enum ldv_33170)((unsigned int)nic->flags | 16U); else 
                                                                    
#line 1758 
                                                                    nic->flags = (enum ldv_33170)((unsigned int)nic->flags & 4294967279U);
  
#line 1760 
  tmp_7 = round_jiffies(jiffies + 500UL);
  
#line 1760 
  ;
  
#line 1760 
  ldv_mod_timer_86(& nic->watchdog,tmp_7);
  
#line 1762 
  return;
}


#line 1764  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_xmit_prepare(struct nic *nic, struct cb *cb, struct sk_buff *skb)
{
  int __retres;
  dma_addr_t dma_addr;
  int tmp;
  
#line 1768 
  cb->command = nic->tx_command;
  
#line 1770 
  dma_addr = pci_map_single(nic->pdev,(void *)skb->data,(unsigned long)skb->len,1);
  
#line 1773 
  tmp = pci_dma_mapping_error(nic->pdev,dma_addr);
  
#line 1773 
  if (tmp != 0) {
    
#line 1774 
    __retres = -12;
    
#line 1774 
    goto return_label;
  }
  else ;
  
#line 1780 
  if ((long)((unsigned int)*((unsigned char *)skb + 146UL) != 0U) != 0L) 
    
#line 1781 
    cb->command = (unsigned short)((unsigned int)cb->command | 16U); else 
                                                                    
#line 1783 
                                                                    cb->command = (unsigned short)((unsigned int)cb->command & 65519U);
  
#line 1786 
  if ((nic->cbs_avail & 4294967280U) == nic->cbs_avail) 
#line 1787 
                                                        cb->command = (unsigned short)((unsigned int)cb->command | 8192U); else ;
  
#line 1788 
  cb->u.tcb.tbd_array = (unsigned int)cb->dma_addr + 16U;
  
#line 1789 
  cb->u.tcb.tcb_byte_count = (unsigned short)0U;
  
#line 1790 
  cb->u.tcb.threshold = nic->tx_threshold;
  
#line 1791 
  cb->u.tcb.tbd_count = (unsigned char)1U;
  
#line 1792 
  cb->u.tcb.tbd.buf_addr = (unsigned int)dma_addr;
  
#line 1793 
  cb->u.tcb.tbd.size = (unsigned short)skb->len;
  
#line 1794 
  skb_tx_timestamp(skb);
  
#line 1795 
  __retres = 0;
  return_label: 
#line 1795 
                return __retres;
}


#line 1798  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static netdev_tx_t e100_xmit_frame(struct sk_buff *skb, struct net_device *netdev)
{
  netdev_tx_t __retres;
  int err;
  
#line 1801 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 1804 
  if (((unsigned int)nic->flags & 16U) != 0U) {
    int tmp_0;
    
#line 1808 
    tmp_0 = e100_exec_cmd(nic,(unsigned char)0,0ULL);
    
#line 1808 
    if (tmp_0 != 0) {
      
#line 1809 
      if ((nic->msg_enable & 128U) != 0U) 
#line 1809 
                                          netdev_printk("\001",(struct net_device const *)nic->netdev,"exec cuc_nop failed\n"); else ;
    }
    else ;
    
#line 1811 
    __const_udelay(4295UL);
  }
  else ;
  
#line 1814 
  err = e100_exec_cb(nic,skb,& e100_xmit_prepare);
  
#line 1816 
  switch (err) {
    case -28: 
#line 1817 
    ;
    
#line 1819 
    if ((nic->msg_enable & 128U) != 0U) 
#line 1819 
                                        netdev_printk("\001",(struct net_device const *)nic->netdev,"No space for CB\n"); else ;
    
#line 1821 
    netif_stop_queue(netdev);
    
#line 1822 
    goto ldv_47531;
    case -12: 
#line 1823 
    ;
    
#line 1825 
    if ((nic->msg_enable & 128U) != 0U) 
#line 1825 
                                        netdev_printk("\001",(struct net_device const *)nic->netdev,"Out of Tx resources, returning skb\n"); else ;
    
#line 1827 
    netif_stop_queue(netdev);
    
#line 1828 
    __retres = NETDEV_TX_BUSY;
    
#line 1828 
    goto return_label;
  }
  ldv_47531: 
#line 1831 
  ;
  
#line 1831 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 1831 
                return __retres;
}


#line 1834  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_tx_clean(struct nic *nic)
{
  struct cb *cb;
  struct cb *tmp;
  
#line 1836 
  struct net_device *dev = nic->netdev;
  
#line 1838 
  int tx_cleaned = 0;
  
#line 1840 
  ldv_spin_lock_87(& nic->cb_lock);
  
#line 1843 
  cb = nic->cb_to_clean;
  
#line 1843 
  goto ldv_47540;
  ldv_47539: 
#line 1844 
  ;
  
#line 1845 
  ldv_inline_asm();
  
#line 1847 
  if ((nic->msg_enable & 1024U) != 0U) 
#line 1847 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"cb[%d]->status = 0x%04X\n",(int)((unsigned long)((long)cb - (long)nic->cbs) / 576UL),(int)cb->status); else ;
  
#line 1852 
  if ((long)(cb->skb != (struct sk_buff *)0) != 0L) {
    
#line 1853 
    dev->stats.tx_packets += 1UL;
    
#line 1854 
    dev->stats.tx_bytes += (unsigned long)(cb->skb)->len;
    
#line 1856 
    pci_unmap_single(nic->pdev,(unsigned long long)cb->u.tcb.tbd.buf_addr,(unsigned long)cb->u.tcb.tbd.size,1);
    
#line 1860 
    dev_kfree_skb_any(cb->skb);
    
#line 1861 
    cb->skb = (struct sk_buff *)0;
    
#line 1862 
    tx_cleaned = 1;
  }
  else ;
  
#line 1864 
  cb->status = (unsigned short)0U;
  
#line 1865 
  nic->cbs_avail += 1U;
  
#line 1845 
  tmp = cb->next;
  
#line 1845 
  nic->cb_to_clean = tmp;
  
#line 1845 
  cb = tmp;
  ldv_47540: 
#line 1846 
  ;
  
#line 1843 
  if ((int)cb->status < 0) 
#line 1846 
                           goto ldv_47539; else 
#line 1849 
                                                goto ldv_47541;
  ldv_47541: 
#line 1850 
  ;
  
#line 1868 
  ldv_spin_unlock_88(& nic->cb_lock);
  
#line 1871 
  if ((long)(tx_cleaned != 0) != 0L) {
    bool tmp_0;
    
#line 1871 
    tmp_0 = netif_queue_stopped((struct net_device const *)nic->netdev);
    
#line 1871 
    if ((long)((int)tmp_0 != 0) != 0L) 
#line 1872 
                                       netif_wake_queue(nic->netdev); else ;
  }
  else ;
  
#line 1874 
  return tx_cleaned;
}


#line 1877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_clean_cbs(struct nic *nic)
{
  struct cb *tmp_0;
  struct cb *tmp;
  
#line 1879 
  if (nic->cbs != (struct cb *)0) {
    
#line 1880 
    goto ldv_47547;
    ldv_47546: 
#line 1881 
    ;
    {
      
#line 1881 
      struct cb *cb = nic->cb_to_clean;
      
#line 1882 
      if (cb->skb != (struct sk_buff *)0) {
        
#line 1883 
        pci_unmap_single(nic->pdev,(unsigned long long)cb->u.tcb.tbd.buf_addr,(unsigned long)cb->u.tcb.tbd.size,1);
        
#line 1887 
        consume_skb(cb->skb);
      }
      else ;
      
#line 1889 
      nic->cb_to_clean = (nic->cb_to_clean)->next;
      
#line 1890 
      nic->cbs_avail += 1U;
    }
    ldv_47547: 
#line 1892 
    ;
    
#line 1880 
    if (nic->cbs_avail != nic->params.cbs.count) 
#line 1882 
                                                 goto ldv_47546; else 
                                                                   
#line 1885 
                                                                   goto ldv_47548;
    ldv_47548: 
#line 1886 
    ;
    
#line 1892 
    dma_pool_free(nic->cbs_pool,(void *)nic->cbs,nic->cbs_dma_addr);
    
#line 1893 
    nic->cbs = (struct cb *)0;
    
#line 1894 
    nic->cbs_avail = 0U;
  }
  else ;
  
#line 1896 
  nic->cuc_cmd = cuc_start;
  
#line 1897 
  tmp_0 = nic->cbs;
  
#line 1897 
  nic->cb_to_clean = tmp_0;
  
#line 1897 
  tmp = tmp_0;
  
#line 1897 
  nic->cb_to_send = tmp;
  
#line 1897 
  nic->cb_to_use = tmp;
  
#line 1899 
  return;
}


#line 1901  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_alloc_cbs(struct nic *nic)
{
  int __retres;
  struct cb *cb;
  unsigned int i;
  struct cb *tmp_0;
  struct cb *tmp;
  struct cb *tmp_3;
  struct cb *tmp_2;
  
#line 1904 
  unsigned int count = nic->params.cbs.count;
  
#line 1906 
  nic->cuc_cmd = cuc_start;
  
#line 1907 
  tmp_0 = (struct cb *)0;
  
#line 1907 
  nic->cb_to_clean = tmp_0;
  
#line 1907 
  tmp = tmp_0;
  
#line 1907 
  nic->cb_to_send = tmp;
  
#line 1907 
  nic->cb_to_use = tmp;
  
#line 1908 
  nic->cbs_avail = 0U;
  
#line 1910 
  nic->cbs = (struct cb *)dma_pool_alloc(nic->cbs_pool,208U,& nic->cbs_dma_addr);
  
#line 1912 
  if (nic->cbs == (struct cb *)0) {
    
#line 1913 
    __retres = -12;
    
#line 1913 
    goto return_label;
  }
  else ;
  
#line 1914 
  memset((void *)nic->cbs,0,(unsigned long)count * 576UL);
  
#line 1916 
  cb = nic->cbs;
  
#line 1916 
  i = 0U;
  
#line 1916 
  goto ldv_47556;
  ldv_47555: 
#line 1917 
  ;
  
#line 1917 
  if (i + 1U < count) 
#line 1917 
                      cb->next = cb + 1U; else 
#line 1917 
                                               cb->next = nic->cbs;
  
#line 1918 
  if (i == 0U) 
#line 1918 
               cb->prev = nic->cbs + ((unsigned long)count + 18446744073709551615U); else 
                                                                    
#line 1918 
                                                                    cb->prev = cb + 18446744073709551615U;
  
#line 1920 
  cb->dma_addr = nic->cbs_dma_addr + (unsigned long long)((unsigned long)i * 576UL);
  
#line 1921 
  cb->link = (unsigned int)nic->cbs_dma_addr + ((i + 1U) % count) * 576U;
  
#line 1916 
  cb += 1;
  
#line 1916 
  i += 1U;
  ldv_47556: 
#line 1917 
  ;
  
#line 1916 
  if (i < count) 
#line 1918 
                 goto ldv_47555; else 
#line 1921 
                                      goto ldv_47557;
  ldv_47557: 
#line 1922 
  ;
  
#line 1925 
  tmp_3 = nic->cbs;
  
#line 1925 
  nic->cb_to_clean = tmp_3;
  
#line 1925 
  tmp_2 = tmp_3;
  
#line 1925 
  nic->cb_to_send = tmp_2;
  
#line 1925 
  nic->cb_to_use = tmp_2;
  
#line 1926 
  nic->cbs_avail = count;
  
#line 1928 
  __retres = 0;
  return_label: 
#line 1928 
                return __retres;
}


#line 1931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
__inline static void e100_start_receiver(struct nic *nic, struct rx *rx)
{
  
#line 1933 
  if (nic->rxs == (struct rx *)0) 
#line 1933 
                                  goto return_label; else ;
  
#line 1934 
  if (nic->ru_running != RU_SUSPENDED) 
#line 1934 
                                       goto return_label; else ;
  
#line 1937 
  if (rx == (struct rx *)0) 
#line 1937 
                            rx = nic->rxs; else ;
  
#line 1940 
  if (rx->skb != (struct sk_buff *)0) {
    
#line 1941 
    e100_exec_cmd(nic,(unsigned char)1,rx->dma_addr);
    
#line 1942 
    nic->ru_running = RU_RUNNING;
  }
  else ;
  return_label: 
#line 1944 
                return;
}


#line 1947  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_rx_alloc_skb(struct nic *nic, struct rx *rx)
{
  int __retres;
  struct sk_buff *tmp;
  int tmp_0;
  
#line 1949 
  tmp = netdev_alloc_skb_ip_align(nic->netdev,1538U);
  
#line 1949 
  rx->skb = tmp;
  
#line 1949 
  if (tmp == (struct sk_buff *)0) {
    
#line 1950 
    __retres = -12;
    
#line 1950 
    goto return_label;
  }
  else ;
  
#line 1953 
  skb_copy_to_linear_data(rx->skb,(void const *)(& nic->blank_rfd),16U);
  
#line 1954 
  rx->dma_addr = pci_map_single(nic->pdev,(void *)(rx->skb)->data,1538UL,0);
  
#line 1957 
  tmp_0 = pci_dma_mapping_error(nic->pdev,rx->dma_addr);
  
#line 1957 
  if (tmp_0 != 0) {
    
#line 1958 
    dev_kfree_skb_any(rx->skb);
    
#line 1959 
    rx->skb = (struct sk_buff *)0;
    
#line 1960 
    rx->dma_addr = 0ULL;
    
#line 1961 
    __retres = -12;
    
#line 1961 
    goto return_label;
  }
  else ;
  
#line 1967 
  if ((rx->prev)->skb != (struct sk_buff *)0) {
    
#line 1968 
    struct rfd *prev_rfd = (struct rfd *)((rx->prev)->skb)->data;
    
#line 1969 
    put_unaligned_le32((unsigned int)rx->dma_addr,(void *)(& prev_rfd->link));
    
#line 1970 
    pci_dma_sync_single_for_device(nic->pdev,(rx->prev)->dma_addr,16UL,0);
  }
  else ;
  
#line 1974 
  __retres = 0;
  return_label: 
#line 1974 
                return __retres;
}


#line 1977  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_rx_indicate(struct nic *nic, struct rx *rx, unsigned int *work_done, unsigned int work_to_do)
{
  int __retres;
  u16 rfd_status;
  u16 actual_size;
  
#line 1980 
  struct net_device *dev = nic->netdev;
  
#line 1981 
  struct sk_buff *skb = rx->skb;
  
#line 1982 
  struct rfd *rfd = (struct rfd *)skb->data;
  
#line 1984 
  u16 fcs_pad = (unsigned short)0U;
  
#line 1986 
  if ((long)(work_done != (unsigned int *)0U) != 0L && (long)(*work_done >= work_to_do) != 0L) {
    
#line 1987 
    __retres = -11;
    
#line 1987 
    goto return_label;
  }
  else ;
  
#line 1990 
  pci_dma_sync_single_for_cpu(nic->pdev,rx->dma_addr,16UL,0);
  
#line 1992 
  rfd_status = rfd->status;
  
#line 1994 
  if ((nic->msg_enable & 2048U) != 0U) 
#line 1994 
                                       netdev_printk("\001",(struct net_device const *)nic->netdev,"status=0x%04X\n",(int)rfd_status); else ;
  
#line 1995 
  ldv_inline_asm();
  
#line 1999 
  if ((long)((int)rfd_status >= 0) != 0L) {
    
#line 2005 
    if ((int)rfd->command < 0 && nic->ru_running == RU_RUNNING) {
      unsigned int tmp;
      
#line 2008 
      tmp = ioread8((void *)(& (nic->csr)->scb.status));
      
#line 2008 
      if ((tmp & 8U) != 0U) 
#line 2009 
                            nic->ru_running = RU_SUSPENDED; else ;
    }
    else ;
    
#line 2010 
    pci_dma_sync_single_for_device(nic->pdev,rx->dma_addr,16UL,2);
    
#line 2013 
    __retres = -61;
    
#line 2013 
    goto return_label;
  }
  else ;
  
#line 2017 
  if ((long)((dev->features & 137438953472ULL) != 0ULL) != 0L) 
#line 2018 
                                                               fcs_pad = (unsigned short)4U; else ;
  
#line 2019 
  actual_size = (unsigned short)((unsigned int)rfd->actual_size & 16383U);
  
#line 2020 
  if ((long)((unsigned int)actual_size > 1522U) != 0L) 
#line 2021 
                                                       actual_size = (unsigned short)1522U; else ;
  
#line 2024 
  pci_unmap_single(nic->pdev,rx->dma_addr,1538UL,0);
  
#line 2033 
  if ((int)rfd->command < 0 && nic->ru_running == RU_RUNNING) {
    unsigned int tmp_0;
    
#line 2036 
    tmp_0 = ioread8((void *)(& (nic->csr)->scb.status));
    
#line 2036 
    if ((tmp_0 & 8U) != 0U) 
#line 2037 
                            nic->ru_running = RU_SUSPENDED; else ;
  }
  else ;
  
#line 2041 
  skb_reserve(skb,16);
  
#line 2042 
  skb_put(skb,(unsigned int)actual_size);
  
#line 2043 
  skb->protocol = eth_type_trans(skb,nic->netdev);
  
#line 2048 
  if ((long)((dev->features & 274877906944ULL) != 0ULL) != 0L) {
    
#line 2049 
    if ((int)actual_size > (int)fcs_pad + 1518) 
#line 2051 
                                                nic->rx_over_length_errors += 1U; else ;
    
#line 2052 
    goto process_skb;
  }
  else ;
  
#line 2055 
  if ((long)(((int)rfd_status & 8192) == 0) != 0L) 
#line 2057 
                                                   dev_kfree_skb_any(skb);
  else 
    
#line 2058 
    if ((int)actual_size > (int)fcs_pad + 1518) {
      
#line 2060 
      nic->rx_over_length_errors += 1U;
      
#line 2061 
      dev_kfree_skb_any(skb);
    }
    else {
      process_skb: 
#line 2063 
      ;
      
#line 2064 
      dev->stats.rx_packets += 1UL;
      
#line 2065 
      dev->stats.rx_bytes += (unsigned long)((int)actual_size - (int)fcs_pad);
      
#line 2066 
      netif_receive_skb(skb);
      
#line 2067 
      if (work_done != (unsigned int *)0U) 
#line 2068 
                                           *work_done += 1U; else ;
    }
  
#line 2071 
  rx->skb = (struct sk_buff *)0;
  
#line 2073 
  __retres = 0;
  return_label: 
#line 2073 
                return __retres;
}


#line 2076  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_rx_clean(struct nic *nic, unsigned int *work_done, unsigned int work_to_do)
{
  struct rx *rx;
  struct rx *old_before_last_rx;
  struct rx *new_before_last_rx;
  struct rfd *old_before_last_rfd;
  struct rfd *new_before_last_rfd;
  struct rx *tmp;
  int tmp_0;
  struct rx *tmp_1;
  
#line 2080 
  int restart_required = 0;
  
#line 2080 
  int err = 0;
  
#line 2085 
  rx = nic->rx_to_clean;
  
#line 2085 
  goto ldv_47594;
  ldv_47593: 
#line 2086 
  ;
  
#line 2086 
  err = e100_rx_indicate(nic,rx,work_done,work_to_do);
  
#line 2088 
  if (err == -11 || err == -61) 
#line 2089 
                                goto ldv_47592; else ;
  
#line 2085 
  tmp = rx->next;
  
#line 2085 
  nic->rx_to_clean = tmp;
  
#line 2085 
  rx = tmp;
  ldv_47594: 
#line 2086 
  ;
  
#line 2085 
  if (rx->skb != (struct sk_buff *)0) 
#line 2087 
                                      goto ldv_47593; else 
#line 2090 
                                                           goto ldv_47592;
  ldv_47592: 
#line 2091 
  ;
  
#line 2099 
  if (err != -11 && nic->ru_running == RU_SUSPENDED) 
#line 2100 
                                                     restart_required = 1; else ;
  
#line 2102 
  old_before_last_rx = ((nic->rx_to_use)->prev)->prev;
  
#line 2103 
  old_before_last_rfd = (struct rfd *)(old_before_last_rx->skb)->data;
  
#line 2106 
  rx = nic->rx_to_use;
  
#line 2106 
  goto ldv_47597;
  ldv_47596: 
#line 2107 
  ;
  
#line 2107 
  tmp_0 = e100_rx_alloc_skb(nic,rx);
  
#line 2107 
  if ((long)(tmp_0 != 0) != 0L) 
#line 2108 
                                goto ldv_47595; else ;
  
#line 2106 
  tmp_1 = rx->next;
  
#line 2106 
  nic->rx_to_use = tmp_1;
  
#line 2106 
  rx = tmp_1;
  ldv_47597: 
#line 2107 
  ;
  
#line 2106 
  if (rx->skb == (struct sk_buff *)0) 
#line 2108 
                                      goto ldv_47596; else 
#line 2111 
                                                           goto ldv_47595;
  ldv_47595: 
#line 2112 
  ;
  
#line 2111 
  new_before_last_rx = ((nic->rx_to_use)->prev)->prev;
  
#line 2112 
  if (new_before_last_rx != old_before_last_rx) {
    
#line 2122 
    new_before_last_rfd = (struct rfd *)(new_before_last_rx->skb)->data;
    
#line 2124 
    new_before_last_rfd->size = (unsigned short)0U;
    
#line 2125 
    new_before_last_rfd->command = (unsigned short)((unsigned int)new_before_last_rfd->command | 32768U);
    
#line 2126 
    pci_dma_sync_single_for_device(nic->pdev,new_before_last_rx->dma_addr,16UL,0);
    
#line 2133 
    old_before_last_rfd->command = (unsigned short)((unsigned int)old_before_last_rfd->command & 32767U);
    
#line 2134 
    pci_dma_sync_single_for_device(nic->pdev,old_before_last_rx->dma_addr,16UL,0);
    
#line 2137 
    old_before_last_rfd->size = (unsigned short)1522U;
    
#line 2139 
    pci_dma_sync_single_for_device(nic->pdev,old_before_last_rx->dma_addr,16UL,0);
  }
  else ;
  
#line 2144 
  if (restart_required != 0) {
    
#line 2146 
    iowrite8((unsigned char)16,(void *)(& (nic->csr)->scb.stat_ack));
    
#line 2147 
    e100_start_receiver(nic,nic->rx_to_clean);
    
#line 2148 
    if (work_done != (unsigned int *)0U) 
#line 2149 
                                         *work_done += 1U; else ;
  }
  else ;
  
#line 2151 
  return;
}


#line 2153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_rx_clean_list(struct nic *nic)
{
  struct rx *rx;
  unsigned int i;
  struct rx *tmp;
  
#line 2156 
  unsigned int count = nic->params.rfds.count;
  
#line 2158 
  nic->ru_running = RU_UNINITIALIZED;
  
#line 2160 
  if (nic->rxs != (struct rx *)0) {
    
#line 2161 
    rx = nic->rxs;
    
#line 2161 
    i = 0U;
    
#line 2161 
    goto ldv_47605;
    ldv_47604: 
#line 2162 
    ;
    
#line 2162 
    if (rx->skb != (struct sk_buff *)0) {
      
#line 2163 
      pci_unmap_single(nic->pdev,rx->dma_addr,1538UL,0);
      
#line 2165 
      consume_skb(rx->skb);
    }
    else ;
    
#line 2161 
    rx += 1;
    
#line 2161 
    i += 1U;
    ldv_47605: 
#line 2162 
    ;
    
#line 2161 
    if (i < count) 
#line 2163 
                   goto ldv_47604; else 
#line 2166 
                                        goto ldv_47606;
    ldv_47606: 
#line 2167 
    ;
    
#line 2168 
    kfree((void const *)nic->rxs);
    
#line 2169 
    nic->rxs = (struct rx *)0;
  }
  else ;
  
#line 2172 
  tmp = (struct rx *)0;
  
#line 2172 
  nic->rx_to_clean = tmp;
  
#line 2172 
  nic->rx_to_use = tmp;
  
#line 2173 
  return;
}


#line 2175  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_rx_alloc_list(struct nic *nic)
{
  int __retres;
  struct rx *rx;
  unsigned int i;
  struct rfd *before_last;
  struct rx *tmp;
  struct rx *tmp_0;
  int tmp_2;
  struct rx *tmp_3;
  
#line 2178 
  unsigned int count = nic->params.rfds.count;
  
#line 2181 
  tmp = (struct rx *)0;
  
#line 2181 
  nic->rx_to_clean = tmp;
  
#line 2181 
  nic->rx_to_use = tmp;
  
#line 2182 
  nic->ru_running = RU_UNINITIALIZED;
  
#line 2184 
  tmp_0 = (struct rx *)kcalloc((unsigned long)count,32UL,32U);
  
#line 2184 
  nic->rxs = tmp_0;
  
#line 2184 
  if (tmp_0 == (struct rx *)0) {
    
#line 2185 
    __retres = -12;
    
#line 2185 
    goto return_label;
  }
  else ;
  
#line 2187 
  rx = nic->rxs;
  
#line 2187 
  i = 0U;
  
#line 2187 
  goto ldv_47615;
  ldv_47614: 
#line 2188 
  ;
  
#line 2188 
  if (i + 1U < count) 
#line 2188 
                      rx->next = rx + 1U; else 
#line 2188 
                                               rx->next = nic->rxs;
  
#line 2189 
  if (i == 0U) 
#line 2189 
               rx->prev = nic->rxs + ((unsigned long)count + 18446744073709551615U); else 
                                                                    
#line 2189 
                                                                    rx->prev = rx + 18446744073709551615U;
  
#line 2190 
  tmp_2 = e100_rx_alloc_skb(nic,rx);
  
#line 2190 
  if (tmp_2 != 0) {
    
#line 2191 
    e100_rx_clean_list(nic);
    
#line 2192 
    __retres = -12;
    
#line 2192 
    goto return_label;
  }
  else ;
  
#line 2187 
  rx += 1;
  
#line 2187 
  i += 1U;
  ldv_47615: 
#line 2188 
  ;
  
#line 2187 
  if (i < count) 
#line 2189 
                 goto ldv_47614; else 
#line 2192 
                                      goto ldv_47616;
  ldv_47616: 
#line 2193 
  ;
  
#line 2202 
  rx = ((nic->rxs)->prev)->prev;
  
#line 2203 
  before_last = (struct rfd *)(rx->skb)->data;
  
#line 2204 
  before_last->command = (unsigned short)((unsigned int)before_last->command | 32768U);
  
#line 2205 
  before_last->size = (unsigned short)0U;
  
#line 2206 
  pci_dma_sync_single_for_device(nic->pdev,rx->dma_addr,16UL,0);
  
#line 2209 
  tmp_3 = nic->rxs;
  
#line 2209 
  nic->rx_to_clean = tmp_3;
  
#line 2209 
  nic->rx_to_use = tmp_3;
  
#line 2210 
  nic->ru_running = RU_SUSPENDED;
  
#line 2212 
  __retres = 0;
  return_label: 
#line 2212 
                return __retres;
}


#line 2215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static irqreturn_t e100_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  unsigned int tmp_0;
  bool tmp_1;
  
#line 2217 
  struct net_device *netdev = (struct net_device *)dev_id;
  
#line 2218 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2219 
  tmp_0 = ioread8((void *)(& (nic->csr)->scb.stat_ack));
  
#line 2219 
  u8 stat_ack = (unsigned char)tmp_0;
  
#line 2221 
  if ((nic->msg_enable & 512U) != 0U) 
#line 2221 
                                      netdev_printk("\001",(struct net_device const *)nic->netdev,"stat_ack = 0x%02X\n",(int)stat_ack); else ;
  
#line 2224 
  if ((unsigned int)stat_ack + 255U > 253U) {
    
#line 2226 
    __retres = IRQ_NONE;
    
#line 2226 
    goto return_label;
  }
  else ;
  
#line 2229 
  iowrite8((unsigned char)((int)stat_ack),(void *)(& (nic->csr)->scb.stat_ack));
  
#line 2232 
  if (((int)stat_ack & 16) != 0) 
#line 2233 
                                 nic->ru_running = RU_SUSPENDED; else ;
  
#line 2235 
  tmp_1 = napi_schedule_prep(& nic->napi);
  
#line 2235 
  if ((long)((int)tmp_1 != 0) != 0L) {
    
#line 2236 
    e100_disable_irq(nic);
    
#line 2237 
    __napi_schedule(& nic->napi);
  }
  else ;
  
#line 2240 
  __retres = IRQ_HANDLED;
  return_label: 
#line 2240 
                return __retres;
}


#line 2243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_poll(struct napi_struct *napi, int budget)
{
  int __retres;
  struct nic *tmp;
  {
    
#line 2245 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi;
    
#line 2245 
    tmp = (struct nic *)__mptr + 18446744073709551328U;
  }
  
#line 2245 
  struct nic *nic = tmp;
  
#line 2246 
  unsigned int work_done = 0U;
  
#line 2248 
  e100_rx_clean(nic,& work_done,(unsigned int)budget);
  
#line 2249 
  e100_tx_clean(nic);
  
#line 2252 
  if (work_done < (unsigned int)budget) {
    
#line 2253 
    napi_complete(napi);
    
#line 2254 
    e100_enable_irq(nic);
  }
  else ;
  
#line 2257 
  __retres = (int)work_done;
  
#line 2257 
  return __retres;
}


#line 2261  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_netpoll(struct net_device *netdev)
{
  
#line 2263 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2265 
  e100_disable_irq(nic);
  
#line 2266 
  e100_intr((int)(nic->pdev)->irq,(void *)netdev);
  
#line 2267 
  e100_tx_clean(nic);
  
#line 2268 
  e100_enable_irq(nic);
  
#line 2269 
  return;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_mac_address(struct net_device *netdev, void *p)
{
  int __retres;
  int tmp_1;
  bool tmp_0;
  
#line 2274 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2275 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 2277 
  tmp_0 = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 2277 
  if (tmp_0) 
#line 2277 
             tmp_1 = 0; else 
#line 2277 
                             tmp_1 = 1;
  
#line 2277 
  if (tmp_1) {
    
#line 2278 
    __retres = -99;
    
#line 2278 
    goto return_label;
  }
  else ;
  
#line 2280 
  memcpy((void *)netdev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)netdev->addr_len);
  
#line 2281 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_setup_iaaddr);
  
#line 2283 
  __retres = 0;
  return_label: 
#line 2283 
                return __retres;
}


#line 2286  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_change_mtu(struct net_device *netdev, int new_mtu)
{
  int __retres;
  
#line 2288 
  if ((unsigned int)new_mtu + 4294967236U > 1440U) {
    
#line 2289 
    __retres = -22;
    
#line 2289 
    goto return_label;
  }
  else ;
  
#line 2290 
  netdev->mtu = (unsigned int)new_mtu;
  
#line 2291 
  __retres = 0;
  return_label: 
#line 2291 
                return __retres;
}


#line 2294  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_asf(struct nic *nic)
{
  int __retres;
  
#line 2299 
  __retres = ((((unsigned int)(nic->pdev)->device + 61360U <= 7U && (int)nic->eeprom[13] < 0) && ((int)nic->eeprom[13] & 16384) == 0) && ((int)nic->eeprom[144] & 255) != 254) != 0;
  
#line 2299 
  return __retres;
}


#line 2303  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_up(struct nic *nic)
{
  int __retres;
  int err;
  
#line 2307 
  err = e100_rx_alloc_list(nic);
  
#line 2307 
  if (err != 0) {
    
#line 2308 
    __retres = err;
    
#line 2308 
    goto return_label;
  }
  else ;
  
#line 2309 
  err = e100_alloc_cbs(nic);
  
#line 2309 
  if (err != 0) 
#line 2310 
                goto err_rx_clean_list; else ;
  
#line 2311 
  err = e100_hw_init(nic);
  
#line 2311 
  if (err != 0) 
#line 2312 
                goto err_clean_cbs; else ;
  
#line 2313 
  e100_set_multicast_list(nic->netdev);
  
#line 2314 
  e100_start_receiver(nic,(struct rx *)0);
  
#line 2315 
  ldv_mod_timer_89(& nic->watchdog,jiffies);
  
#line 2316 
  err = ldv_request_irq_90((nic->pdev)->irq,& e100_intr,128UL,(char const *)(& (nic->netdev)->name),(void *)nic->netdev);
  
#line 2316 
  if (err != 0) 
#line 2318 
                goto err_no_irq; else ;
  
#line 2319 
  netif_wake_queue(nic->netdev);
  
#line 2320 
  napi_enable(& nic->napi);
  
#line 2323 
  e100_enable_irq(nic);
  
#line 2324 
  __retres = 0;
  
#line 2324 
  goto return_label;
  err_no_irq: 
#line 2326 
  ;
  
#line 2327 
  ldv_del_timer_sync_91(& nic->watchdog);
  err_clean_cbs: 
#line 2328 
  ;
  
#line 2329 
  e100_clean_cbs(nic);
  err_rx_clean_list: 
#line 2330 
  ;
  
#line 2331 
  e100_rx_clean_list(nic);
  
#line 2332 
  __retres = err;
  return_label: 
#line 2332 
                return __retres;
}


#line 2335  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_down(struct nic *nic)
{
  
#line 2338 
  napi_disable(& nic->napi);
  
#line 2339 
  netif_stop_queue(nic->netdev);
  
#line 2340 
  e100_hw_reset(nic);
  
#line 2341 
  ldv_free_irq_92((nic->pdev)->irq,(void *)nic->netdev);
  
#line 2342 
  ldv_del_timer_sync_93(& nic->watchdog);
  
#line 2343 
  netif_carrier_off(nic->netdev);
  
#line 2344 
  e100_clean_cbs(nic);
  
#line 2345 
  e100_rx_clean_list(nic);
  
#line 2346 
  return;
}


#line 2348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_tx_timeout(struct net_device *netdev)
{
  
#line 2350 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2354 
  ldv_schedule_work_94(& nic->tx_timeout_task);
  
#line 2355 
  return;
}


#line 2357  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_tx_timeout_task(struct work_struct *work)
{
  struct nic *tmp;
  bool tmp_3;
  {
    
#line 2359 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 2359 
    tmp = (struct nic *)__mptr + 18446744073709550760U;
  }
  
#line 2359 
  struct nic *nic = tmp;
  
#line 2360 
  struct net_device *netdev = nic->netdev;
  
#line 2362 
  if ((nic->msg_enable & 128U) != 0U) {
    unsigned int tmp_0;
    
#line 2362 
    tmp_0 = ioread8((void *)(& (nic->csr)->scb.status));
    
#line 2362 
    ;
    
#line 2362 
    netdev_printk("\001",(struct net_device const *)nic->netdev,"scb.status=0x%02X\n",tmp_0);
  }
  else ;
  
#line 2365 
  rtnl_lock();
  
#line 2366 
  tmp_3 = netif_running((struct net_device const *)netdev);
  
#line 2366 
  if ((int)tmp_3 != 0) {
    void *tmp_1;
    void *tmp_2;
    
#line 2367 
    tmp_1 = netdev_priv((struct net_device const *)netdev);
    
#line 2367 
    e100_down((struct nic *)tmp_1);
    
#line 2368 
    tmp_2 = netdev_priv((struct net_device const *)netdev);
    
#line 2368 
    e100_up((struct nic *)tmp_2);
  }
  else ;
  
#line 2370 
  rtnl_unlock();
  
#line 2371 
  return;
}


#line 2373  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_loopback_test(struct nic *nic, enum loopback loopback_mode)
{
  int __retres;
  int err;
  struct sk_buff *skb;
  int tmp;
  
#line 2383 
  err = e100_rx_alloc_list(nic);
  
#line 2383 
  if (err != 0) {
    
#line 2384 
    __retres = err;
    
#line 2384 
    goto return_label;
  }
  else ;
  
#line 2385 
  err = e100_alloc_cbs(nic);
  
#line 2385 
  if (err != 0) 
#line 2386 
                goto err_clean_rx; else ;
  
#line 2389 
  if (((unsigned int)nic->flags & 1U) != 0U && loopback_mode == (unsigned int)lb_phy) 
    
#line 2390 
    loopback_mode = lb_mac; else ;
  
#line 2392 
  nic->loopback = loopback_mode;
  
#line 2393 
  err = e100_hw_init(nic);
  
#line 2393 
  if (err != 0) 
#line 2394 
                goto err_loopback_none; else ;
  
#line 2396 
  if (loopback_mode == (unsigned int)lb_phy) 
#line 2397 
                                             mdio_write(nic->netdev,nic->mii.phy_id,0,16384); else ;
  
#line 2400 
  e100_start_receiver(nic,(struct rx *)0);
  
#line 2402 
  skb = netdev_alloc_skb(nic->netdev,1500U);
  
#line 2402 
  if (skb == (struct sk_buff *)0) {
    
#line 2403 
    err = -12;
    
#line 2404 
    goto err_loopback_none;
  }
  else ;
  
#line 2406 
  skb_put(skb,1500U);
  
#line 2407 
  memset((void *)skb->data,255,1500UL);
  
#line 2408 
  e100_xmit_frame(skb,nic->netdev);
  
#line 2410 
  msleep(10U);
  
#line 2412 
  pci_dma_sync_single_for_cpu(nic->pdev,(nic->rx_to_clean)->dma_addr,1538UL,0);
  
#line 2415 
  tmp = memcmp((void const *)(((nic->rx_to_clean)->skb)->data + 16U),(void const *)skb->data,1500UL);
  
#line 2415 
  if (tmp != 0) 
#line 2417 
                err = -11; else ;
  err_loopback_none: 
#line 2419 
  ;
  
#line 2420 
  mdio_write(nic->netdev,nic->mii.phy_id,0,0);
  
#line 2421 
  nic->loopback = lb_none;
  
#line 2422 
  e100_clean_cbs(nic);
  
#line 2423 
  e100_hw_reset(nic);
  err_clean_rx: 
#line 2424 
  ;
  
#line 2425 
  e100_rx_clean_list(nic);
  
#line 2426 
  __retres = err;
  return_label: 
#line 2426 
                return __retres;
}


#line 2434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_get_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int tmp_0;
  
#line 2436 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2437 
  tmp_0 = mii_ethtool_gset(& nic->mii,cmd);
  
#line 2437 
  return tmp_0;
}


#line 2440  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_settings(struct net_device *netdev, struct ethtool_cmd *cmd)
{
  int err;
  
#line 2442 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2445 
  mdio_write(netdev,nic->mii.phy_id,0,32768);
  
#line 2446 
  err = mii_ethtool_sset(& nic->mii,cmd);
  
#line 2447 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_configure);
  
#line 2449 
  return err;
}


#line 2452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 2455 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2456 
  strlcpy((char *)(& info->driver),"e100",32UL);
  
#line 2457 
  strlcpy((char *)(& info->version),"3.5.24-k2",32UL);
  
#line 2458 
  tmp_0 = pci_name((struct pci_dev const *)nic->pdev);
  
#line 2458 
  ;
  
#line 2458 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 2459 
  return;
}


#line 2463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_get_regs_len(struct net_device *netdev)
{
  int __retres;
  
#line 2465 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2466 
  __retres = 625;
  
#line 2466 
  return __retres;
}


#line 2469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_regs(struct net_device *netdev, struct ethtool_regs *regs, void *p)
{
  int i;
  unsigned int tmp_0;
  unsigned int tmp_1;
  unsigned int tmp_2;
  int tmp_3;
  
#line 2472 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2473 
  u32 *buff = (u32 *)p;
  
#line 2476 
  regs->version = (unsigned int)((int)(nic->pdev)->revision | 16777216);
  
#line 2477 
  tmp_0 = ioread8((void *)(& (nic->csr)->scb.cmd_hi));
  
#line 2477 
  tmp_1 = ioread8((void *)(& (nic->csr)->scb.cmd_lo));
  
#line 2478 
  tmp_2 = ioread16((void *)(& (nic->csr)->scb.status));
  
#line 2477 
  *buff = ((tmp_0 << 24) | (tmp_1 << 16)) | tmp_2;
  
#line 2480 
  i = 28;
  
#line 2480 
  goto ldv_47707;
  ldv_47706: 
#line 2481 
  ;
  
#line 2482 
  tmp_3 = mdio_read(netdev,nic->mii.phy_id,i);
  
#line 2481 
  *(buff + (29 - i)) = (unsigned int)tmp_3;
  
#line 2480 
  i -= 1;
  ldv_47707: 
#line 2481 
  ;
  
#line 2480 
  if (i >= 0) 
#line 2482 
              goto ldv_47706; else 
#line 2485 
                                   goto ldv_47708;
  ldv_47708: 
#line 2486 
  ;
  
#line 2483 
  memset((void *)(& (nic->mem)->dump_buf),0,596UL);
  
#line 2484 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_dump);
  
#line 2485 
  msleep(10U);
  
#line 2486 
  memcpy((void *)(buff + 30U),(void const *)(& (nic->mem)->dump_buf),596UL);
  
#line 2487 
  return;
}


#line 2490  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  int tmp_0;
  
#line 2492 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2493 
  if (nic->mac > (unsigned int)3) 
#line 2493 
                                  tmp_0 = 32; else 
#line 2493 
                                                   tmp_0 = 0;
  
#line 2493 
  wol->supported = (unsigned int)tmp_0;
  
#line 2494 
  wol->wolopts = (unsigned int)((int)nic->flags << 2) & 32U;
  
#line 2495 
  return;
}


#line 2497  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)
{
  int __retres;
  
#line 2499 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2501 
  if (wol->wolopts != 0U && wol->wolopts != 32U) {
    
#line 2503 
    __retres = -95;
    
#line 2503 
    goto return_label;
  }
  else {
    int tmp_1;
    bool tmp_0;
    
#line 2502 
    tmp_0 = device_can_wakeup(& (nic->pdev)->dev);
    
#line 2502 
    if (tmp_0) 
#line 2502 
               tmp_1 = 0; else 
#line 2502 
                               tmp_1 = 1;
    
#line 2502 
    if (tmp_1) {
      
#line 2503 
      __retres = -95;
      
#line 2503 
      goto return_label;
    }
    else ;
  }
  
#line 2505 
  if (wol->wolopts != 0U) 
#line 2506 
                          nic->flags = (enum ldv_33170)((unsigned int)nic->flags | 8U); else 
                                                                    
#line 2508 
                                                                    nic->flags = (enum ldv_33170)((unsigned int)nic->flags & 4294967287U);
  
#line 2510 
  device_set_wakeup_enable(& (nic->pdev)->dev,(_Bool)(wol->wolopts != 0U));
  
#line 2512 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_configure);
  
#line 2514 
  __retres = 0;
  return_label: 
#line 2514 
                return __retres;
}


#line 2517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static u32 e100_get_msglevel(struct net_device *netdev)
{
  u32 __retres;
  
#line 2519 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2520 
  __retres = nic->msg_enable;
  
#line 2520 
  return __retres;
}


#line 2523  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_set_msglevel(struct net_device *netdev, u32 value)
{
  
#line 2525 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2526 
  nic->msg_enable = value;
  
#line 2527 
  return;
}


#line 2529  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_nway_reset(struct net_device *netdev)
{
  int tmp_0;
  
#line 2531 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2532 
  tmp_0 = mii_nway_restart(& nic->mii);
  
#line 2532 
  return tmp_0;
}


#line 2535  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static u32 e100_get_link(struct net_device *netdev)
{
  u32 __retres;
  int tmp_0;
  
#line 2537 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2538 
  tmp_0 = mii_link_ok(& nic->mii);
  
#line 2538 
  __retres = (unsigned int)tmp_0;
  
#line 2538 
  return __retres;
}


#line 2541  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_get_eeprom_len(struct net_device *netdev)
{
  int __retres;
  
#line 2543 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2544 
  __retres = (int)nic->eeprom_wc << 1;
  
#line 2544 
  return __retres;
}


#line 2548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_get_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  
#line 2551 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2553 
  eeprom->magic = 4660U;
  
#line 2554 
  memcpy((void *)bytes,(void const *)(& nic->eeprom) + eeprom->offset,(unsigned long)eeprom->len);
  
#line 2556 
  __retres = 0;
  
#line 2556 
  return __retres;
}


#line 2559  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_eeprom(struct net_device *netdev, struct ethtool_eeprom *eeprom, u8 *bytes)
{
  int __retres;
  int tmp_0;
  
#line 2562 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2564 
  if (eeprom->magic != 4660U) {
    
#line 2565 
    __retres = -22;
    
#line 2565 
    goto return_label;
  }
  else ;
  
#line 2567 
  memcpy((void *)(& nic->eeprom) + eeprom->offset,(void const *)bytes,(unsigned long)eeprom->len);
  
#line 2569 
  tmp_0 = e100_eeprom_save(nic,(unsigned short)((int)((unsigned short)(eeprom->offset >> 1))),(unsigned short)((int)((unsigned int)((unsigned short)(eeprom->len >> 1)) + 1U)));
  
#line 2569 
  __retres = tmp_0;
  return_label: 
#line 2569 
                return __retres;
}


#line 2573  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  
#line 2576 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2577 
  struct param_range *rfds = & nic->params.rfds;
  
#line 2578 
  struct param_range *cbs = & nic->params.cbs;
  
#line 2580 
  ring->rx_max_pending = rfds->max;
  
#line 2581 
  ring->tx_max_pending = cbs->max;
  
#line 2582 
  ring->rx_pending = rfds->count;
  
#line 2583 
  ring->tx_pending = cbs->count;
  
#line 2584 
  return;
}


#line 2586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_ringparam(struct net_device *netdev, struct ethtool_ringparam *ring)
{
  int __retres;
  bool tmp_0;
  unsigned int tmp_2;
  u32 tmp_4;
  unsigned int tmp_6;
  u32 tmp_8;
  bool tmp_9;
  
#line 2589 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2590 
  struct param_range *rfds = & nic->params.rfds;
  
#line 2591 
  struct param_range *cbs = & nic->params.cbs;
  
#line 2593 
  if (ring->rx_mini_pending != 0U || ring->rx_jumbo_pending != 0U) {
    
#line 2594 
    __retres = -22;
    
#line 2594 
    goto return_label;
  }
  else ;
  
#line 2596 
  tmp_0 = netif_running((struct net_device const *)netdev);
  
#line 2596 
  if ((int)tmp_0 != 0) 
#line 2597 
                       e100_down(nic); else ;
  {
    __u32 tmp_1;
    
#line 2598 
    __u32 _max1 = ring->rx_pending;
    
#line 2598 
    u32 _max2 = rfds->min;
    
#line 2598 
    if (_max1 > _max2) 
#line 2598 
                       tmp_1 = _max1; else 
#line 2598 
                                           tmp_1 = _max2;
    
#line 2598 
    tmp_2 = tmp_1;
  }
  
#line 2598 
  rfds->count = tmp_2;
  {
    u32 tmp_3;
    
#line 2599 
    u32 _min1 = rfds->count;
    
#line 2599 
    u32 _min2 = rfds->max;
    
#line 2599 
    if (_min1 < _min2) 
#line 2599 
                       tmp_3 = _min1; else 
#line 2599 
                                           tmp_3 = _min2;
    
#line 2599 
    tmp_4 = tmp_3;
  }
  
#line 2599 
  rfds->count = tmp_4;
  {
    __u32 tmp_5;
    
#line 2600 
    __u32 _max1_0 = ring->tx_pending;
    
#line 2600 
    u32 _max2_0 = cbs->min;
    
#line 2600 
    if (_max1_0 > _max2_0) 
#line 2600 
                           tmp_5 = _max1_0; else 
#line 2600 
                                                 tmp_5 = _max2_0;
    
#line 2600 
    tmp_6 = tmp_5;
  }
  
#line 2600 
  cbs->count = tmp_6;
  {
    u32 tmp_7;
    
#line 2601 
    u32 _min1_0 = cbs->count;
    
#line 2601 
    u32 _min2_0 = cbs->max;
    
#line 2601 
    if (_min1_0 < _min2_0) 
#line 2601 
                           tmp_7 = _min1_0; else 
#line 2601 
                                                 tmp_7 = _min2_0;
    
#line 2601 
    tmp_8 = tmp_7;
  }
  
#line 2601 
  cbs->count = tmp_8;
  
#line 2602 
  if ((nic->msg_enable & 1U) != 0U) 
#line 2602 
                                    netdev_info((struct net_device const *)nic->netdev,"Ring Param settings: rx: %d, tx %d\n",rfds->count,cbs->count); else ;
  
#line 2604 
  tmp_9 = netif_running((struct net_device const *)netdev);
  
#line 2604 
  if ((int)tmp_9 != 0) 
#line 2605 
                       e100_up(nic); else ;
  
#line 2607 
  __retres = 0;
  return_label: 
#line 2607 
                return __retres;
}


#line 2610  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static char const e100_gstrings_test[5U][32U] = {{(char)'L', (char)'i', (char)'n', (char)'k', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'n', (char)'/', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'E', (char)'e', (char)'p', (char)'r', (char)'o', (char)'m', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'n', (char)'/', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'S', (char)'e', (char)'l', (char)'f', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'M', (char)'a', (char)'c', (char)' ', (char)'l', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'P', (char)'h', (char)'y', (char)' ', (char)'l', (char)'o', (char)'o', (char)'p', (char)'b', (char)'a', (char)'c', (char)'k', (char)' ', (char)' ', (char)' ', (char)' ', (char)' ', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}};

#line 2619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_diag_test(struct net_device *netdev, struct ethtool_test *test, u64 *data)
{
  struct ethtool_cmd cmd;
  int i;
  int err;
  int tmp_0;
  int tmp_1;
  int tmp_7;
  
#line 2623 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2626 
  memset((void *)data,0,40UL);
  
#line 2627 
  tmp_0 = mii_link_ok(& nic->mii);
  
#line 2627 
  *data = (unsigned long long)(tmp_0 == 0);
  
#line 2628 
  tmp_1 = e100_eeprom_load(nic);
  
#line 2628 
  *(data + 1U) = (unsigned long long)tmp_1;
  
#line 2629 
  if ((test->flags & 1U) != 0U) {
    bool tmp_2;
    int tmp_3;
    int tmp_4;
    int tmp_5;
    bool tmp_6;
    
#line 2632 
    err = mii_ethtool_gset(& nic->mii,& cmd);
    
#line 2634 
    tmp_2 = netif_running((struct net_device const *)netdev);
    
#line 2634 
    if ((int)tmp_2 != 0) 
#line 2635 
                         e100_down(nic); else ;
    
#line 2636 
    tmp_3 = e100_self_test(nic);
    
#line 2636 
    *(data + 2U) = (unsigned long long)tmp_3;
    
#line 2637 
    tmp_4 = e100_loopback_test(nic,(enum loopback)lb_mac);
    
#line 2637 
    *(data + 3U) = (unsigned long long)tmp_4;
    
#line 2638 
    tmp_5 = e100_loopback_test(nic,(enum loopback)lb_phy);
    
#line 2638 
    *(data + 4U) = (unsigned long long)tmp_5;
    
#line 2641 
    err = mii_ethtool_sset(& nic->mii,& cmd);
    
#line 2643 
    tmp_6 = netif_running((struct net_device const *)netdev);
    
#line 2643 
    if ((int)tmp_6 != 0) 
#line 2644 
                         e100_up(nic); else ;
  }
  else ;
  
#line 2646 
  i = 0;
  
#line 2646 
  goto ldv_47795;
  ldv_47794: 
#line 2647 
  ;
  
#line 2647 
  if (*(data + i) != 0ULL) 
#line 2647 
                           tmp_7 = 2; else 
#line 2647 
                                           tmp_7 = 0;
  
#line 2647 
  test->flags |= (unsigned int)tmp_7;
  
#line 2646 
  i += 1;
  ldv_47795: 
#line 2647 
  ;
  
#line 2646 
  if ((unsigned int)i <= 4U) 
#line 2648 
                             goto ldv_47794; else 
#line 2651 
                                                  goto ldv_47796;
  ldv_47796: 
#line 2652 
  ;
  
#line 2649 
  msleep_interruptible(4000U);
  
#line 2650 
  return;
}


#line 2652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_phys_id(struct net_device *netdev, enum ethtool_phys_id_state state)
{
  int __retres;
  unsigned int tmp_0;
  
#line 2655 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2662 
  if (nic->phy == phy_82552_v) 
#line 2662 
                               tmp_0 = 25U; else 
#line 2662 
                                                 tmp_0 = 27U;
  
#line 2662 
  u16 led_reg = (unsigned short)tmp_0;
  
#line 2664 
  u16 leds = (unsigned short)0U;
  
#line 2666 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 2667 
    ;
    
#line 2668 
    __retres = 2;
    
#line 2668 
    goto return_label;
    case (unsigned int)2: 
#line 2670 
    ;
    
#line 2671 
    if (nic->phy != phy_82552_v) {
      unsigned int tmp_1;
      
#line 2671 
      if (nic->mac <= (unsigned int)7) 
#line 2671 
                                       tmp_1 = 7U; else 
#line 2671 
                                                        tmp_1 = 5U;
      
#line 2671 
      leds = (unsigned short)tmp_1;
    }
    else 
#line 2671 
         leds = (unsigned short)15U;
    
#line 2673 
    goto ldv_47811;
    case (unsigned int)3: 
#line 2675 
    ;
    
#line 2676 
    if (nic->phy == phy_82552_v) 
#line 2676 
                                 leds = (unsigned short)10U; else 
#line 2676 
                                                                  leds = (unsigned short)4U;
    
#line 2677 
    goto ldv_47811;
    case (unsigned int)0: 
#line 2679 
    ;
    
#line 2680 
    goto ldv_47811;
  }
  ldv_47811: 
#line 2683 
  ;
  
#line 2683 
  mdio_write(netdev,nic->mii.phy_id,(int)led_reg,(int)leds);
  
#line 2684 
  __retres = 0;
  return_label: 
#line 2684 
                return __retres;
}


#line 2687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static char const e100_gstrings_stats[31U][32U] = {{(char)'r', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'b', (char)'y', (char)'t', (char)'e', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'p', (char)'e', (char)'d', (char)'\000'}, {(char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'c', (char)'a', (char)'s', (char)'t', (char)'\000'}, {(char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'c', (char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'m', (char)'i', (char)'s', (char)'s', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'c', (char)'a', (char)'r', (char)'r', (char)'i', (char)'e', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'h', (char)'e', (char)'a', (char)'r', (char)'t', (char)'b', (char)'e', (char)'a', (char)'t', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'w', (char)'i', (char)'n', (char)'d', (char)'o', (char)'w', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'d', (char)'e', (char)'f', (char)'e', (char)'r', (char)'r', (char)'e', (char)'d', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'m', (char)'u', (char)'l', (char)'t', (char)'i', (char)'_', (char)'c', (char)'o', (char)'l', (char)'l', (char)'i', (char)'s', (char)'i', (char)'o', (char)'n', (char)'s', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'f', (char)'l', (char)'o', (char)'w', (char)'_', (char)'c', (char)'o', (char)'n', (char)'t', (char)'r', (char)'o', (char)'l', (char)'_', (char)'u', (char)'n', (char)'s', (char)'u', (char)'p', (char)'p', (char)'o', (char)'r', (char)'t', (char)'e', (char)'d', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'_', (char)'p', (char)'a', (char)'c', (char)'k', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'s', (char)'h', (char)'o', (char)'r', (char)'t', (char)'_', (char)'f', (char)'r', (char)'a', (char)'m', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'o', (char)'v', (char)'e', (char)'r', (char)'_', (char)'l', (char)'e', (char)'n', (char)'g', (char)'t', (char)'h', (char)'_', (char)'e', (char)'r', (char)'r', (char)'o', (char)'r', (char)'s', (char)'\000'}};

#line 2703  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_get_sset_count(struct net_device *netdev, int sset)
{
  int __retres;
  
#line 2705 
  switch (sset) {
    case 0: 
#line 2706 
    ;
    
#line 2707 
    __retres = 5;
    
#line 2707 
    goto return_label;
    case 1: 
#line 2708 
    ;
    
#line 2709 
    __retres = 31;
    
#line 2709 
    goto return_label;
    default: 
#line 2710 
    ;
    
#line 2711 
    __retres = -95;
    
#line 2711 
    goto return_label;
  }
  return_label: 
#line 2705 
                return __retres;
}


#line 2715  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_ethtool_stats(struct net_device *netdev, struct ethtool_stats *stats, u64 *data)
{
  int i;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  
#line 2718 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2721 
  i = 0;
  
#line 2721 
  goto ldv_47836;
  ldv_47835: 
#line 2722 
  ;
  
#line 2722 
  *(data + i) = (unsigned long long)*((unsigned long *)(& netdev->stats) + i);
  
#line 2721 
  i += 1;
  ldv_47836: 
#line 2722 
  ;
  
#line 2721 
  if (i <= 20) 
#line 2723 
               goto ldv_47835; else 
#line 2726 
                                    goto ldv_47837;
  ldv_47837: 
#line 2727 
  ;
  
#line 2724 
  tmp_0 = i;
  
#line 2724 
  i += 1;
  
#line 2724 
  *(data + tmp_0) = (unsigned long long)nic->tx_deferred;
  
#line 2725 
  tmp_1 = i;
  
#line 2725 
  i += 1;
  
#line 2725 
  *(data + tmp_1) = (unsigned long long)nic->tx_single_collisions;
  
#line 2726 
  tmp_2 = i;
  
#line 2726 
  i += 1;
  
#line 2726 
  *(data + tmp_2) = (unsigned long long)nic->tx_multiple_collisions;
  
#line 2727 
  tmp_3 = i;
  
#line 2727 
  i += 1;
  
#line 2727 
  *(data + tmp_3) = (unsigned long long)nic->tx_fc_pause;
  
#line 2728 
  tmp_4 = i;
  
#line 2728 
  i += 1;
  
#line 2728 
  *(data + tmp_4) = (unsigned long long)nic->rx_fc_pause;
  
#line 2729 
  tmp_5 = i;
  
#line 2729 
  i += 1;
  
#line 2729 
  *(data + tmp_5) = (unsigned long long)nic->rx_fc_unsupported;
  
#line 2730 
  tmp_6 = i;
  
#line 2730 
  i += 1;
  
#line 2730 
  *(data + tmp_6) = (unsigned long long)nic->tx_tco_frames;
  
#line 2731 
  tmp_7 = i;
  
#line 2731 
  i += 1;
  
#line 2731 
  *(data + tmp_7) = (unsigned long long)nic->rx_tco_frames;
  
#line 2732 
  tmp_8 = i;
  
#line 2732 
  i += 1;
  
#line 2732 
  *(data + tmp_8) = (unsigned long long)nic->rx_short_frame_errors;
  
#line 2733 
  tmp_9 = i;
  
#line 2733 
  i += 1;
  
#line 2733 
  *(data + tmp_9) = (unsigned long long)nic->rx_over_length_errors;
  
#line 2734 
  return;
}


#line 2736  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_get_strings(struct net_device *netdev, u32 stringset, u8 *data)
{
  
#line 2738 
  switch (stringset) {
    case (u32)0: 
#line 2739 
    ;
    
#line 2740 
    memcpy((void *)data,(void const *)(& e100_gstrings_test),160UL);
    
#line 2741 
    goto ldv_47844;
    case (u32)1: 
#line 2742 
    ;
    
#line 2743 
    memcpy((void *)data,(void const *)(& e100_gstrings_stats),992UL);
    
#line 2744 
    goto ldv_47844;
  }
  ldv_47844: 
#line 2746 
  ;
  
#line 2747 
  return;
}


#line 2748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static struct ethtool_ops const e100_ethtool_ops = {.get_settings = & e100_get_settings, .set_settings = & e100_set_settings, .get_drvinfo = & e100_get_drvinfo, .get_regs_len = & e100_get_regs_len, .get_regs = & e100_get_regs, .get_wol = & e100_get_wol, .set_wol = & e100_set_wol, .get_msglevel = & e100_get_msglevel, .set_msglevel = & e100_set_msglevel, .nway_reset = & e100_nway_reset, .get_link = & e100_get_link, .get_eeprom_len = & e100_get_eeprom_len, .get_eeprom = & e100_get_eeprom, .set_eeprom = & e100_set_eeprom, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & e100_get_ringparam, .set_ringparam = & e100_set_ringparam, .get_pauseparam = (void (*)(struct net_device *, struct ethtool_pauseparam *))0, .set_pauseparam = (int (*)(struct net_device *, struct ethtool_pauseparam *))0, .self_test = & e100_diag_test, .get_strings = & e100_get_strings, .set_phys_id = & e100_set_phys_id, .get_ethtool_stats = & e100_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & e100_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = & ethtool_op_get_ts_info, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 2773  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_do_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)
{
  int tmp_1;
  struct mii_ioctl_data *tmp_0;
  
#line 2775 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2777 
  ;
  
#line 2777 
  tmp_0 = if_mii(ifr);
  
#line 2777 
  ;
  
#line 2777 
  tmp_1 = generic_mii_ioctl(& nic->mii,tmp_0,cmd,(unsigned int *)0U);
  
#line 2777 
  return tmp_1;
}


#line 2780  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_alloc(struct nic *nic)
{
  int tmp_0;
  
#line 2782 
  nic->mem = (struct mem *)pci_alloc_consistent(nic->pdev,688UL,& nic->dma_addr);
  
#line 2784 
  if (nic->mem != (struct mem *)0) 
#line 2784 
                                   tmp_0 = 0; else 
#line 2784 
                                                   tmp_0 = -12;
  
#line 2784 
  return tmp_0;
}


#line 2787  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_free(struct nic *nic)
{
  
#line 2789 
  if (nic->mem != (struct mem *)0) {
    
#line 2790 
    pci_free_consistent(nic->pdev,688UL,(void *)nic->mem,nic->dma_addr);
    
#line 2792 
    nic->mem = (struct mem *)0;
  }
  else ;
  
#line 2794 
  return;
}


#line 2796  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_open(struct net_device *netdev)
{
  
#line 2798 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2799 
  int err = 0;
  
#line 2801 
  netif_carrier_off(netdev);
  
#line 2802 
  err = e100_up(nic);
  
#line 2802 
  if (err != 0) {
    
#line 2803 
    if ((nic->msg_enable & 32U) != 0U) 
#line 2803 
                                       netdev_err((struct net_device const *)nic->netdev,"Cannot open interface, aborting\n"); else ;
  }
  else ;
  
#line 2804 
  return err;
}


#line 2807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_close(struct net_device *netdev)
{
  int __retres;
  void *tmp;
  
#line 2809 
  tmp = netdev_priv((struct net_device const *)netdev);
  
#line 2809 
  e100_down((struct nic *)tmp);
  
#line 2810 
  __retres = 0;
  
#line 2810 
  return __retres;
}


#line 2813  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_set_features(struct net_device *netdev, netdev_features_t features)
{
  int __retres;
  
#line 2816 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 2817 
  netdev_features_t changed = netdev->features ^ features;
  
#line 2819 
  if ((changed & 412316860416ULL) == 0ULL) {
    
#line 2820 
    __retres = 0;
    
#line 2820 
    goto return_label;
  }
  else ;
  
#line 2822 
  netdev->features = features;
  
#line 2823 
  e100_exec_cb(nic,(struct sk_buff *)0,& e100_configure);
  
#line 2824 
  __retres = 0;
  return_label: 
#line 2824 
                return __retres;
}


#line 2827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static struct net_device_ops const e100_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & e100_open, .ndo_stop = & e100_close, .ndo_start_xmit = & e100_xmit_frame, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & e100_set_multicast_list, .ndo_set_mac_address = & e100_set_mac_address, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & e100_do_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & e100_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & e100_tx_timeout, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = (struct net_device_stats *(*)(struct net_device *))0, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & e100_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & e100_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 2843  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_probe(struct pci_dev *pdev, struct pci_device_id const *ent)
{
  int __retres;
  struct net_device *netdev;
  struct nic *nic;
  int err;
  char const *tmp;
  int tmp_3;
  bool tmp_2;
  
#line 2849 
  netdev = ldv_alloc_etherdev_mqs_95(1664,1U,1U);
  
#line 2849 
  if (netdev == (struct net_device *)0) {
    
#line 2850 
    __retres = -12;
    
#line 2850 
    goto return_label;
  }
  else ;
  
#line 2852 
  netdev->hw_features |= 137438953472ULL;
  
#line 2853 
  netdev->priv_flags |= 524288U;
  
#line 2854 
  netdev->hw_features |= 274877906944ULL;
  
#line 2856 
  netdev->netdev_ops = & e100_netdev_ops;
  
#line 2857 
  netdev->ethtool_ops = & e100_ethtool_ops;
  
#line 2858 
  netdev->watchdog_timeo = 500;
  
#line 2859 
  tmp = pci_name((struct pci_dev const *)pdev);
  
#line 2859 
  ;
  
#line 2859 
  strncpy((char *)(& netdev->name),tmp,15UL);
  
#line 2861 
  nic = (struct nic *)netdev_priv((struct net_device const *)netdev);
  
#line 2862 
  netif_napi_add(netdev,& nic->napi,& e100_poll,16);
  
#line 2863 
  nic->netdev = netdev;
  
#line 2864 
  nic->pdev = pdev;
  
#line 2865 
  nic->msg_enable = (unsigned int)((1 << debug) + -1);
  
#line 2866 
  nic->mdio_ctrl = & mdio_ctrl_hw;
  
#line 2867 
  pci_set_drvdata(pdev,(void *)netdev);
  
#line 2869 
  err = pci_enable_device(pdev);
  
#line 2869 
  if (err != 0) {
    
#line 2870 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2870 
                                      netdev_err((struct net_device const *)nic->netdev,"Cannot enable PCI device, aborting\n"); else ;
    
#line 2871 
    goto err_out_free_dev;
  }
  else ;
  
#line 2874 
  if ((pdev->resource[0].flags & 512UL) == 0UL) {
    
#line 2875 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2875 
                                      netdev_err((struct net_device const *)nic->netdev,"Cannot find proper PCI device base address, aborting\n"); else ;
    
#line 2876 
    err = -19;
    
#line 2877 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 2880 
  err = pci_request_regions(pdev,"e100");
  
#line 2880 
  if (err != 0) {
    
#line 2881 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2881 
                                      netdev_err((struct net_device const *)nic->netdev,"Cannot obtain PCI resources, aborting\n"); else ;
    
#line 2882 
    goto err_out_disable_pdev;
  }
  else ;
  
#line 2885 
  err = pci_set_dma_mask(pdev,4294967295ULL);
  
#line 2885 
  if (err != 0) {
    
#line 2886 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2886 
                                      netdev_err((struct net_device const *)nic->netdev,"No usable DMA configuration, aborting\n"); else ;
    
#line 2887 
    goto err_out_free_res;
  }
  else ;
  
#line 2890 
  netdev->dev.parent = & pdev->dev;
  
#line 2892 
  if (use_io != 0) {
    
#line 2893 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2893 
                                      netdev_info((struct net_device const *)nic->netdev,"using i/o access mode\n"); else ;
  }
  else ;
  
#line 2895 
  nic->csr = (struct csr *)pci_iomap(pdev,use_io != 0,24UL);
  
#line 2896 
  if (nic->csr == (struct csr *)0) {
    
#line 2897 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2897 
                                      netdev_err((struct net_device const *)nic->netdev,"Cannot map device registers, aborting\n"); else ;
    
#line 2898 
    err = -12;
    
#line 2899 
    goto err_out_free_res;
  }
  else ;
  
#line 2902 
  if (ent->driver_data != 0UL) 
#line 2903 
                               nic->flags = (enum ldv_33170)((unsigned int)nic->flags | 1U); else 
                                                                    
#line 2905 
                                                                    nic->flags = (enum ldv_33170)((unsigned int)nic->flags & 4294967294U);
  
#line 2907 
  e100_get_defaults(nic);
  
#line 2910 
  if (nic->mac <= (unsigned int)3) 
#line 2911 
                                   netdev->features |= 1024ULL; else ;
  
#line 2914 
  spinlock_check(& nic->cb_lock);
  {
    struct lock_class_key __key;
    
#line 2914 
    __raw_spin_lock_init(& nic->cb_lock.__anonCompField_spinlock_18.rlock,"&(&nic->cb_lock)->rlock",& __key);
  }
  
#line 2915 
  spinlock_check(& nic->cmd_lock);
  {
    struct lock_class_key __key_0;
    
#line 2915 
    __raw_spin_lock_init(& nic->cmd_lock.__anonCompField_spinlock_18.rlock,"&(&nic->cmd_lock)->rlock",& __key_0);
  }
  
#line 2916 
  spinlock_check(& nic->mdio_lock);
  {
    struct lock_class_key __key_1;
    
#line 2916 
    __raw_spin_lock_init(& nic->mdio_lock.__anonCompField_spinlock_18.rlock,"&(&nic->mdio_lock)->rlock",& __key_1);
  }
  
#line 2921 
  e100_hw_reset(nic);
  
#line 2923 
  pci_set_master(pdev);
  {
    struct lock_class_key __key_2;
    
#line 2925 
    init_timer_key(& nic->watchdog,0U,"((&nic->watchdog))",& __key_2);
  }
  
#line 2925 
  nic->watchdog.function = & e100_watchdog;
  
#line 2925 
  nic->watchdog.data = (unsigned long)nic;
  {
    struct lock_class_key __key_3;
    
#line 2927 
    __init_work(& nic->tx_timeout_task,0);
    
#line 2927 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 2927 
    nic->tx_timeout_task.data = __constr_expr_37;
    
#line 2927 
    lockdep_init_map(& nic->tx_timeout_task.lockdep_map,"(&nic->tx_timeout_task)",& __key_3,0);
    
#line 2927 
    INIT_LIST_HEAD(& nic->tx_timeout_task.entry);
    
#line 2927 
    nic->tx_timeout_task.func = & e100_tx_timeout_task;
  }
  
#line 2929 
  err = e100_alloc(nic);
  
#line 2929 
  if (err != 0) {
    
#line 2930 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2930 
                                      netdev_err((struct net_device const *)nic->netdev,"Cannot alloc driver memory, aborting\n"); else ;
    
#line 2931 
    goto err_out_iounmap;
  }
  else ;
  
#line 2934 
  err = e100_eeprom_load(nic);
  
#line 2934 
  if (err != 0) 
#line 2935 
                goto err_out_free; else ;
  
#line 2937 
  e100_phy_init(nic);
  
#line 2939 
  memcpy((void *)netdev->dev_addr,(void const *)(& nic->eeprom),6UL);
  
#line 2940 
  tmp_2 = is_valid_ether_addr((u8 const *)netdev->dev_addr);
  
#line 2940 
  if (tmp_2) 
#line 2940 
             tmp_3 = 0; else 
#line 2940 
                             tmp_3 = 1;
  
#line 2940 
  if (tmp_3) {
    
#line 2941 
    if (eeprom_bad_csum_allow == 0) {
      
#line 2942 
      if ((nic->msg_enable & 2U) != 0U) 
#line 2942 
                                        netdev_err((struct net_device const *)nic->netdev,"Invalid MAC address from EEPROM, aborting\n"); else ;
      
#line 2943 
      err = -11;
      
#line 2944 
      goto err_out_free;
    }
    else 
      
#line 2946 
      if ((nic->msg_enable & 2U) != 0U) 
#line 2946 
                                        netdev_err((struct net_device const *)nic->netdev,"Invalid MAC address from EEPROM, you MUST configure one.\n"); else ;
  }
  else ;
  
#line 2951 
  if (nic->mac > (unsigned int)3 && ((int)nic->eeprom[10] & 32) != 0) {
    
#line 2953 
    nic->flags = (enum ldv_33170)((unsigned int)nic->flags | 8U);
    
#line 2954 
    device_set_wakeup_enable(& pdev->dev,(_Bool)1);
  }
  else ;
  
#line 2958 
  pci_pme_active(pdev,(_Bool)0);
  
#line 2960 
  strcpy((char *)(& netdev->name),"eth%d");
  
#line 2961 
  err = ldv_register_netdev_96(netdev);
  
#line 2961 
  if (err != 0) {
    
#line 2962 
    if ((nic->msg_enable & 2U) != 0U) 
#line 2962 
                                      netdev_err((struct net_device const *)nic->netdev,"Cannot register net device, aborting\n"); else ;
    
#line 2963 
    goto err_out_free;
  }
  else ;
  
#line 2965 
  nic->cbs_pool = dma_pool_create((char const *)(& netdev->name),& (nic->pdev)->dev,(unsigned long)nic->params.cbs.max * 576UL,4UL,0UL);
  
#line 2970 
  if ((nic->msg_enable & 2U) != 0U) 
#line 2970 
                                    netdev_info((struct net_device const *)nic->netdev,"addr 0x%llx, irq %d, MAC addr %pM\n",pdev->resource[use_io != 0].start,pdev->irq,netdev->dev_addr); else ;
  
#line 2975 
  __retres = 0;
  
#line 2975 
  goto return_label;
  err_out_free: 
#line 2977 
  ;
  
#line 2978 
  e100_free(nic);
  err_out_iounmap: 
#line 2979 
  ;
  
#line 2980 
  pci_iounmap(pdev,(void *)nic->csr);
  err_out_free_res: 
#line 2981 
  ;
  
#line 2982 
  pci_release_regions(pdev);
  err_out_disable_pdev: 
#line 2983 
  ;
  
#line 2984 
  pci_disable_device(pdev);
  err_out_free_dev: 
#line 2985 
  ;
  
#line 2986 
  ldv_free_netdev_97(netdev);
  
#line 2987 
  __retres = err;
  return_label: 
#line 2987 
                return __retres;
}


#line 2990  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_remove(struct pci_dev *pdev)
{
  
#line 2992 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 2994 
  if (netdev != (struct net_device *)0) {
    
#line 2995 
    struct nic *nic = netdev_priv((struct net_device const *)netdev);
    
#line 2996 
    ldv_unregister_netdev_98(netdev);
    
#line 2997 
    e100_free(nic);
    
#line 2998 
    pci_iounmap(pdev,(void *)nic->csr);
    
#line 2999 
    dma_pool_destroy(nic->cbs_pool);
    
#line 3000 
    ldv_free_netdev_99(netdev);
    
#line 3001 
    pci_release_regions(pdev);
    
#line 3002 
    pci_disable_device(pdev);
  }
  else ;
  
#line 3004 
  return;
}


#line 3009  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void __e100_shutdown(struct pci_dev *pdev, bool *enable_wake)
{
  bool tmp_1;
  int tmp_3;
  
#line 3011 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3012 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 3014 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 3014 
  if ((int)tmp_1 != 0) 
#line 3015 
                       e100_down(nic); else ;
  
#line 3016 
  netif_device_detach(netdev);
  
#line 3018 
  pci_save_state(pdev);
  
#line 3020 
  tmp_3 = e100_asf(nic);
  
#line 3020 
  ;
  
#line 3020 
  if ((((unsigned int)nic->flags & 8U) | (unsigned int)tmp_3) != 0U) {
    
#line 3022 
    if (nic->phy == phy_82552_v) {
      int tmp_2;
      
#line 3023 
      tmp_2 = mdio_read(netdev,nic->mii.phy_id,20);
      
#line 3023 
      u16 smartspeed = (unsigned short)tmp_2;
      
#line 3026 
      mdio_write(netdev,nic->mii.phy_id,20,(int)((unsigned int)smartspeed | 1536U));
    }
    else ;
    
#line 3030 
    *enable_wake = (_Bool)1;
  }
  else 
#line 3032 
       *enable_wake = (_Bool)0;
  
#line 3035 
  pci_clear_master(pdev);
  
#line 3036 
  return;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int __e100_power_off(struct pci_dev *pdev, bool wake)
{
  int __retres;
  
#line 3040 
  if ((int)wake != 0) {
    int tmp;
    
#line 3041 
    tmp = pci_prepare_to_sleep(pdev);
    
#line 3041 
    __retres = tmp;
    
#line 3041 
    goto return_label;
  }
  else ;
  
#line 3043 
  pci_wake_from_d3(pdev,(_Bool)0);
  
#line 3044 
  pci_set_power_state(pdev,3);
  
#line 3046 
  __retres = 0;
  return_label: 
#line 3046 
                return __retres;
}


#line 3050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_suspend(struct pci_dev *pdev, pm_message_t state)
{
  bool wake;
  int tmp;
  
#line 3053 
  __e100_shutdown(pdev,& wake);
  
#line 3054 
  tmp = __e100_power_off(pdev,(_Bool)((bool)((int)wake) != 0));
  
#line 3054 
  return tmp;
}


#line 3057  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_resume(struct pci_dev *pdev)
{
  int __retres;
  bool tmp_2;
  
#line 3059 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3060 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 3062 
  pci_set_power_state(pdev,0);
  
#line 3063 
  pci_restore_state(pdev);
  
#line 3065 
  pci_enable_wake(pdev,0,(_Bool)0);
  
#line 3068 
  if (nic->phy == phy_82552_v) {
    int tmp_1;
    
#line 3069 
    tmp_1 = mdio_read(netdev,nic->mii.phy_id,20);
    
#line 3069 
    u16 smartspeed = (unsigned short)tmp_1;
    
#line 3072 
    mdio_write(netdev,nic->mii.phy_id,20,(int)smartspeed & -513);
  }
  else ;
  
#line 3077 
  netif_device_attach(netdev);
  
#line 3078 
  tmp_2 = netif_running((struct net_device const *)netdev);
  
#line 3078 
  if ((int)tmp_2 != 0) 
#line 3079 
                       e100_up(nic); else ;
  
#line 3081 
  __retres = 0;
  
#line 3081 
  return __retres;
}


#line 3085  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_shutdown(struct pci_dev *pdev)
{
  bool wake;
  
#line 3088 
  __e100_shutdown(pdev,& wake);
  
#line 3089 
  if (system_state == (unsigned int)SYSTEM_POWER_OFF) 
#line 3090 
                                                      __e100_power_off(pdev,(_Bool)((bool)((int)wake) != 0)); else ;
  
#line 3091 
  return;
}


#line 3099  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static pci_ers_result_t e100_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  bool tmp_1;
  
#line 3101 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3102 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 3104 
  netif_device_detach(netdev);
  
#line 3106 
  if (state == 3U) {
    
#line 3107 
    __retres = 4U;
    
#line 3107 
    goto return_label;
  }
  else ;
  
#line 3109 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 3109 
  if ((int)tmp_1 != 0) 
#line 3110 
                       e100_down(nic); else ;
  
#line 3111 
  pci_disable_device(pdev);
  
#line 3114 
  __retres = 3U;
  return_label: 
#line 3114 
                return __retres;
}


#line 3123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static pci_ers_result_t e100_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_1;
  
#line 3125 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3126 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 3128 
  tmp_1 = pci_enable_device(pdev);
  
#line 3128 
  if (tmp_1 != 0) {
    
#line 3129 
    printk("\001");
    
#line 3130 
    __retres = 4U;
    
#line 3130 
    goto return_label;
  }
  else ;
  
#line 3132 
  pci_set_master(pdev);
  
#line 3135 
  if ((pdev->devfn & 7U) != 0U) {
    
#line 3136 
    __retres = 5U;
    
#line 3136 
    goto return_label;
  }
  else ;
  
#line 3137 
  e100_hw_reset(nic);
  
#line 3138 
  e100_phy_init(nic);
  
#line 3140 
  __retres = 5U;
  return_label: 
#line 3140 
                return __retres;
}


#line 3150  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_io_resume(struct pci_dev *pdev)
{
  bool tmp_1;
  
#line 3152 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 3153 
  struct nic *nic = netdev_priv((struct net_device const *)netdev);
  
#line 3156 
  pci_enable_wake(pdev,0,(_Bool)0);
  
#line 3158 
  netif_device_attach(netdev);
  
#line 3159 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 3159 
  if ((int)tmp_1 != 0) {
    
#line 3160 
    e100_open(netdev);
    
#line 3161 
    ldv_mod_timer_100(& nic->watchdog,jiffies);
  }
  else ;
  
#line 3163 
  return;
}


#line 3165  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static struct pci_error_handlers const e100_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& e100_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & e100_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & e100_io_resume};

#line 3171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static struct pci_driver e100_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "e100", .id_table = (struct pci_device_id const *)(& e100_id_table), .probe = & e100_probe, .remove = & e100_remove, .suspend = & e100_suspend, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = & e100_resume, .shutdown = & e100_shutdown, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & e100_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 3185  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static int e100_init_module(void)
{
  int tmp;
  
#line 3187 
  if ((((1 << debug) + -1) & 1) != 0) {
    
#line 3188 
    printk("\001",(char *)"Intel(R) PRO/100 Network Driver",(char *)"3.5.24-k2");
    
#line 3189 
    printk("\001",(char *)"Copyright(c) 1999-2006 Intel Corporation");
  }
  else ;
  
#line 3191 
  tmp = ldv___pci_register_driver_101(& e100_driver,& __this_module,"e100");
  
#line 3191 
  return tmp;
}


#line 3194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/intel/e100.c"
static void e100_cleanup_module(void)
{
  
#line 3196 
  ldv_pci_unregister_driver_102(& e100_driver);
  
#line 3197 
  return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int (*ldv_emg_alias_eth_validate_addr_7)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
struct pci_driver *ldv_emg_alias_e100_driver_2 = & e100_driver;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int (*ldv_emg_alias_ethtool_op_get_ts_info_27)(struct net_device *, struct ethtool_ts_info *) = & ethtool_op_get_ts_info;

#line 61 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 62 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 63 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 66 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 67 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 68 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_diag_test_20(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 76 
  e100_diag_test(arg0,arg1,arg2);
  
#line 77 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_shutdown_2(struct pci_dev *arg0)
{
  
#line 81 
  e100_shutdown(arg0);
  
#line 82 
  return;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_change_mtu_9(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 86 
  tmp = e100_change_mtu(arg0,arg1);
  
#line 86 
  return tmp;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 91 
  tmp = e100_open(arg0);
  
#line 91 
  return tmp;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_suspend_4(struct pci_dev *arg0, struct pm_message arg1)
{
  int tmp;
  
#line 96 
  tmp = e100_suspend(arg0,arg1);
  
#line 96 
  return tmp;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_eeprom_13(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 101 
  tmp = e100_set_eeprom(arg0,arg1,arg2);
  
#line 101 
  return tmp;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
unsigned int ldv_emg_wrapper_e100_get_msglevel_15(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 106 
  tmp = e100_get_msglevel(arg0);
  
#line 106 
  return tmp;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
enum netdev_tx ldv_emg_wrapper_e100_xmit_frame_16(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 111 
  tmp = e100_xmit_frame(arg0,arg1);
  
#line 111 
  return tmp;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_get_regs_len_29(struct net_device *arg0)
{
  int tmp;
  
#line 116 
  tmp = e100_get_regs_len(arg0);
  
#line 116 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_resume_6(struct pci_dev *arg0)
{
  int tmp;
  
#line 121 
  tmp = e100_resume(arg0);
  
#line 121 
  return tmp;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_mac_address_17(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 126 
  tmp = e100_set_mac_address(arg0,arg1);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_do_ioctl_22(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 131 
  tmp = e100_do_ioctl(arg0,arg1,arg2);
  
#line 131 
  return tmp;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_e100_init_module(void)
{
  int tmp;
  
#line 136 
  tmp = e100_init_module();
  
#line 136 
  return tmp;
}


#line 139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_wol_23(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  int tmp;
  
#line 140 
  tmp = e100_set_wol(arg0,arg1);
  
#line 140 
  return tmp;
}


#line 144  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_tx_timeout_19(struct net_device *arg0)
{
  
#line 145 
  e100_tx_timeout(arg0);
  
#line 146 
  return;
}


#line 149  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_get_drvinfo_12(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 150 
  e100_get_drvinfo(arg0,arg1);
  
#line 151 
  return;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
unsigned int ldv_emg_wrapper_e100_get_link_10(struct net_device *arg0)
{
  unsigned int tmp;
  
#line 155 
  tmp = e100_get_link(arg0);
  
#line 155 
  return tmp;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
enum irqreturn ldv_emg_wrapper_e100_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 160 
  tmp = e100_intr(arg0,arg1);
  
#line 160 
  return tmp;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_nway_reset_26(struct net_device *arg0)
{
  int tmp;
  
#line 165 
  tmp = e100_nway_reset(arg0);
  
#line 165 
  return tmp;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_get_ringparam_28(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 170 
  e100_get_ringparam(arg0,arg1);
  
#line 171 
  return;
}


#line 174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_get_settings_18(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 175 
  tmp = e100_get_settings(arg0,arg1);
  
#line 175 
  return tmp;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_remove_5(struct pci_dev *arg0)
{
  
#line 180 
  e100_remove(arg0);
  
#line 181 
  return;
}


#line 184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_e100_cleanup_module(void)
{
  
#line 185 
  e100_cleanup_module();
  
#line 186 
  return;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_phys_id_4(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 189 
  tmp = e100_set_phys_id(arg0,arg1);
  
#line 189 
  return tmp;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_get_wol_21(struct net_device *arg0, struct ethtool_wolinfo *arg1)
{
  
#line 194 
  e100_get_wol(arg0,arg1);
  
#line 195 
  return;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_set_multicast_list_6(struct net_device *arg0)
{
  
#line 199 
  e100_set_multicast_list(arg0);
  
#line 200 
  return;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_get_strings_5(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 204 
  e100_get_strings(arg0,arg1,arg2);
  
#line 205 
  return;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 209 
  tmp = e100_close(arg0);
  
#line 209 
  return tmp;
}


#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_ringparam_14(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  int tmp;
  
#line 214 
  tmp = e100_set_ringparam(arg0,arg1);
  
#line 214 
  return tmp;
}


#line 218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_features_11(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 219 
  tmp = e100_set_features(arg0,arg1);
  
#line 219 
  return tmp;
}


#line 223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_probe_3(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 224 
  tmp = e100_probe(arg0,(struct pci_device_id const *)arg1);
  
#line 224 
  return tmp;
}


#line 228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_netpoll_31(struct net_device *arg0)
{
  
#line 229 
  e100_netpoll(arg0);
  
#line 230 
  return;
}


#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_get_eeprom_len_32(struct net_device *arg0)
{
  int tmp;
  
#line 234 
  tmp = e100_get_eeprom_len(arg0);
  
#line 234 
  return tmp;
}


#line 238  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_set_msglevel_30(struct net_device *arg0, unsigned int arg1)
{
  
#line 239 
  e100_set_msglevel(arg0,arg1);
  
#line 240 
  return;
}


#line 243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_get_eeprom_2(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 244 
  tmp = e100_get_eeprom(arg0,arg1,arg2);
  
#line 244 
  return tmp;
}


#line 248  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_set_settings_3(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 249 
  tmp = e100_set_settings(arg0,arg1);
  
#line 249 
  return tmp;
}


#line 253  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_get_regs_24(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 254 
  e100_get_regs(arg0,arg1,arg2);
  
#line 255 
  return;
}


#line 258  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
void ldv_emg_wrapper_e100_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 259 
  e100_get_ethtool_stats(arg0,arg1,arg2);
  
#line 260 
  return;
}


#line 263  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
int ldv_emg_wrapper_e100_get_sset_count_25(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 264 
  tmp = e100_get_sset_count(arg0,arg1);
  
#line 264 
  return tmp;
}


#line 269  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void *ERR_PTR(long error)
{
  void *tmp;
  
#line 272 
  tmp = ldv_err_ptr(error);
  
#line 272 
  return tmp;
}


#line 276  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static long PTR_ERR(void const *ptr)
{
  long tmp;
  
#line 279 
  tmp = ldv_ptr_err(ptr);
  
#line 279 
  return tmp;
}


#line 283  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static bool IS_ERR(void const *ptr)
{
  bool __retres;
  long ret;
  
#line 287 
  ret = ldv_is_err(ptr);
  
#line 288 
  __retres = (_Bool)(ret != 0L);
  
#line 288 
  return __retres;
}


#line 651  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 654 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 654 
  return tmp;
}


#line 939  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1)
{
  
#line 943 
  ldv_spin_model_lock((char *)"cmd_lock_of_nic");
  
#line 945 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 946 
  return;
}


#line 949  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irqrestore_73(spinlock_t *lock, unsigned long flags)
{
  
#line 953 
  ldv_spin_model_unlock((char *)"cmd_lock_of_nic");
  
#line 955 
  spin_unlock_irqrestore(lock,flags);
  
#line 956 
  return;
}


#line 959  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 963 
  ldv_spin_model_lock((char *)"cmd_lock_of_nic");
  
#line 965 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 966 
  return;
}


#line 969  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 973 
  ldv_spin_model_unlock((char *)"cmd_lock_of_nic");
  
#line 975 
  spin_unlock_irqrestore(lock,flags);
  
#line 976 
  return;
}


#line 979  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1)
{
  
#line 983 
  ldv_spin_model_lock((char *)"cmd_lock_of_nic");
  
#line 985 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 986 
  return;
}


#line 989  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 993 
  ldv_spin_model_unlock((char *)"cmd_lock_of_nic");
  
#line 995 
  spin_unlock_irqrestore(lock,flags);
  
#line 996 
  return;
}


#line 999  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1)
{
  
#line 1003 
  ldv_spin_model_lock((char *)"cb_lock_of_nic");
  
#line 1005 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1006 
  return;
}


#line 1009  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static bool ldv_schedule_work_79(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1013 
  tmp = ldv_emg_schedule_work(work);
  
#line 1013 
  __retres = tmp != 0;
  
#line 1013 
  return __retres;
}


#line 1017  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irqrestore_80(spinlock_t *lock, unsigned long flags)
{
  
#line 1021 
  ldv_spin_model_unlock((char *)"cb_lock_of_nic");
  
#line 1023 
  spin_unlock_irqrestore(lock,flags);
  
#line 1024 
  return;
}


#line 1027  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv___ldv_spin_lock_81(spinlock_t *ldv_func_arg1)
{
  
#line 1031 
  ldv_spin_model_lock((char *)"mdio_lock_of_nic");
  
#line 1033 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1034 
  return;
}


#line 1037  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irqrestore_82(spinlock_t *lock, unsigned long flags)
{
  
#line 1041 
  ldv_spin_model_unlock((char *)"mdio_lock_of_nic");
  
#line 1043 
  spin_unlock_irqrestore(lock,flags);
  
#line 1044 
  return;
}


#line 1047  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irqrestore_83(spinlock_t *lock, unsigned long flags)
{
  
#line 1051 
  ldv_spin_model_unlock((char *)"mdio_lock_of_nic");
  
#line 1053 
  spin_unlock_irqrestore(lock,flags);
  
#line 1054 
  return;
}


#line 1057  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_lock_irq_84(spinlock_t *lock)
{
  
#line 1061 
  ldv_spin_model_lock((char *)"cmd_lock_of_nic");
  
#line 1063 
  spin_lock_irq(lock);
  
#line 1064 
  return;
}


#line 1067  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_irq_85(spinlock_t *lock)
{
  
#line 1071 
  ldv_spin_model_unlock((char *)"cmd_lock_of_nic");
  
#line 1073 
  spin_unlock_irq(lock);
  
#line 1074 
  return;
}


#line 1077  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_mod_timer_86(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1081 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1081 
  return tmp;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_lock_87(spinlock_t *lock)
{
  
#line 1089 
  ldv_spin_model_lock((char *)"cb_lock_of_nic");
  
#line 1091 
  spin_lock(lock);
  
#line 1092 
  return;
}


#line 1095  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_spin_unlock_88(spinlock_t *lock)
{
  
#line 1099 
  ldv_spin_model_unlock((char *)"cb_lock_of_nic");
  
#line 1101 
  spin_unlock(lock);
  
#line 1102 
  return;
}


#line 1105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_mod_timer_89(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1109 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1109 
  return tmp;
}


#line 1113  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_request_irq_90(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1117 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1117 
  return tmp;
}


#line 1121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_del_timer_sync_91(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1125 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1125 
  return tmp;
}


#line 1129  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_free_irq_92(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1133 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1134 
  return;
}


#line 1137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_del_timer_sync_93(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1141 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1141 
  return tmp;
}


#line 1145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static bool ldv_schedule_work_94(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1149 
  tmp = ldv_emg_schedule_work(work);
  
#line 1149 
  __retres = tmp != 0;
  
#line 1149 
  return __retres;
}


#line 1153  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_95(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1157 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1157 
  return tmp;
}


#line 1161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_register_netdev_96(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1165 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1165 
  return tmp;
}


#line 1169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_free_netdev_97(struct net_device *ldv_func_arg1)
{
  
#line 1173 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1174 
  return;
}


#line 1177  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_unregister_netdev_98(struct net_device *ldv_func_arg1)
{
  
#line 1181 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1182 
  return;
}


#line 1185  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_free_netdev_99(struct net_device *ldv_func_arg1)
{
  
#line 1189 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1190 
  return;
}


#line 1193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv_mod_timer_100(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1197 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1197 
  return tmp;
}


#line 1201  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static int ldv___pci_register_driver_101(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1205 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1205 
  return tmp;
}


#line 1209  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/weaver/.tmp_e100.c.aux"
static void ldv_pci_unregister_driver_102(struct pci_driver *ldv_func_arg1)
{
  
#line 1213 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1214 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err_or_null(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 26 
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 24 
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 91 
void *ldv_pci_scenario_16(void *arg0);


#line 93 
int main(void);


#line 94 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 95 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 97 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 101 
void *ldv_initialization_1(void *arg0);


#line 102 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 103 
void *ldv_timer_scenario_14(void *arg0);


#line 104 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 108 
void *ldv_interrupt_scenario_13(void *arg0);


#line 109 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 110 
void *ldv_random_allocationless_scenario_15(void *arg0);


#line 111 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 126 
  tmp = ldv_undef_int();
  
#line 126 
  switch (tmp) {
    case 0: 
#line 127 
    ;
    
#line 128 
    cf_arg_15 = (struct ldv_struct_random_allocationless_scenario_15 *)ldv_xmalloc(16UL);
    
#line 129 
    cf_arg_15->arg0 = arg0;
    
#line 130 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_15,(void *)cf_arg_15);
    
#line 131 
    __VERIFIER_assume(ret == 0);
    
#line 132 
    goto ldv_44748;
    default: 
#line 134 
    ;
    
#line 134 
    __VERIFIER_assume(0);
  }
  ldv_44748: 
#line 135 
  ;
  
#line 136 
  return;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 146 
  ldv_9_timer_list = arg0;
  
#line 150 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 151 
  ;
  
#line 151 
  __retres = 0;
  
#line 151 
  return __retres;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 162 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_e100_driver_2;
  
#line 165 
  ldv_10_pci_driver = arg0;
  
#line 169 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 173 
  goto return_label;
  return_label: 
#line 175 
                return;
}


#line 180  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 183 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_e100_driver_2;
  
#line 187 
  tmp_0 = ldv_undef_int();
  
#line 187 
  if (tmp_0 != 0) {
    
#line 189 
    ldv_7_pci_driver = arg0;
    
#line 193 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 197 
    __retres = 0;
    
#line 197 
    goto return_label;
  }
  else {
    int tmp;
    
#line 204 
    tmp = ldv_undef_int_negative();
    
#line 204 
    __retres = tmp;
    
#line 204 
    goto return_label;
  }
  return_label: 
#line 187 
                return __retres;
}


#line 214  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 217 
  ldv_initialize();
  
#line 220 
  ldv_initialization_1((void *)0);
  
#line 222 
  __retres = 0;
  
#line 222 
  return __retres;
}


#line 227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_13 *cf_arg_13;
  int tmp;
  
#line 230 
  tmp = ldv_undef_int();
  
#line 230 
  switch (tmp) {
    case 0: 
#line 231 
    ;
    
#line 232 
    cf_arg_13 = (struct ldv_struct_interrupt_scenario_13 *)ldv_xmalloc(32UL);
    
#line 233 
    cf_arg_13->arg0 = arg0;
    
#line 234 
    cf_arg_13->arg1 = arg1;
    
#line 235 
    cf_arg_13->arg2 = arg2;
    
#line 236 
    cf_arg_13->arg3 = arg3;
    
#line 237 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_interrupt_scenario_13,(void *)cf_arg_13);
    
#line 238 
    __VERIFIER_assume(ret == 0);
    
#line 239 
    goto ldv_44780;
    default: 
#line 241 
    ;
    
#line 241 
    __VERIFIER_assume(0);
  }
  ldv_44780: 
#line 242 
  ;
  
#line 243 
  return;
}


#line 247  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_13;
  int tmp;
  
#line 250 
  tmp = ldv_undef_int();
  
#line 250 
  switch (tmp) {
    case 0: 
#line 251 
    ;
    
#line 252 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 253 
    __VERIFIER_assume(ret == 0);
    
#line 254 
    goto ldv_44788;
    default: 
#line 256 
    ;
    
#line 256 
    __VERIFIER_assume(0);
  }
  ldv_44788: 
#line 257 
  ;
  
#line 258 
  return;
}


#line 262  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 269 
  tmp_0 = ldv_undef_int();
  
#line 269 
  if (tmp_0 != 0) {
    
#line 271 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 275 
    __retres = ldv_5_netdev;
    
#line 275 
    goto return_label;
  }
  else {
    
#line 282 
    __retres = (struct net_device *)0;
    
#line 282 
    goto return_label;
  }
  return_label: 
#line 269 
                return __retres;
}


#line 292  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 295 
  tmp = ldv_undef_int();
  
#line 295 
  switch (tmp) {
    case 0: 
#line 296 
    ;
    
#line 297 
    cf_arg_16 = (struct ldv_struct_pci_scenario_16 *)ldv_xmalloc(16UL);
    
#line 298 
    cf_arg_16->arg0 = arg0;
    
#line 299 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_pci_scenario_16,(void *)cf_arg_16);
    
#line 300 
    __VERIFIER_assume(ret == 0);
    
#line 301 
    goto ldv_44802;
    default: 
#line 303 
    ;
    
#line 303 
    __VERIFIER_assume(0);
  }
  ldv_44802: 
#line 304 
  ;
  
#line 305 
  return;
}


#line 309  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 314 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_e100_intr_2;
  
#line 319 
  tmp_0 = ldv_undef_int();
  
#line 319 
  if (tmp_0 != 0) {
    
#line 321 
    ldv_12_line = (int)arg0;
    
#line 322 
    ldv_12_callback = arg1;
    
#line 323 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 324 
    ldv_12_data = arg4;
    
#line 328 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 332 
    __retres = 0;
    
#line 332 
    goto return_label;
  }
  else {
    int tmp;
    
#line 339 
    tmp = ldv_undef_int_negative();
    
#line 339 
    __retres = tmp;
    
#line 339 
    goto return_label;
  }
  return_label: 
#line 319 
                return __retres;
}


#line 349  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 355 
  ldv_3_line = (int)arg0;
  
#line 359 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 363 
  goto return_label;
  return_label: 
#line 365 
                return;
}


#line 370  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 377 
  tmp = ldv_undef_int();
  
#line 377 
  if (tmp != 0) {
    
#line 379 
    ldv_8_work_struct = arg0;
    
#line 383 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 385 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 390 
    __retres = (_Bool)1;
    
#line 390 
    goto return_label;
  }
  else {
    
#line 397 
    __retres = (_Bool)0;
    
#line 397 
    goto return_label;
  }
  return_label: 
#line 377 
                return __retres;
}


#line 407  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 414 
  ldv_1_ret = ldv_emg_e100_init_module();
  
#line 415 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 418 
  tmp = ldv_undef_int();
  
#line 418 
  if (tmp != 0) {
    
#line 420 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 424 
    __retres = (void *)0;
    
#line 424 
    goto return_label;
  }
  else {
    
#line 428 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 433 
    ldv_emg_e100_cleanup_module();
    
#line 437 
    __retres = (void *)0;
    
#line 437 
    goto return_label;
  }
  
#line 440 
  __retres = (void *)0;
  return_label: 
#line 440 
                return __retres;
}


#line 445  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_14 *cf_arg_14;
  int tmp;
  
#line 448 
  tmp = ldv_undef_int();
  
#line 448 
  switch (tmp) {
    case 0: 
#line 449 
    ;
    
#line 450 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 451 
    __VERIFIER_assume(ret == 0);
    
#line 452 
    goto ldv_44840;
    default: 
#line 454 
    ;
    
#line 454 
    __VERIFIER_assume(0);
  }
  ldv_44840: 
#line 455 
  ;
  
#line 456 
  return;
}


#line 460  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_14(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_14_container;
  
#line 465 
  struct ldv_struct_timer_scenario_14 *data = (struct ldv_struct_timer_scenario_14 *)arg0;
  
#line 470 
  if (data != (struct ldv_struct_timer_scenario_14 *)0) {
    
#line 471 
    ldv_14_container = data->arg0;
    
#line 472 
    ldv_free((void *)data);
  }
  else ;
  
#line 477 
  if (ldv_14_container->function != (void (*)(unsigned long ))0) {
    
#line 479 
    ldv_switch_to_interrupt_context();
    
#line 481 
    (*(ldv_14_container->function))(ldv_14_container->data);
    
#line 483 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 492 
  __retres = (void *)0;
  
#line 492 
  goto return_label;
  
#line 494 
  __retres = (void *)0;
  return_label: 
#line 494 
                return __retres;
}


#line 499  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_16 *cf_arg_16;
  int tmp;
  
#line 502 
  tmp = ldv_undef_int();
  
#line 502 
  switch (tmp) {
    case 0: 
#line 503 
    ;
    
#line 504 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 505 
    __VERIFIER_assume(ret == 0);
    
#line 506 
    goto ldv_44853;
    default: 
#line 508 
    ;
    
#line 508 
    __VERIFIER_assume(0);
  }
  ldv_44853: 
#line 509 
  ;
  
#line 510 
  return;
}


#line 514  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_16(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_16_resource_1;
  struct pci_device_id *ldv_16_ldv_param_1_2;
  struct pm_message ldv_16_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 519 
  struct pci_driver *ldv_16_container = ldv_emg_alias_e100_driver_2;
  
#line 520 
  int ldv_16_ret = ldv_undef_int();
  
#line 523 
  struct ldv_struct_pci_scenario_16 *data = (struct ldv_struct_pci_scenario_16 *)arg0;
  
#line 527 
  ldv_16_ret = ldv_undef_int();
  
#line 530 
  if (data != (struct ldv_struct_pci_scenario_16 *)0) {
    
#line 531 
    ldv_16_container = data->arg0;
    
#line 532 
    ldv_free((void *)data);
  }
  else ;
  
#line 543 
  goto ldv_main_16;
  
#line 545 
  __retres = (void *)0;
  
#line 545 
  goto return_label;
  ldv_main_16: 
#line 548 
  ;
  
#line 551 
  tmp_2 = ldv_undef_int();
  
#line 551 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 553 
    ldv_16_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 558 
    ldv_pre_probe();
    
#line 560 
    ldv_16_ret = ldv_emg_wrapper_e100_probe_3(ldv_16_resource_1,ldv_16_ldv_param_1_2);
    
#line 562 
    ldv_16_ret = ldv_post_probe(ldv_16_ret);
    
#line 566 
    ldv_free((void *)ldv_16_ldv_param_1_2);
    
#line 569 
    tmp_1 = ldv_undef_int();
    
#line 569 
    if (tmp_1 != 0) {
      
#line 571 
      __VERIFIER_assume(ldv_16_ret == 0);
      
#line 578 
      goto ldv_call_16;
    }
    else {
      
#line 582 
      __VERIFIER_assume(ldv_16_ret != 0);
      
#line 589 
      goto ldv_main_16;
    }
  }
  else {
    
#line 601 
    __retres = (void *)0;
    
#line 601 
    goto return_label;
  }
  
#line 604 
  __retres = (void *)0;
  
#line 604 
  goto return_label;
  ldv_call_16: 
#line 607 
  ;
  
#line 610 
  tmp_3 = ldv_undef_int();
  
#line 610 
  switch (tmp_3) {
    case 1: 
#line 611 
    ;
    
#line 620 
    goto ldv_call_16;
    case 2: 
#line 623 
    ;
    
#line 626 
    ldv_16_ret = ldv_emg_wrapper_e100_suspend_4(ldv_16_resource_1,ldv_16_resource_0);
    
#line 628 
    ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    
#line 632 
    if (ldv_16_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 634 
      ldv_16_ret = (*(ldv_16_container->suspend_late))(ldv_16_resource_1,ldv_16_resource_0);
      
#line 636 
      ldv_16_ret = ldv_filter_err_code(ldv_16_ret);
    }
    else 
#line 638 
         ldv_16_ret = ldv_undef_int();
    
#line 643 
    if (ldv_16_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 645 
      (*(ldv_16_container->resume_early))(ldv_16_resource_1); else ;
    
#line 651 
    ldv_emg_wrapper_e100_resume_6(ldv_16_resource_1);
    
#line 658 
    goto ldv_call_16;
    case 3: 
#line 661 
    ;
    
#line 664 
    ldv_emg_wrapper_e100_shutdown_2(ldv_16_resource_1);
    
#line 669 
    ldv_emg_wrapper_e100_remove_5(ldv_16_resource_1);
    
#line 676 
    goto ldv_main_16;
    default: 
#line 679 
    ;
    
#line 679 
    __VERIFIER_assume(0);
  }
  
#line 682 
  __retres = (void *)0;
  return_label: 
#line 682 
                return __retres;
}


#line 687  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 691 
  int ldv_11_ret = ldv_undef_int();
  
#line 694 
  ldv_11_ret = ldv_undef_int();
  
#line 697 
  tmp_3 = ldv_undef_int();
  
#line 697 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 699 
    ldv_11_netdev = arg0;
    
#line 704 
    ldv_11_ret = ldv_emg_wrapper_e100_open_2(ldv_11_netdev);
    
#line 707 
    tmp_1 = ldv_undef_int();
    
#line 707 
    if (tmp_1 != 0) {
      
#line 709 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 713 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 717 
      __retres = 0;
      
#line 717 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 724 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 725 
      ldv_failed_register_netdev();
      
#line 726 
      tmp_0 = ldv_undef_int_negative();
      
#line 726 
      __retres = tmp_0;
      
#line 726 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 734 
    ldv_failed_register_netdev();
    
#line 735 
    tmp_2 = ldv_undef_int_negative();
    
#line 735 
    __retres = tmp_2;
    
#line 735 
    goto return_label;
  }
  return_label: 
#line 697 
                return __retres;
}


#line 745  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 751 
  ldv_6_netdev = arg0;
  
#line 756 
  ldv_emg_wrapper_e100_close_2(ldv_6_netdev);
  
#line 760 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 764 
  goto return_label;
  return_label: 
#line 766 
                return;
}


#line 771  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_13(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_13_ret_val;
  int ldv_13_line;
  void *ldv_13_data;
  enum irqreturn (*ldv_13_thread)(int , void *);
  int tmp;
  
#line 777 
  enum irqreturn (*ldv_13_callback)(int , void *) = & ldv_emg_wrapper_e100_intr_2;
  
#line 780 
  struct ldv_struct_interrupt_scenario_13 *data = (struct ldv_struct_interrupt_scenario_13 *)arg0;
  
#line 785 
  if (data != (struct ldv_struct_interrupt_scenario_13 *)0) {
    
#line 786 
    ldv_13_line = data->arg0;
    
#line 787 
    ldv_13_callback = data->arg1;
    
#line 788 
    ldv_13_thread = data->arg2;
    
#line 789 
    ldv_13_data = data->arg3;
    
#line 790 
    ldv_free((void *)data);
  }
  else ;
  
#line 796 
  ldv_switch_to_interrupt_context();
  
#line 798 
  ldv_13_ret_val = ldv_emg_wrapper_e100_intr_2(ldv_13_line,ldv_13_data);
  
#line 800 
  ldv_switch_to_process_context();
  
#line 803 
  tmp = ldv_undef_int();
  
#line 803 
  if (tmp != 0) {
    
#line 805 
    __VERIFIER_assume(ldv_13_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 809 
    if (ldv_13_thread != (enum irqreturn (*)(int , void *))0) 
#line 811 
                                                              (*ldv_13_thread)(ldv_13_line,ldv_13_data); else ;
  }
  else 
#line 818 
       __VERIFIER_assume(ldv_13_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 827 
  __retres = (void *)0;
  
#line 827 
  goto return_label;
  
#line 829 
  __retres = (void *)0;
  return_label: 
#line 829 
                return __retres;
}


#line 834  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_14 *cf_arg_14;
  int tmp;
  
#line 837 
  tmp = ldv_undef_int();
  
#line 837 
  switch (tmp) {
    case 0: 
#line 838 
    ;
    
#line 839 
    cf_arg_14 = (struct ldv_struct_timer_scenario_14 *)ldv_xmalloc(16UL);
    
#line 840 
    cf_arg_14->arg0 = arg0;
    
#line 841 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_timer_scenario_14,(void *)cf_arg_14);
    
#line 842 
    __VERIFIER_assume(ret == 0);
    
#line 843 
    goto ldv_44898;
    default: 
#line 845 
    ;
    
#line 845 
    __VERIFIER_assume(0);
  }
  ldv_44898: 
#line 846 
  ;
  
#line 847 
  return;
}


#line 851  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_15(void *arg0)
{
  void *__retres;
  struct ethtool_cmd *ldv_15_ldv_param_1_3;
  struct ethtool_drvinfo *ldv_15_ldv_param_1_10;
  struct ethtool_ringparam *ldv_15_ldv_param_1_13;
  void *ldv_15_ldv_param_1_15;
  unsigned char *ldv_15_ldv_param_2_28;
  struct ethtool_regs *ldv_15_ldv_param_1_25;
  int ldv_15_ldv_param_2_23;
  struct ethtool_ringparam *ldv_15_ldv_param_1_29;
  struct ethtool_cmd *ldv_15_ldv_param_1_2;
  enum ethtool_phys_id_state *ldv_15_ldv_param_1_4;
  struct ethtool_ts_info *ldv_15_ldv_param_1_5;
  struct ethtool_eeprom *ldv_15_ldv_param_1_11;
  unsigned long long *ldv_15_ldv_param_2_8;
  unsigned char *ldv_15_ldv_param_2_12;
  struct net_device *ldv_15_container;
  unsigned long long *ldv_15_ldv_param_2_20;
  void *ldv_15_ldv_param_2_26;
  struct ethtool_eeprom *ldv_15_ldv_param_1_16;
  int ldv_15_ldv_param_1_18;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_21;
  unsigned char *ldv_15_ldv_param_2_17;
  int ldv_15_ldv_param_1_6;
  unsigned long long ldv_15_ldv_param_1_9;
  struct sk_buff *ldv_15_ldv_param_0_14;
  struct ethtool_test *ldv_15_ldv_param_1_19;
  struct ethtool_wolinfo *ldv_15_ldv_param_1_24;
  struct ifreq *ldv_15_ldv_param_1_22;
  unsigned int ldv_15_ldv_param_1_27;
  unsigned int ldv_15_ldv_param_1_30;
  struct ethtool_stats *ldv_15_ldv_param_1_7;
  int tmp_21;
  
#line 885 
  struct ldv_struct_random_allocationless_scenario_15 *data = (struct ldv_struct_random_allocationless_scenario_15 *)arg0;
  
#line 890 
  if (data != (struct ldv_struct_random_allocationless_scenario_15 *)0) {
    
#line 891 
    ldv_15_container = data->arg0;
    
#line 892 
    ldv_free((void *)data);
  }
  else ;
  
#line 900 
  goto ldv_call_15;
  
#line 902 
  __retres = (void *)0;
  
#line 902 
  goto return_label;
  ldv_call_15: 
#line 905 
  ;
  
#line 908 
  tmp_21 = ldv_undef_int();
  
#line 908 
  if (tmp_21 != 0) {
    int tmp_0;
    
#line 910 
    ldv_15_ldv_param_1_2 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
    
#line 913 
    tmp_0 = ldv_undef_int();
    
#line 913 
    switch (tmp_0) {
      case 1: 
#line 914 
      ;
      
#line 917 
      ldv_emg_wrapper_e100_get_settings_18(ldv_15_container,ldv_15_ldv_param_1_2);
      
#line 920 
      goto ldv_44936;
      case 2: 
#line 922 
      ;
      
#line 925 
      ldv_emg_wrapper_e100_set_multicast_list_6(ldv_15_container);
      
#line 928 
      goto ldv_44936;
      case 3: 
#line 930 
      ;
      
#line 933 
      ldv_emg_wrapper_e100_nway_reset_26(ldv_15_container);
      
#line 936 
      goto ldv_44936;
      case 4: 
#line 938 
      ;
      
#line 944 
      ldv_emg_wrapper_e100_set_msglevel_30(ldv_15_container,ldv_15_ldv_param_1_30);
      
#line 950 
      goto ldv_44936;
      case 5: 
#line 952 
      ;
      
#line 955 
      ldv_emg_wrapper_e100_get_regs_len_29(ldv_15_container);
      
#line 958 
      goto ldv_44936;
      case 6: 
#line 960 
      ;
      
#line 962 
      ldv_15_ldv_param_1_29 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 967 
      ldv_emg_wrapper_e100_get_ringparam_28(ldv_15_container,ldv_15_ldv_param_1_29);
      
#line 971 
      ldv_free((void *)ldv_15_ldv_param_1_29);
      
#line 974 
      goto ldv_44936;
      case 7: 
#line 976 
      ;
      
#line 978 
      ldv_15_ldv_param_2_28 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 983 
      ldv_emg_wrapper_e100_get_strings_5(ldv_15_container,ldv_15_ldv_param_1_27,ldv_15_ldv_param_2_28);
      
#line 987 
      ldv_free((void *)ldv_15_ldv_param_2_28);
      
#line 990 
      goto ldv_44936;
      case 8: 
#line 992 
      ;
      
#line 995 
      ldv_emg_wrapper_e100_netpoll_31(ldv_15_container);
      
#line 998 
      goto ldv_44936;
      case 9: 
#line 1000 
      ;
      
#line 1003 
      ldv_emg_wrapper_e100_tx_timeout_19(ldv_15_container);
      
#line 1006 
      goto ldv_44936;
      case 10: 
#line 1008 
      ;
      
#line 1010 
      ldv_15_ldv_param_2_26 = ldv_xmalloc_unknown_size(0UL);
      
#line 1011 
      ldv_15_ldv_param_1_25 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 1016 
      ldv_emg_wrapper_e100_get_regs_24(ldv_15_container,ldv_15_ldv_param_1_25,ldv_15_ldv_param_2_26);
      
#line 1020 
      ldv_free(ldv_15_ldv_param_2_26);
      
#line 1021 
      ldv_free((void *)ldv_15_ldv_param_1_25);
      
#line 1024 
      goto ldv_44936;
      case 11: 
#line 1026 
      ;
      
#line 1028 
      ldv_15_ldv_param_1_24 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1033 
      ldv_emg_wrapper_e100_set_wol_23(ldv_15_container,ldv_15_ldv_param_1_24);
      
#line 1037 
      ldv_free((void *)ldv_15_ldv_param_1_24);
      
#line 1040 
      goto ldv_44936;
      case 12: 
#line 1042 
      ;
      
#line 1044 
      ldv_15_ldv_param_1_22 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1049 
      ldv_emg_wrapper_e100_do_ioctl_22(ldv_15_container,ldv_15_ldv_param_1_22,ldv_15_ldv_param_2_23);
      
#line 1053 
      ldv_free((void *)ldv_15_ldv_param_1_22);
      
#line 1056 
      goto ldv_44936;
      case 13: 
#line 1058 
      ;
      
#line 1060 
      ldv_15_ldv_param_1_21 = (struct ethtool_wolinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1065 
      ldv_emg_wrapper_e100_get_wol_21(ldv_15_container,ldv_15_ldv_param_1_21);
      
#line 1069 
      ldv_free((void *)ldv_15_ldv_param_1_21);
      
#line 1072 
      goto ldv_44936;
      case 14: 
#line 1074 
      ;
      
#line 1076 
      ldv_15_ldv_param_2_20 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1077 
      ldv_15_ldv_param_1_19 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 1082 
      ldv_emg_wrapper_e100_diag_test_20(ldv_15_container,ldv_15_ldv_param_1_19,ldv_15_ldv_param_2_20);
      
#line 1086 
      ldv_free((void *)ldv_15_ldv_param_2_20);
      
#line 1087 
      ldv_free((void *)ldv_15_ldv_param_1_19);
      
#line 1090 
      goto ldv_44936;
      case 15: 
#line 1092 
      ;
      
#line 1098 
      ldv_emg_wrapper_e100_get_sset_count_25(ldv_15_container,ldv_15_ldv_param_1_18);
      
#line 1104 
      goto ldv_44936;
      case 16: 
#line 1106 
      ;
      
#line 1108 
      ldv_15_ldv_param_1_16 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1109 
      ldv_15_ldv_param_2_17 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1114 
      ldv_emg_wrapper_e100_get_eeprom_2(ldv_15_container,ldv_15_ldv_param_1_16,ldv_15_ldv_param_2_17);
      
#line 1118 
      ldv_free((void *)ldv_15_ldv_param_1_16);
      
#line 1119 
      ldv_free((void *)ldv_15_ldv_param_2_17);
      
#line 1122 
      goto ldv_44936;
      case 17: 
#line 1124 
      ;
      
#line 1126 
      ldv_15_ldv_param_1_15 = ldv_xmalloc_unknown_size(0UL);
      
#line 1131 
      ldv_emg_wrapper_e100_set_mac_address_17(ldv_15_container,ldv_15_ldv_param_1_15);
      
#line 1135 
      ldv_free(ldv_15_ldv_param_1_15);
      
#line 1138 
      goto ldv_44936;
      case 18: 
#line 1140 
      ;
      
#line 1142 
      ldv_15_ldv_param_0_14 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1147 
      ldv_emg_wrapper_e100_xmit_frame_16(ldv_15_ldv_param_0_14,ldv_15_container);
      
#line 1151 
      ldv_free((void *)ldv_15_ldv_param_0_14);
      
#line 1154 
      goto ldv_44936;
      case 19: 
#line 1156 
      ;
      
#line 1159 
      ldv_emg_wrapper_e100_get_msglevel_15(ldv_15_container);
      
#line 1162 
      goto ldv_44936;
      case 20: 
#line 1164 
      ;
      
#line 1166 
      ldv_15_ldv_param_1_13 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 1171 
      ldv_emg_wrapper_e100_set_ringparam_14(ldv_15_container,ldv_15_ldv_param_1_13);
      
#line 1175 
      ldv_free((void *)ldv_15_ldv_param_1_13);
      
#line 1178 
      goto ldv_44936;
      case 21: 
#line 1180 
      ;
      
#line 1182 
      ldv_15_ldv_param_1_11 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1183 
      ldv_15_ldv_param_2_12 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1188 
      ldv_emg_wrapper_e100_set_eeprom_13(ldv_15_container,ldv_15_ldv_param_1_11,ldv_15_ldv_param_2_12);
      
#line 1192 
      ldv_free((void *)ldv_15_ldv_param_1_11);
      
#line 1193 
      ldv_free((void *)ldv_15_ldv_param_2_12);
      
#line 1196 
      goto ldv_44936;
      case 22: 
#line 1198 
      ;
      
#line 1201 
      ldv_emg_wrapper_e100_get_eeprom_len_32(ldv_15_container);
      
#line 1204 
      goto ldv_44936;
      case 23: 
#line 1206 
      ;
      
#line 1208 
      ldv_15_ldv_param_1_10 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1213 
      ldv_emg_wrapper_e100_get_drvinfo_12(ldv_15_container,ldv_15_ldv_param_1_10);
      
#line 1217 
      ldv_free((void *)ldv_15_ldv_param_1_10);
      
#line 1220 
      goto ldv_44936;
      case 24: 
#line 1222 
      ;
      
#line 1228 
      ldv_emg_wrapper_e100_set_features_11(ldv_15_container,ldv_15_ldv_param_1_9);
      
#line 1234 
      goto ldv_44936;
      case 25: 
#line 1236 
      ;
      
#line 1239 
      ldv_emg_wrapper_e100_get_link_10(ldv_15_container);
      
#line 1242 
      goto ldv_44936;
      case 26: 
#line 1244 
      ;
      
#line 1247 
      (*ldv_emg_alias_eth_validate_addr_7)(ldv_15_container);
      
#line 1250 
      goto ldv_44936;
      case 27: 
#line 1252 
      ;
      
#line 1254 
      ldv_15_ldv_param_2_8 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1255 
      ldv_15_ldv_param_1_7 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1260 
      ldv_emg_wrapper_e100_get_ethtool_stats_8(ldv_15_container,ldv_15_ldv_param_1_7,ldv_15_ldv_param_2_8);
      
#line 1264 
      ldv_free((void *)ldv_15_ldv_param_2_8);
      
#line 1265 
      ldv_free((void *)ldv_15_ldv_param_1_7);
      
#line 1268 
      goto ldv_44936;
      case 28: 
#line 1270 
      ;
      
#line 1276 
      ldv_emg_wrapper_e100_change_mtu_9(ldv_15_container,ldv_15_ldv_param_1_6);
      
#line 1282 
      goto ldv_44936;
      case 29: 
#line 1284 
      ;
      
#line 1286 
      ldv_15_ldv_param_1_5 = (struct ethtool_ts_info *)ldv_xmalloc_unknown_size(0UL);
      
#line 1291 
      (*ldv_emg_alias_ethtool_op_get_ts_info_27)(ldv_15_container,ldv_15_ldv_param_1_5);
      
#line 1295 
      ldv_free((void *)ldv_15_ldv_param_1_5);
      
#line 1298 
      goto ldv_44936;
      case 30: 
#line 1300 
      ;
      
#line 1302 
      ldv_15_ldv_param_1_4 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1307 
      ldv_emg_wrapper_e100_set_phys_id_4(ldv_15_container,*ldv_15_ldv_param_1_4);
      
#line 1311 
      ldv_free((void *)ldv_15_ldv_param_1_4);
      
#line 1314 
      goto ldv_44936;
      case 31: 
#line 1316 
      ;
      
#line 1318 
      ldv_15_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1323 
      ldv_emg_wrapper_e100_set_settings_3(ldv_15_container,ldv_15_ldv_param_1_3);
      
#line 1327 
      ldv_free((void *)ldv_15_ldv_param_1_3);
      
#line 1330 
      goto ldv_44936;
      default: 
#line 1332 
      ;
      
#line 1332 
      __VERIFIER_assume(0);
    }
    ldv_44936: 
#line 1335 
    ;
    
#line 1335 
    ldv_free((void *)ldv_15_ldv_param_1_2);
    
#line 1342 
    goto ldv_call_15;
  }
  else {
    
#line 1350 
    __retres = (void *)0;
    
#line 1350 
    goto return_label;
  }
  
#line 1353 
  __retres = (void *)0;
  return_label: 
#line 1353 
                return __retres;
}


#line 1358  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_15 *cf_arg_15;
  int tmp;
  
#line 1361 
  tmp = ldv_undef_int();
  
#line 1361 
  switch (tmp) {
    case 0: 
#line 1362 
    ;
    
#line 1363 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 1364 
    __VERIFIER_assume(ret == 0);
    
#line 1365 
    goto ldv_44974;
    default: 
#line 1367 
    ;
    
#line 1367 
    __VERIFIER_assume(0);
  }
  ldv_44974: 
#line 1368 
  ;
  
#line 1369 
  return;
}


#line 1373  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1379 
  ldv_2_netdev = arg0;
  
#line 1380 
  ldv_free((void *)ldv_2_netdev);
  
#line 1384 
  goto return_label;
  return_label: 
#line 1386 
                return;
}


#line 1391  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/intel/e100.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1398 
  tmp_0 = ldv_undef_int();
  
#line 1398 
  if (tmp_0 != 0) {
    
#line 1400 
    ldv_4_timer_list = arg0;
    
#line 1404 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1408 
    __retres = 0;
    
#line 1408 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1415 
    tmp = ldv_undef_int_negative();
    
#line 1415 
    __retres = tmp;
    
#line 1415 
    goto return_label;
  }
  return_label: 
#line 1398 
                return __retres;
}


