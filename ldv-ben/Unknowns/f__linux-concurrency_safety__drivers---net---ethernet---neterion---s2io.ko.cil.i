/* Generated by Frama-C */

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef signed char s8;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned char u8;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned short u16;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef int s32;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned int u32;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef long long s64;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;

#line 71  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;

#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __le16;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __be16;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __le32;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __be32;

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u64 __le64;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u16 __sum16;

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/types.h"
typedef __u32 __wsum;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 __kernel_dev_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_dev_t dev_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned short umode_t;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_pid_t pid_t;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef _Bool bool;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_uid32_t uid_t;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_gid32_t gid_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_loff_t loff_t;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_size_t size_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __kernel_time_t time_t;

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __s32 int32_t;

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u8 uint8_t;

#line 108  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u32 uint32_t;

#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef __u64 uint64_t;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long sector_t;

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned long blkcnt_t;

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 dma_addr_t;

#line 157  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int gfp_t;

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int fmode_t;

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef unsigned int oom_flags_t;

#line 162  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef u64 phys_addr_t;

#line 167  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef phys_addr_t resource_size_t;

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};

#line 188 
struct hlist_node;

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head *) ;
};

#line 14  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
struct kernel_symbol {
   unsigned long value ;
   char const *name ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
struct module;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_9 {
   unsigned int a ;
   unsigned int b ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct __anonstruct_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base1 : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) type : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) s : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) dpl : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) p : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) limit : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) avl : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) g : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) base2 : 8 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
union __anonunion_8 {
   struct __anonstruct_9 __anonCompField___anonunion_8_4 ;
   struct __anonstruct_10 __anonCompField___anonunion_8_5 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_8 __anonCompField_desc_struct_6 ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;

#line 361 
struct page;

#line 361  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;

#line 372 
struct file;

#line 385 
struct seq_file;

#line 423 
struct thread_struct;

#line 425 
struct mm_struct;

#line 426 
struct task_struct;

#line 427 
struct cpumask;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/spinlock_types.h"
struct qspinlock {
   atomic_t val ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
typedef struct qspinlock arch_spinlock_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qspinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/init.h"
typedef void (*ctor_fn_t)(void);

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dynamic_debug.h"
struct device;

#line 54 
struct net_device;

#line 420  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
struct file_operations;

#line 432 
struct completion;

#line 555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};

#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct timespec;

#line 103 
struct compat_timespec;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_futex_16 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_nanosleep_17 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};

#line 104 
struct pollfd;

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct __anonstruct_poll_18 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
union __anonunion_15 {
   struct __anonstruct_futex_16 futex ;
   struct __anonstruct_nanosleep_17 nanosleep ;
   struct __anonstruct_poll_18 poll ;
};

#line 104  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bug.h"
struct restart_block {
   long (*fn)(struct restart_block *) ;
   union __anonunion_15 __anonCompField_restart_block_7 ;
};

#line 127  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
union __anonunion_19 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_19 __anonCompField_math_emu_info_8 ;
};

#line 328  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;

#line 260  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/special_insns.h"
struct fregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_29 {
   u64 rip ;
   u64 rdp ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct __anonstruct_30 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_28 {
   struct __anonstruct_29 __anonCompField___anonunion_28_12 ;
   struct __anonstruct_30 __anonCompField___anonunion_28_13 ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union __anonunion_31 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fxregs_state {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_28 __anonCompField_fxregs_state_14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_31 __anonCompField_fxregs_state_15 ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct swregs_state {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xstate_header {
   u64 xfeatures ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct xregs_state {
   struct fxregs_state i387 ;
   struct xstate_header header ;
   u8 __reserved[464U] ;
};

#line 179  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
union fpregs_state {
   struct fregs_state fsave ;
   struct fxregs_state fxsave ;
   struct swregs_state soft ;
   struct xregs_state xsave ;
   u8 __padding[4096U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/fpu/types.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned char fpstate_active ;
   unsigned char fpregs_active ;
   unsigned char counter ;
   union fpregs_state state ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct seq_operations;

#line 369 
struct perf_event;

#line 370  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   struct fpu fpu ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bottom_half.h"
struct lockdep_map;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};

#line 28  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const *name ;
   int cpu ;
   unsigned long ip ;
};

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(13))) class_idx : 13 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_context : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) trylock : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) read : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) check : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hardirqs_off : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(12))) references : 12 ;
   unsigned int pin_count ;
};

#line 546  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct __anonstruct_35 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
union __anonunion_34 {
   struct raw_spinlock rlock ;
   struct __anonstruct_35 __anonCompField___anonunion_34_17 ;
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_34 __anonCompField_spinlock_18 ;
};

#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_36 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_36 rwlock_t;

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jump_label.h"
struct jump_entry;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct mutex;

#line 135  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/uapi/asm/stat.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_45 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_45 seqlock_t;

#line 598  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/highuid.h"
struct user_namespace;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kuid_t_46 {
   uid_t val ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_46 kuid_t;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct __anonstruct_kgid_t_47 {
   gid_t val ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_47 kgid_t;

#line 139  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/stat.h"
struct vm_area_struct;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue;

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *, unsigned int , int , void *) ;
   struct list_head task_list ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_48 {
   unsigned long bits[16U] ;
};

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_48 nodemask_t;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   void *magic ;
   struct lockdep_map dep_map ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};

#line 193 
struct rw_semaphore;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ktime.h"
typedef union ktime ktime_t;

#line 296  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct notifier_block;

#line 1121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rcupdate.h"
struct timer_list {
   struct hlist_node entry ;
   unsigned long expires ;
   void (*function)(unsigned long ) ;
   unsigned long data ;
   u32 flags ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};

#line 242  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct hrtimer;

#line 243 
enum hrtimer_restart;

#line 244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};

#line 837  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/sysctl.h"
struct ctl_table;

#line 838 
struct nsproxy;

#line 839 
struct ctl_table_root;

#line 840 
struct ctl_table_header;

#line 841 
struct ctl_dir;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table *, int , void *, size_t *, loff_t *);

#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table {
   char const *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct __anonstruct_50 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
union __anonunion_49 {
   struct __anonstruct_50 __anonCompField___anonunion_49_19 ;
   struct callback_head rcu ;
};

#line 122 
struct ctl_table_set;

#line 122  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion_49 __anonCompField_ctl_table_header_20 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};

#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};

#line 149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set *) ;
   struct ctl_dir dir ;
};

#line 154  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root *, struct nsproxy *) ;
   int (*permissions)(struct ctl_table_header *, struct ctl_table *) ;
};

#line 259  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
struct workqueue_struct;

#line 260 
struct work_struct;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
enum ldv_11772 {
    WORK_STRUCT_PENDING_BIT = 0,
    WORK_STRUCT_DELAYED_BIT = 1,
    WORK_STRUCT_PWQ_BIT = 2,
    WORK_STRUCT_LINKED_BIT = 3,
    WORK_STRUCT_STATIC_BIT = 4,
    WORK_STRUCT_COLOR_SHIFT = 5,
    WORK_STRUCT_COLOR_BITS = 4,
    WORK_STRUCT_PENDING = 1,
    WORK_STRUCT_DELAYED = 2,
    WORK_STRUCT_PWQ = 4,
    WORK_STRUCT_LINKED = 8,
    WORK_STRUCT_STATIC = 16,
    WORK_NR_COLORS = 15,
    WORK_NO_COLOR = 15,
    WORK_CPU_UNBOUND = 8192,
    WORK_STRUCT_FLAG_BITS = 9,
    WORK_OFFQ_FLAG_BASE = 5,
    __WORK_OFFQ_CANCELING = 5,
    WORK_OFFQ_CANCELING = 32,
    WORK_OFFQ_FLAG_BITS = 1,
    WORK_OFFQ_POOL_SHIFT = 6,
    WORK_OFFQ_LEFT = 58,
    WORK_OFFQ_POOL_BITS = 31,
    WORK_OFFQ_POOL_NONE = 2147483647,
    WORK_STRUCT_FLAG_MASK = 511,
    WORK_STRUCT_WQ_DATA_MASK = -512,
    WORK_STRUCT_NO_POOL = 137438953408,
    WORK_BUSY_PENDING = 1,
    WORK_BUSY_RUNNING = 2,
    WORKER_DESC_LEN = 24
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *) ;
   struct lockdep_map lockdep_map ;
};

#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block *, unsigned long , void *) ;
   struct notifier_block *next ;
   int priority ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/e820.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/x86_init.h"
struct pci_dev;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_message {
   int event ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
typedef struct pm_message pm_message_t;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *) ;
   void (*complete)(struct device *) ;
   int (*suspend)(struct device *) ;
   int (*resume)(struct device *) ;
   int (*freeze)(struct device *) ;
   int (*thaw)(struct device *) ;
   int (*poweroff)(struct device *) ;
   int (*restore)(struct device *) ;
   int (*suspend_late)(struct device *) ;
   int (*resume_early)(struct device *) ;
   int (*freeze_late)(struct device *) ;
   int (*thaw_early)(struct device *) ;
   int (*poweroff_late)(struct device *) ;
   int (*restore_early)(struct device *) ;
   int (*suspend_noirq)(struct device *) ;
   int (*resume_noirq)(struct device *) ;
   int (*freeze_noirq)(struct device *) ;
   int (*thaw_noirq)(struct device *) ;
   int (*poweroff_noirq)(struct device *) ;
   int (*restore_noirq)(struct device *) ;
   int (*runtime_suspend)(struct device *) ;
   int (*runtime_resume)(struct device *) ;
   int (*runtime_idle)(struct device *) ;
};

#line 320 
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
};

#line 327 
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
};

#line 335 
struct wakeup_source;

#line 336 
struct wake_irq;

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};

#line 553 
struct dev_pm_qos;

#line 553  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) can_wakeup : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) async_suspend : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_prepared : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_noirq_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_late_suspended : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_children : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) early_init : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_path : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   struct wake_irq *wakeirq ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) disable_depth : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) idle_notification : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) request_pending : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) deferred_resume : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) run_wake : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_auto : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_callbacks : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_safe : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) use_autosuspend : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) timer_autosuspends : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device *, s32 ) ;
   struct dev_pm_qos *qos ;
};

#line 615  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
   void (*detach)(struct device *, bool ) ;
   int (*activate)(struct device *) ;
   void (*sync)(struct device *) ;
   void (*dismiss)(struct device *) ;
};

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/topology.h"
struct pci_bus;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct ldt_struct;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_115 {
   struct ldt_struct *ldt ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
   atomic_t perf_rdpmc_allowed ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_115 mm_context_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/xen/features.h"
struct bio_vec;

#line 1281  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mmzone.h"
struct llist_node;

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmod.h"
struct cred;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/elf.h"
struct inode;

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};

#line 66 
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_148 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct __anonstruct_149 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
union __anonunion_147 {
   struct __anonstruct_148 __anonCompField___anonunion_147_33 ;
   struct __anonstruct_149 __anonCompField___anonunion_147_34 ;
};

#line 73 
struct uprobe;

#line 73 
struct return_instance;

#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion_147 __anonCompField_uprobe_task_35 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};

#line 94  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct xol_area;

#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};

#line 133 
struct address_space;

#line 134 
struct mem_cgroup;

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
typedef void compound_page_dtor(struct page *);

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_150 {
   struct address_space *mapping ;
   void *s_mem ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_152 {
   unsigned long index ;
   void *freelist ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_156 {
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) inuse : 16 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(15))) objects : 15 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) frozen : 1 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_155 {
   atomic_t _mapcount ;
   struct __anonstruct_156 __anonCompField___anonunion_155_38 ;
   int units ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_154 {
   union __anonunion_155 __anonCompField___anonstruct_154_39 ;
   atomic_t _count ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_153 {
   unsigned long counters ;
   struct __anonstruct_154 __anonCompField___anonunion_153_40 ;
   unsigned int active ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_151 {
   union __anonunion_152 __anonCompField___anonstruct_151_37 ;
   union __anonunion_153 __anonCompField___anonstruct_151_41 ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_158 {
   struct page *next ;
   int pages ;
   int pobjects ;
};

#line 32 
struct slab;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_159 {
   compound_page_dtor *compound_dtor ;
   unsigned long compound_order ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_157 {
   struct list_head lru ;
   struct __anonstruct_158 __anonCompField___anonunion_157_43 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   struct __anonstruct_159 __anonCompField___anonunion_157_44 ;
   pgtable_t pmd_huge_pte ;
};

#line 32 
struct kmem_cache;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
union __anonunion_160 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   union __anonunion_150 __anonCompField_page_36 ;
   struct __anonstruct_151 __anonCompField_page_42 ;
   union __anonunion_157 __anonCompField_page_45 ;
   union __anonunion_160 __anonCompField_page_46 ;
   struct mem_cgroup *mem_cgroup ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct __anonstruct_shared_161 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};

#line 257 
struct anon_vma;

#line 257 
struct vm_operations_struct;

#line 257 
struct mempolicy;

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct __anonstruct_shared_161 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct const *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};

#line 331  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};

#line 344  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};

#line 352  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};

#line 357 
struct kioctx_table;

#line 358 
struct linux_binfmt;

#line 358 
struct mmu_notifier_mm;

#line 358  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   atomic_long_t nr_pmds ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
   void *bd_addr ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;

#line 190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};

#line 198  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
union __anonunion_166 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion_166 __anonCompField_idr_layer_47 ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};

#line 153  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};

#line 185 
struct dentry;

#line 186 
struct iattr;

#line 187 
struct super_block;

#line 188 
struct file_system_type;

#line 189 
struct kernfs_open_node;

#line 190 
struct kernfs_iattrs;

#line 213 
struct kernfs_root;

#line 213  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};

#line 89 
struct kernfs_ops;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops const *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
union __anonunion_171 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const *name ;
   struct rb_node rb ;
   void const *ns ;
   unsigned int hash ;
   union __anonunion_171 __anonCompField_kernfs_node_48 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root *, int *, char *) ;
   int (*show_options)(struct seq_file *, struct kernfs_root *) ;
   int (*mkdir)(struct kernfs_node *, char const *, umode_t ) ;
   int (*rmdir)(struct kernfs_node *) ;
   int (*rename)(struct kernfs_node *, struct kernfs_node *, char const *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   char *prealloc_buf ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct const *vm_ops ;
};

#line 188  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   ssize_t (*read)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   size_t atomic_write_len ;
   bool prealloc ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   int (*mmap)(struct kernfs_open_file *, struct vm_area_struct *) ;
   struct lock_class_key lockdep_key ;
};

#line 477 
struct sock;

#line 478 
struct kobject;

#line 479 
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
};

#line 485  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const *(*netlink_ns)(struct sock *) ;
   void const *(*initial_ns)(void) ;
   void (*drop_ns)(void *) ;
};

#line 59  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct bin_attribute;

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject_ns.h"
struct attribute {
   char const *name ;
   umode_t mode ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct attribute_group {
   char const *name ;
   umode_t (*is_visible)(struct kobject *, struct attribute *, int ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};

#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *, char *, loff_t , size_t ) ;
   int (*mmap)(struct file *, struct kobject *, struct bin_attribute *, struct vm_area_struct *) ;
};

#line 155  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject *, struct attribute *, char *) ;
   ssize_t (*store)(struct kobject *, struct attribute *, char const *, size_t ) ;
};

#line 509  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset;

#line 52 
struct kobj_type;

#line 52  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobject {
   char const *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_initialized : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_in_sysfs : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_add_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_remove_uevent_sent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) uevent_suppress : 1 ;
};

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *) ;
   struct sysfs_ops const *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations const *(*child_ns_type)(struct kobject *) ;
   void const *(*namespace)(struct kobject *) ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const filter)(struct kset *, struct kobject *) ;
   char const *(* const name)(struct kset *, struct kobject *) ;
   int (* const uevent)(struct kset *, struct kobject *, struct kobj_uevent_env *) ;
};

#line 148  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops const *uevent_ops ;
};

#line 223 
struct kernel_param;

#line 228  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const *, struct kernel_param const *) ;
   int (*get)(char *, struct kernel_param const *) ;
   void (*free)(void *) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string;

#line 62 
struct kparam_array;

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
union __anonunion_172 {
   void *arg ;
   struct kparam_string const *str ;
   struct kparam_array const *arr ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kernel_param {
   char const *name ;
   struct module *mod ;
   struct kernel_param_ops const *ops ;
   u16 const perm ;
   s8 level ;
   u8 flags ;
   union __anonunion_172 __anonCompField_kernel_param_49 ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops const *ops ;
   void *elem ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/moduleparam.h"
struct latch_tree_node {
   struct rb_node node[2U] ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rbtree_latch.h"
struct mod_arch_specific {
   
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_param_attrs;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute *, struct module_kobject *, char *) ;
   ssize_t (*store)(struct module_attribute *, struct module_kobject *, char const *, size_t ) ;
   void (*setup)(struct module *, char const *) ;
   int (*test)(struct module *) ;
   void (*free)(struct module *) ;
};

#line 74 
struct exception_table_entry;

#line 290 
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
};

#line 297  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct mod_tree_node {
   struct module *mod ;
   struct latch_tree_node node ;
};

#line 304 
struct module_sect_attrs;

#line 304 
struct module_notes_attrs;

#line 304 
struct tracepoint;

#line 304 
struct trace_event_call;

#line 304 
struct trace_enum_map;

#line 304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const *version ;
   char const *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol const *syms ;
   unsigned long const *crcs ;
   unsigned int num_syms ;
   struct mutex param_lock ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol const *gpl_syms ;
   unsigned long const *gpl_crcs ;
   struct kernel_symbol const *unused_syms ;
   unsigned long const *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol const *unused_gpl_syms ;
   unsigned long const *unused_gpl_crcs ;
   bool sig_ok ;
   bool async_probe_requested ;
   struct kernel_symbol const *gpl_future_syms ;
   unsigned long const *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_tree_node mtn_core ;
   struct mod_tree_node mtn_init ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const **trace_bprintk_fmt_start ;
   struct trace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct trace_enum_map **trace_enums ;
   unsigned int num_trace_enums ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   bool klp_alive ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   atomic_t refcnt ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct pci_device_id {
   __u32 vendor ;
   __u32 device ;
   __u32 subvendor ;
   __u32 subdevice ;
   __u32 class ;
   __u32 class_mask ;
   kernel_ulong_t driver_data ;
};

#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
   __u32 cls ;
   __u32 cls_msk ;
};

#line 221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const *data ;
};

#line 652 
struct klist_node;

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};

#line 67 
struct path;

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations const *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *, loff_t *) ;
   void (*stop)(struct seq_file *, void *) ;
   void *(*next)(struct seq_file *, void *, loff_t *) ;
   int (*show)(struct seq_file *, void *) ;
};

#line 222 
struct pinctrl;

#line 223 
struct pinctrl_state;

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dma_map_ops;

#line 48  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/device.h"
struct device_driver;

#line 16 
struct driver_private;

#line 17 
struct class;

#line 18 
struct subsys_private;

#line 19 
struct bus_type;

#line 20 
struct device_node;

#line 21 
struct fwnode_handle;

#line 22 
struct iommu_ops;

#line 23 
struct iommu_group;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute;

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct bus_type {
   char const *name ;
   char const *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group const **bus_groups ;
   struct attribute_group const **dev_groups ;
   struct attribute_group const **drv_groups ;
   int (*match)(struct device *, struct device_driver *) ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*online)(struct device *) ;
   int (*offline)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct iommu_ops const *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};

#line 139 
struct device_type;

#line 197 
enum probe_type {
    PROBE_DEFAULT_STRATEGY = 0,
    PROBE_PREFER_ASYNCHRONOUS = 1,
    PROBE_FORCE_SYNCHRONOUS = 2
};

#line 203  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_driver {
   char const *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const *mod_name ;
   bool suppress_bind_attrs ;
   enum probe_type probe_type ;
   struct of_device_id const *of_match_table ;
   struct acpi_device_id const *acpi_match_table ;
   int (*probe)(struct device *) ;
   int (*remove)(struct device *) ;
   void (*shutdown)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct attribute_group const **groups ;
   struct dev_pm_ops const *pm ;
   struct driver_private *p ;
};

#line 353 
struct class_attribute;

#line 353  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class {
   char const *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group const **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *) ;
   void (*class_release)(struct class *) ;
   void (*dev_release)(struct device *) ;
   int (*suspend)(struct device *, pm_message_t ) ;
   int (*resume)(struct device *) ;
   struct kobj_ns_type_operations const *ns_type ;
   void const *(*namespace)(struct device *) ;
   struct dev_pm_ops const *pm ;
   struct subsys_private *p ;
};

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *, struct class_attribute *, char *) ;
   ssize_t (*store)(struct class *, struct class_attribute *, char const *, size_t ) ;
};

#line 514  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_type {
   char const *name ;
   struct attribute_group const **groups ;
   int (*uevent)(struct device *, struct kobj_uevent_env *) ;
   char *(*devnode)(struct device *, umode_t *, kuid_t *, kgid_t *) ;
   void (*release)(struct device *) ;
   struct dev_pm_ops const *pm ;
};

#line 542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *, struct device_attribute *, char *) ;
   ssize_t (*store)(struct device *, struct device_attribute *, char const *, size_t ) ;
};

#line 675  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};

#line 684 
struct dma_coherent_mem;

#line 684 
struct cma;

#line 684  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const *init_name ;
   struct device_type const *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct fwnode_handle *fwnode ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group const **groups ;
   void (*release)(struct device *) ;
   struct iommu_group *iommu_group ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline_disabled : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) offline : 1 ;
};

#line 830  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
struct wakeup_source {
   char const *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct wake_irq *wakeirq ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) active : 1 ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) autosleep_enabled : 1 ;
};

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;

#line 84  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};

#line 4  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sem_undo_list;

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};

#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/shm.h"
struct user_struct;

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_183 {
   unsigned long sig[1U] ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_183 sigset_t;

#line 25 
struct siginfo;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int );

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;

#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};

#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_186 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_187 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_188 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__addr_bnd_190 {
   void *_lower ;
   void *_upper ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_189 {
   void *_addr ;
   short _addr_lsb ;
   struct __anonstruct__addr_bnd_190 _addr_bnd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_191 {
   long _band ;
   int _fd ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_192 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_184 {
   int _pad[28U] ;
   struct __anonstruct__kill_185 _kill ;
   struct __anonstruct__timer_186 _timer ;
   struct __anonstruct__rt_187 _rt ;
   struct __anonstruct__sigchld_188 _sigchld ;
   struct __anonstruct__sigfault_189 _sigfault ;
   struct __anonstruct__sigpoll_191 _sigpoll ;
   struct __anonstruct__sigsys_192 _sigsys ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_184 _sifields ;
};

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;

#line 22  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};

#line 243  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};

#line 257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};

#line 443 
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
};

#line 450 
struct pid_namespace;

#line 450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp_filter;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtmutex.h"
struct rt_mutex_waiter;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};

#line 50 
struct hrtimer_clock_base;

#line 51 
struct hrtimer_cpu_base;

#line 60 
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer *) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t (*get_time)(void) ;
   ktime_t offset ;
};

#line 156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   seqcount_t seq ;
   struct hrtimer *running ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set_seq ;
   bool migration_enabled ;
   bool nohz_active ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_hrtirq : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hres_active : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) hang_detected : 1 ;
   ktime_t expires_next ;
   struct hrtimer *next_timer ;
   unsigned int nr_events ;
   unsigned int nr_retries ;
   unsigned int nr_hangs ;
   unsigned int max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};

#line 466  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array_ptr;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};

#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef int32_t key_serial_t;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
typedef uint32_t key_perm_t;

#line 35 
struct key;

#line 36 
struct signal_struct;

#line 37 
struct key_type;

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const *description ;
   size_t desc_len ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_199 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};

#line 123 
struct key_user;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_200 {
   time_t expiry ;
   time_t revoked_at ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct __anonstruct_202 {
   struct key_type *type ;
   char *description ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_201 {
   struct keyring_index_key index_key ;
   struct __anonstruct_202 __anonCompField___anonunion_201_52 ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_type_data_203 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_payload_205 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
union __anonunion_204 {
   union __anonunion_payload_205 payload ;
   struct assoc_array keys ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion_199 __anonCompField_key_50 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_200 __anonCompField_key_51 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion_201 __anonCompField_key_53 ;
   union __anonunion_type_data_203 type_data ;
   union __anonunion_204 __anonCompField_key_54 ;
};

#line 358 
struct audit_context;

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};

#line 369 
struct percpu_ref;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref *);

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_long_t count ;
   unsigned long percpu_count_ptr ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_switch ;
   bool __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) force_atomic : 1 ;
   struct callback_head rcu ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup;

#line 28 
struct cgroup_root;

#line 29 
struct cgroup_subsys;

#line 30 
struct cgroup_taskset;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/percpu-rwsem.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   struct list_head sibling ;
   struct list_head children ;
   int id ;
   unsigned int flags ;
   u64 serial_nr ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup *dfl_cgrp ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct list_head e_cset_node[12U] ;
   struct callback_head callback_head ;
};

#line 197  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup {
   struct cgroup_subsys_state self ;
   unsigned long flags ;
   int id ;
   int populated_cnt ;
   struct kernfs_node *kn ;
   struct kernfs_node *procs_kn ;
   struct kernfs_node *populated_kn ;
   unsigned int subtree_control ;
   unsigned int child_subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head e_csets[12U] ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   wait_queue_head_t offline_waitq ;
   struct work_struct release_agent_work ;
};

#line 270  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   unsigned int subsys_mask ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned int flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};

#line 306  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state *, struct cftype *) ;
   s64 (*read_s64)(struct cgroup_subsys_state *, struct cftype *) ;
   int (*seq_show)(struct seq_file *, void *) ;
   void *(*seq_start)(struct seq_file *, loff_t *) ;
   void *(*seq_next)(struct seq_file *, void *, loff_t *) ;
   void (*seq_stop)(struct seq_file *, void *) ;
   int (*write_u64)(struct cgroup_subsys_state *, struct cftype *, u64 ) ;
   int (*write_s64)(struct cgroup_subsys_state *, struct cftype *, s64 ) ;
   ssize_t (*write)(struct kernfs_open_file *, char *, size_t , loff_t ) ;
   struct lock_class_key lockdep_key ;
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup-defs.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state *) ;
   int (*css_online)(struct cgroup_subsys_state *) ;
   void (*css_offline)(struct cgroup_subsys_state *) ;
   void (*css_released)(struct cgroup_subsys_state *) ;
   void (*css_free)(struct cgroup_subsys_state *) ;
   void (*css_reset)(struct cgroup_subsys_state *) ;
   void (*css_e_css_changed)(struct cgroup_subsys_state *) ;
   int (*can_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*cancel_attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*attach)(struct cgroup_subsys_state *, struct cgroup_taskset *) ;
   void (*fork)(struct task_struct *) ;
   void (*exit)(struct cgroup_subsys_state *, struct cgroup_subsys_state *, struct task_struct *) ;
   void (*bind)(struct cgroup_subsys_state *) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const *name ;
   struct cgroup_root *root ;
   struct idr css_idr ;
   struct list_head cfts ;
   struct cftype *dfl_cftypes ;
   struct cftype *legacy_cftypes ;
   unsigned int depends_on ;
};

#line 128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct futex_pi_state;

#line 129 
struct robust_list_head;

#line 130 
struct bio_list;

#line 131 
struct fs_struct;

#line 132 
struct perf_event_context;

#line 133 
struct blk_plug;

#line 135 
struct nameidata;

#line 188 
struct cfs_rq;

#line 189 
struct task_group;

#line 477  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};

#line 516  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};

#line 531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};

#line 543  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};

#line 563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_cputime_atomic {
   atomic64_t utime ;
   atomic64_t stime ;
   atomic64_t sum_exec_runtime ;
};

#line 584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime_atomic cputime_atomic ;
   int running ;
};

#line 620 
struct autogroup;

#line 621 
struct tty_struct;

#line 621 
struct taskstats;

#line 621 
struct tty_audit_buf;

#line 621  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_child_subreaper : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   seqlock_t stats_lock ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};

#line 802  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};

#line 845 
struct backing_dev_info;

#line 846 
struct reclaim_state;

#line 847  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};

#line 861  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};

#line 909  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct wake_q_node {
   struct wake_q_node *next ;
};

#line 1138 
struct io_context;

#line 1172 
struct pipe_inode_info;

#line 1173 
struct uts_namespace;

#line 1174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};

#line 1181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_avg {
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
   unsigned long utilization_avg_contrib ;
   u32 runnable_avg_sum ;
   u32 avg_period ;
   u32 running_avg_sum ;
};

#line 1206  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};

#line 1241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};

#line 1273 
struct rt_rq;

#line 1273  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};

#line 1289  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};

#line 1355  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) may_oom : 1 ;
};

#line 1779 
struct sched_class;

#line 1779 
struct files_struct;

#line 1779 
struct compat_robust_list_head;

#line 1779 
struct numa_group;

#line 1779 
struct ftrace_ret_stack;

#line 1779  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
struct task_struct {
   long volatile state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class const *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   unsigned long rcu_tasks_nvcsw ;
   bool rcu_tasks_holdout ;
   struct list_head rcu_tasks_holdout_list ;
   int rcu_tasks_idle_cpu ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned long jobctl ;
   unsigned int personality ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_execve : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) in_iowait : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_reset_on_fork : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_contributes_to_load : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sched_migrated : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) memcg_kmem_skip_account : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) brk_randomized : 1 ;
   unsigned long atomic_flags ;
   struct restart_block restart_block ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred const *real_cred ;
   struct cred const *cred ;
   char comm[16U] ;
   struct nameidata *nameidata ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct wake_q_node wake_q ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long numa_faults_locality[3U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   unsigned int kasan_depth ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
   unsigned long task_state_change ;
   int pagefault_disabled ;
   struct thread_struct thread ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct hotplug_slot;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/resource_ext.h"
struct pci_slot {
   struct pci_bus *bus ;
   struct list_head list ;
   struct hotplug_slot *hotplug ;
   unsigned char number ;
   struct kobject kobj ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef int pci_power_t;

#line 137  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_channel_state_t;

#line 138 
enum pci_channel_state {
    pci_channel_io_normal = 1,
    pci_channel_io_frozen = 2,
    pci_channel_io_perm_failure = 3
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_dev_flags_t;

#line 192  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned short pci_bus_flags_t;

#line 249 
struct pcie_link_state;

#line 250 
struct pci_vpd;

#line 251 
struct pci_sriov;

#line 252 
struct pci_ats;

#line 253 
struct proc_dir_entry;

#line 253 
struct pci_driver;

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
union __anonunion_220 {
   struct pci_sriov *sriov ;
   struct pci_dev *physfn ;
};

#line 253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dev {
   struct list_head bus_list ;
   struct pci_bus *bus ;
   struct pci_bus *subordinate ;
   void *sysdata ;
   struct proc_dir_entry *procent ;
   struct pci_slot *slot ;
   unsigned int devfn ;
   unsigned short vendor ;
   unsigned short device ;
   unsigned short subsystem_vendor ;
   unsigned short subsystem_device ;
   unsigned int class ;
   u8 revision ;
   u8 hdr_type ;
   u8 pcie_cap ;
   u8 msi_cap ;
   u8 msix_cap ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pcie_mpss : 3 ;
   u8 rom_base_reg ;
   u8 pin ;
   u16 pcie_flags_reg ;
   u8 dma_alias_devfn ;
   struct pci_driver *driver ;
   u64 dma_mask ;
   struct device_dma_parameters dma_parms ;
   pci_power_t current_state ;
   u8 pm_cap ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(5))) pme_support : 5 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_interrupt : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pme_poll : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d1_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d2_support : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d1d2 : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) d3cold_allowed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) mmio_always_on : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wakeup_prepared : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) runtime_d3cold : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_hotplug : 1 ;
   unsigned int d3_delay ;
   unsigned int d3cold_delay ;
   struct pcie_link_state *link_state ;
   pci_channel_state_t error_state ;
   struct device dev ;
   int cfg_size ;
   unsigned int irq ;
   struct resource resource[17U] ;
   bool match_driver ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) transparent : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) multifunction : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_busmaster : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_64bit_msi : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) block_cfg_access : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_parity_status : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) irq_reroute_variant : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msi_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) msix_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ari_enabled : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) needs_freset : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) state_saved : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_physfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_virtfn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) reset_fn : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_hotplug_bridge : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first_valid : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) __aer_firmware_first : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) broken_intx_masking : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) io_window_1k : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) irq_managed : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) has_secondary_link : 1 ;
   pci_dev_flags_t dev_flags ;
   atomic_t enable_cnt ;
   u32 saved_config_space[16U] ;
   struct hlist_head saved_cap_space ;
   struct bin_attribute *rom_attr ;
   int rom_attr_enabled ;
   struct bin_attribute *res_attr[17U] ;
   struct bin_attribute *res_attr_wc[17U] ;
   struct list_head msi_list ;
   struct attribute_group const **msi_irq_groups ;
   struct pci_vpd *vpd ;
   union __anonunion_220 __anonCompField_pci_dev_58 ;
   struct pci_ats *ats ;
   phys_addr_t rom ;
   size_t romlen ;
   char *driver_override ;
};

#line 442 
struct pci_ops;

#line 442 
struct msi_controller;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_bus {
   struct list_head node ;
   struct pci_bus *parent ;
   struct list_head children ;
   struct list_head devices ;
   struct pci_dev *self ;
   struct list_head slots ;
   struct resource *resource[4U] ;
   struct list_head resources ;
   struct resource busn_res ;
   struct pci_ops *ops ;
   struct msi_controller *msi ;
   void *sysdata ;
   struct proc_dir_entry *procdir ;
   unsigned char number ;
   unsigned char primary ;
   unsigned char max_bus_speed ;
   unsigned char cur_bus_speed ;
   char name[48U] ;
   unsigned short bridge_ctl ;
   pci_bus_flags_t bus_flags ;
   struct device *bridge ;
   struct device dev ;
   struct bin_attribute *legacy_io ;
   struct bin_attribute *legacy_mem ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_added : 1 ;
};

#line 565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_ops {
   void *(*map_bus)(struct pci_bus *, unsigned int , int ) ;
   int (*read)(struct pci_bus *, unsigned int , int , int , u32 *) ;
   int (*write)(struct pci_bus *, unsigned int , int , int , u32 ) ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_dynids {
   spinlock_t lock ;
   struct list_head list ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
typedef unsigned int pci_ers_result_t;

#line 617  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_error_handlers {
   pci_ers_result_t (*error_detected)(struct pci_dev *, enum pci_channel_state ) ;
   pci_ers_result_t (*mmio_enabled)(struct pci_dev *) ;
   pci_ers_result_t (*link_reset)(struct pci_dev *) ;
   pci_ers_result_t (*slot_reset)(struct pci_dev *) ;
   void (*reset_notify)(struct pci_dev *, bool ) ;
   void (*resume)(struct pci_dev *) ;
};

#line 650  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
struct pci_driver {
   struct list_head node ;
   char const *name ;
   struct pci_device_id const *id_table ;
   int (*probe)(struct pci_dev *, struct pci_device_id const *) ;
   void (*remove)(struct pci_dev *) ;
   int (*suspend)(struct pci_dev *, pm_message_t ) ;
   int (*suspend_late)(struct pci_dev *, pm_message_t ) ;
   int (*resume_early)(struct pci_dev *) ;
   int (*resume)(struct pci_dev *) ;
   void (*shutdown)(struct pci_dev *) ;
   int (*sriov_configure)(struct pci_dev *, int ) ;
   struct pci_error_handlers const *err_handler ;
   struct device_driver driver ;
   struct pci_dynids dynids ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   int nid ;
   struct mem_cgroup *memcg ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker *, struct shrink_control *) ;
   unsigned long (*scan_objects)(struct shrinker *, struct shrink_control *) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};

#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/page_ext.h"
struct file_ra_state;

#line 65 
struct writeback_control;

#line 66 
struct bdi_writeback;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *cow_page ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};

#line 239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct *) ;
   void (*close)(struct vm_area_struct *) ;
   int (*fault)(struct vm_area_struct *, struct vm_fault *) ;
   void (*map_pages)(struct vm_area_struct *, struct vm_fault *) ;
   int (*page_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*pfn_mkwrite)(struct vm_area_struct *, struct vm_fault *) ;
   int (*access)(struct vm_area_struct *, unsigned long , void *, int , int ) ;
   char const *(*name)(struct vm_area_struct *) ;
   int (*set_policy)(struct vm_area_struct *, struct mempolicy *) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct *, unsigned long ) ;
   struct page *(*find_special_page)(struct vm_area_struct *, unsigned long ) ;
};

#line 1249 
struct kvec;

#line 2291  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};

#line 35  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmapool.h"
struct msix_entry {
   u32 vector ;
   u16 entry ;
};

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/pci_64.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
};

#line 77  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) ;
   void (*free)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) ;
   int (*mmap)(struct device *, struct vm_area_struct *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   int (*get_sgtable)(struct device *, struct sg_table *, void *, dma_addr_t , size_t , struct dma_attrs *) ;
   dma_addr_t (*map_page)(struct device *, struct page *, unsigned long , size_t , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_page)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) ;
   int (*map_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*unmap_sg)(struct device *, struct scatterlist *, int , enum dma_data_direction , struct dma_attrs *) ;
   void (*sync_single_for_cpu)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_single_for_device)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) ;
   void (*sync_sg_for_cpu)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   void (*sync_sg_for_device)(struct device *, struct scatterlist *, int , enum dma_data_direction ) ;
   int (*mapping_error)(struct device *, dma_addr_t ) ;
   int (*dma_supported)(struct device *, u64 ) ;
   int (*set_dma_mask)(struct device *, u64 ) ;
   int is_phys ;
};

#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/prefetch.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/uio.h"
struct kvec {
   void *iov_base ;
   size_t iov_len ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
union __anonunion_221 {
   struct iovec const *iov ;
   struct kvec const *kvec ;
   struct bio_vec const *bvec ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uio.h"
struct iov_iter {
   int type ;
   size_t iov_offset ;
   size_t count ;
   union __anonunion_221 __anonCompField_iov_iter_59 ;
   unsigned long nr_segs ;
};

#line 1182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};

#line 38 
struct kiocb;

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iov_iter msg_iter ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
   struct kiocb *msg_iocb ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_223 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};

#line 43  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_223 sync_serial_settings;

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_224 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_224 te1_settings;

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_225 {
   unsigned short encoding ;
   unsigned short parity ;
};

#line 55  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_225 raw_hdlc_proto;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_226 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_226 fr_proto;

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_227 {
   unsigned int dlci ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_227 fr_proto_pvc;

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_228 {
   unsigned int dlci ;
   char master[16U] ;
};

#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_228 fr_proto_pvc_info;

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_229 {
   unsigned int interval ;
   unsigned int timeout ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_229 cisco_proto;

#line 117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_230 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};

#line 177  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_230 ifs_ifsu ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_231 {
   char ifrn_name[16U] ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_232 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};

#line 195  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_231 ifr_ifrn ;
   union __anonunion_ifr_ifru_232 ifr_ifru ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_node;

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct __anonstruct_237 {
   spinlock_t lock ;
   int count ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
union __anonunion_236 {
   struct __anonstruct_237 __anonCompField___anonunion_236_60 ;
};

#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion_236 __anonCompField_lockref_61 ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct vfsmount;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct __anonstruct_239 {
   u32 hash ;
   u32 len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
union __anonunion_238 {
   struct __anonstruct_239 __anonCompField___anonunion_238_62 ;
   u64 hash_len ;
};

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockref.h"
struct qstr {
   union __anonunion_238 __anonCompField_qstr_63 ;
   unsigned char const *name ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations;

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
union __anonunion_d_u_240 {
   struct hlist_node d_alias ;
   struct callback_head d_rcu ;
};

#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations const *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   struct list_head d_child ;
   struct list_head d_subdirs ;
   union __anonunion_d_u_240 d_u ;
};

#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_weak_revalidate)(struct dentry *, unsigned int ) ;
   int (*d_hash)(struct dentry const *, struct qstr *) ;
   int (*d_compare)(struct dentry const *, struct dentry const *, unsigned int , char const *, struct qstr const *) ;
   int (*d_delete)(struct dentry const *) ;
   void (*d_release)(struct dentry *) ;
   void (*d_prune)(struct dentry *) ;
   void (*d_iput)(struct dentry *, struct inode *) ;
   char *(*d_dname)(struct dentry *, char *, int ) ;
   struct vfsmount *(*d_automount)(struct path *) ;
   int (*d_manage)(struct dentry *, bool ) ;
   struct inode *(*d_select_inode)(struct dentry *, unsigned int ) ;
};

#line 586  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/path.h"
struct list_lru_one {
   struct list_head list ;
   long nr_items ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_memcg {
   struct list_lru_one *lru[0U] ;
};

#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_lru_one lru ;
   struct list_lru_memcg *memcg_lrus ;
};

#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   struct list_head list ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct __anonstruct_244 {
   struct radix_tree_node *parent ;
   void *private_data ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
union __anonunion_243 {
   struct __anonstruct_244 __anonCompField___anonunion_243_64 ;
   struct callback_head callback_head ;
};

#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion_243 __anonCompField_radix_tree_node_65 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
};

#line 47 
struct block_device;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/blk_types.h"
struct bio_vec {
   struct page *bv_page ;
   unsigned int bv_len ;
   unsigned int bv_offset ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/fs.h"
struct export_operations;

#line 62 
struct poll_table_struct;

#line 63 
struct kstatfs;

#line 64 
struct swap_info_struct;

#line 75  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};

#line 212  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dqblk_xfs.h"
struct dquot;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
struct __anonstruct_kprojid_t_248 {
   projid_t val ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_248 kprojid_t;

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/quota.h"
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
typedef long long qsize_t;

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
union __anonunion_249 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kqid {
   union __anonunion_249 __anonCompField_kqid_67 ;
   enum quota_type type ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};

#line 206 
struct quota_format_type;

#line 207  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_max_spc_limit ;
   qsize_t dqi_max_ino_limit ;
   void *dqi_priv ;
};

#line 272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};

#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *, int ) ;
   int (*read_file_info)(struct super_block *, int ) ;
   int (*write_file_info)(struct super_block *, int ) ;
   int (*free_file_info)(struct super_block *, int ) ;
   int (*read_dqblk)(struct dquot *) ;
   int (*commit_dqblk)(struct dquot *) ;
   int (*release_dqblk)(struct dquot *) ;
};

#line 310  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot *) ;
   struct dquot *(*alloc_dquot)(struct super_block *, int ) ;
   void (*destroy_dquot)(struct dquot *) ;
   int (*acquire_dquot)(struct dquot *) ;
   int (*release_dquot)(struct dquot *) ;
   int (*mark_dirty)(struct dquot *) ;
   int (*write_info)(struct super_block *, int ) ;
   qsize_t *(*get_reserved_space)(struct inode *) ;
   int (*get_projid)(struct inode *, kprojid_t *) ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_dqblk {
   int d_fieldmask ;
   u64 d_spc_hardlimit ;
   u64 d_spc_softlimit ;
   u64 d_ino_hardlimit ;
   u64 d_ino_softlimit ;
   u64 d_space ;
   u64 d_ino_count ;
   s64 d_ino_timer ;
   s64 d_spc_timer ;
   int d_ino_warns ;
   int d_spc_warns ;
   u64 d_rt_spc_hardlimit ;
   u64 d_rt_spc_softlimit ;
   u64 d_rt_space ;
   s64 d_rt_spc_timer ;
   int d_rt_spc_warns ;
};

#line 348  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_type_state {
   unsigned int flags ;
   unsigned int spc_timelimit ;
   unsigned int ino_timelimit ;
   unsigned int rt_spc_timelimit ;
   unsigned int spc_warnlimit ;
   unsigned int ino_warnlimit ;
   unsigned int rt_spc_warnlimit ;
   unsigned long long ino ;
   blkcnt_t blocks ;
   blkcnt_t nextents ;
};

#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_state {
   unsigned int s_incoredqs ;
   struct qc_type_state s_state[3U] ;
};

#line 405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct qc_info {
   int i_fieldmask ;
   unsigned int i_flags ;
   unsigned int i_spc_timelimit ;
   unsigned int i_ino_timelimit ;
   unsigned int i_rt_spc_timelimit ;
   unsigned int i_spc_warnlimit ;
   unsigned int i_ino_warnlimit ;
   unsigned int i_rt_spc_warnlimit ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block *, int , int , struct path *) ;
   int (*quota_off)(struct super_block *, int ) ;
   int (*quota_enable)(struct super_block *, unsigned int ) ;
   int (*quota_disable)(struct super_block *, unsigned int ) ;
   int (*quota_sync)(struct super_block *, int ) ;
   int (*set_info)(struct super_block *, int , struct qc_info *) ;
   int (*get_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*set_dqblk)(struct super_block *, struct kqid , struct qc_dqblk *) ;
   int (*get_state)(struct super_block *, struct qc_state *) ;
   int (*rm_xquota)(struct super_block *, unsigned int ) ;
};

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops const *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};

#line 496  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[3U] ;
   struct mem_dqinfo info[3U] ;
   struct quota_format_ops const *ops[3U] ;
};

#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/quota.h"
struct kiocb {
   struct file *ki_filp ;
   loff_t ki_pos ;
   void (*ki_complete)(struct kiocb *, long , long ) ;
   void *private ;
   int ki_flags ;
};

#line 366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *, struct writeback_control *) ;
   int (*readpage)(struct file *, struct page *) ;
   int (*writepages)(struct address_space *, struct writeback_control *) ;
   int (*set_page_dirty)(struct page *) ;
   int (*readpages)(struct file *, struct address_space *, struct list_head *, unsigned int ) ;
   int (*write_begin)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page **, void **) ;
   int (*write_end)(struct file *, struct address_space *, loff_t , unsigned int , unsigned int , struct page *, void *) ;
   sector_t (*bmap)(struct address_space *, sector_t ) ;
   void (*invalidatepage)(struct page *, unsigned int , unsigned int ) ;
   int (*releasepage)(struct page *, gfp_t ) ;
   void (*freepage)(struct page *) ;
   ssize_t (*direct_IO)(struct kiocb *, struct iov_iter *, loff_t ) ;
   int (*migratepage)(struct address_space *, struct page *, struct page *, enum migrate_mode ) ;
   int (*launder_page)(struct page *) ;
   int (*is_partially_uptodate)(struct page *, unsigned long , unsigned long ) ;
   void (*is_dirty_writeback)(struct page *, bool *, bool *) ;
   int (*error_remove_page)(struct address_space *, struct page *) ;
   int (*swap_activate)(struct swap_info_struct *, struct file *, sector_t *) ;
   void (*swap_deactivate)(struct file *) ;
};

#line 423  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct rw_semaphore i_mmap_rwsem ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations const *a_ops ;
   unsigned long flags ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};

#line 443 
struct request_queue;

#line 444 
struct hd_struct;

#line 444 
struct gendisk;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};

#line 560 
struct posix_acl;

#line 561 
struct inode_operations;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_252 {
   unsigned int const i_nlink ;
   unsigned int __i_nlink ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_253 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};

#line 561 
struct file_lock_context;

#line 561 
struct cdev;

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_254 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
   char *i_link ;
};

#line 561  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations const *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_252 __anonCompField_inode_68 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   unsigned long dirtied_time_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct bdi_writeback *i_wb ;
   int i_wb_frn_winner ;
   u16 i_wb_frn_avg_time ;
   u16 i_wb_frn_history ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_253 __anonCompField_inode_69 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations const *i_fop ;
   struct file_lock_context *i_flctx ;
   struct address_space i_data ;
   struct list_head i_devices ;
   union __anonunion_254 __anonCompField_inode_70 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};

#line 807  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};

#line 815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
union __anonunion_f_u_255 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};

#line 838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file {
   union __anonunion_f_u_255 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations const *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred const *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};

#line 923  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
typedef void *fl_owner_t;

#line 924 
struct file_lock;

#line 925  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock *, struct file_lock *) ;
   void (*fl_release_private)(struct file_lock *) ;
};

#line 931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock *, struct file_lock *) ;
   unsigned long (*lm_owner_key)(struct file_lock *) ;
   fl_owner_t (*lm_get_owner)(fl_owner_t ) ;
   void (*lm_put_owner)(fl_owner_t ) ;
   void (*lm_notify)(struct file_lock *) ;
   int (*lm_grant)(struct file_lock *, int ) ;
   bool (*lm_break)(struct file_lock *) ;
   int (*lm_change)(struct file_lock *, int , struct list_head *) ;
   void (*lm_setup)(struct file_lock *, void **) ;
};

#line 947 
struct net;

#line 952 
struct nlm_lockowner;

#line 953  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};

#line 19 
struct fasync_struct;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_257 {
   struct list_head link ;
   int state ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_256 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_257 afs ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_list ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations const *fl_ops ;
   struct lock_manager_operations const *fl_lmops ;
   union __anonunion_fl_u_256 fl_u ;
};

#line 1005  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_lock_context {
   spinlock_t flc_lock ;
   struct list_head flc_flock ;
   struct list_head flc_posix ;
   struct list_head flc_lease ;
};

#line 1221  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};

#line 1256  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};

#line 1287 
struct super_operations;

#line 1287 
struct xattr_handler;

#line 1287 
struct mtd_info;

#line 1287  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations const *s_op ;
   struct dquot_operations const *dq_op ;
   struct quotactl_ops const *s_qcop ;
   struct export_operations const *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_iflags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler const **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   unsigned int s_quota_types ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations const *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
   int s_stack_depth ;
};

#line 1526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};

#line 1540 
struct dir_context;

#line 1565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct dir_context {
   int (*actor)(struct dir_context *, char const *, int , loff_t , u64 , unsigned int ) ;
   loff_t pos ;
};

#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file *, loff_t , int ) ;
   ssize_t (*read)(struct file *, char *, size_t , loff_t *) ;
   ssize_t (*write)(struct file *, char const *, size_t , loff_t *) ;
   ssize_t (*read_iter)(struct kiocb *, struct iov_iter *) ;
   ssize_t (*write_iter)(struct kiocb *, struct iov_iter *) ;
   int (*iterate)(struct file *, struct dir_context *) ;
   unsigned int (*poll)(struct file *, struct poll_table_struct *) ;
   long (*unlocked_ioctl)(struct file *, unsigned int , unsigned long ) ;
   long (*compat_ioctl)(struct file *, unsigned int , unsigned long ) ;
   int (*mmap)(struct file *, struct vm_area_struct *) ;
   int (*mremap)(struct file *, struct vm_area_struct *) ;
   int (*open)(struct inode *, struct file *) ;
   int (*flush)(struct file *, fl_owner_t ) ;
   int (*release)(struct inode *, struct file *) ;
   int (*fsync)(struct file *, loff_t , loff_t , int ) ;
   int (*aio_fsync)(struct kiocb *, int ) ;
   int (*fasync)(int , struct file *, int ) ;
   int (*lock)(struct file *, int , struct file_lock *) ;
   ssize_t (*sendpage)(struct file *, struct page *, int , size_t , loff_t *, int ) ;
   unsigned long (*get_unmapped_area)(struct file *, unsigned long , unsigned long , unsigned long , unsigned long ) ;
   int (*check_flags)(int ) ;
   int (*flock)(struct file *, int , struct file_lock *) ;
   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t , unsigned int ) ;
   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*setlease)(struct file *, long , struct file_lock **, void **) ;
   long (*fallocate)(struct file *, int , loff_t , loff_t ) ;
   void (*show_fdinfo)(struct seq_file *, struct file *) ;
};

#line 1633  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode *, struct dentry *, unsigned int ) ;
   char const *(*follow_link)(struct dentry *, void **) ;
   int (*permission)(struct inode *, int ) ;
   struct posix_acl *(*get_acl)(struct inode *, int ) ;
   int (*readlink)(struct dentry *, char *, int ) ;
   void (*put_link)(struct inode *, void *) ;
   int (*create)(struct inode *, struct dentry *, umode_t , bool ) ;
   int (*link)(struct dentry *, struct inode *, struct dentry *) ;
   int (*unlink)(struct inode *, struct dentry *) ;
   int (*symlink)(struct inode *, struct dentry *, char const *) ;
   int (*mkdir)(struct inode *, struct dentry *, umode_t ) ;
   int (*rmdir)(struct inode *, struct dentry *) ;
   int (*mknod)(struct inode *, struct dentry *, umode_t , dev_t ) ;
   int (*rename)(struct inode *, struct dentry *, struct inode *, struct dentry *) ;
   int (*rename2)(struct inode *, struct dentry *, struct inode *, struct dentry *, unsigned int ) ;
   int (*setattr)(struct dentry *, struct iattr *) ;
   int (*getattr)(struct vfsmount *, struct dentry *, struct kstat *) ;
   int (*setxattr)(struct dentry *, char const *, void const *, size_t , int ) ;
   ssize_t (*getxattr)(struct dentry *, char const *, void *, size_t ) ;
   ssize_t (*listxattr)(struct dentry *, char *, size_t ) ;
   int (*removexattr)(struct dentry *, char const *) ;
   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 , u64 ) ;
   int (*update_time)(struct inode *, struct timespec *, int ) ;
   int (*atomic_open)(struct inode *, struct dentry *, struct file *, unsigned int , umode_t , int *) ;
   int (*tmpfile)(struct inode *, struct dentry *, umode_t ) ;
   int (*set_acl)(struct inode *, struct posix_acl *, int ) ;
};

#line 1687  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *) ;
   void (*destroy_inode)(struct inode *) ;
   void (*dirty_inode)(struct inode *, int ) ;
   int (*write_inode)(struct inode *, struct writeback_control *) ;
   int (*drop_inode)(struct inode *) ;
   void (*evict_inode)(struct inode *) ;
   void (*put_super)(struct super_block *) ;
   int (*sync_fs)(struct super_block *, int ) ;
   int (*freeze_super)(struct super_block *) ;
   int (*freeze_fs)(struct super_block *) ;
   int (*thaw_super)(struct super_block *) ;
   int (*unfreeze_fs)(struct super_block *) ;
   int (*statfs)(struct dentry *, struct kstatfs *) ;
   int (*remount_fs)(struct super_block *, int *, char *) ;
   void (*umount_begin)(struct super_block *) ;
   int (*show_options)(struct seq_file *, struct dentry *) ;
   int (*show_devname)(struct seq_file *, struct dentry *) ;
   int (*show_path)(struct seq_file *, struct dentry *) ;
   int (*show_stats)(struct seq_file *, struct dentry *) ;
   ssize_t (*quota_read)(struct super_block *, int , char *, size_t , loff_t ) ;
   ssize_t (*quota_write)(struct super_block *, int , char const *, size_t , loff_t ) ;
   struct dquot **(*get_dquots)(struct inode *) ;
   int (*bdev_try_to_free_page)(struct super_block *, struct page *, gfp_t ) ;
   long (*nr_cached_objects)(struct super_block *, struct shrink_control *) ;
   long (*free_cached_objects)(struct super_block *, struct shrink_control *) ;
};

#line 1926  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/fs.h"
struct file_system_type {
   char const *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type *, int , char const *, void *) ;
   void (*kill_sb)(struct super_block *) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_time_t;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;

#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/compat.h"
struct compat_timespec {
   compat_time_t tv_sec ;
   s32 tv_nsec ;
};

#line 276  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};

#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/random.h"
enum ldv_25544 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
};

#line 53  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
typedef enum ldv_25544 socket_state;

#line 70  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops;

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops const *ops ;
};

#line 119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket *) ;
   int (*bind)(struct socket *, struct sockaddr *, int ) ;
   int (*connect)(struct socket *, struct sockaddr *, int , int ) ;
   int (*socketpair)(struct socket *, struct socket *) ;
   int (*accept)(struct socket *, struct socket *, int ) ;
   int (*getname)(struct socket *, struct sockaddr *, int *, int ) ;
   unsigned int (*poll)(struct file *, struct socket *, struct poll_table_struct *) ;
   int (*ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*compat_ioctl)(struct socket *, unsigned int , unsigned long ) ;
   int (*listen)(struct socket *, int ) ;
   int (*shutdown)(struct socket *, int ) ;
   int (*setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct socket *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct socket *, int , int , char *, int *) ;
   int (*sendmsg)(struct socket *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct socket *, struct msghdr *, size_t , int ) ;
   int (*mmap)(struct file *, struct socket *, struct vm_area_struct *) ;
   ssize_t (*sendpage)(struct socket *, struct page *, int , size_t , int ) ;
   ssize_t (*splice_read)(struct socket *, loff_t *, struct pipe_inode_info *, size_t , unsigned int ) ;
   int (*set_peek_off)(struct sock *, int ) ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};

#line 161  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/checksum_64.h"
struct in6_addr;

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
struct sk_buff;

#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
typedef u64 netdev_features_t;

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
union __anonunion_in6_u_272 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};

#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdev_features.h"
struct in6_addr {
   union __anonunion_in6_u_272 in6_u ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/in6.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buf_operations;

#line 218  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow_dissector.h"
struct pipe_buffer {
   struct page *page ;
   unsigned int offset ;
   unsigned int len ;
   struct pipe_buf_operations const *ops ;
   unsigned int flags ;
   unsigned long private ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_inode_info {
   struct mutex mutex ;
   wait_queue_head_t wait ;
   unsigned int nrbufs ;
   unsigned int curbuf ;
   unsigned int buffers ;
   unsigned int readers ;
   unsigned int writers ;
   unsigned int files ;
   unsigned int waiting_writers ;
   unsigned int r_counter ;
   unsigned int w_counter ;
   struct page *tmp_page ;
   struct fasync_struct *fasync_readers ;
   struct fasync_struct *fasync_writers ;
   struct pipe_buffer *bufs ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pipe_fs_i.h"
struct pipe_buf_operations {
   int can_merge ;
   int (*confirm)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*release)(struct pipe_inode_info *, struct pipe_buffer *) ;
   int (*steal)(struct pipe_inode_info *, struct pipe_buffer *) ;
   void (*get)(struct pipe_inode_info *, struct pipe_buffer *) ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct napi_struct;

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/splice.h"
struct nf_conntrack {
   atomic_t use ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
enum ldv_26390 {
    BRNF_PROTO_UNCHANGED = 0,
    BRNF_PROTO_8021Q = 1,
    BRNF_PROTO_PPPOE = 2
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_277 {
   struct net_device *physoutdev ;
   char neigh_header[8U] ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_278 {
   __be32 ipv4_daddr ;
   struct in6_addr ipv6_daddr ;
};

#line 172  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   enum ldv_26390 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) orig_proto : 8 ;
   bool pkt_otherhost ;
   __u16 frag_max_size ;
   unsigned int mask ;
   struct net_device *physindev ;
   union __anonunion_277 __anonCompField_nf_bridge_info_74 ;
   union __anonunion_278 __anonCompField_nf_bridge_info_75 ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};

#line 215 
struct skb_frag_struct;

#line 215  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef struct skb_frag_struct skb_frag_t;

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_page_279 {
   struct page *p ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_frag_struct {
   struct __anonstruct_page_279 page ;
   __u32 page_offset ;
   __u32 size ;
};

#line 249  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_hwtstamps {
   ktime_t hwtstamp ;
};

#line 319  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_shared_info {
   unsigned char nr_frags ;
   __u8 tx_flags ;
   unsigned short gso_size ;
   unsigned short gso_segs ;
   unsigned short gso_type ;
   struct sk_buff *frag_list ;
   struct skb_shared_hwtstamps hwtstamps ;
   u32 tskey ;
   __be32 ip6_frag_id ;
   atomic_t dataref ;
   void *destructor_arg ;
   skb_frag_t frags[17U] ;
};

#line 403  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_281 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_280 {
   u64 v64 ;
   struct __anonstruct_281 __anonCompField___anonunion_280_76 ;
};

#line 404  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion_280 __anonCompField_skb_mstamp_77 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_284 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_283 {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion_284 __anonCompField___anonstruct_283_78 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_282 {
   struct __anonstruct_283 __anonCompField___anonunion_282_79 ;
   struct rb_node rbnode ;
};

#line 457 
struct sec_path;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct __anonstruct_286 {
   __u16 csum_start ;
   __u16 csum_offset ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_285 {
   __wsum csum ;
   struct __anonstruct_286 __anonCompField___anonunion_285_81 ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_287 {
   unsigned int napi_id ;
   unsigned int sender_cpu ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_288 {
   __u32 mark ;
   __u32 reserved_tailroom ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
union __anonunion_289 {
   __be16 inner_protocol ;
   __u8 inner_ipproto ;
};

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
struct sk_buff {
   union __anonunion_282 __anonCompField_sk_buff_80 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   void (*destructor)(struct sk_buff *) ;
   struct sec_path *sp ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   __u16 queue_mapping ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cloned : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nohdr : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) fclone : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) peeked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) head_frag : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) xmit_more : 1 ;
   __u32 headers_start[0U] ;
   __u8 __pkt_type_offset[0U] ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) pkt_type : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) pfmemalloc : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ignore_df : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) nfctinfo : 3 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) nf_trace : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ip_summed : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ooo_okay : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) l4_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sw_hash : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) wifi_acked : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) no_fcs : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encapsulation : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) encap_hdr_csum : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_valid : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_complete_sw : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) csum_level : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) csum_bad : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) ndisc_nodetype : 2 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ipvs_property : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) inner_protocol_type : 1 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) remcsum_offload : 1 ;
   __u16 tc_index ;
   __u16 tc_verd ;
   union __anonunion_285 __anonCompField_sk_buff_82 ;
   __u32 priority ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   union __anonunion_287 __anonCompField_sk_buff_83 ;
   __u32 secmark ;
   union __anonunion_288 __anonCompField_sk_buff_84 ;
   union __anonunion_289 __anonCompField_sk_buff_85 ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __be16 protocol ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   __u32 headers_end[0U] ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};

#line 718 
struct dst_entry;

#line 767 
struct rtable;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};

#line 125  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char erom_version[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};

#line 189  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};

#line 233  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tunable {
   __u32 cmd ;
   __u32 id ;
   __u32 type_id ;
   __u32 len ;
   void *data[0U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 267  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 293  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};

#line 322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};

#line 339  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};

#line 475  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};

#line 503  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};

#line 605  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};

#line 679  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};

#line 712  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};

#line 728  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};

#line 759  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};

#line 778  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};

#line 828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};

#line 999  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};

#line 1007  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};

#line 1083  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device *, struct ethtool_cmd *) ;
   int (*set_settings)(struct net_device *, struct ethtool_cmd *) ;
   void (*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *) ;
   int (*get_regs_len)(struct net_device *) ;
   void (*get_regs)(struct net_device *, struct ethtool_regs *, void *) ;
   void (*get_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   int (*set_wol)(struct net_device *, struct ethtool_wolinfo *) ;
   u32 (*get_msglevel)(struct net_device *) ;
   void (*set_msglevel)(struct net_device *, u32 ) ;
   int (*nway_reset)(struct net_device *) ;
   u32 (*get_link)(struct net_device *) ;
   int (*get_eeprom_len)(struct net_device *) ;
   int (*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   int (*set_coalesce)(struct net_device *, struct ethtool_coalesce *) ;
   void (*get_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   int (*set_ringparam)(struct net_device *, struct ethtool_ringparam *) ;
   void (*get_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   int (*set_pauseparam)(struct net_device *, struct ethtool_pauseparam *) ;
   void (*self_test)(struct net_device *, struct ethtool_test *, u64 *) ;
   void (*get_strings)(struct net_device *, u32 , u8 *) ;
   int (*set_phys_id)(struct net_device *, enum ethtool_phys_id_state ) ;
   void (*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *) ;
   int (*begin)(struct net_device *) ;
   void (*complete)(struct net_device *) ;
   u32 (*get_priv_flags)(struct net_device *) ;
   int (*set_priv_flags)(struct net_device *, u32 ) ;
   int (*get_sset_count)(struct net_device *, int ) ;
   int (*get_rxnfc)(struct net_device *, struct ethtool_rxnfc *, u32 *) ;
   int (*set_rxnfc)(struct net_device *, struct ethtool_rxnfc *) ;
   int (*flash_device)(struct net_device *, struct ethtool_flash *) ;
   int (*reset)(struct net_device *, u32 *) ;
   u32 (*get_rxfh_key_size)(struct net_device *) ;
   u32 (*get_rxfh_indir_size)(struct net_device *) ;
   int (*get_rxfh)(struct net_device *, u32 *, u8 *, u8 *) ;
   int (*set_rxfh)(struct net_device *, u32 const *, u8 const *, u8 const ) ;
   void (*get_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*set_channels)(struct net_device *, struct ethtool_channels *) ;
   int (*get_dump_flag)(struct net_device *, struct ethtool_dump *) ;
   int (*get_dump_data)(struct net_device *, struct ethtool_dump *, void *) ;
   int (*set_dump)(struct net_device *, struct ethtool_dump *) ;
   int (*get_ts_info)(struct net_device *, struct ethtool_ts_info *) ;
   int (*get_module_info)(struct net_device *, struct ethtool_modinfo *) ;
   int (*get_module_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *) ;
   int (*get_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*set_eee)(struct net_device *, struct ethtool_eee *) ;
   int (*get_tunable)(struct net_device *, struct ethtool_tunable const *, void *) ;
   int (*set_tunable)(struct net_device *, struct ethtool_tunable const *, void const *) ;
};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct prot_inuse;

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};

#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct u64_stats_sync {
   
};

#line 146  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};

#line 67  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6_mib_device {
   atomic_long_t mibs[6U] ;
};

#line 83  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct icmpv6msg_mib_device {
   atomic_long_t mibs[512U] ;
};

#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[9U] ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[115U] ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics ;
   struct ipstats_mib *ip_statistics ;
   struct linux_mib *net_statistics ;
   struct udp_mib *udp_statistics ;
   struct udp_mib *udplite_statistics ;
   struct icmp_mib *icmp_statistics ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6 ;
   struct udp_mib *udplite_stats_in6 ;
   struct ipstats_mib *ipv6_statistics ;
   struct icmpv6_mib *icmpv6_statistics ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics ;
};

#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};

#line 12  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/packet.h"
struct netns_frags {
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};

#line 184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct ipv4_devconf;

#line 185 
struct fib_rules_ops;

#line 186 
struct fib_table;

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
   bool warned ;
};

#line 24  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};

#line 29 
struct inet_peer_base;

#line 29 
struct xt_table;

#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   bool fib_offload_disabled ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct inet_peer_base *peers ;
   struct sock **tcp_sk ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_tcp_ecn_fallback ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   int sysctl_ip_nonlocal_bind ;
   int sysctl_fwmark_reflect ;
   int sysctl_tcp_fwmark_accept ;
   int sysctl_tcp_mtu_probing ;
   int sysctl_tcp_base_mss ;
   int sysctl_tcp_probe_threshold ;
   u32 sysctl_tcp_probe_interval ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   unsigned long *sysctl_local_reserved_ports ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};

#line 113 
struct neighbour;

#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops *) ;
   struct dst_entry *(*check)(struct dst_entry *, __u32 ) ;
   unsigned int (*default_advmss)(struct dst_entry const *) ;
   unsigned int (*mtu)(struct dst_entry const *) ;
   u32 *(*cow_metrics)(struct dst_entry *, unsigned long ) ;
   void (*destroy)(struct dst_entry *) ;
   void (*ifdown)(struct dst_entry *, struct net_device *, int ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry *) ;
   void (*link_failure)(struct sk_buff *) ;
   void (*update_pmtu)(struct dst_entry *, struct sock *, struct sk_buff *, u32 ) ;
   void (*redirect)(struct dst_entry *, struct sock *, struct sk_buff *) ;
   int (*local_out)(struct sk_buff *) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry const *, struct sk_buff *, void const *) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int auto_flowlabels ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
   int fwmark_reflect ;
   int idgen_retries ;
   int idgen_delay ;
   int flowlabel_state_ranges ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct ipv6_devconf;

#line 39 
struct rt6_info;

#line 39 
struct rt6_statistics;

#line 39 
struct fib6_table;

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mc_autojoin_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t fib6_sernum ;
};

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};

#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};

#line 14  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
};

#line 20 
struct sctp_mib;

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};

#line 134  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};

#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct nf_logger;

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger const *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct ebt_table;

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   bool clusterip_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node;

#line 19  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};

#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/x_tables.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
};

#line 72 
struct ip_conntrack_stat;

#line 72 
struct nf_ct_event_notifier;

#line 72 
struct nf_exp_event_notifier;

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct delayed_work ecache_dwork ;
   bool ecache_dwork_pending ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};

#line 114 
struct nft_af_info;

#line 115  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   struct nft_af_info *netdev ;
   unsigned int base_seq ;
   u8 gencursor ;
};

#line 508  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/xfrm.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;

#line 465  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long ) ;
   unsigned long data ;
};

#line 672  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
   u8 dbits4 ;
   u8 sbits4 ;
   u8 dbits6 ;
   u8 sbits6 ;
};

#line 21  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct xfrm_policy_hthresh {
   struct work_struct work ;
   seqlock_t lock ;
   u8 lbits4 ;
   u8 rbits4 ;
   u8 lbits6 ;
   u8 rbits6 ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[3U] ;
   struct xfrm_policy_hash policy_bydst[3U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct xfrm_policy_hthresh policy_hthresh ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};

#line 88 
struct mpls_route;

#line 89  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/xfrm.h"
struct netns_mpls {
   size_t platform_labels ;
   struct mpls_route **platform_label ;
   struct ctl_table_header *ctl ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct proc_ns_operations;

#line 17  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/netns/mpls.h"
struct ns_common {
   atomic_long_t stashed ;
   struct proc_ns_operations const *ops ;
   unsigned int inum ;
};

#line 11  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net_generic;

#line 12 
struct netns_ipvs;

#line 13  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ns_common.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   atomic64_t cookie_gen ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   spinlock_t nsid_lock ;
   struct idr netns_ids ;
   struct ns_common ns ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct netns_mpls mpls ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct __anonstruct_possible_net_t_306 {
   struct net *net ;
};

#line 241  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
typedef struct __anonstruct_possible_net_t_306 possible_net_t;

#line 376 
enum fwnode_type {
    FWNODE_INVALID = 0,
    FWNODE_OF = 1,
    FWNODE_ACPI = 2,
    FWNODE_PDATA = 3
};

#line 383  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/net_namespace.h"
struct fwnode_handle {
   enum fwnode_type type ;
   struct fwnode_handle *secondary ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
typedef u32 phandle;

#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};

#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/of.h"
struct device_node {
   char const *name ;
   char const *type ;
   phandle phandle ;
   char const *full_name ;
   struct fwnode_handle fwnode ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};

#line 338  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mii.h"
enum ldv_29201 {
    PHY_INTERFACE_MODE_NA = 0,
    PHY_INTERFACE_MODE_MII = 1,
    PHY_INTERFACE_MODE_GMII = 2,
    PHY_INTERFACE_MODE_SGMII = 3,
    PHY_INTERFACE_MODE_TBI = 4,
    PHY_INTERFACE_MODE_REVMII = 5,
    PHY_INTERFACE_MODE_RMII = 6,
    PHY_INTERFACE_MODE_RGMII = 7,
    PHY_INTERFACE_MODE_RGMII_ID = 8,
    PHY_INTERFACE_MODE_RGMII_RXID = 9,
    PHY_INTERFACE_MODE_RGMII_TXID = 10,
    PHY_INTERFACE_MODE_RTBI = 11,
    PHY_INTERFACE_MODE_SMII = 12,
    PHY_INTERFACE_MODE_XGMII = 13,
    PHY_INTERFACE_MODE_MOCA = 14,
    PHY_INTERFACE_MODE_QSGMII = 15,
    PHY_INTERFACE_MODE_MAX = 16
};

#line 80  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
typedef enum ldv_29201 phy_interface_t;

#line 126 
enum ldv_29254 {
    MDIOBUS_ALLOCATED = 1,
    MDIOBUS_REGISTERED = 2,
    MDIOBUS_UNREGISTERED = 3,
    MDIOBUS_RELEASED = 4
};

#line 133 
struct phy_device;

#line 133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct mii_bus {
   char const *name ;
   char id[17U] ;
   void *priv ;
   int (*read)(struct mii_bus *, int , int ) ;
   int (*write)(struct mii_bus *, int , int , u16 ) ;
   int (*reset)(struct mii_bus *) ;
   struct mutex mdio_lock ;
   struct device *parent ;
   enum ldv_29254 state ;
   struct device dev ;
   struct phy_device *phy_map[32U] ;
   u32 phy_mask ;
   u32 phy_ignore_ta_mask ;
   int *irq ;
};

#line 214 
enum phy_state {
    PHY_DOWN = 0,
    PHY_STARTING = 1,
    PHY_READY = 2,
    PHY_PENDING = 3,
    PHY_UP = 4,
    PHY_AN = 5,
    PHY_RUNNING = 6,
    PHY_NOLINK = 7,
    PHY_FORCING = 8,
    PHY_CHANGELINK = 9,
    PHY_HALTED = 10,
    PHY_RESUMING = 11
};

#line 229  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_c45_device_ids {
   u32 devices_in_package ;
   u32 device_ids[8U] ;
};

#line 323 
struct phy_driver;

#line 323  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_device {
   struct phy_driver *drv ;
   struct mii_bus *bus ;
   struct device dev ;
   u32 phy_id ;
   struct phy_c45_device_ids c45_ids ;
   bool is_c45 ;
   bool is_internal ;
   bool has_fixups ;
   bool suspended ;
   enum phy_state state ;
   u32 dev_flags ;
   phy_interface_t interface ;
   int addr ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
   int link ;
   u32 interrupts ;
   u32 supported ;
   u32 advertising ;
   u32 lp_advertising ;
   int autoneg ;
   int link_timeout ;
   int irq ;
   void *priv ;
   struct work_struct phy_queue ;
   struct delayed_work state_queue ;
   atomic_t irq_disable ;
   struct mutex lock ;
   struct net_device *attached_dev ;
   void (*adjust_link)(struct net_device *) ;
};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct phy_driver {
   u32 phy_id ;
   char *name ;
   unsigned int phy_id_mask ;
   u32 features ;
   u32 flags ;
   void const *driver_data ;
   int (*soft_reset)(struct phy_device *) ;
   int (*config_init)(struct phy_device *) ;
   int (*probe)(struct phy_device *) ;
   int (*suspend)(struct phy_device *) ;
   int (*resume)(struct phy_device *) ;
   int (*config_aneg)(struct phy_device *) ;
   int (*aneg_done)(struct phy_device *) ;
   int (*read_status)(struct phy_device *) ;
   int (*ack_interrupt)(struct phy_device *) ;
   int (*config_intr)(struct phy_device *) ;
   int (*did_interrupt)(struct phy_device *) ;
   void (*remove)(struct phy_device *) ;
   int (*match_phy_device)(struct phy_device *) ;
   int (*ts_info)(struct phy_device *, struct ethtool_ts_info *) ;
   int (*hwtstamp)(struct phy_device *, struct ifreq *) ;
   bool (*rxtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   void (*txtstamp)(struct phy_device *, struct sk_buff *, int ) ;
   int (*set_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*get_wol)(struct phy_device *, struct ethtool_wolinfo *) ;
   void (*link_change_notify)(struct phy_device *) ;
   int (*read_mmd_indirect)(struct phy_device *, int , int , int ) ;
   void (*write_mmd_indirect)(struct phy_device *, int , int , int , u32 ) ;
   int (*module_info)(struct phy_device *, struct ethtool_modinfo *) ;
   int (*module_eeprom)(struct phy_device *, struct ethtool_eeprom *, u8 *) ;
   struct device_driver driver ;
};

#line 803  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy.h"
struct fixed_phy_status {
   int link ;
   int speed ;
   int duplex ;
   int pause ;
   int asym_pause ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
enum dsa_tag_protocol {
    DSA_TAG_PROTO_NONE = 0,
    DSA_TAG_PROTO_DSA = 1,
    DSA_TAG_PROTO_TRAILER = 2,
    DSA_TAG_PROTO_EDSA = 3,
    DSA_TAG_PROTO_BRCM = 4
};

#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/phy_fixed.h"
struct dsa_chip_data {
   struct device *host_dev ;
   int sw_addr ;
   int eeprom_len ;
   struct device_node *of_node ;
   char *port_names[12U] ;
   struct device_node *port_dn[12U] ;
   s8 *rtable ;
};

#line 68  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   struct net_device *of_netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};

#line 84 
struct packet_type;

#line 85 
struct dsa_switch;

#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   int (*rcv)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   enum dsa_tag_protocol tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};

#line 123 
struct dsa_switch_driver;

#line 123  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   enum dsa_tag_protocol tag_protocol ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct device *master_dev ;
   char hwmon_name[24U] ;
   struct device *hwmon_dev ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   u32 phys_mii_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};

#line 194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   enum dsa_tag_protocol tag_protocol ;
   int priv_size ;
   char *(*probe)(struct device *, int ) ;
   int (*setup)(struct dsa_switch *) ;
   int (*set_addr)(struct dsa_switch *, u8 *) ;
   u32 (*get_phy_flags)(struct dsa_switch *, int ) ;
   int (*phy_read)(struct dsa_switch *, int , int ) ;
   int (*phy_write)(struct dsa_switch *, int , int , u16 ) ;
   void (*poll_link)(struct dsa_switch *) ;
   void (*adjust_link)(struct dsa_switch *, int , struct phy_device *) ;
   void (*fixed_link_update)(struct dsa_switch *, int , struct fixed_phy_status *) ;
   void (*get_strings)(struct dsa_switch *, int , uint8_t *) ;
   void (*get_ethtool_stats)(struct dsa_switch *, int , uint64_t *) ;
   int (*get_sset_count)(struct dsa_switch *) ;
   void (*get_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*set_wol)(struct dsa_switch *, int , struct ethtool_wolinfo *) ;
   int (*suspend)(struct dsa_switch *) ;
   int (*resume)(struct dsa_switch *) ;
   int (*port_enable)(struct dsa_switch *, int , struct phy_device *) ;
   void (*port_disable)(struct dsa_switch *, int , struct phy_device *) ;
   int (*set_eee)(struct dsa_switch *, int , struct phy_device *, struct ethtool_eee *) ;
   int (*get_eee)(struct dsa_switch *, int , struct ethtool_eee *) ;
   int (*get_temp)(struct dsa_switch *, int *) ;
   int (*get_temp_limit)(struct dsa_switch *, int *) ;
   int (*set_temp_limit)(struct dsa_switch *, int ) ;
   int (*get_temp_alarm)(struct dsa_switch *, bool *) ;
   int (*get_eeprom_len)(struct dsa_switch *) ;
   int (*get_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*set_eeprom)(struct dsa_switch *, struct ethtool_eeprom *, u8 *) ;
   int (*get_regs_len)(struct dsa_switch *, int ) ;
   void (*get_regs)(struct dsa_switch *, int , struct ethtool_regs *, void *) ;
   int (*port_join_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_leave_bridge)(struct dsa_switch *, int , u32 ) ;
   int (*port_stp_update)(struct dsa_switch *, int , u8 ) ;
   int (*fdb_add)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_del)(struct dsa_switch *, int , unsigned char const *, u16 ) ;
   int (*fdb_getnext)(struct dsa_switch *, int , unsigned char *, bool *) ;
};

#line 320  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};

#line 69  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};

#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn {
   __u8 rpg_enable[8U] ;
   __u32 rppp_max_rps[8U] ;
   __u32 rpg_time_reset[8U] ;
   __u32 rpg_byte_reset[8U] ;
   __u32 rpg_threshold[8U] ;
   __u32 rpg_max_rate[8U] ;
   __u32 rpg_ai_rate[8U] ;
   __u32 rpg_hai_rate[8U] ;
   __u32 rpg_gd[8U] ;
   __u32 rpg_min_dec_fac[8U] ;
   __u32 rpg_min_rate[8U] ;
   __u32 cndd_state_machine[8U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_qcn_stats {
   __u64 rppp_rp_centiseconds[8U] ;
   __u32 rppp_created_rps[8U] ;
};

#line 144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};

#line 164  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};

#line 202  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};

#line 236  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};

#line 40  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_setets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_getmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_setmaxrate)(struct net_device *, struct ieee_maxrate *) ;
   int (*ieee_getqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_setqcn)(struct net_device *, struct ieee_qcn *) ;
   int (*ieee_getqcnstats)(struct net_device *, struct ieee_qcn_stats *) ;
   int (*ieee_getpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_setpfc)(struct net_device *, struct ieee_pfc *) ;
   int (*ieee_getapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_setapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_delapp)(struct net_device *, struct dcb_app *) ;
   int (*ieee_peer_getets)(struct net_device *, struct ieee_ets *) ;
   int (*ieee_peer_getpfc)(struct net_device *, struct ieee_pfc *) ;
   u8 (*getstate)(struct net_device *) ;
   u8 (*setstate)(struct net_device *, u8 ) ;
   void (*getpermhwaddr)(struct net_device *, u8 *) ;
   void (*setpgtccfgtx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgtx)(struct net_device *, int , u8 ) ;
   void (*setpgtccfgrx)(struct net_device *, int , u8 , u8 , u8 , u8 ) ;
   void (*setpgbwgcfgrx)(struct net_device *, int , u8 ) ;
   void (*getpgtccfgtx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgtx)(struct net_device *, int , u8 *) ;
   void (*getpgtccfgrx)(struct net_device *, int , u8 *, u8 *, u8 *, u8 *) ;
   void (*getpgbwgcfgrx)(struct net_device *, int , u8 *) ;
   void (*setpfccfg)(struct net_device *, int , u8 ) ;
   void (*getpfccfg)(struct net_device *, int , u8 *) ;
   u8 (*setall)(struct net_device *) ;
   u8 (*getcap)(struct net_device *, int , u8 *) ;
   int (*getnumtcs)(struct net_device *, int , u8 *) ;
   int (*setnumtcs)(struct net_device *, int , u8 ) ;
   u8 (*getpfcstate)(struct net_device *) ;
   void (*setpfcstate)(struct net_device *, u8 ) ;
   void (*getbcncfg)(struct net_device *, int , u32 *) ;
   void (*setbcncfg)(struct net_device *, int , u32 ) ;
   void (*getbcnrp)(struct net_device *, int , u8 *) ;
   void (*setbcnrp)(struct net_device *, int , u8 ) ;
   int (*setapp)(struct net_device *, u8 , u16 , u8 ) ;
   int (*getapp)(struct net_device *, u8 , u16 ) ;
   u8 (*getfeatcfg)(struct net_device *, int , u8 *) ;
   u8 (*setfeatcfg)(struct net_device *, int , u8 ) ;
   u8 (*getdcbx)(struct net_device *) ;
   u8 (*setdcbx)(struct net_device *, u8 ) ;
   int (*peer_getappinfo)(struct net_device *, struct dcb_peer_app_info *, u16 *) ;
   int (*peer_getapptable)(struct net_device *, struct dcb_app *) ;
   int (*cee_peer_getpg)(struct net_device *, struct cee_pg *) ;
   int (*cee_peer_getpfc)(struct net_device *, struct cee_pfc *) ;
};

#line 105  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};

#line 515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};

#line 97  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct xfrm_policy;

#line 98 
struct xfrm_state;

#line 114 
struct request_sock;

#line 1628 
struct mnt_namespace;

#line 1629 
struct ipc_namespace;

#line 1630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};

#line 41  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};

#line 147  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};

#line 106  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr const *nlh ;
   int (*dump)(struct sk_buff *, struct netlink_callback *) ;
   int (*done)(struct netlink_callback *) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};

#line 182  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};

#line 39  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_link.h"
struct ifla_vf_stats {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 broadcast ;
   __u64 multicast ;
};

#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 spoofchk ;
   __u32 linkstate ;
   __u32 min_tx_rate ;
   __u32 max_tx_rate ;
   __u32 rss_query_en ;
};

#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/if_bonding.h"
struct netpoll_info;

#line 119 
struct wireless_dev;

#line 120 
struct wpan_dev;

#line 121 
struct mpls_dev;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = -2147483648,
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};

#line 190 
struct neigh_parms;

#line 191  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr {
   struct list_head list ;
   unsigned char addr[32U] ;
   unsigned char type ;
   bool global_use ;
   int sync_cnt ;
   int refcount ;
   int synced ;
   struct callback_head callback_head ;
};

#line 211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};

#line 216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};

#line 245  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff *, struct net_device *, unsigned short , void const *, void const *, unsigned int ) ;
   int (*parse)(struct sk_buff const *, unsigned char *) ;
   int (*cache)(struct neighbour const *, struct hh_cache *, __be16 ) ;
   void (*cache_update)(struct hh_cache *, struct net_device const *, unsigned char const *) ;
};

#line 295  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct *, int ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct hrtimer timer ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};

#line 340 
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
};

#line 388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;

#line 389  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff **);

#line 537 
struct Qdisc;

#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
   unsigned long tx_maxrate ;
};

#line 607  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};

#line 619  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};

#line 631  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};

#line 683  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};

#line 706  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};

#line 719  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};

#line 730  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};

#line 741  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};

#line 757  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct netdev_phys_item_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};

#line 770  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device *) ;
   void (*ndo_uninit)(struct net_device *) ;
   int (*ndo_open)(struct net_device *) ;
   int (*ndo_stop)(struct net_device *) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff *, struct net_device *) ;
   u16 (*ndo_select_queue)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)) ;
   void (*ndo_change_rx_flags)(struct net_device *, int ) ;
   void (*ndo_set_rx_mode)(struct net_device *) ;
   int (*ndo_set_mac_address)(struct net_device *, void *) ;
   int (*ndo_validate_addr)(struct net_device *) ;
   int (*ndo_do_ioctl)(struct net_device *, struct ifreq *, int ) ;
   int (*ndo_set_config)(struct net_device *, struct ifmap *) ;
   int (*ndo_change_mtu)(struct net_device *, int ) ;
   int (*ndo_neigh_setup)(struct net_device *, struct neigh_parms *) ;
   void (*ndo_tx_timeout)(struct net_device *) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device *, struct rtnl_link_stats64 *) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device *) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device *, __be16 , u16 ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device *, __be16 , u16 ) ;
   void (*ndo_poll_controller)(struct net_device *) ;
   int (*ndo_netpoll_setup)(struct net_device *, struct netpoll_info *) ;
   void (*ndo_netpoll_cleanup)(struct net_device *) ;
   int (*ndo_busy_poll)(struct napi_struct *) ;
   int (*ndo_set_vf_mac)(struct net_device *, int , u8 *) ;
   int (*ndo_set_vf_vlan)(struct net_device *, int , u16 , u8 ) ;
   int (*ndo_set_vf_rate)(struct net_device *, int , int , int ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device *, int , bool ) ;
   int (*ndo_get_vf_config)(struct net_device *, int , struct ifla_vf_info *) ;
   int (*ndo_set_vf_link_state)(struct net_device *, int , int ) ;
   int (*ndo_get_vf_stats)(struct net_device *, int , struct ifla_vf_stats *) ;
   int (*ndo_set_vf_port)(struct net_device *, int , struct nlattr **) ;
   int (*ndo_get_vf_port)(struct net_device *, int , struct sk_buff *) ;
   int (*ndo_set_vf_rss_query_en)(struct net_device *, int , bool ) ;
   int (*ndo_setup_tc)(struct net_device *, u8 ) ;
   int (*ndo_fcoe_enable)(struct net_device *) ;
   int (*ndo_fcoe_disable)(struct net_device *) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device *, u16 ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device *, u16 , struct scatterlist *, unsigned int ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device *, struct netdev_fcoe_hbainfo *) ;
   int (*ndo_fcoe_get_wwn)(struct net_device *, u64 *, int ) ;
   int (*ndo_rx_flow_steer)(struct net_device *, struct sk_buff const *, u16 , u32 ) ;
   int (*ndo_add_slave)(struct net_device *, struct net_device *) ;
   int (*ndo_del_slave)(struct net_device *, struct net_device *) ;
   netdev_features_t (*ndo_fix_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_set_features)(struct net_device *, netdev_features_t ) ;
   int (*ndo_neigh_construct)(struct neighbour *) ;
   void (*ndo_neigh_destroy)(struct neighbour *) ;
   int (*ndo_fdb_add)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ) ;
   int (*ndo_fdb_del)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ) ;
   int (*ndo_fdb_dump)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ) ;
   int (*ndo_bridge_setlink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_bridge_getlink)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ) ;
   int (*ndo_bridge_dellink)(struct net_device *, struct nlmsghdr *, u16 ) ;
   int (*ndo_change_carrier)(struct net_device *, bool ) ;
   int (*ndo_get_phys_port_id)(struct net_device *, struct netdev_phys_item_id *) ;
   int (*ndo_get_phys_port_name)(struct net_device *, char *, size_t ) ;
   void (*ndo_add_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void (*ndo_del_vxlan_port)(struct net_device *, sa_family_t , __be16 ) ;
   void *(*ndo_dfwd_add_station)(struct net_device *, struct net_device *) ;
   void (*ndo_dfwd_del_station)(struct net_device *, void *) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff *, struct net_device *, void *) ;
   int (*ndo_get_lock_subclass)(struct net_device *) ;
   netdev_features_t (*ndo_features_check)(struct sk_buff *, struct net_device *, netdev_features_t ) ;
   int (*ndo_set_tx_maxrate)(struct net_device *, int , u32 ) ;
   int (*ndo_get_iflink)(struct net_device const *) ;
};

#line 1243 
enum ldv_30964 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
};

#line 1252 
enum ldv_30965 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_adj_list_316 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_317 {
   struct list_head upper ;
   struct list_head lower ;
};

#line 1257 
struct iw_handler_def;

#line 1257 
struct iw_public_data;

#line 1257 
struct switchdev_ops;

#line 1257 
struct vlan_info;

#line 1257 
struct tipc_bearer;

#line 1257 
struct in_device;

#line 1257 
struct dn_dev;

#line 1257 
struct inet6_dev;

#line 1257 
struct tcf_proto;

#line 1257 
struct cpu_rmap;

#line 1257 
struct pcpu_lstats;

#line 1257 
struct pcpu_sw_netstats;

#line 1257 
struct pcpu_dstats;

#line 1257 
struct pcpu_vstats;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
union __anonunion_318 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};

#line 1257 
struct garp_port;

#line 1257 
struct mrp_port;

#line 1257 
struct rtnl_link_ops;

#line 1257  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   atomic_t carrier_changes ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct list_head ptype_all ;
   struct list_head ptype_specific ;
   struct __anonstruct_adj_list_316 adj_list ;
   struct __anonstruct_all_adj_list_317 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int group ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   struct iw_handler_def const *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops const *netdev_ops ;
   struct ethtool_ops const *ethtool_ops ;
   struct switchdev_ops const *switchdev_ops ;
   struct header_ops const *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   unsigned char name_assign_type ;
   bool uc_promisc ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   struct wpan_dev *ieee802154_ptr ;
   struct mpls_dev *mpls_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   unsigned long gro_flush_timeout ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct tcf_proto *ingress_cl_list ;
   struct netdev_queue *ingress_queue ;
   struct list_head nf_hooks_ingress ;
   unsigned char broadcast[32U] ;
   struct cpu_rmap *rx_cpu_rmap ;
   struct hlist_node index_hlist ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   int watchdog_timeo ;
   struct xps_dev_maps *xps_maps ;
   unsigned long trans_start ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct list_head link_watch_list ;
   enum ldv_30964 __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) reg_state : 8 ;
   bool dismantle ;
   enum ldv_30965 __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) rtnl_link_state : 16 ;
   void (*destructor)(struct net_device *) ;
   struct netpoll_info *npinfo ;
   possible_net_t nd_net ;
   union __anonunion_318 __anonCompField_net_device_95 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group const *sysfs_groups[4U] ;
   struct attribute_group const *sysfs_rx_queue_group ;
   struct rtnl_link_ops const *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   u16 gso_min_segs ;
   struct dcbnl_rtnl_ops const *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
};

#line 1978  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct packet_type {
   __be16 type ;
   struct net_device *dev ;
   int (*func)(struct sk_buff *, struct net_device *, struct packet_type *, struct net_device *) ;
   bool (*id_match)(struct packet_type *, struct sock *) ;
   void *af_packet_priv ;
   struct list_head list ;
};

#line 2025  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};

#line 2893 
enum skb_free_reason {
    SKB_REASON_CONSUMED = 0,
    SKB_REASON_DROPPED = 1
};

#line 646  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
struct iphdr {
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) ihl : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) version : 4 ;
   __u8 tos ;
   __be16 tot_len ;
   __be16 id ;
   __be16 frag_off ;
   __u8 ttl ;
   __u8 protocol ;
   __sum16 check ;
   __be32 saddr ;
   __be32 daddr ;
};

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/uaccess.h"
struct page_counter {
   atomic_long_t count ;
   unsigned long limit ;
   struct page_counter *parent ;
   unsigned long watermark ;
   unsigned long failcnt ;
};

#line 170  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/cacheflush.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};

#line 49  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/filter.h"
struct bpf_insn {
   __u8 code ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) dst_reg : 4 ;
   __u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) src_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};

#line 81  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/bpf.h"
enum bpf_prog_type {
    BPF_PROG_TYPE_UNSPEC = 0,
    BPF_PROG_TYPE_SOCKET_FILTER = 1,
    BPF_PROG_TYPE_KPROBE = 2,
    BPF_PROG_TYPE_SCHED_CLS = 3,
    BPF_PROG_TYPE_SCHED_ACT = 4
};

#line 273 
struct bpf_prog_aux;

#line 314  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
union __anonunion_337 {
   struct sock_filter insns[0U] ;
   struct bpf_insn insnsi[0U] ;
};

#line 325  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct bpf_prog {
   u16 pages ;
   bool jited ;
   bool gpl_compatible ;
   u32 len ;
   enum bpf_prog_type type ;
   struct bpf_prog_aux *aux ;
   struct sock_fprog_kern *orig_prog ;
   unsigned int (*bpf_func)(struct sk_buff const *, struct bpf_insn const *) ;
   union __anonunion_337 __anonCompField_bpf_prog_100 ;
};

#line 342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   struct callback_head rcu ;
   struct bpf_prog *prog ;
};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rculist_nulls.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file *, wait_queue_head_t *, struct poll_table_struct *) ;
   unsigned long _key ;
};

#line 183  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/poll.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device *) ;
   int maxtype ;
   struct nla_policy const *policy ;
   int (*validate)(struct nlattr **, struct nlattr **) ;
   int (*newlink)(struct net *, struct net_device *, struct nlattr **, struct nlattr **) ;
   int (*changelink)(struct net_device *, struct nlattr **, struct nlattr **) ;
   void (*dellink)(struct net_device *, struct list_head *) ;
   size_t (*get_size)(struct net_device const *) ;
   int (*fill_info)(struct sk_buff *, struct net_device const *) ;
   size_t (*get_xstats_size)(struct net_device const *) ;
   int (*fill_xstats)(struct sk_buff *, struct net_device const *) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy const *slave_policy ;
   int (*slave_validate)(struct nlattr **, struct nlattr **) ;
   int (*slave_changelink)(struct net_device *, struct net_device *, struct nlattr **, struct nlattr **) ;
   size_t (*get_slave_size)(struct net_device const *, struct net_device const *) ;
   int (*fill_slave_info)(struct sk_buff *, struct net_device const *, struct net_device const *) ;
   struct net *(*get_link_net)(struct net_device const *) ;
};

#line 171 
struct neigh_table;

#line 171  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/rtnetlink.h"
struct neigh_parms {
   possible_net_t net ;
   struct net_device *dev ;
   struct list_head list ;
   int (*neigh_setup)(struct neighbour *) ;
   void (*neigh_cleanup)(struct neighbour *) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[13U] ;
   unsigned long data_state[1U] ;
};

#line 110  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};

#line 129 
struct neigh_ops;

#line 129  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   struct neigh_ops const *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour *, struct sk_buff *) ;
   void (*error_report)(struct neighbour *, struct sk_buff *) ;
   int (*output)(struct neighbour *, struct sk_buff *) ;
   int (*connected_output)(struct neighbour *, struct sk_buff *) ;
};

#line 166  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   possible_net_t net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};

#line 187  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct neigh_table {
   int family ;
   int entry_size ;
   int key_len ;
   __be16 protocol ;
   __u32 (*hash)(void const *, struct net_device const *, __u32 *) ;
   bool (*key_eq)(struct neighbour const *, void const *) ;
   int (*constructor)(struct neighbour *) ;
   int (*pconstructor)(struct pneigh_entry *) ;
   void (*pdestructor)(struct pneigh_entry *) ;
   void (*proxy_redo)(struct sk_buff *) ;
   char *id ;
   struct neigh_parms parms ;
   struct list_head parms_list ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};

#line 519 
struct dn_route;

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
union __anonunion_345 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};

#line 519  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff *) ;
   int (*output)(struct sock *, struct sk_buff *) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion_345 __anonCompField_dst_entry_101 ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_socket_lock_t_346 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};

#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_346 socket_lock_t;

#line 124 
struct proto;

#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u32 __portpair;

#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
typedef __u64 __addrpair;

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_348 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_347 {
   __addrpair skc_addrpair ;
   struct __anonstruct_348 __anonCompField___anonunion_347_102 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_349 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_351 {
   __be16 skc_dport ;
   __u16 skc_num ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_350 {
   __portpair skc_portpair ;
   struct __anonstruct_351 __anonCompField___anonunion_350_105 ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_352 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_353 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock_common {
   union __anonunion_347 __anonCompField_sock_common_103 ;
   union __anonunion_349 __anonCompField_sock_common_104 ;
   union __anonunion_350 __anonCompField_sock_common_106 ;
   unsigned short skc_family ;
   unsigned char volatile skc_state ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) skc_reuse : 4 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_reuseport : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_ipv6only : 1 ;
   unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) skc_net_refcnt : 1 ;
   int skc_bound_dev_if ;
   union __anonunion_352 __anonCompField_sock_common_107 ;
   struct proto *skc_prot ;
   possible_net_t skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   atomic64_t skc_cookie ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion_353 __anonCompField_sock_common_108 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};

#line 219 
struct cg_proto;

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct __anonstruct_sk_backlog_354 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};

#line 220  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_354 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   u16 sk_incoming_cpu ;
   __u32 sk_txhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))) sk_shutdown : 2 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_tx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) sk_no_check_rx : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) sk_userlocks : 4 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(8))) sk_protocol : 8 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(16))) sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   u32 sk_ack_backlog ;
   u32 sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred const *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   u16 sk_tsflags ;
   u32 sk_tskey ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock *) ;
   void (*sk_data_ready)(struct sock *) ;
   void (*sk_write_space)(struct sock *) ;
   void (*sk_error_report)(struct sock *) ;
   int (*sk_backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*sk_destruct)(struct sock *) ;
};

#line 914 
struct request_sock_ops;

#line 915 
struct timewait_sock_ops;

#line 916 
struct inet_hashinfo;

#line 917 
struct raw_hashinfo;

#line 932 
struct udp_table;

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
union __anonunion_h_357 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};

#line 932  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct proto {
   void (*close)(struct sock *, long ) ;
   int (*connect)(struct sock *, struct sockaddr *, int ) ;
   int (*disconnect)(struct sock *, int ) ;
   struct sock *(*accept)(struct sock *, int , int *) ;
   int (*ioctl)(struct sock *, int , unsigned long ) ;
   int (*init)(struct sock *) ;
   void (*destroy)(struct sock *) ;
   void (*shutdown)(struct sock *, int ) ;
   int (*setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_setsockopt)(struct sock *, int , int , char *, unsigned int ) ;
   int (*compat_getsockopt)(struct sock *, int , int , char *, int *) ;
   int (*compat_ioctl)(struct sock *, unsigned int , unsigned long ) ;
   int (*sendmsg)(struct sock *, struct msghdr *, size_t ) ;
   int (*recvmsg)(struct sock *, struct msghdr *, size_t , int , int , int *) ;
   int (*sendpage)(struct sock *, struct page *, int , size_t , int ) ;
   int (*bind)(struct sock *, struct sockaddr *, int ) ;
   int (*backlog_rcv)(struct sock *, struct sk_buff *) ;
   void (*release_cb)(struct sock *) ;
   void (*hash)(struct sock *) ;
   void (*unhash)(struct sock *) ;
   void (*rehash)(struct sock *) ;
   int (*get_port)(struct sock *, unsigned short ) ;
   void (*clear_sk)(struct sock *, int ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock const *) ;
   void (*enter_memory_pressure)(struct sock *) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_357 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup *, struct cgroup_subsys *) ;
   void (*destroy_cgroup)(struct mem_cgroup *) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup *) ;
};

#line 1054  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/sock.h"
struct cg_proto {
   struct page_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jhash.h"
struct request_sock_ops {
   int family ;
   int obj_size ;
   struct kmem_cache *slab ;
   char *slab_name ;
   int (*rtx_syn_ack)(struct sock *, struct request_sock *) ;
   void (*send_ack)(struct sock *, struct sk_buff *, struct request_sock *) ;
   void (*send_reset)(struct sock *, struct sk_buff *) ;
   void (*destructor)(struct request_sock *) ;
   void (*syn_ack_timeout)(struct request_sock const *) ;
};

#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/request_sock.h"
struct request_sock {
   struct sock_common __req_common ;
   struct request_sock *dl_next ;
   struct sock *rsk_listener ;
   u16 mss ;
   u8 num_retrans ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cookie_ts : 1 ;
   u8 __attribute__((__FRAMA_C_BITFIELD_SIZE__(7))) num_timeout : 7 ;
   u32 window_clamp ;
   u32 rcv_wnd ;
   u32 ts_recent ;
   struct timer_list rsk_timer ;
   struct request_sock_ops const *rsk_ops ;
   struct sock *sk ;
   u32 *saved_syn ;
   u32 secid ;
   u32 peer_secid ;
};

#line 330  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_connection_sock.h"
struct timewait_sock_ops {
   struct kmem_cache *twsk_slab ;
   char *twsk_slab_name ;
   unsigned int twsk_obj_size ;
   int (*twsk_unique)(struct sock *, struct sock *, void *) ;
   void (*twsk_destructor)(struct sock *) ;
};

#line 132  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_timewait_sock.h"
struct tcphdr {
   __be16 source ;
   __be16 dest ;
   __be32 seq ;
   __be32 ack_seq ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) res1 : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(4))) doff : 4 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) fin : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) syn : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) rst : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) psh : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ack : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) urg : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) ece : 1 ;
   __u16 __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cwr : 1 ;
   __be16 window ;
   __sum16 check ;
   __be16 urg_ptr ;
};

#line 174  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ipv6.h"
struct ipv6_stable_secret {
   bool initialized ;
   struct in6_addr secret ;
};

#line 60  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ipv6.h"
struct ipv6_devconf {
   __s32 forwarding ;
   __s32 hop_limit ;
   __s32 mtu6 ;
   __s32 accept_ra ;
   __s32 accept_redirects ;
   __s32 autoconf ;
   __s32 dad_transmits ;
   __s32 rtr_solicits ;
   __s32 rtr_solicit_interval ;
   __s32 rtr_solicit_delay ;
   __s32 force_mld_version ;
   __s32 mldv1_unsolicited_report_interval ;
   __s32 mldv2_unsolicited_report_interval ;
   __s32 use_tempaddr ;
   __s32 temp_valid_lft ;
   __s32 temp_prefered_lft ;
   __s32 regen_max_retry ;
   __s32 max_desync_factor ;
   __s32 max_addresses ;
   __s32 accept_ra_defrtr ;
   __s32 accept_ra_pinfo ;
   __s32 accept_ra_rtr_pref ;
   __s32 rtr_probe_interval ;
   __s32 accept_ra_rt_info_max_plen ;
   __s32 proxy_ndp ;
   __s32 accept_source_route ;
   __s32 accept_ra_from_local ;
   __s32 optimistic_dad ;
   __s32 use_optimistic ;
   __s32 mc_forwarding ;
   __s32 disable_ipv6 ;
   __s32 accept_dad ;
   __s32 force_tllao ;
   __s32 ndisc_notify ;
   __s32 suppress_frag_ndisc ;
   __s32 accept_ra_mtu ;
   struct ipv6_stable_secret stable_secret ;
   void *sysctl ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ip6_sf_list {
   struct ip6_sf_list *sf_next ;
   struct in6_addr sf_addr ;
   unsigned long sf_count[2U] ;
   unsigned char sf_gsresp ;
   unsigned char sf_oldin ;
   unsigned char sf_crcount ;
};

#line 109  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifmcaddr6 {
   struct in6_addr mca_addr ;
   struct inet6_dev *idev ;
   struct ifmcaddr6 *next ;
   struct ip6_sf_list *mca_sources ;
   struct ip6_sf_list *mca_tomb ;
   unsigned int mca_sfmode ;
   unsigned char mca_crcount ;
   unsigned long mca_sfcount[2U] ;
   struct timer_list mca_timer ;
   unsigned int mca_flags ;
   int mca_users ;
   atomic_t mca_refcnt ;
   spinlock_t mca_lock ;
   unsigned long mca_cstamp ;
   unsigned long mca_tstamp ;
};

#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ifacaddr6 {
   struct in6_addr aca_addr ;
   struct inet6_dev *aca_idev ;
   struct rt6_info *aca_rt ;
   struct ifacaddr6 *aca_next ;
   int aca_users ;
   atomic_t aca_refcnt ;
   unsigned long aca_cstamp ;
   unsigned long aca_tstamp ;
};

#line 152  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct ipv6_devstat {
   struct proc_dir_entry *proc_dir_entry ;
   struct ipstats_mib *ipv6 ;
   struct icmpv6_mib_device *icmpv6dev ;
   struct icmpv6msg_mib_device *icmpv6msgdev ;
};

#line 163  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/if_inet6.h"
struct inet6_dev {
   struct net_device *dev ;
   struct list_head addr_list ;
   struct ifmcaddr6 *mc_list ;
   struct ifmcaddr6 *mc_tomb ;
   spinlock_t mc_lock ;
   unsigned char mc_qrv ;
   unsigned char mc_gq_running ;
   unsigned char mc_ifc_count ;
   unsigned char mc_dad_count ;
   unsigned long mc_v1_seen ;
   unsigned long mc_qi ;
   unsigned long mc_qri ;
   unsigned long mc_maxdelay ;
   struct timer_list mc_gq_timer ;
   struct timer_list mc_ifc_timer ;
   struct timer_list mc_dad_timer ;
   struct ifacaddr6 *ac_list ;
   rwlock_t lock ;
   atomic_t refcnt ;
   __u32 if_flags ;
   int dead ;
   u8 rndid[8U] ;
   struct timer_list regen_timer ;
   struct list_head tempaddr_list ;
   struct in6_addr token ;
   struct neigh_parms *nd_parms ;
   struct ipv6_devconf cnf ;
   struct ipv6_devstat stats ;
   struct timer_list rs_timer ;
   __u8 rs_probes ;
   __u8 addr_gen_mode ;
   unsigned long tstamp ;
   struct callback_head rcu ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
union __anonunion_379 {
   __be32 a4 ;
   __be32 a6[4U] ;
   struct in6_addr in6 ;
};

#line 971  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ipv6.h"
struct inetpeer_addr_base {
   union __anonunion_379 __anonCompField_inetpeer_addr_base_110 ;
};

#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inetpeer_addr {
   struct inetpeer_addr_base addr ;
   __u16 family ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_380 {
   struct list_head gc_list ;
   struct callback_head gc_rcu ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct __anonstruct_382 {
   atomic_t rid ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
union __anonunion_381 {
   struct __anonstruct_382 __anonCompField___anonunion_381_112 ;
   struct callback_head rcu ;
   struct inet_peer *gc_next ;
};

#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer {
   struct inet_peer *avl_left ;
   struct inet_peer *avl_right ;
   struct inetpeer_addr daddr ;
   __u32 avl_height ;
   u32 metrics[16U] ;
   u32 rate_tokens ;
   unsigned long rate_last ;
   union __anonunion_380 __anonCompField_inet_peer_111 ;
   union __anonunion_381 __anonCompField_inet_peer_113 ;
   __u32 dtime ;
   atomic_t refcnt ;
};

#line 61  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inetpeer.h"
struct inet_peer_base {
   struct inet_peer *root ;
   seqlock_t lock ;
   int total ;
};

#line 50  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct uncached_list;

#line 51  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/route.h"
struct rtable {
   struct dst_entry dst ;
   int rt_genid ;
   unsigned int rt_flags ;
   __u16 rt_type ;
   __u8 rt_is_input ;
   __u8 rt_uses_gateway ;
   int rt_iif ;
   __be32 rt_gateway ;
   u32 rt_pmtu ;
   struct list_head rt_uncached ;
   struct uncached_list *rt_uncached_list ;
};

#line 317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/route.h"
struct inet_ehash_bucket {
   struct hlist_nulls_head chain ;
};

#line 92  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_bind_hashbucket {
   spinlock_t lock ;
   struct hlist_head chain ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_listen_hashbucket {
   spinlock_t lock ;
   struct hlist_nulls_head head ;
};

#line 112  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_hashtables.h"
struct inet_hashinfo {
   struct inet_ehash_bucket *ehash ;
   spinlock_t *ehash_locks ;
   unsigned int ehash_mask ;
   unsigned int ehash_locks_mask ;
   struct inet_bind_hashbucket *bhash ;
   unsigned int bhash_size ;
   struct kmem_cache *bind_bucket_cachep ;
   struct inet_listen_hashbucket listening_hash[32U] ;
};

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct swStat {
   unsigned long long single_ecc_errs ;
   unsigned long long double_ecc_errs ;
   unsigned long long parity_err_cnt ;
   unsigned long long serious_err_cnt ;
   unsigned long long soft_reset_cnt ;
   unsigned long long fifo_full_cnt ;
   unsigned long long ring_full_cnt[8U] ;
   unsigned long long clubbed_frms_cnt ;
   unsigned long long sending_both ;
   unsigned long long outof_sequence_pkts ;
   unsigned long long flush_max_pkts ;
   unsigned long long sum_avg_pkts_aggregated ;
   unsigned long long num_aggregations ;
   unsigned long long mem_alloc_fail_cnt ;
   unsigned long long pci_map_fail_cnt ;
   unsigned long long watchdog_timer_cnt ;
   unsigned long long mem_allocated ;
   unsigned long long mem_freed ;
   unsigned long long link_up_cnt ;
   unsigned long long link_down_cnt ;
   unsigned long long link_up_time ;
   unsigned long long link_down_time ;
   unsigned long long tx_buf_abort_cnt ;
   unsigned long long tx_desc_abort_cnt ;
   unsigned long long tx_parity_err_cnt ;
   unsigned long long tx_link_loss_cnt ;
   unsigned long long tx_list_proc_err_cnt ;
   unsigned long long rx_parity_err_cnt ;
   unsigned long long rx_abort_cnt ;
   unsigned long long rx_parity_abort_cnt ;
   unsigned long long rx_rda_fail_cnt ;
   unsigned long long rx_unkn_prot_cnt ;
   unsigned long long rx_fcs_err_cnt ;
   unsigned long long rx_buf_size_err_cnt ;
   unsigned long long rx_rxd_corrupt_cnt ;
   unsigned long long rx_unkn_err_cnt ;
   unsigned long long tda_err_cnt ;
   unsigned long long pfc_err_cnt ;
   unsigned long long pcc_err_cnt ;
   unsigned long long tti_err_cnt ;
   unsigned long long lso_err_cnt ;
   unsigned long long tpa_err_cnt ;
   unsigned long long sm_err_cnt ;
   unsigned long long mac_tmac_err_cnt ;
   unsigned long long mac_rmac_err_cnt ;
   unsigned long long xgxs_txgxs_err_cnt ;
   unsigned long long xgxs_rxgxs_err_cnt ;
   unsigned long long rc_err_cnt ;
   unsigned long long prc_pcix_err_cnt ;
   unsigned long long rpa_err_cnt ;
   unsigned long long rda_err_cnt ;
   unsigned long long rti_err_cnt ;
   unsigned long long mc_err_cnt ;
};

#line 140  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct xpakStat {
   u64 alarm_transceiver_temp_high ;
   u64 alarm_transceiver_temp_low ;
   u64 alarm_laser_bias_current_high ;
   u64 alarm_laser_bias_current_low ;
   u64 alarm_laser_output_power_high ;
   u64 alarm_laser_output_power_low ;
   u64 warn_transceiver_temp_high ;
   u64 warn_transceiver_temp_low ;
   u64 warn_laser_bias_current_high ;
   u64 warn_laser_bias_current_low ;
   u64 warn_laser_output_power_high ;
   u64 warn_laser_output_power_low ;
   u64 xpak_regs_stat ;
   u32 xpak_timer_count ;
};

#line 159  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct stat_block {
   __le32 tmac_data_octets ;
   __le32 tmac_frms ;
   __le64 tmac_drop_frms ;
   __le32 tmac_bcst_frms ;
   __le32 tmac_mcst_frms ;
   __le64 tmac_pause_ctrl_frms ;
   __le32 tmac_ucst_frms ;
   __le32 tmac_ttl_octets ;
   __le32 tmac_any_err_frms ;
   __le32 tmac_nucst_frms ;
   __le64 tmac_ttl_less_fb_octets ;
   __le64 tmac_vld_ip_octets ;
   __le32 tmac_drop_ip ;
   __le32 tmac_vld_ip ;
   __le32 tmac_rst_tcp ;
   __le32 tmac_icmp ;
   __le64 tmac_tcp ;
   __le32 reserved_0 ;
   __le32 tmac_udp ;
   __le32 rmac_data_octets ;
   __le32 rmac_vld_frms ;
   __le64 rmac_fcs_err_frms ;
   __le64 rmac_drop_frms ;
   __le32 rmac_vld_bcst_frms ;
   __le32 rmac_vld_mcst_frms ;
   __le32 rmac_out_rng_len_err_frms ;
   __le32 rmac_in_rng_len_err_frms ;
   __le64 rmac_long_frms ;
   __le64 rmac_pause_ctrl_frms ;
   __le64 rmac_unsup_ctrl_frms ;
   __le32 rmac_accepted_ucst_frms ;
   __le32 rmac_ttl_octets ;
   __le32 rmac_discarded_frms ;
   __le32 rmac_accepted_nucst_frms ;
   __le32 reserved_1 ;
   __le32 rmac_drop_events ;
   __le64 rmac_ttl_less_fb_octets ;
   __le64 rmac_ttl_frms ;
   __le64 reserved_2 ;
   __le32 rmac_usized_frms ;
   __le32 reserved_3 ;
   __le32 rmac_frag_frms ;
   __le32 rmac_osized_frms ;
   __le32 reserved_4 ;
   __le32 rmac_jabber_frms ;
   __le64 rmac_ttl_64_frms ;
   __le64 rmac_ttl_65_127_frms ;
   __le64 reserved_5 ;
   __le64 rmac_ttl_128_255_frms ;
   __le64 rmac_ttl_256_511_frms ;
   __le64 reserved_6 ;
   __le64 rmac_ttl_512_1023_frms ;
   __le64 rmac_ttl_1024_1518_frms ;
   __le32 rmac_ip ;
   __le32 reserved_7 ;
   __le64 rmac_ip_octets ;
   __le32 rmac_drop_ip ;
   __le32 rmac_hdr_err_ip ;
   __le32 reserved_8 ;
   __le32 rmac_icmp ;
   __le64 rmac_tcp ;
   __le32 rmac_err_drp_udp ;
   __le32 rmac_udp ;
   __le64 rmac_xgmii_err_sym ;
   __le64 rmac_frms_q0 ;
   __le64 rmac_frms_q1 ;
   __le64 rmac_frms_q2 ;
   __le64 rmac_frms_q3 ;
   __le64 rmac_frms_q4 ;
   __le64 rmac_frms_q5 ;
   __le64 rmac_frms_q6 ;
   __le64 rmac_frms_q7 ;
   __le16 rmac_full_q3 ;
   __le16 rmac_full_q2 ;
   __le16 rmac_full_q1 ;
   __le16 rmac_full_q0 ;
   __le16 rmac_full_q7 ;
   __le16 rmac_full_q6 ;
   __le16 rmac_full_q5 ;
   __le16 rmac_full_q4 ;
   __le32 reserved_9 ;
   __le32 rmac_pause_cnt ;
   __le64 rmac_xgmii_data_err_cnt ;
   __le64 rmac_xgmii_ctrl_err_cnt ;
   __le32 rmac_err_tcp ;
   __le32 rmac_accepted_ip ;
   __le32 new_rd_req_cnt ;
   __le32 rd_req_cnt ;
   __le32 rd_rtry_cnt ;
   __le32 new_rd_req_rtry_cnt ;
   __le32 wr_req_cnt ;
   __le32 wr_rtry_rd_ack_cnt ;
   __le32 new_wr_req_rtry_cnt ;
   __le32 new_wr_req_cnt ;
   __le32 wr_disc_cnt ;
   __le32 wr_rtry_cnt ;
   __le32 txp_wr_cnt ;
   __le32 rd_rtry_wr_ack_cnt ;
   __le32 txd_wr_cnt ;
   __le32 txd_rd_cnt ;
   __le32 rxd_wr_cnt ;
   __le32 rxd_rd_cnt ;
   __le32 rxf_wr_cnt ;
   __le32 txf_rd_cnt ;
   __le32 tmac_data_octets_oflow ;
   __le32 tmac_frms_oflow ;
   __le32 tmac_bcst_frms_oflow ;
   __le32 tmac_mcst_frms_oflow ;
   __le32 tmac_ucst_frms_oflow ;
   __le32 tmac_ttl_octets_oflow ;
   __le32 tmac_any_err_frms_oflow ;
   __le32 tmac_nucst_frms_oflow ;
   __le64 tmac_vlan_frms ;
   __le32 tmac_drop_ip_oflow ;
   __le32 tmac_vld_ip_oflow ;
   __le32 tmac_rst_tcp_oflow ;
   __le32 tmac_icmp_oflow ;
   __le32 tpa_unknown_protocol ;
   __le32 tmac_udp_oflow ;
   __le32 reserved_10 ;
   __le32 tpa_parse_failure ;
   __le32 rmac_data_octets_oflow ;
   __le32 rmac_vld_frms_oflow ;
   __le32 rmac_vld_bcst_frms_oflow ;
   __le32 rmac_vld_mcst_frms_oflow ;
   __le32 rmac_accepted_ucst_frms_oflow ;
   __le32 rmac_ttl_octets_oflow ;
   __le32 rmac_discarded_frms_oflow ;
   __le32 rmac_accepted_nucst_frms_oflow ;
   __le32 rmac_usized_frms_oflow ;
   __le32 rmac_drop_events_oflow ;
   __le32 rmac_frag_frms_oflow ;
   __le32 rmac_osized_frms_oflow ;
   __le32 rmac_ip_oflow ;
   __le32 rmac_jabber_frms_oflow ;
   __le32 rmac_icmp_oflow ;
   __le32 rmac_drop_ip_oflow ;
   __le32 rmac_err_drp_udp_oflow ;
   __le32 rmac_udp_oflow ;
   __le32 reserved_11 ;
   __le32 rmac_pause_cnt_oflow ;
   __le64 rmac_ttl_1519_4095_frms ;
   __le64 rmac_ttl_4096_8191_frms ;
   __le64 rmac_ttl_8192_max_frms ;
   __le64 rmac_ttl_gt_max_frms ;
   __le64 rmac_osized_alt_frms ;
   __le64 rmac_jabber_alt_frms ;
   __le64 rmac_gt_max_alt_frms ;
   __le64 rmac_vlan_frms ;
   __le32 rmac_len_discard ;
   __le32 rmac_fcs_discard ;
   __le32 rmac_pf_discard ;
   __le32 rmac_da_discard ;
   __le32 rmac_red_discard ;
   __le32 rmac_rts_discard ;
   __le32 reserved_12 ;
   __le32 rmac_ingm_full_discard ;
   __le32 reserved_13 ;
   __le32 rmac_accepted_ip_oflow ;
   __le32 reserved_14 ;
   __le32 link_fault_cnt ;
   u8 buffer[20U] ;
   struct swStat sw_stat ;
   struct xpakStat xpak_stat ;
};

#line 375  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct tx_fifo_config {
   u32 fifo_len ;
   u8 fifo_priority ;
   u8 f_no_snoop ;
};

#line 393  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct rx_ring_config {
   u32 num_rxd ;
   u8 ring_priority ;
   u8 ring_org ;
   u8 f_no_snoop ;
};

#line 418  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct config_param {
   u32 tx_fifo_num ;
   u8 tx_steering_type ;
   u8 fifo_mapping[8U] ;
   struct tx_fifo_config tx_cfg[8U] ;
   u32 max_txds ;
   u64 tx_intr_type ;
   u8 intr_type ;
   u8 napi ;
   u32 rx_ring_num ;
   struct rx_ring_config rx_cfg[8U] ;
   u16 bus_speed ;
   int max_mc_addr ;
   int max_mac_addr ;
   int mc_start_offset ;
   u8 multiq ;
};

#line 469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct mac_addr {
   u8 mac_addr[6U] ;
};

#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct TxFIFO_element {
   u64 TxDL_Pointer ;
   u64 List_Control ;
};

#line 483  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct TxD {
   u64 Control_1 ;
   u64 Control_2 ;
   u64 Buffer_Pointer ;
   u64 Host_Control ;
};

#line 524  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct list_info_hold {
   dma_addr_t list_phy_addr ;
   void *list_virt_addr ;
};

#line 530  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct RxD_t {
   u64 Host_Control ;
   u64 Control_1 ;
   u64 Control_2 ;
};

#line 550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct RxD1 {
   struct RxD_t h ;
   u64 Buffer0_ptr ;
};

#line 569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct RxD3 {
   struct RxD_t h ;
   u64 Buffer0_ptr ;
   u64 Buffer1_ptr ;
   u64 Buffer2_ptr ;
};

#line 593  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct RxD_block {
   struct RxD1 rxd[127U] ;
   u64 reserved_0 ;
   u64 reserved_1 ;
   u64 reserved_2_pNext_RxD_block ;
   u64 pNext_RxD_Blk_physical ;
};

#line 609  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct buffAdd {
   void *ba_0_org ;
   void *ba_1_org ;
   void *ba_0 ;
   void *ba_1 ;
};

#line 625  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct rx_curr_get_info {
   u32 block_index ;
   u32 offset ;
   u32 ring_len ;
};

#line 637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct rx_curr_put_info {
   u32 block_index ;
   u32 offset ;
   u32 ring_len ;
};

#line 643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct tx_curr_get_info {
   u32 offset ;
   u32 fifo_len ;
};

#line 652  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct tx_curr_put_info {
   u32 offset ;
   u32 fifo_len ;
};

#line 657  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct rxd_info {
   void *virt_addr ;
   dma_addr_t dma_addr ;
};

#line 662  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct rx_block_info {
   void *block_virt_addr ;
   dma_addr_t block_dma_addr ;
   struct rxd_info *rxds ;
};

#line 669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct lro {
   struct sk_buff *parent ;
   struct sk_buff *last_frag ;
   u8 *l2h ;
   struct iphdr *iph ;
   struct tcphdr *tcph ;
   u32 tcp_next_seq ;
   __be32 tcp_ack ;
   int total_len ;
   int frags_len ;
   int sg_num ;
   int in_use ;
   __be16 window ;
   u16 vlan_tag ;
   u32 cur_tsval ;
   __be32 cur_tsecr ;
   u8 saw_ts ;
};

#line 689 
struct s2io_nic;

#line 689  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct ring_info {
   int ring_no ;
   u32 rx_bufs_left ;
   struct lro lro0_n[32U] ;
   u8 lro ;
   int rxd_mode ;
   int rxd_count ;
   struct s2io_nic *nic ;
   struct net_device *dev ;
   struct pci_dev *pdev ;
   struct napi_struct napi ;
   unsigned long interrupt_count ;
   struct rx_block_info rx_blocks[150U] ;
   int block_count ;
   int pkt_cnt ;
   struct rx_curr_put_info rx_curr_put_info ;
   struct rx_curr_get_info rx_curr_get_info ;
   unsigned int mtu ;
   struct buffAdd **ba ;
};

#line 748  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct fifo_info {
   int fifo_no ;
   int max_txds ;
   struct list_info_hold *list_info ;
   struct tx_curr_put_info tx_curr_put_info ;
   struct tx_curr_get_info tx_curr_get_info ;
   int queue_state ;
   struct net_device *dev ;
   u8 multiq ;
   spinlock_t tx_lock ;
   u64 *ufo_in_band_v ;
   struct s2io_nic *nic ;
};

#line 789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct mac_info {
   struct TxFIFO_element *tx_FIFO_start[8U] ;
   struct fifo_info fifos[8U] ;
   void *zerodma_virt_addr ;
   struct ring_info rings[8U] ;
   u16 rmac_pause_time ;
   u16 mc_pause_threshold_q0q3 ;
   u16 mc_pause_threshold_q4q7 ;
   void *stats_mem ;
   dma_addr_t stats_mem_phy ;
   u32 stats_mem_sz ;
   struct stat_block *stats_info ;
};

#line 817  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct s2io_msix_entry {
   u16 vector ;
   u16 entry ;
   void *arg ;
   u8 type ;
   u8 in_use ;
};

#line 841  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct msix_info_st {
   u64 addr ;
   u64 data ;
};

#line 852  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct s2io_nic {
   int rxd_mode ;
   int pkts_to_process ;
   struct net_device *dev ;
   struct mac_info mac_control ;
   struct config_param config ;
   struct pci_dev *pdev ;
   void *bar0 ;
   void *bar1 ;
   struct mac_addr def_mac_addr[256U] ;
   struct net_device_stats stats ;
   int high_dma_flag ;
   int device_enabled_once ;
   char name[60U] ;
   struct timer_list alarm_timer ;
   u32 config_space[64U] ;
   u16 mc_addr_count ;
   u16 m_cast_flg ;
   u16 all_multi_pos ;
   u16 promisc_flg ;
   struct work_struct rst_timer_task ;
   struct work_struct set_link_task ;
   int rx_csum ;
   u16 fifo_selector[8U] ;
   u8 total_tcp_fifos ;
   u8 udp_fifo_idx ;
   u8 total_udp_fifos ;
   u8 other_fifo_idx ;
   struct napi_struct napi ;
   u64 adapt_ctrl_org ;
   u16 last_link_state ;
   int task_flag ;
   unsigned long long start_time ;
   int vlan_strip_flag ;
   int num_entries ;
   struct msix_entry *entries ;
   int msi_detected ;
   wait_queue_head_t msi_wait ;
   struct s2io_msix_entry *s2io_entries ;
   char desc[9U][25U] ;
   int avail_msix_vectors ;
   struct msix_info_st msix_info[63U] ;
   u8 device_type ;
   unsigned long clubbed_frms_cnt ;
   unsigned long sending_both ;
   u16 lro_max_aggr_per_sess ;
   unsigned long volatile state ;
   u64 general_int_mask ;
   u8 product_name[80U] ;
   u8 serial_num[80U] ;
};

#line 1138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
struct XENA_dev_config {
   u64 general_int_status ;
   u64 general_int_mask ;
   u8 unused0[240U] ;
   u64 sw_reset ;
   u64 adapter_status ;
   u64 adapter_control ;
   u64 serr_source ;
   u64 pci_mode ;
   u8 unused_0[1752U] ;
   u64 pic_int_status ;
   u64 pic_int_mask ;
   u64 txpic_int_reg ;
   u64 txpic_int_mask ;
   u64 txpic_alarms ;
   u64 rxpic_int_reg ;
   u64 rxpic_int_mask ;
   u64 rxpic_alarms ;
   u64 flsh_int_reg ;
   u64 flsh_int_mask ;
   u64 flash_alarms ;
   u64 mdio_int_reg ;
   u64 mdio_int_mask ;
   u64 mdio_alarms ;
   u64 iic_int_reg ;
   u64 iic_int_mask ;
   u64 iic_alarms ;
   u8 unused4[8U] ;
   u64 gpio_int_reg ;
   u64 gpio_int_mask ;
   u64 gpio_alarms ;
   u8 unused5[56U] ;
   u64 tx_traffic_int ;
   u64 tx_traffic_mask ;
   u64 rx_traffic_int ;
   u64 rx_traffic_mask ;
   u64 pic_control ;
   u64 swapper_ctrl ;
   u64 pif_rd_swapper_fb ;
   u64 scheduled_int_ctrl ;
   u64 txreqtimeout ;
   u64 statsreqtimeout ;
   u64 read_retry_delay ;
   u64 read_retry_acceleration ;
   u64 write_retry_delay ;
   u64 write_retry_acceleration ;
   u64 xmsi_control ;
   u64 xmsi_access ;
   u64 xmsi_address ;
   u64 xmsi_data ;
   u64 rx_mat ;
   u8 unused6[8U] ;
   u64 tx_mat0_n[8U] ;
   u64 xmsi_mask_reg ;
   u64 stat_byte_cnt ;
   u64 stat_cfg ;
   u64 stat_addr ;
   u64 mdio_control ;
   u64 dtx_control ;
   u64 i2c_control ;
   u64 gpio_control ;
   u64 misc_control ;
   u8 unused7_1[40U] ;
   u64 pic_control2 ;
   u64 ini_dperr_ctrl ;
   u64 wreq_split_mask ;
   u8 unused7_2[1464U] ;
   u64 txdma_int_status ;
   u64 txdma_int_mask ;
   u64 pfc_err_reg ;
   u64 pfc_err_mask ;
   u64 pfc_err_alarm ;
   u64 tda_err_reg ;
   u64 tda_err_mask ;
   u64 tda_err_alarm ;
   u64 pcc_err_reg ;
   u64 pcc_err_mask ;
   u64 pcc_err_alarm ;
   u64 tti_err_reg ;
   u64 tti_err_mask ;
   u64 tti_err_alarm ;
   u64 lso_err_reg ;
   u64 lso_err_mask ;
   u64 lso_err_alarm ;
   u64 tpa_err_reg ;
   u64 tpa_err_mask ;
   u64 tpa_err_alarm ;
   u64 sm_err_reg ;
   u64 sm_err_mask ;
   u64 sm_err_alarm ;
   u8 unused8[72U] ;
   u64 tx_dma_wrap_stat ;
   u64 tx_fifo_partition_0 ;
   u64 tx_fifo_partition_1 ;
   u64 tx_fifo_partition_2 ;
   u64 tx_fifo_partition_3 ;
   u64 tx_w_round_robin_0 ;
   u64 tx_w_round_robin_1 ;
   u64 tx_w_round_robin_2 ;
   u64 tx_w_round_robin_3 ;
   u64 tx_w_round_robin_4 ;
   u64 tti_command_mem ;
   u64 tti_data1_mem ;
   u64 tti_data2_mem ;
   u64 tx_pa_cfg ;
   u64 pcc_enable ;
   u8 unused9[1416U] ;
   u64 txdma_debug_ctrl ;
   u8 unused10[248U] ;
   u64 rxdma_int_status ;
   u64 rxdma_int_mask ;
   u64 rda_err_reg ;
   u64 rda_err_mask ;
   u64 rda_err_alarm ;
   u64 rc_err_reg ;
   u64 rc_err_mask ;
   u64 rc_err_alarm ;
   u64 prc_pcix_err_reg ;
   u64 prc_pcix_err_mask ;
   u64 prc_pcix_err_alarm ;
   u64 rpa_err_reg ;
   u64 rpa_err_mask ;
   u64 rpa_err_alarm ;
   u64 rti_err_reg ;
   u64 rti_err_mask ;
   u64 rti_err_alarm ;
   u8 unused11[120U] ;
   u64 rx_queue_priority ;
   u64 rx_w_round_robin_0 ;
   u64 rx_w_round_robin_1 ;
   u64 rx_w_round_robin_2 ;
   u64 rx_w_round_robin_3 ;
   u64 rx_w_round_robin_4 ;
   u64 prc_rxd0_n[8U] ;
   u64 prc_ctrl_n[8U] ;
   u64 prc_alarm_action ;
   u64 rti_command_mem ;
   u64 rti_data1_mem ;
   u64 rti_data2_mem ;
   u64 rx_pa_cfg ;
   u64 unused_11_1 ;
   u64 ring_bump_counter1 ;
   u64 ring_bump_counter2 ;
   u8 unused12[1296U] ;
   u64 rxdma_debug_ctrl ;
   u8 unused13[248U] ;
   u64 mac_int_status ;
   u64 mac_int_mask ;
   u64 mac_tmac_err_reg ;
   u64 mac_tmac_err_mask ;
   u64 mac_tmac_err_alarm ;
   u64 mac_rmac_err_reg ;
   u64 mac_rmac_err_mask ;
   u64 mac_rmac_err_alarm ;
   u8 unused14[192U] ;
   u64 mac_cfg ;
   u64 tmac_avg_ipg ;
   u64 rmac_max_pyld_len ;
   u64 rmac_err_cfg ;
   u64 rmac_cfg_key ;
   u64 rmac_addr_cmd_mem ;
   u64 rmac_addr_data0_mem ;
   u64 rmac_addr_data1_mem ;
   u8 unused15[8U] ;
   u64 tmac_ipg_cfg ;
   u64 rmac_pause_cfg ;
   u64 rmac_red_cfg ;
   u64 rmac_red_rate_q0q3 ;
   u64 rmac_red_rate_q4q7 ;
   u64 mac_link_util ;
   u64 rmac_invalid_ipg ;
   u64 rts_frm_len_n[8U] ;
   u64 rts_qos_steering ;
   u64 rts_dix_map_n[4U] ;
   u64 rts_q_alternates ;
   u64 rts_default_q ;
   u64 rts_ctrl ;
   u64 rts_pn_cam_ctrl ;
   u64 rts_pn_cam_data ;
   u64 rts_ds_mem_ctrl ;
   u64 rts_ds_mem_data ;
   u8 unused16[1248U] ;
   u64 mac_debug_ctrl ;
   u8 unused17[248U] ;
   u64 mc_int_status ;
   u64 mc_int_mask ;
   u64 mc_err_reg ;
   u64 mc_err_mask ;
   u64 mc_err_alarm ;
   u8 unused18[216U] ;
   u64 rx_queue_cfg ;
   u64 mc_rldram_mrs ;
   u64 mc_rldram_interleave ;
   u64 mc_pause_thresh_q0q3 ;
   u64 mc_pause_thresh_q4q7 ;
   u64 mc_red_thresh_q[8U] ;
   u8 unused19[152U] ;
   u64 mc_rldram_ref_per ;
   u8 unused20[24U] ;
   u64 mc_rldram_test_ctrl ;
   u8 unused21[24U] ;
   u64 mc_rldram_test_add ;
   u8 unused22[24U] ;
   u64 mc_rldram_test_d0 ;
   u8 unused23[24U] ;
   u64 mc_rldram_test_d1 ;
   u8 unused24[120U] ;
   u64 mc_rldram_test_d2 ;
   u8 unused24_1[88U] ;
   u64 mc_rldram_ctrl ;
   u8 unused24_2[728U] ;
   u64 mc_rldram_ref_per_herc ;
   u8 unused24_3[24U] ;
   u64 mc_rldram_mrs_herc ;
   u8 unused25[152U] ;
   u64 mc_debug_ctrl ;
   u8 unused26[248U] ;
   u64 xgxs_int_status ;
   u64 xgxs_int_mask ;
   u64 xgxs_txgxs_err_reg ;
   u64 xgxs_txgxs_err_mask ;
   u64 xgxs_txgxs_err_alarm ;
   u64 xgxs_rxgxs_err_reg ;
   u64 xgxs_rxgxs_err_mask ;
   u64 xgxs_rxgxs_err_alarm ;
   u8 unused27[192U] ;
   u64 xgxs_cfg ;
   u64 xgxs_status ;
   u64 xgxs_cfg_key ;
   u64 xgxs_efifo_cfg ;
   u64 rxgxs_ber_0 ;
   u64 rxgxs_ber_1 ;
   u64 spi_control ;
   u64 spi_data ;
};

#line 808  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
typedef int ldv_func_ret_type;

#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
struct ldv_list_element {
   void *data ;
   struct ldv_list_element *next ;
};

#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
typedef struct ldv_list_element *ldv_list_ptr;

#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};

#line 18  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/int-ll64.h"
typedef short s16;

#line 54  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work;

#line 65  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work *) ;
   struct kthread_worker *worker ;
};

#line 380  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/scatterlist.h"
struct dma_chan;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master;

#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};

#line 151 
struct spi_message;

#line 152 
struct spi_transfer;

#line 205  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device *) ;
   int (*transfer)(struct spi_device *, struct spi_message *) ;
   void (*cleanup)(struct spi_device *) ;
   bool (*can_dma)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool idling ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master *) ;
   int (*transfer_one_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_transfer_hardware)(struct spi_master *) ;
   int (*prepare_message)(struct spi_master *, struct spi_message *) ;
   int (*unprepare_message)(struct spi_master *, struct spi_message *) ;
   void (*set_cs)(struct spi_device *, bool ) ;
   int (*transfer_one)(struct spi_master *, struct spi_device *, struct spi_transfer *) ;
   void (*handle_err)(struct spi_master *, struct spi_message *) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_transfer {
   void const *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) cs_change : 1 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) tx_nbits : 3 ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(3))) rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};

#line 630  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int __attribute__((__FRAMA_C_BITFIELD_SIZE__(1))) is_dma_mapped : 1 ;
   void (*complete)(void *) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};

#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef unsigned long pthread_t;

#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
typedef union pthread_attr_t pthread_attr_t;

#line 3835  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
struct ldv_struct_free_irq_3 {
   int arg0 ;
   int signal_pending ;
};

#line 19  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_interrupt_scenario_15 {
   enum irqreturn (*arg2)(int , void *) ;
   enum irqreturn (*arg1)(int , void *) ;
   void *arg3 ;
   int arg0 ;
   int signal_pending ;
};

#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_pci_scenario_19 {
   struct pci_driver *arg0 ;
   int signal_pending ;
};

#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_random_allocationless_scenario_14 {
   struct net_device *arg0 ;
   int signal_pending ;
};

#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
struct ldv_struct_timer_scenario_13 {
   struct timer_list *arg0 ;
   int signal_pending ;
};
unsigned short __builtin_bswap16(unsigned short);

unsigned int __builtin_bswap32(unsigned int);

void __builtin_prefetch(void const * , ...);

void __builtin_unreachable(void);


#line 7  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/fvtp/.tmp_s2io.c"
void ldv_inline_asm(void);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/export.h"
extern struct module __this_module;


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr, unsigned long volatile *addr)
{
  
#line 74 
  if (0 != 0) 
#line 76 
              ldv_inline_asm(); else 
#line 79 
                                     ldv_inline_asm();
  
#line 80 
  return;
}


#line 204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(long nr, unsigned long volatile *addr)
{
  int __retres;
  
#line 206 
  ldv_inline_asm();
  
#line 207 
  ldv_inline_asm();
  
#line 206 
  __retres = 0;
  
#line 206 
  goto return_label;
  cc_label: 
#line 206 
  ;
  
#line 206 
  __retres = 1;
  return_label: 
#line 206 
                return __retres;
}


#line 308  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr, unsigned long const volatile *addr)
{
  int __retres;
  
#line 311 
  __retres = ((*(addr + (nr >> 6)) >> (nr & 63L)) & 1UL) != 0UL;
  
#line 311 
  return __retres;
}


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u16 __fswab16(__u16 val)
{
  __u16 tmp;
  
#line 49 
  tmp = __builtin_bswap16((unsigned short)((int)val));
  
#line 49 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/swab.h"
__inline static __u32 __fswab32(__u32 val)
{
  __u32 tmp;
  
#line 60 
  tmp = __builtin_bswap32(val);
  
#line 60 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/printk.h"
int printk(char const * , ...);


#line 178  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kernel.h"
void __might_sleep(char const *, int, int);


#line 405 
int snprintf(char *, size_t, char const * , ...);


#line 25  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list)
{
  
#line 27 
  list->next = list;
  
#line 28 
  list->prev = list;
  
#line 29 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/percpu.h"
void __bad_percpu_size(void);


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/page_64.h"
unsigned long __phys_addr(unsigned long);


#line 34  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/string_64.h"
void *memcpy(void *, void const *, size_t);


#line 56 
void *memset(void *, int, size_t);


#line 65 
char *strcpy(char *, char const *);


#line 26  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/string.h"
size_t strlcpy(char *, char const *, size_t);


#line 71 
char *strstr(char const *, char const *);


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/preempt.h"
__inline static int preempt_count(void)
{
  int __retres;
  int tmp;
  {
    int pfo_ret__;
    
#line 22 
    switch (4UL) {
      case (unsigned long)1: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)2: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)4: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      case (unsigned long)8: 
#line 22 
      ;
      
#line 23 
      ldv_inline_asm();
      
#line 22 
      goto ldv_6320;
      default: 
#line 22 
      ;
      
#line 22 
      __bad_percpu_size();
    }
    ldv_6320: 
#line 22 
    ;
    
#line 22 
    tmp = pfo_ret__;
  }
  
#line 22 
  __retres = tmp & 2147483647;
  
#line 22 
  return __retres;
}


#line 280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/lockdep.h"
void lockdep_init_map(struct lockdep_map *, char const *, struct lock_class_key *, int);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
void __raw_spin_lock_init(raw_spinlock_t *, char const *, struct lock_class_key *);


#line 45  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock_api_smp.h"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *, unsigned long);


#line 299  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock)
{
  raw_spinlock_t *__retres;
  
#line 301 
  __retres = & lock->__anonCompField_spinlock_18.rlock;
  
#line 301 
  return __retres;
}


#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/spinlock.h"
static void spin_unlock_irqrestore(spinlock_t *lock, unsigned long flags)
{
  {
    unsigned long __dummy;
    unsigned long __dummy2;
    
  }
  
#line 448 
  _raw_spin_unlock_irqrestore(& lock->__anonCompField_spinlock_18.rlock,flags);
  
#line 449 
  return;
}


#line 478 
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags);


#line 482 
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags);


#line 486 
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags);


#line 490 
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags);


#line 494 
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags);


#line 498 
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags);


#line 502 
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags);


#line 506 
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void __ldv_spin_lock(spinlock_t *);


#line 70 
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1);


#line 74 
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1);


#line 77 
int __ldv_spin_trylock(spinlock_t *);


#line 80 
static int ldv___ldv_spin_trylock_76(spinlock_t *ldv_func_arg1);


#line 84 
static int ldv___ldv_spin_trylock_84(spinlock_t *ldv_func_arg1);


#line 90 
void ldv_spin_model_lock(char *);


#line 91 
void ldv_spin_model_unlock(char *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size, gfp_t flags);


#line 24 
void *ldv_kmalloc(size_t size, gfp_t flags);


#line 25 
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags);


#line 72  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/wait.h"
void __init_waitqueue_head(wait_queue_head_t *, char const *, struct lock_class_key *);


#line 149 
void __wake_up(wait_queue_head_t *, unsigned int, int, void *);


#line 926 
long prepare_to_wait_event(wait_queue_head_t *, wait_queue_t *, int);


#line 927 
void finish_wait(wait_queue_head_t *, wait_queue_t *);


#line 78  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/jiffies.h"
extern unsigned long volatile jiffies;


#line 88  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/timer.h"
void init_timer_key(struct timer_list *, unsigned int, char const *, struct lock_class_key *);


#line 173 
static int ldv_mod_timer_90(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 177 
static int ldv_mod_timer_97(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2);


#line 232 
static int ldv_del_timer_sync_96(struct timer_list *ldv_func_arg1);


#line 181  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/workqueue.h"
void __init_work(struct work_struct *, int);


#line 444 
bool cancel_work_sync(struct work_struct *);


#line 560 
static bool ldv_schedule_work_73(struct work_struct *work);


#line 564 
static bool ldv_schedule_work_91(struct work_struct *work);


#line 568 
static bool ldv_schedule_work_92(struct work_struct *work);


#line 572 
static bool ldv_schedule_work_98(struct work_struct *work);


#line 56  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned char readb(void const volatile *addr)
{
  unsigned char ret;
  
#line 57 
  ldv_inline_asm();
  
#line 56 
  return ret;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile *addr)
{
  unsigned int ret;
  
#line 59 
  ldv_inline_asm();
  
#line 58 
  return ret;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeb(unsigned char val, void volatile *addr)
{
  
#line 66 
  ldv_inline_asm();
  
#line 67 
  return;
}


#line 66  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val, void volatile *addr)
{
  
#line 68 
  ldv_inline_asm();
  
#line 69 
  return;
}


#line 90  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static unsigned long readq(void const volatile *addr)
{
  unsigned long ret;
  
#line 91 
  ldv_inline_asm();
  
#line 90 
  return ret;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/io.h"
__inline static void writeq(unsigned long val, void volatile *addr)
{
  
#line 93 
  ldv_inline_asm();
  
#line 94 
  return;
}


#line 195 
void iounmap(void volatile *);


#line 87  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kobject.h"
__inline static char const *kobject_name(struct kobject const *kobj)
{
  char const *__retres;
  
#line 89 
  __retres = kobj->name;
  
#line 89 
  return __retres;
}


#line 833  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static char const *dev_name(struct device const *dev)
{
  char const *__retres;
  char const *tmp;
  
#line 836 
  if (dev->init_name != (char const *)0) {
    
#line 837 
    __retres = dev->init_name;
    
#line 837 
    goto return_label;
  }
  else ;
  
#line 839 
  tmp = kobject_name(& dev->kobj);
  
#line 839 
  __retres = tmp;
  return_label: 
#line 839 
                return __retres;
}


#line 864  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 866 
  __retres = dev->driver_data;
  
#line 866 
  return __retres;
}


#line 869  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev, void *data)
{
  
#line 871 
  dev->driver_data = data;
  
#line 872 
  return;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/sched.h"
long schedule_timeout(long);


#line 143  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/slab.h"
void kfree(void const *);


#line 418 
static void *kmalloc(size_t size, gfp_t flags);


#line 542 
static void *kcalloc(size_t n, size_t size, gfp_t flags);


#line 581 
static void *kzalloc(size_t size, gfp_t flags);


#line 401  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_channel_offline(struct pci_dev *pdev)
{
  int __retres;
  
#line 403 
  __retres = pdev->error_state != 1U;
  
#line 403 
  return __retres;
}


#line 814 
void pci_dev_put(struct pci_dev *);


#line 843 
struct pci_dev *pci_get_device(unsigned int, unsigned int, struct pci_dev *);


#line 859 
int pci_bus_read_config_byte(struct pci_bus *, unsigned int, int, u8 *);


#line 861 
int pci_bus_read_config_word(struct pci_bus *, unsigned int, int, u16 *);


#line 863 
int pci_bus_read_config_dword(struct pci_bus *, unsigned int, int, u32 *);


#line 865 
int pci_bus_write_config_byte(struct pci_bus *, unsigned int, int, u8);


#line 867 
int pci_bus_write_config_word(struct pci_bus *, unsigned int, int, u16);


#line 869 
int pci_bus_write_config_dword(struct pci_bus *, unsigned int, int, u32);


#line 883  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_byte(struct pci_dev const *dev, int where, u8 *val)
{
  int tmp;
  
#line 885 
  tmp = pci_bus_read_config_byte(dev->bus,dev->devfn,where,val);
  
#line 885 
  return tmp;
}


#line 887  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_word(struct pci_dev const *dev, int where, u16 *val)
{
  int tmp;
  
#line 889 
  tmp = pci_bus_read_config_word(dev->bus,dev->devfn,where,val);
  
#line 889 
  return tmp;
}


#line 891  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_read_config_dword(struct pci_dev const *dev, int where, u32 *val)
{
  int tmp;
  
#line 894 
  tmp = pci_bus_read_config_dword(dev->bus,dev->devfn,where,val);
  
#line 894 
  return tmp;
}


#line 896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_byte(struct pci_dev const *dev, int where, u8 val)
{
  int tmp;
  
#line 898 
  tmp = pci_bus_write_config_byte(dev->bus,dev->devfn,where,(unsigned char)((int)val));
  
#line 898 
  return tmp;
}


#line 900  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_word(struct pci_dev const *dev, int where, u16 val)
{
  int tmp;
  
#line 902 
  tmp = pci_bus_write_config_word(dev->bus,dev->devfn,where,(unsigned short)((int)val));
  
#line 902 
  return tmp;
}


#line 904  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static int pci_write_config_dword(struct pci_dev const *dev, int where, u32 val)
{
  int tmp;
  
#line 907 
  tmp = pci_bus_write_config_dword(dev->bus,dev->devfn,where,val);
  
#line 907 
  return tmp;
}


#line 951 
int pci_enable_device(struct pci_dev *);


#line 968 
void pci_disable_device(struct pci_dev *);


#line 971 
void pci_set_master(struct pci_dev *);


#line 1026 
int pci_save_state(struct pci_dev *);


#line 1027 
void pci_restore_state(struct pci_dev *);


#line 1094 
int pci_request_regions(struct pci_dev *, char const *);


#line 1096 
void pci_release_regions(struct pci_dev *);


#line 1146 
static int ldv___pci_register_driver_106(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3);


#line 1158 
static void ldv_pci_unregister_driver_107(struct pci_driver *ldv_func_arg1);


#line 945  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page const *page)
{
  void *__retres;
  
#line 947 
  __retres = (void *)((unsigned long)((unsigned long long)(((long)page + 24189255811072L) / 64L) << 12) + 18446612132314218496UL);
  
#line 947 
  return __retres;
}


#line 1216  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
void pci_disable_msix(struct pci_dev *);


#line 1227 
int pci_enable_msix_range(struct pci_dev *, struct msix_entry *, int, int);


#line 73  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction)
{
  int __retres;
  
#line 76 
  __retres = (unsigned int)dma_direction <= 2U;
  
#line 76 
  return __retres;
}


#line 131  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address, unsigned int n)
{
  
#line 133 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-debug.h"
void debug_dma_map_page(struct device *, struct page *, size_t, size_t, int, dma_addr_t, bool);


#line 42 
void debug_dma_mapping_error(struct device *, dma_addr_t);


#line 44 
void debug_dma_unmap_page(struct device *, dma_addr_t, size_t, int, bool);


#line 59 
void debug_dma_sync_single_for_cpu(struct device *, dma_addr_t, size_t, int);


#line 63 
void debug_dma_sync_single_for_device(struct device *, dma_addr_t, size_t, int);


#line 30  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops;


#line 32  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev)
{
  struct dma_map_ops *__retres;
  
#line 37 
  if ((long)(dev == (struct device *)0) != 0L || dev->archdata.dma_ops == (struct dma_map_ops *)0) {
    
#line 38 
    __retres = dma_ops;
    
#line 38 
    goto return_label;
  }
  else {
    
#line 40 
    __retres = dev->archdata.dma_ops;
    
#line 40 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 10  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  dma_addr_t addr;
  int tmp_0;
  unsigned long tmp_1;
  unsigned long tmp_2;
  
#line 15 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 18 
  kmemcheck_mark_initialized(ptr,(unsigned int)size);
  
#line 19 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 19 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 21 
    ldv_inline_asm();
    
#line 19 
    ;
  }
  else ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  ;
  
#line 20 
  tmp_1 = __phys_addr((unsigned long)ptr);
  
#line 20 
  ;
  
#line 20 
  addr = (*(ops->map_page))(dev,(struct page *)(-24189255811072) + (tmp_1 >> 12),(unsigned long)ptr & 4095UL,size,dir,attrs);
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  ;
  
#line 23 
  tmp_2 = __phys_addr((unsigned long)ptr);
  
#line 23 
  ;
  
#line 23 
  debug_dma_map_page(dev,(struct page *)(-24189255811072) + (tmp_2 >> 12),(unsigned long)ptr & 4095UL,size,(int)dir,addr,(_Bool)1);
  
#line 26 
  return addr;
}


#line 29  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs)
{
  int tmp_0;
  
#line 34 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 36 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 36 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 38 
    ldv_inline_asm();
    
#line 36 
    ;
  }
  else ;
  
#line 37 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 38 
    (*(ops->unmap_page))(dev,addr,size,dir,attrs); else ;
  
#line 39 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)1);
  
#line 40 
  return;
}


#line 76  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t addr;
  void *tmp_0;
  int tmp_1;
  
#line 80 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 83 
  ;
  
#line 83 
  tmp_0 = lowmem_page_address((struct page const *)page);
  
#line 83 
  ;
  
#line 83 
  kmemcheck_mark_initialized(tmp_0 + offset,(unsigned int)size);
  
#line 84 
  tmp_1 = valid_dma_direction((int)dir);
  
#line 84 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 86 
    ldv_inline_asm();
    
#line 84 
    ;
  }
  else ;
  
#line 85 
  addr = (*(ops->map_page))(dev,page,offset,size,dir,(struct dma_attrs *)0);
  
#line 86 
  debug_dma_map_page(dev,page,offset,size,(int)dir,addr,(_Bool)0);
  
#line 88 
  return addr;
}


#line 91  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_page(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 94 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 96 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 96 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 98 
    ldv_inline_asm();
    
#line 96 
    ;
  }
  else ;
  
#line 97 
  if (ops->unmap_page != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *))0) 
    
#line 98 
    (*(ops->unmap_page))(dev,addr,size,dir,(struct dma_attrs *)0); else ;
  
#line 99 
  debug_dma_unmap_page(dev,addr,size,(int)dir,(_Bool)0);
  
#line 100 
  return;
}


#line 102  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 106 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 108 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 108 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 110 
    ldv_inline_asm();
    
#line 108 
    ;
  }
  else ;
  
#line 109 
  if (ops->sync_single_for_cpu != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 110 
    (*(ops->sync_single_for_cpu))(dev,addr,size,dir); else ;
  
#line 111 
  debug_dma_sync_single_for_cpu(dev,addr,size,(int)dir);
  
#line 112 
  return;
}


#line 114  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/dma-mapping-common.h"
__inline static void dma_sync_single_for_device(struct device *dev, dma_addr_t addr, size_t size, enum dma_data_direction dir)
{
  int tmp_0;
  
#line 118 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 120 
  tmp_0 = valid_dma_direction((int)dir);
  
#line 120 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 122 
    ldv_inline_asm();
    
#line 120 
    ;
  }
  else ;
  
#line 121 
  if (ops->sync_single_for_device != (void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ))0) 
    
#line 122 
    (*(ops->sync_single_for_device))(dev,addr,size,dir); else ;
  
#line 123 
  debug_dma_sync_single_for_device(dev,addr,size,(int)dir);
  
#line 124 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/arch/x86/include/asm/dma-mapping.h"
__inline static int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
{
  int __retres;
  
#line 49 
  struct dma_map_ops *ops = get_dma_ops(dev);
  
#line 50 
  debug_dma_mapping_error(dev,dma_addr);
  
#line 51 
  if (ops->mapping_error != (int (*)(struct device *, dma_addr_t ))0) {
    int tmp_0;
    
#line 52 
    tmp_0 = (*(ops->mapping_error))(dev,dma_addr);
    
#line 52 
    __retres = tmp_0;
    
#line 52 
    goto return_label;
  }
  else ;
  
#line 54 
  __retres = dma_addr == 0ULL;
  return_label: 
#line 54 
                return __retres;
}


#line 60 
int dma_supported(struct device *, u64);


#line 61 
int dma_set_mask(struct device *, u64);


#line 131 
void *dma_alloc_attrs(struct device *, size_t, dma_addr_t *, gfp_t, struct dma_attrs *);


#line 136 
void dma_free_attrs(struct device *, size_t, void *, dma_addr_t, struct dma_attrs *);


#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/dma-mapping.h"
__inline static int dma_set_coherent_mask(struct device *dev, u64 mask)
{
  int __retres;
  int tmp;
  
#line 103 
  tmp = dma_supported(dev,mask);
  
#line 103 
  if (tmp == 0) {
    
#line 104 
    __retres = -5;
    
#line 104 
    goto return_label;
  }
  else ;
  
#line 105 
  dev->coherent_dma_mask = mask;
  
#line 106 
  __retres = 0;
  return_label: 
#line 106 
                return __retres;
}


#line 16  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size, dma_addr_t *dma_handle)
{
  void *tmp_0;
  struct device *tmp;
  
#line 19 
  ;
  
#line 19 
  ;
  
#line 19 
  if (hwdev != (struct pci_dev *)0) 
#line 19 
                                    tmp = & hwdev->dev; else 
#line 19 
                                                             tmp = (struct device *)0;
  
#line 19 
  tmp_0 = dma_alloc_attrs(tmp,size,dma_handle,32U,(struct dma_attrs *)0);
  
#line 19 
  return tmp_0;
}


#line 31  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_free_consistent(struct pci_dev *hwdev, size_t size, void *vaddr, dma_addr_t dma_handle)
{
  struct device *tmp;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  ;
  
#line 34 
  if (hwdev != (struct pci_dev *)0) 
#line 34 
                                    tmp = & hwdev->dev; else 
#line 34 
                                                             tmp = (struct device *)0;
  
#line 34 
  dma_free_attrs(tmp,size,vaddr,dma_handle,(struct dma_attrs *)0);
  
#line 35 
  return;
}


#line 38  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static dma_addr_t pci_map_single(struct pci_dev *hwdev, void *ptr, size_t size, int direction)
{
  dma_addr_t tmp_0;
  struct device *tmp;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  ;
  
#line 40 
  if (hwdev != (struct pci_dev *)0) 
#line 40 
                                    tmp = & hwdev->dev; else 
#line 40 
                                                             tmp = (struct device *)0;
  
#line 40 
  tmp_0 = dma_map_single_attrs(tmp,ptr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 40 
  return tmp_0;
}


#line 44  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_single(struct pci_dev *hwdev, dma_addr_t dma_addr, size_t size, int direction)
{
  struct device *tmp;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  ;
  
#line 47 
  if (hwdev != (struct pci_dev *)0) 
#line 47 
                                    tmp = & hwdev->dev; else 
#line 47 
                                                             tmp = (struct device *)0;
  
#line 47 
  dma_unmap_single_attrs(tmp,dma_addr,size,(enum dma_data_direction)direction,(struct dma_attrs *)0);
  
#line 48 
  return;
}


#line 58  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_unmap_page(struct pci_dev *hwdev, dma_addr_t dma_address, size_t size, int direction)
{
  struct device *tmp;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  ;
  
#line 61 
  if (hwdev != (struct pci_dev *)0) 
#line 61 
                                    tmp = & hwdev->dev; else 
#line 61 
                                                             tmp = (struct device *)0;
  
#line 61 
  dma_unmap_page(tmp,dma_address,size,(enum dma_data_direction)direction);
  
#line 62 
  return;
}


#line 79  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_cpu(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  ;
  
#line 82 
  if (hwdev != (struct pci_dev *)0) 
#line 82 
                                    tmp = & hwdev->dev; else 
#line 82 
                                                             tmp = (struct device *)0;
  
#line 82 
  dma_sync_single_for_cpu(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static void pci_dma_sync_single_for_device(struct pci_dev *hwdev, dma_addr_t dma_handle, size_t size, int direction)
{
  struct device *tmp;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  ;
  
#line 89 
  if (hwdev != (struct pci_dev *)0) 
#line 89 
                                    tmp = & hwdev->dev; else 
#line 89 
                                                             tmp = (struct device *)0;
  
#line 89 
  dma_sync_single_for_device(tmp,dma_handle,size,(enum dma_data_direction)direction);
  
#line 90 
  return;
}


#line 107  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_dma_mapping_error(struct pci_dev *pdev, dma_addr_t dma_addr)
{
  int tmp;
  
#line 109 
  tmp = dma_mapping_error(& pdev->dev,dma_addr);
  
#line 109 
  return tmp;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 115 
  tmp = dma_set_mask(& dev->dev,mask);
  
#line 115 
  return tmp;
}


#line 118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/pci-dma-compat.h"
__inline static int pci_set_consistent_dma_mask(struct pci_dev *dev, u64 mask)
{
  int tmp;
  
#line 120 
  tmp = dma_set_coherent_mask(& dev->dev,mask);
  
#line 120 
  return tmp;
}


#line 1471  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void *pci_get_drvdata(struct pci_dev *pdev)
{
  void *tmp;
  
#line 1473 
  tmp = dev_get_drvdata((struct device const *)(& pdev->dev));
  
#line 1473 
  return tmp;
}


#line 1476  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static void pci_set_drvdata(struct pci_dev *pdev, void *data)
{
  
#line 1478 
  dev_set_drvdata(& pdev->dev,data);
  
#line 1479 
  return;
}


#line 1484  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/pci.h"
__inline static char const *pci_name(struct pci_dev const *pdev)
{
  char const *tmp;
  
#line 1486 
  tmp = dev_name(& pdev->dev);
  
#line 1486 
  return tmp;
}


#line 1666 
void *pci_ioremap_bar(struct pci_dev *, int);


#line 5  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/asm-generic/delay.h"
void __bad_udelay(void);


#line 8 
void __udelay(unsigned long);


#line 10 
void __const_udelay(unsigned long);


#line 46  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/delay.h"
void msleep(unsigned int);


#line 74  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __sum16 csum16_add(__sum16 csum, __be16 addend)
{
  __sum16 __retres;
  
#line 76 
  u16 res = csum;
  
#line 78 
  res = (unsigned short)((int)res + (int)addend);
  
#line 79 
  __retres = (unsigned short)(((int)res < (int)addend) + (int)res);
  
#line 79 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static __sum16 csum16_sub(__sum16 csum, __be16 addend)
{
  __sum16 tmp;
  
#line 84 
  tmp = csum16_add((unsigned short)((int)csum),(unsigned short)(~ ((int)addend)));
  
#line 84 
  return tmp;
}


#line 136  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/checksum.h"
__inline static void csum_replace2(__sum16 *sum, __be16 old, __be16 new)
{
  __sum16 tmp_0;
  __sum16 tmp;
  
#line 138 
  ;
  
#line 138 
  tmp = csum16_sub((unsigned short)(~ ((int)*sum)),(unsigned short)((int)old));
  
#line 138 
  tmp_0 = csum16_add((unsigned short)((int)tmp),(unsigned short)((int)new));
  
#line 138 
  *sum = (unsigned short)(~ ((int)tmp_0));
  
#line 139 
  return;
}


#line 230  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_frag_size(skb_frag_t const *frag)
{
  unsigned int __retres;
  
#line 232 
  __retres = frag->size;
  
#line 232 
  return __retres;
}


#line 775 
void consume_skb(struct sk_buff *);


#line 976  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_end_pointer(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 978 
  __retres = skb->head + skb->end;
  
#line 978 
  return __retres;
}


#line 1572  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned int skb_headlen(struct sk_buff const *skb)
{
  unsigned int __retres;
  
#line 1574 
  __retres = skb->len - skb->data_len;
  
#line 1574 
  return __retres;
}


#line 1655  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reset_tail_pointer(struct sk_buff *skb)
{
  
#line 1657 
  skb->tail = (unsigned int)((long)skb->data - (long)skb->head);
  
#line 1658 
  return;
}


#line 1688 
unsigned char *skb_put(struct sk_buff *, unsigned int);


#line 1698 
unsigned char *skb_push(struct sk_buff *, unsigned int);


#line 1706 
unsigned char *skb_pull(struct sk_buff *, unsigned int);


#line 1789  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_reserve(struct sk_buff *skb, int len)
{
  
#line 1791 
  skb->data += len;
  
#line 1792 
  skb->tail += (unsigned int)len;
  
#line 1793 
  return;
}


#line 1897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static unsigned char *skb_network_header(struct sk_buff const *skb)
{
  unsigned char *__retres;
  
#line 1899 
  __retres = skb->head + (int)skb->network_header;
  
#line 1899 
  return __retres;
}


#line 2140 
struct sk_buff *__netdev_alloc_skb(struct net_device *, unsigned int, gfp_t);


#line 2156  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct sk_buff *netdev_alloc_skb(struct net_device *dev, unsigned int length)
{
  struct sk_buff *tmp;
  
#line 2159 
  tmp = __netdev_alloc_skb(dev,length,32U);
  
#line 2159 
  return tmp;
}


#line 2272  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static struct page *skb_frag_page(skb_frag_t const *frag)
{
  struct page *__retres;
  
#line 2274 
  __retres = frag->page.p;
  
#line 2274 
  return __retres;
}


#line 2390  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static dma_addr_t skb_frag_dma_map(struct device *dev, skb_frag_t const *frag, size_t offset, size_t size, enum dma_data_direction dir)
{
  dma_addr_t tmp_0;
  struct page *tmp;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  ;
  
#line 2395 
  tmp = skb_frag_page(frag);
  
#line 2395 
  ;
  
#line 2395 
  tmp_0 = dma_map_page(dev,tmp,(unsigned long)frag->page_offset + offset,size,dir);
  
#line 2395 
  return tmp_0;
}


#line 3305  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_record_rx_queue(struct sk_buff *skb, u16 rx_queue)
{
  
#line 3307 
  skb->queue_mapping = (unsigned short)((unsigned int)rx_queue + 1U);
  
#line 3308 
  return;
}


#line 3426  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/skbuff.h"
__inline static void skb_checksum_none_assert(struct sk_buff const *skb)
{
  
#line 3428 
  return;
}


#line 113  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static void ethtool_cmd_speed_set(struct ethtool_cmd *ep, __u32 speed)
{
  
#line 117 
  ep->speed = (unsigned short)speed;
  
#line 118 
  ep->speed_hi = (unsigned short)(speed >> 16);
  
#line 119 
  return;
}


#line 121  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/uapi/linux/ethtool.h"
__inline static __u32 ethtool_cmd_speed(struct ethtool_cmd const *ep)
{
  __u32 __retres;
  
#line 123 
  __retres = (unsigned int)(((int)ep->speed_hi << 16) | (int)ep->speed);
  
#line 123 
  return __retres;
}


#line 85  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ethtool.h"
u32 ethtool_op_get_link(struct net_device *);


#line 141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/interrupt.h"
static int ldv_request_irq_79(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 145 
static int ldv_request_irq_93(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 149 
static int ldv_request_irq_94(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 153 
static int ldv_request_irq_95(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev);


#line 165 
static void ldv_free_irq_80(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 169 
static void ldv_free_irq_81(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 173 
static void ldv_free_irq_82(unsigned int ldv_func_arg1, void *ldv_func_arg2);


#line 192 
void disable_irq(unsigned int);


#line 194 
void enable_irq(unsigned int);


#line 391  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
void __napi_schedule(struct napi_struct *);


#line 394  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_disable_pending(struct napi_struct *n)
{
  bool __retres;
  int tmp;
  
#line 396 
  tmp = constant_test_bit(1L,(unsigned long const volatile *)(& n->state));
  
#line 396 
  __retres = (_Bool)(tmp != 0);
  
#line 396 
  return __retres;
}


#line 408  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool napi_schedule_prep(struct napi_struct *n)
{
  bool __retres;
  int tmp_2;
  int tmp_0;
  bool tmp;
  
#line 410 
  tmp = napi_disable_pending(n);
  
#line 410 
  if (tmp) 
#line 410 
           tmp_0 = 0; else 
#line 410 
                           tmp_0 = 1;
  
#line 410 
  if (tmp_0) {
    int tmp_1;
    
#line 410 
    tmp_1 = test_and_set_bit(0L,(unsigned long volatile *)(& n->state));
    
#line 410 
    if (tmp_1 == 0) 
#line 410 
                    tmp_2 = 1; else 
#line 410 
                                    tmp_2 = 0;
  }
  else 
#line 410 
       tmp_2 = 0;
  
#line 410 
  __retres = (_Bool)(tmp_2 != 0);
  
#line 410 
  return __retres;
}


#line 421  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_schedule(struct napi_struct *n)
{
  bool tmp;
  
#line 423 
  tmp = napi_schedule_prep(n);
  
#line 423 
  if ((int)tmp != 0) 
#line 424 
                     __napi_schedule(n); else ;
  
#line 425 
  return;
}


#line 450 
void napi_complete_done(struct napi_struct *, int);


#line 458  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_complete(struct napi_struct *n)
{
  
#line 460 
  napi_complete_done(n,0);
  
#line 461 
  return;
}


#line 496 
void napi_disable(struct napi_struct *);


#line 505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void napi_enable(struct napi_struct *n)
{
  int tmp;
  
#line 507 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& n->state));
  
#line 507 
  if ((long)(tmp == 0) != 0L) {
    
#line 509 
    ldv_inline_asm();
    
#line 507 
    ;
  }
  else ;
  
#line 509 
  ldv_inline_asm();
  
#line 509 
  set_bit(0L,(unsigned long volatile *)(& n->state));
  
#line 510 
  return;
}


#line 1822  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static struct netdev_queue *netdev_get_tx_queue(struct net_device const *dev, unsigned int index)
{
  struct netdev_queue *__retres;
  
#line 1825 
  __retres = dev->_tx + index;
  
#line 1825 
  return __retres;
}


#line 1880  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void *netdev_priv(struct net_device const *dev)
{
  void *__retres;
  
#line 1882 
  __retres = (void *)dev + 3008U;
  
#line 1882 
  return __retres;
}


#line 1911 
void netif_napi_add(struct net_device *, struct napi_struct *, int (*)(struct napi_struct *, int ), int);


#line 2205 
static void ldv_free_netdev_103(struct net_device *ldv_func_arg1);


#line 2209 
static void ldv_free_netdev_105(struct net_device *ldv_func_arg1);


#line 2515  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_queue(struct netdev_queue *dev_queue)
{
  
#line 2517 
  set_bit(0L,(unsigned long volatile *)(& dev_queue->state));
  
#line 2518 
  return;
}


#line 2531  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_start_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2535 
  i = 0U;
  
#line 2535 
  goto ldv_44938;
  ldv_44937: 
#line 2536 
  ;
  {
    
#line 2536 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2537 
    netif_tx_start_queue(txq);
  }
  
#line 2535 
  i += 1U;
  ldv_44938: 
#line 2536 
  ;
  
#line 2535 
  if (dev->num_tx_queues > i) 
#line 2537 
                              goto ldv_44937; else 
#line 2540 
                                                   goto ldv_44939;
  ldv_44939: 
#line 2541 
  ;
  
#line 2542 
  return;
}


#line 2541 
void netif_tx_wake_queue(struct netdev_queue *);


#line 2550  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_wake_queue(struct net_device *dev)
{
  struct netdev_queue *tmp;
  
#line 2552 
  tmp = netdev_get_tx_queue((struct net_device const *)dev,0U);
  
#line 2552 
  netif_tx_wake_queue(tmp);
  
#line 2553 
  return;
}


#line 2555  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void netif_tx_wake_all_queues(struct net_device *dev)
{
  unsigned int i;
  
#line 2559 
  i = 0U;
  
#line 2559 
  goto ldv_44951;
  ldv_44950: 
#line 2560 
  ;
  {
    
#line 2560 
    struct netdev_queue *txq = netdev_get_tx_queue((struct net_device const *)dev,i);
    
#line 2561 
    netif_tx_wake_queue(txq);
  }
  
#line 2559 
  i += 1U;
  ldv_44951: 
#line 2560 
  ;
  
#line 2559 
  if (dev->num_tx_queues > i) 
#line 2561 
                              goto ldv_44950; else 
#line 2564 
                                                   goto ldv_44952;
  ldv_44952: 
#line 2565 
  ;
  
#line 2566 
  return;
}


#line 2582 
void netif_tx_stop_all_queues(struct net_device *);


#line 2584  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_tx_queue_stopped(struct netdev_queue const *dev_queue)
{
  bool __retres;
  int tmp;
  
#line 2586 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev_queue->state));
  
#line 2586 
  __retres = (_Bool)(tmp != 0);
  
#line 2586 
  return __retres;
}


#line 2595  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_queue_stopped(struct net_device const *dev)
{
  bool tmp_0;
  struct netdev_queue *tmp;
  
#line 2597 
  tmp = netdev_get_tx_queue(dev,0U);
  
#line 2597 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)tmp);
  
#line 2597 
  return tmp_0;
}


#line 2769  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_running(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 2771 
  tmp = constant_test_bit(0L,(unsigned long const volatile *)(& dev->state));
  
#line 2771 
  __retres = (_Bool)(tmp != 0);
  
#line 2771 
  return __retres;
}


#line 2815  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool __netif_subqueue_stopped(struct net_device const *dev, u16 queue_index)
{
  bool tmp_0;
  
#line 2818 
  struct netdev_queue *txq = netdev_get_tx_queue(dev,(unsigned int)queue_index);
  
#line 2820 
  tmp_0 = netif_tx_queue_stopped((struct netdev_queue const *)txq);
  
#line 2820 
  return tmp_0;
}


#line 2829 
void netif_wake_subqueue(struct net_device *, u16);


#line 2899 
void __dev_kfree_skb_irq(struct sk_buff *, enum skb_free_reason);


#line 2900 
void __dev_kfree_skb_any(struct sk_buff *, enum skb_free_reason);


#line 2921  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_irq(struct sk_buff *skb)
{
  
#line 2923 
  __dev_kfree_skb_irq(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2924 
  return;
}


#line 2931  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static void dev_kfree_skb_any(struct sk_buff *skb)
{
  
#line 2933 
  __dev_kfree_skb_any(skb,(enum skb_free_reason)SKB_REASON_DROPPED);
  
#line 2934 
  return;
}


#line 2941 
int netif_rx(struct sk_buff *);


#line 2943 
int netif_receive_skb_sk(struct sock *, struct sk_buff *);


#line 2944  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static int netif_receive_skb(struct sk_buff *skb)
{
  int tmp;
  
#line 2946 
  tmp = netif_receive_skb_sk(skb->sk,skb);
  
#line 2946 
  return tmp;
}


#line 3038  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/netdevice.h"
__inline static bool netif_carrier_ok(struct net_device const *dev)
{
  bool __retres;
  int tmp;
  
#line 3040 
  tmp = constant_test_bit(2L,(unsigned long const volatile *)(& dev->state));
  
#line 3040 
  __retres = (_Bool)(tmp == 0);
  
#line 3040 
  return __retres;
}


#line 3047 
void netif_carrier_on(struct net_device *);


#line 3049 
void netif_carrier_off(struct net_device *);


#line 3117 
void netif_device_detach(struct net_device *);


#line 3119 
void netif_device_attach(struct net_device *);


#line 3355 
static int ldv_register_netdev_101(struct net_device *ldv_func_arg1);


#line 3360 
static void ldv_unregister_netdev_102(struct net_device *ldv_func_arg1);


#line 3364 
static void ldv_unregister_netdev_104(struct net_device *ldv_func_arg1);


#line 33  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__be16 eth_type_trans(struct sk_buff *, struct net_device *);


#line 47 
int eth_validate_addr(struct net_device *);


#line 53 
static struct net_device *ldv_alloc_etherdev_mqs_99(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 57 
static struct net_device *ldv_alloc_etherdev_mqs_100(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3);


#line 93  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_zero_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 96 
  __retres = (_Bool)((*((u32 const *)addr) | (unsigned int)*((u16 const *)(addr + 4U))) == 0U);
  
#line 96 
  return __retres;
}


#line 111  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_multicast_ether_addr(u8 const *addr)
{
  bool __retres;
  
#line 114 
  u32 a = *((u32 const *)addr);
  
#line 121 
  __retres = (_Bool)((a & 1U) != 0U);
  
#line 121 
  return __retres;
}


#line 186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/etherdevice.h"
__inline static bool is_valid_ether_addr(u8 const *addr)
{
  bool __retres;
  int tmp_3;
  int tmp_0;
  bool tmp;
  
#line 190 
  tmp = is_multicast_ether_addr(addr);
  
#line 190 
  if (tmp) 
#line 190 
           tmp_0 = 0; else 
#line 190 
                           tmp_0 = 1;
  
#line 190 
  if (tmp_0) {
    int tmp_2;
    bool tmp_1;
    
#line 190 
    tmp_1 = is_zero_ether_addr(addr);
    
#line 190 
    if (tmp_1) 
#line 190 
               tmp_2 = 0; else 
#line 190 
                               tmp_2 = 1;
    
#line 190 
    if (tmp_2) 
#line 190 
               tmp_3 = 1; else 
#line 190 
                               tmp_3 = 0;
  }
  else 
#line 190 
       tmp_3 = 0;
  
#line 190 
  __retres = (_Bool)(tmp_3 != 0);
  
#line 190 
  return __retres;
}


#line 27  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/rtnetlink.h"
void rtnl_lock(void);


#line 28 
void rtnl_unlock(void);


#line 409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/if_vlan.h"
__inline static void __vlan_hwaccel_put_tag(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)
{
  
#line 412 
  skb->vlan_proto = vlan_proto;
  
#line 413 
  skb->vlan_tci = (unsigned short)((unsigned int)vlan_tci | 4096U);
  
#line 414 
  return;
}


#line 23  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/linux/ip.h"
__inline static struct iphdr *ip_hdr(struct sk_buff const *skb)
{
  struct iphdr *tmp;
  
#line 25 
  tmp = (struct iphdr *)skb_network_header(skb);
  
#line 25 
  return tmp;
}


#line 255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/ip.h"
__inline static bool ip_is_fragment(struct iphdr const *iph)
{
  bool __retres;
  
#line 257 
  __retres = (_Bool)(((int)iph->frag_off & 65343) != 0);
  
#line 257 
  return __retres;
}


#line 15  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/dsfield.h"
__inline static __u8 ipv4_get_dsfield(struct iphdr const *iph)
{
  __u8 __retres;
  
#line 17 
  __retres = iph->tos;
  
#line 17 
  return __retres;
}


#line 20  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/include/net/inet_ecn.h"
__inline static int INET_ECN_is_ce(__u8 dsfield)
{
  int __retres;
  
#line 22 
  __retres = ((int)dsfield & 3) == 3;
  
#line 22 
  return __retres;
}


#line 64  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
static int debug_level = 0;

#line 363  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
static int const fifo_map[8U][8U] = {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 1, 1}, {0, 0, 0, 1, 1, 1, 2, 2}, {0, 0, 1, 1, 2, 2, 3, 3}, {0, 0, 1, 1, 2, 2, 3, 4}, {0, 0, 1, 1, 2, 3, 4, 5}, {0, 0, 1, 2, 3, 4, 5, 6}, {0, 1, 2, 3, 4, 5, 6, 7}};

#line 374  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
static u16 const fifo_selector[8U] = {(unsigned short)0U, (unsigned short)1U, (unsigned short)3U, (unsigned short)3U, (unsigned short)7U, (unsigned short)7U, (unsigned short)7U, (unsigned short)7U};

#line 1002  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.h"
__inline static void SPECIAL_REG_WRITE(u64 val, void *addr, int order)
{
  
#line 1004 
  if (order == 2) {
    
#line 1005 
    writel((unsigned int)val,(void volatile *)addr);
    
#line 1006 
    readl((void const volatile *)addr);
    
#line 1007 
    writel((unsigned int)(val >> 32),(void volatile *)(addr + 4U));
    
#line 1008 
    readl((void const volatile *)(addr + 4U));
  }
  else {
    
#line 1010 
    writel((unsigned int)(val >> 32),(void volatile *)(addr + 4U));
    
#line 1011 
    readl((void const volatile *)(addr + 4U));
    
#line 1012 
    writel((unsigned int)val,(void volatile *)addr);
    
#line 1013 
    readl((void const volatile *)addr);
  }
  
#line 1015 
  return;
}


#line 1078 
static int s2io_init_nic(struct pci_dev *pdev, struct pci_device_id const *pre);


#line 1079 
static void s2io_rem_nic(struct pci_dev *pdev);


#line 1080 
static int init_shared_mem(struct s2io_nic *nic);


#line 1081 
static void free_shared_mem(struct s2io_nic *nic);


#line 1082 
static int init_nic(struct s2io_nic *nic);


#line 1083 
static int rx_intr_handler(struct ring_info *ring_data, int budget);


#line 1084 
static void s2io_txpic_intr_handle(struct s2io_nic *sp);


#line 1085 
static void tx_intr_handler(struct fifo_info *fifo_data);


#line 1086 
static void s2io_handle_errors(void *dev_id);


#line 1088 
static int s2io_starter(void);


#line 1089 
static void s2io_closer(void);


#line 1090 
static void s2io_tx_watchdog(struct net_device *dev);


#line 1091 
static void s2io_set_multicast(struct net_device *dev);


#line 1092 
static int rx_osm_handler(struct ring_info *ring_data, struct RxD_t *rxdp);


#line 1093 
static void s2io_link(struct s2io_nic *sp, int link);


#line 1094 
static void s2io_reset(struct s2io_nic *sp);


#line 1095 
static int s2io_poll_msix(struct napi_struct *napi_0, int budget);


#line 1096 
static int s2io_poll_inta(struct napi_struct *napi_0, int budget);


#line 1097 
static void s2io_init_pci(struct s2io_nic *sp);


#line 1098 
static int do_s2io_prog_unicast(struct net_device *dev, u8 *addr);


#line 1099 
static void s2io_alarm_handle(unsigned long data);


#line 1101 
static irqreturn_t s2io_msix_ring_handle(int irq, void *dev_id);


#line 1103 
static irqreturn_t s2io_msix_fifo_handle(int irq, void *dev_id);


#line 1104 
static irqreturn_t s2io_isr(int irq, void *dev_id);


#line 1105 
static int verify_xena_quiescence(struct s2io_nic *sp);


#line 1106 
static struct ethtool_ops const netdev_ethtool_ops;


#line 1107 
static void s2io_set_link(struct work_struct *work);


#line 1108 
static int s2io_set_swapper(struct s2io_nic *sp);


#line 1109 
static void s2io_card_down(struct s2io_nic *sp);


#line 1110 
static int s2io_card_up(struct s2io_nic *sp);


#line 1111 
static int wait_for_cmd_complete(void *addr, u64 busy_bit, int bit_state);


#line 1113 
static int s2io_add_isr(struct s2io_nic *sp);


#line 1114 
static void s2io_rem_isr(struct s2io_nic *sp);


#line 1116 
static void restore_xmsi_data(struct s2io_nic *nic);


#line 1117 
static void do_s2io_store_unicast_mc(struct s2io_nic *sp);


#line 1118 
static void do_s2io_restore_unicast_mc(struct s2io_nic *sp);


#line 1119 
static u64 do_s2io_read_unicast_mc(struct s2io_nic *sp, int offset);


#line 1120 
static int do_s2io_add_mc(struct s2io_nic *sp, u8 *addr);


#line 1121 
static int do_s2io_add_mac(struct s2io_nic *sp, u64 addr, int off);


#line 1122 
static int do_s2io_delete_unicast_mc(struct s2io_nic *sp, u64 addr);


#line 1124 
static int s2io_club_tcp_session(struct ring_info *ring_data, u8 *buffer, u8 **tcp, u32 *tcp_len, struct lro **lro, struct RxD_t *rxdp, struct s2io_nic *sp);


#line 1127 
static void clear_lro_session(struct lro *lro);


#line 1128 
static void queue_rx_frame(struct sk_buff *skb, u16 vlan_tag);


#line 1129 
static void update_L3L4_header(struct s2io_nic *sp, struct lro *lro);


#line 1130 
static void lro_append_pkt(struct s2io_nic *sp, struct lro *lro, struct sk_buff *skb, u32 tcp_len);


#line 1132 
static int rts_ds_steer(struct s2io_nic *nic, u8 ds_codepoint, u8 ring);


#line 1134 
static pci_ers_result_t s2io_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state);


#line 1136 
static pci_ers_result_t s2io_io_slot_reset(struct pci_dev *pdev);


#line 1137 
static void s2io_io_resume(struct pci_dev *pdev);


#line 95  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static char const s2io_driver_name[9U] = {(char)'N', (char)'e', (char)'t', (char)'e', (char)'r', (char)'i', (char)'o', (char)'n', (char)'\000'};

#line 96  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static char const s2io_driver_version[10U] = {(char)'2', (char)'.', (char)'0', (char)'.', (char)'2', (char)'6', (char)'.', (char)'2', (char)'8', (char)'\000'};

#line 98  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int const rxd_size[2U] = {32, 48};

#line 99  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int const rxd_count[2U] = {127, 85};

#line 101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static int RXD_IS_UP2DT(struct RxD_t *rxdp)
{
  int ret;
  
#line 105 
  ret = ((rxdp->Control_1 & 72057594037927936ULL) == 0ULL && rxdp->Control_2 >> 62 != 3ULL) != 0;
  
#line 108 
  return ret;
}


#line 124  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static int is_s2io_card_up(struct s2io_nic const *sp)
{
  int tmp;
  
#line 126 
  tmp = constant_test_bit(1L,& sp->state);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static char const s2io_gstrings[5U][32U] = {{(char)'R', (char)'e', (char)'g', (char)'i', (char)'s', (char)'t', (char)'e', (char)'r', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)'\t', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'E', (char)'e', (char)'p', (char)'r', (char)'o', (char)'m', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)'\t', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'L', (char)'i', (char)'n', (char)'k', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)'\t', (char)'(', (char)'o', (char)'n', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'R', (char)'L', (char)'D', (char)'R', (char)'A', (char)'M', (char)' ', (char)'t', (char)'e', (char)'s', (char)'t', (char)'\t', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}, {(char)'B', (char)'I', (char)'S', (char)'T', (char)' ', (char)'T', (char)'e', (char)'s', (char)'t', (char)'\t', (char)'(', (char)'o', (char)'f', (char)'f', (char)'l', (char)'i', (char)'n', (char)'e', (char)')', (char)'\000'}};

#line 138  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static char const ethtool_xena_stats_keys[94U][32U] = {{(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'m', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'b', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'c', (char)'t', (char)'r', (char)'l', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'u', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'n', (char)'u', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'a', (char)'n', (char)'y', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'l', (char)'e', (char)'s', (char)'s', (char)'_', (char)'f', (char)'b', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'v', (char)'l', (char)'d', (char)'_', (char)'i', (char)'p', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'v', (char)'l', (char)'d', (char)'_', (char)'i', (char)'p', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'i', (char)'p', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'r', (char)'s', (char)'t', (char)'_', (char)'t', (char)'c', (char)'p', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'c', (char)'p', (char)'\000'}, {(char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'u', (char)'d', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'v', (char)'l', (char)'d', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'c', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'v', (char)'l', (char)'d', (char)'_', (char)'m', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'v', (char)'l', (char)'d', (char)'_', (char)'b', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'i', (char)'n', (char)'_', (char)'r', (char)'n', (char)'g', (char)'_', (char)'l', (char)'e', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'o', (char)'u', (char)'t', (char)'_', (char)'r', (char)'n', (char)'g', (char)'_', (char)'l', (char)'e', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'l', (char)'o', (char)'n', (char)'g', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'c', (char)'t', (char)'r', (char)'l', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'u', (char)'n', (char)'s', (char)'u', (char)'p', (char)'_', (char)'c', (char)'t', (char)'r', (char)'l', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'p', (char)'t', (char)'e', (char)'d', (char)'_', (char)'u', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'p', (char)'t', (char)'e', (char)'d', (char)'_', (char)'n', (char)'u', (char)'c', (char)'s', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'e', (char)'d', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'e', (char)'v', (char)'e', (char)'n', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'l', (char)'e', (char)'s', (char)'s', (char)'_', (char)'f', (char)'b', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'u', (char)'s', (char)'i', (char)'z', (char)'e', (char)'d', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'o', (char)'s', (char)'i', (char)'z', (char)'e', (char)'d', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'a', (char)'g', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'6', (char)'4', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'6', (char)'5', (char)'_', (char)'1', (char)'2', (char)'7', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'1', (char)'2', (char)'8', (char)'_', (char)'2', (char)'5', (char)'5', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'2', (char)'5', (char)'6', (char)'_', (char)'5', (char)'1', (char)'1', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'5', (char)'1', (char)'2', (char)'_', (char)'1', (char)'0', (char)'2', (char)'3', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'1', (char)'0', (char)'2', (char)'4', (char)'_', (char)'1', (char)'5', (char)'1', (char)'8', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'i', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'i', (char)'p', (char)'_', (char)'o', (char)'c', (char)'t', (char)'e', (char)'t', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'h', (char)'d', (char)'r', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'i', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'r', (char)'o', (char)'p', (char)'_', (char)'i', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'i', (char)'c', (char)'m', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'c', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'u', (char)'d', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'d', (char)'r', (char)'p', (char)'_', (char)'u', (char)'d', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'x', (char)'g', (char)'m', (char)'i', (char)'i', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'s', (char)'y', (char)'m', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'0', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'1', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'2', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'3', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'4', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'5', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'6', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'_', (char)'q', (char)'7', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'0', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'1', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'2', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'3', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'4', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'5', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'6', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'q', (char)'7', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'a', (char)'u', (char)'s', (char)'e', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'x', (char)'g', (char)'m', (char)'i', (char)'i', (char)'_', (char)'d', (char)'a', (char)'t', (char)'a', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'x', (char)'g', (char)'m', (char)'i', (char)'i', (char)'_', (char)'c', (char)'t', (char)'r', (char)'l', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'a', (char)'c', (char)'c', (char)'e', (char)'p', (char)'t', (char)'e', (char)'d', (char)'_', (char)'i', (char)'p', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'t', (char)'c', (char)'p', (char)'\000'}, {(char)'r', (char)'d', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'n', (char)'e', (char)'w', (char)'_', (char)'r', (char)'d', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'n', (char)'e', (char)'w', (char)'_', (char)'r', (char)'d', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'r', (char)'t', (char)'r', (char)'y', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'d', (char)'_', (char)'r', (char)'t', (char)'r', (char)'y', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'w', (char)'r', (char)'_', (char)'r', (char)'t', (char)'r', (char)'y', (char)'_', (char)'r', (char)'d', (char)'_', (char)'a', (char)'c', (char)'k', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'w', (char)'r', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'n', (char)'e', (char)'w', (char)'_', (char)'w', (char)'r', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'n', (char)'e', (char)'w', (char)'_', (char)'w', (char)'r', (char)'_', (char)'r', (char)'e', (char)'q', (char)'_', (char)'r', (char)'t', (char)'r', (char)'y', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'w', (char)'r', (char)'_', (char)'r', (char)'t', (char)'r', (char)'y', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'w', (char)'r', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'d', (char)'_', (char)'r', (char)'t', (char)'r', (char)'y', (char)'_', (char)'w', (char)'r', (char)'_', (char)'a', (char)'c', (char)'k', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'p', (char)'_', (char)'w', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'d', (char)'_', (char)'r', (char)'d', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'d', (char)'_', (char)'w', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'d', (char)'_', (char)'r', (char)'d', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'d', (char)'_', (char)'w', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'f', (char)'_', (char)'r', (char)'d', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'f', (char)'_', (char)'w', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}};

#line 235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static char const ethtool_enhanced_stats_keys[16U][32U] = {{(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'1', (char)'5', (char)'1', (char)'9', (char)'_', (char)'4', (char)'0', (char)'9', (char)'5', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'4', (char)'0', (char)'9', (char)'6', (char)'_', (char)'8', (char)'1', (char)'9', (char)'1', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'8', (char)'1', (char)'9', (char)'2', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'t', (char)'l', (char)'_', (char)'g', (char)'t', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'o', (char)'s', (char)'i', (char)'z', (char)'e', (char)'d', (char)'_', (char)'a', (char)'l', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'j', (char)'a', (char)'b', (char)'b', (char)'e', (char)'r', (char)'_', (char)'a', (char)'l', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'g', (char)'t', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'a', (char)'l', (char)'t', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'v', (char)'l', (char)'a', (char)'n', (char)'_', (char)'f', (char)'r', (char)'m', (char)'s', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'l', (char)'e', (char)'n', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'f', (char)'c', (char)'s', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'p', (char)'f', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'d', (char)'a', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'r', (char)'e', (char)'d', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'r', (char)'t', (char)'s', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'i', (char)'n', (char)'g', (char)'m', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'d', (char)'i', (char)'s', (char)'c', (char)'a', (char)'r', (char)'d', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'f', (char)'a', (char)'u', (char)'l', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}};

#line 254  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static char const ethtool_driver_stats_keys[72U][32U] = {{(char)'\n', (char)' ', (char)'D', (char)'R', (char)'I', (char)'V', (char)'E', (char)'R', (char)' ', (char)'S', (char)'T', (char)'A', (char)'T', (char)'I', (char)'S', (char)'T', (char)'I', (char)'C', (char)'S', (char)'\000'}, {(char)'s', (char)'i', (char)'n', (char)'g', (char)'l', (char)'e', (char)'_', (char)'b', (char)'i', (char)'t', (char)'_', (char)'e', (char)'c', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'s', (char)'\000'}, {(char)'d', (char)'o', (char)'u', (char)'b', (char)'l', (char)'e', (char)'_', (char)'b', (char)'i', (char)'t', (char)'_', (char)'e', (char)'c', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'s', (char)'\000'}, {(char)'p', (char)'a', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'s', (char)'e', (char)'r', (char)'i', (char)'o', (char)'u', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'s', (char)'o', (char)'f', (char)'t', (char)'_', (char)'r', (char)'e', (char)'s', (char)'e', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'f', (char)'i', (char)'f', (char)'o', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'0', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'1', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'2', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'3', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'4', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'5', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'6', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'i', (char)'n', (char)'g', (char)'_', (char)'7', (char)'_', (char)'f', (char)'u', (char)'l', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'a', (char)'l', (char)'a', (char)'r', (char)'m', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'c', (char)'e', (char)'i', (char)'v', (char)'e', (char)'r', (char)'_', (char)'t', (char)'e', (char)'m', (char)'p', (char)'_', (char)'h', (char)'i', (char)'g', (char)'h', (char)'\000'}, {(char)'a', (char)'l', (char)'a', (char)'r', (char)'m', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'c', (char)'e', (char)'i', (char)'v', (char)'e', (char)'r', (char)'_', (char)'t', (char)'e', (char)'m', (char)'p', (char)'_', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'a', (char)'l', (char)'a', (char)'r', (char)'m', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'b', (char)'i', (char)'a', (char)'s', (char)'_', (char)'c', (char)'u', (char)'r', (char)'r', (char)'e', (char)'n', (char)'t', (char)'_', (char)'h', (char)'i', (char)'g', (char)'h', (char)'\000'}, {(char)'a', (char)'l', (char)'a', (char)'r', (char)'m', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'b', (char)'i', (char)'a', (char)'s', (char)'_', (char)'c', (char)'u', (char)'r', (char)'r', (char)'e', (char)'n', (char)'t', (char)'_', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'a', (char)'l', (char)'a', (char)'r', (char)'m', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'o', (char)'u', (char)'t', (char)'p', (char)'u', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'_', (char)'h', (char)'i', (char)'g', (char)'h', (char)'\000'}, {(char)'a', (char)'l', (char)'a', (char)'r', (char)'m', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'o', (char)'u', (char)'t', (char)'p', (char)'u', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'_', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'w', (char)'a', (char)'r', (char)'n', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'c', (char)'e', (char)'i', (char)'v', (char)'e', (char)'r', (char)'_', (char)'t', (char)'e', (char)'m', (char)'p', (char)'_', (char)'h', (char)'i', (char)'g', (char)'h', (char)'\000'}, {(char)'w', (char)'a', (char)'r', (char)'n', (char)'_', (char)'t', (char)'r', (char)'a', (char)'n', (char)'s', (char)'c', (char)'e', (char)'i', (char)'v', (char)'e', (char)'r', (char)'_', (char)'t', (char)'e', (char)'m', (char)'p', (char)'_', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'w', (char)'a', (char)'r', (char)'n', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'b', (char)'i', (char)'a', (char)'s', (char)'_', (char)'c', (char)'u', (char)'r', (char)'r', (char)'e', (char)'n', (char)'t', (char)'_', (char)'h', (char)'i', (char)'g', (char)'h', (char)'\000'}, {(char)'w', (char)'a', (char)'r', (char)'n', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'b', (char)'i', (char)'a', (char)'s', (char)'_', (char)'c', (char)'u', (char)'r', (char)'r', (char)'e', (char)'n', (char)'t', (char)'_', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'w', (char)'a', (char)'r', (char)'n', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'o', (char)'u', (char)'t', (char)'p', (char)'u', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'_', (char)'h', (char)'i', (char)'g', (char)'h', (char)'\000'}, {(char)'w', (char)'a', (char)'r', (char)'n', (char)'_', (char)'l', (char)'a', (char)'s', (char)'e', (char)'r', (char)'_', (char)'o', (char)'u', (char)'t', (char)'p', (char)'u', (char)'t', (char)'_', (char)'p', (char)'o', (char)'w', (char)'e', (char)'r', (char)'_', (char)'l', (char)'o', (char)'w', (char)'\000'}, {(char)'l', (char)'r', (char)'o', (char)'_', (char)'a', (char)'g', (char)'g', (char)'r', (char)'e', (char)'g', (char)'a', (char)'t', (char)'e', (char)'d', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'\000'}, {(char)'l', (char)'r', (char)'o', (char)'_', (char)'f', (char)'l', (char)'u', (char)'s', (char)'h', (char)'_', (char)'b', (char)'o', (char)'t', (char)'h', (char)'_', (char)'c', (char)'o', (char)'u', (char)'n', (char)'t', (char)'\000'}, {(char)'l', (char)'r', (char)'o', (char)'_', (char)'o', (char)'u', (char)'t', (char)'_', (char)'o', (char)'f', (char)'_', (char)'s', (char)'e', (char)'q', (char)'u', (char)'e', (char)'n', (char)'c', (char)'e', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'\000'}, {(char)'l', (char)'r', (char)'o', (char)'_', (char)'f', (char)'l', (char)'u', (char)'s', (char)'h', (char)'_', (char)'d', (char)'u', (char)'e', (char)'_', (char)'t', (char)'o', (char)'_', (char)'m', (char)'a', (char)'x', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'\000'}, {(char)'l', (char)'r', (char)'o', (char)'_', (char)'a', (char)'v', (char)'g', (char)'_', (char)'a', (char)'g', (char)'g', (char)'r', (char)'_', (char)'p', (char)'k', (char)'t', (char)'s', (char)'\000'}, {(char)'m', (char)'e', (char)'m', (char)'_', (char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'p', (char)'c', (char)'i', (char)'_', (char)'m', (char)'a', (char)'p', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'w', (char)'a', (char)'t', (char)'c', (char)'h', (char)'d', (char)'o', (char)'g', (char)'_', (char)'t', (char)'i', (char)'m', (char)'e', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'m', (char)'e', (char)'m', (char)'_', (char)'a', (char)'l', (char)'l', (char)'o', (char)'c', (char)'a', (char)'t', (char)'e', (char)'d', (char)'\000'}, {(char)'m', (char)'e', (char)'m', (char)'_', (char)'f', (char)'r', (char)'e', (char)'e', (char)'d', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'u', (char)'p', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'d', (char)'o', (char)'w', (char)'n', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'u', (char)'p', (char)'_', (char)'t', (char)'i', (char)'m', (char)'e', (char)'\000'}, {(char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'d', (char)'o', (char)'w', (char)'n', (char)'_', (char)'t', (char)'i', (char)'m', (char)'e', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'b', (char)'u', (char)'f', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'d', (char)'e', (char)'s', (char)'c', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'p', (char)'a', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'l', (char)'i', (char)'n', (char)'k', (char)'_', (char)'l', (char)'o', (char)'s', (char)'s', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'l', (char)'i', (char)'s', (char)'t', (char)'_', (char)'p', (char)'r', (char)'o', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'p', (char)'a', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'p', (char)'a', (char)'r', (char)'i', (char)'t', (char)'y', (char)'_', (char)'a', (char)'b', (char)'o', (char)'r', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'r', (char)'d', (char)'a', (char)'_', (char)'f', (char)'a', (char)'i', (char)'l', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'u', (char)'n', (char)'k', (char)'n', (char)'_', (char)'p', (char)'r', (char)'o', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'f', (char)'c', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'b', (char)'u', (char)'f', (char)'_', (char)'s', (char)'i', (char)'z', (char)'e', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'r', (char)'x', (char)'d', (char)'_', (char)'c', (char)'o', (char)'r', (char)'r', (char)'u', (char)'p', (char)'t', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'x', (char)'_', (char)'t', (char)'c', (char)'o', (char)'d', (char)'e', (char)'_', (char)'u', (char)'n', (char)'k', (char)'n', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'d', (char)'a', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'p', (char)'f', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'p', (char)'c', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'t', (char)'i', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'t', (char)'p', (char)'a', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'s', (char)'m', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'l', (char)'s', (char)'o', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'m', (char)'a', (char)'c', (char)'_', (char)'t', (char)'m', (char)'a', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'m', (char)'a', (char)'c', (char)'_', (char)'r', (char)'m', (char)'a', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'x', (char)'g', (char)'x', (char)'s', (char)'_', (char)'t', (char)'x', (char)'g', (char)'x', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'x', (char)'g', (char)'x', (char)'s', (char)'_', (char)'r', (char)'x', (char)'g', (char)'x', (char)'s', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'p', (char)'r', (char)'c', (char)'_', (char)'p', (char)'c', (char)'i', (char)'x', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'p', (char)'a', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'d', (char)'a', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'r', (char)'t', (char)'i', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}, {(char)'m', (char)'c', (char)'_', (char)'e', (char)'r', (char)'r', (char)'_', (char)'c', (char)'n', (char)'t', (char)'\000'}};

#line 349  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void do_s2io_copy_mac_addr(struct s2io_nic *sp, int offset, u64 mac_addr)
{
  
#line 351 
  sp->def_mac_addr[offset].mac_addr[5] = (unsigned char)mac_addr;
  
#line 352 
  sp->def_mac_addr[offset].mac_addr[4] = (unsigned char)(mac_addr >> 8);
  
#line 353 
  sp->def_mac_addr[offset].mac_addr[3] = (unsigned char)(mac_addr >> 16);
  
#line 354 
  sp->def_mac_addr[offset].mac_addr[2] = (unsigned char)(mac_addr >> 24);
  
#line 355 
  sp->def_mac_addr[offset].mac_addr[1] = (unsigned char)(mac_addr >> 32);
  
#line 356 
  sp->def_mac_addr[offset].mac_addr[0] = (unsigned char)(mac_addr >> 40);
  
#line 357 
  return;
}


#line 365  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static u64 const herc_act_dtx_cfg[17U] = {9223377625520865280ULL, 9223377625520865504ULL, 9223377625520865284ULL, 9223377625520865508ULL, 9223659099588067328ULL, 9223659099588067552ULL, 9223659099588067332ULL, 9223659099588067556ULL, 9228444174410579968ULL, 9228444174410580192ULL, 9228444174410579972ULL, 9228444174410580196ULL, 9223940578621784064ULL, 9223940578621784288ULL, 9223940578621784068ULL, 9223940578621784292ULL, 0ULL};

#line 386  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static u64 const xena_dtx_cfg[13U] = {9223377624607227904ULL, 9223377624607228128ULL, 9223377628251357188ULL, 9223377628251357412ULL, 9223659099583938560ULL, 9223659099583938784ULL, 9223659099585904644ULL, 9223659099585904868ULL, 9223940574560649216ULL, 9223940574560649440ULL, 9223940578621784068ULL, 9223940578621784292ULL, 0ULL};

#line 406  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static u64 const fix_mac[29U] = {};

#line 429  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int tx_fifo_num = 5U;

#line 430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rx_ring_num = 1U;

#line 431  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int multiq = 0U;

#line 432  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rx_ring_mode = 1U;

#line 433  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int use_continuous_tx_intrs = 1U;

#line 434  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rmac_pause_time = 256U;

#line 435  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int mc_pause_threshold_q0q3 = 187U;

#line 436  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int mc_pause_threshold_q4q7 = 187U;

#line 437  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int shared_splits = 0U;

#line 438  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int tmac_util_period = 5U;

#line 439  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rmac_util_period = 5U;

#line 442  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int tx_steering_type = 2U;

#line 444  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rxsync_frequency = 3U;

#line 446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int intr_type = 2U;

#line 452  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int lro_max_pkts = 65535U;

#line 453  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int indicate_max_pkts = 0U;

#line 455  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int napi = 1U;

#line 456  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int ufo = 0U;

#line 457  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int vlan_tag_strip = 2U;

#line 459  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int tx_fifo_len[8U] = {4096U, 512U, 512U, 512U, 512U, 512U, 512U, 512U};

#line 461  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rx_ring_sz[8U] = {30U, 30U, 30U, 30U, 30U, 30U, 30U, 30U};

#line 463  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static unsigned int rts_frm_len[8U] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U};

#line 474  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct pci_device_id const s2io_tbl[5U] = {{.vendor = 6101U, .device = 22321U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 6101U, .device = 22577U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 6101U, .device = 22322U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 6101U, .device = 22578U, .subvendor = 4294967295U, .subdevice = 4294967295U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}, {.vendor = 0U, .device = 0U, .subvendor = 0U, .subdevice = 0U, .class = 0U, .class_mask = 0U, .driver_data = 0UL}};

#line 486  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
struct pci_device_id const __mod_pci__s2io_tbl_device_table[5U];

#line 488  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct pci_error_handlers const s2io_err_handler = {.error_detected = (pci_ers_result_t (*)(struct pci_dev *, enum pci_channel_state ))(& s2io_io_error_detected), .mmio_enabled = (pci_ers_result_t (*)(struct pci_dev *))0, .link_reset = (pci_ers_result_t (*)(struct pci_dev *))0, .slot_reset = & s2io_io_slot_reset, .reset_notify = (void (*)(struct pci_dev *, bool ))0, .resume = & s2io_io_resume};

#line 494  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct pci_driver s2io_driver = {.node = {.next = (struct list_head *)0, .prev = (struct list_head *)0}, .name = "S2IO", .id_table = (struct pci_device_id const *)(& s2io_tbl), .probe = & s2io_init_nic, .remove = & s2io_rem_nic, .suspend = (int (*)(struct pci_dev *, pm_message_t ))0, .suspend_late = (int (*)(struct pci_dev *, pm_message_t ))0, .resume_early = (int (*)(struct pci_dev *))0, .resume = (int (*)(struct pci_dev *))0, .shutdown = (void (*)(struct pci_dev *))0, .sriov_configure = (int (*)(struct pci_dev *, int ))0, .err_handler = & s2io_err_handler, .driver = {.name = (char const *)0, .bus = (struct bus_type *)0, .owner = (struct module *)0, .mod_name = (char const *)0, .suppress_bind_attrs = (_Bool)0, .probe_type = 0, .of_match_table = (struct of_device_id const *)0, .acpi_match_table = (struct acpi_device_id const *)0, .probe = (int (*)(struct device *))0, .remove = (int (*)(struct device *))0, .shutdown = (void (*)(struct device *))0, .suspend = (int (*)(struct device *, pm_message_t ))0, .resume = (int (*)(struct device *))0, .groups = (struct attribute_group const **)0, .pm = (struct dev_pm_ops const *)0, .p = (struct driver_private *)0}, .dynids = {.lock = {.__anonCompField_spinlock_18 = {.rlock = {.raw_lock = {.val = {.counter = 0}}, .magic = 0U, .owner_cpu = 0U, .owner = (void *)0, .dep_map = {.key = (struct lock_class_key *)0, .class_cache = {(struct lock_class *)0, (struct lock_class *)0}, .name = (char const *)0, .cpu = 0, .ip = 0UL}}}}, .list = {.next = (struct list_head *)0, .prev = (struct list_head *)0}}};

#line 506  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static void s2io_stop_all_tx_queue(struct s2io_nic *sp)
{
  
#line 508 
  if ((unsigned int)sp->config.multiq == 0U) {
    int i;
    
#line 511 
    i = 0;
    
#line 511 
    goto ldv_57151;
    ldv_57150: 
#line 512 
    ;
    
#line 512 
    sp->mac_control.fifos[i].queue_state = 1;
    
#line 511 
    i += 1;
    ldv_57151: 
#line 512 
    ;
    
#line 511 
    if (sp->config.tx_fifo_num > (unsigned int)i) 
#line 513 
                                                  goto ldv_57150; else 
                                                                    
#line 516 
                                                                    goto ldv_57152;
    ldv_57152: 
#line 517 
    ;
  }
  else ;
  
#line 514 
  netif_tx_stop_all_queues(sp->dev);
  
#line 515 
  return;
}


#line 517  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static void s2io_stop_tx_queue(struct s2io_nic *sp, int fifo_no)
{
  
#line 519 
  if ((unsigned int)sp->config.multiq == 0U) 
#line 520 
                                             sp->mac_control.fifos[fifo_no].queue_state = 1; else ;
  
#line 523 
  netif_tx_stop_all_queues(sp->dev);
  
#line 524 
  return;
}


#line 526  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static void s2io_start_all_tx_queue(struct s2io_nic *sp)
{
  
#line 528 
  if ((unsigned int)sp->config.multiq == 0U) {
    int i;
    
#line 531 
    i = 0;
    
#line 531 
    goto ldv_57162;
    ldv_57161: 
#line 532 
    ;
    
#line 532 
    sp->mac_control.fifos[i].queue_state = 0;
    
#line 531 
    i += 1;
    ldv_57162: 
#line 532 
    ;
    
#line 531 
    if (sp->config.tx_fifo_num > (unsigned int)i) 
#line 533 
                                                  goto ldv_57161; else 
                                                                    
#line 536 
                                                                    goto ldv_57163;
    ldv_57163: 
#line 537 
    ;
  }
  else ;
  
#line 534 
  netif_tx_start_all_queues(sp->dev);
  
#line 535 
  return;
}


#line 537  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static void s2io_wake_all_tx_queue(struct s2io_nic *sp)
{
  
#line 539 
  if ((unsigned int)sp->config.multiq == 0U) {
    int i;
    
#line 542 
    i = 0;
    
#line 542 
    goto ldv_57169;
    ldv_57168: 
#line 543 
    ;
    
#line 543 
    sp->mac_control.fifos[i].queue_state = 0;
    
#line 542 
    i += 1;
    ldv_57169: 
#line 543 
    ;
    
#line 542 
    if (sp->config.tx_fifo_num > (unsigned int)i) 
#line 544 
                                                  goto ldv_57168; else 
                                                                    
#line 547 
                                                                    goto ldv_57170;
    ldv_57170: 
#line 548 
    ;
  }
  else ;
  
#line 545 
  netif_tx_wake_all_queues(sp->dev);
  
#line 546 
  return;
}


#line 548  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static void s2io_wake_tx_queue(struct fifo_info *fifo, int cnt, u8 multiq_0)
{
  
#line 552 
  if ((unsigned int)multiq_0 != 0U) {
    
#line 553 
    if (cnt != 0) {
      bool tmp;
      
#line 553 
      tmp = __netif_subqueue_stopped((struct net_device const *)fifo->dev,(unsigned short)((int)((unsigned short)fifo->fifo_no)));
      
#line 553 
      if ((int)tmp != 0) 
#line 554 
                         netif_wake_subqueue(fifo->dev,(unsigned short)((int)((unsigned short)fifo->fifo_no))); else ;
    }
    else ;
  }
  else 
    
#line 555 
    if (cnt != 0 && fifo->queue_state == 1) {
      bool tmp_0;
      
#line 556 
      tmp_0 = netif_queue_stopped((struct net_device const *)fifo->dev);
      
#line 556 
      if ((int)tmp_0 != 0) {
        
#line 557 
        fifo->queue_state = 0;
        
#line 558 
        netif_wake_queue(fifo->dev);
      }
      else ;
    }
    else ;
  
#line 560 
  return;
}


#line 571  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int init_shared_mem(struct s2io_nic *nic)
{
  int __retres;
  u32 size;
  void *tmp_v_addr;
  void *tmp_v_addr_next;
  dma_addr_t tmp_p_addr;
  dma_addr_t tmp_p_addr_next;
  int i;
  int j;
  int blk_cnt;
  int lst_size;
  int lst_per_page;
  unsigned long tmp;
  struct buffAdd *ba;
  
#line 576 
  struct RxD_block *pre_rxd_blk = (struct RxD_block *)0;
  
#line 579 
  struct net_device *dev = nic->dev;
  
#line 582 
  struct config_param *config = & nic->config;
  
#line 583 
  struct mac_info *mac_control = & nic->mac_control;
  
#line 584 
  unsigned long long mem_allocated = 0ULL;
  
#line 587 
  size = 0U;
  
#line 588 
  i = 0;
  
#line 588 
  goto ldv_57198;
  ldv_57197: 
#line 589 
  ;
  {
    
#line 589 
    struct tx_fifo_config *tx_cfg = & config->tx_cfg[i];
    
#line 591 
    size = tx_cfg->fifo_len + size;
  }
  
#line 588 
  i += 1;
  ldv_57198: 
#line 589 
  ;
  
#line 588 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 590 
                                             goto ldv_57197; else 
#line 593 
                                                                  goto ldv_57199;
  ldv_57199: 
#line 594 
  ;
  
#line 593 
  if (size > 8192U) {
    
#line 594 
    if (debug_level >= 0) 
#line 594 
                          printk("\001",size,8192); else ;
    
#line 597 
    __retres = -22;
    
#line 597 
    goto return_label;
  }
  else ;
  
#line 600 
  size = 0U;
  
#line 601 
  i = 0;
  
#line 601 
  goto ldv_57202;
  ldv_57201: 
#line 602 
  ;
  {
    
#line 602 
    struct tx_fifo_config *tx_cfg_0 = & config->tx_cfg[i];
    
#line 604 
    size = tx_cfg_0->fifo_len;
    
#line 608 
    if (size <= 1U) {
      
#line 609 
      if (debug_level >= 0) 
#line 609 
                            printk("\001",i,size); else ;
      
#line 612 
      __retres = -22;
      
#line 612 
      goto return_label;
    }
    else ;
  }
  
#line 601 
  i += 1;
  ldv_57202: 
#line 602 
  ;
  
#line 601 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 603 
                                             goto ldv_57201; else 
#line 606 
                                                                  goto ldv_57203;
  ldv_57203: 
#line 607 
  ;
  
#line 616 
  lst_size = (int)(config->max_txds * 32U);
  
#line 617 
  lst_per_page = (int)(4096UL / (unsigned long)lst_size);
  
#line 619 
  i = 0;
  
#line 619 
  goto ldv_57209;
  ldv_57208: 
#line 620 
  ;
  {
    
#line 620 
    struct fifo_info *fifo = & mac_control->fifos[i];
    
#line 621 
    struct tx_fifo_config *tx_cfg_1 = & config->tx_cfg[i];
    
#line 622 
    int fifo_len = (int)tx_cfg_1->fifo_len;
    
#line 623 
    int list_holder_size = (int)((unsigned long)fifo_len * (unsigned long)16U);
    
#line 625 
    fifo->list_info = (struct list_info_hold *)kzalloc((unsigned long)list_holder_size,208U);
    
#line 626 
    if (fifo->list_info == (struct list_info_hold *)0) {
      
#line 627 
      if (debug_level > 1) 
#line 627 
                           printk("\001"); else ;
      
#line 628 
      __retres = -12;
      
#line 628 
      goto return_label;
    }
    else ;
    
#line 630 
    mem_allocated = (unsigned long long)list_holder_size + mem_allocated;
  }
  
#line 619 
  i += 1;
  ldv_57209: 
#line 620 
  ;
  
#line 619 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 621 
                                             goto ldv_57208; else 
#line 624 
                                                                  goto ldv_57210;
  ldv_57210: 
#line 625 
  ;
  
#line 632 
  i = 0;
  
#line 632 
  goto ldv_57225;
  ldv_57224: 
#line 633 
  ;
  {
    
#line 633 
    int page_num = (int)(((config->tx_cfg[i].fifo_len + (unsigned int)lst_per_page) + 4294967295U) / (unsigned int)lst_per_page);
    
#line 635 
    struct fifo_info *fifo_0 = & mac_control->fifos[i];
    
#line 636 
    struct tx_fifo_config *tx_cfg_2 = & config->tx_cfg[i];
    
#line 638 
    fifo_0->tx_curr_put_info.offset = 0U;
    
#line 639 
    fifo_0->tx_curr_put_info.fifo_len = tx_cfg_2->fifo_len + 4294967295U;
    
#line 640 
    fifo_0->tx_curr_get_info.offset = 0U;
    
#line 641 
    fifo_0->tx_curr_get_info.fifo_len = tx_cfg_2->fifo_len + 4294967295U;
    
#line 642 
    fifo_0->fifo_no = i;
    
#line 643 
    fifo_0->nic = nic;
    
#line 644 
    fifo_0->max_txds = 19;
    
#line 645 
    fifo_0->dev = dev;
    
#line 647 
    j = 0;
    
#line 647 
    goto ldv_57222;
    ldv_57221: 
#line 648 
    ;
    {
      dma_addr_t tmp_p;
      void *tmp_v;
      
#line 648 
      int k = 0;
      
#line 651 
      tmp_v = pci_alloc_consistent(nic->pdev,4096UL,& tmp_p);
      
#line 653 
      if (tmp_v == (void *)0) {
        
#line 654 
        if (debug_level > 1) 
#line 654 
                             printk("\001"); else ;
        
#line 656 
        __retres = -12;
        
#line 656 
        goto return_label;
      }
      else ;
      
#line 663 
      if (tmp_p == 0ULL) {
        
#line 664 
        mac_control->zerodma_virt_addr = tmp_v;
        
#line 665 
        if (debug_level > 0) 
#line 665 
                             printk("\001",(char *)(& dev->name),tmp_v); else ;
        
#line 669 
        tmp_v = pci_alloc_consistent(nic->pdev,4096UL,& tmp_p);
        
#line 671 
        if (tmp_v == (void *)0) {
          
#line 672 
          if (debug_level > 1) 
#line 672 
                               printk("\001"); else ;
          
#line 674 
          __retres = -12;
          
#line 674 
          goto return_label;
        }
        else ;
        
#line 676 
        mem_allocated += 4096ULL;
      }
      else ;
      
#line 678 
      goto ldv_57220;
      ldv_57219: 
#line 679 
      ;
      {
        
#line 679 
        int l = j * lst_per_page + k;
        
#line 680 
        if (tx_cfg_2->fifo_len == (unsigned int)l) 
#line 681 
                                                   goto ldv_57218; else ;
        
#line 682 
        (fifo_0->list_info + l)->list_virt_addr = tmp_v + k * lst_size;
        
#line 684 
        (fifo_0->list_info + l)->list_phy_addr = (unsigned long long)(k * lst_size) + tmp_p;
        
#line 686 
        k += 1;
      }
      ldv_57220: 
#line 688 
      ;
      
#line 678 
      if (k < lst_per_page) 
#line 680 
                            goto ldv_57219; else 
#line 683 
                                                 goto ldv_57218;
      ldv_57218: 
#line 684 
      ;
    }
    
#line 647 
    j += 1;
    ldv_57222: 
#line 648 
    ;
    
#line 647 
    if (j < page_num) 
#line 649 
                      goto ldv_57221; else 
#line 652 
                                           goto ldv_57223;
    ldv_57223: 
#line 653 
    ;
  }
  
#line 632 
  i += 1;
  ldv_57225: 
#line 633 
  ;
  
#line 632 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 634 
                                             goto ldv_57224; else 
#line 637 
                                                                  goto ldv_57226;
  ldv_57226: 
#line 638 
  ;
  
#line 691 
  i = 0;
  
#line 691 
  goto ldv_57230;
  ldv_57229: 
#line 692 
  ;
  {
    
#line 692 
    struct fifo_info *fifo_1 = & mac_control->fifos[i];
    
#line 693 
    struct tx_fifo_config *tx_cfg_3 = & config->tx_cfg[i];
    
#line 695 
    size = tx_cfg_3->fifo_len;
    
#line 696 
    fifo_1->ufo_in_band_v = (u64 *)kcalloc((unsigned long)size,8UL,208U);
    
#line 697 
    if (fifo_1->ufo_in_band_v == (u64 *)0ULL) {
      
#line 698 
      __retres = -12;
      
#line 698 
      goto return_label;
    }
    else ;
    
#line 699 
    mem_allocated = (unsigned long long)((unsigned long)size * 8UL) + mem_allocated;
  }
  
#line 691 
  i += 1;
  ldv_57230: 
#line 692 
  ;
  
#line 691 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 693 
                                             goto ldv_57229; else 
#line 696 
                                                                  goto ldv_57231;
  ldv_57231: 
#line 697 
  ;
  
#line 703 
  size = 0U;
  
#line 704 
  i = 0;
  
#line 704 
  goto ldv_57235;
  ldv_57234: 
#line 705 
  ;
  {
    
#line 705 
    struct rx_ring_config *rx_cfg = & config->rx_cfg[i];
    
#line 706 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 708 
    if (rx_cfg->num_rxd % (unsigned int)(rxd_count[nic->rxd_mode] + 1) != 0U) {
      
#line 709 
      if (debug_level >= 0) 
#line 709 
                            printk("\001",(char *)(& dev->name),i); else ;
      
#line 712 
      __retres = -1;
      
#line 712 
      goto return_label;
    }
    else ;
    
#line 714 
    size = rx_cfg->num_rxd + size;
    
#line 715 
    ring->block_count = (int)(rx_cfg->num_rxd / (unsigned int)(rxd_count[nic->rxd_mode] + 1));
    
#line 717 
    ring->pkt_cnt = (int)(rx_cfg->num_rxd - (unsigned int)ring->block_count);
  }
  
#line 704 
  i += 1;
  ldv_57235: 
#line 705 
  ;
  
#line 704 
  if (config->rx_ring_num > (unsigned int)i) 
#line 706 
                                             goto ldv_57234; else 
#line 709 
                                                                  goto ldv_57236;
  ldv_57236: 
#line 710 
  ;
  
#line 719 
  if (nic->rxd_mode == 0) 
#line 720 
                          size *= 32U; else 
#line 722 
                                            size *= 48U;
  
#line 724 
  i = 0;
  
#line 724 
  goto ldv_57252;
  ldv_57251: 
#line 725 
  ;
  {
    
#line 725 
    struct rx_ring_config *rx_cfg_0 = & config->rx_cfg[i];
    
#line 726 
    struct ring_info *ring_0 = & mac_control->rings[i];
    
#line 728 
    ring_0->rx_curr_get_info.block_index = 0U;
    
#line 729 
    ring_0->rx_curr_get_info.offset = 0U;
    
#line 730 
    ring_0->rx_curr_get_info.ring_len = rx_cfg_0->num_rxd + 4294967295U;
    
#line 731 
    ring_0->rx_curr_put_info.block_index = 0U;
    
#line 732 
    ring_0->rx_curr_put_info.offset = 0U;
    
#line 733 
    ring_0->rx_curr_put_info.ring_len = rx_cfg_0->num_rxd + 4294967295U;
    
#line 734 
    ring_0->nic = nic;
    
#line 735 
    ring_0->ring_no = i;
    
#line 737 
    blk_cnt = (int)(rx_cfg_0->num_rxd / (unsigned int)(rxd_count[nic->rxd_mode] + 1));
    
#line 739 
    j = 0;
    
#line 739 
    goto ldv_57245;
    ldv_57244: 
#line 740 
    ;
    {
      struct rx_block_info *rx_blocks;
      int l_0;
      
#line 743 
      rx_blocks = & ring_0->rx_blocks[j];
      
#line 744 
      size = 4096U;
      
#line 745 
      tmp_v_addr = pci_alloc_consistent(nic->pdev,(unsigned long)size,& tmp_p_addr);
      
#line 747 
      if (tmp_v_addr == (void *)0) {
        
#line 754 
        rx_blocks->block_virt_addr = tmp_v_addr;
        
#line 755 
        __retres = -12;
        
#line 755 
        goto return_label;
      }
      else ;
      
#line 757 
      mem_allocated = (unsigned long long)size + mem_allocated;
      
#line 758 
      memset(tmp_v_addr,0,(unsigned long)size);
      
#line 760 
      size = (unsigned int)((unsigned long)rxd_count[nic->rxd_mode]) * 16U;
      
#line 762 
      rx_blocks->block_virt_addr = tmp_v_addr;
      
#line 763 
      rx_blocks->block_dma_addr = tmp_p_addr;
      
#line 764 
      rx_blocks->rxds = (struct rxd_info *)kmalloc((unsigned long)size,208U);
      
#line 765 
      if (rx_blocks->rxds == (struct rxd_info *)0) {
        
#line 766 
        __retres = -12;
        
#line 766 
        goto return_label;
      }
      else ;
      
#line 767 
      mem_allocated = (unsigned long long)size + mem_allocated;
      
#line 768 
      l_0 = 0;
      
#line 768 
      goto ldv_57242;
      ldv_57241: 
#line 769 
      ;
      
#line 769 
      (rx_blocks->rxds + l_0)->virt_addr = rx_blocks->block_virt_addr + rxd_size[nic->rxd_mode] * l_0;
      
#line 772 
      (rx_blocks->rxds + l_0)->dma_addr = rx_blocks->block_dma_addr + (unsigned long long)(rxd_size[nic->rxd_mode] * l_0);
      
#line 768 
      l_0 += 1;
      ldv_57242: 
#line 769 
      ;
      
#line 768 
      if (rxd_count[nic->rxd_mode] > l_0) 
#line 770 
                                          goto ldv_57241; else 
#line 773 
                                                               goto ldv_57243;
      ldv_57243: 
#line 774 
      ;
    }
    
#line 739 
    j += 1;
    ldv_57245: 
#line 740 
    ;
    
#line 739 
    if (j < blk_cnt) 
#line 741 
                     goto ldv_57244; else 
#line 744 
                                          goto ldv_57246;
    ldv_57246: 
#line 745 
    ;
    
#line 778 
    j = 0;
    
#line 778 
    goto ldv_57249;
    ldv_57248: 
#line 779 
    ;
    {
      
#line 779 
      int next = (j + 1) % blk_cnt;
      
#line 780 
      tmp_v_addr = ring_0->rx_blocks[j].block_virt_addr;
      
#line 781 
      tmp_v_addr_next = ring_0->rx_blocks[next].block_virt_addr;
      
#line 782 
      tmp_p_addr = ring_0->rx_blocks[j].block_dma_addr;
      
#line 783 
      tmp_p_addr_next = ring_0->rx_blocks[next].block_dma_addr;
      
#line 785 
      pre_rxd_blk = (struct RxD_block *)tmp_v_addr;
      
#line 786 
      pre_rxd_blk->reserved_2_pNext_RxD_block = (unsigned long long)tmp_v_addr_next;
      
#line 788 
      pre_rxd_blk->pNext_RxD_Blk_physical = tmp_p_addr_next;
    }
    
#line 778 
    j += 1;
    ldv_57249: 
#line 779 
    ;
    
#line 778 
    if (j < blk_cnt) 
#line 780 
                     goto ldv_57248; else 
#line 783 
                                          goto ldv_57250;
    ldv_57250: 
#line 784 
    ;
  }
  
#line 724 
  i += 1;
  ldv_57252: 
#line 725 
  ;
  
#line 724 
  if (config->rx_ring_num > (unsigned int)i) 
#line 726 
                                             goto ldv_57251; else 
#line 729 
                                                                  goto ldv_57253;
  ldv_57253: 
#line 730 
  ;
  
#line 792 
  if (nic->rxd_mode == 1) {
    
#line 797 
    i = 0;
    
#line 797 
    goto ldv_57264;
    ldv_57263: 
#line 798 
    ;
    {
      
#line 798 
      struct rx_ring_config *rx_cfg_1 = & config->rx_cfg[i];
      
#line 799 
      struct ring_info *ring_1 = & mac_control->rings[i];
      
#line 801 
      blk_cnt = (int)(rx_cfg_1->num_rxd / (unsigned int)(rxd_count[nic->rxd_mode] + 1));
      
#line 803 
      size = (unsigned int)((unsigned long)blk_cnt) * 8U;
      
#line 804 
      ring_1->ba = (struct buffAdd **)kmalloc((unsigned long)size,208U);
      
#line 805 
      if (ring_1->ba == (struct buffAdd **)0) {
        
#line 806 
        __retres = -12;
        
#line 806 
        goto return_label;
      }
      else ;
      
#line 807 
      mem_allocated = (unsigned long long)size + mem_allocated;
      
#line 808 
      j = 0;
      
#line 808 
      goto ldv_57261;
      ldv_57260: 
#line 809 
      ;
      {
        
#line 809 
        int k_0 = 0;
        
#line 811 
        size = (unsigned int)((unsigned long)(rxd_count[nic->rxd_mode] + 1)) * 32U;
        
#line 813 
        *(ring_1->ba + j) = (struct buffAdd *)kmalloc((unsigned long)size,208U);
        
#line 814 
        if (*(ring_1->ba + j) == (struct buffAdd *)0) {
          
#line 815 
          __retres = -12;
          
#line 815 
          goto return_label;
        }
        else ;
        
#line 816 
        mem_allocated = (unsigned long long)size + mem_allocated;
        
#line 817 
        goto ldv_57258;
        ldv_57257: 
#line 818 
        ;
        
#line 818 
        ba = *(ring_1->ba + j) + k_0;
        
#line 819 
        size = 167U;
        
#line 820 
        ba->ba_0_org = kmalloc((unsigned long)size,208U);
        
#line 821 
        if (ba->ba_0_org == (void *)0) {
          
#line 822 
          __retres = -12;
          
#line 822 
          goto return_label;
        }
        else ;
        
#line 823 
        mem_allocated = (unsigned long long)size + mem_allocated;
        
#line 824 
        tmp = (unsigned long)ba->ba_0_org;
        
#line 825 
        tmp += 127UL;
        
#line 826 
        tmp &= 18446744073709551488UL;
        
#line 827 
        ba->ba_0 = (void *)tmp;
        
#line 829 
        size = 128U;
        
#line 830 
        ba->ba_1_org = kmalloc((unsigned long)size,208U);
        
#line 831 
        if (ba->ba_1_org == (void *)0) {
          
#line 832 
          __retres = -12;
          
#line 832 
          goto return_label;
        }
        else ;
        
#line 833 
        mem_allocated = (unsigned long long)size + mem_allocated;
        
#line 834 
        tmp = (unsigned long)ba->ba_1_org;
        
#line 835 
        tmp += 127UL;
        
#line 836 
        tmp &= 18446744073709551488UL;
        
#line 837 
        ba->ba_1 = (void *)tmp;
        
#line 838 
        k_0 += 1;
        ldv_57258: 
#line 839 
        ;
        
#line 817 
        if (rxd_count[nic->rxd_mode] != k_0) 
#line 819 
                                             goto ldv_57257; else 
#line 822 
                                                                  goto ldv_57259;
        ldv_57259: 
#line 823 
        ;
      }
      
#line 808 
      j += 1;
      ldv_57261: 
#line 809 
      ;
      
#line 808 
      if (j < blk_cnt) 
#line 810 
                       goto ldv_57260; else 
#line 813 
                                            goto ldv_57262;
      ldv_57262: 
#line 814 
      ;
    }
    
#line 797 
    i += 1;
    ldv_57264: 
#line 798 
    ;
    
#line 797 
    if (config->rx_ring_num > (unsigned int)i) 
#line 799 
                                               goto ldv_57263; else 
#line 802 
                                                                    goto ldv_57265;
    ldv_57265: 
#line 803 
    ;
  }
  else ;
  
#line 845 
  size = 1416U;
  
#line 846 
  mac_control->stats_mem = pci_alloc_consistent(nic->pdev,(unsigned long)size,& mac_control->stats_mem_phy);
  
#line 850 
  if (mac_control->stats_mem == (void *)0) {
    
#line 856 
    __retres = -12;
    
#line 856 
    goto return_label;
  }
  else ;
  
#line 858 
  mem_allocated = (unsigned long long)size + mem_allocated;
  
#line 859 
  mac_control->stats_mem_sz = size;
  
#line 861 
  tmp_v_addr = mac_control->stats_mem;
  
#line 862 
  mac_control->stats_info = (struct stat_block *)tmp_v_addr;
  
#line 863 
  memset(tmp_v_addr,0,(unsigned long)size);
  
#line 864 
  if (debug_level > 0) {
    char const *tmp_5;
    
#line 864 
    ;
    
#line 864 
    tmp_5 = dev_name((struct device const *)(& (nic->pdev)->dev));
    
#line 864 
    printk("\001",tmp_5,tmp_p_addr);
  }
  else ;
  
#line 866 
  (mac_control->stats_info)->sw_stat.mem_allocated += mem_allocated;
  
#line 867 
  __retres = 0;
  return_label: 
#line 867 
                return __retres;
}


#line 877  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void free_shared_mem(struct s2io_nic *nic)
{
  int i;
  int j;
  int blk_cnt;
  int size;
  void *tmp_v_addr;
  dma_addr_t tmp_p_addr;
  int lst_size;
  int lst_per_page;
  struct net_device *dev;
  struct config_param *config;
  struct mac_info *mac_control;
  struct stat_block *stats;
  struct swStat *swstats;
  
#line 884 
  int page_num = 0;
  
#line 890 
  if (nic == (struct s2io_nic *)0) 
#line 891 
                                   goto return_label; else ;
  
#line 893 
  dev = nic->dev;
  
#line 895 
  config = & nic->config;
  
#line 896 
  mac_control = & nic->mac_control;
  
#line 897 
  stats = mac_control->stats_info;
  
#line 898 
  swstats = & stats->sw_stat;
  
#line 900 
  lst_size = (int)(config->max_txds * 32U);
  
#line 901 
  lst_per_page = (int)(4096UL / (unsigned long)lst_size);
  
#line 903 
  i = 0;
  
#line 903 
  goto ldv_57291;
  ldv_57290: 
#line 904 
  ;
  {
    
#line 904 
    struct fifo_info *fifo = & mac_control->fifos[i];
    
#line 905 
    struct tx_fifo_config *tx_cfg = & config->tx_cfg[i];
    
#line 907 
    page_num = (int)(((tx_cfg->fifo_len + (unsigned int)lst_per_page) + 4294967295U) / (unsigned int)lst_per_page);
    
#line 908 
    j = 0;
    
#line 908 
    goto ldv_57289;
    ldv_57288: 
#line 909 
    ;
    {
      struct list_info_hold *fli;
      
#line 909 
      int mem_blks = j * lst_per_page;
      
#line 912 
      if (fifo->list_info == (struct list_info_hold *)0) 
#line 913 
                                                         goto return_label; else ;
      
#line 915 
      fli = fifo->list_info + mem_blks;
      
#line 916 
      if (fli->list_virt_addr == (void *)0) 
#line 917 
                                            goto ldv_57287; else ;
      
#line 918 
      pci_free_consistent(nic->pdev,4096UL,fli->list_virt_addr,fli->list_phy_addr);
      
#line 921 
      swstats->mem_freed += 4096ULL;
    }
    
#line 908 
    j += 1;
    ldv_57289: 
#line 909 
    ;
    
#line 908 
    if (j < page_num) 
#line 910 
                      goto ldv_57288; else 
#line 913 
                                           goto ldv_57287;
    ldv_57287: 
#line 914 
    ;
    
#line 926 
    if (mac_control->zerodma_virt_addr != (void *)0) {
      
#line 927 
      pci_free_consistent(nic->pdev,4096UL,mac_control->zerodma_virt_addr,0ULL);
      
#line 930 
      if (debug_level > 0) 
#line 930 
                           printk("\001",(char *)(& dev->name),mac_control->zerodma_virt_addr); else ;
      
#line 934 
      swstats->mem_freed += 4096ULL;
    }
    else ;
    
#line 936 
    kfree((void const *)fifo->list_info);
    
#line 937 
    swstats->mem_freed += (unsigned long long)((unsigned long)tx_cfg->fifo_len * 16UL);
  }
  
#line 903 
  i += 1;
  ldv_57291: 
#line 904 
  ;
  
#line 903 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 905 
                                             goto ldv_57290; else 
#line 908 
                                                                  goto ldv_57292;
  ldv_57292: 
#line 909 
  ;
  
#line 941 
  size = 4096;
  
#line 942 
  i = 0;
  
#line 942 
  goto ldv_57298;
  ldv_57297: 
#line 943 
  ;
  {
    
#line 943 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 945 
    blk_cnt = ring->block_count;
    
#line 946 
    j = 0;
    
#line 946 
    goto ldv_57296;
    ldv_57295: 
#line 947 
    ;
    
#line 947 
    tmp_v_addr = ring->rx_blocks[j].block_virt_addr;
    
#line 948 
    tmp_p_addr = ring->rx_blocks[j].block_dma_addr;
    
#line 949 
    if (tmp_v_addr == (void *)0) 
#line 950 
                                 goto ldv_57294; else ;
    
#line 951 
    pci_free_consistent(nic->pdev,(unsigned long)size,tmp_v_addr,tmp_p_addr);
    
#line 953 
    swstats->mem_freed += (unsigned long long)size;
    
#line 954 
    kfree((void const *)ring->rx_blocks[j].rxds);
    
#line 955 
    swstats->mem_freed += (unsigned long long)((unsigned long)rxd_count[nic->rxd_mode] * 16UL);
    
#line 946 
    j += 1;
    ldv_57296: 
#line 947 
    ;
    
#line 946 
    if (j < blk_cnt) 
#line 948 
                     goto ldv_57295; else 
#line 951 
                                          goto ldv_57294;
    ldv_57294: 
#line 952 
    ;
  }
  
#line 942 
  i += 1;
  ldv_57298: 
#line 943 
  ;
  
#line 942 
  if (config->rx_ring_num > (unsigned int)i) 
#line 944 
                                             goto ldv_57297; else 
#line 947 
                                                                  goto ldv_57299;
  ldv_57299: 
#line 948 
  ;
  
#line 960 
  if (nic->rxd_mode == 1) {
    
#line 962 
    i = 0;
    
#line 962 
    goto ldv_57312;
    ldv_57311: 
#line 963 
    ;
    {
      
#line 963 
      struct rx_ring_config *rx_cfg = & config->rx_cfg[i];
      
#line 964 
      struct ring_info *ring_0 = & mac_control->rings[i];
      
#line 966 
      blk_cnt = (int)(rx_cfg->num_rxd / (unsigned int)(rxd_count[nic->rxd_mode] + 1));
      
#line 968 
      j = 0;
      
#line 968 
      goto ldv_57309;
      ldv_57308: 
#line 969 
      ;
      {
        
#line 969 
        int k = 0;
        
#line 970 
        if (*(ring_0->ba + j) == (struct buffAdd *)0) 
#line 971 
                                                      goto ldv_57303; else ;
        
#line 972 
        goto ldv_57306;
        ldv_57305: 
#line 973 
        ;
        {
          
#line 973 
          struct buffAdd *ba = *(ring_0->ba + j) + k;
          
#line 974 
          kfree((void const *)ba->ba_0_org);
          
#line 975 
          swstats->mem_freed += 167ULL;
          
#line 977 
          kfree((void const *)ba->ba_1_org);
          
#line 978 
          swstats->mem_freed += 128ULL;
          
#line 980 
          k += 1;
        }
        ldv_57306: 
#line 982 
        ;
        
#line 972 
        if (rxd_count[nic->rxd_mode] != k) 
#line 974 
                                           goto ldv_57305; else 
#line 977 
                                                                goto ldv_57307;
        ldv_57307: 
#line 978 
        ;
        
#line 982 
        kfree((void const *)*(ring_0->ba + j));
        
#line 983 
        swstats->mem_freed += (unsigned long long)((unsigned long)(rxd_count[nic->rxd_mode] + 1) * 32UL);
      }
      ldv_57303: 
#line 985 
      ;
      
#line 968 
      j += 1;
      ldv_57309: 
#line 969 
      ;
      
#line 968 
      if (j < blk_cnt) 
#line 970 
                       goto ldv_57308; else 
#line 973 
                                            goto ldv_57310;
      ldv_57310: 
#line 974 
      ;
      
#line 986 
      kfree((void const *)ring_0->ba);
      
#line 987 
      swstats->mem_freed += (unsigned long long)((unsigned long)blk_cnt * 8UL);
    }
    
#line 962 
    i += 1;
    ldv_57312: 
#line 963 
    ;
    
#line 962 
    if (config->rx_ring_num > (unsigned int)i) 
#line 964 
                                               goto ldv_57311; else 
#line 967 
                                                                    goto ldv_57313;
    ldv_57313: 
#line 968 
    ;
  }
  else ;
  
#line 992 
  i = 0;
  
#line 992 
  goto ldv_57317;
  ldv_57316: 
#line 993 
  ;
  {
    
#line 993 
    struct fifo_info *fifo_0 = & mac_control->fifos[i];
    
#line 994 
    struct tx_fifo_config *tx_cfg_0 = & config->tx_cfg[i];
    
#line 996 
    if (fifo_0->ufo_in_band_v != (u64 *)0ULL) {
      
#line 997 
      swstats->mem_freed += (unsigned long long)((unsigned long)tx_cfg_0->fifo_len * 8UL);
      
#line 999 
      kfree((void const *)fifo_0->ufo_in_band_v);
    }
    else ;
  }
  
#line 992 
  i += 1;
  ldv_57317: 
#line 993 
  ;
  
#line 992 
  if (nic->config.tx_fifo_num > (unsigned int)i) 
#line 994 
                                                 goto ldv_57316; else 
                                                                   
#line 997 
                                                                   goto ldv_57318;
  ldv_57318: 
#line 998 
  ;
  
#line 1003 
  if (mac_control->stats_mem != (void *)0) {
    
#line 1004 
    swstats->mem_freed += (unsigned long long)mac_control->stats_mem_sz;
    
#line 1005 
    pci_free_consistent(nic->pdev,(unsigned long)mac_control->stats_mem_sz,mac_control->stats_mem,mac_control->stats_mem_phy);
  }
  else ;
  return_label: 
#line 1010 
                return;
}


#line 1016  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_verify_pci_mode(struct s2io_nic *nic)
{
  int __retres;
  int mode;
  
#line 1018 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 1019 
  register u64 val64 = 0ULL;
  
#line 1022 
  val64 = (u64)readq((void const volatile *)(& bar0->pci_mode));
  
#line 1023 
  mode = (int)((unsigned char)(val64 >> 60));
  
#line 1025 
  if ((val64 & 18014398509481984ULL) != 0ULL) {
    
#line 1026 
    __retres = -1;
    
#line 1026 
    goto return_label;
  }
  else ;
  
#line 1027 
  __retres = mode;
  return_label: 
#line 1027 
                return __retres;
}


#line 1032  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_on_nec_bridge(struct pci_dev *s2io_pdev)
{
  int __retres;
  
#line 1034 
  struct pci_dev *tdev = (struct pci_dev *)0;
  
#line 1035 
  goto ldv_57330;
  ldv_57329: 
#line 1036 
  ;
  
#line 1036 
  if ((unsigned int)tdev->vendor == 4147U && (unsigned int)tdev->device == 293U) {
    
#line 1037 
    if (tdev->bus == (s2io_pdev->bus)->parent) {
      
#line 1038 
      pci_dev_put(tdev);
      
#line 1039 
      __retres = 1;
      
#line 1039 
      goto return_label;
    }
    else ;
  }
  else ;
  ldv_57330: 
#line 1041 
  ;
  
#line 1035 
  tdev = pci_get_device(4294967295U,4294967295U,tdev);
  
#line 1035 
  if (tdev != (struct pci_dev *)0) 
#line 1037 
                                   goto ldv_57329; else 
#line 1040 
                                                        goto ldv_57331;
  ldv_57331: 
#line 1041 
  ;
  
#line 1043 
  __retres = 0;
  return_label: 
#line 1043 
                return __retres;
}


#line 1046  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int bus_speed[8U] = {33, 133, 133, 200, 266, 133, 200, 266};

#line 1050  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_print_pci_mode(struct s2io_nic *nic)
{
  int __retres;
  int mode;
  char const *pcimode;
  int tmp_0;
  
#line 1052 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 1053 
  register u64 val64 = 0ULL;
  
#line 1055 
  struct config_param *config = & nic->config;
  
#line 1058 
  val64 = (u64)readq((void const volatile *)(& bar0->pci_mode));
  
#line 1059 
  mode = (int)((unsigned char)(val64 >> 60));
  
#line 1061 
  if ((val64 & 18014398509481984ULL) != 0ULL) {
    
#line 1062 
    __retres = -1;
    
#line 1062 
    goto return_label;
  }
  else ;
  
#line 1064 
  config->bus_speed = (unsigned short)bus_speed[mode];
  
#line 1066 
  tmp_0 = s2io_on_nec_bridge(nic->pdev);
  
#line 1066 
  if (tmp_0 != 0) {
    
#line 1067 
    if (debug_level >= 0) 
#line 1067 
                          printk("\001",(char *)(& (nic->dev)->name)); else ;
    
#line 1069 
    __retres = mode;
    
#line 1069 
    goto return_label;
  }
  else ;
  
#line 1072 
  switch (mode) {
    case 0: 
#line 1073 
    ;
    
#line 1074 
    pcimode = "33MHz PCI bus";
    
#line 1075 
    goto ldv_57342;
    case 1: 
#line 1076 
    ;
    
#line 1077 
    pcimode = "66MHz PCI bus";
    
#line 1078 
    goto ldv_57342;
    case 2: 
#line 1079 
    ;
    
#line 1080 
    pcimode = "66MHz PCIX(M1) bus";
    
#line 1081 
    goto ldv_57342;
    case 3: 
#line 1082 
    ;
    
#line 1083 
    pcimode = "100MHz PCIX(M1) bus";
    
#line 1084 
    goto ldv_57342;
    case 4: 
#line 1085 
    ;
    
#line 1086 
    pcimode = "133MHz PCIX(M1) bus";
    
#line 1087 
    goto ldv_57342;
    case 5: 
#line 1088 
    ;
    
#line 1089 
    pcimode = "133MHz PCIX(M2) bus";
    
#line 1090 
    goto ldv_57342;
    case 6: 
#line 1091 
    ;
    
#line 1092 
    pcimode = "200MHz PCIX(M2) bus";
    
#line 1093 
    goto ldv_57342;
    case 7: 
#line 1094 
    ;
    
#line 1095 
    pcimode = "266MHz PCIX(M2) bus";
    
#line 1096 
    goto ldv_57342;
    default: 
#line 1097 
    ;
    
#line 1098 
    pcimode = "unsupported bus!";
    
#line 1099 
    mode = -1;
  }
  ldv_57342: 
#line 1102 
  ;
  
#line 1102 
  if (debug_level >= 0) {
    int tmp_1;
    
#line 1102 
    ;
    
#line 1102 
    if ((val64 & 36028797018963968ULL) != 0ULL) 
#line 1102 
                                                tmp_1 = 32; else 
#line 1102 
                                                                 tmp_1 = 64;
    
#line 1102 
    ;
    
#line 1102 
    printk("\001",(char *)(& (nic->dev)->name),tmp_1,pcimode);
  }
  else ;
  
#line 1105 
  __retres = mode;
  return_label: 
#line 1105 
                return __retres;
}


#line 1118  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int init_tti(struct s2io_nic *nic, int link)
{
  int __retres;
  int i;
  int tmp;
  
#line 1120 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 1121 
  register u64 val64 = 0ULL;
  
#line 1123 
  struct config_param *config = & nic->config;
  
#line 1125 
  i = 0;
  
#line 1125 
  goto ldv_57361;
  ldv_57360: 
#line 1126 
  ;
  
#line 1131 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 1132 
    int count = ((int)nic->config.bus_speed * 125) / 2;
    
#line 1133 
    val64 = (unsigned long long)count << 32;
  }
  else 
#line 1135 
       val64 = 35699768164352ULL;
  
#line 1137 
  val64 |= 34213936ULL;
  
#line 1141 
  if (i == 0) {
    
#line 1142 
    if (use_continuous_tx_intrs != 0U && link == 2) 
#line 1143 
                                                    val64 |= 16777216ULL; else ;
  }
  else ;
  
#line 1144 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tti_data1_mem));
  
#line 1146 
  if ((unsigned int)nic->config.intr_type == 2U) 
#line 1147 
                                                 val64 = 4504699172553472ULL;
  else 
    
#line 1152 
    if ((((unsigned int)nic->config.tx_steering_type == 2U && config->tx_fifo_num > 1U) && (int)nic->udp_fifo_idx <= i) && (int)nic->udp_fifo_idx + (int)nic->total_udp_fifos > i) 
      
#line 1158 
      val64 = 22518547909443872ULL; else 
#line 1163 
                                         val64 = 4503737070518400ULL;
  
#line 1169 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tti_data2_mem));
  
#line 1171 
  val64 = ((unsigned long long)i << 32) | 72339069014638592ULL;
  
#line 1174 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tti_command_mem));
  
#line 1176 
  tmp = wait_for_cmd_complete((void *)(& bar0->tti_command_mem),281474976710656ULL,1);
  
#line 1176 
  if (tmp != 0) {
    
#line 1179 
    __retres = -1;
    
#line 1179 
    goto return_label;
  }
  else ;
  
#line 1125 
  i += 1;
  ldv_57361: 
#line 1126 
  ;
  
#line 1125 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 1127 
                                             goto ldv_57360; else 
#line 1130 
                                                                  goto ldv_57362;
  ldv_57362: 
#line 1131 
  ;
  
#line 1182 
  __retres = 0;
  return_label: 
#line 1182 
                return __retres;
}


#line 1194  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int init_nic(struct s2io_nic *nic)
{
  int __retres;
  void *add;
  u32 time;
  int i;
  int j;
  unsigned long long mem_share;
  int mem_size;
  int tmp;
  int tmp_11;
  int tmp_12;
  char *tmp_20;
  
#line 1196 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 1197 
  struct net_device *dev = nic->dev;
  
#line 1198 
  register u64 val64 = 0ULL;
  
#line 1202 
  int dtx_cnt = 0;
  
#line 1205 
  struct config_param *config = & nic->config;
  
#line 1206 
  struct mac_info *mac_control = & nic->mac_control;
  
#line 1209 
  tmp = s2io_set_swapper(nic);
  
#line 1209 
  if (tmp != 0) {
    
#line 1210 
    if (debug_level >= 0) 
#line 1210 
                          printk("\001"); else ;
    
#line 1211 
    __retres = -5;
    
#line 1211 
    goto return_label;
  }
  else ;
  
#line 1217 
  if (((int)nic->device_type & 2) != 0) {
    
#line 1218 
    val64 = 708669603840ULL;
    
#line 1219 
    writeq((unsigned long)val64,(void volatile *)(& bar0->sw_reset));
    
#line 1220 
    msleep(500U);
    
#line 1221 
    val64 = (u64)readq((void const volatile *)(& bar0->sw_reset));
  }
  else ;
  
#line 1225 
  val64 = 0ULL;
  
#line 1226 
  writeq((unsigned long)val64,(void volatile *)(& bar0->sw_reset));
  
#line 1227 
  msleep(500U);
  
#line 1228 
  val64 = (u64)readq((void const volatile *)(& bar0->sw_reset));
  
#line 1233 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 1234 
    i = 0;
    
#line 1234 
    goto ldv_57380;
    ldv_57379: 
#line 1235 
    ;
    
#line 1235 
    val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
    
#line 1236 
    if ((val64 & 137438953472ULL) == 0ULL) 
#line 1237 
                                           goto ldv_57378; else ;
    
#line 1238 
    msleep(10U);
    
#line 1234 
    i += 1;
    ldv_57380: 
#line 1235 
    ;
    
#line 1234 
    if (i <= 49) 
#line 1236 
                 goto ldv_57379; else 
#line 1239 
                                      goto ldv_57378;
    ldv_57378: 
#line 1240 
    ;
    
#line 1240 
    if (i == 50) {
      
#line 1241 
      __retres = -19;
      
#line 1241 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 1245 
  add = (void *)(& bar0->mac_cfg);
  
#line 1246 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
  
#line 1247 
  val64 |= 18014398509481984ULL;
  
#line 1248 
  writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
  
#line 1249 
  writel((unsigned int)val64,(void volatile *)add);
  
#line 1250 
  writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
  
#line 1251 
  writel((unsigned int)(val64 >> 32),(void volatile *)(add + 4U));
  
#line 1254 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_int_mask));
  
#line 1255 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_int_mask));
  
#line 1256 
  val64 = (u64)readq((void const volatile *)(& bar0->xgxs_int_mask));
  
#line 1259 
  val64 = (unsigned long long)dev->mtu;
  
#line 1260 
  writeq((unsigned long)(val64 << 48),(void volatile *)(& bar0->rmac_max_pyld_len));
  
#line 1262 
  if (((int)nic->device_type & 2) != 0) {
    
#line 1263 
    goto ldv_57382;
    ldv_57381: 
#line 1264 
    ;
    
#line 1264 
    SPECIAL_REG_WRITE(herc_act_dtx_cfg[dtx_cnt],(void *)(& bar0->dtx_control),1);
    
#line 1266 
    if ((dtx_cnt & 1) != 0) 
#line 1267 
                            msleep(1U); else ;
    
#line 1268 
    dtx_cnt += 1;
    ldv_57382: 
#line 1269 
    ;
    
#line 1263 
    if (herc_act_dtx_cfg[dtx_cnt] != 0ULL) 
#line 1265 
                                           goto ldv_57381; else 
#line 1268 
                                                                goto ldv_57383;
    ldv_57383: 
#line 1269 
    ;
  }
  else {
    
#line 1271 
    goto ldv_57385;
    ldv_57384: 
#line 1272 
    ;
    
#line 1272 
    SPECIAL_REG_WRITE(xena_dtx_cfg[dtx_cnt],(void *)(& bar0->dtx_control),1);
    
#line 1274 
    val64 = (u64)readq((void const volatile *)(& bar0->dtx_control));
    
#line 1275 
    dtx_cnt += 1;
    ldv_57385: 
#line 1276 
    ;
    
#line 1271 
    if (xena_dtx_cfg[dtx_cnt] != 0ULL) 
#line 1273 
                                       goto ldv_57384; else 
#line 1276 
                                                            goto ldv_57386;
    ldv_57386: 
#line 1277 
    ;
  }
  
#line 1280 
  val64 = 0ULL;
  
#line 1281 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_0));
  
#line 1282 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_1));
  
#line 1283 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_2));
  
#line 1284 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_3));
  
#line 1286 
  i = 0;
  
#line 1286 
  j = 0;
  
#line 1286 
  goto ldv_57395;
  ldv_57394: 
#line 1287 
  ;
  {
    
#line 1287 
    struct tx_fifo_config *tx_cfg = & config->tx_cfg[i];
    
#line 1289 
    val64 = ((((unsigned long long)tx_cfg->fifo_len + 18446744073709551615ULL) << (j * -32 + 32)) | ((unsigned long long)tx_cfg->fifo_priority << (j * -32 + 56))) | val64;
    
#line 1292 
    if (config->tx_fifo_num + 4294967295U == (unsigned int)i) {
      
#line 1293 
      if (((unsigned int)i & 1U) == 0U) 
#line 1294 
                                        i += 1; else ;
    }
    else ;
    
#line 1297 
    switch (i) {
      case 1: 
#line 1298 
      ;
      
#line 1299 
      writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_0));
      
#line 1300 
      val64 = 0ULL;
      
#line 1301 
      j = 0;
      
#line 1302 
      goto ldv_57389;
      case 3: 
#line 1303 
      ;
      
#line 1304 
      writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_1));
      
#line 1305 
      val64 = 0ULL;
      
#line 1306 
      j = 0;
      
#line 1307 
      goto ldv_57389;
      case 5: 
#line 1308 
      ;
      
#line 1309 
      writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_2));
      
#line 1310 
      val64 = 0ULL;
      
#line 1311 
      j = 0;
      
#line 1312 
      goto ldv_57389;
      case 7: 
#line 1313 
      ;
      
#line 1314 
      writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_3));
      
#line 1315 
      val64 = 0ULL;
      
#line 1316 
      j = 0;
      
#line 1317 
      goto ldv_57389;
      default: 
#line 1318 
      ;
      
#line 1319 
      j += 1;
      
#line 1320 
      goto ldv_57389;
    }
    ldv_57389: 
#line 1322 
    ;
  }
  
#line 1286 
  i += 1;
  ldv_57395: 
#line 1287 
  ;
  
#line 1286 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 1288 
                                             goto ldv_57394; else 
#line 1291 
                                                                  goto ldv_57396;
  ldv_57396: 
#line 1292 
  ;
  
#line 1328 
  if ((unsigned int)nic->device_type == 1U && (unsigned int)(nic->pdev)->revision <= 3U) 
    
#line 1329 
    writeq(1080863910568919040UL,(void volatile *)(& bar0->pcc_enable)); else ;
  
#line 1331 
  val64 = (u64)readq((void const volatile *)(& bar0->tx_fifo_partition_0));
  
#line 1332 
  if (debug_level > 0) 
#line 1332 
                       printk("\001",& bar0->tx_fifo_partition_0,val64); else ;
  
#line 1339 
  val64 = (u64)readq((void const volatile *)(& bar0->tx_pa_cfg));
  
#line 1340 
  val64 |= 8214565720323784704ULL;
  
#line 1344 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_pa_cfg));
  
#line 1347 
  val64 = 0ULL;
  
#line 1348 
  i = 0;
  
#line 1348 
  goto ldv_57399;
  ldv_57398: 
#line 1349 
  ;
  {
    
#line 1349 
    struct rx_ring_config *rx_cfg = & config->rx_cfg[i];
    
#line 1351 
    val64 = ((unsigned long long)rx_cfg->ring_priority << (i + -7) * -8) | val64;
  }
  
#line 1348 
  i += 1;
  ldv_57399: 
#line 1349 
  ;
  
#line 1348 
  if (config->rx_ring_num > (unsigned int)i) 
#line 1350 
                                             goto ldv_57398; else 
#line 1353 
                                                                  goto ldv_57400;
  ldv_57400: 
#line 1354 
  ;
  
#line 1353 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rx_queue_priority));
  
#line 1359 
  val64 = 0ULL;
  
#line 1360 
  if (((int)nic->device_type & 2) != 0) 
#line 1361 
                                        mem_size = 32; else 
#line 1363 
                                                            mem_size = 64;
  
#line 1365 
  i = 0;
  
#line 1365 
  goto ldv_57411;
  ldv_57410: 
#line 1366 
  ;
  
#line 1366 
  switch (i) {
    case 0: 
#line 1367 
    ;
    
#line 1368 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num + (unsigned int)mem_size % config->rx_ring_num);
    
#line 1370 
    val64 = (mem_share << 56) | val64;
    
#line 1371 
    goto ldv_57402;
    case 1: 
#line 1372 
    ;
    
#line 1373 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1374 
    val64 = (mem_share << 48) | val64;
    
#line 1375 
    goto ldv_57402;
    case 2: 
#line 1376 
    ;
    
#line 1377 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1378 
    val64 = (mem_share << 40) | val64;
    
#line 1379 
    goto ldv_57402;
    case 3: 
#line 1380 
    ;
    
#line 1381 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1382 
    val64 = (mem_share << 32) | val64;
    
#line 1383 
    goto ldv_57402;
    case 4: 
#line 1384 
    ;
    
#line 1385 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1386 
    val64 = (mem_share << 24) | val64;
    
#line 1387 
    goto ldv_57402;
    case 5: 
#line 1388 
    ;
    
#line 1389 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1390 
    val64 = (mem_share << 16) | val64;
    
#line 1391 
    goto ldv_57402;
    case 6: 
#line 1392 
    ;
    
#line 1393 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1394 
    val64 = (mem_share << 8) | val64;
    
#line 1395 
    goto ldv_57402;
    case 7: 
#line 1396 
    ;
    
#line 1397 
    mem_share = (unsigned long long)((unsigned int)mem_size / config->rx_ring_num);
    
#line 1398 
    val64 |= mem_share;
    
#line 1399 
    goto ldv_57402;
  }
  ldv_57402: 
#line 1401 
  ;
  
#line 1365 
  i += 1;
  ldv_57411: 
#line 1366 
  ;
  
#line 1365 
  if (config->rx_ring_num > (unsigned int)i) 
#line 1367 
                                             goto ldv_57410; else 
#line 1370 
                                                                  goto ldv_57412;
  ldv_57412: 
#line 1371 
  ;
  
#line 1402 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rx_queue_cfg));
  
#line 1408 
  switch (config->tx_fifo_num) {
    case (u32)1: 
#line 1409 
    ;
    
#line 1410 
    val64 = 0ULL;
    
#line 1411 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1412 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1413 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1414 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1415 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1416 
    goto ldv_57414;
    case (u32)2: 
#line 1417 
    ;
    
#line 1418 
    val64 = 281479271743489ULL;
    
#line 1419 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1420 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1421 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1422 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1423 
    val64 = 281479271677952ULL;
    
#line 1424 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1425 
    goto ldv_57414;
    case (u32)3: 
#line 1426 
    ;
    
#line 1427 
    val64 = 283674016874497ULL;
    
#line 1428 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1429 
    val64 = 144116296177484288ULL;
    
#line 1430 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1431 
    val64 = 72620548319871234ULL;
    
#line 1432 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1433 
    val64 = 283674016874497ULL;
    
#line 1434 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1435 
    val64 = 144116296177418240ULL;
    
#line 1436 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1437 
    goto ldv_57414;
    case (u32)4: 
#line 1438 
    ;
    
#line 1439 
    val64 = 283686884934147ULL;
    
#line 1440 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1441 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1442 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1443 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1444 
    val64 = 283686884868096ULL;
    
#line 1445 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1446 
    goto ldv_57414;
    case (u32)5: 
#line 1447 
    ;
    
#line 1448 
    val64 = 283686951977218ULL;
    
#line 1449 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1450 
    val64 = 217298686349345792ULL;
    
#line 1451 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1452 
    val64 = 72623859706167811ULL;
    
#line 1453 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1454 
    val64 = 288231484303867905ULL;
    
#line 1455 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1456 
    val64 = 144964011052498944ULL;
    
#line 1457 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1458 
    goto ldv_57414;
    case (u32)6: 
#line 1459 
    ;
    
#line 1460 
    val64 = 283686952304641ULL;
    
#line 1461 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1462 
    val64 = 144964032527401475ULL;
    
#line 1463 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1464 
    val64 = 289637755363984389ULL;
    
#line 1465 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1466 
    val64 = 283686952304641ULL;
    
#line 1467 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1468 
    val64 = 144964032527335424ULL;
    
#line 1469 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1470 
    goto ldv_57414;
    case (u32)7: 
#line 1471 
    ;
    
#line 1472 
    val64 = 283686952306176ULL;
    
#line 1473 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1474 
    val64 = 72623859790381057ULL;
    
#line 1475 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1476 
    val64 = 144964032627998978ULL;
    
#line 1477 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1478 
    val64 = 217304205348635139ULL;
    
#line 1479 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1480 
    val64 = 289644348105031680ULL;
    
#line 1481 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1482 
    goto ldv_57414;
    case (u32)8: 
#line 1483 
    ;
    
#line 1484 
    val64 = 283686952306183ULL;
    
#line 1485 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_0));
    
#line 1486 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_1));
    
#line 1487 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_2));
    
#line 1488 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_3));
    
#line 1489 
    val64 = 283686884868096ULL;
    
#line 1490 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tx_w_round_robin_4));
    
#line 1491 
    goto ldv_57414;
  }
  ldv_57414: 
#line 1495 
  ;
  
#line 1495 
  val64 = (u64)readq((void const volatile *)(& bar0->tx_fifo_partition_0));
  
#line 1496 
  val64 |= 9223372036854775808ULL;
  
#line 1497 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_fifo_partition_0));
  
#line 1503 
  switch (config->rx_ring_num) {
    case (u32)1: 
#line 1504 
    ;
    
#line 1505 
    val64 = 0ULL;
    
#line 1506 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1507 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1508 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1509 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1510 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1512 
    val64 = 9259542123273814144ULL;
    
#line 1513 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1514 
    goto ldv_57423;
    case (u32)2: 
#line 1515 
    ;
    
#line 1516 
    val64 = 281479271743489ULL;
    
#line 1517 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1518 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1519 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1520 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1521 
    val64 = 281479271677952ULL;
    
#line 1522 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1524 
    val64 = 9259542122195861568ULL;
    
#line 1525 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1526 
    goto ldv_57423;
    case (u32)3: 
#line 1527 
    ;
    
#line 1528 
    val64 = 283674016874497ULL;
    
#line 1529 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1530 
    val64 = 144116296177484288ULL;
    
#line 1531 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1532 
    val64 = 72620548319871234ULL;
    
#line 1533 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1534 
    val64 = 283674016874497ULL;
    
#line 1535 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1536 
    val64 = 144116296177418240ULL;
    
#line 1537 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1539 
    val64 = 9259541847317946400ULL;
    
#line 1540 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1541 
    goto ldv_57423;
    case (u32)4: 
#line 1542 
    ;
    
#line 1543 
    val64 = 283686884934147ULL;
    
#line 1544 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1545 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1546 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1547 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1548 
    val64 = 283686884868096ULL;
    
#line 1549 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1551 
    val64 = 9259471478034796560ULL;
    
#line 1552 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1553 
    goto ldv_57423;
    case (u32)5: 
#line 1554 
    ;
    
#line 1555 
    val64 = 283686951977218ULL;
    
#line 1556 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1557 
    val64 = 217298686349345792ULL;
    
#line 1558 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1559 
    val64 = 72623859706167811ULL;
    
#line 1560 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1561 
    val64 = 288231484303867905ULL;
    
#line 1562 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1563 
    val64 = 144964011052498944ULL;
    
#line 1564 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1566 
    val64 = 9259471478034796552ULL;
    
#line 1567 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1568 
    goto ldv_57423;
    case (u32)6: 
#line 1569 
    ;
    
#line 1570 
    val64 = 283686952304641ULL;
    
#line 1571 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1572 
    val64 = 144964032527401475ULL;
    
#line 1573 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1574 
    val64 = 289637755363984389ULL;
    
#line 1575 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1576 
    val64 = 283686952304641ULL;
    
#line 1577 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1578 
    val64 = 144964032527335424ULL;
    
#line 1579 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1581 
    val64 = 9259471478033745924ULL;
    
#line 1582 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1583 
    goto ldv_57423;
    case (u32)7: 
#line 1584 
    ;
    
#line 1585 
    val64 = 283686952306176ULL;
    
#line 1586 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1587 
    val64 = 72623859790381057ULL;
    
#line 1588 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1589 
    val64 = 144964032627998978ULL;
    
#line 1590 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1591 
    val64 = 217304205348635139ULL;
    
#line 1592 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1593 
    val64 = 289644348105031680ULL;
    
#line 1594 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1596 
    val64 = 9259471340325831682ULL;
    
#line 1597 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1598 
    goto ldv_57423;
    case (u32)8: 
#line 1599 
    ;
    
#line 1600 
    val64 = 283686952306183ULL;
    
#line 1601 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_0));
    
#line 1602 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_1));
    
#line 1603 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_2));
    
#line 1604 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_3));
    
#line 1605 
    val64 = 283686884868096ULL;
    
#line 1606 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_w_round_robin_4));
    
#line 1608 
    val64 = 9241421688590303745ULL;
    
#line 1609 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rts_qos_steering));
    
#line 1610 
    goto ldv_57423;
  }
  ldv_57423: 
#line 1614 
  ;
  
#line 1614 
  val64 = 0ULL;
  
#line 1615 
  i = 0;
  
#line 1615 
  goto ldv_57432;
  ldv_57431: 
#line 1616 
  ;
  
#line 1616 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rts_frm_len_n[i]));
  
#line 1615 
  i += 1;
  ldv_57432: 
#line 1616 
  ;
  
#line 1615 
  if (i <= 7) 
#line 1617 
              goto ldv_57431; else 
#line 1620 
                                   goto ldv_57433;
  ldv_57433: 
#line 1621 
  ;
  
#line 1619 
  val64 = ((unsigned long long)dev->mtu + 22ULL) << 48;
  
#line 1620 
  i = 0;
  
#line 1620 
  goto ldv_57435;
  ldv_57434: 
#line 1621 
  ;
  
#line 1621 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rts_frm_len_n[i]));
  
#line 1620 
  i += 1;
  ldv_57435: 
#line 1621 
  ;
  
#line 1620 
  if (config->rx_ring_num > (unsigned int)i) 
#line 1622 
                                             goto ldv_57434; else 
#line 1625 
                                                                  goto ldv_57436;
  ldv_57436: 
#line 1626 
  ;
  
#line 1626 
  i = 0;
  
#line 1626 
  goto ldv_57438;
  ldv_57437: 
#line 1627 
  ;
  
#line 1633 
  if (rts_frm_len[i] != 0U) 
#line 1634 
                            writeq((unsigned long)((unsigned long long)rts_frm_len[i] << 48),(void volatile *)(& bar0->rts_frm_len_n[i])); else ;
  
#line 1626 
  i += 1;
  ldv_57438: 
#line 1627 
  ;
  
#line 1626 
  if (config->rx_ring_num > (unsigned int)i) 
#line 1628 
                                             goto ldv_57437; else 
#line 1631 
                                                                  goto ldv_57439;
  ldv_57439: 
#line 1632 
  ;
  
#line 1640 
  i = 0;
  
#line 1640 
  goto ldv_57441;
  ldv_57440: 
#line 1641 
  ;
  
#line 1641 
  tmp_11 = rts_ds_steer(nic,(unsigned char)((int)((unsigned char)i)),(unsigned char)0);
  
#line 1641 
  if (tmp_11 == -1) {
    
#line 1642 
    if (debug_level >= 0) 
#line 1642 
                          printk("\001",(char *)(& dev->name),i); else ;
    
#line 1645 
    __retres = -19;
    
#line 1645 
    goto return_label;
  }
  else ;
  
#line 1640 
  i += 1;
  ldv_57441: 
#line 1641 
  ;
  
#line 1640 
  if (i <= 63) 
#line 1642 
               goto ldv_57440; else 
#line 1645 
                                    goto ldv_57442;
  ldv_57442: 
#line 1646 
  ;
  
#line 1650 
  writeq((unsigned long)mac_control->stats_mem_phy,(void volatile *)(& bar0->stat_addr));
  
#line 1652 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 1653 
    val64 = 225179981368524800ULL;
    
#line 1654 
    writeq((unsigned long)val64,(void volatile *)(& bar0->stat_byte_cnt));
  }
  else ;
  
#line 1661 
  val64 = ((unsigned long long)tmac_util_period << 52) | ((unsigned long long)rmac_util_period << 20);
  
#line 1663 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mac_link_util));
  
#line 1671 
  tmp_12 = init_tti(nic,(int)nic->last_link_state);
  
#line 1671 
  if (tmp_12 != 0) {
    
#line 1672 
    __retres = -19;
    
#line 1672 
    goto return_label;
  }
  else ;
  
#line 1675 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 1680 
    int count = ((int)nic->config.bus_speed * 125) / 4;
    
#line 1681 
    val64 = (unsigned long long)count << 32;
  }
  else 
#line 1683 
       val64 = 17587891077120ULL;
  
#line 1684 
  val64 |= 34213936ULL;
  
#line 1689 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rti_data1_mem));
  
#line 1691 
  val64 = 281483566645248ULL;
  
#line 1693 
  if ((unsigned int)nic->config.intr_type == 2U) 
#line 1694 
                                                 val64 |= 2097216ULL; else 
                                                                    
#line 1697 
                                                                    val64 |= 4194432ULL;
  
#line 1699 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rti_data2_mem));
  
#line 1701 
  i = 0;
  
#line 1701 
  goto ldv_57447;
  ldv_57446: 
#line 1702 
  ;
  
#line 1702 
  val64 = ((unsigned long long)i << 32) | 72339069014638592ULL;
  
#line 1705 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rti_command_mem));
  
#line 1714 
  time = 0U;
  ldv_57445: 
#line 1715 
  ;
  
#line 1716 
  val64 = (u64)readq((void const volatile *)(& bar0->rti_command_mem));
  
#line 1717 
  if ((val64 & 281474976710656ULL) == 0ULL) 
#line 1718 
                                            goto ldv_57444; else ;
  
#line 1720 
  if (time > 10U) {
    
#line 1721 
    if (debug_level >= 0) 
#line 1721 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 1723 
    __retres = -19;
    
#line 1723 
    goto return_label;
  }
  else ;
  
#line 1725 
  time += 1U;
  
#line 1726 
  msleep(50U);
  
#line 1716 
  goto ldv_57445;
  ldv_57444: 
#line 1717 
  ;
  
#line 1701 
  i += 1;
  ldv_57447: 
#line 1702 
  ;
  
#line 1701 
  if (config->rx_ring_num > (unsigned int)i) 
#line 1703 
                                             goto ldv_57446; else 
#line 1706 
                                                                  goto ldv_57448;
  ldv_57448: 
#line 1707 
  ;
  
#line 1734 
  writeq(18427603483230994363UL,(void volatile *)(& bar0->mc_pause_thresh_q0q3));
  
#line 1735 
  writeq(18427603483230994363UL,(void volatile *)(& bar0->mc_pause_thresh_q4q7));
  
#line 1738 
  add = (void *)(& bar0->mac_cfg);
  
#line 1739 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
  
#line 1740 
  val64 &= 18302628885633695743ULL;
  
#line 1741 
  writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
  
#line 1742 
  writel((unsigned int)val64,(void volatile *)add);
  
#line 1743 
  writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
  
#line 1744 
  writel((unsigned int)(val64 >> 32),(void volatile *)(add + 4U));
  
#line 1745 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
  
#line 1748 
  add = (void *)(& bar0->mac_cfg);
  
#line 1749 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
  
#line 1750 
  val64 |= 288230376151711744ULL;
  
#line 1751 
  if ((unsigned int)nic->device_type == 2U) 
#line 1752 
                                            writeq((unsigned long)val64,(void volatile *)(& bar0->mac_cfg));
  else {
    
#line 1754 
    writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
    
#line 1755 
    writel((unsigned int)val64,(void volatile *)add);
    
#line 1756 
    writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
    
#line 1757 
    writel((unsigned int)(val64 >> 32),(void volatile *)(add + 4U));
  }
  
#line 1764 
  val64 = (u64)readq((void const volatile *)(& bar0->rmac_pause_cfg));
  
#line 1765 
  val64 &= 18446462603027808255ULL;
  
#line 1766 
  val64 = ((unsigned long long)nic->mac_control.rmac_pause_time << 32) | val64;
  
#line 1767 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_pause_cfg));
  
#line 1775 
  val64 = 0ULL;
  
#line 1776 
  i = 0;
  
#line 1776 
  goto ldv_57450;
  ldv_57449: 
#line 1777 
  ;
  
#line 1777 
  val64 = ((unsigned long long)((unsigned int)nic->mac_control.mc_pause_threshold_q0q3 | 65280U) << i * 16) | val64;
  
#line 1776 
  i += 1;
  ldv_57450: 
#line 1777 
  ;
  
#line 1776 
  if (i <= 3) 
#line 1778 
              goto ldv_57449; else 
#line 1781 
                                   goto ldv_57451;
  ldv_57451: 
#line 1782 
  ;
  
#line 1781 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mc_pause_thresh_q0q3));
  
#line 1783 
  val64 = 0ULL;
  
#line 1784 
  i = 0;
  
#line 1784 
  goto ldv_57453;
  ldv_57452: 
#line 1785 
  ;
  
#line 1785 
  val64 = ((unsigned long long)((unsigned int)nic->mac_control.mc_pause_threshold_q4q7 | 65280U) << i * 16) | val64;
  
#line 1784 
  i += 1;
  ldv_57453: 
#line 1785 
  ;
  
#line 1784 
  if (i <= 3) 
#line 1786 
              goto ldv_57452; else 
#line 1789 
                                   goto ldv_57454;
  ldv_57454: 
#line 1790 
  ;
  
#line 1789 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mc_pause_thresh_q4q7));
  
#line 1795 
  val64 = (u64)readq((void const volatile *)(& bar0->pic_control));
  
#line 1796 
  val64 = ((unsigned long long)shared_splits << 48) | val64;
  
#line 1797 
  writeq((unsigned long)val64,(void volatile *)(& bar0->pic_control));
  
#line 1799 
  if ((unsigned int)nic->config.bus_speed == 266U) {
    
#line 1800 
    writeq(545460846593UL,(void volatile *)(& bar0->txreqtimeout));
    
#line 1801 
    writeq(0UL,(void volatile *)(& bar0->read_retry_delay));
    
#line 1802 
    writeq(0UL,(void volatile *)(& bar0->write_retry_delay));
  }
  else ;
  
#line 1809 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 1810 
    val64 = 13835058068167065600ULL;
    
#line 1812 
    writeq((unsigned long)val64,(void volatile *)(& bar0->misc_control));
    
#line 1813 
    val64 = (u64)readq((void const volatile *)(& bar0->pic_control2));
    
#line 1814 
    val64 &= 18444773748872577023ULL;
    
#line 1815 
    writeq((unsigned long)val64,(void volatile *)(& bar0->pic_control2));
  }
  else ;
  
#line 1817 
  tmp_20 = strstr((char const *)(& nic->product_name),"CX4");
  
#line 1817 
  if (tmp_20 != (char *)0) {
    
#line 1818 
    val64 = 1657324662872342528ULL;
    
#line 1819 
    writeq((unsigned long)val64,(void volatile *)(& bar0->tmac_avg_ipg));
  }
  else ;
  
#line 1822 
  __retres = 0;
  return_label: 
#line 1822 
                return __retres;
}


#line 1827  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_link_fault_indication(struct s2io_nic *nic)
{
  int __retres;
  
#line 1829 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 1830 
    __retres = 1;
    
#line 1830 
    goto return_label;
  }
  else {
    
#line 1832 
    __retres = 2;
    
#line 1832 
    goto return_label;
  }
  return_label: 
#line 1829 
                return __retres;
}


#line 1844  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void do_s2io_write_bits(u64 value, int flag, void *addr)
{
  u64 temp64;
  
#line 1848 
  temp64 = (u64)readq((void const volatile *)addr);
  
#line 1850 
  if (flag == 1) 
#line 1851 
                 temp64 = ~ value & temp64; else 
#line 1853 
                                                 temp64 |= value;
  
#line 1854 
  writeq((unsigned long)temp64,(void volatile *)addr);
  
#line 1855 
  return;
}


#line 1857  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void en_dis_err_alarms(struct s2io_nic *nic, u16 mask, int flag)
{
  u64 interruptible;
  
#line 1859 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 1860 
  register u64 gen_int_mask = 0ULL;
  
#line 1863 
  writeq(18446744073709551615UL,(void volatile *)(& bar0->general_int_mask));
  
#line 1864 
  if (((int)mask & 2) != 0) {
    
#line 1865 
    gen_int_mask |= 4611686018427387904ULL;
    
#line 1867 
    do_s2io_write_bits(18302628885633695744ULL,flag,(void *)(& bar0->txdma_int_mask));
    
#line 1872 
    do_s2io_write_bits(72340174985494528ULL,flag,(void *)(& bar0->pfc_err_mask));
    
#line 1877 
    do_s2io_write_bits(18446465897284501504ULL,flag,(void *)(& bar0->tda_err_mask));
    
#line 1881 
    do_s2io_write_bits(18446744073709551600ULL,flag,(void *)(& bar0->pcc_err_mask));
    
#line 1889 
    do_s2io_write_bits(72340168526266368ULL,flag,(void *)(& bar0->tti_err_mask));
    
#line 1892 
    do_s2io_write_bits(4225423185543168ULL,flag,(void *)(& bar0->lso_err_mask));
    
#line 1897 
    do_s2io_write_bits(72058693549555712ULL,flag,(void *)(& bar0->tpa_err_mask));
    
#line 1900 
    do_s2io_write_bits(281474976710656ULL,flag,(void *)(& bar0->sm_err_mask));
  }
  else ;
  
#line 1903 
  if (((int)mask & 4) != 0) {
    
#line 1904 
    gen_int_mask |= 2305843009213693952ULL;
    
#line 1905 
    do_s2io_write_bits(9223372036854775808ULL,flag,(void *)(& bar0->mac_int_mask));
    
#line 1907 
    do_s2io_write_bits(72340168543109376ULL,flag,(void *)(& bar0->mac_tmac_err_mask));
  }
  else ;
  
#line 1913 
  if (((int)mask & 8) != 0) {
    
#line 1914 
    gen_int_mask |= 1152921504606846976ULL;
    
#line 1915 
    do_s2io_write_bits(9223372036854775808ULL,flag,(void *)(& bar0->xgxs_int_mask));
    
#line 1917 
    do_s2io_write_bits(72339073326383104ULL,flag,(void *)(& bar0->xgxs_txgxs_err_mask));
  }
  else ;
  
#line 1922 
  if (((int)mask & 64) != 0) {
    
#line 1923 
    gen_int_mask |= 1073741824ULL;
    
#line 1924 
    do_s2io_write_bits(17293822569102704640ULL,flag,(void *)(& bar0->rxdma_int_mask));
    
#line 1927 
    do_s2io_write_bits(18446463706817756928ULL,flag,(void *)(& bar0->rc_err_mask));
    
#line 1931 
    do_s2io_write_bits(18446744073709486080ULL,flag,(void *)(& bar0->prc_pcix_err_mask));
    
#line 1935 
    do_s2io_write_bits(72340172821233664ULL,flag,(void *)(& bar0->rpa_err_mask));
    
#line 1938 
    do_s2io_write_bits(18446463702589833473ULL,flag,(void *)(& bar0->rda_err_mask));
    
#line 1944 
    do_s2io_write_bits(72340168526266368ULL,flag,(void *)(& bar0->rti_err_mask));
  }
  else ;
  
#line 1949 
  if (((int)mask & 128) != 0) {
    int tmp;
    
#line 1950 
    gen_int_mask |= 536870912ULL;
    
#line 1951 
    do_s2io_write_bits(4611686018427387904ULL,flag,(void *)(& bar0->mac_int_mask));
    
#line 1953 
    interruptible = 12103406406388940800ULL;
    
#line 1956 
    tmp = s2io_link_fault_indication(nic);
    
#line 1956 
    if (tmp == 2) 
#line 1957 
                  interruptible |= 4294967296ULL; else ;
    
#line 1958 
    do_s2io_write_bits(interruptible,flag,(void *)(& bar0->mac_rmac_err_mask));
  }
  else ;
  
#line 1962 
  if (((int)mask & 256) != 0) {
    
#line 1963 
    gen_int_mask |= 134217728ULL;
    
#line 1964 
    do_s2io_write_bits(4611686018427387904ULL,flag,(void *)(& bar0->xgxs_int_mask));
    
#line 1966 
    do_s2io_write_bits(72057594054705152ULL,flag,(void *)(& bar0->xgxs_rxgxs_err_mask));
  }
  else ;
  
#line 1970 
  if (((int)mask & 1024) != 0) {
    
#line 1971 
    gen_int_mask |= 268435456ULL;
    
#line 1972 
    do_s2io_write_bits(9223372036854775808ULL,flag,(void *)(& bar0->mc_int_mask));
    
#line 1974 
    do_s2io_write_bits(4340476086585393152ULL,flag,(void *)(& bar0->mc_err_mask));
  }
  else ;
  
#line 1978 
  nic->general_int_mask = gen_int_mask;
  
#line 1981 
  nic->general_int_mask = 0ULL;
  
#line 1982 
  return;
}


#line 1995  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void en_dis_able_nic_intrs(struct s2io_nic *nic, u16 mask, int flag)
{
  
#line 1997 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 1998 
  register u64 temp64 = 0ULL;
  
#line 1998 
  register u64 intr_mask = 0ULL;
  
#line 2000 
  intr_mask = nic->general_int_mask;
  
#line 2004 
  if (((int)mask & 1) != 0) {
    
#line 2006 
    intr_mask |= 9223372036854775808ULL;
    
#line 2007 
    if (flag == 1) {
      int tmp;
      
#line 2014 
      tmp = s2io_link_fault_indication(nic);
      
#line 2014 
      if (tmp == 1) {
        
#line 2016 
        do_s2io_write_bits(576460752303423488ULL,flag,(void *)(& bar0->pic_int_mask));
        
#line 2018 
        do_s2io_write_bits(2305843009213693952ULL,flag,(void *)(& bar0->gpio_int_mask));
      }
      else 
#line 2021 
           writeq(18446744073709551615UL,(void volatile *)(& bar0->pic_int_mask));
    }
    else 
      
#line 2022 
      if (flag == 2) 
#line 2027 
                     writeq(18446744073709551615UL,(void volatile *)(& bar0->pic_int_mask)); else ;
  }
  else ;
  
#line 2032 
  if (((int)mask & 16) != 0) {
    
#line 2033 
    intr_mask |= 36028797018963968ULL;
    
#line 2034 
    if (flag == 1) 
#line 2039 
                   writeq(0UL,(void volatile *)(& bar0->tx_traffic_mask));
    else 
      
#line 2040 
      if (flag == 2) 
#line 2045 
                     writeq(18446744073709551615UL,(void volatile *)(& bar0->tx_traffic_mask)); else ;
  }
  else ;
  
#line 2050 
  if (((int)mask & 512) != 0) {
    
#line 2051 
    intr_mask |= 8388608ULL;
    
#line 2052 
    if (flag == 1) 
#line 2054 
                   writeq(0UL,(void volatile *)(& bar0->rx_traffic_mask));
    else 
      
#line 2055 
      if (flag == 2) 
#line 2060 
                     writeq(18446744073709551615UL,(void volatile *)(& bar0->rx_traffic_mask)); else ;
  }
  else ;
  
#line 2064 
  temp64 = (u64)readq((void const volatile *)(& bar0->general_int_mask));
  
#line 2065 
  if (flag == 1) 
#line 2066 
                 temp64 = ~ intr_mask & temp64; else 
#line 2068 
                                                     temp64 = 18446744073709551615ULL;
  
#line 2069 
  writeq((unsigned long)temp64,(void volatile *)(& bar0->general_int_mask));
  
#line 2071 
  nic->general_int_mask = (u64)readq((void const volatile *)(& bar0->general_int_mask));
  
#line 2072 
  return;
}


#line 2079  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int verify_pcc_quiescent(struct s2io_nic *sp, int flag)
{
  int herc;
  
#line 2081 
  int ret = 0;
  
#line 2082 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 2083 
  u64 val64 = readq((void const volatile *)(& bar0->adapter_status));
  
#line 2085 
  herc = (unsigned int)sp->device_type == 2U;
  
#line 2087 
  if (flag == 0) {
    
#line 2088 
    if ((herc == 0 && (unsigned int)(sp->pdev)->revision > 3U) || herc != 0) {
      
#line 2089 
      if ((val64 & 71776119061217280ULL) == 0ULL) 
#line 2090 
                                                  ret = 1; else ;
    }
    else 
      
#line 2092 
      if ((val64 & 4222124650659840ULL) == 0ULL) 
#line 2093 
                                                 ret = 1; else ;
  }
  else 
    
#line 2096 
    if ((herc == 0 && (unsigned int)(sp->pdev)->revision > 3U) || herc != 0) {
      
#line 2097 
      if ((val64 & 71776119061217280ULL) == 71776119061217280ULL) 
#line 2099 
                                                                  ret = 1; else ;
    }
    else 
      
#line 2101 
      if ((val64 & 4222124650659840ULL) == 4222124650659840ULL) 
#line 2103 
                                                                ret = 1; else ;
  
#line 2107 
  return ret;
}


#line 2119  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int verify_xena_quiescence(struct s2io_nic *sp)
{
  int __retres;
  int mode;
  
#line 2122 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 2123 
  u64 val64 = readq((void const volatile *)(& bar0->adapter_status));
  
#line 2124 
  mode = s2io_verify_pci_mode(sp);
  
#line 2126 
  if (val64 >= (u64)0) {
    
#line 2127 
    if (debug_level >= 0) 
#line 2127 
                          printk("\001"); else ;
    
#line 2128 
    __retres = 0;
    
#line 2128 
    goto return_label;
  }
  else ;
  
#line 2130 
  if ((val64 & 4611686018427387904ULL) == 0ULL) {
    
#line 2131 
    if (debug_level >= 0) 
#line 2131 
                          printk("\001"); else ;
    
#line 2132 
    __retres = 0;
    
#line 2132 
    goto return_label;
  }
  else ;
  
#line 2134 
  if ((val64 & 2305843009213693952ULL) == 0ULL) {
    
#line 2135 
    if (debug_level >= 0) 
#line 2135 
                          printk("\001"); else ;
    
#line 2136 
    __retres = 0;
    
#line 2136 
    goto return_label;
  }
  else ;
  
#line 2138 
  if ((val64 & 1152921504606846976ULL) == 0ULL) {
    
#line 2139 
    if (debug_level >= 0) 
#line 2139 
                          printk("\001"); else ;
    
#line 2140 
    __retres = 0;
    
#line 2140 
    goto return_label;
  }
  else ;
  
#line 2142 
  if ((val64 & 288230376151711744ULL) == 0ULL) {
    
#line 2143 
    if (debug_level >= 0) 
#line 2143 
                          printk("\001"); else ;
    
#line 2144 
    __retres = 0;
    
#line 2144 
    goto return_label;
  }
  else ;
  
#line 2146 
  if ((val64 & 549755813888ULL) == 0ULL) {
    
#line 2147 
    if (debug_level >= 0) 
#line 2147 
                          printk("\001"); else ;
    
#line 2148 
    __retres = 0;
    
#line 2148 
    goto return_label;
  }
  else ;
  
#line 2150 
  if ((val64 & 274877906944ULL) == 0ULL) {
    
#line 2151 
    if (debug_level >= 0) 
#line 2151 
                          printk("\001"); else ;
    
#line 2152 
    __retres = 0;
    
#line 2152 
    goto return_label;
  }
  else ;
  
#line 2154 
  if ((val64 & 8589934592ULL) == 0ULL) {
    
#line 2155 
    if (debug_level >= 0) 
#line 2155 
                          printk("\001"); else ;
    
#line 2156 
    __retres = 0;
    
#line 2156 
    goto return_label;
  }
  else ;
  
#line 2164 
  if (((val64 & 4294967296ULL) == 0ULL && (unsigned int)sp->device_type == 2U) && mode != 0) {
    
#line 2167 
    if (debug_level >= 0) 
#line 2167 
                          printk("\001"); else ;
    
#line 2168 
    __retres = 0;
    
#line 2168 
    goto return_label;
  }
  else ;
  
#line 2170 
  if ((val64 & 280375465082880ULL) != 280375465082880ULL) {
    
#line 2172 
    if (debug_level >= 0) 
#line 2172 
                          printk("\001"); else ;
    
#line 2173 
    __retres = 0;
    
#line 2173 
    goto return_label;
  }
  else ;
  
#line 2175 
  __retres = 1;
  return_label: 
#line 2175 
                return __retres;
}


#line 2186  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void fix_mac_address(struct s2io_nic *sp)
{
  int tmp;
  
#line 2188 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 2189 
  int i = 0;
  
#line 2191 
  goto ldv_57500;
  ldv_57499: 
#line 2192 
  ;
  
#line 2192 
  ;
  
#line 2192 
  tmp = i;
  
#line 2192 
  i += 1;
  
#line 2192 
  ;
  
#line 2192 
  writeq((unsigned long)fix_mac[tmp],(void volatile *)(& bar0->gpio_control));
  
#line 2193 
  __const_udelay(42950UL);
  
#line 2194 
  readq((void const volatile *)(& bar0->gpio_control));
  ldv_57500: 
#line 2195 
  ;
  
#line 2191 
  if (fix_mac[i] != 0ULL) 
#line 2193 
                          goto ldv_57499; else 
#line 2196 
                                               goto ldv_57501;
  ldv_57501: 
#line 2197 
  ;
  
#line 2198 
  return;
}


#line 2211  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int start_nic(struct s2io_nic *nic)
{
  int __retres;
  u16 subid;
  u16 i;
  int tmp_6;
  int tmp_8;
  
#line 2213 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 2214 
  struct net_device *dev = nic->dev;
  
#line 2215 
  register u64 val64 = 0ULL;
  
#line 2217 
  struct config_param *config = & nic->config;
  
#line 2218 
  struct mac_info *mac_control = & nic->mac_control;
  
#line 2221 
  i = (unsigned short)0U;
  
#line 2221 
  goto ldv_57514;
  ldv_57513: 
#line 2222 
  ;
  {
    
#line 2222 
    struct ring_info *ring = & mac_control->rings[(int)i];
    
#line 2224 
    writeq((unsigned long)ring->rx_blocks[0].block_dma_addr,(void volatile *)(& bar0->prc_rxd0_n[(int)i]));
    
#line 2227 
    val64 = (u64)readq((void const volatile *)(& bar0->prc_ctrl_n[(int)i]));
    
#line 2228 
    if (nic->rxd_mode == 0) 
#line 2229 
                            val64 |= 72057594037927936ULL; else 
#line 2231 
                                                                val64 |= 72339069014638592ULL;
    
#line 2232 
    if ((unsigned int)nic->device_type == 2U) 
#line 2233 
                                              val64 |= 33554432ULL; else ;
    
#line 2234 
    val64 &= 18446744073692774400ULL;
    
#line 2235 
    val64 |= 4096ULL;
    
#line 2236 
    writeq((unsigned long)val64,(void volatile *)(& bar0->prc_ctrl_n[(int)i]));
  }
  
#line 2221 
  i = (u16)((int)i + 1);
  ldv_57514: 
#line 2222 
  ;
  
#line 2221 
  if ((unsigned int)i < config->rx_ring_num) 
#line 2223 
                                             goto ldv_57513; else 
#line 2226 
                                                                  goto ldv_57515;
  ldv_57515: 
#line 2227 
  ;
  
#line 2239 
  if (nic->rxd_mode == 1) {
    
#line 2241 
    val64 = (u64)readq((void const volatile *)(& bar0->rx_pa_cfg));
    
#line 2242 
    val64 |= 144115188075855872ULL;
    
#line 2243 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_pa_cfg));
  }
  else ;
  
#line 2246 
  if (vlan_tag_strip == 0U) {
    
#line 2247 
    val64 = (u64)readq((void const volatile *)(& bar0->rx_pa_cfg));
    
#line 2248 
    val64 &= 18446462598732840959ULL;
    
#line 2249 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rx_pa_cfg));
    
#line 2250 
    nic->vlan_strip_flag = 0;
  }
  else ;
  
#line 2258 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_mrs));
  
#line 2259 
  val64 |= 16842752ULL;
  
#line 2260 
  SPECIAL_REG_WRITE(val64,(void *)(& bar0->mc_rldram_mrs),1);
  
#line 2261 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_mrs));
  
#line 2263 
  msleep(100U);
  
#line 2266 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
  
#line 2267 
  val64 &= 18446744073709551359ULL;
  
#line 2268 
  writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
  
#line 2274 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
  
#line 2275 
  tmp_6 = verify_xena_quiescence(nic);
  
#line 2275 
  if (tmp_6 == 0) {
    
#line 2276 
    if (debug_level >= 0) 
#line 2276 
                          printk("\001",(char *)(& dev->name),val64); else ;
    
#line 2279 
    __retres = -1;
    
#line 2279 
    goto return_label;
  }
  else ;
  
#line 2291 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
  
#line 2292 
  val64 |= 281474976710656ULL;
  
#line 2293 
  writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
  
#line 2295 
  tmp_8 = s2io_link_fault_indication(nic);
  
#line 2295 
  if (tmp_8 == 2) 
#line 2300 
                  ldv_schedule_work_73(& nic->set_link_task); else ;
  
#line 2303 
  subid = (nic->pdev)->subsystem_device;
  
#line 2304 
  if (((int)subid & 255) > 6 && (unsigned int)nic->device_type == 1U) {
    
#line 2306 
    val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
    
#line 2307 
    val64 |= 140737488355328ULL;
    
#line 2308 
    writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_control));
    
#line 2309 
    val64 = 293019865982173184ULL;
    
#line 2310 
    writeq((unsigned long)val64,(void volatile *)bar0 + 9984U);
  }
  else ;
  
#line 2313 
  __retres = 0;
  return_label: 
#line 2313 
                return __retres;
}


#line 2318  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct sk_buff *s2io_txdl_getskb(struct fifo_info *fifo_data, struct TxD *txdlp, int get_off)
{
  struct sk_buff *__retres;
  struct sk_buff *skb;
  struct TxD *txds;
  u16 j;
  u16 frg_cnt;
  unsigned int tmp;
  unsigned char *tmp_0;
  
#line 2321 
  struct s2io_nic *nic = fifo_data->nic;
  
#line 2326 
  txds = txdlp;
  
#line 2327 
  if (txds->Host_Control == (unsigned long long)fifo_data->ufo_in_band_v) {
    
#line 2328 
    pci_unmap_single(nic->pdev,txds->Buffer_Pointer,8UL,1);
    
#line 2330 
    txds += 1;
  }
  else ;
  
#line 2333 
  skb = (struct sk_buff *)txds->Host_Control;
  
#line 2334 
  if (skb == (struct sk_buff *)0) {
    
#line 2335 
    memset((void *)txdlp,0,(unsigned long)fifo_data->max_txds * 32UL);
    
#line 2336 
    __retres = (struct sk_buff *)0;
    
#line 2336 
    goto return_label;
  }
  else ;
  
#line 2339 
  tmp = skb_headlen((struct sk_buff const *)skb);
  
#line 2338 
  ;
  
#line 2338 
  ;
  
#line 2338 
  pci_unmap_single(nic->pdev,txds->Buffer_Pointer,(unsigned long)tmp,1);
  
#line 2340 
  tmp_0 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 2340 
  frg_cnt = (unsigned short)((struct skb_shared_info *)tmp_0)->nr_frags;
  
#line 2341 
  if ((unsigned int)frg_cnt != 0U) {
    
#line 2342 
    txds += 1;
    
#line 2343 
    j = (unsigned short)0U;
    
#line 2343 
    goto ldv_57529;
    ldv_57528: 
#line 2344 
    ;
    {
      unsigned char *tmp_1;
      unsigned int tmp_2;
      
#line 2344 
      tmp_1 = skb_end_pointer((struct sk_buff const *)skb);
      
#line 2344 
      skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_1)->frags[(int)j]);
      
#line 2345 
      if (txds->Buffer_Pointer == 0ULL) 
#line 2346 
                                        goto ldv_57527; else ;
      
#line 2349 
      tmp_2 = skb_frag_size(frag);
      
#line 2347 
      ;
      
#line 2347 
      ;
      
#line 2347 
      pci_unmap_page(nic->pdev,txds->Buffer_Pointer,(unsigned long)tmp_2,1);
    }
    
#line 2343 
    j = (u16)((int)j + 1);
    
#line 2343 
    txds += 1;
    ldv_57529: 
#line 2344 
    ;
    
#line 2343 
    if ((int)j < (int)frg_cnt) 
#line 2345 
                               goto ldv_57528; else 
#line 2348 
                                                    goto ldv_57527;
    ldv_57527: 
#line 2349 
    ;
  }
  else ;
  
#line 2352 
  memset((void *)txdlp,0,(unsigned long)fifo_data->max_txds * 32UL);
  
#line 2353 
  __retres = skb;
  return_label: 
#line 2353 
                return __retres;
}


#line 2364  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void free_tx_buffers(struct s2io_nic *nic)
{
  struct sk_buff *skb;
  struct TxD *txdp;
  int i;
  int j;
  
#line 2366 
  struct net_device *dev = nic->dev;
  
#line 2370 
  int cnt = 0;
  
#line 2371 
  struct config_param *config = & nic->config;
  
#line 2372 
  struct mac_info *mac_control = & nic->mac_control;
  
#line 2373 
  struct stat_block *stats = mac_control->stats_info;
  
#line 2374 
  struct swStat *swstats = & stats->sw_stat;
  
#line 2376 
  i = 0;
  
#line 2376 
  goto ldv_57550;
  ldv_57549: 
#line 2377 
  ;
  {
    unsigned long flags;
    
#line 2377 
    struct tx_fifo_config *tx_cfg = & config->tx_cfg[i];
    
#line 2378 
    struct fifo_info *fifo = & mac_control->fifos[i];
    
#line 2381 
    ldv___ldv_spin_lock_74(& fifo->tx_lock);
    
#line 2382 
    j = 0;
    
#line 2382 
    goto ldv_57547;
    ldv_57546: 
#line 2383 
    ;
    
#line 2383 
    txdp = (struct TxD *)(fifo->list_info + j)->list_virt_addr;
    
#line 2384 
    skb = s2io_txdl_getskb(& mac_control->fifos[i],txdp,j);
    
#line 2385 
    if (skb != (struct sk_buff *)0) {
      
#line 2386 
      swstats->mem_freed += (unsigned long long)skb->truesize;
      
#line 2387 
      consume_skb(skb);
      
#line 2388 
      cnt += 1;
    }
    else ;
    
#line 2382 
    j += 1;
    ldv_57547: 
#line 2383 
    ;
    
#line 2382 
    if (tx_cfg->fifo_len > (unsigned int)j) 
#line 2384 
                                            goto ldv_57546; else 
#line 2387 
                                                                 goto ldv_57548;
    ldv_57548: 
#line 2388 
    ;
    
#line 2391 
    if (debug_level > 3) 
#line 2391 
                         printk("\001",(char *)(& dev->name),cnt,i); else ;
    
#line 2394 
    fifo->tx_curr_get_info.offset = 0U;
    
#line 2395 
    fifo->tx_curr_put_info.offset = 0U;
    
#line 2396 
    ldv_spin_unlock_irqrestore_75(& fifo->tx_lock,flags);
  }
  
#line 2376 
  i += 1;
  ldv_57550: 
#line 2377 
  ;
  
#line 2376 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 2378 
                                             goto ldv_57549; else 
#line 2381 
                                                                  goto ldv_57551;
  ldv_57551: 
#line 2382 
  ;
  
#line 2383 
  return;
}


#line 2410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void stop_nic(struct s2io_nic *nic)
{
  u16 interruptible;
  
#line 2412 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 2413 
  register u64 val64 = 0ULL;
  
#line 2417 
  en_dis_err_alarms(nic,(unsigned short)2047,2);
  
#line 2418 
  interruptible = (unsigned short)528U;
  
#line 2419 
  interruptible = (unsigned short)((unsigned int)interruptible | 1U);
  
#line 2420 
  en_dis_able_nic_intrs(nic,(unsigned short)((int)interruptible),2);
  
#line 2423 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
  
#line 2424 
  val64 &= 18374686479671623679ULL;
  
#line 2425 
  writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
  
#line 2426 
  return;
}


#line 2450  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int fill_rx_buffers(struct s2io_nic *nic, struct ring_info *ring, int from_card_up)
{
  int __retres;
  struct sk_buff *skb;
  struct RxD_t *rxdp;
  int off;
  int size;
  int block_no;
  int block_no1;
  u32 alloc_cnt;
  u64 tmp;
  struct buffAdd *ba;
  struct RxD1 *rxdp1;
  struct RxD3 *rxdp3;
  
#line 2456 
  u32 alloc_tab = 0U;
  
#line 2460 
  struct RxD_t *first_rxdp = (struct RxD_t *)0;
  
#line 2461 
  u64 Buffer0_ptr = 0ULL;
  
#line 2461 
  u64 Buffer1_ptr = 0ULL;
  
#line 2462 
  int rxd_index = 0;
  
#line 2465 
  struct swStat *swstats = & ((ring->nic)->mac_control.stats_info)->sw_stat;
  
#line 2467 
  alloc_cnt = (unsigned int)ring->pkt_cnt - ring->rx_bufs_left;
  
#line 2469 
  block_no1 = (int)ring->rx_curr_get_info.block_index;
  
#line 2470 
  goto ldv_57583;
  ldv_57582: 
#line 2471 
  ;
  
#line 2471 
  block_no = (int)ring->rx_curr_put_info.block_index;
  
#line 2473 
  off = (int)ring->rx_curr_put_info.offset;
  
#line 2475 
  rxdp = (struct RxD_t *)(ring->rx_blocks[block_no].rxds + off)->virt_addr;
  
#line 2477 
  rxd_index = off + 1;
  
#line 2478 
  if (block_no != 0) 
#line 2479 
                     rxd_index = ring->rxd_count * block_no + rxd_index; else ;
  
#line 2481 
  if ((block_no == block_no1 && ring->rx_curr_get_info.offset == (unsigned int)off) && rxdp->Host_Control != 0ULL) {
    
#line 2484 
    if (debug_level > 3) 
#line 2484 
                         printk("\001",(char *)(& (ring->dev)->name)); else ;
    
#line 2486 
    goto end;
  }
  else ;
  
#line 2488 
  if (off != 0 && ring->rxd_count == off) {
    
#line 2489 
    ring->rx_curr_put_info.block_index += 1U;
    
#line 2490 
    if (ring->rx_curr_put_info.block_index == (unsigned int)ring->block_count) 
      
#line 2492 
      ring->rx_curr_put_info.block_index = 0U; else ;
    
#line 2493 
    block_no = (int)ring->rx_curr_put_info.block_index;
    
#line 2494 
    off = 0;
    
#line 2495 
    ring->rx_curr_put_info.offset = (unsigned int)off;
    
#line 2496 
    rxdp = (struct RxD_t *)ring->rx_blocks[block_no].block_virt_addr;
    
#line 2497 
    if (debug_level > 3) 
#line 2497 
                         printk("\001",(char *)(& (ring->dev)->name),rxdp); else ;
  }
  else ;
  
#line 2502 
  if ((rxdp->Control_1 & 72057594037927936ULL) != 0ULL && (ring->rxd_mode == 1 && rxdp->Control_2 < (u64)0)) {
    
#line 2505 
    ring->rx_curr_put_info.offset = (unsigned int)off;
    
#line 2506 
    goto end;
  }
  else ;
  
#line 2509 
  size = (int)(ring->mtu + 22U);
  
#line 2512 
  if (ring->rxd_mode == 0) 
#line 2513 
                           size = size; else 
#line 2515 
                                             size = (int)(ring->mtu + 171U);
  
#line 2518 
  skb = netdev_alloc_skb(nic->dev,(unsigned int)size);
  
#line 2519 
  if (skb == (struct sk_buff *)0) {
    
#line 2520 
    if (debug_level > 1) 
#line 2520 
                         printk("\001",(char *)(& (ring->dev)->name)); else ;
    
#line 2522 
    if (first_rxdp != (struct RxD_t *)0) {
      
#line 2524 
      ldv_inline_asm();
      
#line 2524 
      first_rxdp->Control_1 |= 72057594037927936ULL;
    }
    else ;
    
#line 2526 
    swstats->mem_alloc_fail_cnt += 1ULL;
    
#line 2528 
    __retres = -12;
    
#line 2528 
    goto return_label;
  }
  else ;
  
#line 2530 
  swstats->mem_allocated += (unsigned long long)skb->truesize;
  
#line 2532 
  if (ring->rxd_mode == 0) {
    int tmp_0;
    
#line 2534 
    rxdp1 = (struct RxD1 *)rxdp;
    
#line 2535 
    memset((void *)rxdp,0,32UL);
    
#line 2536 
    skb_reserve(skb,0);
    
#line 2537 
    rxdp1->Buffer0_ptr = pci_map_single(ring->pdev,(void *)skb->data,(unsigned long)size,2);
    
#line 2541 
    tmp_0 = pci_dma_mapping_error(nic->pdev,rxdp1->Buffer0_ptr);
    
#line 2541 
    if (tmp_0 != 0) 
#line 2543 
                    goto pci_map_failed; else ;
    
#line 2545 
    rxdp->Control_2 = (unsigned long long)size << 48;
    
#line 2547 
    rxdp->Host_Control = (unsigned long long)skb;
  }
  else 
    
#line 2548 
    if (ring->rxd_mode == 1) {
      
#line 2555 
      rxdp3 = (struct RxD3 *)rxdp;
      
#line 2557 
      Buffer0_ptr = rxdp3->Buffer0_ptr;
      
#line 2558 
      Buffer1_ptr = rxdp3->Buffer1_ptr;
      
#line 2559 
      memset((void *)rxdp,0,48UL);
      
#line 2561 
      rxdp3->Buffer0_ptr = Buffer0_ptr;
      
#line 2562 
      rxdp3->Buffer1_ptr = Buffer1_ptr;
      
#line 2564 
      ba = *(ring->ba + block_no) + off;
      
#line 2565 
      skb_reserve(skb,40);
      
#line 2566 
      tmp = (unsigned long long)skb->data;
      
#line 2567 
      tmp += 127ULL;
      
#line 2568 
      tmp &= 18446744073709551488ULL;
      
#line 2569 
      skb->data = (unsigned char *)tmp;
      
#line 2570 
      skb_reset_tail_pointer(skb);
      
#line 2572 
      if (from_card_up != 0) {
        int tmp_1;
        
#line 2573 
        rxdp3->Buffer0_ptr = pci_map_single(ring->pdev,ba->ba_0,40UL,2);
        
#line 2577 
        tmp_1 = pci_dma_mapping_error(nic->pdev,rxdp3->Buffer0_ptr);
        
#line 2577 
        if (tmp_1 != 0) 
#line 2579 
                        goto pci_map_failed; else ;
      }
      else 
#line 2581 
           pci_dma_sync_single_for_device(ring->pdev,rxdp3->Buffer0_ptr,40UL,2);
      
#line 2586 
      rxdp->Control_2 = 11258999068426240ULL;
      
#line 2587 
      if (ring->rxd_mode == 1) {
        int tmp_2;
        
#line 2594 
        rxdp3->Buffer2_ptr = pci_map_single(ring->pdev,(void *)skb->data,(unsigned long)(ring->mtu + 4U),2);
        
#line 2599 
        tmp_2 = pci_dma_mapping_error(nic->pdev,rxdp3->Buffer2_ptr);
        
#line 2599 
        if (tmp_2 != 0) 
#line 2601 
                        goto pci_map_failed; else ;
        
#line 2603 
        if (from_card_up != 0) {
          int tmp_3;
          
#line 2604 
          rxdp3->Buffer1_ptr = pci_map_single(ring->pdev,ba->ba_1,1UL,2);
          
#line 2610 
          tmp_3 = pci_dma_mapping_error(nic->pdev,rxdp3->Buffer1_ptr);
          
#line 2610 
          if (tmp_3 != 0) {
            
#line 2612 
            pci_unmap_single(ring->pdev,(unsigned long long)skb->data,(unsigned long)(ring->mtu + 4U),2);
            
#line 2617 
            goto pci_map_failed;
          }
          else ;
        }
        else ;
        
#line 2620 
        rxdp->Control_2 |= 4294967296ULL;
        
#line 2621 
        rxdp->Control_2 |= ((unsigned long long)ring->mtu + 4ULL) << 16;
      }
      else ;
      
#line 2624 
      rxdp->Control_2 |= 9223372036854775808ULL;
      
#line 2625 
      rxdp->Host_Control = (unsigned long long)skb;
    }
    else ;
  
#line 2627 
  if (((unsigned int)((1 << rxsync_frequency) + -1) & alloc_tab) != 0U) 
    
#line 2628 
    rxdp->Control_1 |= 72057594037927936ULL; else ;
  
#line 2629 
  off += 1;
  
#line 2630 
  if (ring->rxd_count + 1 == off) 
#line 2631 
                                  off = 0; else ;
  
#line 2632 
  ring->rx_curr_put_info.offset = (unsigned int)off;
  
#line 2634 
  rxdp->Control_2 |= 13835058055282163712ULL;
  
#line 2635 
  if (((unsigned int)((1 << rxsync_frequency) + -1) & alloc_tab) == 0U) {
    
#line 2636 
    if (first_rxdp != (struct RxD_t *)0) {
      
#line 2638 
      ldv_inline_asm();
      
#line 2638 
      first_rxdp->Control_1 |= 72057594037927936ULL;
    }
    else ;
    
#line 2640 
    first_rxdp = rxdp;
  }
  else ;
  
#line 2642 
  ring->rx_bufs_left += 1U;
  
#line 2643 
  alloc_tab += 1U;
  ldv_57583: 
#line 2644 
  ;
  
#line 2470 
  if (alloc_tab < alloc_cnt) 
#line 2472 
                             goto ldv_57582; else 
#line 2475 
                                                  goto ldv_57584;
  ldv_57584: 
#line 2476 
  ;
  end: 
#line 2646 
  ;
  
#line 2651 
  if (first_rxdp != (struct RxD_t *)0) {
    
#line 2653 
    ldv_inline_asm();
    
#line 2653 
    first_rxdp->Control_1 |= 72057594037927936ULL;
  }
  else ;
  
#line 2656 
  __retres = 0;
  
#line 2656 
  goto return_label;
  pci_map_failed: 
#line 2658 
  ;
  
#line 2659 
  swstats->pci_map_fail_cnt += 1ULL;
  
#line 2660 
  swstats->mem_freed += (unsigned long long)skb->truesize;
  
#line 2661 
  dev_kfree_skb_irq(skb);
  
#line 2662 
  __retres = -12;
  return_label: 
#line 2662 
                return __retres;
}


#line 2665  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void free_rxd_blk(struct s2io_nic *sp, int ring_no, int blk)
{
  int j;
  struct sk_buff *skb;
  struct RxD_t *rxdp;
  struct RxD1 *rxdp1;
  struct RxD3 *rxdp3;
  
#line 2667 
  struct net_device *dev = sp->dev;
  
#line 2673 
  struct mac_info *mac_control = & sp->mac_control;
  
#line 2674 
  struct stat_block *stats = mac_control->stats_info;
  
#line 2675 
  struct swStat *swstats = & stats->sw_stat;
  
#line 2677 
  j = 0;
  
#line 2677 
  goto ldv_57601;
  ldv_57600: 
#line 2678 
  ;
  
#line 2678 
  rxdp = (struct RxD_t *)(mac_control->rings[ring_no].rx_blocks[blk].rxds + j)->virt_addr;
  
#line 2680 
  skb = (struct sk_buff *)rxdp->Host_Control;
  
#line 2681 
  if (skb == (struct sk_buff *)0) 
#line 2682 
                                  goto ldv_57599; else ;
  
#line 2683 
  if (sp->rxd_mode == 0) {
    
#line 2684 
    rxdp1 = (struct RxD1 *)rxdp;
    
#line 2685 
    pci_unmap_single(sp->pdev,rxdp1->Buffer0_ptr,(unsigned long)(dev->mtu + 22U),2);
    
#line 2691 
    memset((void *)rxdp,0,32UL);
  }
  else 
    
#line 2692 
    if (sp->rxd_mode == 1) {
      
#line 2693 
      rxdp3 = (struct RxD3 *)rxdp;
      
#line 2694 
      pci_unmap_single(sp->pdev,rxdp3->Buffer0_ptr,40UL,2);
      
#line 2698 
      pci_unmap_single(sp->pdev,rxdp3->Buffer1_ptr,1UL,2);
      
#line 2702 
      pci_unmap_single(sp->pdev,rxdp3->Buffer2_ptr,(unsigned long)(dev->mtu + 4U),2);
      
#line 2706 
      memset((void *)rxdp,0,48UL);
    }
    else ;
  
#line 2708 
  swstats->mem_freed += (unsigned long long)skb->truesize;
  
#line 2709 
  consume_skb(skb);
  
#line 2710 
  mac_control->rings[ring_no].rx_bufs_left += 4294967295U;
  ldv_57599: 
#line 2711 
  ;
  
#line 2677 
  j += 1;
  ldv_57601: 
#line 2678 
  ;
  
#line 2677 
  if (rxd_count[sp->rxd_mode] > j) 
#line 2679 
                                   goto ldv_57600; else 
#line 2682 
                                                        goto ldv_57602;
  ldv_57602: 
#line 2683 
  ;
  
#line 2684 
  return;
}


#line 2723  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void free_rx_buffers(struct s2io_nic *sp)
{
  int i;
  
#line 2725 
  struct net_device *dev = sp->dev;
  
#line 2726 
  int blk = 0;
  
#line 2726 
  int buf_cnt = 0;
  
#line 2727 
  struct config_param *config = & sp->config;
  
#line 2728 
  struct mac_info *mac_control = & sp->mac_control;
  
#line 2730 
  i = 0;
  
#line 2730 
  goto ldv_57617;
  ldv_57616: 
#line 2731 
  ;
  {
    
#line 2731 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 2733 
    blk = 0;
    
#line 2733 
    goto ldv_57614;
    ldv_57613: 
#line 2734 
    ;
    
#line 2734 
    free_rxd_blk(sp,i,blk);
    
#line 2733 
    blk += 1;
    ldv_57614: 
#line 2734 
    ;
    
#line 2733 
    if (rx_ring_sz[i] > (unsigned int)blk) 
#line 2735 
                                           goto ldv_57613; else 
#line 2738 
                                                                goto ldv_57615;
    ldv_57615: 
#line 2739 
    ;
    
#line 2736 
    ring->rx_curr_put_info.block_index = 0U;
    
#line 2737 
    ring->rx_curr_get_info.block_index = 0U;
    
#line 2738 
    ring->rx_curr_put_info.offset = 0U;
    
#line 2739 
    ring->rx_curr_get_info.offset = 0U;
    
#line 2740 
    ring->rx_bufs_left = 0U;
    
#line 2741 
    if (debug_level > 0) 
#line 2741 
                         printk("\001",(char *)(& dev->name),buf_cnt,i); else ;
  }
  
#line 2730 
  i += 1;
  ldv_57617: 
#line 2731 
  ;
  
#line 2730 
  if (config->rx_ring_num > (unsigned int)i) 
#line 2732 
                                             goto ldv_57616; else 
#line 2735 
                                                                  goto ldv_57618;
  ldv_57618: 
#line 2736 
  ;
  
#line 2737 
  return;
}


#line 2746  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_chk_rx_buffers(struct s2io_nic *nic, struct ring_info *ring)
{
  int __retres;
  int tmp;
  
#line 2748 
  tmp = fill_rx_buffers(nic,ring,0);
  
#line 2748 
  if (tmp == -12) {
    
#line 2749 
    if (debug_level > 1) 
#line 2749 
                         printk("\001",(char *)(& (ring->dev)->name)); else ;
  }
  else ;
  
#line 2752 
  __retres = 0;
  
#line 2752 
  return __retres;
}


#line 2768  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_poll_msix(struct napi_struct *napi_0, int budget)
{
  int __retres;
  struct ring_info *tmp;
  int tmp_1;
  {
    
#line 2770 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi_0;
    
#line 2770 
    tmp = (struct ring_info *)__mptr + 18446744073709547416U;
  }
  
#line 2770 
  struct ring_info *ring = tmp;
  
#line 2771 
  struct net_device *dev = ring->dev;
  
#line 2772 
  int pkts_processed = 0;
  
#line 2773 
  u8 *addr = (u8 *)0U;
  
#line 2774 
  u8 val8 = (unsigned char)0U;
  
#line 2775 
  struct s2io_nic *nic = netdev_priv((struct net_device const *)dev);
  
#line 2776 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 2777 
  int budget_org = budget;
  
#line 2779 
  tmp_1 = is_s2io_card_up((struct s2io_nic const *)nic);
  
#line 2779 
  if ((long)(tmp_1 == 0) != 0L) {
    
#line 2780 
    __retres = 0;
    
#line 2780 
    goto return_label;
  }
  else ;
  
#line 2782 
  pkts_processed = rx_intr_handler(ring,budget);
  
#line 2783 
  s2io_chk_rx_buffers(nic,ring);
  
#line 2785 
  if (pkts_processed < budget_org) {
    
#line 2786 
    napi_complete(napi_0);
    
#line 2788 
    addr = (u8 *)(& bar0->xmsi_mask_reg);
    
#line 2789 
    addr += 7 - ring->ring_no;
    
#line 2790 
    if (ring->ring_no == 0) 
#line 2790 
                            val8 = (unsigned char)63U; else 
#line 2790 
                                                            val8 = (unsigned char)191U;
    
#line 2791 
    writeb((unsigned char)((int)val8),(void volatile *)addr);
    
#line 2792 
    val8 = readb((void const volatile *)addr);
  }
  else ;
  
#line 2794 
  __retres = pkts_processed;
  return_label: 
#line 2794 
                return __retres;
}


#line 2797  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_poll_inta(struct napi_struct *napi_0, int budget)
{
  int __retres;
  struct s2io_nic *tmp;
  int ring_pkts_processed;
  int i;
  int tmp_0;
  {
    
#line 2799 
    struct napi_struct const *__mptr = (struct napi_struct const *)napi_0;
    
#line 2799 
    tmp = (struct s2io_nic *)__mptr + 18446744073709481704U;
  }
  
#line 2799 
  struct s2io_nic *nic = tmp;
  
#line 2800 
  int pkts_processed = 0;
  
#line 2802 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 2803 
  int budget_org = budget;
  
#line 2804 
  struct config_param *config = & nic->config;
  
#line 2805 
  struct mac_info *mac_control = & nic->mac_control;
  
#line 2807 
  tmp_0 = is_s2io_card_up((struct s2io_nic const *)nic);
  
#line 2807 
  if ((long)(tmp_0 == 0) != 0L) {
    
#line 2808 
    __retres = 0;
    
#line 2808 
    goto return_label;
  }
  else ;
  
#line 2810 
  i = 0;
  
#line 2810 
  goto ldv_57654;
  ldv_57653: 
#line 2811 
  ;
  {
    
#line 2811 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 2812 
    ring_pkts_processed = rx_intr_handler(ring,budget);
    
#line 2813 
    s2io_chk_rx_buffers(nic,ring);
    
#line 2814 
    pkts_processed += ring_pkts_processed;
    
#line 2815 
    budget -= ring_pkts_processed;
    
#line 2816 
    if (budget <= 0) 
#line 2817 
                     goto ldv_57652; else ;
  }
  
#line 2810 
  i += 1;
  ldv_57654: 
#line 2811 
  ;
  
#line 2810 
  if (config->rx_ring_num > (unsigned int)i) 
#line 2812 
                                             goto ldv_57653; else 
#line 2815 
                                                                  goto ldv_57652;
  ldv_57652: 
#line 2816 
  ;
  
#line 2819 
  if (pkts_processed < budget_org) {
    
#line 2820 
    napi_complete(napi_0);
    
#line 2822 
    writeq(0UL,(void volatile *)(& bar0->rx_traffic_mask));
    
#line 2823 
    readl((void const volatile *)(& bar0->rx_traffic_mask));
  }
  else ;
  
#line 2825 
  __retres = pkts_processed;
  return_label: 
#line 2825 
                return __retres;
}


#line 2838  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_netpoll(struct net_device *dev)
{
  int i;
  int tmp_0;
  
#line 2840 
  struct s2io_nic *nic = netdev_priv((struct net_device const *)dev);
  
#line 2841 
  int const irq = (int)(nic->pdev)->irq;
  
#line 2842 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 2843 
  u64 val64 = 18446744073709551615ULL;
  
#line 2845 
  struct config_param *config = & nic->config;
  
#line 2846 
  struct mac_info *mac_control = & nic->mac_control;
  
#line 2848 
  tmp_0 = pci_channel_offline(nic->pdev);
  
#line 2848 
  if (tmp_0 != 0) 
#line 2849 
                  goto return_label; else ;
  
#line 2851 
  disable_irq((unsigned int)irq);
  
#line 2853 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rx_traffic_int));
  
#line 2854 
  writeq((unsigned long)val64,(void volatile *)(& bar0->tx_traffic_int));
  
#line 2860 
  i = 0;
  
#line 2860 
  goto ldv_57666;
  ldv_57665: 
#line 2861 
  ;
  
#line 2861 
  tx_intr_handler(& mac_control->fifos[i]);
  
#line 2860 
  i += 1;
  ldv_57666: 
#line 2861 
  ;
  
#line 2860 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 2862 
                                             goto ldv_57665; else 
#line 2865 
                                                                  goto ldv_57667;
  ldv_57667: 
#line 2866 
  ;
  
#line 2864 
  i = 0;
  
#line 2864 
  goto ldv_57670;
  ldv_57669: 
#line 2865 
  ;
  {
    
#line 2865 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 2867 
    rx_intr_handler(ring,0);
  }
  
#line 2864 
  i += 1;
  ldv_57670: 
#line 2865 
  ;
  
#line 2864 
  if (config->rx_ring_num > (unsigned int)i) 
#line 2866 
                                             goto ldv_57669; else 
#line 2869 
                                                                  goto ldv_57671;
  ldv_57671: 
#line 2870 
  ;
  
#line 2870 
  i = 0;
  
#line 2870 
  goto ldv_57675;
  ldv_57674: 
#line 2871 
  ;
  {
    int tmp_1;
    
#line 2871 
    struct ring_info *ring_0 = & mac_control->rings[i];
    
#line 2873 
    tmp_1 = fill_rx_buffers(nic,ring_0,0);
    
#line 2873 
    if (tmp_1 == -12) {
      
#line 2874 
      if (debug_level > 1) 
#line 2874 
                           printk("\001",(char *)(& dev->name)); else ;
      
#line 2877 
      goto ldv_57673;
    }
    else ;
  }
  
#line 2870 
  i += 1;
  ldv_57675: 
#line 2871 
  ;
  
#line 2870 
  if (config->rx_ring_num > (unsigned int)i) 
#line 2872 
                                             goto ldv_57674; else 
#line 2875 
                                                                  goto ldv_57673;
  ldv_57673: 
#line 2876 
  ;
  
#line 2880 
  enable_irq((unsigned int)irq);
  return_label: 
#line 2881 
                return;
}


#line 2897  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int rx_intr_handler(struct ring_info *ring_data, int budget)
{
  int __retres;
  int get_block;
  int put_block;
  struct rx_curr_get_info get_info;
  struct rx_curr_get_info put_info;
  struct RxD_t *rxdp;
  struct sk_buff *skb;
  int i;
  struct RxD1 *rxdp1;
  struct RxD3 *rxdp3;
  int tmp;
  
#line 2903 
  int pkt_cnt = 0;
  
#line 2903 
  int napi_pkts = 0;
  
#line 2908 
  if (budget <= 0) {
    
#line 2909 
    __retres = napi_pkts;
    
#line 2909 
    goto return_label;
  }
  else ;
  
#line 2911 
  get_info = ring_data->rx_curr_get_info;
  
#line 2912 
  get_block = (int)get_info.block_index;
  
#line 2913 
  memcpy((void *)(& put_info),(void const *)(& ring_data->rx_curr_put_info),12UL);
  
#line 2914 
  put_block = (int)put_info.block_index;
  
#line 2915 
  rxdp = (struct RxD_t *)(ring_data->rx_blocks[get_block].rxds + get_info.offset)->virt_addr;
  
#line 2917 
  goto ldv_57693;
  ldv_57692: 
#line 2918 
  ;
  
#line 2922 
  if (get_block == put_block && get_info.offset + 1U == put_info.offset) {
    
#line 2924 
    if (debug_level > 3) 
#line 2924 
                         printk("\001",(char *)(& (ring_data->dev)->name)); else ;
    
#line 2926 
    goto ldv_57691;
  }
  else ;
  
#line 2928 
  skb = (struct sk_buff *)rxdp->Host_Control;
  
#line 2929 
  if (skb == (struct sk_buff *)0) {
    
#line 2930 
    if (debug_level >= 0) 
#line 2930 
                          printk("\001",(char *)(& (ring_data->dev)->name)); else ;
    
#line 2932 
    __retres = 0;
    
#line 2932 
    goto return_label;
  }
  else ;
  
#line 2934 
  if (ring_data->rxd_mode == 0) {
    
#line 2935 
    rxdp1 = (struct RxD1 *)rxdp;
    
#line 2936 
    pci_unmap_single(ring_data->pdev,rxdp1->Buffer0_ptr,(unsigned long)(ring_data->mtu + 22U),2);
  }
  else 
    
#line 2943 
    if (ring_data->rxd_mode == 1) {
      
#line 2944 
      rxdp3 = (struct RxD3 *)rxdp;
      
#line 2945 
      pci_dma_sync_single_for_cpu(ring_data->pdev,rxdp3->Buffer0_ptr,40UL,2);
      
#line 2949 
      pci_unmap_single(ring_data->pdev,rxdp3->Buffer2_ptr,(unsigned long)(ring_data->mtu + 4U),2);
    }
    else ;
  
#line 2954 
  __builtin_prefetch((void const *)skb->data);
  
#line 2955 
  rx_osm_handler(ring_data,rxdp);
  
#line 2956 
  get_info.offset += 1U;
  
#line 2957 
  ring_data->rx_curr_get_info.offset = get_info.offset;
  
#line 2958 
  rxdp = (struct RxD_t *)(ring_data->rx_blocks[get_block].rxds + get_info.offset)->virt_addr;
  
#line 2960 
  if (get_info.offset == (unsigned int)rxd_count[ring_data->rxd_mode]) {
    
#line 2961 
    get_info.offset = 0U;
    
#line 2962 
    ring_data->rx_curr_get_info.offset = get_info.offset;
    
#line 2963 
    get_block += 1;
    
#line 2964 
    if (ring_data->block_count == get_block) 
#line 2965 
                                             get_block = 0; else ;
    
#line 2966 
    ring_data->rx_curr_get_info.block_index = (unsigned int)get_block;
    
#line 2967 
    rxdp = (struct RxD_t *)ring_data->rx_blocks[get_block].block_virt_addr;
  }
  else ;
  
#line 2970 
  if ((unsigned int)(ring_data->nic)->config.napi != 0U) {
    
#line 2971 
    budget -= 1;
    
#line 2972 
    napi_pkts += 1;
    
#line 2973 
    if (budget == 0) 
#line 2974 
                     goto ldv_57691; else ;
  }
  else ;
  
#line 2976 
  pkt_cnt += 1;
  
#line 2977 
  if (indicate_max_pkts != 0U && (unsigned int)pkt_cnt > indicate_max_pkts) 
    
#line 2978 
    goto ldv_57691; else ;
  ldv_57693: 
#line 2979 
  ;
  
#line 2917 
  tmp = RXD_IS_UP2DT(rxdp);
  
#line 2917 
  if (tmp != 0) 
#line 2919 
                goto ldv_57692; else 
#line 2922 
                                     goto ldv_57691;
  ldv_57691: 
#line 2923 
  ;
  
#line 2980 
  if ((unsigned int)ring_data->lro != 0U) {
    
#line 2982 
    i = 0;
    
#line 2982 
    goto ldv_57696;
    ldv_57695: 
#line 2983 
    ;
    {
      
#line 2983 
      struct lro *lro = & ring_data->lro0_n[i];
      
#line 2984 
      if (lro->in_use != 0) {
        
#line 2985 
        update_L3L4_header(ring_data->nic,lro);
        
#line 2986 
        queue_rx_frame(lro->parent,(unsigned short)((int)lro->vlan_tag));
        
#line 2987 
        clear_lro_session(lro);
      }
      else ;
    }
    
#line 2982 
    i += 1;
    ldv_57696: 
#line 2983 
    ;
    
#line 2982 
    if (i <= 31) 
#line 2984 
                 goto ldv_57695; else 
#line 2987 
                                      goto ldv_57697;
    ldv_57697: 
#line 2988 
    ;
  }
  else ;
  
#line 2991 
  __retres = napi_pkts;
  return_label: 
#line 2991 
                return __retres;
}


#line 3006  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void tx_intr_handler(struct fifo_info *fifo_data)
{
  struct tx_curr_get_info get_info;
  struct tx_curr_get_info put_info;
  struct TxD *txdlp;
  u8 err_mask;
  int tmp;
  
#line 3008 
  struct s2io_nic *nic = fifo_data->nic;
  
#line 3010 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 3012 
  int pkt_cnt = 0;
  
#line 3013 
  unsigned long flags = 0UL;
  
#line 3015 
  struct stat_block *stats = nic->mac_control.stats_info;
  
#line 3016 
  struct swStat *swstats = & stats->sw_stat;
  
#line 3018 
  tmp = ldv___ldv_spin_trylock_76(& fifo_data->tx_lock);
  
#line 3018 
  if (tmp == 0) 
#line 3019 
                goto return_label; else ;
  
#line 3021 
  get_info = fifo_data->tx_curr_get_info;
  
#line 3022 
  memcpy((void *)(& put_info),(void const *)(& fifo_data->tx_curr_put_info),8UL);
  
#line 3023 
  txdlp = (struct TxD *)(fifo_data->list_info + get_info.offset)->list_virt_addr;
  
#line 3024 
  goto ldv_57720;
  ldv_57719: 
#line 3025 
  ;
  
#line 3028 
  if ((txdlp->Control_1 & 4222124650659840ULL) != 0ULL) {
    unsigned long long err;
    
#line 3030 
    err = txdlp->Control_1 & 4222124650659840ULL;
    
#line 3031 
    if ((err & 1ULL) != 0ULL) 
#line 3032 
                              swstats->parity_err_cnt += 1ULL; else ;
    
#line 3036 
    err_mask = (unsigned char)(err >> 48);
    
#line 3037 
    switch ((int)err_mask) {
      case 2: 
#line 3038 
      ;
      
#line 3039 
      swstats->tx_buf_abort_cnt += 1ULL;
      
#line 3040 
      goto ldv_57713;
      case 3: 
#line 3042 
      ;
      
#line 3043 
      swstats->tx_desc_abort_cnt += 1ULL;
      
#line 3044 
      goto ldv_57713;
      case 7: 
#line 3046 
      ;
      
#line 3047 
      swstats->tx_parity_err_cnt += 1ULL;
      
#line 3048 
      goto ldv_57713;
      case 10: 
#line 3050 
      ;
      
#line 3051 
      swstats->tx_link_loss_cnt += 1ULL;
      
#line 3052 
      goto ldv_57713;
      case 15: 
#line 3054 
      ;
      
#line 3055 
      swstats->tx_list_proc_err_cnt += 1ULL;
      
#line 3056 
      goto ldv_57713;
    }
    ldv_57713: 
#line 3058 
    ;
  }
  else ;
  
#line 3060 
  skb = s2io_txdl_getskb(fifo_data,txdlp,(int)get_info.offset);
  
#line 3061 
  if (skb == (struct sk_buff *)0) {
    
#line 3062 
    ldv_spin_unlock_irqrestore_77(& fifo_data->tx_lock,flags);
    
#line 3063 
    if (debug_level >= 0) 
#line 3063 
                          printk("\001","tx_intr_handler"); else ;
    
#line 3065 
    goto return_label;
  }
  else ;
  
#line 3067 
  pkt_cnt += 1;
  
#line 3070 
  swstats->mem_freed += (unsigned long long)skb->truesize;
  
#line 3071 
  dev_kfree_skb_irq(skb);
  
#line 3073 
  get_info.offset += 1U;
  
#line 3074 
  if (get_info.offset == get_info.fifo_len + 1U) 
#line 3075 
                                                 get_info.offset = 0U; else ;
  
#line 3076 
  txdlp = (struct TxD *)(fifo_data->list_info + get_info.offset)->list_virt_addr;
  
#line 3077 
  fifo_data->tx_curr_get_info.offset = get_info.offset;
  ldv_57720: 
#line 3078 
  ;
  
#line 3024 
  if (((txdlp->Control_1 & 72057594037927936ULL) == 0ULL && get_info.offset != put_info.offset) && txdlp->Host_Control != 0ULL) 
    
#line 3027 
    goto ldv_57719; else 
#line 3030 
                         goto ldv_57721;
  ldv_57721: 
#line 3031 
  ;
  
#line 3080 
  s2io_wake_tx_queue(fifo_data,pkt_cnt,(unsigned char)((int)nic->config.multiq));
  
#line 3082 
  ldv_spin_unlock_irqrestore_78(& fifo_data->tx_lock,flags);
  return_label: 
#line 3083 
                return;
}


#line 3095  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_mdio_write(u32 mmd_type, u64 addr, u16 value, struct net_device *dev)
{
  u64 val64;
  
#line 3099 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 3100 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 3103 
  val64 = (addr << 48) | ((unsigned long long)mmd_type << 40);
  
#line 3106 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3107 
  val64 |= 224ULL;
  
#line 3108 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3109 
  __const_udelay(429500UL);
  
#line 3112 
  val64 = (((addr << 48) | ((unsigned long long)mmd_type << 40)) | ((unsigned long long)value << 16)) | 4ULL;
  
#line 3117 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3118 
  val64 |= 224ULL;
  
#line 3119 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3120 
  __const_udelay(429500UL);
  
#line 3122 
  val64 = ((addr << 48) | ((unsigned long long)mmd_type << 40)) | 12ULL;
  
#line 3126 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3127 
  val64 |= 224ULL;
  
#line 3128 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3129 
  __const_udelay(429500UL);
  
#line 3131 
  return;
}


#line 3141  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static u64 s2io_mdio_read(u32 mmd_type, u64 addr, struct net_device *dev)
{
  
#line 3143 
  u64 val64 = 0ULL;
  
#line 3144 
  u64 rval64 = 0ULL;
  
#line 3145 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 3146 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 3149 
  val64 = ((addr << 48) | ((unsigned long long)mmd_type << 40)) | val64;
  
#line 3152 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3153 
  val64 |= 224ULL;
  
#line 3154 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3155 
  __const_udelay(429500UL);
  
#line 3158 
  val64 = ((addr << 48) | ((unsigned long long)mmd_type << 40)) | 12ULL;
  
#line 3162 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3163 
  val64 |= 224ULL;
  
#line 3164 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mdio_control));
  
#line 3165 
  __const_udelay(429500UL);
  
#line 3168 
  rval64 = (u64)readq((void const volatile *)(& bar0->mdio_control));
  
#line 3169 
  rval64 &= 4294901760ULL;
  
#line 3170 
  rval64 >>= 16;
  
#line 3171 
  return rval64;
}


#line 3184  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_chk_xpak_counter(u64 *counter, u64 *regs_stat, u32 index, u16 flag, u16 type)
{
  u64 val64;
  int i;
  
#line 3187 
  u64 mask = 3ULL;
  
#line 3190 
  i = 0;
  
#line 3190 
  goto ldv_57751;
  ldv_57750: 
#line 3191 
  ;
  
#line 3191 
  mask <<= 2;
  
#line 3190 
  i += 1;
  ldv_57751: 
#line 3191 
  ;
  
#line 3190 
  if ((unsigned int)i < index) 
#line 3192 
                               goto ldv_57750; else 
#line 3195 
                                                    goto ldv_57752;
  ldv_57752: 
#line 3196 
  ;
  
#line 3193 
  if ((unsigned int)flag != 0U) {
    
#line 3194 
    *counter += 1ULL;
    
#line 3195 
    val64 = *regs_stat & mask;
    
#line 3196 
    val64 >>= index * 2U;
    
#line 3197 
    val64 += 1ULL;
    
#line 3198 
    if (val64 == 3ULL) {
      
#line 3199 
      switch ((int)type) {
        case 1: 
#line 3200 
        ;
        
#line 3201 
        if (debug_level >= 0) 
#line 3201 
                              printk("\001"); else ;
        
#line 3203 
        if (debug_level >= 0) 
#line 3203 
                              printk("\001"); else ;
        
#line 3205 
        goto ldv_57754;
        case 2: 
#line 3206 
        ;
        
#line 3207 
        if (debug_level >= 0) 
#line 3207 
                              printk("\001"); else ;
        
#line 3209 
        if (debug_level >= 0) 
#line 3209 
                              printk("\001"); else ;
        
#line 3211 
        goto ldv_57754;
        case 3: 
#line 3212 
        ;
        
#line 3213 
        if (debug_level >= 0) 
#line 3213 
                              printk("\001"); else ;
        
#line 3215 
        if (debug_level >= 0) 
#line 3215 
                              printk("\001"); else ;
        
#line 3217 
        goto ldv_57754;
        default: 
#line 3218 
        ;
        
#line 3219 
        if (debug_level >= 0) 
#line 3219 
                              printk("\001"); else ;
      }
      ldv_57754: 
#line 3222 
      ;
      
#line 3222 
      val64 = 0ULL;
    }
    else ;
    
#line 3224 
    val64 <<= index * 2U;
    
#line 3225 
    *regs_stat = (*regs_stat & ~ mask) | val64;
  }
  else 
#line 3228 
       *regs_stat &= ~ mask;
  
#line 3229 
  return;
}


#line 3239  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_updt_xpak_counter(struct net_device *dev)
{
  
#line 3241 
  u16 flag = (unsigned short)0U;
  
#line 3242 
  u16 type = (unsigned short)0U;
  
#line 3243 
  u16 val16 = (unsigned short)0U;
  
#line 3244 
  u64 val64 = 0ULL;
  
#line 3245 
  u64 addr = 0ULL;
  
#line 3247 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 3248 
  struct stat_block *stats = sp->mac_control.stats_info;
  
#line 3249 
  struct xpakStat *xstats = & stats->xpak_stat;
  
#line 3252 
  addr = 0ULL;
  
#line 3253 
  val64 = 0ULL;
  
#line 3254 
  val64 = s2io_mdio_read(1U,addr,dev);
  
#line 3255 
  if (val64 == 65535ULL || val64 == 0ULL) {
    
#line 3256 
    if (debug_level >= 0) 
#line 3256 
                          printk("\001",val64); else ;
    
#line 3259 
    goto return_label;
  }
  else ;
  
#line 3263 
  if (val64 != 8256ULL) {
    
#line 3264 
    if (debug_level >= 0) 
#line 3264 
                          printk("\001",val64,8256); else ;
    
#line 3267 
    goto return_label;
  }
  else ;
  
#line 3271 
  addr = 41216ULL;
  
#line 3272 
  s2io_mdio_write(1U,addr,(unsigned short)((int)val16),dev);
  
#line 3273 
  val64 = s2io_mdio_read(1U,addr,dev);
  
#line 3276 
  addr = 41072ULL;
  
#line 3277 
  val64 = 0ULL;
  
#line 3278 
  val64 = s2io_mdio_read(1U,addr,dev);
  
#line 3280 
  flag = (unsigned short)((unsigned int)((unsigned short)val64) & 128U);
  
#line 3281 
  type = (unsigned short)1U;
  
#line 3282 
  s2io_chk_xpak_counter(& xstats->alarm_transceiver_temp_high,& xstats->xpak_regs_stat,0U,(unsigned short)((int)flag),(unsigned short)((int)type));
  
#line 3286 
  if ((val64 & 64ULL) != 0ULL) 
#line 3287 
                               xstats->alarm_transceiver_temp_low += 1ULL; else ;
  
#line 3289 
  flag = (unsigned short)((unsigned int)((unsigned short)val64) & 8U);
  
#line 3290 
  type = (unsigned short)2U;
  
#line 3291 
  s2io_chk_xpak_counter(& xstats->alarm_laser_bias_current_high,& xstats->xpak_regs_stat,2U,(unsigned short)((int)flag),(unsigned short)((int)type));
  
#line 3295 
  if ((val64 & 4ULL) != 0ULL) 
#line 3296 
                              xstats->alarm_laser_bias_current_low += 1ULL; else ;
  
#line 3298 
  flag = (unsigned short)((unsigned int)((unsigned short)val64) & 2U);
  
#line 3299 
  type = (unsigned short)3U;
  
#line 3300 
  s2io_chk_xpak_counter(& xstats->alarm_laser_output_power_high,& xstats->xpak_regs_stat,4U,(unsigned short)((int)flag),(unsigned short)((int)type));
  
#line 3304 
  if ((val64 & 1ULL) != 0ULL) 
#line 3305 
                              xstats->alarm_laser_output_power_low += 1ULL; else ;
  
#line 3308 
  addr = 41076ULL;
  
#line 3309 
  val64 = 0ULL;
  
#line 3310 
  val64 = s2io_mdio_read(1U,addr,dev);
  
#line 3312 
  if ((val64 & 128ULL) != 0ULL) 
#line 3313 
                                xstats->warn_transceiver_temp_high += 1ULL; else ;
  
#line 3315 
  if ((val64 & 64ULL) != 0ULL) 
#line 3316 
                               xstats->warn_transceiver_temp_low += 1ULL; else ;
  
#line 3318 
  if ((val64 & 8ULL) != 0ULL) 
#line 3319 
                              xstats->warn_laser_bias_current_high += 1ULL; else ;
  
#line 3321 
  if ((val64 & 4ULL) != 0ULL) 
#line 3322 
                              xstats->warn_laser_bias_current_low += 1ULL; else ;
  
#line 3324 
  if ((val64 & 2ULL) != 0ULL) 
#line 3325 
                              xstats->warn_laser_output_power_high += 1ULL; else ;
  
#line 3327 
  if ((val64 & 1ULL) != 0ULL) 
#line 3328 
                              xstats->warn_laser_output_power_low += 1ULL; else ;
  return_label: 
#line 3329 
                return;
}


#line 3342  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int wait_for_cmd_complete(void *addr, u64 busy_bit, int bit_state)
{
  int __retres;
  u64 val64;
  int tmp_1;
  
#line 3345 
  int ret = -1;
  
#line 3345 
  int cnt = 0;
  
#line 3345 
  int delay = 1;
  
#line 3348 
  if ((unsigned int)bit_state + 4294967295U > 1U) {
    
#line 3349 
    __retres = -1;
    
#line 3349 
    goto return_label;
  }
  else ;
  ldv_57783: 
#line 3350 
  ;
  
#line 3352 
  val64 = (u64)readq((void const volatile *)addr);
  
#line 3353 
  if (bit_state == 1) {
    
#line 3354 
    if ((val64 & busy_bit) == 0ULL) {
      
#line 3355 
      ret = 0;
      
#line 3356 
      goto ldv_57778;
    }
    else ;
  }
  else 
    
#line 3359 
    if ((val64 & busy_bit) != 0ULL) {
      
#line 3360 
      ret = 0;
      
#line 3361 
      goto ldv_57778;
    }
    else ;
  
#line 3365 
  tmp_1 = preempt_count();
  
#line 3365 
  if (((unsigned long)tmp_1 & 2096896UL) != 0UL) 
    
#line 3366 
    if (0 != 0 && delay <= 5) 
      
#line 3366 
      if (0 != 0) 
        
#line 3366 
        if (delay * 1000 > 19999) 
#line 3366 
                                  __bad_udelay(); else 
#line 3366 
                                                       __const_udelay((unsigned long)delay * 4295000UL);
      else 
#line 3366 
           __udelay((unsigned long)(delay * 1000));
    else {
      
#line 3366 
      unsigned long __ms = (unsigned long)delay;
      {
        unsigned long tmp_0;
        
#line 3366 
        goto ldv_57781;
        ldv_57780: 
#line 3367 
        ;
        
#line 3366 
        __const_udelay(4295000UL);
        ldv_57781: 
#line 3368 
        ;
        
#line 3366 
        tmp_0 = __ms;
        
#line 3366 
        __ms -= 1UL;
        
#line 3366 
        ;
        
#line 3366 
        if (tmp_0 != 0UL) 
#line 3368 
                          goto ldv_57780; else 
#line 3371 
                                               goto ldv_57782;
        ldv_57782: 
#line 3372 
        ;
      }
    }
  else 
#line 3368 
       msleep((unsigned int)delay);
  
#line 3370 
  cnt += 1;
  
#line 3370 
  if (cnt > 9) 
#line 3371 
               delay = 50; else ;
  
#line 3372 
  if (cnt <= 19) 
#line 3374 
                 goto ldv_57783; else 
#line 3377 
                                      goto ldv_57778;
  ldv_57778: 
#line 3378 
  ;
  
#line 3373 
  __retres = ret;
  return_label: 
#line 3373 
                return __retres;
}


#line 3381  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static u16 check_pci_device_id(u16 id)
{
  u16 __retres;
  
#line 3383 
  switch ((int)id) {
    case 22322: 
#line 3384 
    ;
    case 22578: 
#line 3385 
    ;
    
#line 3386 
    __retres = (unsigned short)2U;
    
#line 3386 
    goto return_label;
    case 22577: 
#line 3387 
    ;
    case 22321: 
#line 3388 
    ;
    
#line 3389 
    __retres = (unsigned short)1U;
    
#line 3389 
    goto return_label;
    default: 
#line 3390 
    ;
    
#line 3391 
    __retres = (unsigned short)65535U;
    
#line 3391 
    goto return_label;
  }
  return_label: 
#line 3383 
                return __retres;
}


#line 3405  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_reset(struct s2io_nic *sp)
{
  u64 val64;
  u16 subid;
  u16 pci_cmd;
  int i;
  u16 val16;
  unsigned long long up_cnt;
  unsigned long long down_cnt;
  unsigned long long up_time;
  unsigned long long down_time;
  unsigned long long reset_cnt;
  unsigned long long mem_alloc_cnt;
  unsigned long long mem_free_cnt;
  unsigned long long watchdog_cnt;
  struct stat_block *stats;
  struct swStat *swstats;
  char *tmp_0;
  u16 tmp_1;
  u16 tmp_2;
  
#line 3407 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 3417 
  if (debug_level > 0) {
    char const *tmp;
    
#line 3417 
    tmp = pci_name((struct pci_dev const *)sp->pdev);
    
#line 3417 
    printk("\001","s2io_reset",tmp);
  }
  else ;
  
#line 3421 
  pci_read_config_word((struct pci_dev const *)sp->pdev,98,& pci_cmd);
  
#line 3423 
  val64 = 11936127806833950720ULL;
  
#line 3424 
  writeq((unsigned long)val64,(void volatile *)(& bar0->sw_reset));
  
#line 3425 
  tmp_0 = strstr((char const *)(& sp->product_name),"CX4");
  
#line 3425 
  if (tmp_0 != (char *)0) 
#line 3426 
                          msleep(750U); else ;
  
#line 3427 
  msleep(250U);
  
#line 3428 
  i = 0;
  
#line 3428 
  goto ldv_57814;
  ldv_57813: 
#line 3429 
  ;
  
#line 3431 
  pci_restore_state(sp->pdev);
  
#line 3432 
  pci_save_state(sp->pdev);
  
#line 3433 
  pci_read_config_word((struct pci_dev const *)sp->pdev,2,& val16);
  
#line 3434 
  tmp_1 = check_pci_device_id((unsigned short)((int)val16));
  
#line 3434 
  if ((unsigned int)tmp_1 != 65535U) 
#line 3435 
                                     goto ldv_57812; else ;
  
#line 3436 
  msleep(200U);
  
#line 3428 
  i += 1;
  ldv_57814: 
#line 3429 
  ;
  
#line 3428 
  if (i <= 99) 
#line 3430 
               goto ldv_57813; else 
#line 3433 
                                    goto ldv_57812;
  ldv_57812: 
#line 3434 
  ;
  
#line 3439 
  tmp_2 = check_pci_device_id((unsigned short)((int)val16));
  
#line 3439 
  if ((unsigned int)tmp_2 == 65535U) {
    
#line 3440 
    if (debug_level >= 0) 
#line 3440 
                          printk("\001","s2io_reset"); else ;
  }
  else ;
  
#line 3442 
  pci_write_config_word((struct pci_dev const *)sp->pdev,98,(unsigned short)((int)pci_cmd));
  
#line 3444 
  s2io_init_pci(sp);
  
#line 3447 
  s2io_set_swapper(sp);
  
#line 3450 
  do_s2io_restore_unicast_mc(sp);
  
#line 3453 
  restore_xmsi_data(sp);
  
#line 3456 
  if ((unsigned int)sp->device_type == 2U) {
    
#line 3458 
    pci_write_config_word((struct pci_dev const *)sp->pdev,6,(unsigned short)32768);
    
#line 3461 
    pci_write_config_dword((struct pci_dev const *)sp->pdev,104,124U);
    
#line 3464 
    writeq(2UL,(void volatile *)(& bar0->txpic_int_reg));
  }
  else ;
  
#line 3468 
  memset((void *)(& sp->stats),0,184UL);
  
#line 3470 
  stats = sp->mac_control.stats_info;
  
#line 3471 
  swstats = & stats->sw_stat;
  
#line 3474 
  up_cnt = swstats->link_up_cnt;
  
#line 3475 
  down_cnt = swstats->link_down_cnt;
  
#line 3476 
  up_time = swstats->link_up_time;
  
#line 3477 
  down_time = swstats->link_down_time;
  
#line 3478 
  reset_cnt = swstats->soft_reset_cnt;
  
#line 3479 
  mem_alloc_cnt = swstats->mem_allocated;
  
#line 3480 
  mem_free_cnt = swstats->mem_freed;
  
#line 3481 
  watchdog_cnt = swstats->watchdog_timer_cnt;
  
#line 3483 
  memset((void *)stats,0,1416UL);
  
#line 3486 
  swstats->link_up_cnt = up_cnt;
  
#line 3487 
  swstats->link_down_cnt = down_cnt;
  
#line 3488 
  swstats->link_up_time = up_time;
  
#line 3489 
  swstats->link_down_time = down_time;
  
#line 3490 
  swstats->soft_reset_cnt = reset_cnt;
  
#line 3491 
  swstats->mem_allocated = mem_alloc_cnt;
  
#line 3492 
  swstats->mem_freed = mem_free_cnt;
  
#line 3493 
  swstats->watchdog_timer_cnt = watchdog_cnt;
  
#line 3496 
  subid = (sp->pdev)->subsystem_device;
  
#line 3497 
  if (((int)subid & 255) > 6 && (unsigned int)sp->device_type == 1U) {
    
#line 3499 
    val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
    
#line 3500 
    val64 |= 140737488355328ULL;
    
#line 3501 
    writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_control));
    
#line 3502 
    val64 = 293019865982173184ULL;
    
#line 3503 
    writeq((unsigned long)val64,(void volatile *)bar0 + 9984U);
  }
  else ;
  
#line 3510 
  if ((unsigned int)sp->device_type == 2U) {
    
#line 3511 
    val64 = (u64)readq((void const volatile *)(& bar0->pcc_err_reg));
    
#line 3512 
    writeq((unsigned long)val64,(void volatile *)(& bar0->pcc_err_reg));
  }
  else ;
  
#line 3515 
  sp->device_enabled_once = 0;
  
#line 3516 
  return;
}


#line 3528  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_set_swapper(struct s2io_nic *sp)
{
  int __retres;
  u64 val64;
  u64 valt;
  u64 valr;
  
#line 3530 
  struct net_device *dev = sp->dev;
  
#line 3531 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 3539 
  val64 = (u64)readq((void const volatile *)(& bar0->pif_rd_swapper_fb));
  
#line 3540 
  if (val64 != 81985529216486895ULL) {
    
#line 3541 
    int i = 0;
    
#line 3542 
    u64 const value[4U] = {14051231678186127555ULL, 9295430187107745921ULL, 4755801491078381634ULL, 0ULL};
    
#line 3549 
    goto ldv_57827;
    ldv_57826: 
#line 3550 
    ;
    
#line 3550 
    writeq((unsigned long)value[i],(void volatile *)(& bar0->swapper_ctrl));
    
#line 3551 
    val64 = (u64)readq((void const volatile *)(& bar0->pif_rd_swapper_fb));
    
#line 3552 
    if (val64 == 81985529216486895ULL) 
#line 3553 
                                       goto ldv_57825; else ;
    
#line 3554 
    i += 1;
    ldv_57827: 
#line 3555 
    ;
    
#line 3549 
    if (i <= 3) 
#line 3551 
                goto ldv_57826; else 
#line 3554 
                                     goto ldv_57825;
    ldv_57825: 
#line 3555 
    ;
    
#line 3556 
    if (i == 4) {
      
#line 3557 
      if (debug_level >= 0) 
#line 3557 
                            printk("\001",(char *)(& dev->name),val64); else ;
      
#line 3560 
      __retres = -1;
      
#line 3560 
      goto return_label;
    }
    else ;
    
#line 3562 
    valr = value[i];
  }
  else 
#line 3564 
       valr = (u64)readq((void const volatile *)(& bar0->swapper_ctrl));
  
#line 3567 
  valt = 81985529216486895ULL;
  
#line 3568 
  writeq((unsigned long)valt,(void volatile *)(& bar0->xmsi_address));
  
#line 3569 
  val64 = (u64)readq((void const volatile *)(& bar0->xmsi_address));
  
#line 3571 
  if (val64 != valt) {
    
#line 3572 
    int i_0 = 0;
    
#line 3573 
    u64 const value_0[4U] = {55102025238823680ULL, 36452109004144896ULL, 18649916234678784ULL, 0ULL};
    
#line 3580 
    goto ldv_57832;
    ldv_57831: 
#line 3581 
    ;
    
#line 3581 
    writeq((unsigned long)(value_0[i_0] | valr),(void volatile *)(& bar0->swapper_ctrl));
    
#line 3582 
    writeq((unsigned long)valt,(void volatile *)(& bar0->xmsi_address));
    
#line 3583 
    val64 = (u64)readq((void const volatile *)(& bar0->xmsi_address));
    
#line 3584 
    if (val64 == valt) 
#line 3585 
                       goto ldv_57830; else ;
    
#line 3586 
    i_0 += 1;
    ldv_57832: 
#line 3587 
    ;
    
#line 3580 
    if (i_0 <= 3) 
#line 3582 
                  goto ldv_57831; else 
#line 3585 
                                       goto ldv_57830;
    ldv_57830: 
#line 3586 
    ;
    
#line 3588 
    if (i_0 == 4) {
      
#line 3589 
      unsigned long long x = val64;
      
#line 3590 
      if (debug_level >= 0) 
#line 3590 
                            printk("\001",x); else ;
      
#line 3592 
      __retres = -1;
      
#line 3592 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 3595 
  val64 = (u64)readq((void const volatile *)(& bar0->swapper_ctrl));
  
#line 3596 
  val64 &= 18446462598732840960ULL;
  
#line 3623 
  val64 |= 279280122642432ULL;
  
#line 3638 
  if ((unsigned int)sp->config.intr_type == 0U) 
#line 3639 
                                                val64 |= 4194304ULL; else ;
  
#line 3640 
  writeq((unsigned long)val64,(void volatile *)(& bar0->swapper_ctrl));
  
#line 3642 
  val64 = (u64)readq((void const volatile *)(& bar0->swapper_ctrl));
  
#line 3648 
  val64 = (u64)readq((void const volatile *)(& bar0->pif_rd_swapper_fb));
  
#line 3649 
  if (val64 != 81985529216486895ULL) {
    
#line 3651 
    if (debug_level >= 0) 
#line 3651 
                          printk("\001",(char *)(& dev->name),val64); else ;
    
#line 3654 
    __retres = -1;
    
#line 3654 
    goto return_label;
  }
  else ;
  
#line 3657 
  __retres = 0;
  return_label: 
#line 3657 
                return __retres;
}


#line 3660  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int wait_for_msix_trans(struct s2io_nic *nic, int i)
{
  u64 val64;
  
#line 3662 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 3664 
  int ret = 0;
  
#line 3664 
  int cnt = 0;
  ldv_57847: 
#line 3665 
  ;
  
#line 3667 
  val64 = (u64)readq((void const volatile *)(& bar0->xmsi_access));
  
#line 3668 
  if ((val64 & 281474976710656ULL) == 0ULL) 
#line 3669 
                                            goto ldv_57842; else ;
  
#line 3670 
  if (1) 
#line 3670 
         __const_udelay(4295000UL);
  else {
    
#line 3670 
    unsigned long __ms = 1UL;
    {
      unsigned long tmp_0;
      
#line 3670 
      goto ldv_57845;
      ldv_57844: 
#line 3671 
      ;
      
#line 3670 
      __const_udelay(4295000UL);
      ldv_57845: 
#line 3672 
      ;
      
#line 3670 
      tmp_0 = __ms;
      
#line 3670 
      __ms -= 1UL;
      
#line 3670 
      ;
      
#line 3670 
      if (tmp_0 != 0UL) 
#line 3672 
                        goto ldv_57844; else 
#line 3675 
                                             goto ldv_57846;
      ldv_57846: 
#line 3676 
      ;
    }
  }
  
#line 3671 
  cnt += 1;
  
#line 3672 
  if (cnt <= 4) 
#line 3674 
                goto ldv_57847; else 
#line 3677 
                                     goto ldv_57842;
  ldv_57842: 
#line 3678 
  ;
  
#line 3673 
  if (cnt == 5) {
    
#line 3674 
    if (debug_level >= 0) 
#line 3674 
                          printk("\001",i); else ;
    
#line 3675 
    ret = 1;
  }
  else ;
  
#line 3678 
  return ret;
}


#line 3681  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void restore_xmsi_data(struct s2io_nic *nic)
{
  u64 val64;
  int i;
  int msix_index;
  int tmp;
  
#line 3683 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 3687 
  if ((unsigned int)nic->device_type == 1U) 
#line 3688 
                                            goto return_label; else ;
  
#line 3690 
  i = 0;
  
#line 3690 
  goto ldv_57858;
  ldv_57857: 
#line 3691 
  ;
  
#line 3691 
  if (i != 0) 
#line 3691 
              msix_index = (i + -1) * 8 + 1; else 
#line 3691 
                                                  msix_index = 0;
  
#line 3692 
  writeq((unsigned long)nic->msix_info[i].addr,(void volatile *)(& bar0->xmsi_address));
  
#line 3693 
  writeq((unsigned long)nic->msix_info[i].data,(void volatile *)(& bar0->xmsi_data));
  
#line 3694 
  val64 = ((unsigned long long)msix_index << 32) | 72339069014638592ULL;
  
#line 3695 
  writeq((unsigned long)val64,(void volatile *)(& bar0->xmsi_access));
  
#line 3696 
  tmp = wait_for_msix_trans(nic,msix_index);
  
#line 3696 
  if (tmp != 0) {
    
#line 3697 
    if (debug_level >= 0) 
#line 3697 
                          printk("\001","restore_xmsi_data",msix_index); else ;
    
#line 3699 
    goto ldv_57856;
  }
  else ;
  ldv_57856: 
#line 3701 
  ;
  
#line 3690 
  i += 1;
  ldv_57858: 
#line 3691 
  ;
  
#line 3690 
  if (i <= 8) 
#line 3692 
              goto ldv_57857; else 
#line 3695 
                                   goto ldv_57859;
  ldv_57859: 
#line 3696 
  ;
  return_label: 
#line 3697 
                return;
}


#line 3704  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void store_xmsi_data(struct s2io_nic *nic)
{
  u64 val64;
  u64 addr;
  u64 data;
  int i;
  int msix_index;
  int tmp;
  
#line 3706 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 3710 
  if ((unsigned int)nic->device_type == 1U) 
#line 3711 
                                            goto return_label; else ;
  
#line 3714 
  i = 0;
  
#line 3714 
  goto ldv_57872;
  ldv_57871: 
#line 3715 
  ;
  
#line 3715 
  if (i != 0) 
#line 3715 
              msix_index = (i + -1) * 8 + 1; else 
#line 3715 
                                                  msix_index = 0;
  
#line 3716 
  val64 = ((unsigned long long)msix_index << 32) | 281474976710656ULL;
  
#line 3717 
  writeq((unsigned long)val64,(void volatile *)(& bar0->xmsi_access));
  
#line 3718 
  tmp = wait_for_msix_trans(nic,msix_index);
  
#line 3718 
  if (tmp != 0) {
    
#line 3719 
    if (debug_level >= 0) 
#line 3719 
                          printk("\001","store_xmsi_data",msix_index); else ;
    
#line 3721 
    goto ldv_57870;
  }
  else ;
  
#line 3723 
  addr = (u64)readq((void const volatile *)(& bar0->xmsi_address));
  
#line 3724 
  data = (u64)readq((void const volatile *)(& bar0->xmsi_data));
  
#line 3725 
  if (addr != 0ULL && data != 0ULL) {
    
#line 3726 
    nic->msix_info[i].addr = addr;
    
#line 3727 
    nic->msix_info[i].data = data;
  }
  else ;
  ldv_57870: 
#line 3729 
  ;
  
#line 3714 
  i += 1;
  ldv_57872: 
#line 3715 
  ;
  
#line 3714 
  if (i <= 8) 
#line 3716 
              goto ldv_57871; else 
#line 3719 
                                   goto ldv_57873;
  ldv_57873: 
#line 3720 
  ;
  return_label: 
#line 3721 
                return;
}


#line 3732  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_enable_msi_x(struct s2io_nic *nic)
{
  int __retres;
  u64 rx_mat;
  u16 msi_control;
  int ret;
  int i;
  int j;
  int size;
  
#line 3734 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 3737 
  int msix_indx = 1;
  
#line 3739 
  struct stat_block *stats = nic->mac_control.stats_info;
  
#line 3740 
  struct swStat *swstats = & stats->sw_stat;
  
#line 3742 
  size = (int)((unsigned long)nic->num_entries * (unsigned long)8U);
  
#line 3743 
  nic->entries = (struct msix_entry *)kzalloc((unsigned long)size,208U);
  
#line 3744 
  if (nic->entries == (struct msix_entry *)0) {
    
#line 3745 
    if (debug_level > 1) 
#line 3745 
                         printk("\001","s2io_enable_msi_x"); else ;
    
#line 3747 
    swstats->mem_alloc_fail_cnt += 1ULL;
    
#line 3748 
    __retres = -12;
    
#line 3748 
    goto return_label;
  }
  else ;
  
#line 3750 
  swstats->mem_allocated += (unsigned long long)size;
  
#line 3752 
  size = (int)((unsigned long)nic->num_entries * (unsigned long)24U);
  
#line 3753 
  nic->s2io_entries = (struct s2io_msix_entry *)kzalloc((unsigned long)size,208U);
  
#line 3754 
  if (nic->s2io_entries == (struct s2io_msix_entry *)0) {
    
#line 3755 
    if (debug_level > 1) 
#line 3755 
                         printk("\001","s2io_enable_msi_x"); else ;
    
#line 3757 
    swstats->mem_alloc_fail_cnt += 1ULL;
    
#line 3758 
    kfree((void const *)nic->entries);
    
#line 3760 
    swstats->mem_freed += (unsigned long long)((unsigned long)nic->num_entries * 8UL);
    
#line 3761 
    __retres = -12;
    
#line 3761 
    goto return_label;
  }
  else ;
  
#line 3763 
  swstats->mem_allocated += (unsigned long long)size;
  
#line 3765 
  (nic->entries)->entry = (unsigned short)0U;
  
#line 3766 
  (nic->s2io_entries)->entry = (unsigned short)0U;
  
#line 3767 
  (nic->s2io_entries)->in_use = (unsigned char)165U;
  
#line 3768 
  (nic->s2io_entries)->type = (unsigned char)1U;
  
#line 3769 
  (nic->s2io_entries)->arg = (void *)(& nic->mac_control.fifos);
  
#line 3771 
  i = 1;
  
#line 3771 
  goto ldv_57889;
  ldv_57888: 
#line 3772 
  ;
  
#line 3772 
  (nic->entries + i)->entry = (unsigned short)((unsigned int)((unsigned short)(i + -1)) * 8U + 1U);
  
#line 3773 
  (nic->s2io_entries + i)->entry = (unsigned short)((unsigned int)((unsigned short)(i + -1)) * 8U + 1U);
  
#line 3774 
  (nic->s2io_entries + i)->arg = (void *)0;
  
#line 3775 
  (nic->s2io_entries + i)->in_use = (unsigned char)0U;
  
#line 3771 
  i += 1;
  ldv_57889: 
#line 3772 
  ;
  
#line 3771 
  if (nic->num_entries > i) 
#line 3773 
                            goto ldv_57888; else 
#line 3776 
                                                 goto ldv_57890;
  ldv_57890: 
#line 3777 
  ;
  
#line 3778 
  rx_mat = (u64)readq((void const volatile *)(& bar0->rx_mat));
  
#line 3779 
  j = 0;
  
#line 3779 
  goto ldv_57892;
  ldv_57891: 
#line 3780 
  ;
  
#line 3780 
  rx_mat = ((unsigned long long)msix_indx << (7 - j) * 8) | rx_mat;
  
#line 3781 
  (nic->s2io_entries + ((unsigned int)j + 1U))->arg = (void *)(& nic->mac_control.rings[j]);
  
#line 3782 
  (nic->s2io_entries + ((unsigned int)j + 1U))->type = (unsigned char)2U;
  
#line 3783 
  (nic->s2io_entries + ((unsigned int)j + 1U))->in_use = (unsigned char)165U;
  
#line 3784 
  msix_indx += 8;
  
#line 3779 
  j += 1;
  ldv_57892: 
#line 3780 
  ;
  
#line 3779 
  if (nic->config.rx_ring_num > (unsigned int)j) 
#line 3781 
                                                 goto ldv_57891; else 
                                                                   
#line 3784 
                                                                   goto ldv_57893;
  ldv_57893: 
#line 3785 
  ;
  
#line 3786 
  writeq((unsigned long)rx_mat,(void volatile *)(& bar0->rx_mat));
  
#line 3787 
  readq((void const volatile *)(& bar0->rx_mat));
  
#line 3789 
  ret = pci_enable_msix_range(nic->pdev,nic->entries,nic->num_entries,nic->num_entries);
  
#line 3792 
  if (ret < 0) {
    
#line 3793 
    if (debug_level >= 0) 
#line 3793 
                          printk("\001"); else ;
    
#line 3794 
    kfree((void const *)nic->entries);
    
#line 3795 
    swstats->mem_freed += (unsigned long long)((unsigned long)nic->num_entries * 8UL);
    
#line 3797 
    kfree((void const *)nic->s2io_entries);
    
#line 3798 
    swstats->mem_freed += (unsigned long long)((unsigned long)nic->num_entries * 24UL);
    
#line 3800 
    nic->entries = (struct msix_entry *)0;
    
#line 3801 
    nic->s2io_entries = (struct s2io_msix_entry *)0;
    
#line 3802 
    __retres = -12;
    
#line 3802 
    goto return_label;
  }
  else ;
  
#line 3809 
  pci_read_config_word((struct pci_dev const *)nic->pdev,66,& msi_control);
  
#line 3810 
  msi_control = (unsigned short)((unsigned int)msi_control | 1U);
  
#line 3811 
  pci_write_config_word((struct pci_dev const *)nic->pdev,66,(unsigned short)((int)msi_control));
  
#line 3813 
  __retres = 0;
  return_label: 
#line 3813 
                return __retres;
}


#line 3817  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static irqreturn_t s2io_test_intr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  
#line 3819 
  struct s2io_nic *sp = (struct s2io_nic *)dev_id;
  
#line 3821 
  sp->msi_detected = 1;
  
#line 3822 
  __wake_up(& sp->msi_wait,3U,1,(void *)0);
  
#line 3824 
  __retres = IRQ_HANDLED;
  
#line 3824 
  return __retres;
}


#line 3828  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_test_msi(struct s2io_nic *sp)
{
  int __retres;
  int err;
  u64 val64;
  u64 saved64;
  
#line 3830 
  struct pci_dev *pdev = sp->pdev;
  
#line 3831 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 3835 
  err = ldv_request_irq_79((sp->entries + 1U)->vector,& s2io_test_intr,0UL,(char const *)(& sp->name),(void *)sp);
  
#line 3837 
  if (err != 0) {
    
#line 3838 
    if (debug_level >= 0) {
      char const *tmp;
      
#line 3838 
      ;
      
#line 3838 
      tmp = pci_name((struct pci_dev const *)pdev);
      
#line 3838 
      ;
      
#line 3838 
      printk("\001",(char *)(& (sp->dev)->name),tmp,pdev->irq);
    }
    else ;
    
#line 3840 
    __retres = err;
    
#line 3840 
    goto return_label;
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 3843 
    __init_waitqueue_head(& sp->msi_wait,"&sp->msi_wait",& __key);
  }
  
#line 3844 
  sp->msi_detected = 0;
  
#line 3846 
  val64 = (u64)readq((void const volatile *)(& bar0->scheduled_int_ctrl));
  
#line 3846 
  saved64 = val64;
  
#line 3847 
  val64 |= 4611686018427387904ULL;
  
#line 3848 
  val64 |= 9223372036854775808ULL;
  
#line 3849 
  val64 |= 281474976710656ULL;
  
#line 3850 
  writeq((unsigned long)val64,(void volatile *)(& bar0->scheduled_int_ctrl));
  {
    
#line 3852 
    long __ret = 25L;
    
#line 3852 
    __might_sleep("/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c",3852,0);
    {
      int tmp_4;
      {
        
#line 3852 
        bool __cond_0 = (_Bool)(sp->msi_detected != 0);
        
#line 3852 
        if ((int)__cond_0 != 0 && __ret == 0L) 
#line 3852 
                                               __ret = 1L; else ;
        
#line 3852 
        tmp_4 = ((int)__cond_0 != 0 || __ret == 0L) != 0;
      }
      
#line 3852 
      if (tmp_4 == 0) {
        long tmp_3;
        {
          wait_queue_t __wait;
          
#line 3852 
          long __ret_0 = 25L;
          
#line 3852 
          INIT_LIST_HEAD(& __wait.task_list);
          
#line 3852 
          __wait.flags = 0U;
          ldv_57918: 
#line 3855 
          ;
          {
            int tmp_2;
            
#line 3852 
            long __int = prepare_to_wait_event(& sp->msi_wait,& __wait,2);
            {
              
#line 3852 
              bool __cond = (_Bool)(sp->msi_detected != 0);
              
#line 3852 
              if ((int)__cond != 0 && __ret_0 == 0L) 
#line 3852 
                                                     __ret_0 = 1L; else ;
              
#line 3852 
              tmp_2 = ((int)__cond != 0 || __ret_0 == 0L) != 0;
            }
            
#line 3852 
            if (tmp_2 != 0) 
#line 3852 
                            goto ldv_57917; else ;
            
#line 3852 
            __ret_0 = schedule_timeout(__ret_0);
          }
          
#line 3852 
          goto ldv_57918;
          ldv_57917: 
#line 3853 
          ;
          
#line 3852 
          finish_wait(& sp->msi_wait,& __wait);
          __out_0: 
#line 3852 
          ;
          
#line 3852 
          tmp_3 = __ret_0;
        }
        
#line 3852 
        __ret = tmp_3;
      }
      else ;
    }
    
#line 3852 
    long tmp_5 = __ret;
  }
  
#line 3854 
  if (sp->msi_detected == 0) {
    
#line 3856 
    if (debug_level >= 0) {
      char const *tmp_5_0;
      
#line 3856 
      tmp_5_0 = pci_name((struct pci_dev const *)pdev);
      
#line 3856 
      ;
      
#line 3856 
      printk("\001",(char *)(& (sp->dev)->name),tmp_5_0);
    }
    else ;
    
#line 3860 
    err = -95;
  }
  else ;
  
#line 3863 
  ldv_free_irq_80((sp->entries + 1U)->vector,(void *)sp);
  
#line 3865 
  writeq((unsigned long)saved64,(void volatile *)(& bar0->scheduled_int_ctrl));
  
#line 3867 
  __retres = err;
  return_label: 
#line 3867 
                return __retres;
}


#line 3870  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void remove_msix_isr(struct s2io_nic *sp)
{
  int i;
  u16 msi_control;
  
#line 3875 
  i = 0;
  
#line 3875 
  goto ldv_57929;
  ldv_57928: 
#line 3876 
  ;
  
#line 3876 
  if ((unsigned int)(sp->s2io_entries + i)->in_use == 170U) {
    
#line 3877 
    int vector = (int)(sp->entries + i)->vector;
    
#line 3878 
    void *arg = (sp->s2io_entries + i)->arg;
    
#line 3879 
    ldv_free_irq_81((unsigned int)vector,arg);
  }
  else ;
  
#line 3875 
  i += 1;
  ldv_57929: 
#line 3876 
  ;
  
#line 3875 
  if (sp->num_entries > i) 
#line 3877 
                           goto ldv_57928; else 
#line 3880 
                                                goto ldv_57930;
  ldv_57930: 
#line 3881 
  ;
  
#line 3883 
  kfree((void const *)sp->entries);
  
#line 3884 
  kfree((void const *)sp->s2io_entries);
  
#line 3885 
  sp->entries = (struct msix_entry *)0;
  
#line 3886 
  sp->s2io_entries = (struct s2io_msix_entry *)0;
  
#line 3888 
  pci_read_config_word((struct pci_dev const *)sp->pdev,66,& msi_control);
  
#line 3889 
  msi_control = (unsigned short)((unsigned int)msi_control & 65534U);
  
#line 3890 
  pci_write_config_word((struct pci_dev const *)sp->pdev,66,(unsigned short)((int)msi_control));
  
#line 3892 
  pci_disable_msix(sp->pdev);
  
#line 3893 
  return;
}


#line 3895  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void remove_inta_isr(struct s2io_nic *sp)
{
  
#line 3897 
  ldv_free_irq_82((sp->pdev)->irq,(void *)sp->dev);
  
#line 3898 
  return;
}


#line 3916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_open(struct net_device *dev)
{
  int __retres;
  int tmp_0;
  
#line 3918 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 3919 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 3920 
  int err = 0;
  
#line 3926 
  netif_carrier_off(dev);
  
#line 3927 
  sp->last_link_state = (unsigned short)0U;
  
#line 3930 
  err = s2io_card_up(sp);
  
#line 3931 
  if (err != 0) {
    
#line 3932 
    if (debug_level >= 0) 
#line 3932 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 3934 
    goto hw_init_failed;
  }
  else ;
  
#line 3937 
  tmp_0 = do_s2io_prog_unicast(dev,dev->dev_addr);
  
#line 3937 
  if (tmp_0 == -1) {
    
#line 3938 
    if (debug_level >= 0) 
#line 3938 
                          printk("\001"); else ;
    
#line 3939 
    s2io_card_down(sp);
    
#line 3940 
    err = -19;
    
#line 3941 
    goto hw_init_failed;
  }
  else ;
  
#line 3943 
  s2io_start_all_tx_queue(sp);
  
#line 3944 
  __retres = 0;
  
#line 3944 
  goto return_label;
  hw_init_failed: 
#line 3946 
  ;
  
#line 3947 
  if ((unsigned int)sp->config.intr_type == 2U) {
    
#line 3948 
    if (sp->entries != (struct msix_entry *)0) {
      
#line 3949 
      kfree((void const *)sp->entries);
      
#line 3950 
      swstats->mem_freed += (unsigned long long)((unsigned long)sp->num_entries * 8UL);
    }
    else ;
    
#line 3953 
    if (sp->s2io_entries != (struct s2io_msix_entry *)0) {
      
#line 3954 
      kfree((void const *)sp->s2io_entries);
      
#line 3955 
      swstats->mem_freed += (unsigned long long)((unsigned long)sp->num_entries * 24UL);
    }
    else ;
  }
  else ;
  
#line 3959 
  __retres = err;
  return_label: 
#line 3959 
                return __retres;
}


#line 3975  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_close(struct net_device *dev)
{
  int __retres;
  u64 tmp64;
  int offset;
  int tmp_0;
  
#line 3977 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 3978 
  struct config_param *config = & sp->config;
  
#line 3985 
  tmp_0 = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 3985 
  if (tmp_0 == 0) {
    
#line 3986 
    __retres = 0;
    
#line 3986 
    goto return_label;
  }
  else ;
  
#line 3988 
  s2io_stop_all_tx_queue(sp);
  
#line 3990 
  offset = 1;
  
#line 3990 
  goto ldv_57949;
  ldv_57948: 
#line 3991 
  ;
  
#line 3991 
  tmp64 = do_s2io_read_unicast_mc(sp,offset);
  
#line 3992 
  if (tmp64 != 281474976710655ULL) 
#line 3993 
                                   do_s2io_delete_unicast_mc(sp,tmp64); else ;
  
#line 3990 
  offset += 1;
  ldv_57949: 
#line 3991 
  ;
  
#line 3990 
  if (config->max_mc_addr > offset) 
#line 3992 
                                    goto ldv_57948; else 
#line 3995 
                                                         goto ldv_57950;
  ldv_57950: 
#line 3996 
  ;
  
#line 3996 
  s2io_card_down(sp);
  
#line 3998 
  __retres = 0;
  return_label: 
#line 3998 
                return __retres;
}


#line 4014  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static netdev_tx_t s2io_xmit(struct sk_buff *skb, struct net_device *dev)
{
  netdev_tx_t __retres;
  u16 frg_cnt;
  u16 frg_len;
  u16 i;
  u16 queue;
  u16 queue_len;
  u16 put_off;
  u16 get_off;
  register u64 val64;
  struct TxD *txdp;
  struct TxFIFO_element *tx_fifo;
  int offload_type;
  int tmp_0;
  unsigned char *tmp_15;
  unsigned int tmp_17;
  int tmp_21;
  unsigned char *tmp_22;
  int tmp_28;
  
#line 4016 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 4021 
  unsigned long flags = 0UL;
  
#line 4022 
  u16 vlan_tag = (unsigned short)0U;
  
#line 4023 
  struct fifo_info *fifo = (struct fifo_info *)0;
  
#line 4024 
  int do_spin_lock = 1;
  
#line 4026 
  int enable_per_list_interrupt = 0;
  
#line 4027 
  struct config_param *config = & sp->config;
  
#line 4028 
  struct mac_info *mac_control = & sp->mac_control;
  
#line 4029 
  struct stat_block *stats = mac_control->stats_info;
  
#line 4030 
  struct swStat *swstats = & stats->sw_stat;
  
#line 4032 
  if (debug_level > 2) 
#line 4032 
                       printk("\001",(char *)(& dev->name)); else ;
  
#line 4034 
  if ((long)(skb->len == 0U) != 0L) {
    
#line 4035 
    if (debug_level > 2) 
#line 4035 
                         printk("\001",(char *)(& dev->name)); else ;
    
#line 4036 
    dev_kfree_skb_any(skb);
    
#line 4037 
    __retres = NETDEV_TX_OK;
    
#line 4037 
    goto return_label;
  }
  else ;
  
#line 4040 
  tmp_0 = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 4040 
  if (tmp_0 == 0) {
    
#line 4041 
    if (debug_level > 2) 
#line 4041 
                         printk("\001",(char *)(& dev->name)); else ;
    
#line 4043 
    dev_kfree_skb_any(skb);
    
#line 4044 
    __retres = NETDEV_TX_OK;
    
#line 4044 
    goto return_label;
  }
  else ;
  
#line 4047 
  queue = (unsigned short)0U;
  
#line 4048 
  if (((int)skb->vlan_tci & 4096) != 0) 
#line 4049 
                                        vlan_tag = (unsigned short)((unsigned int)skb->vlan_tci & 61439U); else ;
  
#line 4050 
  if ((unsigned int)sp->config.tx_steering_type == 2U) {
    
#line 4051 
    if ((unsigned int)skb->protocol == 8U) {
      struct iphdr *ip;
      struct tcphdr *th;
      int tmp_10;
      bool tmp_9;
      
#line 4054 
      ip = ip_hdr((struct sk_buff const *)skb);
      
#line 4056 
      tmp_9 = ip_is_fragment((struct iphdr const *)ip);
      
#line 4056 
      if (tmp_9) 
#line 4056 
                 tmp_10 = 0; else 
#line 4056 
                                  tmp_10 = 1;
      
#line 4056 
      if (tmp_10) {
        
#line 4057 
        th = (struct tcphdr *)ip + (int)ip->ihl * 4;
        
#line 4060 
        if ((unsigned int)ip->protocol == 6U) {
          int tmp_2;
          int tmp_4;
          
#line 4061 
          queue_len = (unsigned short)sp->total_tcp_fifos;
          
#line 4063 
          if (0 != 0) 
#line 4063 
                      tmp_2 = ((int)th->source << 8) | ((int)th->source >> 8);
          else {
            __u16 tmp_1;
            
#line 4062 
            tmp_1 = __fswab16((unsigned short)((int)th->source));
            
#line 4063 
            tmp_2 = (int)tmp_1;
          }
          
#line 4062 
          if (0 != 0) 
#line 4062 
                      tmp_4 = ((int)th->dest << 8) | ((int)th->dest >> 8);
          else {
            __u16 tmp_3;
            
#line 4063 
            tmp_3 = __fswab16((unsigned short)((int)th->dest));
            
#line 4062 
            tmp_4 = (int)tmp_3;
          }
          
#line 4062 
          queue = (unsigned short)((tmp_2 + tmp_4) & (int)sp->fifo_selector[(int)queue_len + -1]);
          
#line 4065 
          if ((int)queue >= (int)queue_len) 
#line 4066 
                                            queue = (unsigned short)((unsigned int)queue_len + 65535U); else ;
        }
        else 
          
#line 4067 
          if ((unsigned int)ip->protocol == 17U) {
            int tmp_6;
            int tmp_8;
            
#line 4068 
            queue_len = (unsigned short)sp->total_udp_fifos;
            
#line 4070 
            if (0 != 0) 
#line 4070 
                        tmp_6 = ((int)th->source << 8) | ((int)th->source >> 8);
            else {
              __u16 tmp_5;
              
#line 4069 
              tmp_5 = __fswab16((unsigned short)((int)th->source));
              
#line 4070 
              tmp_6 = (int)tmp_5;
            }
            
#line 4069 
            if (0 != 0) 
#line 4069 
                        tmp_8 = ((int)th->dest << 8) | ((int)th->dest >> 8);
            else {
              __u16 tmp_7;
              
#line 4070 
              tmp_7 = __fswab16((unsigned short)((int)th->dest));
              
#line 4069 
              tmp_8 = (int)tmp_7;
            }
            
#line 4069 
            queue = (unsigned short)((tmp_6 + tmp_8) & (int)sp->fifo_selector[(int)queue_len + -1]);
            
#line 4072 
            if ((int)queue >= (int)queue_len) 
#line 4073 
                                              queue = (unsigned short)((unsigned int)queue_len + 65535U); else ;
            
#line 4074 
            queue = (unsigned short)((int)((unsigned short)sp->udp_fifo_idx) + (int)queue);
            
#line 4075 
            if (skb->len > 1024U) 
#line 4076 
                                  enable_per_list_interrupt = 1; else ;
            
#line 4077 
            do_spin_lock = 0;
          }
          else ;
      }
      else ;
    }
    else ;
  }
  else 
    
#line 4081 
    if ((unsigned int)sp->config.tx_steering_type == 1U) 
#line 4083 
                                                         queue = (unsigned short)config->fifo_mapping[skb->priority & 7U]; else ;
  
#line 4085 
  fifo = & mac_control->fifos[(int)queue];
  
#line 4087 
  if (do_spin_lock != 0) 
#line 4088 
                         ldv___ldv_spin_lock_83(& fifo->tx_lock);
  else {
    int tmp_11;
    
#line 4090 
    tmp_11 = ldv___ldv_spin_trylock_84(& fifo->tx_lock);
    
#line 4090 
    if ((long)(tmp_11 == 0) != 0L) {
      
#line 4091 
      __retres = NETDEV_TX_LOCKED;
      
#line 4091 
      goto return_label;
    }
    else ;
  }
  
#line 4094 
  if ((unsigned int)sp->config.multiq != 0U) {
    bool tmp_12;
    
#line 4095 
    tmp_12 = __netif_subqueue_stopped((struct net_device const *)dev,(unsigned short)((int)((unsigned short)fifo->fifo_no)));
    
#line 4095 
    if ((int)tmp_12 != 0) {
      
#line 4096 
      ldv_spin_unlock_irqrestore_85(& fifo->tx_lock,flags);
      
#line 4097 
      __retres = NETDEV_TX_BUSY;
      
#line 4097 
      goto return_label;
    }
    else ;
  }
  else 
    
#line 4099 
    if ((long)(fifo->queue_state == 1) != 0L) {
      bool tmp_13;
      
#line 4100 
      tmp_13 = netif_queue_stopped((struct net_device const *)dev);
      
#line 4100 
      if ((int)tmp_13 != 0) {
        
#line 4101 
        ldv_spin_unlock_irqrestore_86(& fifo->tx_lock,flags);
        
#line 4102 
        __retres = NETDEV_TX_BUSY;
        
#line 4102 
        goto return_label;
      }
      else ;
    }
    else ;
  
#line 4106 
  put_off = (unsigned short)fifo->tx_curr_put_info.offset;
  
#line 4107 
  get_off = (unsigned short)fifo->tx_curr_get_info.offset;
  
#line 4108 
  txdp = (struct TxD *)(fifo->list_info + (int)put_off)->list_virt_addr;
  
#line 4110 
  queue_len = (unsigned short)((unsigned int)((unsigned short)fifo->tx_curr_put_info.fifo_len) + 1U);
  
#line 4112 
  if (txdp->Host_Control != 0ULL) 
#line 4112 
                                  goto _LOR;
  else {
    int tmp_14;
    
#line 4112 
    if ((int)put_off + 1 != (int)queue_len) 
#line 4112 
                                            tmp_14 = (int)put_off + 1; else 
                                                                    
#line 4112 
                                                                    tmp_14 = 0;
    
#line 4112 
    ;
    
#line 4112 
    if (tmp_14 == (int)get_off) {
      _LOR: {
              
#line 4114 
              if (debug_level > 2) 
#line 4114 
                                   printk("\001"); else ;
              
#line 4115 
              s2io_stop_tx_queue(sp,fifo->fifo_no);
              
#line 4116 
              dev_kfree_skb_any(skb);
              
#line 4117 
              ldv_spin_unlock_irqrestore_87(& fifo->tx_lock,flags);
              
#line 4118 
              __retres = NETDEV_TX_OK;
              
#line 4118 
              goto return_label;
            }
    }
    else ;
  }
  
#line 4121 
  tmp_15 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 4121 
  offload_type = (int)((struct skb_shared_info *)tmp_15)->gso_type;
  
#line 4122 
  if ((offload_type & 17) != 0) {
    unsigned char *tmp_16;
    
#line 4123 
    txdp->Control_1 |= 8589934592ULL;
    
#line 4124 
    tmp_16 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 4124 
    txdp->Control_1 |= (unsigned long long)((struct skb_shared_info *)tmp_16)->gso_size << 16;
  }
  else ;
  
#line 4126 
  if ((unsigned int)*((unsigned char *)skb + 145UL) == 6U) 
#line 4127 
                                                           txdp->Control_2 |= 504403158265495552ULL; else ;
  
#line 4131 
  txdp->Control_1 |= 2199023255552ULL;
  
#line 4132 
  txdp->Control_1 |= 72057594037927936ULL;
  
#line 4133 
  txdp->Control_2 |= (unsigned long long)fifo->fifo_no << 24;
  
#line 4134 
  if (enable_per_list_interrupt != 0) {
    
#line 4135 
    if ((unsigned int)(((int)queue_len >> 5) & (int)put_off) != 0U) 
#line 4136 
                                                                    txdp->Control_2 |= 65536ULL; else ;
  }
  else ;
  
#line 4137 
  if ((unsigned int)vlan_tag != 0U) {
    
#line 4138 
    txdp->Control_2 |= 281474976710656ULL;
    
#line 4139 
    txdp->Control_2 |= (unsigned long long)vlan_tag << 32;
  }
  else ;
  
#line 4142 
  tmp_17 = skb_headlen((struct sk_buff const *)skb);
  
#line 4142 
  frg_len = (unsigned short)tmp_17;
  
#line 4143 
  if (offload_type == 2) {
    int ufo_size;
    unsigned char *tmp_18;
    unsigned char *tmp_19;
    int tmp_20;
    
#line 4146 
    tmp_18 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 4146 
    ufo_size = (int)((struct skb_shared_info *)tmp_18)->gso_size;
    
#line 4147 
    ufo_size &= -8;
    
#line 4148 
    txdp->Control_1 |= 12884901888ULL;
    
#line 4149 
    txdp->Control_1 |= (unsigned long long)ufo_size << 16;
    
#line 4150 
    txdp->Control_1 |= 8ULL;
    
#line 4157 
    tmp_19 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 4156 
    *(fifo->ufo_in_band_v + (int)put_off) = (unsigned long long)((struct skb_shared_info *)tmp_19)->ip6_frag_id << 32;
    
#line 4159 
    txdp->Host_Control = (unsigned long long)fifo->ufo_in_band_v;
    
#line 4160 
    txdp->Buffer_Pointer = pci_map_single(sp->pdev,(void *)fifo->ufo_in_band_v,8UL,1);
    
#line 4164 
    tmp_20 = pci_dma_mapping_error(sp->pdev,txdp->Buffer_Pointer);
    
#line 4164 
    if (tmp_20 != 0) 
#line 4165 
                     goto pci_map_failed; else ;
    
#line 4166 
    txdp += 1;
  }
  else ;
  
#line 4169 
  txdp->Buffer_Pointer = pci_map_single(sp->pdev,(void *)skb->data,(unsigned long)frg_len,1);
  
#line 4171 
  tmp_21 = pci_dma_mapping_error(sp->pdev,txdp->Buffer_Pointer);
  
#line 4171 
  if (tmp_21 != 0) 
#line 4172 
                   goto pci_map_failed; else ;
  
#line 4174 
  txdp->Host_Control = (unsigned long long)skb;
  
#line 4175 
  txdp->Control_1 |= (unsigned long long)frg_len;
  
#line 4176 
  if (offload_type == 2) 
#line 4177 
                         txdp->Control_1 |= 12884901888ULL; else ;
  
#line 4179 
  tmp_22 = skb_end_pointer((struct sk_buff const *)skb);
  
#line 4179 
  frg_cnt = (unsigned short)((struct skb_shared_info *)tmp_22)->nr_frags;
  
#line 4181 
  i = (unsigned short)0U;
  
#line 4181 
  goto ldv_57983;
  ldv_57982: 
#line 4182 
  ;
  {
    unsigned char *tmp_23;
    unsigned int tmp_24;
    dma_addr_t tmp_26;
    unsigned int tmp_25;
    unsigned int tmp_27;
    
#line 4182 
    tmp_23 = skb_end_pointer((struct sk_buff const *)skb);
    
#line 4182 
    skb_frag_t const *frag = (skb_frag_t const *)(& ((struct skb_shared_info *)tmp_23)->frags[(int)i]);
    
#line 4184 
    tmp_24 = skb_frag_size(frag);
    
#line 4184 
    if (tmp_24 == 0U) 
#line 4185 
                      goto ldv_57981; else ;
    
#line 4186 
    txdp += 1;
    
#line 4189 
    tmp_25 = skb_frag_size(frag);
    
#line 4187 
    ;
    
#line 4187 
    ;
    
#line 4187 
    tmp_26 = skb_frag_dma_map(& (sp->pdev)->dev,frag,0UL,(unsigned long)tmp_25,(enum dma_data_direction)DMA_TO_DEVICE);
    
#line 4187 
    txdp->Buffer_Pointer = tmp_26;
    
#line 4191 
    tmp_27 = skb_frag_size(frag);
    
#line 4191 
    txdp->Control_1 = (unsigned long long)tmp_27;
    
#line 4192 
    if (offload_type == 2) 
#line 4193 
                           txdp->Control_1 |= 12884901888ULL; else ;
  }
  ldv_57981: 
#line 4195 
  ;
  
#line 4181 
  i = (u16)((int)i + 1);
  ldv_57983: 
#line 4182 
  ;
  
#line 4181 
  if ((int)i < (int)frg_cnt) 
#line 4183 
                             goto ldv_57982; else 
#line 4186 
                                                  goto ldv_57984;
  ldv_57984: 
#line 4187 
  ;
  
#line 4195 
  txdp->Control_1 |= 1099511627776ULL;
  
#line 4197 
  if (offload_type == 2) 
#line 4198 
                         frg_cnt = (u16)((int)frg_cnt + 1); else ;
  
#line 4200 
  tx_fifo = mac_control->tx_FIFO_start[(int)queue];
  
#line 4201 
  val64 = (fifo->list_info + (int)put_off)->list_phy_addr;
  
#line 4202 
  writeq((unsigned long)val64,(void volatile *)(& tx_fifo->TxDL_Pointer));
  
#line 4204 
  val64 = ((unsigned long long)frg_cnt << 56) | 844424930131968ULL;
  
#line 4206 
  if (offload_type != 0) 
#line 4207 
                         val64 |= 1099511627776ULL; else ;
  
#line 4209 
  writeq((unsigned long)val64,(void volatile *)(& tx_fifo->List_Control));
  
#line 4210 
  ldv_inline_asm();
  
#line 4213 
  put_off = (u16)((int)put_off + 1);
  
#line 4214 
  if ((unsigned int)put_off == fifo->tx_curr_put_info.fifo_len + 1U) 
    
#line 4215 
    put_off = (unsigned short)0U; else ;
  
#line 4216 
  fifo->tx_curr_put_info.offset = (unsigned int)put_off;
  
#line 4219 
  if ((int)put_off + 1 != (int)queue_len) 
#line 4219 
                                          tmp_28 = (int)put_off + 1; else 
                                                                    
#line 4219 
                                                                    tmp_28 = 0;
  
#line 4219 
  ;
  
#line 4219 
  if (tmp_28 == (int)get_off) {
    
#line 4220 
    swstats->fifo_full_cnt += 1ULL;
    
#line 4221 
    if (debug_level > 2) 
#line 4221 
                         printk("\001",(int)put_off,(int)get_off); else ;
    
#line 4224 
    s2io_stop_tx_queue(sp,fifo->fifo_no);
  }
  else ;
  
#line 4226 
  swstats->mem_allocated += (unsigned long long)skb->truesize;
  
#line 4227 
  ldv_spin_unlock_irqrestore_88(& fifo->tx_lock,flags);
  
#line 4229 
  if ((unsigned int)sp->config.intr_type == 2U) 
#line 4230 
                                                tx_intr_handler(fifo); else ;
  
#line 4232 
  __retres = NETDEV_TX_OK;
  
#line 4232 
  goto return_label;
  pci_map_failed: 
#line 4234 
  ;
  
#line 4235 
  swstats->pci_map_fail_cnt += 1ULL;
  
#line 4236 
  s2io_stop_tx_queue(sp,fifo->fifo_no);
  
#line 4237 
  swstats->mem_freed += (unsigned long long)skb->truesize;
  
#line 4238 
  dev_kfree_skb_any(skb);
  
#line 4239 
  ldv_spin_unlock_irqrestore_89(& fifo->tx_lock,flags);
  
#line 4240 
  __retres = NETDEV_TX_OK;
  return_label: 
#line 4240 
                return __retres;
}


#line 4244  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_alarm_handle(unsigned long data)
{
  
#line 4246 
  struct s2io_nic *sp = (struct s2io_nic *)data;
  
#line 4247 
  struct net_device *dev = sp->dev;
  
#line 4249 
  s2io_handle_errors((void *)dev);
  
#line 4250 
  ldv_mod_timer_90(& sp->alarm_timer,jiffies + 125UL);
  
#line 4251 
  return;
}


#line 4253  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static irqreturn_t s2io_msix_ring_handle(int irq, void *dev_id)
{
  irqreturn_t __retres;
  int tmp;
  
#line 4255 
  struct ring_info *ring = (struct ring_info *)dev_id;
  
#line 4256 
  struct s2io_nic *sp = ring->nic;
  
#line 4257 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4259 
  tmp = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 4259 
  if ((long)(tmp == 0) != 0L) {
    
#line 4260 
    __retres = IRQ_HANDLED;
    
#line 4260 
    goto return_label;
  }
  else ;
  
#line 4262 
  if ((unsigned int)sp->config.napi != 0U) {
    
#line 4263 
    u8 *addr = (u8 *)0U;
    
#line 4264 
    u8 val8 = (unsigned char)0U;
    
#line 4266 
    addr = (u8 *)(& bar0->xmsi_mask_reg);
    
#line 4267 
    addr += 7 - ring->ring_no;
    
#line 4268 
    if (ring->ring_no == 0) 
#line 4268 
                            val8 = (unsigned char)127U; else 
#line 4268 
                                                             val8 = (unsigned char)255U;
    
#line 4269 
    writeb((unsigned char)((int)val8),(void volatile *)addr);
    
#line 4270 
    val8 = readb((void const volatile *)addr);
    
#line 4271 
    napi_schedule(& ring->napi);
  }
  else {
    
#line 4273 
    rx_intr_handler(ring,0);
    
#line 4274 
    s2io_chk_rx_buffers(sp,ring);
  }
  
#line 4277 
  __retres = IRQ_HANDLED;
  return_label: 
#line 4277 
                return __retres;
}


#line 4280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static irqreturn_t s2io_msix_fifo_handle(int irq, void *dev_id)
{
  irqreturn_t __retres;
  int i;
  u64 reason;
  int tmp;
  
#line 4283 
  struct fifo_info *fifos = (struct fifo_info *)dev_id;
  
#line 4284 
  struct s2io_nic *sp = fifos->nic;
  
#line 4285 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4286 
  struct config_param *config = & sp->config;
  
#line 4289 
  tmp = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 4289 
  if ((long)(tmp == 0) != 0L) {
    
#line 4290 
    __retres = IRQ_NONE;
    
#line 4290 
    goto return_label;
  }
  else ;
  
#line 4292 
  reason = (u64)readq((void const volatile *)(& bar0->general_int_status));
  
#line 4293 
  if ((long)(reason == 18446744073709551615ULL) != 0L) {
    
#line 4295 
    __retres = IRQ_HANDLED;
    
#line 4295 
    goto return_label;
  }
  else ;
  
#line 4297 
  if ((reason & 9259400833873739776ULL) != 0ULL) {
    
#line 4298 
    writeq(18446744073709551615UL,(void volatile *)(& bar0->general_int_mask));
    
#line 4300 
    if (reason < (u64)0) 
#line 4301 
                         s2io_txpic_intr_handle(sp); else ;
    
#line 4303 
    if ((reason & 36028797018963968ULL) != 0ULL) 
#line 4304 
                                                 writeq(18446744073709551615UL,(void volatile *)(& bar0->tx_traffic_int)); else ;
    
#line 4306 
    i = 0;
    
#line 4306 
    goto ldv_58010;
    ldv_58009: 
#line 4307 
    ;
    
#line 4307 
    tx_intr_handler(fifos + i);
    
#line 4306 
    i += 1;
    ldv_58010: 
#line 4307 
    ;
    
#line 4306 
    if (config->tx_fifo_num > (unsigned int)i) 
#line 4308 
                                               goto ldv_58009; else 
#line 4311 
                                                                    goto ldv_58011;
    ldv_58011: 
#line 4312 
    ;
    
#line 4309 
    writeq((unsigned long)sp->general_int_mask,(void volatile *)(& bar0->general_int_mask));
    
#line 4310 
    readl((void const volatile *)(& bar0->general_int_status));
    
#line 4311 
    __retres = IRQ_HANDLED;
    
#line 4311 
    goto return_label;
  }
  else ;
  
#line 4314 
  __retres = IRQ_NONE;
  return_label: 
#line 4314 
                return __retres;
}


#line 4317  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_txpic_intr_handle(struct s2io_nic *sp)
{
  u64 val64;
  
#line 4319 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4322 
  val64 = (u64)readq((void const volatile *)(& bar0->pic_int_status));
  
#line 4323 
  if ((val64 & 576460752303423488ULL) != 0ULL) {
    
#line 4324 
    val64 = (u64)readq((void const volatile *)(& bar0->gpio_int_reg));
    
#line 4325 
    if ((val64 & 4611686018427387904ULL) != 0ULL && (val64 & 2305843009213693952ULL) != 0ULL) {
      
#line 4331 
      val64 |= 4611686018427387904ULL;
      
#line 4332 
      val64 |= 2305843009213693952ULL;
      
#line 4333 
      writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_int_reg));
      
#line 4334 
      val64 = (u64)readq((void const volatile *)(& bar0->gpio_int_mask));
      
#line 4335 
      val64 &= 11529215046068469759ULL;
      
#line 4337 
      writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_int_mask));
    }
    else 
      
#line 4338 
      if ((val64 & 2305843009213693952ULL) != 0ULL) {
        
#line 4339 
        val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
        
#line 4341 
        val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
        
#line 4342 
        val64 |= 72057594037927936ULL;
        
#line 4343 
        writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
        
#line 4344 
        val64 |= 1099511627776ULL;
        
#line 4345 
        writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
        
#line 4346 
        if (sp->device_enabled_once == 0) 
#line 4347 
                                          sp->device_enabled_once = 1; else ;
        
#line 4349 
        s2io_link(sp,2);
        
#line 4354 
        val64 = (u64)readq((void const volatile *)(& bar0->gpio_int_mask));
        
#line 4355 
        val64 &= 13835058055282163711ULL;
        
#line 4356 
        val64 |= 2305843009213693952ULL;
        
#line 4357 
        writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_int_mask));
      }
      else 
        
#line 4359 
        if ((val64 & 4611686018427387904ULL) != 0ULL) {
          
#line 4360 
          val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
          
#line 4361 
          s2io_link(sp,1);
          
#line 4363 
          val64 = (u64)readq((void const volatile *)(& bar0->gpio_int_mask));
          
#line 4364 
          val64 &= 16140901064495857663ULL;
          
#line 4365 
          val64 |= 4611686018427387904ULL;
          
#line 4366 
          writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_int_mask));
          
#line 4369 
          val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
          
#line 4370 
          val64 &= 18446742974197923839ULL;
          
#line 4371 
          writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
        }
        else ;
  }
  else ;
  
#line 4374 
  val64 = (u64)readq((void const volatile *)(& bar0->gpio_int_mask));
  
#line 4375 
  return;
}


#line 4387  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int do_s2io_chk_alarm_bit(u64 value, void *addr, unsigned long long *cnt)
{
  int __retres;
  u64 val64;
  
#line 4391 
  val64 = (u64)readq((void const volatile *)addr);
  
#line 4392 
  if ((val64 & value) != 0ULL) {
    
#line 4393 
    writeq((unsigned long)val64,(void volatile *)addr);
    
#line 4394 
    *cnt += 1ULL;
    
#line 4395 
    __retres = 1;
    
#line 4395 
    goto return_label;
  }
  else ;
  
#line 4397 
  __retres = 0;
  return_label: 
#line 4397 
                return __retres;
}


#line 4409  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_handle_errors(void *dev_id)
{
  int tmp_0;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  
#line 4411 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 4412 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 4413 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4414 
  u64 temp64 = 0ULL;
  
#line 4414 
  u64 val64 = 0ULL;
  
#line 4415 
  int i = 0;
  
#line 4417 
  struct swStat *sw_stat = & (sp->mac_control.stats_info)->sw_stat;
  
#line 4418 
  struct xpakStat *stats = & (sp->mac_control.stats_info)->xpak_stat;
  
#line 4420 
  tmp_0 = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 4420 
  if (tmp_0 == 0) 
#line 4421 
                  goto return_label; else ;
  
#line 4423 
  tmp_1 = pci_channel_offline(sp->pdev);
  
#line 4423 
  if (tmp_1 != 0) 
#line 4424 
                  goto return_label; else ;
  
#line 4426 
  memset((void *)(& sw_stat->ring_full_cnt),0,64UL);
  
#line 4430 
  if (stats->xpak_timer_count <= 71999U) 
#line 4432 
                                         stats->xpak_timer_count += 1U;
  else {
    
#line 4434 
    s2io_updt_xpak_counter(dev);
    
#line 4436 
    stats->xpak_timer_count = 0U;
  }
  
#line 4440 
  tmp_3 = s2io_link_fault_indication(sp);
  
#line 4440 
  if (tmp_3 == 2) {
    
#line 4441 
    val64 = (u64)readq((void const volatile *)(& bar0->mac_rmac_err_reg));
    
#line 4442 
    writeq((unsigned long)val64,(void volatile *)(& bar0->mac_rmac_err_reg));
    
#line 4443 
    if ((val64 & 4294967296ULL) != 0ULL) 
#line 4444 
                                         ldv_schedule_work_91(& sp->set_link_task); else ;
  }
  else ;
  
#line 4448 
  tmp_4 = do_s2io_chk_alarm_bit(18158513697557839872ULL,(void *)(& bar0->serr_source),& sw_stat->serious_err_cnt);
  
#line 4448 
  if (tmp_4 != 0) 
#line 4450 
                  goto reset; else ;
  
#line 4453 
  tmp_5 = do_s2io_chk_alarm_bit(9223372036854775808ULL,(void *)(& bar0->gpio_int_reg),& sw_stat->parity_err_cnt);
  
#line 4453 
  if (tmp_5 != 0) 
#line 4455 
                  goto reset; else ;
  
#line 4458 
  if ((unsigned int)sp->device_type == 2U) {
    
#line 4459 
    val64 = (u64)readq((void const volatile *)(& bar0->ring_bump_counter1));
    
#line 4460 
    i = 0;
    
#line 4460 
    goto ldv_58036;
    ldv_58035: 
#line 4461 
    ;
    
#line 4461 
    temp64 = (65535ULL << (3 - i) * 16) & val64;
    
#line 4462 
    temp64 >>= (3 - i) * 16;
    
#line 4463 
    sw_stat->ring_full_cnt[i] += temp64;
    
#line 4460 
    i += 1;
    ldv_58036: 
#line 4461 
    ;
    
#line 4460 
    if (i <= 3) 
#line 4462 
                goto ldv_58035; else 
#line 4465 
                                     goto ldv_58037;
    ldv_58037: 
#line 4466 
    ;
    
#line 4466 
    val64 = (u64)readq((void const volatile *)(& bar0->ring_bump_counter2));
    
#line 4467 
    i = 0;
    
#line 4467 
    goto ldv_58039;
    ldv_58038: 
#line 4468 
    ;
    
#line 4468 
    temp64 = (65535ULL << (3 - i) * 16) & val64;
    
#line 4469 
    temp64 >>= (3 - i) * 16;
    
#line 4470 
    sw_stat->ring_full_cnt[i + 4] += temp64;
    
#line 4467 
    i += 1;
    ldv_58039: 
#line 4468 
    ;
    
#line 4467 
    if (i <= 3) 
#line 4469 
                goto ldv_58038; else 
#line 4472 
                                     goto ldv_58040;
    ldv_58040: 
#line 4473 
    ;
  }
  else ;
  
#line 4474 
  val64 = (u64)readq((void const volatile *)(& bar0->txdma_int_status));
  
#line 4476 
  if (val64 < (u64)0) {
    int tmp_9;
    
#line 4477 
    tmp_9 = do_s2io_chk_alarm_bit(282580947566592ULL,(void *)(& bar0->pfc_err_reg),& sw_stat->pfc_err_cnt);
    
#line 4477 
    if (tmp_9 != 0) 
#line 4482 
                    goto reset; else ;
    
#line 4483 
    do_s2io_chk_alarm_bit(72057594037927936ULL,(void *)(& bar0->pfc_err_reg),& sw_stat->pfc_err_cnt);
  }
  else ;
  
#line 4489 
  if ((val64 & 4611686018427387904ULL) != 0ULL) {
    int tmp_10;
    
#line 4490 
    tmp_10 = do_s2io_chk_alarm_bit(71779417596100608ULL,(void *)(& bar0->tda_err_reg),& sw_stat->tda_err_cnt);
    
#line 4490 
    if (tmp_10 != 0) 
#line 4495 
                     goto reset; else ;
    
#line 4496 
    do_s2io_chk_alarm_bit(18374686479688400896ULL,(void *)(& bar0->tda_err_reg),& sw_stat->tda_err_cnt);
  }
  else ;
  
#line 4501 
  if ((val64 & 2305843009213693952ULL) != 0ULL) {
    int tmp_11;
    
#line 4502 
    tmp_11 = do_s2io_chk_alarm_bit(281474976710640ULL,(void *)(& bar0->pcc_err_reg),& sw_stat->pcc_err_cnt);
    
#line 4502 
    if (tmp_11 != 0) 
#line 4509 
                     goto reset; else ;
    
#line 4510 
    do_s2io_chk_alarm_bit(18446462598732840960ULL,(void *)(& bar0->pcc_err_reg),& sw_stat->pcc_err_cnt);
  }
  else ;
  
#line 4516 
  if ((val64 & 1152921504606846976ULL) != 0ULL) {
    int tmp_12;
    
#line 4517 
    tmp_12 = do_s2io_chk_alarm_bit(1099511627776ULL,(void *)(& bar0->tti_err_reg),& sw_stat->tti_err_cnt);
    
#line 4517 
    if (tmp_12 != 0) 
#line 4520 
                     goto reset; else ;
    
#line 4521 
    do_s2io_chk_alarm_bit(72339069014638592ULL,(void *)(& bar0->tti_err_reg),& sw_stat->tti_err_cnt);
  }
  else ;
  
#line 4527 
  if ((val64 & 576460752303423488ULL) != 0ULL) {
    int tmp_13;
    
#line 4528 
    tmp_13 = do_s2io_chk_alarm_bit(847723465015296ULL,(void *)(& bar0->lso_err_reg),& sw_stat->lso_err_cnt);
    
#line 4528 
    if (tmp_13 != 0) 
#line 4532 
                     goto reset; else ;
    
#line 4533 
    do_s2io_chk_alarm_bit(3377699720527872ULL,(void *)(& bar0->lso_err_reg),& sw_stat->lso_err_cnt);
  }
  else ;
  
#line 4539 
  if ((val64 & 288230376151711744ULL) != 0ULL) {
    int tmp_14;
    
#line 4540 
    tmp_14 = do_s2io_chk_alarm_bit(1099511627776ULL,(void *)(& bar0->tpa_err_reg),& sw_stat->tpa_err_cnt);
    
#line 4540 
    if (tmp_14 != 0) 
#line 4543 
                     goto reset; else ;
    
#line 4544 
    do_s2io_chk_alarm_bit(72057594037927936ULL,(void *)(& bar0->tpa_err_reg),& sw_stat->tpa_err_cnt);
  }
  else ;
  
#line 4550 
  if ((val64 & 144115188075855872ULL) != 0ULL) {
    int tmp_15;
    
#line 4551 
    tmp_15 = do_s2io_chk_alarm_bit(281474976710656ULL,(void *)(& bar0->sm_err_reg),& sw_stat->sm_err_cnt);
    
#line 4551 
    if (tmp_15 != 0) 
#line 4554 
                     goto reset; else ;
  }
  else ;
  
#line 4557 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_int_status));
  
#line 4558 
  if (val64 < (u64)0) {
    int tmp_17;
    
#line 4559 
    tmp_17 = do_s2io_chk_alarm_bit(1099528404992ULL,(void *)(& bar0->mac_tmac_err_reg),& sw_stat->mac_tmac_err_cnt);
    
#line 4559 
    if (tmp_17 != 0) 
#line 4562 
                     goto reset; else ;
    
#line 4563 
    do_s2io_chk_alarm_bit(72339069014704384ULL,(void *)(& bar0->mac_tmac_err_reg),& sw_stat->mac_tmac_err_cnt);
  }
  else ;
  
#line 4570 
  val64 = (u64)readq((void const volatile *)(& bar0->xgxs_int_status));
  
#line 4571 
  if (val64 < (u64)0) {
    int tmp_19;
    
#line 4572 
    tmp_19 = do_s2io_chk_alarm_bit(4311744512ULL,(void *)(& bar0->xgxs_txgxs_err_reg),& sw_stat->xgxs_txgxs_err_cnt);
    
#line 4572 
    if (tmp_19 != 0) 
#line 4575 
                     goto reset; else ;
    
#line 4576 
    do_s2io_chk_alarm_bit(72339069014638592ULL,(void *)(& bar0->xgxs_txgxs_err_reg),& sw_stat->xgxs_txgxs_err_cnt);
  }
  else ;
  
#line 4581 
  val64 = (u64)readq((void const volatile *)(& bar0->rxdma_int_status));
  
#line 4582 
  if (val64 < (u64)0) {
    int tmp_21;
    int tmp_22;
    
#line 4583 
    tmp_21 = do_s2io_chk_alarm_bit(71776127634440192ULL,(void *)(& bar0->rc_err_reg),& sw_stat->rc_err_cnt);
    
#line 4583 
    if (tmp_21 != 0) 
#line 4589 
                     goto reset; else ;
    
#line 4590 
    do_s2io_chk_alarm_bit(18374687579183316736ULL,(void *)(& bar0->rc_err_reg),& sw_stat->rc_err_cnt);
    
#line 4594 
    tmp_22 = do_s2io_chk_alarm_bit(18374966859414896640ULL,(void *)(& bar0->prc_pcix_err_reg),& sw_stat->prc_pcix_err_cnt);
    
#line 4594 
    if (tmp_22 != 0) 
#line 4599 
                     goto reset; else ;
    
#line 4600 
    do_s2io_chk_alarm_bit(71777214294589440ULL,(void *)(& bar0->prc_pcix_err_reg),& sw_stat->prc_pcix_err_cnt);
  }
  else ;
  
#line 4607 
  if ((val64 & 4611686018427387904ULL) != 0ULL) {
    int tmp_23;
    
#line 4608 
    tmp_23 = do_s2io_chk_alarm_bit(1103806595072ULL,(void *)(& bar0->rpa_err_reg),& sw_stat->rpa_err_cnt);
    
#line 4608 
    if (tmp_23 != 0) 
#line 4611 
                     goto reset; else ;
    
#line 4612 
    do_s2io_chk_alarm_bit(72339069014638592ULL,(void *)(& bar0->rpa_err_reg),& sw_stat->rpa_err_cnt);
  }
  else ;
  
#line 4617 
  if ((val64 & 2305843009213693952ULL) != 0ULL) {
    int tmp_24;
    
#line 4618 
    tmp_24 = do_s2io_chk_alarm_bit(71776123406516225ULL,(void *)(& bar0->rda_err_reg),& sw_stat->rda_err_cnt);
    
#line 4618 
    if (tmp_24 != 0) 
#line 4625 
                     goto reset; else ;
    
#line 4626 
    do_s2io_chk_alarm_bit(18374687579183317248ULL,(void *)(& bar0->rda_err_reg),& sw_stat->rda_err_cnt);
  }
  else ;
  
#line 4634 
  if ((val64 & 1152921504606846976ULL) != 0ULL) {
    int tmp_25;
    
#line 4635 
    tmp_25 = do_s2io_chk_alarm_bit(1099511627776ULL,(void *)(& bar0->rti_err_reg),& sw_stat->rti_err_cnt);
    
#line 4635 
    if (tmp_25 != 0) 
#line 4638 
                     goto reset; else ;
    
#line 4639 
    do_s2io_chk_alarm_bit(72339069014638592ULL,(void *)(& bar0->rti_err_reg),& sw_stat->rti_err_cnt);
  }
  else ;
  
#line 4644 
  val64 = (u64)readq((void const volatile *)(& bar0->mac_int_status));
  
#line 4645 
  if ((val64 & 4611686018427387904ULL) != 0ULL) {
    int tmp_27;
    
#line 4646 
    tmp_27 = do_s2io_chk_alarm_bit(9223372036871553024ULL,(void *)(& bar0->mac_rmac_err_reg),& sw_stat->mac_rmac_err_cnt);
    
#line 4646 
    if (tmp_27 != 0) 
#line 4649 
                     goto reset; else ;
    
#line 4650 
    do_s2io_chk_alarm_bit(2880034369517387776ULL,(void *)(& bar0->mac_rmac_err_reg),& sw_stat->mac_rmac_err_cnt);
  }
  else ;
  
#line 4657 
  val64 = (u64)readq((void const volatile *)(& bar0->xgxs_int_status));
  
#line 4658 
  if ((val64 & 4611686018427387904ULL) != 0ULL) {
    int tmp_29;
    
#line 4659 
    tmp_29 = do_s2io_chk_alarm_bit(72057594054705152ULL,(void *)(& bar0->xgxs_rxgxs_err_reg),& sw_stat->xgxs_rxgxs_err_cnt);
    
#line 4659 
    if (tmp_29 != 0) 
#line 4662 
                     goto reset; else ;
  }
  else ;
  
#line 4665 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_int_status));
  
#line 4666 
  if (val64 < (u64)0) {
    int tmp_31;
    
#line 4667 
    tmp_31 = do_s2io_chk_alarm_bit(4294967296ULL,(void *)(& bar0->mc_err_reg),& sw_stat->mc_err_cnt);
    
#line 4667 
    if (tmp_31 != 0) 
#line 4670 
                     goto reset; else ;
    
#line 4673 
    if ((val64 & 4340476082273648640ULL) != 0ULL) {
      
#line 4674 
      writeq((unsigned long)val64,(void volatile *)(& bar0->mc_err_reg));
      
#line 4675 
      if ((val64 & 16932479067750400ULL) != 0ULL) {
        
#line 4676 
        sw_stat->double_ecc_errs += 1ULL;
        
#line 4677 
        if ((unsigned int)sp->device_type != 2U) {
          
#line 4681 
          if ((val64 & 43980465111040ULL) != 0ULL) 
#line 4684 
                                                   goto reset; else ;
        }
        else ;
      }
      else 
#line 4687 
           sw_stat->single_ecc_errs += 1ULL;
    }
    else ;
  }
  else ;
  
#line 4690 
  goto return_label;
  reset: 
#line 4692 
  ;
  
#line 4693 
  s2io_stop_all_tx_queue(sp);
  
#line 4694 
  ldv_schedule_work_92(& sp->rst_timer_task);
  
#line 4695 
  sw_stat->soft_reset_cnt += 1ULL;
  return_label: 
#line 4696 
                return;
}


#line 4711  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static irqreturn_t s2io_isr(int irq, void *dev_id)
{
  irqreturn_t __retres;
  int i;
  struct mac_info *mac_control;
  struct config_param *config;
  int tmp_0;
  int tmp_1;
  
#line 4713 
  struct net_device *dev = (struct net_device *)dev_id;
  
#line 4714 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 4715 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4717 
  u64 reason = 0ULL;
  
#line 4722 
  tmp_0 = pci_channel_offline(sp->pdev);
  
#line 4722 
  if (tmp_0 != 0) {
    
#line 4723 
    __retres = IRQ_NONE;
    
#line 4723 
    goto return_label;
  }
  else ;
  
#line 4725 
  tmp_1 = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 4725 
  if (tmp_1 == 0) {
    
#line 4726 
    __retres = IRQ_NONE;
    
#line 4726 
    goto return_label;
  }
  else ;
  
#line 4728 
  config = & sp->config;
  
#line 4729 
  mac_control = & sp->mac_control;
  
#line 4738 
  reason = (u64)readq((void const volatile *)(& bar0->general_int_status));
  
#line 4740 
  if ((long)(reason == 18446744073709551615ULL) != 0L) {
    
#line 4741 
    __retres = IRQ_HANDLED;
    
#line 4741 
    goto return_label;
  }
  else ;
  
#line 4743 
  if ((reason & 9259400833882128384ULL) != 0ULL) {
    
#line 4745 
    writeq(18446744073709551615UL,(void volatile *)(& bar0->general_int_mask));
    
#line 4747 
    if ((unsigned int)config->napi != 0U) {
      
#line 4748 
      if ((reason & 8388608ULL) != 0ULL) {
        
#line 4749 
        napi_schedule(& sp->napi);
        
#line 4750 
        writeq(18446744073709551615UL,(void volatile *)(& bar0->rx_traffic_mask));
        
#line 4751 
        writeq(18446744073709551615UL,(void volatile *)(& bar0->rx_traffic_int));
        
#line 4752 
        readl((void const volatile *)(& bar0->rx_traffic_int));
      }
      else ;
    }
    else {
      
#line 4760 
      if ((reason & 8388608ULL) != 0ULL) 
#line 4761 
                                         writeq(18446744073709551615UL,(void volatile *)(& bar0->rx_traffic_int)); else ;
      
#line 4763 
      i = 0;
      
#line 4763 
      goto ldv_58054;
      ldv_58053: 
#line 4764 
      ;
      {
        
#line 4764 
        struct ring_info *ring = & mac_control->rings[i];
        
#line 4766 
        rx_intr_handler(ring,0);
      }
      
#line 4763 
      i += 1;
      ldv_58054: 
#line 4764 
      ;
      
#line 4763 
      if (config->rx_ring_num > (unsigned int)i) 
#line 4765 
                                                 goto ldv_58053; else 
                                                                   
#line 4768 
                                                                   goto ldv_58055;
      ldv_58055: 
#line 4769 
      ;
    }
    
#line 4775 
    if ((reason & 36028797018963968ULL) != 0ULL) 
#line 4776 
                                                 writeq(18446744073709551615UL,(void volatile *)(& bar0->tx_traffic_int)); else ;
    
#line 4778 
    i = 0;
    
#line 4778 
    goto ldv_58057;
    ldv_58056: 
#line 4779 
    ;
    
#line 4779 
    tx_intr_handler(& mac_control->fifos[i]);
    
#line 4778 
    i += 1;
    ldv_58057: 
#line 4779 
    ;
    
#line 4778 
    if (config->tx_fifo_num > (unsigned int)i) 
#line 4780 
                                               goto ldv_58056; else 
#line 4783 
                                                                    goto ldv_58058;
    ldv_58058: 
#line 4784 
    ;
    
#line 4781 
    if (reason < (u64)0) 
#line 4782 
                         s2io_txpic_intr_handle(sp); else ;
    
#line 4787 
    if ((unsigned int)config->napi == 0U) {
      
#line 4788 
      i = 0;
      
#line 4788 
      goto ldv_58061;
      ldv_58060: 
#line 4789 
      ;
      {
        
#line 4789 
        struct ring_info *ring_0 = & mac_control->rings[i];
        
#line 4791 
        s2io_chk_rx_buffers(sp,ring_0);
      }
      
#line 4788 
      i += 1;
      ldv_58061: 
#line 4789 
      ;
      
#line 4788 
      if (config->rx_ring_num > (unsigned int)i) 
#line 4790 
                                                 goto ldv_58060; else 
                                                                   
#line 4793 
                                                                   goto ldv_58062;
      ldv_58062: 
#line 4794 
      ;
    }
    else ;
    
#line 4794 
    writeq((unsigned long)sp->general_int_mask,(void volatile *)(& bar0->general_int_mask));
    
#line 4795 
    readl((void const volatile *)(& bar0->general_int_status));
    
#line 4797 
    __retres = IRQ_HANDLED;
    
#line 4797 
    goto return_label;
  }
  else 
    
#line 4799 
    if (reason == 0ULL) {
      
#line 4801 
      __retres = IRQ_NONE;
      
#line 4801 
      goto return_label;
    }
    else ;
  
#line 4804 
  __retres = IRQ_HANDLED;
  return_label: 
#line 4804 
                return __retres;
}


#line 4810  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_updt_stats(struct s2io_nic *sp)
{
  u64 val64;
  int tmp_0;
  
#line 4812 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4814 
  int cnt = 0;
  
#line 4816 
  tmp_0 = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 4816 
  if (tmp_0 != 0) {
    
#line 4818 
    val64 = 13835058055282163722ULL;
    
#line 4820 
    writeq((unsigned long)val64,(void volatile *)(& bar0->stat_cfg));
    ldv_58070: 
#line 4821 
    ;
    
#line 4822 
    __const_udelay(429500UL);
    
#line 4823 
    val64 = (u64)readq((void const volatile *)(& bar0->stat_cfg));
    
#line 4824 
    if (val64 >= (u64)0) 
#line 4825 
                         goto ldv_58069; else ;
    
#line 4826 
    cnt += 1;
    
#line 4827 
    if (cnt == 5) 
#line 4828 
                  goto ldv_58069; else ;
    
#line 4822 
    goto ldv_58070;
    ldv_58069: 
#line 4823 
    ;
  }
  else ;
  
#line 4825 
  return;
}


#line 4842  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct net_device_stats *s2io_get_stats(struct net_device *dev)
{
  struct net_device_stats *__retres;
  u64 delta;
  
#line 4844 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 4845 
  struct mac_info *mac_control = & sp->mac_control;
  
#line 4846 
  struct stat_block *stats = mac_control->stats_info;
  
#line 4850 
  s2io_updt_stats(sp);
  
#line 4859 
  delta = (((unsigned long long)stats->rmac_vld_frms_oflow << 32) | (unsigned long long)stats->rmac_vld_frms) - (unsigned long long)sp->stats.rx_packets;
  
#line 4861 
  sp->stats.rx_packets = (unsigned long)((unsigned long long)sp->stats.rx_packets + delta);
  
#line 4862 
  dev->stats.rx_packets = (unsigned long)((unsigned long long)dev->stats.rx_packets + delta);
  
#line 4864 
  delta = (((unsigned long long)stats->tmac_frms_oflow << 32) | (unsigned long long)stats->tmac_frms) - (unsigned long long)sp->stats.tx_packets;
  
#line 4866 
  sp->stats.tx_packets = (unsigned long)((unsigned long long)sp->stats.tx_packets + delta);
  
#line 4867 
  dev->stats.tx_packets = (unsigned long)((unsigned long long)dev->stats.tx_packets + delta);
  
#line 4869 
  delta = (((unsigned long long)stats->rmac_data_octets_oflow << 32) | (unsigned long long)stats->rmac_data_octets) - (unsigned long long)sp->stats.rx_bytes;
  
#line 4871 
  sp->stats.rx_bytes = (unsigned long)((unsigned long long)sp->stats.rx_bytes + delta);
  
#line 4872 
  dev->stats.rx_bytes = (unsigned long)((unsigned long long)dev->stats.rx_bytes + delta);
  
#line 4874 
  delta = (((unsigned long long)stats->tmac_data_octets_oflow << 32) | (unsigned long long)stats->tmac_data_octets) - (unsigned long long)sp->stats.tx_bytes;
  
#line 4876 
  sp->stats.tx_bytes = (unsigned long)((unsigned long long)sp->stats.tx_bytes + delta);
  
#line 4877 
  dev->stats.tx_bytes = (unsigned long)((unsigned long long)dev->stats.tx_bytes + delta);
  
#line 4879 
  delta = stats->rmac_drop_frms - (unsigned long long)sp->stats.rx_errors;
  
#line 4880 
  sp->stats.rx_errors = (unsigned long)((unsigned long long)sp->stats.rx_errors + delta);
  
#line 4881 
  dev->stats.rx_errors = (unsigned long)((unsigned long long)dev->stats.rx_errors + delta);
  
#line 4883 
  delta = (((unsigned long long)stats->tmac_any_err_frms_oflow << 32) | (unsigned long long)stats->tmac_any_err_frms) - (unsigned long long)sp->stats.tx_errors;
  
#line 4885 
  sp->stats.tx_errors = (unsigned long)((unsigned long long)sp->stats.tx_errors + delta);
  
#line 4886 
  dev->stats.tx_errors = (unsigned long)((unsigned long long)dev->stats.tx_errors + delta);
  
#line 4888 
  delta = stats->rmac_drop_frms - (unsigned long long)sp->stats.rx_dropped;
  
#line 4889 
  sp->stats.rx_dropped = (unsigned long)((unsigned long long)sp->stats.rx_dropped + delta);
  
#line 4890 
  dev->stats.rx_dropped = (unsigned long)((unsigned long long)dev->stats.rx_dropped + delta);
  
#line 4892 
  delta = stats->tmac_drop_frms - (unsigned long long)sp->stats.tx_dropped;
  
#line 4893 
  sp->stats.tx_dropped = (unsigned long)((unsigned long long)sp->stats.tx_dropped + delta);
  
#line 4894 
  dev->stats.tx_dropped = (unsigned long)((unsigned long long)dev->stats.tx_dropped + delta);
  
#line 4901 
  delta = ((unsigned long long)stats->rmac_vld_mcst_frms_oflow << 32) | (unsigned long long)stats->rmac_vld_mcst_frms;
  
#line 4903 
  delta -= stats->rmac_pause_ctrl_frms;
  
#line 4904 
  delta -= (unsigned long long)sp->stats.multicast;
  
#line 4905 
  sp->stats.multicast = (unsigned long)((unsigned long long)sp->stats.multicast + delta);
  
#line 4906 
  dev->stats.multicast = (unsigned long)((unsigned long long)dev->stats.multicast + delta);
  
#line 4908 
  delta = ((((unsigned long long)stats->rmac_usized_frms_oflow << 32) | (unsigned long long)stats->rmac_usized_frms) + stats->rmac_long_frms) - (unsigned long long)sp->stats.rx_length_errors;
  
#line 4911 
  sp->stats.rx_length_errors = (unsigned long)((unsigned long long)sp->stats.rx_length_errors + delta);
  
#line 4912 
  dev->stats.rx_length_errors = (unsigned long)((unsigned long long)dev->stats.rx_length_errors + delta);
  
#line 4914 
  delta = stats->rmac_fcs_err_frms - (unsigned long long)sp->stats.rx_crc_errors;
  
#line 4915 
  sp->stats.rx_crc_errors = (unsigned long)((unsigned long long)sp->stats.rx_crc_errors + delta);
  
#line 4916 
  dev->stats.rx_crc_errors = (unsigned long)((unsigned long long)dev->stats.rx_crc_errors + delta);
  
#line 4918 
  __retres = & dev->stats;
  
#line 4918 
  return __retres;
}


#line 4934  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_set_multicast(struct net_device *dev)
{
  int i;
  int j;
  int prev_cnt;
  struct netdev_hw_addr *ha;
  void *add;
  
#line 4938 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 4939 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 4940 
  u64 val64 = 0ULL;
  
#line 4940 
  u64 multi_mac = 1108152157446ULL;
  
#line 4940 
  u64 mask = 280375465082879ULL;
  
#line 4942 
  u64 dis_addr = 281474976710655ULL;
  
#line 4942 
  u64 mac_addr = 0ULL;
  
#line 4944 
  struct config_param *config = & sp->config;
  
#line 4946 
  if ((dev->flags & 512U) != 0U && (unsigned int)sp->m_cast_flg == 0U) {
    
#line 4948 
    writeq((unsigned long)(multi_mac << 16),(void volatile *)(& bar0->rmac_addr_data0_mem));
    
#line 4950 
    writeq((unsigned long)(mask << 16),(void volatile *)(& bar0->rmac_addr_data1_mem));
    
#line 4952 
    val64 = (((unsigned long long)config->max_mc_addr + 18446744073709551615ULL) << 32) | 72339069014638592ULL;
    
#line 4955 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
    
#line 4957 
    wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
    
#line 4961 
    sp->m_cast_flg = (unsigned short)1U;
    
#line 4962 
    sp->all_multi_pos = (unsigned short)((unsigned int)((unsigned short)config->max_mc_addr) + 65535U);
  }
  else 
    
#line 4963 
    if ((dev->flags & 512U) != 0U && (unsigned int)sp->m_cast_flg != 0U) {
      
#line 4965 
      writeq((unsigned long)(dis_addr << 16),(void volatile *)(& bar0->rmac_addr_data0_mem));
      
#line 4967 
      writeq(0UL,(void volatile *)(& bar0->rmac_addr_data1_mem));
      
#line 4969 
      val64 = ((unsigned long long)sp->all_multi_pos << 32) | 72339069014638592ULL;
      
#line 4972 
      writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
      
#line 4974 
      wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
      
#line 4978 
      sp->m_cast_flg = (unsigned short)0U;
      
#line 4979 
      sp->all_multi_pos = (unsigned short)0U;
    }
    else ;
  
#line 4982 
  if ((dev->flags & 256U) != 0U && (unsigned int)sp->promisc_flg == 0U) {
    
#line 4984 
    add = (void *)(& bar0->mac_cfg);
    
#line 4985 
    val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
    
#line 4986 
    val64 |= 72057594037927936ULL;
    
#line 4988 
    writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
    
#line 4989 
    writel((unsigned int)val64,(void volatile *)add);
    
#line 4990 
    writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
    
#line 4991 
    writel((unsigned int)(val64 >> 32),(void volatile *)(add + 4U));
    
#line 4993 
    if (vlan_tag_strip != 1U) {
      
#line 4994 
      val64 = (u64)readq((void const volatile *)(& bar0->rx_pa_cfg));
      
#line 4995 
      val64 &= 18446462598732840959ULL;
      
#line 4996 
      writeq((unsigned long)val64,(void volatile *)(& bar0->rx_pa_cfg));
      
#line 4997 
      sp->vlan_strip_flag = 0;
    }
    else ;
    
#line 5000 
    val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
    
#line 5001 
    sp->promisc_flg = (unsigned short)1U;
    
#line 5002 
    if (debug_level > 1) 
#line 5002 
                         printk("\001",(char *)(& dev->name)); else ;
  }
  else 
    
#line 5004 
    if ((dev->flags & 256U) == 0U && (unsigned int)sp->promisc_flg != 0U) {
      
#line 5006 
      add = (void *)(& bar0->mac_cfg);
      
#line 5007 
      val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
      
#line 5008 
      val64 &= 18374686479671623679ULL;
      
#line 5010 
      writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
      
#line 5011 
      writel((unsigned int)val64,(void volatile *)add);
      
#line 5012 
      writeq(5480036321579761664UL,(void volatile *)(& bar0->rmac_cfg_key));
      
#line 5013 
      writel((unsigned int)(val64 >> 32),(void volatile *)(add + 4U));
      
#line 5015 
      if (vlan_tag_strip != 0U) {
        
#line 5016 
        val64 = (u64)readq((void const volatile *)(& bar0->rx_pa_cfg));
        
#line 5017 
        val64 |= 281474976710656ULL;
        
#line 5018 
        writeq((unsigned long)val64,(void volatile *)(& bar0->rx_pa_cfg));
        
#line 5019 
        sp->vlan_strip_flag = 1;
      }
      else ;
      
#line 5022 
      val64 = (u64)readq((void const volatile *)(& bar0->mac_cfg));
      
#line 5023 
      sp->promisc_flg = (unsigned short)0U;
      
#line 5024 
      if (debug_level > 1) 
#line 5024 
                           printk("\001",(char *)(& dev->name)); else ;
    }
    else ;
  
#line 5028 
  if ((unsigned int)sp->m_cast_flg == 0U && dev->mc.count != 0) {
    int tmp_6;
    struct netdev_hw_addr *tmp_7;
    int tmp_8;
    struct netdev_hw_addr *tmp_9;
    
#line 5029 
    if (dev->mc.count > config->max_mc_addr - config->max_mac_addr) {
      
#line 5031 
      if (debug_level >= 0) 
#line 5031 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 5035 
      goto return_label;
    }
    else ;
    
#line 5038 
    prev_cnt = (int)sp->mc_addr_count;
    
#line 5039 
    sp->mc_addr_count = (unsigned short)dev->mc.count;
    
#line 5042 
    i = 0;
    
#line 5042 
    goto ldv_58095;
    ldv_58094: 
#line 5043 
    ;
    
#line 5043 
    writeq((unsigned long)(dis_addr << 16),(void volatile *)(& bar0->rmac_addr_data0_mem));
    
#line 5045 
    writeq(0UL,(void volatile *)(& bar0->rmac_addr_data1_mem));
    
#line 5047 
    val64 = (((unsigned long long)config->mc_start_offset + (unsigned long long)i) << 32) | 72339069014638592ULL;
    
#line 5051 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
    
#line 5054 
    tmp_6 = wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
    
#line 5054 
    if (tmp_6 != 0) {
      
#line 5057 
      if (debug_level >= 0) 
#line 5057 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 5060 
      goto return_label;
    }
    else ;
    
#line 5042 
    i += 1;
    ldv_58095: 
#line 5043 
    ;
    
#line 5042 
    if (i < prev_cnt) 
#line 5044 
                      goto ldv_58094; else 
#line 5047 
                                           goto ldv_58096;
    ldv_58096: 
#line 5048 
    ;
    
#line 5065 
    i = 0;
    {
      
#line 5066 
      struct list_head const *__mptr = (struct list_head const *)dev->mc.list.next;
      
#line 5066 
      tmp_7 = (struct netdev_hw_addr *)__mptr;
    }
    
#line 5066 
    ha = tmp_7;
    
#line 5066 
    goto ldv_58105;
    ldv_58104: 
#line 5067 
    ;
    
#line 5067 
    mac_addr = 0ULL;
    
#line 5068 
    j = 0;
    
#line 5068 
    goto ldv_58102;
    ldv_58101: 
#line 5069 
    ;
    
#line 5069 
    mac_addr = (unsigned long long)ha->addr[j] | mac_addr;
    
#line 5070 
    mac_addr <<= 8;
    
#line 5068 
    j += 1;
    ldv_58102: 
#line 5069 
    ;
    
#line 5068 
    if (j <= 5) 
#line 5070 
                goto ldv_58101; else 
#line 5073 
                                     goto ldv_58103;
    ldv_58103: 
#line 5074 
    ;
    
#line 5072 
    mac_addr >>= 8;
    
#line 5073 
    writeq((unsigned long)(mac_addr << 16),(void volatile *)(& bar0->rmac_addr_data0_mem));
    
#line 5075 
    writeq(0UL,(void volatile *)(& bar0->rmac_addr_data1_mem));
    
#line 5077 
    val64 = (((unsigned long long)i + (unsigned long long)config->mc_start_offset) << 32) | 72339069014638592ULL;
    
#line 5081 
    writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
    
#line 5084 
    tmp_8 = wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
    
#line 5084 
    if (tmp_8 != 0) {
      
#line 5087 
      if (debug_level >= 0) 
#line 5087 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 5090 
      goto return_label;
    }
    else ;
    
#line 5092 
    i += 1;
    {
      
#line 5066 
      struct list_head const *__mptr_0 = (struct list_head const *)ha->list.next;
      
#line 5066 
      tmp_9 = (struct netdev_hw_addr *)__mptr_0;
    }
    
#line 5066 
    ha = tmp_9;
    ldv_58105: 
#line 5068 
    ;
    
#line 5066 
    if (& ha->list != & dev->mc.list) 
#line 5068 
                                      goto ldv_58104; else 
#line 5071 
                                                           goto ldv_58106;
    ldv_58106: 
#line 5072 
    ;
  }
  else ;
  return_label: 
#line 5074 
                return;
}


#line 5100  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void do_s2io_store_unicast_mc(struct s2io_nic *sp)
{
  int offset;
  
#line 5103 
  u64 mac_addr = 0ULL;
  
#line 5104 
  struct config_param *config = & sp->config;
  
#line 5107 
  offset = 0;
  
#line 5107 
  goto ldv_58114;
  ldv_58113: 
#line 5108 
  ;
  
#line 5108 
  mac_addr = do_s2io_read_unicast_mc(sp,offset);
  
#line 5110 
  if (mac_addr == 18446744073709551615ULL) 
#line 5111 
                                           mac_addr = 281474976710655ULL; else ;
  
#line 5112 
  do_s2io_copy_mac_addr(sp,offset,mac_addr);
  
#line 5107 
  offset += 1;
  ldv_58114: 
#line 5108 
  ;
  
#line 5107 
  if (config->max_mc_addr > offset) 
#line 5109 
                                    goto ldv_58113; else 
#line 5112 
                                                         goto ldv_58115;
  ldv_58115: 
#line 5113 
  ;
  
#line 5114 
  return;
}


#line 5117  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void do_s2io_restore_unicast_mc(struct s2io_nic *sp)
{
  int offset;
  
#line 5120 
  struct config_param *config = & sp->config;
  
#line 5122 
  offset = 0;
  
#line 5122 
  goto ldv_58122;
  ldv_58121: 
#line 5123 
  ;
  
#line 5123 
  do_s2io_prog_unicast(sp->dev,(u8 *)(& sp->def_mac_addr[offset].mac_addr));
  
#line 5122 
  offset += 1;
  ldv_58122: 
#line 5123 
  ;
  
#line 5122 
  if (config->max_mac_addr > offset) 
#line 5124 
                                     goto ldv_58121; else 
#line 5127 
                                                          goto ldv_58123;
  ldv_58123: 
#line 5128 
  ;
  
#line 5127 
  offset = config->mc_start_offset;
  
#line 5127 
  goto ldv_58125;
  ldv_58124: 
#line 5128 
  ;
  
#line 5129 
  do_s2io_add_mc(sp,(u8 *)(& sp->def_mac_addr[offset].mac_addr));
  
#line 5128 
  offset += 1;
  ldv_58125: 
#line 5129 
  ;
  
#line 5127 
  if (config->max_mc_addr > offset) 
#line 5130 
                                    goto ldv_58124; else 
#line 5133 
                                                         goto ldv_58126;
  ldv_58126: 
#line 5134 
  ;
  
#line 5135 
  return;
}


#line 5133  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int do_s2io_add_mc(struct s2io_nic *sp, u8 *addr)
{
  int __retres;
  int i;
  int tmp;
  
#line 5136 
  u64 mac_addr = 0ULL;
  
#line 5137 
  struct config_param *config = & sp->config;
  
#line 5139 
  i = 0;
  
#line 5139 
  goto ldv_58135;
  ldv_58134: 
#line 5140 
  ;
  
#line 5140 
  mac_addr <<= 8;
  
#line 5141 
  mac_addr = (unsigned long long)*(addr + i) | mac_addr;
  
#line 5139 
  i += 1;
  ldv_58135: 
#line 5140 
  ;
  
#line 5139 
  if (i <= 5) 
#line 5141 
              goto ldv_58134; else 
#line 5144 
                                   goto ldv_58136;
  ldv_58136: 
#line 5145 
  ;
  
#line 5143 
  if (mac_addr == 0ULL || mac_addr == 281474976710655ULL) {
    
#line 5144 
    __retres = 0;
    
#line 5144 
    goto return_label;
  }
  else ;
  
#line 5147 
  i = config->mc_start_offset;
  
#line 5147 
  goto ldv_58140;
  ldv_58139: 
#line 5148 
  ;
  {
    u64 tmp64;
    
#line 5149 
    tmp64 = do_s2io_read_unicast_mc(sp,i);
    
#line 5150 
    if (tmp64 == 281474976710655ULL) 
#line 5151 
                                     goto ldv_58138; else ;
    
#line 5153 
    if (tmp64 == mac_addr) {
      
#line 5154 
      __retres = 0;
      
#line 5154 
      goto return_label;
    }
    else ;
  }
  
#line 5147 
  i += 1;
  ldv_58140: 
#line 5148 
  ;
  
#line 5147 
  if (config->max_mc_addr > i) 
#line 5149 
                               goto ldv_58139; else 
#line 5152 
                                                    goto ldv_58138;
  ldv_58138: 
#line 5153 
  ;
  
#line 5156 
  if (config->max_mc_addr == i) {
    
#line 5157 
    if (debug_level >= 0) 
#line 5157 
                          printk("\001"); else ;
    
#line 5159 
    __retres = -1;
    
#line 5159 
    goto return_label;
  }
  else ;
  
#line 5162 
  do_s2io_copy_mac_addr(sp,i,mac_addr);
  
#line 5164 
  tmp = do_s2io_add_mac(sp,mac_addr,i);
  
#line 5164 
  __retres = tmp;
  return_label: 
#line 5164 
                return __retres;
}


#line 5168  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int do_s2io_add_mac(struct s2io_nic *sp, u64 addr, int off)
{
  int __retres;
  u64 val64;
  int tmp;
  
#line 5171 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5173 
  writeq((unsigned long)(addr << 16),(void volatile *)(& bar0->rmac_addr_data0_mem));
  
#line 5176 
  val64 = ((unsigned long long)off << 32) | 72339069014638592ULL;
  
#line 5178 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
  
#line 5181 
  tmp = wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
  
#line 5181 
  if (tmp != 0) {
    
#line 5184 
    if (debug_level > 1) 
#line 5184 
                         printk("\001"); else ;
    
#line 5185 
    __retres = -1;
    
#line 5185 
    goto return_label;
  }
  else ;
  
#line 5187 
  __retres = 0;
  return_label: 
#line 5187 
                return __retres;
}


#line 5190  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int do_s2io_delete_unicast_mc(struct s2io_nic *sp, u64 addr)
{
  int __retres;
  int offset;
  u64 tmp64;
  
#line 5193 
  u64 dis_addr = 281474976710655ULL;
  
#line 5194 
  struct config_param *config = & sp->config;
  
#line 5196 
  offset = 1;
  
#line 5196 
  goto ldv_58157;
  ldv_58156: 
#line 5197 
  ;
  
#line 5198 
  tmp64 = do_s2io_read_unicast_mc(sp,offset);
  
#line 5199 
  if (tmp64 == addr) {
    int tmp;
    
#line 5201 
    tmp = do_s2io_add_mac(sp,dis_addr,offset);
    
#line 5201 
    if (tmp == -1) {
      
#line 5202 
      __retres = -1;
      
#line 5202 
      goto return_label;
    }
    else ;
    
#line 5204 
    do_s2io_store_unicast_mc(sp);
    
#line 5205 
    __retres = 0;
    
#line 5205 
    goto return_label;
  }
  else ;
  
#line 5197 
  offset += 1;
  ldv_58157: 
#line 5198 
  ;
  
#line 5196 
  if (config->max_mc_addr > offset) 
#line 5199 
                                    goto ldv_58156; else 
#line 5202 
                                                         goto ldv_58158;
  ldv_58158: 
#line 5203 
  ;
  
#line 5208 
  if (debug_level >= 0) 
#line 5208 
                        printk("\001",addr); else ;
  
#line 5210 
  __retres = -1;
  return_label: 
#line 5210 
                return __retres;
}


#line 5214  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static u64 do_s2io_read_unicast_mc(struct s2io_nic *sp, int offset)
{
  u64 __retres;
  u64 val64;
  int tmp;
  
#line 5216 
  u64 tmp64 = 18446744073709486080ULL;
  
#line 5217 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5220 
  val64 = ((unsigned long long)offset << 32) | 281474976710656ULL;
  
#line 5222 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
  
#line 5225 
  tmp = wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
  
#line 5225 
  if (tmp != 0) {
    
#line 5228 
    if (debug_level > 1) 
#line 5228 
                         printk("\001"); else ;
    
#line 5229 
    __retres = 18446744073709551615ULL;
    
#line 5229 
    goto return_label;
  }
  else ;
  
#line 5231 
  tmp64 = (u64)readq((void const volatile *)(& bar0->rmac_addr_data0_mem));
  
#line 5233 
  __retres = tmp64 >> 16;
  return_label: 
#line 5233 
                return __retres;
}


#line 5240  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_set_mac_addr(struct net_device *dev, void *p)
{
  int __retres;
  int tmp_0;
  bool tmp;
  int tmp_1;
  
#line 5242 
  struct sockaddr *addr = (struct sockaddr *)p;
  
#line 5244 
  tmp = is_valid_ether_addr((u8 const *)(& addr->sa_data));
  
#line 5244 
  if (tmp) 
#line 5244 
           tmp_0 = 0; else 
#line 5244 
                           tmp_0 = 1;
  
#line 5244 
  if (tmp_0) {
    
#line 5245 
    __retres = -99;
    
#line 5245 
    goto return_label;
  }
  else ;
  
#line 5247 
  memcpy((void *)dev->dev_addr,(void const *)(& addr->sa_data),(unsigned long)dev->addr_len);
  
#line 5250 
  tmp_1 = do_s2io_prog_unicast(dev,dev->dev_addr);
  
#line 5250 
  __retres = tmp_1;
  return_label: 
#line 5250 
                return __retres;
}


#line 5262  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int do_s2io_prog_unicast(struct net_device *dev, u8 *addr)
{
  int __retres;
  int i;
  u64 tmp64;
  int tmp_0;
  
#line 5264 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5265 
  register u64 mac_addr = 0ULL;
  
#line 5265 
  register u64 perm_addr = 0ULL;
  
#line 5268 
  struct config_param *config = & sp->config;
  
#line 5275 
  i = 0;
  
#line 5275 
  goto ldv_58182;
  ldv_58181: 
#line 5276 
  ;
  
#line 5276 
  mac_addr <<= 8;
  
#line 5277 
  mac_addr = (unsigned long long)*(addr + i) | mac_addr;
  
#line 5278 
  perm_addr <<= 8;
  
#line 5279 
  perm_addr = (unsigned long long)sp->def_mac_addr[0].mac_addr[i] | perm_addr;
  
#line 5275 
  i += 1;
  ldv_58182: 
#line 5276 
  ;
  
#line 5275 
  if (i <= 5) 
#line 5277 
              goto ldv_58181; else 
#line 5280 
                                   goto ldv_58183;
  ldv_58183: 
#line 5281 
  ;
  
#line 5283 
  if (mac_addr == perm_addr) {
    
#line 5284 
    __retres = 0;
    
#line 5284 
    goto return_label;
  }
  else ;
  
#line 5287 
  i = 1;
  
#line 5287 
  goto ldv_58186;
  ldv_58185: 
#line 5288 
  ;
  
#line 5288 
  tmp64 = do_s2io_read_unicast_mc(sp,i);
  
#line 5289 
  if (tmp64 == 281474976710655ULL) 
#line 5290 
                                   goto ldv_58184; else ;
  
#line 5292 
  if (tmp64 == mac_addr) {
    
#line 5293 
    if (debug_level > 1) 
#line 5293 
                         printk("\001",mac_addr); else ;
    
#line 5296 
    __retres = 0;
    
#line 5296 
    goto return_label;
  }
  else ;
  
#line 5287 
  i += 1;
  ldv_58186: 
#line 5288 
  ;
  
#line 5287 
  if (config->max_mac_addr > i) 
#line 5289 
                                goto ldv_58185; else 
#line 5292 
                                                     goto ldv_58184;
  ldv_58184: 
#line 5293 
  ;
  
#line 5299 
  if (config->max_mac_addr == i) {
    
#line 5300 
    if (debug_level >= 0) 
#line 5300 
                          printk("\001"); else ;
    
#line 5301 
    __retres = -1;
    
#line 5301 
    goto return_label;
  }
  else ;
  
#line 5304 
  do_s2io_copy_mac_addr(sp,i,mac_addr);
  
#line 5306 
  tmp_0 = do_s2io_add_mac(sp,mac_addr,i);
  
#line 5306 
  __retres = tmp_0;
  return_label: 
#line 5306 
                return __retres;
}


#line 5322  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_sset(struct net_device *dev, struct ethtool_cmd *info)
{
  int __retres;
  
#line 5325 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5326 
  if ((unsigned int)info->autoneg == 1U) 
#line 5326 
                                         goto _LOR;
  else {
    __u32 tmp_0;
    
#line 5326 
    tmp_0 = ethtool_cmd_speed((struct ethtool_cmd const *)info);
    
#line 5326 
    if (tmp_0 != 10000U) 
#line 5326 
                         goto _LOR;
    else 
      
#line 5327 
      if ((unsigned int)info->duplex != 1U) {
        _LOR: {
                
#line 5329 
                __retres = -22;
                
#line 5329 
                goto return_label;
              }
      }
      else {
        
#line 5331 
        s2io_close(sp->dev);
        
#line 5332 
        s2io_open(sp->dev);
      }
  }
  
#line 5335 
  __retres = 0;
  return_label: 
#line 5335 
                return __retres;
}


#line 5350  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_gset(struct net_device *dev, struct ethtool_cmd *info)
{
  int __retres;
  bool tmp_0;
  
#line 5352 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5353 
  info->supported = 5120U;
  
#line 5354 
  info->advertising = 5120U;
  
#line 5355 
  info->port = (unsigned char)3U;
  
#line 5358 
  info->transceiver = (unsigned char)1U;
  
#line 5360 
  tmp_0 = netif_carrier_ok((struct net_device const *)sp->dev);
  
#line 5360 
  if ((int)tmp_0 != 0) {
    
#line 5361 
    ethtool_cmd_speed_set(info,10000U);
    
#line 5362 
    info->duplex = (unsigned char)1U;
  }
  else {
    
#line 5364 
    ethtool_cmd_speed_set(info,4294967295U);
    
#line 5365 
    info->duplex = (unsigned char)255U;
  }
  
#line 5368 
  info->autoneg = (unsigned char)0U;
  
#line 5369 
  __retres = 0;
  
#line 5369 
  return __retres;
}


#line 5384  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_ethtool_gdrvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
{
  char const *tmp_0;
  
#line 5387 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5389 
  strlcpy((char *)(& info->driver),(char const *)(& s2io_driver_name),32UL);
  
#line 5390 
  strlcpy((char *)(& info->version),(char const *)(& s2io_driver_version),32UL);
  
#line 5391 
  tmp_0 = pci_name((struct pci_dev const *)sp->pdev);
  
#line 5391 
  ;
  
#line 5391 
  strlcpy((char *)(& info->bus_info),tmp_0,32UL);
  
#line 5392 
  info->regdump_len = 12608U;
  
#line 5393 
  info->eedump_len = 2048U;
  
#line 5394 
  return;
}


#line 5410  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_ethtool_gregs(struct net_device *dev, struct ethtool_regs *regs, void *space)
{
  int i;
  u64 reg;
  
#line 5415 
  u8 *reg_space = (u8 *)space;
  
#line 5416 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5418 
  regs->len = 12608U;
  
#line 5419 
  regs->version = (unsigned int)(sp->pdev)->subsystem_device;
  
#line 5421 
  i = 0;
  
#line 5421 
  goto ldv_58212;
  ldv_58211: 
#line 5422 
  ;
  
#line 5422 
  reg = (u64)readq((void const volatile *)(sp->bar0 + i));
  
#line 5423 
  memcpy((void *)(reg_space + i),(void const *)(& reg),8UL);
  
#line 5421 
  i += 8;
  ldv_58212: 
#line 5422 
  ;
  
#line 5421 
  if (regs->len > (unsigned int)i) 
#line 5423 
                                   goto ldv_58211; else 
#line 5426 
                                                        goto ldv_58213;
  ldv_58213: 
#line 5427 
  ;
  
#line 5428 
  return;
}


#line 5430  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_set_led(struct s2io_nic *sp, bool on)
{
  u64 val64;
  
#line 5432 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5433 
  u16 subid = (sp->pdev)->subsystem_device;
  
#line 5436 
  if ((unsigned int)sp->device_type == 2U || ((int)subid & 255) > 6) {
    
#line 5438 
    val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
    
#line 5439 
    if ((int)on != 0) 
#line 5440 
                      val64 |= 36028797018963968ULL; else 
#line 5442 
                                                          val64 &= 18410715276690587647ULL;
    
#line 5444 
    writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_control));
  }
  else {
    
#line 5446 
    val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
    
#line 5447 
    if ((int)on != 0) 
#line 5448 
                      val64 |= 1099511627776ULL; else 
#line 5450 
                                                      val64 &= 18446742974197923839ULL;
    
#line 5452 
    writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
  }
  
#line 5454 
  return;
}


#line 5469  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_set_led(struct net_device *dev, enum ethtool_phys_id_state state)
{
  int __retres;
  
#line 5472 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5473 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5474 
  u16 subid = (sp->pdev)->subsystem_device;
  
#line 5476 
  if ((unsigned int)sp->device_type == 1U && ((int)subid & 255) <= 6) {
    
#line 5477 
    u64 val64 = readq((void const volatile *)(& bar0->adapter_control));
    
#line 5478 
    if ((val64 & 72057594037927936ULL) == 0ULL) {
      
#line 5479 
      printk("\001");
      
#line 5480 
      __retres = -11;
      
#line 5480 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 5484 
  switch ((unsigned int)state) {
    case (unsigned int)1: 
#line 5485 
    ;
    
#line 5486 
    sp->adapt_ctrl_org = (u64)readq((void const volatile *)(& bar0->gpio_control));
    
#line 5487 
    __retres = 1;
    
#line 5487 
    goto return_label;
    case (unsigned int)2: 
#line 5489 
    ;
    
#line 5490 
    s2io_set_led(sp,(_Bool)1);
    
#line 5491 
    goto ldv_58231;
    case (unsigned int)3: 
#line 5493 
    ;
    
#line 5494 
    s2io_set_led(sp,(_Bool)0);
    
#line 5495 
    goto ldv_58231;
    case (unsigned int)0: 
#line 5497 
    ;
    
#line 5498 
    if ((unsigned int)sp->device_type == 1U && ((unsigned int)subid + 40949U <= 2U || (unsigned int)subid + 39925U <= 2U)) 
      
#line 5499 
      writeq((unsigned long)sp->adapt_ctrl_org,(void volatile *)(& bar0->gpio_control)); else ;
  }
  ldv_58231: 
#line 5502 
  ;
  
#line 5502 
  __retres = 0;
  return_label: 
#line 5502 
                return __retres;
}


#line 5505  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_ethtool_gringparam(struct net_device *dev, struct ethtool_ringparam *ering)
{
  int i;
  
#line 5508 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5509 
  int tx_desc_count = 0;
  
#line 5509 
  int rx_desc_count = 0;
  
#line 5511 
  if (sp->rxd_mode == 0) {
    
#line 5512 
    ering->rx_max_pending = 153600U;
    
#line 5513 
    ering->rx_jumbo_max_pending = 153600U;
  }
  else {
    
#line 5515 
    ering->rx_max_pending = 103200U;
    
#line 5516 
    ering->rx_jumbo_max_pending = 103200U;
  }
  
#line 5519 
  ering->tx_max_pending = 8192U;
  
#line 5521 
  i = 0;
  
#line 5521 
  goto ldv_58243;
  ldv_58242: 
#line 5522 
  ;
  
#line 5522 
  rx_desc_count = (int)(sp->config.rx_cfg[i].num_rxd + (unsigned int)rx_desc_count);
  
#line 5521 
  i += 1;
  ldv_58243: 
#line 5522 
  ;
  
#line 5521 
  if (sp->config.rx_ring_num > (unsigned int)i) 
#line 5523 
                                                goto ldv_58242; else 
                                                                  
#line 5526 
                                                                  goto ldv_58244;
  ldv_58244: 
#line 5527 
  ;
  
#line 5523 
  ering->rx_pending = (unsigned int)rx_desc_count;
  
#line 5524 
  ering->rx_jumbo_pending = (unsigned int)rx_desc_count;
  
#line 5526 
  i = 0;
  
#line 5526 
  goto ldv_58246;
  ldv_58245: 
#line 5527 
  ;
  
#line 5527 
  tx_desc_count = (int)(sp->config.tx_cfg[i].fifo_len + (unsigned int)tx_desc_count);
  
#line 5526 
  i += 1;
  ldv_58246: 
#line 5527 
  ;
  
#line 5526 
  if (sp->config.tx_fifo_num > (unsigned int)i) 
#line 5528 
                                                goto ldv_58245; else 
                                                                  
#line 5531 
                                                                  goto ldv_58247;
  ldv_58247: 
#line 5532 
  ;
  
#line 5528 
  ering->tx_pending = (unsigned int)tx_desc_count;
  
#line 5529 
  if (debug_level > 1) 
#line 5529 
                       printk("\001",sp->config.max_txds); else ;
  
#line 5530 
  return;
}


#line 5542  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_ethtool_getpause_data(struct net_device *dev, struct ethtool_pauseparam *ep)
{
  u64 val64;
  
#line 5546 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5547 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5549 
  val64 = (u64)readq((void const volatile *)(& bar0->rmac_pause_cfg));
  
#line 5550 
  if (val64 < (u64)0) 
#line 5551 
                      ep->tx_pause = 1U; else ;
  
#line 5552 
  if ((val64 & 4611686018427387904ULL) != 0ULL) 
#line 5553 
                                                ep->rx_pause = 1U; else ;
  
#line 5554 
  ep->autoneg = 0U;
  
#line 5555 
  return;
}


#line 5569  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_setpause_data(struct net_device *dev, struct ethtool_pauseparam *ep)
{
  int __retres;
  u64 val64;
  
#line 5573 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5574 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5576 
  val64 = (u64)readq((void const volatile *)(& bar0->rmac_pause_cfg));
  
#line 5577 
  if (ep->tx_pause != 0U) 
#line 5578 
                          val64 |= 9223372036854775808ULL; else 
#line 5580 
                                                                val64 &= 9223372036854775807ULL;
  
#line 5581 
  if (ep->rx_pause != 0U) 
#line 5582 
                          val64 |= 4611686018427387904ULL; else 
#line 5584 
                                                                val64 &= 13835058055282163711ULL;
  
#line 5585 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_pause_cfg));
  
#line 5586 
  __retres = 0;
  
#line 5586 
  return __retres;
}


#line 5606  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int read_eeprom(struct s2io_nic *sp, int off, u64 *data)
{
  u64 val64;
  
#line 5608 
  int ret = -1;
  
#line 5609 
  u32 exit_cnt = 0U;
  
#line 5611 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5613 
  if ((unsigned int)sp->device_type == 1U) {
    
#line 5614 
    val64 = ((unsigned long long)off << 48) | 5764611431454474240ULL;
    
#line 5619 
    SPECIAL_REG_WRITE(val64,(void *)(& bar0->i2c_control),2);
    
#line 5621 
    goto ldv_58273;
    ldv_58272: 
#line 5622 
    ;
    
#line 5622 
    val64 = (u64)readq((void const volatile *)(& bar0->i2c_control));
    
#line 5623 
    if ((val64 & 4294967296ULL) != 0ULL) {
      
#line 5624 
      *data = (unsigned long long)((unsigned int)val64);
      
#line 5625 
      ret = 0;
      
#line 5626 
      goto ldv_58271;
    }
    else ;
    
#line 5628 
    msleep(50U);
    
#line 5629 
    exit_cnt += 1U;
    ldv_58273: 
#line 5630 
    ;
    
#line 5621 
    if (exit_cnt <= 4U) 
#line 5623 
                        goto ldv_58272; else 
#line 5626 
                                             goto ldv_58271;
    ldv_58271: 
#line 5627 
    ;
  }
  else ;
  
#line 5633 
  if ((unsigned int)sp->device_type == 2U) {
    
#line 5634 
    val64 = (unsigned long long)off | 10952754306700279808ULL;
    
#line 5637 
    SPECIAL_REG_WRITE(val64,(void *)(& bar0->spi_control),2);
    
#line 5638 
    val64 |= 72057594037927936ULL;
    
#line 5639 
    SPECIAL_REG_WRITE(val64,(void *)(& bar0->spi_control),2);
    
#line 5640 
    goto ldv_58276;
    ldv_58275: 
#line 5641 
    ;
    
#line 5641 
    val64 = (u64)readq((void const volatile *)(& bar0->spi_control));
    
#line 5642 
    if ((val64 & 288230376151711744ULL) != 0ULL) {
      
#line 5643 
      ret = 1;
      
#line 5644 
      goto ldv_58274;
    }
    else 
      
#line 5645 
      if ((val64 & 144115188075855872ULL) != 0ULL) {
        
#line 5646 
        *data = (u64)readq((void const volatile *)(& bar0->spi_data));
        
#line 5647 
        *data &= 16777215ULL;
        
#line 5648 
        ret = 0;
        
#line 5649 
        goto ldv_58274;
      }
      else ;
    
#line 5651 
    msleep(50U);
    
#line 5652 
    exit_cnt += 1U;
    ldv_58276: 
#line 5653 
    ;
    
#line 5640 
    if (exit_cnt <= 4U) 
#line 5642 
                        goto ldv_58275; else 
#line 5645 
                                             goto ldv_58274;
    ldv_58274: 
#line 5646 
    ;
  }
  else ;
  
#line 5655 
  return ret;
}


#line 5673  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int write_eeprom(struct s2io_nic *sp, int off, u64 data, int cnt)
{
  u64 val64;
  
#line 5675 
  int exit_cnt = 0;
  
#line 5675 
  int ret = -1;
  
#line 5677 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5679 
  if ((unsigned int)sp->device_type == 1U) {
    
#line 5680 
    val64 = ((((unsigned long long)off << 48) | ((unsigned long long)cnt << 40)) | (unsigned long long)((unsigned int)data)) | 5764607583163777024ULL;
    
#line 5685 
    SPECIAL_REG_WRITE(val64,(void *)(& bar0->i2c_control),2);
    
#line 5687 
    goto ldv_58289;
    ldv_58288: 
#line 5688 
    ;
    
#line 5688 
    val64 = (u64)readq((void const volatile *)(& bar0->i2c_control));
    
#line 5689 
    if ((val64 & 4294967296ULL) != 0ULL) {
      
#line 5690 
      if ((val64 & 274877906944ULL) == 0ULL) 
#line 5691 
                                             ret = 0; else ;
      
#line 5692 
      goto ldv_58287;
    }
    else ;
    
#line 5694 
    msleep(50U);
    
#line 5695 
    exit_cnt += 1;
    ldv_58289: 
#line 5696 
    ;
    
#line 5687 
    if (exit_cnt <= 4) 
#line 5689 
                       goto ldv_58288; else 
#line 5692 
                                            goto ldv_58287;
    ldv_58287: 
#line 5693 
    ;
  }
  else ;
  
#line 5699 
  if ((unsigned int)sp->device_type == 2U) {
    int tmp_0;
    
#line 5700 
    if (cnt != 8) 
#line 5700 
                  tmp_0 = cnt; else 
#line 5700 
                                    tmp_0 = 0;
    
#line 5700 
    int write_cnt = tmp_0;
    
#line 5701 
    writeq((unsigned long)(data << (64 - (cnt << 3))),(void volatile *)(& bar0->spi_data));
    
#line 5703 
    val64 = (((unsigned long long)write_cnt << 32) | (unsigned long long)off) | 10952754293798600704ULL;
    
#line 5706 
    SPECIAL_REG_WRITE(val64,(void *)(& bar0->spi_control),2);
    
#line 5707 
    val64 |= 72057594037927936ULL;
    
#line 5708 
    SPECIAL_REG_WRITE(val64,(void *)(& bar0->spi_control),2);
    
#line 5709 
    goto ldv_58293;
    ldv_58292: 
#line 5710 
    ;
    
#line 5710 
    val64 = (u64)readq((void const volatile *)(& bar0->spi_control));
    
#line 5711 
    if ((val64 & 288230376151711744ULL) != 0ULL) {
      
#line 5712 
      ret = 1;
      
#line 5713 
      goto ldv_58291;
    }
    else 
      
#line 5714 
      if ((val64 & 144115188075855872ULL) != 0ULL) {
        
#line 5715 
        ret = 0;
        
#line 5716 
        goto ldv_58291;
      }
      else ;
    
#line 5718 
    msleep(50U);
    
#line 5719 
    exit_cnt += 1;
    ldv_58293: 
#line 5720 
    ;
    
#line 5709 
    if (exit_cnt <= 4) 
#line 5711 
                       goto ldv_58292; else 
#line 5714 
                                            goto ldv_58291;
    ldv_58291: 
#line 5715 
    ;
  }
  else ;
  
#line 5722 
  return ret;
}


#line 5724  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_vpd_read(struct s2io_nic *nic)
{
  u8 *vpd_data;
  u8 data;
  int cnt;
  int len;
  
#line 5728 
  int i = 0;
  
#line 5728 
  int fail = 0;
  
#line 5729 
  int vpd_addr = 128;
  
#line 5730 
  struct swStat *swstats = & (nic->mac_control.stats_info)->sw_stat;
  
#line 5732 
  if ((unsigned int)nic->device_type == 2U) {
    
#line 5733 
    strcpy((char *)(& nic->product_name),"Xframe II 10GbE network adapter");
    
#line 5734 
    vpd_addr = 128;
  }
  else {
    
#line 5736 
    strcpy((char *)(& nic->product_name),"Xframe I 10GbE network adapter");
    
#line 5737 
    vpd_addr = 80;
  }
  
#line 5739 
  strcpy((char *)(& nic->serial_num),"NOT AVAILABLE");
  
#line 5741 
  vpd_data = (u8 *)kmalloc(256UL,208U);
  
#line 5742 
  if (vpd_data == (u8 *)0U) {
    
#line 5743 
    swstats->mem_alloc_fail_cnt += 1ULL;
    
#line 5744 
    goto return_label;
  }
  else ;
  
#line 5746 
  swstats->mem_allocated += 256ULL;
  
#line 5748 
  i = 0;
  
#line 5748 
  goto ldv_58310;
  ldv_58309: 
#line 5749 
  ;
  
#line 5749 
  pci_write_config_byte((struct pci_dev const *)nic->pdev,vpd_addr + 2,(unsigned char)((int)((unsigned char)i)));
  
#line 5750 
  pci_read_config_byte((struct pci_dev const *)nic->pdev,vpd_addr + 2,& data);
  
#line 5751 
  pci_write_config_byte((struct pci_dev const *)nic->pdev,vpd_addr + 3,(unsigned char)0);
  
#line 5752 
  cnt = 0;
  
#line 5752 
  goto ldv_58307;
  ldv_58306: 
#line 5753 
  ;
  
#line 5753 
  msleep(2U);
  
#line 5754 
  pci_read_config_byte((struct pci_dev const *)nic->pdev,vpd_addr + 3,& data);
  
#line 5755 
  if ((unsigned int)data == 128U) 
#line 5756 
                                  goto ldv_58305; else ;
  
#line 5752 
  cnt += 1;
  ldv_58307: 
#line 5753 
  ;
  
#line 5752 
  if (cnt <= 4) 
#line 5754 
                goto ldv_58306; else 
#line 5757 
                                     goto ldv_58305;
  ldv_58305: 
#line 5758 
  ;
  
#line 5758 
  if (cnt > 4) {
    
#line 5759 
    if (debug_level >= 0) 
#line 5759 
                          printk("\001"); else ;
    
#line 5760 
    fail = 1;
    
#line 5761 
    goto ldv_58308;
  }
  else ;
  
#line 5763 
  pci_read_config_dword((struct pci_dev const *)nic->pdev,vpd_addr + 4,(u32 *)(vpd_data + i));
  
#line 5748 
  i += 4;
  ldv_58310: 
#line 5749 
  ;
  
#line 5748 
  if (i <= 255) 
#line 5750 
                goto ldv_58309; else 
#line 5753 
                                     goto ldv_58308;
  ldv_58308: 
#line 5754 
  ;
  
#line 5767 
  if (fail == 0) {
    
#line 5769 
    cnt = 0;
    
#line 5769 
    goto ldv_58316;
    ldv_58315: 
#line 5770 
    ;
    
#line 5770 
    if ((unsigned int)*(vpd_data + cnt) == 83U && (unsigned int)*(vpd_data + ((unsigned int)cnt + 1U)) == 78U) {
      int tmp_1;
      
#line 5772 
      len = (int)*(vpd_data + ((unsigned int)cnt + 2U));
      {
        int tmp_0;
        
#line 5773 
        int _min1 = 80;
        
#line 5773 
        int _min2 = 254 - cnt;
        
#line 5773 
        if (_min1 < _min2) 
#line 5773 
                           tmp_0 = _min1; else 
#line 5773 
                                               tmp_0 = _min2;
        
#line 5773 
        tmp_1 = tmp_0;
      }
      
#line 5773 
      ;
      
#line 5773 
      if (tmp_1 > len) {
        
#line 5774 
        memcpy((void *)(& nic->serial_num),(void const *)(vpd_data + ((unsigned int)cnt + 3U)),(unsigned long)len);
        
#line 5777 
        memset((void *)(& nic->serial_num) + len,0,(unsigned long)(80 - len));
        
#line 5780 
        goto ldv_58314;
      }
      else ;
    }
    else ;
    
#line 5769 
    cnt += 1;
    ldv_58316: 
#line 5770 
    ;
    
#line 5769 
    if (cnt <= 251) 
#line 5771 
                    goto ldv_58315; else 
#line 5774 
                                         goto ldv_58314;
    ldv_58314: 
#line 5775 
    ;
  }
  else ;
  
#line 5786 
  if (fail == 0 && (unsigned int)*(vpd_data + 1U) <= 79U) {
    
#line 5787 
    len = (int)*(vpd_data + 1U);
    
#line 5788 
    memcpy((void *)(& nic->product_name),(void const *)(vpd_data + 3U),(unsigned long)len);
    
#line 5789 
    nic->product_name[len] = (unsigned char)0U;
  }
  else ;
  
#line 5791 
  kfree((void const *)vpd_data);
  
#line 5792 
  swstats->mem_freed += 256ULL;
  return_label: 
#line 5793 
                return;
}


#line 5809  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_geeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data_buf)
{
  int __retres;
  u32 i;
  u32 valid;
  u64 data;
  int tmp_0;
  
#line 5814 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5816 
  eeprom->magic = (unsigned int)((int)(sp->pdev)->vendor | ((int)(sp->pdev)->device << 16));
  
#line 5818 
  if (eeprom->offset + eeprom->len > 2048U) 
#line 5819 
                                            eeprom->len = 2048U - eeprom->offset; else ;
  
#line 5821 
  i = 0U;
  
#line 5821 
  goto ldv_58327;
  ldv_58326: 
#line 5822 
  ;
  
#line 5822 
  tmp_0 = read_eeprom(sp,(int)(eeprom->offset + i),& data);
  
#line 5822 
  if (tmp_0 != 0) {
    
#line 5823 
    if (debug_level >= 0) 
#line 5823 
                          printk("\001"); else ;
    
#line 5824 
    __retres = -14;
    
#line 5824 
    goto return_label;
  }
  else ;
  
#line 5826 
  valid = ((((unsigned int)data << 24U) | (((unsigned int)(data >> 8) << 16U) & 16711680U)) | (((unsigned int)(data >> 16) << 8U) & 65535U)) | ((unsigned int)(data >> 24) & 255U);
  
#line 5827 
  memcpy((void *)(data_buf + i),(void const *)(& valid),4UL);
  
#line 5821 
  i += 4U;
  ldv_58327: 
#line 5822 
  ;
  
#line 5821 
  if (eeprom->len > i) 
#line 5823 
                       goto ldv_58326; else 
#line 5826 
                                            goto ldv_58328;
  ldv_58328: 
#line 5827 
  ;
  
#line 5829 
  __retres = 0;
  return_label: 
#line 5829 
                return __retres;
}


#line 5846  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_seeprom(struct net_device *dev, struct ethtool_eeprom *eeprom, u8 *data_buf)
{
  int __retres;
  u64 data;
  int tmp_0;
  
#line 5850 
  int len = (int)eeprom->len;
  
#line 5850 
  int cnt = 0;
  
#line 5851 
  u64 valid = 0ULL;
  
#line 5852 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 5854 
  if (eeprom->magic != (unsigned int)((int)(sp->pdev)->vendor | ((int)(sp->pdev)->device << 16))) {
    
#line 5855 
    if (debug_level >= 0) 
#line 5855 
                          printk("\001",(int)(sp->pdev)->vendor | ((int)(sp->pdev)->device << 16),eeprom->magic); else ;
    
#line 5860 
    __retres = -14;
    
#line 5860 
    goto return_label;
  }
  else ;
  
#line 5863 
  goto ldv_58340;
  ldv_58339: 
#line 5864 
  ;
  
#line 5864 
  data = (unsigned long long)*(data_buf + cnt);
  
#line 5865 
  if (data != 0ULL) 
#line 5866 
                    valid = (unsigned long long)((unsigned int)data << 24U); else 
                                                                    
#line 5868 
                                                                    valid = data;
  
#line 5870 
  tmp_0 = write_eeprom(sp,(int)(eeprom->offset + (unsigned int)cnt),valid,0);
  
#line 5870 
  if (tmp_0 != 0) {
    
#line 5871 
    if (debug_level >= 0) 
#line 5871 
                          printk("\001"); else ;
    
#line 5874 
    __retres = -14;
    
#line 5874 
    goto return_label;
  }
  else ;
  
#line 5876 
  cnt += 1;
  
#line 5877 
  len -= 1;
  ldv_58340: 
#line 5878 
  ;
  
#line 5863 
  if (len != 0) 
#line 5865 
                goto ldv_58339; else 
#line 5868 
                                     goto ldv_58341;
  ldv_58341: 
#line 5869 
  ;
  
#line 5880 
  __retres = 0;
  return_label: 
#line 5880 
                return __retres;
}


#line 5896  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_register_test(struct s2io_nic *sp, uint64_t *data)
{
  u64 exp_val;
  
#line 5898 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 5899 
  u64 val64 = 0ULL;
  
#line 5900 
  int fail = 0;
  
#line 5902 
  val64 = (u64)readq((void const volatile *)(& bar0->pif_rd_swapper_fb));
  
#line 5903 
  if (val64 != 81985529216486895ULL) {
    
#line 5904 
    fail = 1;
    
#line 5905 
    if (debug_level > 1) 
#line 5905 
                         printk("\001",1); else ;
  }
  else ;
  
#line 5908 
  val64 = (u64)readq((void const volatile *)(& bar0->rmac_pause_cfg));
  
#line 5909 
  if (val64 != 13835339525963907072ULL) {
    
#line 5910 
    fail = 1;
    
#line 5911 
    if (debug_level > 1) 
#line 5911 
                         printk("\001",2); else ;
  }
  else ;
  
#line 5914 
  val64 = (u64)readq((void const volatile *)(& bar0->rx_queue_cfg));
  
#line 5915 
  if ((unsigned int)sp->device_type == 2U) 
#line 5916 
                                           exp_val = 289360691352306692ULL; else 
                                                                    
#line 5918 
                                                                    exp_val = 578721382704613384ULL;
  
#line 5919 
  if (val64 != exp_val) {
    
#line 5920 
    fail = 1;
    
#line 5921 
    if (debug_level > 1) 
#line 5921 
                         printk("\001",3); else ;
  }
  else ;
  
#line 5924 
  val64 = (u64)readq((void const volatile *)(& bar0->xgxs_efifo_cfg));
  
#line 5925 
  if (val64 != 421729310ULL) {
    
#line 5926 
    fail = 1;
    
#line 5927 
    if (debug_level > 1) 
#line 5927 
                         printk("\001",4); else ;
  }
  else ;
  
#line 5930 
  val64 = 6510615555426900570ULL;
  
#line 5931 
  writeq((unsigned long)val64,(void volatile *)(& bar0->xmsi_data));
  
#line 5932 
  val64 = (u64)readq((void const volatile *)(& bar0->xmsi_data));
  
#line 5933 
  if (val64 != 6510615555426900570ULL) {
    
#line 5934 
    fail = 1;
    
#line 5935 
    if (debug_level >= 0) 
#line 5935 
                          printk("\001",1); else ;
  }
  else ;
  
#line 5938 
  val64 = 11936128518282651045ULL;
  
#line 5939 
  writeq((unsigned long)val64,(void volatile *)(& bar0->xmsi_data));
  
#line 5940 
  val64 = (u64)readq((void const volatile *)(& bar0->xmsi_data));
  
#line 5941 
  if (val64 != 11936128518282651045ULL) {
    
#line 5942 
    fail = 1;
    
#line 5943 
    if (debug_level >= 0) 
#line 5943 
                          printk("\001",2); else ;
  }
  else ;
  
#line 5946 
  *data = (unsigned long long)fail;
  
#line 5947 
  return fail;
}


#line 5963  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_eeprom_test(struct s2io_nic *sp, uint64_t *data)
{
  u64 ret_data;
  u64 org_4F0;
  u64 org_7F0;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_5;
  int tmp_6;
  
#line 5965 
  int fail = 0;
  
#line 5967 
  u8 saved_4F0 = (unsigned char)0U;
  
#line 5967 
  u8 saved_7F0 = (unsigned char)0U;
  
#line 5968 
  struct net_device *dev = sp->dev;
  
#line 5974 
  if ((unsigned int)sp->device_type == 1U) {
    int tmp;
    
#line 5975 
    tmp = write_eeprom(sp,0,0ULL,3);
    
#line 5975 
    if (tmp == 0) 
#line 5976 
                  fail = 1; else ;
  }
  else ;
  
#line 5979 
  tmp_0 = read_eeprom(sp,1264,& org_4F0);
  
#line 5979 
  if (tmp_0 == 0) 
#line 5980 
                  saved_4F0 = (unsigned char)1U; else ;
  
#line 5981 
  tmp_1 = read_eeprom(sp,2032,& org_7F0);
  
#line 5981 
  if (tmp_1 == 0) 
#line 5982 
                  saved_7F0 = (unsigned char)1U; else ;
  
#line 5985 
  tmp_2 = write_eeprom(sp,1264,74565ULL,3);
  
#line 5985 
  if (tmp_2 != 0) 
#line 5986 
                  fail = 1; else ;
  
#line 5987 
  tmp_3 = read_eeprom(sp,1264,& ret_data);
  
#line 5987 
  if (tmp_3 != 0) 
#line 5988 
                  fail = 1; else ;
  
#line 5990 
  if (ret_data != 74565ULL) {
    
#line 5991 
    if (debug_level >= 0) 
#line 5991 
                          printk("\001",(char *)(& dev->name),74565ULL,ret_data); else ;
    
#line 5995 
    fail = 1;
  }
  else ;
  
#line 5999 
  write_eeprom(sp,1264,16777215ULL,3);
  
#line 6002 
  if ((unsigned int)sp->device_type == 1U) {
    int tmp_4;
    
#line 6003 
    tmp_4 = write_eeprom(sp,124,0ULL,3);
    
#line 6003 
    if (tmp_4 == 0) 
#line 6004 
                    fail = 1; else ;
  }
  else ;
  
#line 6007 
  tmp_5 = write_eeprom(sp,2032,74565ULL,3);
  
#line 6007 
  if (tmp_5 != 0) 
#line 6008 
                  fail = 1; else ;
  
#line 6009 
  tmp_6 = read_eeprom(sp,2032,& ret_data);
  
#line 6009 
  if (tmp_6 != 0) 
#line 6010 
                  fail = 1; else ;
  
#line 6012 
  if (ret_data != 74565ULL) {
    
#line 6013 
    if (debug_level >= 0) 
#line 6013 
                          printk("\001",(char *)(& dev->name),74565ULL,ret_data); else ;
    
#line 6017 
    fail = 1;
  }
  else ;
  
#line 6021 
  write_eeprom(sp,2032,16777215ULL,3);
  
#line 6023 
  if ((unsigned int)sp->device_type == 1U) {
    int tmp_7;
    int tmp_8;
    int tmp_9;
    int tmp_10;
    
#line 6025 
    tmp_7 = write_eeprom(sp,128,0ULL,3);
    
#line 6025 
    if (tmp_7 == 0) 
#line 6026 
                    fail = 1; else ;
    
#line 6029 
    tmp_8 = write_eeprom(sp,252,0ULL,3);
    
#line 6029 
    if (tmp_8 == 0) 
#line 6030 
                    fail = 1; else ;
    
#line 6033 
    tmp_9 = write_eeprom(sp,256,0ULL,3);
    
#line 6033 
    if (tmp_9 == 0) 
#line 6034 
                    fail = 1; else ;
    
#line 6037 
    tmp_10 = write_eeprom(sp,1260,0ULL,3);
    
#line 6037 
    if (tmp_10 == 0) 
#line 6038 
                     fail = 1; else ;
  }
  else ;
  
#line 6042 
  if ((unsigned int)saved_4F0 != 0U) 
#line 6043 
                                     write_eeprom(sp,1264,org_4F0,3); else ;
  
#line 6044 
  if ((unsigned int)saved_7F0 != 0U) 
#line 6045 
                                     write_eeprom(sp,2032,org_7F0,3); else ;
  
#line 6047 
  *data = (unsigned long long)fail;
  
#line 6048 
  return fail;
}


#line 6065  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_bist_test(struct s2io_nic *sp, uint64_t *data)
{
  
#line 6067 
  u8 bist = (unsigned char)0U;
  
#line 6068 
  int cnt = 0;
  
#line 6068 
  int ret = -1;
  
#line 6070 
  pci_read_config_byte((struct pci_dev const *)sp->pdev,15,& bist);
  
#line 6071 
  bist = (unsigned char)((unsigned int)bist | 64U);
  
#line 6072 
  pci_write_config_word((struct pci_dev const *)sp->pdev,15,(unsigned short)((int)bist));
  
#line 6074 
  goto ldv_58370;
  ldv_58369: 
#line 6075 
  ;
  
#line 6075 
  pci_read_config_byte((struct pci_dev const *)sp->pdev,15,& bist);
  
#line 6076 
  if (((int)bist & 64) == 0) {
    
#line 6077 
    *data = (unsigned long long)bist & 15ULL;
    
#line 6078 
    ret = 0;
    
#line 6079 
    goto ldv_58368;
  }
  else ;
  
#line 6081 
  msleep(100U);
  
#line 6082 
  cnt += 1;
  ldv_58370: 
#line 6083 
  ;
  
#line 6074 
  if (cnt <= 19) 
#line 6076 
                 goto ldv_58369; else 
#line 6079 
                                      goto ldv_58368;
  ldv_58368: 
#line 6080 
  ;
  
#line 6085 
  return ret;
}


#line 6101  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_link_test(struct s2io_nic *sp, uint64_t *data)
{
  int __retres;
  u64 val64;
  
#line 6103 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 6106 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
  
#line 6107 
  if ((val64 & 216172782113783808ULL) != 0ULL) 
#line 6108 
                                               *data = 1ULL; else 
#line 6110 
                                                                  *data = 0ULL;
  
#line 6112 
  __retres = (int)*data;
  
#line 6112 
  return __retres;
}


#line 6128  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_rldram_test(struct s2io_nic *sp, uint64_t *data)
{
  u64 val64;
  int cnt;
  
#line 6130 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 6132 
  int iteration = 0;
  
#line 6132 
  int test_fail = 0;
  
#line 6134 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
  
#line 6135 
  val64 &= 18446744073709551359ULL;
  
#line 6136 
  writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
  
#line 6138 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_test_ctrl));
  
#line 6139 
  val64 |= 65536ULL;
  
#line 6140 
  SPECIAL_REG_WRITE(val64,(void *)(& bar0->mc_rldram_test_ctrl),2);
  
#line 6142 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_mrs));
  
#line 6143 
  val64 |= 16777216ULL;
  
#line 6144 
  SPECIAL_REG_WRITE(val64,(void *)(& bar0->mc_rldram_mrs),1);
  
#line 6146 
  val64 |= 65536ULL;
  
#line 6147 
  SPECIAL_REG_WRITE(val64,(void *)(& bar0->mc_rldram_mrs),1);
  
#line 6149 
  goto ldv_58394;
  ldv_58393: 
#line 6150 
  ;
  
#line 6150 
  val64 = 6148914692668129280ULL;
  
#line 6151 
  if (iteration == 1) 
#line 6152 
                      val64 ^= 18446744073709486080ULL; else ;
  
#line 6153 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mc_rldram_test_d0));
  
#line 6155 
  val64 = 12297741055038914560ULL;
  
#line 6156 
  if (iteration == 1) 
#line 6157 
                      val64 ^= 18446744073709486080ULL; else ;
  
#line 6158 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mc_rldram_test_d1));
  
#line 6160 
  val64 = 6172933889243873280ULL;
  
#line 6161 
  if (iteration == 1) 
#line 6162 
                      val64 ^= 18446744073709486080ULL; else ;
  
#line 6163 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mc_rldram_test_d2));
  
#line 6165 
  val64 = 274877776128ULL;
  
#line 6166 
  writeq((unsigned long)val64,(void volatile *)(& bar0->mc_rldram_test_add));
  
#line 6168 
  val64 = 72339069014704128ULL;
  
#line 6171 
  SPECIAL_REG_WRITE(val64,(void *)(& bar0->mc_rldram_test_ctrl),2);
  
#line 6173 
  cnt = 0;
  
#line 6173 
  goto ldv_58388;
  ldv_58387: 
#line 6174 
  ;
  
#line 6174 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_test_ctrl));
  
#line 6175 
  if ((val64 & 1099511627776ULL) != 0ULL) 
#line 6176 
                                          goto ldv_58386; else ;
  
#line 6177 
  msleep(200U);
  
#line 6173 
  cnt += 1;
  ldv_58388: 
#line 6174 
  ;
  
#line 6173 
  if (cnt <= 4) 
#line 6175 
                goto ldv_58387; else 
#line 6178 
                                     goto ldv_58386;
  ldv_58386: 
#line 6179 
  ;
  
#line 6180 
  if (cnt == 5) 
#line 6181 
                goto ldv_58389; else ;
  
#line 6183 
  val64 = 281474976776192ULL;
  
#line 6184 
  SPECIAL_REG_WRITE(val64,(void *)(& bar0->mc_rldram_test_ctrl),2);
  
#line 6186 
  cnt = 0;
  
#line 6186 
  goto ldv_58392;
  ldv_58391: 
#line 6187 
  ;
  
#line 6187 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_test_ctrl));
  
#line 6188 
  if ((val64 & 1099511627776ULL) != 0ULL) 
#line 6189 
                                          goto ldv_58390; else ;
  
#line 6190 
  msleep(500U);
  
#line 6186 
  cnt += 1;
  ldv_58392: 
#line 6187 
  ;
  
#line 6186 
  if (cnt <= 4) 
#line 6188 
                goto ldv_58391; else 
#line 6191 
                                     goto ldv_58390;
  ldv_58390: 
#line 6192 
  ;
  
#line 6193 
  if (cnt == 5) 
#line 6194 
                goto ldv_58389; else ;
  
#line 6196 
  val64 = (u64)readq((void const volatile *)(& bar0->mc_rldram_test_ctrl));
  
#line 6197 
  if ((val64 & 4294967296ULL) == 0ULL) 
#line 6198 
                                       test_fail = 1; else ;
  
#line 6200 
  iteration += 1;
  ldv_58394: 
#line 6201 
  ;
  
#line 6149 
  if (iteration <= 1) 
#line 6151 
                      goto ldv_58393; else 
#line 6154 
                                           goto ldv_58389;
  ldv_58389: 
#line 6155 
  ;
  
#line 6203 
  *data = (unsigned long long)test_fail;
  
#line 6206 
  SPECIAL_REG_WRITE(0ULL,(void *)(& bar0->mc_rldram_test_ctrl),2);
  
#line 6208 
  return test_fail;
}


#line 6226  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_ethtool_test(struct net_device *dev, struct ethtool_test *ethtest, uint64_t *data)
{
  bool tmp_0;
  
#line 6230 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 6231 
  tmp_0 = netif_running((struct net_device const *)sp->dev);
  
#line 6231 
  int orig_state = (int)tmp_0;
  
#line 6233 
  if (ethtest->flags == 1U) {
    int tmp_1;
    int tmp_2;
    int tmp_3;
    int tmp_4;
    
#line 6235 
    if (orig_state != 0) 
#line 6236 
                         s2io_close(sp->dev); else ;
    
#line 6238 
    tmp_1 = s2io_register_test(sp,data);
    
#line 6238 
    if (tmp_1 != 0) 
#line 6239 
                    ethtest->flags |= 2U; else ;
    
#line 6241 
    s2io_reset(sp);
    
#line 6243 
    tmp_2 = s2io_rldram_test(sp,data + 3U);
    
#line 6243 
    if (tmp_2 != 0) 
#line 6244 
                    ethtest->flags |= 2U; else ;
    
#line 6246 
    s2io_reset(sp);
    
#line 6248 
    tmp_3 = s2io_eeprom_test(sp,data + 1U);
    
#line 6248 
    if (tmp_3 != 0) 
#line 6249 
                    ethtest->flags |= 2U; else ;
    
#line 6251 
    tmp_4 = s2io_bist_test(sp,data + 4U);
    
#line 6251 
    if (tmp_4 != 0) 
#line 6252 
                    ethtest->flags |= 2U; else ;
    
#line 6254 
    if (orig_state != 0) 
#line 6255 
                         s2io_open(sp->dev); else ;
    
#line 6257 
    *(data + 2U) = 0ULL;
  }
  else {
    int tmp_5;
    
#line 6260 
    if (orig_state == 0) {
      
#line 6261 
      if (debug_level >= 0) 
#line 6261 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 6263 
      *data = 18446744073709551615ULL;
      
#line 6264 
      *(data + 1U) = 18446744073709551615ULL;
      
#line 6265 
      *(data + 2U) = 18446744073709551615ULL;
      
#line 6266 
      *(data + 3U) = 18446744073709551615ULL;
      
#line 6267 
      *(data + 4U) = 18446744073709551615ULL;
    }
    else ;
    
#line 6270 
    tmp_5 = s2io_link_test(sp,data + 2U);
    
#line 6270 
    if (tmp_5 != 0) 
#line 6271 
                    ethtest->flags |= 2U; else ;
    
#line 6273 
    *data = 0ULL;
    
#line 6274 
    *(data + 1U) = 0ULL;
    
#line 6275 
    *(data + 3U) = 0ULL;
    
#line 6276 
    *(data + 4U) = 0ULL;
  }
  
#line 6278 
  return;
}


#line 6280  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_get_ethtool_stats(struct net_device *dev, struct ethtool_stats *estats, u64 *tmp_stats)
{
  int k;
  int tmp_0;
  int tmp_1;
  int tmp_2;
  int tmp_3;
  int tmp_4;
  int tmp_5;
  int tmp_6;
  int tmp_7;
  int tmp_8;
  int tmp_9;
  int tmp_10;
  int tmp_11;
  int tmp_12;
  int tmp_13;
  int tmp_14;
  int tmp_15;
  int tmp_16;
  int tmp_17;
  int tmp_18;
  int tmp_19;
  int tmp_20;
  int tmp_21;
  int tmp_22;
  int tmp_23;
  int tmp_24;
  int tmp_25;
  int tmp_26;
  int tmp_27;
  int tmp_28;
  int tmp_29;
  int tmp_30;
  int tmp_31;
  int tmp_32;
  int tmp_33;
  int tmp_34;
  int tmp_35;
  int tmp_36;
  int tmp_37;
  int tmp_38;
  int tmp_39;
  int tmp_40;
  int tmp_41;
  int tmp_42;
  int tmp_43;
  int tmp_44;
  int tmp_45;
  int tmp_46;
  int tmp_47;
  int tmp_48;
  int tmp_49;
  int tmp_50;
  int tmp_51;
  int tmp_52;
  int tmp_53;
  int tmp_54;
  int tmp_55;
  int tmp_56;
  int tmp_57;
  int tmp_58;
  int tmp_59;
  int tmp_60;
  int tmp_61;
  int tmp_62;
  int tmp_63;
  int tmp_64;
  int tmp_65;
  int tmp_66;
  int tmp_67;
  int tmp_68;
  int tmp_69;
  int tmp_70;
  int tmp_71;
  int tmp_72;
  int tmp_73;
  int tmp_74;
  int tmp_75;
  int tmp_76;
  int tmp_77;
  int tmp_78;
  int tmp_79;
  int tmp_80;
  int tmp_81;
  int tmp_82;
  int tmp_83;
  int tmp_84;
  int tmp_85;
  int tmp_86;
  int tmp_87;
  int tmp_88;
  int tmp_89;
  int tmp_90;
  int tmp_91;
  int tmp_92;
  int tmp_93;
  int tmp_110;
  int tmp_111;
  int tmp_112;
  int tmp_113;
  int tmp_114;
  int tmp_115;
  int tmp_116;
  int tmp_117;
  int tmp_118;
  int tmp_119;
  int tmp_120;
  int tmp_121;
  int tmp_122;
  int tmp_123;
  int tmp_124;
  int tmp_125;
  int tmp_126;
  int tmp_127;
  int tmp_128;
  int tmp_129;
  int tmp_130;
  int tmp_131;
  int tmp_132;
  int tmp_133;
  int tmp_137;
  int tmp_138;
  int tmp_139;
  int tmp_140;
  int tmp_141;
  int tmp_142;
  int tmp_143;
  int tmp_144;
  int tmp_145;
  int tmp_146;
  int tmp_147;
  int tmp_148;
  int tmp_149;
  int tmp_150;
  int tmp_151;
  int tmp_152;
  int tmp_153;
  int tmp_154;
  int tmp_155;
  int tmp_156;
  int tmp_157;
  int tmp_158;
  int tmp_159;
  int tmp_160;
  int tmp_161;
  int tmp_162;
  int tmp_163;
  int tmp_164;
  int tmp_165;
  int tmp_166;
  int tmp_167;
  int tmp_168;
  int tmp_169;
  int tmp_170;
  int tmp_171;
  int tmp_172;
  int tmp_173;
  int tmp_174;
  int tmp_175;
  int tmp_176;
  
#line 6284 
  int i = 0;
  
#line 6285 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 6286 
  struct stat_block *stats = sp->mac_control.stats_info;
  
#line 6287 
  struct swStat *swstats = & stats->sw_stat;
  
#line 6288 
  struct xpakStat *xstats = & stats->xpak_stat;
  
#line 6290 
  s2io_updt_stats(sp);
  
#line 6291 
  tmp_0 = i;
  
#line 6291 
  i += 1;
  
#line 6291 
  *(tmp_stats + tmp_0) = ((unsigned long long)stats->tmac_frms_oflow << 32) | (unsigned long long)stats->tmac_frms;
  
#line 6294 
  tmp_1 = i;
  
#line 6294 
  i += 1;
  
#line 6294 
  *(tmp_stats + tmp_1) = ((unsigned long long)stats->tmac_data_octets_oflow << 32) | (unsigned long long)stats->tmac_data_octets;
  
#line 6297 
  tmp_2 = i;
  
#line 6297 
  i += 1;
  
#line 6297 
  *(tmp_stats + tmp_2) = stats->tmac_drop_frms;
  
#line 6298 
  tmp_3 = i;
  
#line 6298 
  i += 1;
  
#line 6298 
  *(tmp_stats + tmp_3) = ((unsigned long long)stats->tmac_mcst_frms_oflow << 32) | (unsigned long long)stats->tmac_mcst_frms;
  
#line 6301 
  tmp_4 = i;
  
#line 6301 
  i += 1;
  
#line 6301 
  *(tmp_stats + tmp_4) = ((unsigned long long)stats->tmac_bcst_frms_oflow << 32) | (unsigned long long)stats->tmac_bcst_frms;
  
#line 6304 
  tmp_5 = i;
  
#line 6304 
  i += 1;
  
#line 6304 
  *(tmp_stats + tmp_5) = stats->tmac_pause_ctrl_frms;
  
#line 6305 
  tmp_6 = i;
  
#line 6305 
  i += 1;
  
#line 6305 
  *(tmp_stats + tmp_6) = ((unsigned long long)stats->tmac_ttl_octets_oflow << 32) | (unsigned long long)stats->tmac_ttl_octets;
  
#line 6308 
  tmp_7 = i;
  
#line 6308 
  i += 1;
  
#line 6308 
  *(tmp_stats + tmp_7) = ((unsigned long long)stats->tmac_ucst_frms_oflow << 32) | (unsigned long long)stats->tmac_ucst_frms;
  
#line 6311 
  tmp_8 = i;
  
#line 6311 
  i += 1;
  
#line 6311 
  *(tmp_stats + tmp_8) = ((unsigned long long)stats->tmac_nucst_frms_oflow << 32) | (unsigned long long)stats->tmac_nucst_frms;
  
#line 6314 
  tmp_9 = i;
  
#line 6314 
  i += 1;
  
#line 6314 
  *(tmp_stats + tmp_9) = ((unsigned long long)stats->tmac_any_err_frms_oflow << 32) | (unsigned long long)stats->tmac_any_err_frms;
  
#line 6317 
  tmp_10 = i;
  
#line 6317 
  i += 1;
  
#line 6317 
  *(tmp_stats + tmp_10) = stats->tmac_ttl_less_fb_octets;
  
#line 6318 
  tmp_11 = i;
  
#line 6318 
  i += 1;
  
#line 6318 
  *(tmp_stats + tmp_11) = stats->tmac_vld_ip_octets;
  
#line 6319 
  tmp_12 = i;
  
#line 6319 
  i += 1;
  
#line 6319 
  *(tmp_stats + tmp_12) = ((unsigned long long)stats->tmac_vld_ip_oflow << 32) | (unsigned long long)stats->tmac_vld_ip;
  
#line 6322 
  tmp_13 = i;
  
#line 6322 
  i += 1;
  
#line 6322 
  *(tmp_stats + tmp_13) = ((unsigned long long)stats->tmac_drop_ip_oflow << 32) | (unsigned long long)stats->tmac_drop_ip;
  
#line 6325 
  tmp_14 = i;
  
#line 6325 
  i += 1;
  
#line 6325 
  *(tmp_stats + tmp_14) = ((unsigned long long)stats->tmac_icmp_oflow << 32) | (unsigned long long)stats->tmac_icmp;
  
#line 6328 
  tmp_15 = i;
  
#line 6328 
  i += 1;
  
#line 6328 
  *(tmp_stats + tmp_15) = ((unsigned long long)stats->tmac_rst_tcp_oflow << 32) | (unsigned long long)stats->tmac_rst_tcp;
  
#line 6331 
  tmp_16 = i;
  
#line 6331 
  i += 1;
  
#line 6331 
  *(tmp_stats + tmp_16) = stats->tmac_tcp;
  
#line 6332 
  tmp_17 = i;
  
#line 6332 
  i += 1;
  
#line 6332 
  *(tmp_stats + tmp_17) = ((unsigned long long)stats->tmac_udp_oflow << 32) | (unsigned long long)stats->tmac_udp;
  
#line 6334 
  tmp_18 = i;
  
#line 6334 
  i += 1;
  
#line 6334 
  *(tmp_stats + tmp_18) = ((unsigned long long)stats->rmac_vld_frms_oflow << 32) | (unsigned long long)stats->rmac_vld_frms;
  
#line 6337 
  tmp_19 = i;
  
#line 6337 
  i += 1;
  
#line 6337 
  *(tmp_stats + tmp_19) = ((unsigned long long)stats->rmac_data_octets_oflow << 32) | (unsigned long long)stats->rmac_data_octets;
  
#line 6340 
  tmp_20 = i;
  
#line 6340 
  i += 1;
  
#line 6340 
  *(tmp_stats + tmp_20) = stats->rmac_fcs_err_frms;
  
#line 6341 
  tmp_21 = i;
  
#line 6341 
  i += 1;
  
#line 6341 
  *(tmp_stats + tmp_21) = stats->rmac_drop_frms;
  
#line 6342 
  tmp_22 = i;
  
#line 6342 
  i += 1;
  
#line 6342 
  *(tmp_stats + tmp_22) = ((unsigned long long)stats->rmac_vld_mcst_frms_oflow << 32) | (unsigned long long)stats->rmac_vld_mcst_frms;
  
#line 6345 
  tmp_23 = i;
  
#line 6345 
  i += 1;
  
#line 6345 
  *(tmp_stats + tmp_23) = ((unsigned long long)stats->rmac_vld_bcst_frms_oflow << 32) | (unsigned long long)stats->rmac_vld_bcst_frms;
  
#line 6348 
  tmp_24 = i;
  
#line 6348 
  i += 1;
  
#line 6348 
  *(tmp_stats + tmp_24) = (unsigned long long)stats->rmac_in_rng_len_err_frms;
  
#line 6349 
  tmp_25 = i;
  
#line 6349 
  i += 1;
  
#line 6349 
  *(tmp_stats + tmp_25) = (unsigned long long)stats->rmac_out_rng_len_err_frms;
  
#line 6350 
  tmp_26 = i;
  
#line 6350 
  i += 1;
  
#line 6350 
  *(tmp_stats + tmp_26) = stats->rmac_long_frms;
  
#line 6351 
  tmp_27 = i;
  
#line 6351 
  i += 1;
  
#line 6351 
  *(tmp_stats + tmp_27) = stats->rmac_pause_ctrl_frms;
  
#line 6352 
  tmp_28 = i;
  
#line 6352 
  i += 1;
  
#line 6352 
  *(tmp_stats + tmp_28) = stats->rmac_unsup_ctrl_frms;
  
#line 6353 
  tmp_29 = i;
  
#line 6353 
  i += 1;
  
#line 6353 
  *(tmp_stats + tmp_29) = ((unsigned long long)stats->rmac_ttl_octets_oflow << 32) | (unsigned long long)stats->rmac_ttl_octets;
  
#line 6356 
  tmp_30 = i;
  
#line 6356 
  i += 1;
  
#line 6356 
  *(tmp_stats + tmp_30) = ((unsigned long long)stats->rmac_accepted_ucst_frms_oflow << 32) | (unsigned long long)stats->rmac_accepted_ucst_frms;
  
#line 6359 
  tmp_31 = i;
  
#line 6359 
  i += 1;
  
#line 6359 
  *(tmp_stats + tmp_31) = ((unsigned long long)stats->rmac_accepted_nucst_frms_oflow << 32) | (unsigned long long)stats->rmac_accepted_nucst_frms;
  
#line 6362 
  tmp_32 = i;
  
#line 6362 
  i += 1;
  
#line 6362 
  *(tmp_stats + tmp_32) = ((unsigned long long)stats->rmac_discarded_frms_oflow << 32) | (unsigned long long)stats->rmac_discarded_frms;
  
#line 6365 
  tmp_33 = i;
  
#line 6365 
  i += 1;
  
#line 6365 
  *(tmp_stats + tmp_33) = ((unsigned long long)stats->rmac_drop_events_oflow << 32) | (unsigned long long)stats->rmac_drop_events;
  
#line 6368 
  tmp_34 = i;
  
#line 6368 
  i += 1;
  
#line 6368 
  *(tmp_stats + tmp_34) = stats->rmac_ttl_less_fb_octets;
  
#line 6369 
  tmp_35 = i;
  
#line 6369 
  i += 1;
  
#line 6369 
  *(tmp_stats + tmp_35) = stats->rmac_ttl_frms;
  
#line 6370 
  tmp_36 = i;
  
#line 6370 
  i += 1;
  
#line 6370 
  *(tmp_stats + tmp_36) = ((unsigned long long)stats->rmac_usized_frms_oflow << 32) | (unsigned long long)stats->rmac_usized_frms;
  
#line 6373 
  tmp_37 = i;
  
#line 6373 
  i += 1;
  
#line 6373 
  *(tmp_stats + tmp_37) = ((unsigned long long)stats->rmac_osized_frms_oflow << 32) | (unsigned long long)stats->rmac_osized_frms;
  
#line 6376 
  tmp_38 = i;
  
#line 6376 
  i += 1;
  
#line 6376 
  *(tmp_stats + tmp_38) = ((unsigned long long)stats->rmac_frag_frms_oflow << 32) | (unsigned long long)stats->rmac_frag_frms;
  
#line 6379 
  tmp_39 = i;
  
#line 6379 
  i += 1;
  
#line 6379 
  *(tmp_stats + tmp_39) = ((unsigned long long)stats->rmac_jabber_frms_oflow << 32) | (unsigned long long)stats->rmac_jabber_frms;
  
#line 6382 
  tmp_40 = i;
  
#line 6382 
  i += 1;
  
#line 6382 
  *(tmp_stats + tmp_40) = stats->rmac_ttl_64_frms;
  
#line 6383 
  tmp_41 = i;
  
#line 6383 
  i += 1;
  
#line 6383 
  *(tmp_stats + tmp_41) = stats->rmac_ttl_65_127_frms;
  
#line 6384 
  tmp_42 = i;
  
#line 6384 
  i += 1;
  
#line 6384 
  *(tmp_stats + tmp_42) = stats->rmac_ttl_128_255_frms;
  
#line 6385 
  tmp_43 = i;
  
#line 6385 
  i += 1;
  
#line 6385 
  *(tmp_stats + tmp_43) = stats->rmac_ttl_256_511_frms;
  
#line 6386 
  tmp_44 = i;
  
#line 6386 
  i += 1;
  
#line 6386 
  *(tmp_stats + tmp_44) = stats->rmac_ttl_512_1023_frms;
  
#line 6387 
  tmp_45 = i;
  
#line 6387 
  i += 1;
  
#line 6387 
  *(tmp_stats + tmp_45) = stats->rmac_ttl_1024_1518_frms;
  
#line 6388 
  tmp_46 = i;
  
#line 6388 
  i += 1;
  
#line 6388 
  *(tmp_stats + tmp_46) = ((unsigned long long)stats->rmac_ip_oflow << 32) | (unsigned long long)stats->rmac_ip;
  
#line 6391 
  tmp_47 = i;
  
#line 6391 
  i += 1;
  
#line 6391 
  *(tmp_stats + tmp_47) = stats->rmac_ip_octets;
  
#line 6392 
  tmp_48 = i;
  
#line 6392 
  i += 1;
  
#line 6392 
  *(tmp_stats + tmp_48) = (unsigned long long)stats->rmac_hdr_err_ip;
  
#line 6393 
  tmp_49 = i;
  
#line 6393 
  i += 1;
  
#line 6393 
  *(tmp_stats + tmp_49) = ((unsigned long long)stats->rmac_drop_ip_oflow << 32) | (unsigned long long)stats->rmac_drop_ip;
  
#line 6396 
  tmp_50 = i;
  
#line 6396 
  i += 1;
  
#line 6396 
  *(tmp_stats + tmp_50) = ((unsigned long long)stats->rmac_icmp_oflow << 32) | (unsigned long long)stats->rmac_icmp;
  
#line 6399 
  tmp_51 = i;
  
#line 6399 
  i += 1;
  
#line 6399 
  *(tmp_stats + tmp_51) = stats->rmac_tcp;
  
#line 6400 
  tmp_52 = i;
  
#line 6400 
  i += 1;
  
#line 6400 
  *(tmp_stats + tmp_52) = ((unsigned long long)stats->rmac_udp_oflow << 32) | (unsigned long long)stats->rmac_udp;
  
#line 6403 
  tmp_53 = i;
  
#line 6403 
  i += 1;
  
#line 6403 
  *(tmp_stats + tmp_53) = ((unsigned long long)stats->rmac_err_drp_udp_oflow << 32) | (unsigned long long)stats->rmac_err_drp_udp;
  
#line 6406 
  tmp_54 = i;
  
#line 6406 
  i += 1;
  
#line 6406 
  *(tmp_stats + tmp_54) = stats->rmac_xgmii_err_sym;
  
#line 6407 
  tmp_55 = i;
  
#line 6407 
  i += 1;
  
#line 6407 
  *(tmp_stats + tmp_55) = stats->rmac_frms_q0;
  
#line 6408 
  tmp_56 = i;
  
#line 6408 
  i += 1;
  
#line 6408 
  *(tmp_stats + tmp_56) = stats->rmac_frms_q1;
  
#line 6409 
  tmp_57 = i;
  
#line 6409 
  i += 1;
  
#line 6409 
  *(tmp_stats + tmp_57) = stats->rmac_frms_q2;
  
#line 6410 
  tmp_58 = i;
  
#line 6410 
  i += 1;
  
#line 6410 
  *(tmp_stats + tmp_58) = stats->rmac_frms_q3;
  
#line 6411 
  tmp_59 = i;
  
#line 6411 
  i += 1;
  
#line 6411 
  *(tmp_stats + tmp_59) = stats->rmac_frms_q4;
  
#line 6412 
  tmp_60 = i;
  
#line 6412 
  i += 1;
  
#line 6412 
  *(tmp_stats + tmp_60) = stats->rmac_frms_q5;
  
#line 6413 
  tmp_61 = i;
  
#line 6413 
  i += 1;
  
#line 6413 
  *(tmp_stats + tmp_61) = stats->rmac_frms_q6;
  
#line 6414 
  tmp_62 = i;
  
#line 6414 
  i += 1;
  
#line 6414 
  *(tmp_stats + tmp_62) = stats->rmac_frms_q7;
  
#line 6415 
  tmp_63 = i;
  
#line 6415 
  i += 1;
  
#line 6415 
  *(tmp_stats + tmp_63) = (unsigned long long)stats->rmac_full_q0;
  
#line 6416 
  tmp_64 = i;
  
#line 6416 
  i += 1;
  
#line 6416 
  *(tmp_stats + tmp_64) = (unsigned long long)stats->rmac_full_q1;
  
#line 6417 
  tmp_65 = i;
  
#line 6417 
  i += 1;
  
#line 6417 
  *(tmp_stats + tmp_65) = (unsigned long long)stats->rmac_full_q2;
  
#line 6418 
  tmp_66 = i;
  
#line 6418 
  i += 1;
  
#line 6418 
  *(tmp_stats + tmp_66) = (unsigned long long)stats->rmac_full_q3;
  
#line 6419 
  tmp_67 = i;
  
#line 6419 
  i += 1;
  
#line 6419 
  *(tmp_stats + tmp_67) = (unsigned long long)stats->rmac_full_q4;
  
#line 6420 
  tmp_68 = i;
  
#line 6420 
  i += 1;
  
#line 6420 
  *(tmp_stats + tmp_68) = (unsigned long long)stats->rmac_full_q5;
  
#line 6421 
  tmp_69 = i;
  
#line 6421 
  i += 1;
  
#line 6421 
  *(tmp_stats + tmp_69) = (unsigned long long)stats->rmac_full_q6;
  
#line 6422 
  tmp_70 = i;
  
#line 6422 
  i += 1;
  
#line 6422 
  *(tmp_stats + tmp_70) = (unsigned long long)stats->rmac_full_q7;
  
#line 6423 
  tmp_71 = i;
  
#line 6423 
  i += 1;
  
#line 6423 
  *(tmp_stats + tmp_71) = ((unsigned long long)stats->rmac_pause_cnt_oflow << 32) | (unsigned long long)stats->rmac_pause_cnt;
  
#line 6426 
  tmp_72 = i;
  
#line 6426 
  i += 1;
  
#line 6426 
  *(tmp_stats + tmp_72) = stats->rmac_xgmii_data_err_cnt;
  
#line 6427 
  tmp_73 = i;
  
#line 6427 
  i += 1;
  
#line 6427 
  *(tmp_stats + tmp_73) = stats->rmac_xgmii_ctrl_err_cnt;
  
#line 6428 
  tmp_74 = i;
  
#line 6428 
  i += 1;
  
#line 6428 
  *(tmp_stats + tmp_74) = ((unsigned long long)stats->rmac_accepted_ip_oflow << 32) | (unsigned long long)stats->rmac_accepted_ip;
  
#line 6431 
  tmp_75 = i;
  
#line 6431 
  i += 1;
  
#line 6431 
  *(tmp_stats + tmp_75) = (unsigned long long)stats->rmac_err_tcp;
  
#line 6432 
  tmp_76 = i;
  
#line 6432 
  i += 1;
  
#line 6432 
  *(tmp_stats + tmp_76) = (unsigned long long)stats->rd_req_cnt;
  
#line 6433 
  tmp_77 = i;
  
#line 6433 
  i += 1;
  
#line 6433 
  *(tmp_stats + tmp_77) = (unsigned long long)stats->new_rd_req_cnt;
  
#line 6434 
  tmp_78 = i;
  
#line 6434 
  i += 1;
  
#line 6434 
  *(tmp_stats + tmp_78) = (unsigned long long)stats->new_rd_req_rtry_cnt;
  
#line 6435 
  tmp_79 = i;
  
#line 6435 
  i += 1;
  
#line 6435 
  *(tmp_stats + tmp_79) = (unsigned long long)stats->rd_rtry_cnt;
  
#line 6436 
  tmp_80 = i;
  
#line 6436 
  i += 1;
  
#line 6436 
  *(tmp_stats + tmp_80) = (unsigned long long)stats->wr_rtry_rd_ack_cnt;
  
#line 6437 
  tmp_81 = i;
  
#line 6437 
  i += 1;
  
#line 6437 
  *(tmp_stats + tmp_81) = (unsigned long long)stats->wr_req_cnt;
  
#line 6438 
  tmp_82 = i;
  
#line 6438 
  i += 1;
  
#line 6438 
  *(tmp_stats + tmp_82) = (unsigned long long)stats->new_wr_req_cnt;
  
#line 6439 
  tmp_83 = i;
  
#line 6439 
  i += 1;
  
#line 6439 
  *(tmp_stats + tmp_83) = (unsigned long long)stats->new_wr_req_rtry_cnt;
  
#line 6440 
  tmp_84 = i;
  
#line 6440 
  i += 1;
  
#line 6440 
  *(tmp_stats + tmp_84) = (unsigned long long)stats->wr_rtry_cnt;
  
#line 6441 
  tmp_85 = i;
  
#line 6441 
  i += 1;
  
#line 6441 
  *(tmp_stats + tmp_85) = (unsigned long long)stats->wr_disc_cnt;
  
#line 6442 
  tmp_86 = i;
  
#line 6442 
  i += 1;
  
#line 6442 
  *(tmp_stats + tmp_86) = (unsigned long long)stats->rd_rtry_wr_ack_cnt;
  
#line 6443 
  tmp_87 = i;
  
#line 6443 
  i += 1;
  
#line 6443 
  *(tmp_stats + tmp_87) = (unsigned long long)stats->txp_wr_cnt;
  
#line 6444 
  tmp_88 = i;
  
#line 6444 
  i += 1;
  
#line 6444 
  *(tmp_stats + tmp_88) = (unsigned long long)stats->txd_rd_cnt;
  
#line 6445 
  tmp_89 = i;
  
#line 6445 
  i += 1;
  
#line 6445 
  *(tmp_stats + tmp_89) = (unsigned long long)stats->txd_wr_cnt;
  
#line 6446 
  tmp_90 = i;
  
#line 6446 
  i += 1;
  
#line 6446 
  *(tmp_stats + tmp_90) = (unsigned long long)stats->rxd_rd_cnt;
  
#line 6447 
  tmp_91 = i;
  
#line 6447 
  i += 1;
  
#line 6447 
  *(tmp_stats + tmp_91) = (unsigned long long)stats->rxd_wr_cnt;
  
#line 6448 
  tmp_92 = i;
  
#line 6448 
  i += 1;
  
#line 6448 
  *(tmp_stats + tmp_92) = (unsigned long long)stats->txf_rd_cnt;
  
#line 6449 
  tmp_93 = i;
  
#line 6449 
  i += 1;
  
#line 6449 
  *(tmp_stats + tmp_93) = (unsigned long long)stats->rxf_wr_cnt;
  
#line 6452 
  if ((unsigned int)sp->device_type == 2U) {
    int tmp_94;
    int tmp_95;
    int tmp_96;
    int tmp_97;
    int tmp_98;
    int tmp_99;
    int tmp_100;
    int tmp_101;
    int tmp_102;
    int tmp_103;
    int tmp_104;
    int tmp_105;
    int tmp_106;
    int tmp_107;
    int tmp_108;
    int tmp_109;
    
#line 6453 
    tmp_94 = i;
    
#line 6453 
    i += 1;
    
#line 6453 
    *(tmp_stats + tmp_94) = stats->rmac_ttl_1519_4095_frms;
    
#line 6455 
    tmp_95 = i;
    
#line 6455 
    i += 1;
    
#line 6455 
    *(tmp_stats + tmp_95) = stats->rmac_ttl_4096_8191_frms;
    
#line 6457 
    tmp_96 = i;
    
#line 6457 
    i += 1;
    
#line 6457 
    *(tmp_stats + tmp_96) = stats->rmac_ttl_8192_max_frms;
    
#line 6459 
    tmp_97 = i;
    
#line 6459 
    i += 1;
    
#line 6459 
    *(tmp_stats + tmp_97) = stats->rmac_ttl_gt_max_frms;
    
#line 6460 
    tmp_98 = i;
    
#line 6460 
    i += 1;
    
#line 6460 
    *(tmp_stats + tmp_98) = stats->rmac_osized_alt_frms;
    
#line 6461 
    tmp_99 = i;
    
#line 6461 
    i += 1;
    
#line 6461 
    *(tmp_stats + tmp_99) = stats->rmac_jabber_alt_frms;
    
#line 6462 
    tmp_100 = i;
    
#line 6462 
    i += 1;
    
#line 6462 
    *(tmp_stats + tmp_100) = stats->rmac_gt_max_alt_frms;
    
#line 6463 
    tmp_101 = i;
    
#line 6463 
    i += 1;
    
#line 6463 
    *(tmp_stats + tmp_101) = stats->rmac_vlan_frms;
    
#line 6464 
    tmp_102 = i;
    
#line 6464 
    i += 1;
    
#line 6464 
    *(tmp_stats + tmp_102) = (unsigned long long)stats->rmac_len_discard;
    
#line 6465 
    tmp_103 = i;
    
#line 6465 
    i += 1;
    
#line 6465 
    *(tmp_stats + tmp_103) = (unsigned long long)stats->rmac_fcs_discard;
    
#line 6466 
    tmp_104 = i;
    
#line 6466 
    i += 1;
    
#line 6466 
    *(tmp_stats + tmp_104) = (unsigned long long)stats->rmac_pf_discard;
    
#line 6467 
    tmp_105 = i;
    
#line 6467 
    i += 1;
    
#line 6467 
    *(tmp_stats + tmp_105) = (unsigned long long)stats->rmac_da_discard;
    
#line 6468 
    tmp_106 = i;
    
#line 6468 
    i += 1;
    
#line 6468 
    *(tmp_stats + tmp_106) = (unsigned long long)stats->rmac_red_discard;
    
#line 6469 
    tmp_107 = i;
    
#line 6469 
    i += 1;
    
#line 6469 
    *(tmp_stats + tmp_107) = (unsigned long long)stats->rmac_rts_discard;
    
#line 6470 
    tmp_108 = i;
    
#line 6470 
    i += 1;
    
#line 6470 
    *(tmp_stats + tmp_108) = (unsigned long long)stats->rmac_ingm_full_discard;
    
#line 6471 
    tmp_109 = i;
    
#line 6471 
    i += 1;
    
#line 6471 
    *(tmp_stats + tmp_109) = (unsigned long long)stats->link_fault_cnt;
  }
  else ;
  
#line 6474 
  tmp_110 = i;
  
#line 6474 
  i += 1;
  
#line 6474 
  *(tmp_stats + tmp_110) = 0ULL;
  
#line 6475 
  tmp_111 = i;
  
#line 6475 
  i += 1;
  
#line 6475 
  *(tmp_stats + tmp_111) = swstats->single_ecc_errs;
  
#line 6476 
  tmp_112 = i;
  
#line 6476 
  i += 1;
  
#line 6476 
  *(tmp_stats + tmp_112) = swstats->double_ecc_errs;
  
#line 6477 
  tmp_113 = i;
  
#line 6477 
  i += 1;
  
#line 6477 
  *(tmp_stats + tmp_113) = swstats->parity_err_cnt;
  
#line 6478 
  tmp_114 = i;
  
#line 6478 
  i += 1;
  
#line 6478 
  *(tmp_stats + tmp_114) = swstats->serious_err_cnt;
  
#line 6479 
  tmp_115 = i;
  
#line 6479 
  i += 1;
  
#line 6479 
  *(tmp_stats + tmp_115) = swstats->soft_reset_cnt;
  
#line 6480 
  tmp_116 = i;
  
#line 6480 
  i += 1;
  
#line 6480 
  *(tmp_stats + tmp_116) = swstats->fifo_full_cnt;
  
#line 6481 
  k = 0;
  
#line 6481 
  goto ldv_58414;
  ldv_58413: 
#line 6482 
  ;
  
#line 6482 
  tmp_117 = i;
  
#line 6482 
  i += 1;
  
#line 6482 
  *(tmp_stats + tmp_117) = swstats->ring_full_cnt[k];
  
#line 6481 
  k += 1;
  ldv_58414: 
#line 6482 
  ;
  
#line 6481 
  if (k <= 7) 
#line 6483 
              goto ldv_58413; else 
#line 6486 
                                   goto ldv_58415;
  ldv_58415: 
#line 6487 
  ;
  
#line 6483 
  tmp_118 = i;
  
#line 6483 
  i += 1;
  
#line 6483 
  *(tmp_stats + tmp_118) = xstats->alarm_transceiver_temp_high;
  
#line 6484 
  tmp_119 = i;
  
#line 6484 
  i += 1;
  
#line 6484 
  *(tmp_stats + tmp_119) = xstats->alarm_transceiver_temp_low;
  
#line 6485 
  tmp_120 = i;
  
#line 6485 
  i += 1;
  
#line 6485 
  *(tmp_stats + tmp_120) = xstats->alarm_laser_bias_current_high;
  
#line 6486 
  tmp_121 = i;
  
#line 6486 
  i += 1;
  
#line 6486 
  *(tmp_stats + tmp_121) = xstats->alarm_laser_bias_current_low;
  
#line 6487 
  tmp_122 = i;
  
#line 6487 
  i += 1;
  
#line 6487 
  *(tmp_stats + tmp_122) = xstats->alarm_laser_output_power_high;
  
#line 6488 
  tmp_123 = i;
  
#line 6488 
  i += 1;
  
#line 6488 
  *(tmp_stats + tmp_123) = xstats->alarm_laser_output_power_low;
  
#line 6489 
  tmp_124 = i;
  
#line 6489 
  i += 1;
  
#line 6489 
  *(tmp_stats + tmp_124) = xstats->warn_transceiver_temp_high;
  
#line 6490 
  tmp_125 = i;
  
#line 6490 
  i += 1;
  
#line 6490 
  *(tmp_stats + tmp_125) = xstats->warn_transceiver_temp_low;
  
#line 6491 
  tmp_126 = i;
  
#line 6491 
  i += 1;
  
#line 6491 
  *(tmp_stats + tmp_126) = xstats->warn_laser_bias_current_high;
  
#line 6492 
  tmp_127 = i;
  
#line 6492 
  i += 1;
  
#line 6492 
  *(tmp_stats + tmp_127) = xstats->warn_laser_bias_current_low;
  
#line 6493 
  tmp_128 = i;
  
#line 6493 
  i += 1;
  
#line 6493 
  *(tmp_stats + tmp_128) = xstats->warn_laser_output_power_high;
  
#line 6494 
  tmp_129 = i;
  
#line 6494 
  i += 1;
  
#line 6494 
  *(tmp_stats + tmp_129) = xstats->warn_laser_output_power_low;
  
#line 6495 
  tmp_130 = i;
  
#line 6495 
  i += 1;
  
#line 6495 
  *(tmp_stats + tmp_130) = swstats->clubbed_frms_cnt;
  
#line 6496 
  tmp_131 = i;
  
#line 6496 
  i += 1;
  
#line 6496 
  *(tmp_stats + tmp_131) = swstats->sending_both;
  
#line 6497 
  tmp_132 = i;
  
#line 6497 
  i += 1;
  
#line 6497 
  *(tmp_stats + tmp_132) = swstats->outof_sequence_pkts;
  
#line 6498 
  tmp_133 = i;
  
#line 6498 
  i += 1;
  
#line 6498 
  *(tmp_stats + tmp_133) = swstats->flush_max_pkts;
  
#line 6499 
  if (swstats->num_aggregations != 0ULL) {
    int tmp_135;
    
#line 6500 
    u64 tmp_134 = swstats->sum_avg_pkts_aggregated;
    
#line 6501 
    int count = 0;
    
#line 6506 
    goto ldv_58419;
    ldv_58418: 
#line 6507 
    ;
    
#line 6507 
    tmp_134 -= swstats->num_aggregations;
    
#line 6508 
    count += 1;
    ldv_58419: 
#line 6509 
    ;
    
#line 6506 
    if (swstats->num_aggregations <= tmp_134) 
#line 6508 
                                              goto ldv_58418; else 
#line 6511 
                                                                   goto ldv_58420;
    ldv_58420: 
#line 6512 
    ;
    
#line 6510 
    tmp_135 = i;
    
#line 6510 
    i += 1;
    
#line 6510 
    *(tmp_stats + tmp_135) = (unsigned long long)count;
  }
  else {
    int tmp_136;
    
#line 6512 
    tmp_136 = i;
    
#line 6512 
    i += 1;
    
#line 6512 
    *(tmp_stats + tmp_136) = 0ULL;
  }
  
#line 6513 
  tmp_137 = i;
  
#line 6513 
  i += 1;
  
#line 6513 
  *(tmp_stats + tmp_137) = swstats->mem_alloc_fail_cnt;
  
#line 6514 
  tmp_138 = i;
  
#line 6514 
  i += 1;
  
#line 6514 
  *(tmp_stats + tmp_138) = swstats->pci_map_fail_cnt;
  
#line 6515 
  tmp_139 = i;
  
#line 6515 
  i += 1;
  
#line 6515 
  *(tmp_stats + tmp_139) = swstats->watchdog_timer_cnt;
  
#line 6516 
  tmp_140 = i;
  
#line 6516 
  i += 1;
  
#line 6516 
  *(tmp_stats + tmp_140) = swstats->mem_allocated;
  
#line 6517 
  tmp_141 = i;
  
#line 6517 
  i += 1;
  
#line 6517 
  *(tmp_stats + tmp_141) = swstats->mem_freed;
  
#line 6518 
  tmp_142 = i;
  
#line 6518 
  i += 1;
  
#line 6518 
  *(tmp_stats + tmp_142) = swstats->link_up_cnt;
  
#line 6519 
  tmp_143 = i;
  
#line 6519 
  i += 1;
  
#line 6519 
  *(tmp_stats + tmp_143) = swstats->link_down_cnt;
  
#line 6520 
  tmp_144 = i;
  
#line 6520 
  i += 1;
  
#line 6520 
  *(tmp_stats + tmp_144) = swstats->link_up_time;
  
#line 6521 
  tmp_145 = i;
  
#line 6521 
  i += 1;
  
#line 6521 
  *(tmp_stats + tmp_145) = swstats->link_down_time;
  
#line 6523 
  tmp_146 = i;
  
#line 6523 
  i += 1;
  
#line 6523 
  *(tmp_stats + tmp_146) = swstats->tx_buf_abort_cnt;
  
#line 6524 
  tmp_147 = i;
  
#line 6524 
  i += 1;
  
#line 6524 
  *(tmp_stats + tmp_147) = swstats->tx_desc_abort_cnt;
  
#line 6525 
  tmp_148 = i;
  
#line 6525 
  i += 1;
  
#line 6525 
  *(tmp_stats + tmp_148) = swstats->tx_parity_err_cnt;
  
#line 6526 
  tmp_149 = i;
  
#line 6526 
  i += 1;
  
#line 6526 
  *(tmp_stats + tmp_149) = swstats->tx_link_loss_cnt;
  
#line 6527 
  tmp_150 = i;
  
#line 6527 
  i += 1;
  
#line 6527 
  *(tmp_stats + tmp_150) = swstats->tx_list_proc_err_cnt;
  
#line 6529 
  tmp_151 = i;
  
#line 6529 
  i += 1;
  
#line 6529 
  *(tmp_stats + tmp_151) = swstats->rx_parity_err_cnt;
  
#line 6530 
  tmp_152 = i;
  
#line 6530 
  i += 1;
  
#line 6530 
  *(tmp_stats + tmp_152) = swstats->rx_abort_cnt;
  
#line 6531 
  tmp_153 = i;
  
#line 6531 
  i += 1;
  
#line 6531 
  *(tmp_stats + tmp_153) = swstats->rx_parity_abort_cnt;
  
#line 6532 
  tmp_154 = i;
  
#line 6532 
  i += 1;
  
#line 6532 
  *(tmp_stats + tmp_154) = swstats->rx_rda_fail_cnt;
  
#line 6533 
  tmp_155 = i;
  
#line 6533 
  i += 1;
  
#line 6533 
  *(tmp_stats + tmp_155) = swstats->rx_unkn_prot_cnt;
  
#line 6534 
  tmp_156 = i;
  
#line 6534 
  i += 1;
  
#line 6534 
  *(tmp_stats + tmp_156) = swstats->rx_fcs_err_cnt;
  
#line 6535 
  tmp_157 = i;
  
#line 6535 
  i += 1;
  
#line 6535 
  *(tmp_stats + tmp_157) = swstats->rx_buf_size_err_cnt;
  
#line 6536 
  tmp_158 = i;
  
#line 6536 
  i += 1;
  
#line 6536 
  *(tmp_stats + tmp_158) = swstats->rx_rxd_corrupt_cnt;
  
#line 6537 
  tmp_159 = i;
  
#line 6537 
  i += 1;
  
#line 6537 
  *(tmp_stats + tmp_159) = swstats->rx_unkn_err_cnt;
  
#line 6538 
  tmp_160 = i;
  
#line 6538 
  i += 1;
  
#line 6538 
  *(tmp_stats + tmp_160) = swstats->tda_err_cnt;
  
#line 6539 
  tmp_161 = i;
  
#line 6539 
  i += 1;
  
#line 6539 
  *(tmp_stats + tmp_161) = swstats->pfc_err_cnt;
  
#line 6540 
  tmp_162 = i;
  
#line 6540 
  i += 1;
  
#line 6540 
  *(tmp_stats + tmp_162) = swstats->pcc_err_cnt;
  
#line 6541 
  tmp_163 = i;
  
#line 6541 
  i += 1;
  
#line 6541 
  *(tmp_stats + tmp_163) = swstats->tti_err_cnt;
  
#line 6542 
  tmp_164 = i;
  
#line 6542 
  i += 1;
  
#line 6542 
  *(tmp_stats + tmp_164) = swstats->tpa_err_cnt;
  
#line 6543 
  tmp_165 = i;
  
#line 6543 
  i += 1;
  
#line 6543 
  *(tmp_stats + tmp_165) = swstats->sm_err_cnt;
  
#line 6544 
  tmp_166 = i;
  
#line 6544 
  i += 1;
  
#line 6544 
  *(tmp_stats + tmp_166) = swstats->lso_err_cnt;
  
#line 6545 
  tmp_167 = i;
  
#line 6545 
  i += 1;
  
#line 6545 
  *(tmp_stats + tmp_167) = swstats->mac_tmac_err_cnt;
  
#line 6546 
  tmp_168 = i;
  
#line 6546 
  i += 1;
  
#line 6546 
  *(tmp_stats + tmp_168) = swstats->mac_rmac_err_cnt;
  
#line 6547 
  tmp_169 = i;
  
#line 6547 
  i += 1;
  
#line 6547 
  *(tmp_stats + tmp_169) = swstats->xgxs_txgxs_err_cnt;
  
#line 6548 
  tmp_170 = i;
  
#line 6548 
  i += 1;
  
#line 6548 
  *(tmp_stats + tmp_170) = swstats->xgxs_rxgxs_err_cnt;
  
#line 6549 
  tmp_171 = i;
  
#line 6549 
  i += 1;
  
#line 6549 
  *(tmp_stats + tmp_171) = swstats->rc_err_cnt;
  
#line 6550 
  tmp_172 = i;
  
#line 6550 
  i += 1;
  
#line 6550 
  *(tmp_stats + tmp_172) = swstats->prc_pcix_err_cnt;
  
#line 6551 
  tmp_173 = i;
  
#line 6551 
  i += 1;
  
#line 6551 
  *(tmp_stats + tmp_173) = swstats->rpa_err_cnt;
  
#line 6552 
  tmp_174 = i;
  
#line 6552 
  i += 1;
  
#line 6552 
  *(tmp_stats + tmp_174) = swstats->rda_err_cnt;
  
#line 6553 
  tmp_175 = i;
  
#line 6553 
  i += 1;
  
#line 6553 
  *(tmp_stats + tmp_175) = swstats->rti_err_cnt;
  
#line 6554 
  tmp_176 = i;
  
#line 6554 
  i += 1;
  
#line 6554 
  *(tmp_stats + tmp_176) = swstats->mc_err_cnt;
  
#line 6555 
  return;
}


#line 6557  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ethtool_get_regs_len(struct net_device *dev)
{
  int __retres;
  
#line 6559 
  __retres = 12608;
  
#line 6559 
  return __retres;
}


#line 6563  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_get_eeprom_len(struct net_device *dev)
{
  int __retres;
  
#line 6565 
  __retres = 2048;
  
#line 6565 
  return __retres;
}


#line 6568  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_get_sset_count(struct net_device *dev, int sset)
{
  int __retres;
  
#line 6570 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 6572 
  switch (sset) {
    case 0: 
#line 6573 
    ;
    
#line 6574 
    __retres = 5;
    
#line 6574 
    goto return_label;
    case 1: 
#line 6575 
    ;
    
#line 6576 
    switch ((int)sp->device_type) {
      case 1: 
#line 6577 
      ;
      
#line 6578 
      __retres = 166;
      
#line 6578 
      goto return_label;
      case 2: 
#line 6579 
      ;
      
#line 6580 
      __retres = 182;
      
#line 6580 
      goto return_label;
      default: 
#line 6581 
      ;
      
#line 6582 
      __retres = 0;
      
#line 6582 
      goto return_label;
    }
    default: 
#line 6584 
    ;
    
#line 6585 
    __retres = -95;
    
#line 6585 
    goto return_label;
  }
  return_label: 
#line 6572 
                return __retres;
}


#line 6589  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_ethtool_get_strings(struct net_device *dev, u32 stringset, u8 *data)
{
  
#line 6592 
  int stat_size = 0;
  
#line 6593 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 6595 
  switch (stringset) {
    case (u32)0: 
#line 6596 
    ;
    
#line 6597 
    memcpy((void *)data,(void const *)(& s2io_gstrings),160UL);
    
#line 6598 
    goto ldv_58467;
    case (u32)1: 
#line 6599 
    ;
    
#line 6600 
    stat_size = 3008;
    
#line 6601 
    memcpy((void *)data,(void const *)(& ethtool_xena_stats_keys),(unsigned long)stat_size);
    
#line 6602 
    if ((unsigned int)sp->device_type == 2U) {
      
#line 6603 
      memcpy((void *)(data + stat_size),(void const *)(& ethtool_enhanced_stats_keys),512UL);
      
#line 6606 
      stat_size = (int)((unsigned int)stat_size + 512U);
    }
    else ;
    
#line 6609 
    memcpy((void *)(data + stat_size),(void const *)(& ethtool_driver_stats_keys),2304UL);
  }
  ldv_58467: 
#line 6612 
  ;
  
#line 6613 
  return;
}


#line 6614  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_set_features(struct net_device *dev, netdev_features_t features)
{
  int __retres;
  
#line 6616 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 6617 
  netdev_features_t changed = (dev->features ^ features) & 32768ULL;
  
#line 6619 
  if (changed != 0ULL) {
    bool tmp_1;
    
#line 6619 
    tmp_1 = netif_running((struct net_device const *)dev);
    
#line 6619 
    if ((int)tmp_1 != 0) {
      int rc;
      int tmp_0;
      
#line 6622 
      s2io_stop_all_tx_queue(sp);
      
#line 6623 
      s2io_card_down(sp);
      
#line 6624 
      dev->features = features;
      
#line 6625 
      rc = s2io_card_up(sp);
      
#line 6626 
      if (rc != 0) 
#line 6627 
                   s2io_reset(sp); else 
#line 6629 
                                        s2io_start_all_tx_queue(sp);
      
#line 6631 
      if (rc != 0) 
#line 6631 
                   tmp_0 = rc; else 
#line 6631 
                                    tmp_0 = 1;
      
#line 6631 
      __retres = tmp_0;
      
#line 6631 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 6634 
  __retres = 0;
  return_label: 
#line 6634 
                return __retres;
}


#line 6637  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct ethtool_ops const netdev_ethtool_ops = {.get_settings = & s2io_ethtool_gset, .set_settings = & s2io_ethtool_sset, .get_drvinfo = & s2io_ethtool_gdrvinfo, .get_regs_len = & s2io_ethtool_get_regs_len, .get_regs = & s2io_ethtool_gregs, .get_wol = (void (*)(struct net_device *, struct ethtool_wolinfo *))0, .set_wol = (int (*)(struct net_device *, struct ethtool_wolinfo *))0, .get_msglevel = (u32 (*)(struct net_device *))0, .set_msglevel = (void (*)(struct net_device *, u32 ))0, .nway_reset = (int (*)(struct net_device *))0, .get_link = & ethtool_op_get_link, .get_eeprom_len = & s2io_get_eeprom_len, .get_eeprom = & s2io_ethtool_geeprom, .set_eeprom = & s2io_ethtool_seeprom, .get_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .set_coalesce = (int (*)(struct net_device *, struct ethtool_coalesce *))0, .get_ringparam = & s2io_ethtool_gringparam, .set_ringparam = (int (*)(struct net_device *, struct ethtool_ringparam *))0, .get_pauseparam = & s2io_ethtool_getpause_data, .set_pauseparam = & s2io_ethtool_setpause_data, .self_test = & s2io_ethtool_test, .get_strings = & s2io_ethtool_get_strings, .set_phys_id = & s2io_ethtool_set_led, .get_ethtool_stats = & s2io_get_ethtool_stats, .begin = (int (*)(struct net_device *))0, .complete = (void (*)(struct net_device *))0, .get_priv_flags = (u32 (*)(struct net_device *))0, .set_priv_flags = (int (*)(struct net_device *, u32 ))0, .get_sset_count = & s2io_get_sset_count, .get_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *, u32 *))0, .set_rxnfc = (int (*)(struct net_device *, struct ethtool_rxnfc *))0, .flash_device = (int (*)(struct net_device *, struct ethtool_flash *))0, .reset = (int (*)(struct net_device *, u32 *))0, .get_rxfh_key_size = (u32 (*)(struct net_device *))0, .get_rxfh_indir_size = (u32 (*)(struct net_device *))0, .get_rxfh = (int (*)(struct net_device *, u32 *, u8 *, u8 *))0, .set_rxfh = (int (*)(struct net_device *, u32 const *, u8 const *, u8 const ))0, .get_channels = (void (*)(struct net_device *, struct ethtool_channels *))0, .set_channels = (int (*)(struct net_device *, struct ethtool_channels *))0, .get_dump_flag = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_dump_data = (int (*)(struct net_device *, struct ethtool_dump *, void *))0, .set_dump = (int (*)(struct net_device *, struct ethtool_dump *))0, .get_ts_info = (int (*)(struct net_device *, struct ethtool_ts_info *))0, .get_module_info = (int (*)(struct net_device *, struct ethtool_modinfo *))0, .get_module_eeprom = (int (*)(struct net_device *, struct ethtool_eeprom *, u8 *))0, .get_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .set_eee = (int (*)(struct net_device *, struct ethtool_eee *))0, .get_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void *))0, .set_tunable = (int (*)(struct net_device *, struct ethtool_tunable const *, void const *))0};

#line 6669  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
{
  int __retres;
  
#line 6671 
  __retres = -95;
  
#line 6671 
  return __retres;
}


#line 6685  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_change_mtu(struct net_device *dev, int new_mtu)
{
  int __retres;
  bool tmp_0;
  
#line 6687 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 6688 
  int ret = 0;
  
#line 6690 
  if ((unsigned int)new_mtu + 4294967250U > 9554U) {
    
#line 6691 
    if (debug_level >= 0) 
#line 6691 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 6692 
    __retres = -1;
    
#line 6692 
    goto return_label;
  }
  else ;
  
#line 6695 
  dev->mtu = (unsigned int)new_mtu;
  
#line 6696 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 6696 
  if ((int)tmp_0 != 0) {
    
#line 6697 
    s2io_stop_all_tx_queue(sp);
    
#line 6698 
    s2io_card_down(sp);
    
#line 6699 
    ret = s2io_card_up(sp);
    
#line 6700 
    if (ret != 0) {
      
#line 6701 
      if (debug_level >= 0) 
#line 6701 
                            printk("\001","s2io_change_mtu"); else ;
      
#line 6703 
      __retres = ret;
      
#line 6703 
      goto return_label;
    }
    else ;
    
#line 6705 
    s2io_wake_all_tx_queue(sp);
  }
  else {
    
#line 6707 
    struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
    
#line 6708 
    u64 val64 = (unsigned long long)new_mtu;
    
#line 6710 
    writeq((unsigned long)(val64 << 48),(void volatile *)(& bar0->rmac_max_pyld_len));
  }
  
#line 6713 
  __retres = ret;
  return_label: 
#line 6713 
                return __retres;
}


#line 6722  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_set_link(struct work_struct *work)
{
  struct s2io_nic *tmp;
  register u64 val64;
  u16 subid;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  int tmp_3;
  {
    
#line 6724 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 6724 
    tmp = (struct s2io_nic *)__mptr + 18446744073709481808U;
  }
  
#line 6724 
  struct s2io_nic *nic = tmp;
  
#line 6726 
  struct net_device *dev = nic->dev;
  
#line 6727 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 6731 
  rtnl_lock();
  
#line 6733 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 6733 
  if (tmp_0) 
#line 6733 
             tmp_1 = 0; else 
#line 6733 
                             tmp_1 = 1;
  
#line 6733 
  if (tmp_1) 
#line 6734 
             goto out_unlock; else ;
  
#line 6736 
  tmp_2 = test_and_set_bit(0L,& nic->state);
  
#line 6736 
  if (tmp_2 != 0) 
#line 6738 
                  goto out_unlock; else ;
  
#line 6741 
  subid = (nic->pdev)->subsystem_device;
  
#line 6742 
  tmp_3 = s2io_link_fault_indication(nic);
  
#line 6742 
  if (tmp_3 == 2) 
#line 6747 
                  msleep(100U); else ;
  
#line 6750 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
  
#line 6751 
  if ((val64 & 216172782113783808ULL) == 0ULL) {
    unsigned long tmp_9;
    
#line 6752 
    tmp_9 = readq((void const volatile *)(& bar0->adapter_control));
    
#line 6752 
    if (((unsigned long long)tmp_9 & 72057594037927936ULL) == 0ULL) {
      int tmp_8;
      
#line 6753 
      tmp_8 = verify_xena_quiescence(nic);
      
#line 6753 
      if (tmp_8 != 0) {
        
#line 6754 
        val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
        
#line 6755 
        val64 |= 72057594037927936ULL;
        
#line 6756 
        writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
        
#line 6757 
        if ((unsigned int)nic->device_type == 1U && ((unsigned int)subid + 40949U <= 2U || (unsigned int)subid + 39925U <= 2U)) {
          
#line 6759 
          val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
          
#line 6760 
          val64 |= 36028797018963968ULL;
          
#line 6761 
          writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_control));
          
#line 6762 
          val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
        }
        else {
          
#line 6764 
          val64 |= 1099511627776ULL;
          
#line 6765 
          writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
        }
        
#line 6767 
        nic->device_enabled_once = 1;
      }
      else {
        
#line 6769 
        if (debug_level >= 0) 
#line 6769 
                              printk("\001",(char *)(& dev->name)); else ;
        
#line 6772 
        s2io_stop_all_tx_queue(nic);
      }
    }
    else ;
    
#line 6775 
    val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
    
#line 6776 
    val64 |= 1099511627776ULL;
    
#line 6777 
    writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
    
#line 6778 
    s2io_link(nic,2);
  }
  else {
    
#line 6780 
    if ((unsigned int)nic->device_type == 1U && ((unsigned int)subid + 40949U <= 2U || (unsigned int)subid + 39925U <= 2U)) {
      
#line 6782 
      val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
      
#line 6783 
      val64 &= 18410715276690587647ULL;
      
#line 6784 
      writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_control));
      
#line 6785 
      val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
    }
    else ;
    
#line 6788 
    val64 = (u64)readq((void const volatile *)(& bar0->adapter_control));
    
#line 6789 
    val64 &= 18446742974197923839ULL;
    
#line 6790 
    writeq((unsigned long)val64,(void volatile *)(& bar0->adapter_control));
    
#line 6791 
    s2io_link(nic,1);
  }
  
#line 6793 
  set_bit(0L,& nic->state);
  out_unlock: 
#line 6795 
  ;
  
#line 6796 
  rtnl_unlock();
  
#line 6797 
  return;
}


#line 6799  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int set_rxd_buffer_pointer(struct s2io_nic *sp, struct RxD_t *rxdp, struct buffAdd *ba, struct sk_buff **skb, u64 *temp0, u64 *temp1, u64 *temp2, int size)
{
  int __retres;
  
#line 6804 
  struct net_device *dev = sp->dev;
  
#line 6805 
  struct swStat *stats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 6807 
  if (sp->rxd_mode == 0 && rxdp->Host_Control == 0ULL) {
    
#line 6808 
    struct RxD1 *rxdp1 = (struct RxD1 *)rxdp;
    
#line 6810 
    if (*skb != (struct sk_buff *)0) {
      
#line 6811 
      if (debug_level > 1) 
#line 6811 
                           printk("\001"); else ;
      
#line 6817 
      rxdp1->Buffer0_ptr = *temp0;
    }
    else {
      u64 tmp;
      int tmp_0;
      
#line 6819 
      *skb = netdev_alloc_skb(dev,(unsigned int)size);
      
#line 6820 
      if (*skb == (struct sk_buff *)0) {
        
#line 6821 
        if (debug_level > 1) 
#line 6821 
                             printk("\001",(char *)(& dev->name),(char *)"1 buf mode SKBs"); else ;
        
#line 6824 
        stats->mem_alloc_fail_cnt += 1ULL;
        
#line 6825 
        __retres = -12;
        
#line 6825 
        goto return_label;
      }
      else ;
      
#line 6827 
      stats->mem_allocated += (unsigned long long)(*skb)->truesize;
      
#line 6832 
      tmp = pci_map_single(sp->pdev,(void *)(*skb)->data,(unsigned long)size,2);
      
#line 6832 
      *temp0 = tmp;
      
#line 6832 
      rxdp1->Buffer0_ptr = tmp;
      
#line 6836 
      tmp_0 = pci_dma_mapping_error(sp->pdev,rxdp1->Buffer0_ptr);
      
#line 6836 
      if (tmp_0 != 0) 
#line 6837 
                      goto memalloc_failed; else ;
      
#line 6838 
      rxdp->Host_Control = (unsigned long long)*skb;
    }
  }
  else 
    
#line 6840 
    if (sp->rxd_mode == 1 && rxdp->Host_Control == 0ULL) {
      
#line 6841 
      struct RxD3 *rxdp3 = (struct RxD3 *)rxdp;
      
#line 6843 
      if (*skb != (struct sk_buff *)0) {
        
#line 6844 
        rxdp3->Buffer2_ptr = *temp2;
        
#line 6845 
        rxdp3->Buffer0_ptr = *temp0;
        
#line 6846 
        rxdp3->Buffer1_ptr = *temp1;
      }
      else {
        u64 tmp_1;
        int tmp_2;
        u64 tmp_3;
        int tmp_4;
        u64 tmp_5;
        int tmp_6;
        
#line 6848 
        *skb = netdev_alloc_skb(dev,(unsigned int)size);
        
#line 6849 
        if (*skb == (struct sk_buff *)0) {
          
#line 6850 
          if (debug_level > 1) 
#line 6850 
                               printk("\001",(char *)(& dev->name),(char *)"2 buf mode SKBs"); else ;
          
#line 6854 
          stats->mem_alloc_fail_cnt += 1ULL;
          
#line 6855 
          __retres = -12;
          
#line 6855 
          goto return_label;
        }
        else ;
        
#line 6857 
        stats->mem_allocated += (unsigned long long)(*skb)->truesize;
        
#line 6858 
        tmp_1 = pci_map_single(sp->pdev,(void *)(*skb)->data,(unsigned long)(dev->mtu + 4U),2);
        
#line 6858 
        *temp2 = tmp_1;
        
#line 6858 
        rxdp3->Buffer2_ptr = tmp_1;
        
#line 6862 
        tmp_2 = pci_dma_mapping_error(sp->pdev,rxdp3->Buffer2_ptr);
        
#line 6862 
        if (tmp_2 != 0) 
#line 6863 
                        goto memalloc_failed; else ;
        
#line 6864 
        tmp_3 = pci_map_single(sp->pdev,ba->ba_0,40UL,2);
        
#line 6864 
        *temp0 = tmp_3;
        
#line 6864 
        rxdp3->Buffer0_ptr = tmp_3;
        
#line 6867 
        tmp_4 = pci_dma_mapping_error(sp->pdev,rxdp3->Buffer0_ptr);
        
#line 6867 
        if (tmp_4 != 0) {
          
#line 6869 
          pci_unmap_single(sp->pdev,rxdp3->Buffer2_ptr,(unsigned long)(dev->mtu + 4U),2);
          
#line 6873 
          goto memalloc_failed;
        }
        else ;
        
#line 6875 
        rxdp->Host_Control = (unsigned long long)*skb;
        
#line 6878 
        tmp_5 = pci_map_single(sp->pdev,ba->ba_1,1UL,2);
        
#line 6878 
        *temp1 = tmp_5;
        
#line 6878 
        rxdp3->Buffer1_ptr = tmp_5;
        
#line 6881 
        tmp_6 = pci_dma_mapping_error(sp->pdev,rxdp3->Buffer1_ptr);
        
#line 6881 
        if (tmp_6 != 0) {
          
#line 6883 
          pci_unmap_single(sp->pdev,rxdp3->Buffer0_ptr,40UL,2);
          
#line 6886 
          pci_unmap_single(sp->pdev,rxdp3->Buffer2_ptr,(unsigned long)(dev->mtu + 4U),2);
          
#line 6890 
          goto memalloc_failed;
        }
        else ;
      }
    }
    else ;
  
#line 6894 
  __retres = 0;
  
#line 6894 
  goto return_label;
  memalloc_failed: 
#line 6896 
  ;
  
#line 6897 
  stats->pci_map_fail_cnt += 1ULL;
  
#line 6898 
  stats->mem_freed += (unsigned long long)(*skb)->truesize;
  
#line 6899 
  consume_skb(*skb);
  
#line 6900 
  __retres = -12;
  return_label: 
#line 6900 
                return __retres;
}


#line 6903  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void set_rxd_buffer_size(struct s2io_nic *sp, struct RxD_t *rxdp, int size)
{
  
#line 6906 
  struct net_device *dev = sp->dev;
  
#line 6907 
  if (sp->rxd_mode == 0) 
#line 6908 
                         rxdp->Control_2 = (unsigned long long)size << 48;
  else 
    
#line 6909 
    if (sp->rxd_mode == 1) {
      
#line 6910 
      rxdp->Control_2 = 11258999068426240ULL;
      
#line 6911 
      rxdp->Control_2 |= 4294967296ULL;
      
#line 6912 
      rxdp->Control_2 |= ((unsigned long long)dev->mtu + 4ULL) << 16;
    }
    else ;
  
#line 6914 
  return;
}


#line 6916  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int rxd_owner_bit_reset(struct s2io_nic *sp)
{
  int __retres;
  int i;
  int j;
  int k;
  int size;
  
#line 6918 
  int blk_cnt = 0;
  
#line 6919 
  struct config_param *config = & sp->config;
  
#line 6920 
  struct mac_info *mac_control = & sp->mac_control;
  
#line 6921 
  struct net_device *dev = sp->dev;
  
#line 6922 
  struct RxD_t *rxdp = (struct RxD_t *)0;
  
#line 6923 
  struct sk_buff *skb = (struct sk_buff *)0;
  
#line 6924 
  struct buffAdd *ba = (struct buffAdd *)0;
  
#line 6925 
  u64 temp0_64 = 0ULL;
  
#line 6925 
  u64 temp1_64 = 0ULL;
  
#line 6925 
  u64 temp2_64 = 0ULL;
  
#line 6928 
  size = (int)(dev->mtu + 22U);
  
#line 6930 
  if (sp->rxd_mode == 0) 
#line 6931 
                         size = size;
  else 
    
#line 6932 
    if (sp->rxd_mode == 1) 
#line 6933 
                           size = (int)(dev->mtu + 171U); else ;
  
#line 6935 
  i = 0;
  
#line 6935 
  goto ldv_58549;
  ldv_58548: 
#line 6936 
  ;
  {
    int tmp;
    
#line 6936 
    struct rx_ring_config *rx_cfg = & config->rx_cfg[i];
    
#line 6937 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 6939 
    blk_cnt = (int)(rx_cfg->num_rxd / (unsigned int)(rxd_count[sp->rxd_mode] + 1));
    
#line 6941 
    j = 0;
    
#line 6941 
    goto ldv_58546;
    ldv_58545: 
#line 6942 
    ;
    
#line 6942 
    k = 0;
    
#line 6942 
    goto ldv_58543;
    ldv_58542: 
#line 6943 
    ;
    
#line 6943 
    rxdp = (struct RxD_t *)(ring->rx_blocks[j].rxds + k)->virt_addr;
    
#line 6944 
    if (sp->rxd_mode == 1) 
#line 6945 
                           ba = *(ring->ba + j) + k; else ;
    
#line 6946 
    tmp = set_rxd_buffer_pointer(sp,rxdp,ba,& skb,& temp0_64,& temp1_64,& temp2_64,size);
    
#line 6946 
    if (tmp == -12) {
      
#line 6951 
      __retres = 0;
      
#line 6951 
      goto return_label;
    }
    else ;
    
#line 6954 
    set_rxd_buffer_size(sp,rxdp,size);
    
#line 6955 
    ldv_inline_asm();
    
#line 6957 
    rxdp->Control_1 |= 72057594037927936ULL;
    
#line 6942 
    k += 1;
    ldv_58543: 
#line 6943 
    ;
    
#line 6942 
    if (rxd_count[sp->rxd_mode] > k) 
#line 6944 
                                     goto ldv_58542; else 
#line 6947 
                                                          goto ldv_58544;
    ldv_58544: 
#line 6948 
    ;
    
#line 6941 
    j += 1;
    ldv_58546: 
#line 6942 
    ;
    
#line 6941 
    if (j < blk_cnt) 
#line 6943 
                     goto ldv_58545; else 
#line 6946 
                                          goto ldv_58547;
    ldv_58547: 
#line 6947 
    ;
  }
  
#line 6935 
  i += 1;
  ldv_58549: 
#line 6936 
  ;
  
#line 6935 
  if (config->rx_ring_num > (unsigned int)i) 
#line 6937 
                                             goto ldv_58548; else 
#line 6940 
                                                                  goto ldv_58550;
  ldv_58550: 
#line 6941 
  ;
  
#line 6961 
  __retres = 0;
  return_label: 
#line 6961 
                return __retres;
}


#line 6965  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_add_isr(struct s2io_nic *sp)
{
  int __retres;
  
#line 6967 
  int ret = 0;
  
#line 6968 
  struct net_device *dev = sp->dev;
  
#line 6969 
  int err = 0;
  
#line 6971 
  if ((unsigned int)sp->config.intr_type == 2U) 
#line 6972 
                                                ret = s2io_enable_msi_x(sp); else ;
  
#line 6973 
  if (ret != 0) {
    
#line 6974 
    if (debug_level >= 0) 
#line 6974 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 6975 
    sp->config.intr_type = (unsigned char)0U;
  }
  else ;
  
#line 6982 
  store_xmsi_data(sp);
  
#line 6985 
  if ((unsigned int)sp->config.intr_type == 2U) {
    int i;
    
#line 6986 
    int msix_rx_cnt = 0;
    
#line 6988 
    i = 0;
    
#line 6988 
    goto ldv_58561;
    ldv_58560: 
#line 6989 
    ;
    
#line 6989 
    if ((unsigned int)(sp->s2io_entries + i)->in_use == 165U) {
      
#line 6990 
      if ((unsigned int)(sp->s2io_entries + i)->type == 2U) {
        
#line 6992 
        snprintf((char *)(& sp->desc[i]),25UL,"%s:MSI-X-%d-RX",(char *)(& dev->name),i);
        
#line 6996 
        err = ldv_request_irq_93((sp->entries + i)->vector,& s2io_msix_ring_handle,0UL,(char const *)(& sp->desc[i]),(sp->s2io_entries + i)->arg);
      }
      else 
        
#line 7001 
        if ((unsigned int)(sp->s2io_entries + i)->type == 1U) {
          
#line 7003 
          snprintf((char *)(& sp->desc[i]),25UL,"%s:MSI-X-%d-TX",(char *)(& dev->name),i);
          
#line 7007 
          err = ldv_request_irq_94((sp->entries + i)->vector,& s2io_msix_fifo_handle,0UL,(char const *)(& sp->desc[i]),(sp->s2io_entries + i)->arg);
        }
        else ;
      
#line 7015 
      if (sp->msix_info[i].addr == 0ULL || sp->msix_info[i].data == 0ULL) {
        
#line 7017 
        if (debug_level >= 0) {
          unsigned int tmp_0;
          
#line 7017 
          if (0 != 0) 
#line 7017 
                      tmp_0 = ((((unsigned int)sp->msix_info[i].data << 24) | (((unsigned int)sp->msix_info[i].data << 8) & 16711680U)) | (((unsigned int)sp->msix_info[i].data >> 8) & 65280U)) | ((unsigned int)sp->msix_info[i].data >> 24); else 
                                                                    
#line 7017 
                                                                    tmp_0 = __fswab32((unsigned int)sp->msix_info[i].data);
          
#line 7017 
          ;
          
#line 7017 
          ;
          
#line 7017 
          printk("\001",(char *)(& sp->desc[i]),sp->msix_info[i].addr,(unsigned long long)tmp_0);
        }
        else ;
      }
      else 
#line 7025 
           msix_rx_cnt += 1;
      
#line 7026 
      if (err != 0) {
        
#line 7027 
        remove_msix_isr(sp);
        
#line 7029 
        if (debug_level >= 0) 
#line 7029 
                              printk("\001",(char *)(& dev->name),i); else ;
        
#line 7033 
        if (debug_level >= 0) 
#line 7033 
                              printk("\001",(char *)(& dev->name)); else ;
        
#line 7036 
        sp->config.intr_type = (unsigned char)0U;
        
#line 7037 
        goto ldv_58559;
      }
      else ;
      
#line 7039 
      (sp->s2io_entries + i)->in_use = (unsigned char)170U;
    }
    else ;
    
#line 6988 
    i += 1;
    ldv_58561: 
#line 6989 
    ;
    
#line 6988 
    if (sp->num_entries > i) 
#line 6990 
                             goto ldv_58560; else 
#line 6993 
                                                  goto ldv_58559;
    ldv_58559: 
#line 6994 
    ;
    
#line 7043 
    if (err == 0) {
      
#line 7044 
      msix_rx_cnt -= 1;
      
#line 7044 
      printk("\001",msix_rx_cnt);
      
#line 7045 
      if (debug_level > 1) 
#line 7045 
                           printk("\001"); else ;
    }
    else ;
  }
  else ;
  
#line 7049 
  if ((unsigned int)sp->config.intr_type == 0U) {
    
#line 7050 
    err = ldv_request_irq_95((sp->pdev)->irq,& s2io_isr,128UL,(char const *)(& sp->name),(void *)dev);
    
#line 7052 
    if (err != 0) {
      
#line 7053 
      if (debug_level >= 0) 
#line 7053 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 7055 
      __retres = -1;
      
#line 7055 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 7058 
  __retres = 0;
  return_label: 
#line 7058 
                return __retres;
}


#line 7061  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_rem_isr(struct s2io_nic *sp)
{
  
#line 7063 
  if ((unsigned int)sp->config.intr_type == 2U) 
#line 7064 
                                                remove_msix_isr(sp); else 
                                                                    
#line 7066 
                                                                    remove_inta_isr(sp);
  
#line 7067 
  return;
}


#line 7069  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void do_s2io_card_down(struct s2io_nic *sp, int do_io)
{
  struct config_param *config;
  int tmp;
  int tmp_0;
  int tmp_3;
  
#line 7071 
  int cnt = 0;
  
#line 7072 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 7073 
  register u64 val64 = 0ULL;
  
#line 7075 
  config = & sp->config;
  
#line 7077 
  tmp = is_s2io_card_up((struct s2io_nic const *)sp);
  
#line 7077 
  if (tmp == 0) 
#line 7078 
                goto return_label; else ;
  
#line 7080 
  ldv_del_timer_sync_96(& sp->alarm_timer);
  
#line 7082 
  goto ldv_58574;
  ldv_58573: 
#line 7083 
  ;
  
#line 7083 
  msleep(50U);
  ldv_58574: 
#line 7084 
  ;
  
#line 7082 
  tmp_0 = test_and_set_bit(0L,& sp->state);
  
#line 7082 
  if (tmp_0 != 0) 
#line 7084 
                  goto ldv_58573; else 
#line 7087 
                                       goto ldv_58575;
  ldv_58575: 
#line 7088 
  ;
  
#line 7084 
  set_bit(1L,& sp->state);
  
#line 7087 
  if ((unsigned int)sp->config.napi != 0U) {
    
#line 7088 
    int off = 0;
    
#line 7089 
    if ((unsigned int)config->intr_type == 2U) {
      
#line 7090 
      goto ldv_58578;
      ldv_58577: 
#line 7091 
      ;
      
#line 7091 
      napi_disable(& sp->mac_control.rings[off].napi);
      
#line 7090 
      off += 1;
      ldv_58578: 
#line 7091 
      ;
      
#line 7090 
      if (sp->config.rx_ring_num > (unsigned int)off) 
#line 7092 
                                                      goto ldv_58577; else 
                                                                    
#line 7095 
                                                                    goto ldv_58579;
      ldv_58579: 
#line 7096 
      ;
    }
    else 
#line 7094 
         napi_disable(& sp->napi);
  }
  else ;
  
#line 7098 
  if (do_io != 0) 
#line 7099 
                  stop_nic(sp); else ;
  
#line 7101 
  s2io_rem_isr(sp);
  
#line 7104 
  s2io_link(sp,1);
  
#line 7107 
  goto ldv_58582;
  ldv_58581: 
#line 7108 
  ;
  
#line 7115 
  rxd_owner_bit_reset(sp);
  
#line 7117 
  val64 = (u64)readq((void const volatile *)(& bar0->adapter_status));
  
#line 7118 
  tmp_3 = verify_xena_quiescence(sp);
  
#line 7118 
  if (tmp_3 != 0) {
    int tmp_2;
    
#line 7119 
    tmp_2 = verify_pcc_quiescent(sp,sp->device_enabled_once);
    
#line 7119 
    if (tmp_2 != 0) 
#line 7120 
                    goto ldv_58580; else ;
  }
  else ;
  
#line 7123 
  msleep(50U);
  
#line 7124 
  cnt += 1;
  
#line 7125 
  if (cnt == 10) {
    
#line 7126 
    if (debug_level >= 0) 
#line 7126 
                          printk("\001",val64); else ;
    
#line 7129 
    goto ldv_58580;
  }
  else ;
  ldv_58582: 
#line 7131 
  ;
  
#line 7107 
  if (do_io != 0) 
#line 7109 
                  goto ldv_58581; else 
#line 7112 
                                       goto ldv_58580;
  ldv_58580: 
#line 7113 
  ;
  
#line 7132 
  if (do_io != 0) 
#line 7133 
                  s2io_reset(sp); else ;
  
#line 7136 
  free_tx_buffers(sp);
  
#line 7139 
  free_rx_buffers(sp);
  
#line 7141 
  set_bit(0L,& sp->state);
  return_label: 
#line 7142 
                return;
}


#line 7144  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_card_down(struct s2io_nic *sp)
{
  
#line 7146 
  do_s2io_card_down(sp,1);
  
#line 7147 
  return;
}


#line 7149  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_card_up(struct s2io_nic *sp)
{
  int __retres;
  int i;
  struct config_param *config;
  struct mac_info *mac_control;
  u16 interruptible;
  int tmp;
  int tmp_0;
  
#line 7151 
  int ret = 0;
  
#line 7154 
  struct net_device *dev = sp->dev;
  
#line 7158 
  ret = init_nic(sp);
  
#line 7159 
  if (ret != 0) {
    
#line 7160 
    if (debug_level >= 0) 
#line 7160 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 7162 
    if (ret != -5) 
#line 7163 
                   s2io_reset(sp); else ;
    
#line 7164 
    __retres = ret;
    
#line 7164 
    goto return_label;
  }
  else ;
  
#line 7171 
  config = & sp->config;
  
#line 7172 
  mac_control = & sp->mac_control;
  
#line 7174 
  i = 0;
  
#line 7174 
  goto ldv_58597;
  ldv_58596: 
#line 7175 
  ;
  {
    
#line 7175 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 7177 
    ring->mtu = dev->mtu;
    
#line 7178 
    ring->lro = (unsigned char)((dev->features & 32768ULL) != 0ULL);
    
#line 7179 
    ret = fill_rx_buffers(sp,ring,1);
    
#line 7180 
    if (ret != 0) {
      
#line 7181 
      if (debug_level >= 0) 
#line 7181 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 7183 
      s2io_reset(sp);
      
#line 7184 
      free_rx_buffers(sp);
      
#line 7185 
      __retres = -12;
      
#line 7185 
      goto return_label;
    }
    else ;
    
#line 7187 
    if (debug_level > 1) 
#line 7187 
                         printk("\001",i,ring->rx_bufs_left); else ;
  }
  
#line 7174 
  i += 1;
  ldv_58597: 
#line 7175 
  ;
  
#line 7174 
  if (config->rx_ring_num > (unsigned int)i) 
#line 7176 
                                             goto ldv_58596; else 
#line 7179 
                                                                  goto ldv_58598;
  ldv_58598: 
#line 7180 
  ;
  
#line 7192 
  if ((unsigned int)config->napi != 0U) 
    
#line 7193 
    if ((unsigned int)config->intr_type == 2U) {
      
#line 7194 
      i = 0;
      
#line 7194 
      goto ldv_58600;
      ldv_58599: 
#line 7195 
      ;
      
#line 7195 
      napi_enable(& sp->mac_control.rings[i].napi);
      
#line 7194 
      i += 1;
      ldv_58600: 
#line 7195 
      ;
      
#line 7194 
      if (sp->config.rx_ring_num > (unsigned int)i) 
#line 7196 
                                                    goto ldv_58599; else 
                                                                    
#line 7199 
                                                                    goto ldv_58601;
      ldv_58601: 
#line 7200 
      ;
    }
    else 
#line 7197 
         napi_enable(& sp->napi);
  else ;
  
#line 7202 
  if ((unsigned int)sp->promisc_flg != 0U) 
#line 7203 
                                           sp->promisc_flg = (unsigned short)0U; else ;
  
#line 7204 
  if ((unsigned int)sp->m_cast_flg != 0U) {
    
#line 7205 
    sp->m_cast_flg = (unsigned short)0U;
    
#line 7206 
    sp->all_multi_pos = (unsigned short)0U;
  }
  else ;
  
#line 7210 
  s2io_set_multicast(dev);
  
#line 7212 
  if ((dev->features & 32768ULL) != 0ULL) {
    
#line 7214 
    sp->lro_max_aggr_per_sess = (unsigned short)(65535U / dev->mtu);
    
#line 7216 
    if ((unsigned int)sp->lro_max_aggr_per_sess > lro_max_pkts) 
#line 7217 
                                                                sp->lro_max_aggr_per_sess = (unsigned short)lro_max_pkts; else ;
  }
  else ;
  
#line 7221 
  tmp = start_nic(sp);
  
#line 7221 
  if (tmp != 0) {
    
#line 7222 
    if (debug_level >= 0) 
#line 7222 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 7223 
    s2io_reset(sp);
    
#line 7224 
    free_rx_buffers(sp);
    
#line 7225 
    __retres = -19;
    
#line 7225 
    goto return_label;
  }
  else ;
  
#line 7229 
  tmp_0 = s2io_add_isr(sp);
  
#line 7229 
  if (tmp_0 != 0) {
    
#line 7230 
    if ((unsigned int)sp->config.intr_type == 2U) 
#line 7231 
                                                  s2io_rem_isr(sp); else ;
    
#line 7232 
    s2io_reset(sp);
    
#line 7233 
    free_rx_buffers(sp);
    
#line 7234 
    __retres = -19;
    
#line 7234 
    goto return_label;
  }
  else ;
  {
    struct lock_class_key __key;
    
#line 7237 
    init_timer_key(& sp->alarm_timer,0U,"(&sp->alarm_timer)",& __key);
  }
  
#line 7237 
  sp->alarm_timer.function = & s2io_alarm_handle;
  
#line 7237 
  sp->alarm_timer.data = (unsigned long)sp;
  
#line 7237 
  ldv_mod_timer_97(& sp->alarm_timer,jiffies + 125UL);
  
#line 7239 
  set_bit(1L,& sp->state);
  
#line 7242 
  en_dis_err_alarms(sp,(unsigned short)2047,1);
  
#line 7243 
  if ((unsigned int)sp->config.intr_type != 0U) {
    
#line 7244 
    interruptible = (unsigned short)17U;
    
#line 7245 
    en_dis_able_nic_intrs(sp,(unsigned short)((int)interruptible),1);
  }
  else {
    
#line 7247 
    interruptible = (unsigned short)528U;
    
#line 7248 
    interruptible = (unsigned short)((unsigned int)interruptible | 1U);
    
#line 7249 
    en_dis_able_nic_intrs(sp,(unsigned short)((int)interruptible),1);
  }
  
#line 7252 
  __retres = 0;
  return_label: 
#line 7252 
                return __retres;
}


#line 7265  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_restart_nic(struct work_struct *work)
{
  struct s2io_nic *tmp;
  int tmp_1;
  bool tmp_0;
  int tmp_2;
  {
    
#line 7267 
    struct work_struct const *__mptr = (struct work_struct const *)work;
    
#line 7267 
    tmp = (struct s2io_nic *)__mptr + 18446744073709481888U;
  }
  
#line 7267 
  struct s2io_nic *sp = tmp;
  
#line 7268 
  struct net_device *dev = sp->dev;
  
#line 7270 
  rtnl_lock();
  
#line 7272 
  tmp_0 = netif_running((struct net_device const *)dev);
  
#line 7272 
  if (tmp_0) 
#line 7272 
             tmp_1 = 0; else 
#line 7272 
                             tmp_1 = 1;
  
#line 7272 
  if (tmp_1) 
#line 7273 
             goto out_unlock; else ;
  
#line 7275 
  s2io_card_down(sp);
  
#line 7276 
  tmp_2 = s2io_card_up(sp);
  
#line 7276 
  if (tmp_2 != 0) {
    
#line 7277 
    if (debug_level >= 0) 
#line 7277 
                          printk("\001",(char *)(& dev->name)); else ;
  }
  else ;
  
#line 7279 
  s2io_wake_all_tx_queue(sp);
  
#line 7280 
  if (debug_level >= 0) 
#line 7280 
                        printk("\001",(char *)(& dev->name)); else ;
  out_unlock: 
#line 7281 
  ;
  
#line 7282 
  rtnl_unlock();
  
#line 7283 
  return;
}


#line 7298  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_tx_watchdog(struct net_device *dev)
{
  bool tmp_0;
  
#line 7300 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 7301 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 7303 
  tmp_0 = netif_carrier_ok((struct net_device const *)dev);
  
#line 7303 
  if ((int)tmp_0 != 0) {
    
#line 7304 
    swstats->watchdog_timer_cnt += 1ULL;
    
#line 7305 
    ldv_schedule_work_98(& sp->rst_timer_task);
    
#line 7306 
    swstats->soft_reset_cnt += 1ULL;
  }
  else ;
  
#line 7308 
  return;
}


#line 7327  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int rx_osm_handler(struct ring_info *ring_data, struct RxD_t *rxdp)
{
  int __retres;
  u16 l3_csum;
  u16 l4_csum;
  u8 err_mask;
  
#line 7329 
  struct s2io_nic *sp = ring_data->nic;
  
#line 7330 
  struct net_device *dev = ring_data->dev;
  
#line 7331 
  struct sk_buff *skb = (struct sk_buff *)rxdp->Host_Control;
  
#line 7333 
  int ring_no = ring_data->ring_no;
  
#line 7335 
  unsigned long long err = rxdp->Control_1 & 4222124650659840ULL;
  
#line 7336 
  struct lro *lro = lro;
  
#line 7338 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 7340 
  skb->dev = dev;
  
#line 7342 
  if (err != 0ULL) {
    
#line 7344 
    if ((err & 1ULL) != 0ULL) 
#line 7345 
                              swstats->parity_err_cnt += 1ULL; else ;
    
#line 7347 
    err_mask = (unsigned char)(err >> 48);
    
#line 7348 
    switch ((int)err_mask) {
      case 1: 
#line 7349 
      ;
      
#line 7350 
      swstats->rx_parity_err_cnt += 1ULL;
      
#line 7351 
      goto ldv_58631;
      case 2: 
#line 7353 
      ;
      
#line 7354 
      swstats->rx_abort_cnt += 1ULL;
      
#line 7355 
      goto ldv_58631;
      case 3: 
#line 7357 
      ;
      
#line 7358 
      swstats->rx_parity_abort_cnt += 1ULL;
      
#line 7359 
      goto ldv_58631;
      case 4: 
#line 7361 
      ;
      
#line 7362 
      swstats->rx_rda_fail_cnt += 1ULL;
      
#line 7363 
      goto ldv_58631;
      case 5: 
#line 7365 
      ;
      
#line 7366 
      swstats->rx_unkn_prot_cnt += 1ULL;
      
#line 7367 
      goto ldv_58631;
      case 6: 
#line 7369 
      ;
      
#line 7370 
      swstats->rx_fcs_err_cnt += 1ULL;
      
#line 7371 
      goto ldv_58631;
      case 7: 
#line 7373 
      ;
      
#line 7374 
      swstats->rx_buf_size_err_cnt += 1ULL;
      
#line 7375 
      goto ldv_58631;
      case 8: 
#line 7377 
      ;
      
#line 7378 
      swstats->rx_rxd_corrupt_cnt += 1ULL;
      
#line 7379 
      goto ldv_58631;
      case 15: 
#line 7381 
      ;
      
#line 7382 
      swstats->rx_unkn_err_cnt += 1ULL;
      
#line 7383 
      goto ldv_58631;
    }
    ldv_58631: 
#line 7392 
    ;
    
#line 7392 
    if ((unsigned int)err_mask != 5U) {
      
#line 7393 
      if (debug_level >= 0) 
#line 7393 
                            printk("\001",(char *)(& dev->name),(int)err_mask); else ;
      
#line 7395 
      dev->stats.rx_crc_errors += 1UL;
      
#line 7397 
      swstats->mem_freed += (unsigned long long)skb->truesize;
      
#line 7398 
      consume_skb(skb);
      
#line 7399 
      ring_data->rx_bufs_left += 4294967295U;
      
#line 7400 
      rxdp->Host_Control = 0ULL;
      
#line 7401 
      __retres = 0;
      
#line 7401 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 7405 
  rxdp->Host_Control = 0ULL;
  
#line 7406 
  if (sp->rxd_mode == 0) {
    
#line 7407 
    int len = (int)((unsigned short)(rxdp->Control_2 >> 48)) & 16383;
    
#line 7409 
    skb_put(skb,(unsigned int)len);
  }
  else 
    
#line 7410 
    if (sp->rxd_mode == 1) {
      
#line 7411 
      int get_block = (int)ring_data->rx_curr_get_info.block_index;
      
#line 7412 
      int get_off = (int)ring_data->rx_curr_get_info.offset;
      
#line 7413 
      int buf0_len = (int)((unsigned char)(rxdp->Control_2 >> 48));
      
#line 7414 
      int buf2_len = (int)((unsigned short)(rxdp->Control_2 >> 16));
      
#line 7415 
      unsigned char *buff = skb_push(skb,(unsigned int)buf0_len);
      
#line 7417 
      struct buffAdd *ba = *(ring_data->ba + get_block) + get_off;
      
#line 7418 
      memcpy((void *)buff,(void const *)ba->ba_0,(unsigned long)buf0_len);
      
#line 7419 
      skb_put(skb,(unsigned int)buf2_len);
    }
    else ;
  
#line 7422 
  if (((rxdp->Control_1 & 12884901888ULL) != 0ULL && ((unsigned int)ring_data->lro == 0U || (rxdp->Control_1 & 17179869184ULL) == 0ULL)) && (dev->features & 17179869184ULL) != 0ULL) {
    
#line 7426 
    l3_csum = (unsigned short)(rxdp->Control_1 >> 16);
    
#line 7427 
    l4_csum = (unsigned short)rxdp->Control_1;
    
#line 7428 
    if ((unsigned int)l3_csum == 65535U && (unsigned int)l4_csum == 65535U) {
      
#line 7434 
      skb->ip_summed = (unsigned char __attribute__((__FRAMA_C_BITFIELD_SIZE__(2))))1U;
      
#line 7435 
      if ((unsigned int)ring_data->lro != 0U) {
        u8 *tcp;
        
#line 7436 
        u32 tcp_len = 0U;
        
#line 7438 
        int ret = 0;
        
#line 7440 
        ret = s2io_club_tcp_session(ring_data,skb->data,& tcp,& tcp_len,& lro,rxdp,sp);
        
#line 7444 
        switch (ret) {
          case 3: 
#line 7445 
          ;
          
#line 7446 
          lro->parent = skb;
          
#line 7447 
          goto aggregate;
          case 1: 
#line 7448 
          ;
          
#line 7449 
          lro_append_pkt(sp,lro,skb,tcp_len);
          
#line 7450 
          goto aggregate;
          case 4: 
#line 7451 
          ;
          
#line 7452 
          lro_append_pkt(sp,lro,skb,tcp_len);
          
#line 7453 
          queue_rx_frame(lro->parent,(unsigned short)((int)lro->vlan_tag));
          
#line 7455 
          clear_lro_session(lro);
          
#line 7456 
          swstats->flush_max_pkts += 1ULL;
          
#line 7457 
          goto aggregate;
          case 2: 
#line 7458 
          ;
          
#line 7459 
          (lro->parent)->data_len = (unsigned int)lro->frags_len;
          
#line 7460 
          swstats->sending_both += 1ULL;
          
#line 7461 
          queue_rx_frame(lro->parent,(unsigned short)((int)lro->vlan_tag));
          
#line 7463 
          clear_lro_session(lro);
          
#line 7464 
          goto send_up;
          case 0: 
#line 7465 
          ;
          case -1: 
#line 7466 
          ;
          case 5: 
#line 7467 
          ;
          
#line 7471 
          goto ldv_58659;
          default: 
#line 7472 
          ;
          
#line 7473 
          if (debug_level >= 0) 
#line 7473 
                                printk("\001","rx_osm_handler"); else ;
          
#line 7474 
          ldv_inline_asm();
          
#line 7476 
          ;
        }
        ldv_58659: 
#line 7478 
        ;
      }
      else ;
    }
    else 
#line 7484 
         skb_checksum_none_assert((struct sk_buff const *)skb);
  }
  else 
#line 7487 
       skb_checksum_none_assert((struct sk_buff const *)skb);
  
#line 7489 
  swstats->mem_freed += (unsigned long long)skb->truesize;
  send_up: 
#line 7490 
  ;
  
#line 7491 
  skb_record_rx_queue(skb,(unsigned short)((int)((unsigned short)ring_no)));
  
#line 7492 
  queue_rx_frame(skb,(unsigned short)((int)((unsigned short)rxdp->Control_2)));
  aggregate: 
#line 7493 
  ;
  
#line 7494 
  sp->mac_control.rings[ring_no].rx_bufs_left += 4294967295U;
  
#line 7495 
  __retres = 0;
  return_label: 
#line 7495 
                return __retres;
}


#line 7511  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_link(struct s2io_nic *sp, int link)
{
  
#line 7513 
  struct net_device *dev = sp->dev;
  
#line 7514 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 7516 
  if ((int)sp->last_link_state != link) {
    
#line 7517 
    init_tti(sp,link);
    
#line 7518 
    if (link == 1) {
      
#line 7519 
      if (debug_level >= 0) 
#line 7519 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 7520 
      s2io_stop_all_tx_queue(sp);
      
#line 7521 
      netif_carrier_off(dev);
      
#line 7522 
      if (swstats->link_up_cnt != 0ULL) 
#line 7523 
                                        swstats->link_up_time = (unsigned long long)jiffies - sp->start_time; else ;
      
#line 7525 
      swstats->link_down_cnt += 1ULL;
    }
    else {
      
#line 7527 
      if (debug_level >= 0) 
#line 7527 
                            printk("\001",(char *)(& dev->name)); else ;
      
#line 7528 
      if (swstats->link_down_cnt != 0ULL) 
#line 7529 
                                          swstats->link_down_time = (unsigned long long)jiffies - sp->start_time; else ;
      
#line 7531 
      swstats->link_up_cnt += 1ULL;
      
#line 7532 
      netif_carrier_on(dev);
      
#line 7533 
      s2io_wake_all_tx_queue(sp);
    }
  }
  else ;
  
#line 7536 
  sp->last_link_state = (unsigned short)link;
  
#line 7537 
  sp->start_time = (unsigned long long)jiffies;
  
#line 7538 
  return;
}


#line 7551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_init_pci(struct s2io_nic *sp)
{
  
#line 7553 
  u16 pci_cmd = (unsigned short)0U;
  
#line 7553 
  u16 pcix_cmd = (unsigned short)0U;
  
#line 7556 
  pci_read_config_word((struct pci_dev const *)sp->pdev,98,& pcix_cmd);
  
#line 7558 
  pci_write_config_word((struct pci_dev const *)sp->pdev,98,(unsigned short)((int)((unsigned int)pcix_cmd | 1U)));
  
#line 7560 
  pci_read_config_word((struct pci_dev const *)sp->pdev,98,& pcix_cmd);
  
#line 7564 
  pci_read_config_word((struct pci_dev const *)sp->pdev,4,& pci_cmd);
  
#line 7565 
  pci_write_config_word((struct pci_dev const *)sp->pdev,4,(unsigned short)((int)((unsigned int)pci_cmd | 64U)));
  
#line 7567 
  pci_read_config_word((struct pci_dev const *)sp->pdev,4,& pci_cmd);
  
#line 7568 
  return;
}


#line 7570  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_verify_parm(struct pci_dev *pdev, u8 *dev_intr_type, u8 *dev_multiq)
{
  int __retres;
  int i;
  
#line 7575 
  if (tx_fifo_num + 4294967295U > 7U) {
    
#line 7576 
    if (debug_level >= 0) 
#line 7576 
                          printk("\001",tx_fifo_num); else ;
    
#line 7579 
    if (tx_fifo_num == 0U) 
#line 7580 
                           tx_fifo_num = 1U; else 
#line 7582 
                                                  tx_fifo_num = 8U;
    
#line 7584 
    if (debug_level >= 0) 
#line 7584 
                          printk("\001",tx_fifo_num); else ;
  }
  else ;
  
#line 7587 
  if (multiq != 0U) 
#line 7588 
                    *dev_multiq = (unsigned char)multiq; else ;
  
#line 7590 
  if (tx_steering_type != 0U && tx_fifo_num == 1U) {
    
#line 7591 
    if (tx_steering_type != 2U) {
      
#line 7592 
      if (debug_level >= 0) 
#line 7592 
                            printk("\001"); else ;
    }
    else ;
    
#line 7595 
    tx_steering_type = 0U;
  }
  else ;
  
#line 7598 
  if (tx_steering_type > 2U) {
    
#line 7600 
    if (debug_level >= 0) 
#line 7600 
                          printk("\001"); else ;
    
#line 7602 
    if (debug_level >= 0) 
#line 7602 
                          printk("\001"); else ;
    
#line 7603 
    tx_steering_type = 0U;
  }
  else ;
  
#line 7606 
  if (rx_ring_num > 8U) {
    
#line 7607 
    if (debug_level >= 0) 
#line 7607 
                          printk("\001"); else ;
    
#line 7609 
    if (debug_level >= 0) 
#line 7609 
                          printk("\001",8); else ;
    
#line 7611 
    rx_ring_num = 8U;
  }
  else ;
  
#line 7614 
  if ((unsigned int)*dev_intr_type != 0U && (unsigned int)*dev_intr_type != 2U) {
    
#line 7615 
    if (debug_level >= 0) 
#line 7615 
                          printk("\001"); else ;
    
#line 7617 
    *dev_intr_type = (unsigned char)0U;
  }
  else ;
  
#line 7620 
  if ((unsigned int)*dev_intr_type == 2U && ((unsigned int)pdev->device != 22322U && (unsigned int)pdev->device != 22578U)) {
    
#line 7623 
    if (debug_level >= 0) 
#line 7623 
                          printk("\001"); else ;
    
#line 7625 
    *dev_intr_type = (unsigned char)0U;
  }
  else ;
  
#line 7628 
  if (rx_ring_mode + 4294967295U > 1U) {
    
#line 7629 
    if (debug_level >= 0) 
#line 7629 
                          printk("\001"); else ;
    
#line 7630 
    if (debug_level >= 0) 
#line 7630 
                          printk("\001"); else ;
    
#line 7631 
    rx_ring_mode = 1U;
  }
  else ;
  
#line 7634 
  i = 0;
  
#line 7634 
  goto ldv_58680;
  ldv_58679: 
#line 7635 
  ;
  
#line 7635 
  if (rx_ring_sz[i] > 150U) {
    
#line 7636 
    if (debug_level >= 0) 
#line 7636 
                          printk("\001",150); else ;
    
#line 7639 
    rx_ring_sz[i] = 150U;
  }
  else ;
  
#line 7634 
  i += 1;
  ldv_58680: 
#line 7635 
  ;
  
#line 7634 
  if (i <= 7) 
#line 7636 
              goto ldv_58679; else 
#line 7639 
                                   goto ldv_58681;
  ldv_58681: 
#line 7640 
  ;
  
#line 7642 
  __retres = 0;
  
#line 7642 
  return __retres;
}


#line 7654  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int rts_ds_steer(struct s2io_nic *nic, u8 ds_codepoint, u8 ring)
{
  int __retres;
  int tmp;
  
#line 7656 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)nic->bar0;
  
#line 7657 
  register u64 val64 = 0ULL;
  
#line 7659 
  if ((unsigned int)ds_codepoint > 63U) {
    
#line 7660 
    __retres = -1;
    
#line 7660 
    goto return_label;
  }
  else ;
  
#line 7662 
  val64 = (unsigned long long)ring << 56;
  
#line 7663 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rts_ds_mem_data));
  
#line 7665 
  val64 = ((unsigned long long)ds_codepoint << 32) | 72339069014638592ULL;
  
#line 7669 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rts_ds_mem_ctrl));
  
#line 7671 
  tmp = wait_for_cmd_complete((void *)(& bar0->rts_ds_mem_ctrl),281474976710656ULL,1);
  
#line 7671 
  __retres = tmp;
  return_label: 
#line 7671 
                return __retres;
}


#line 7676  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static struct net_device_ops const s2io_netdev_ops = {.ndo_init = (int (*)(struct net_device *))0, .ndo_uninit = (void (*)(struct net_device *))0, .ndo_open = & s2io_open, .ndo_stop = & s2io_close, .ndo_start_xmit = & s2io_xmit, .ndo_select_queue = (u16 (*)(struct net_device *, struct sk_buff *, void *, u16 (*)(struct net_device *, struct sk_buff *)))0, .ndo_change_rx_flags = (void (*)(struct net_device *, int ))0, .ndo_set_rx_mode = & s2io_set_multicast, .ndo_set_mac_address = & s2io_set_mac_addr, .ndo_validate_addr = & eth_validate_addr, .ndo_do_ioctl = & s2io_ioctl, .ndo_set_config = (int (*)(struct net_device *, struct ifmap *))0, .ndo_change_mtu = & s2io_change_mtu, .ndo_neigh_setup = (int (*)(struct net_device *, struct neigh_parms *))0, .ndo_tx_timeout = & s2io_tx_watchdog, .ndo_get_stats64 = (struct rtnl_link_stats64 *(*)(struct net_device *, struct rtnl_link_stats64 *))0, .ndo_get_stats = & s2io_get_stats, .ndo_vlan_rx_add_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_vlan_rx_kill_vid = (int (*)(struct net_device *, __be16 , u16 ))0, .ndo_poll_controller = & s2io_netpoll, .ndo_netpoll_setup = (int (*)(struct net_device *, struct netpoll_info *))0, .ndo_netpoll_cleanup = (void (*)(struct net_device *))0, .ndo_busy_poll = (int (*)(struct napi_struct *))0, .ndo_set_vf_mac = (int (*)(struct net_device *, int , u8 *))0, .ndo_set_vf_vlan = (int (*)(struct net_device *, int , u16 , u8 ))0, .ndo_set_vf_rate = (int (*)(struct net_device *, int , int , int ))0, .ndo_set_vf_spoofchk = (int (*)(struct net_device *, int , bool ))0, .ndo_get_vf_config = (int (*)(struct net_device *, int , struct ifla_vf_info *))0, .ndo_set_vf_link_state = (int (*)(struct net_device *, int , int ))0, .ndo_get_vf_stats = (int (*)(struct net_device *, int , struct ifla_vf_stats *))0, .ndo_set_vf_port = (int (*)(struct net_device *, int , struct nlattr **))0, .ndo_get_vf_port = (int (*)(struct net_device *, int , struct sk_buff *))0, .ndo_set_vf_rss_query_en = (int (*)(struct net_device *, int , bool ))0, .ndo_setup_tc = (int (*)(struct net_device *, u8 ))0, .ndo_fcoe_enable = (int (*)(struct net_device *))0, .ndo_fcoe_disable = (int (*)(struct net_device *))0, .ndo_fcoe_ddp_setup = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_ddp_done = (int (*)(struct net_device *, u16 ))0, .ndo_fcoe_ddp_target = (int (*)(struct net_device *, u16 , struct scatterlist *, unsigned int ))0, .ndo_fcoe_get_hbainfo = (int (*)(struct net_device *, struct netdev_fcoe_hbainfo *))0, .ndo_fcoe_get_wwn = (int (*)(struct net_device *, u64 *, int ))0, .ndo_rx_flow_steer = (int (*)(struct net_device *, struct sk_buff const *, u16 , u32 ))0, .ndo_add_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_del_slave = (int (*)(struct net_device *, struct net_device *))0, .ndo_fix_features = (netdev_features_t (*)(struct net_device *, netdev_features_t ))0, .ndo_set_features = & s2io_set_features, .ndo_neigh_construct = (int (*)(struct neighbour *))0, .ndo_neigh_destroy = (void (*)(struct neighbour *))0, .ndo_fdb_add = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 , u16 ))0, .ndo_fdb_del = (int (*)(struct ndmsg *, struct nlattr **, struct net_device *, unsigned char const *, u16 ))0, .ndo_fdb_dump = (int (*)(struct sk_buff *, struct netlink_callback *, struct net_device *, struct net_device *, int ))0, .ndo_bridge_setlink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_bridge_getlink = (int (*)(struct sk_buff *, u32 , u32 , struct net_device *, u32 , int ))0, .ndo_bridge_dellink = (int (*)(struct net_device *, struct nlmsghdr *, u16 ))0, .ndo_change_carrier = (int (*)(struct net_device *, bool ))0, .ndo_get_phys_port_id = (int (*)(struct net_device *, struct netdev_phys_item_id *))0, .ndo_get_phys_port_name = (int (*)(struct net_device *, char *, size_t ))0, .ndo_add_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_del_vxlan_port = (void (*)(struct net_device *, sa_family_t , __be16 ))0, .ndo_dfwd_add_station = (void *(*)(struct net_device *, struct net_device *))0, .ndo_dfwd_del_station = (void (*)(struct net_device *, void *))0, .ndo_dfwd_start_xmit = (netdev_tx_t (*)(struct sk_buff *, struct net_device *, void *))0, .ndo_get_lock_subclass = (int (*)(struct net_device *))0, .ndo_features_check = (netdev_features_t (*)(struct sk_buff *, struct net_device *, netdev_features_t ))0, .ndo_set_tx_maxrate = (int (*)(struct net_device *, int , u32 ))0, .ndo_get_iflink = (int (*)(struct net_device const *))0};

#line 7708  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_init_nic(struct pci_dev *pdev, struct pci_device_id const *pre)
{
  int __retres;
  struct s2io_nic *sp;
  struct net_device *dev;
  int i;
  int j;
  int ret;
  u32 mac_up;
  u32 mac_down;
  u16 subid;
  struct config_param *config;
  struct mac_info *mac_control;
  int mode;
  int tmp_1;
  int tmp_3;
  int tmp_4;
  int tmp_8;
  
#line 7713 
  int dma_flag = 0;
  
#line 7715 
  u64 val64 = 0ULL;
  
#line 7715 
  u64 tmp64 = 0ULL;
  
#line 7716 
  struct XENA_dev_config *bar0 = (struct XENA_dev_config *)0;
  
#line 7721 
  u8 dev_intr_type = (unsigned char)intr_type;
  
#line 7722 
  u8 dev_multiq = (unsigned char)0U;
  
#line 7724 
  ret = s2io_verify_parm(pdev,& dev_intr_type,& dev_multiq);
  
#line 7725 
  if (ret != 0) {
    
#line 7726 
    __retres = ret;
    
#line 7726 
    goto return_label;
  }
  else ;
  
#line 7728 
  ret = pci_enable_device(pdev);
  
#line 7729 
  if (ret != 0) {
    
#line 7730 
    if (debug_level >= 0) 
#line 7730 
                          printk("\001","s2io_init_nic"); else ;
    
#line 7732 
    __retres = ret;
    
#line 7732 
    goto return_label;
  }
  else ;
  
#line 7735 
  tmp_1 = pci_set_dma_mask(pdev,18446744073709551615ULL);
  
#line 7735 
  if (tmp_1 == 0) {
    int tmp;
    
#line 7736 
    if (debug_level > 0) 
#line 7736 
                         printk("\001","s2io_init_nic"); else ;
    
#line 7737 
    dma_flag = 1;
    
#line 7738 
    tmp = pci_set_consistent_dma_mask(pdev,18446744073709551615ULL);
    
#line 7738 
    if (tmp != 0) {
      
#line 7739 
      if (debug_level >= 0) 
#line 7739 
                            printk("\001"); else ;
      
#line 7742 
      pci_disable_device(pdev);
      
#line 7743 
      __retres = -12;
      
#line 7743 
      goto return_label;
    }
    else ;
  }
  else {
    int tmp_0;
    
#line 7745 
    tmp_0 = pci_set_dma_mask(pdev,4294967295ULL);
    
#line 7745 
    if (tmp_0 == 0) {
      
#line 7746 
      if (debug_level > 0) 
#line 7746 
                           printk("\001","s2io_init_nic"); else ;
    }
    else {
      
#line 7748 
      pci_disable_device(pdev);
      
#line 7749 
      __retres = -12;
      
#line 7749 
      goto return_label;
    }
  }
  
#line 7751 
  ret = pci_request_regions(pdev,(char const *)(& s2io_driver_name));
  
#line 7752 
  if (ret != 0) {
    
#line 7753 
    if (debug_level >= 0) 
#line 7753 
                          printk("\001","s2io_init_nic",ret); else ;
    
#line 7755 
    pci_disable_device(pdev);
    
#line 7756 
    __retres = -19;
    
#line 7756 
    goto return_label;
  }
  else ;
  
#line 7758 
  if ((unsigned int)dev_multiq != 0U) 
#line 7759 
                                      dev = ldv_alloc_etherdev_mqs_99(71808,tx_fifo_num,tx_fifo_num); else 
                                                                    
#line 7761 
                                                                    dev = ldv_alloc_etherdev_mqs_100(71808,1U,1U);
  
#line 7762 
  if (dev == (struct net_device *)0) {
    
#line 7763 
    pci_disable_device(pdev);
    
#line 7764 
    pci_release_regions(pdev);
    
#line 7765 
    __retres = -19;
    
#line 7765 
    goto return_label;
  }
  else ;
  
#line 7768 
  pci_set_master(pdev);
  
#line 7769 
  pci_set_drvdata(pdev,(void *)dev);
  
#line 7770 
  dev->dev.parent = & pdev->dev;
  
#line 7773 
  sp = (struct s2io_nic *)netdev_priv((struct net_device const *)dev);
  
#line 7774 
  sp->dev = dev;
  
#line 7775 
  sp->pdev = pdev;
  
#line 7776 
  sp->high_dma_flag = dma_flag;
  
#line 7777 
  sp->device_enabled_once = 0;
  
#line 7778 
  if (rx_ring_mode == 1U) 
#line 7779 
                          sp->rxd_mode = 0; else ;
  
#line 7780 
  if (rx_ring_mode == 2U) 
#line 7781 
                          sp->rxd_mode = 1; else ;
  
#line 7783 
  sp->config.intr_type = dev_intr_type;
  
#line 7785 
  if ((unsigned int)pdev->device == 22322U || (unsigned int)pdev->device == 22578U) 
    
#line 7787 
    sp->device_type = (unsigned char)2U; else 
#line 7789 
                                              sp->device_type = (unsigned char)1U;
  
#line 7793 
  s2io_init_pci(sp);
  
#line 7802 
  config = & sp->config;
  
#line 7803 
  mac_control = & sp->mac_control;
  
#line 7805 
  config->napi = (unsigned char)napi;
  
#line 7806 
  config->tx_steering_type = (unsigned char)tx_steering_type;
  
#line 7809 
  if ((unsigned int)config->tx_steering_type == 1U) 
#line 7810 
                                                    config->tx_fifo_num = 8U; else 
                                                                    
#line 7812 
                                                                    config->tx_fifo_num = tx_fifo_num;
  
#line 7815 
  if (config->tx_fifo_num <= 4U) {
    
#line 7816 
    if (config->tx_fifo_num == 1U) 
#line 7817 
                                   sp->total_tcp_fifos = (unsigned char)1U; else 
                                                                    
#line 7819 
                                                                    sp->total_tcp_fifos = (unsigned char)((unsigned int)((unsigned char)config->tx_fifo_num) + 255U);
    
#line 7820 
    sp->udp_fifo_idx = (unsigned char)((unsigned int)((unsigned char)config->tx_fifo_num) + 255U);
    
#line 7821 
    sp->total_udp_fifos = (unsigned char)1U;
    
#line 7822 
    sp->other_fifo_idx = (unsigned char)((unsigned int)sp->total_tcp_fifos + 255U);
  }
  else {
    
#line 7824 
    sp->total_tcp_fifos = (unsigned char)((unsigned int)((unsigned char)tx_fifo_num) + 253U);
    
#line 7826 
    sp->udp_fifo_idx = sp->total_tcp_fifos;
    
#line 7827 
    sp->total_udp_fifos = (unsigned char)2U;
    
#line 7828 
    sp->other_fifo_idx = (unsigned char)((unsigned int)sp->udp_fifo_idx + 2U);
  }
  
#line 7831 
  config->multiq = dev_multiq;
  
#line 7832 
  i = 0;
  
#line 7832 
  goto ldv_58714;
  ldv_58713: 
#line 7833 
  ;
  {
    
#line 7833 
    struct tx_fifo_config *tx_cfg = & config->tx_cfg[i];
    
#line 7835 
    tx_cfg->fifo_len = tx_fifo_len[i];
    
#line 7836 
    tx_cfg->fifo_priority = (unsigned char)i;
  }
  
#line 7832 
  i += 1;
  ldv_58714: 
#line 7833 
  ;
  
#line 7832 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 7834 
                                             goto ldv_58713; else 
#line 7837 
                                                                  goto ldv_58715;
  ldv_58715: 
#line 7838 
  ;
  
#line 7840 
  i = 0;
  
#line 7840 
  goto ldv_58717;
  ldv_58716: 
#line 7841 
  ;
  
#line 7841 
  config->fifo_mapping[i] = (unsigned char)fifo_map[config->tx_fifo_num + 4294967295U][i];
  
#line 7840 
  i += 1;
  ldv_58717: 
#line 7841 
  ;
  
#line 7840 
  if (i <= 7) 
#line 7842 
              goto ldv_58716; else 
#line 7845 
                                   goto ldv_58718;
  ldv_58718: 
#line 7846 
  ;
  
#line 7844 
  i = 0;
  
#line 7844 
  goto ldv_58720;
  ldv_58719: 
#line 7845 
  ;
  
#line 7845 
  sp->fifo_selector[i] = fifo_selector[i];
  
#line 7844 
  i += 1;
  ldv_58720: 
#line 7845 
  ;
  
#line 7844 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 7846 
                                             goto ldv_58719; else 
#line 7849 
                                                                  goto ldv_58721;
  ldv_58721: 
#line 7850 
  ;
  
#line 7848 
  config->tx_intr_type = 131072ULL;
  
#line 7849 
  i = 0;
  
#line 7849 
  goto ldv_58725;
  ldv_58724: 
#line 7850 
  ;
  {
    
#line 7850 
    struct tx_fifo_config *tx_cfg_0 = & config->tx_cfg[i];
    
#line 7852 
    tx_cfg_0->f_no_snoop = (unsigned char)3U;
    
#line 7853 
    if (tx_cfg_0->fifo_len <= 64U) {
      
#line 7854 
      config->tx_intr_type = 65536ULL;
      
#line 7855 
      goto ldv_58723;
    }
    else ;
  }
  
#line 7849 
  i += 1;
  ldv_58725: 
#line 7850 
  ;
  
#line 7849 
  if (config->tx_fifo_num > (unsigned int)i) 
#line 7851 
                                             goto ldv_58724; else 
#line 7854 
                                                                  goto ldv_58723;
  ldv_58723: 
#line 7855 
  ;
  
#line 7859 
  config->max_txds = 19U;
  
#line 7862 
  config->rx_ring_num = rx_ring_num;
  
#line 7863 
  i = 0;
  
#line 7863 
  goto ldv_58729;
  ldv_58728: 
#line 7864 
  ;
  {
    
#line 7864 
    struct rx_ring_config *rx_cfg = & config->rx_cfg[i];
    
#line 7865 
    struct ring_info *ring = & mac_control->rings[i];
    
#line 7867 
    rx_cfg->num_rxd = rx_ring_sz[i] * (unsigned int)(rxd_count[sp->rxd_mode] + 1);
    
#line 7868 
    rx_cfg->ring_priority = (unsigned char)i;
    
#line 7869 
    ring->rx_bufs_left = 0U;
    
#line 7870 
    ring->rxd_mode = sp->rxd_mode;
    
#line 7871 
    ring->rxd_count = rxd_count[sp->rxd_mode];
    
#line 7872 
    ring->pdev = sp->pdev;
    
#line 7873 
    ring->dev = sp->dev;
  }
  
#line 7863 
  i += 1;
  ldv_58729: 
#line 7864 
  ;
  
#line 7863 
  if (config->rx_ring_num > (unsigned int)i) 
#line 7865 
                                             goto ldv_58728; else 
#line 7868 
                                                                  goto ldv_58730;
  ldv_58730: 
#line 7869 
  ;
  
#line 7876 
  i = 0;
  
#line 7876 
  goto ldv_58733;
  ldv_58732: 
#line 7877 
  ;
  {
    
#line 7877 
    struct rx_ring_config *rx_cfg_0 = & config->rx_cfg[i];
    
#line 7879 
    rx_cfg_0->ring_org = (unsigned char)1U;
    
#line 7880 
    rx_cfg_0->f_no_snoop = (unsigned char)3U;
  }
  
#line 7876 
  i += 1;
  ldv_58733: 
#line 7877 
  ;
  
#line 7876 
  if ((unsigned int)i < rx_ring_num) 
#line 7878 
                                     goto ldv_58732; else 
#line 7881 
                                                          goto ldv_58734;
  ldv_58734: 
#line 7882 
  ;
  
#line 7884 
  mac_control->rmac_pause_time = (unsigned short)rmac_pause_time;
  
#line 7885 
  mac_control->mc_pause_threshold_q0q3 = (unsigned short)mc_pause_threshold_q0q3;
  
#line 7886 
  mac_control->mc_pause_threshold_q4q7 = (unsigned short)mc_pause_threshold_q4q7;
  
#line 7890 
  tmp_3 = init_shared_mem(sp);
  
#line 7890 
  if (tmp_3 != 0) {
    
#line 7891 
    if (debug_level >= 0) 
#line 7891 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 7892 
    ret = -12;
    
#line 7893 
    goto mem_alloc_failed;
  }
  else ;
  
#line 7896 
  sp->bar0 = pci_ioremap_bar(pdev,0);
  
#line 7897 
  if (sp->bar0 == (void *)0) {
    
#line 7898 
    if (debug_level >= 0) 
#line 7898 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 7900 
    ret = -12;
    
#line 7901 
    goto bar0_remap_failed;
  }
  else ;
  
#line 7904 
  sp->bar1 = pci_ioremap_bar(pdev,2);
  
#line 7905 
  if (sp->bar1 == (void *)0) {
    
#line 7906 
    if (debug_level >= 0) 
#line 7906 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 7908 
    ret = -12;
    
#line 7909 
    goto bar1_remap_failed;
  }
  else ;
  
#line 7913 
  j = 0;
  
#line 7913 
  goto ldv_58739;
  ldv_58738: 
#line 7914 
  ;
  
#line 7914 
  mac_control->tx_FIFO_start[j] = (struct TxFIFO_element *)(sp->bar1 + j * 131072);
  
#line 7913 
  j += 1;
  ldv_58739: 
#line 7914 
  ;
  
#line 7913 
  if (j <= 7) 
#line 7915 
              goto ldv_58738; else 
#line 7918 
                                   goto ldv_58740;
  ldv_58740: 
#line 7919 
  ;
  
#line 7918 
  dev->netdev_ops = & s2io_netdev_ops;
  
#line 7919 
  dev->ethtool_ops = & netdev_ethtool_ops;
  
#line 7920 
  dev->hw_features = 17181016067ULL;
  
#line 7923 
  dev->features = (dev->features | dev->hw_features) | 384ULL;
  
#line 7925 
  if (((int)sp->device_type & 2) != 0) {
    
#line 7926 
    dev->hw_features |= 131072ULL;
    
#line 7927 
    if (ufo != 0U) 
#line 7928 
                   dev->features |= 131072ULL; else ;
  }
  else ;
  
#line 7930 
  if (sp->high_dma_flag == 1) 
#line 7931 
                              dev->features |= 32ULL; else ;
  
#line 7932 
  dev->watchdog_timeo = 3750;
  {
    struct lock_class_key __key;
    
#line 7933 
    __init_work(& sp->rst_timer_task,0);
    
#line 7933 
    atomic_long_t __constr_expr_37 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 7933 
    sp->rst_timer_task.data = __constr_expr_37;
    
#line 7933 
    lockdep_init_map(& sp->rst_timer_task.lockdep_map,"(&sp->rst_timer_task)",& __key,0);
    
#line 7933 
    INIT_LIST_HEAD(& sp->rst_timer_task.entry);
    
#line 7933 
    sp->rst_timer_task.func = & s2io_restart_nic;
  }
  {
    struct lock_class_key __key_0;
    
#line 7934 
    __init_work(& sp->set_link_task,0);
    
#line 7934 
    atomic_long_t __constr_expr_38 = {.counter = WORK_STRUCT_NO_POOL};
    
#line 7934 
    sp->set_link_task.data = __constr_expr_38;
    
#line 7934 
    lockdep_init_map(& sp->set_link_task.lockdep_map,"(&sp->set_link_task)",& __key_0,0);
    
#line 7934 
    INIT_LIST_HEAD(& sp->set_link_task.entry);
    
#line 7934 
    sp->set_link_task.func = & s2io_set_link;
  }
  
#line 7936 
  pci_save_state(sp->pdev);
  
#line 7939 
  tmp_4 = s2io_set_swapper(sp);
  
#line 7939 
  if (tmp_4 != 0) {
    
#line 7940 
    if (debug_level >= 0) 
#line 7940 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 7942 
    ret = -11;
    
#line 7943 
    goto set_swap_failed;
  }
  else ;
  
#line 7947 
  if (((int)sp->device_type & 2) != 0) {
    
#line 7948 
    mode = s2io_verify_pci_mode(sp);
    
#line 7949 
    if (mode < 0) {
      
#line 7950 
      if (debug_level >= 0) 
#line 7950 
                            printk("\001","s2io_init_nic"); else ;
      
#line 7952 
      ret = -57;
      
#line 7953 
      goto set_swap_failed;
    }
    else ;
  }
  else ;
  
#line 7957 
  if ((unsigned int)sp->config.intr_type == 2U) {
    
#line 7958 
    sp->num_entries = (int)(config->rx_ring_num + 1U);
    
#line 7959 
    ret = s2io_enable_msi_x(sp);
    
#line 7961 
    if (ret == 0) {
      
#line 7962 
      ret = s2io_test_msi(sp);
      
#line 7964 
      remove_msix_isr(sp);
    }
    else ;
    
#line 7966 
    if (ret != 0) {
      
#line 7968 
      if (debug_level >= 0) 
#line 7968 
                            printk("\001"); else ;
      
#line 7970 
      sp->config.intr_type = (unsigned char)0U;
    }
    else ;
  }
  else ;
  
#line 7974 
  if ((unsigned int)config->intr_type == 2U) {
    
#line 7975 
    i = 0;
    
#line 7975 
    goto ldv_58748;
    ldv_58747: 
#line 7976 
    ;
    {
      
#line 7976 
      struct ring_info *ring_0 = & mac_control->rings[i];
      
#line 7978 
      netif_napi_add(dev,& ring_0->napi,& s2io_poll_msix,64);
    }
    
#line 7975 
    i += 1;
    ldv_58748: 
#line 7976 
    ;
    
#line 7975 
    if (config->rx_ring_num > (unsigned int)i) 
#line 7977 
                                               goto ldv_58747; else 
#line 7980 
                                                                    goto ldv_58749;
    ldv_58749: 
#line 7981 
    ;
  }
  else 
#line 7981 
       netif_napi_add(dev,& sp->napi,& s2io_poll_inta,64);
  
#line 7985 
  if (((int)sp->device_type & 1) != 0) {
    
#line 7990 
    fix_mac_address(sp);
    
#line 7991 
    s2io_reset(sp);
  }
  else ;
  
#line 7998 
  bar0 = (struct XENA_dev_config *)sp->bar0;
  
#line 7999 
  val64 = 281474976710656ULL;
  
#line 8001 
  writeq((unsigned long)val64,(void volatile *)(& bar0->rmac_addr_cmd_mem));
  
#line 8002 
  wait_for_cmd_complete((void *)(& bar0->rmac_addr_cmd_mem),281474976710656ULL,1);
  
#line 8005 
  tmp64 = (u64)readq((void const volatile *)(& bar0->rmac_addr_data0_mem));
  
#line 8006 
  mac_down = (unsigned int)tmp64;
  
#line 8007 
  mac_up = (unsigned int)(tmp64 >> 32);
  
#line 8009 
  sp->def_mac_addr[0].mac_addr[3] = (unsigned char)mac_up;
  
#line 8010 
  sp->def_mac_addr[0].mac_addr[2] = (unsigned char)(mac_up >> 8);
  
#line 8011 
  sp->def_mac_addr[0].mac_addr[1] = (unsigned char)(mac_up >> 16);
  
#line 8012 
  sp->def_mac_addr[0].mac_addr[0] = (unsigned char)(mac_up >> 24);
  
#line 8013 
  sp->def_mac_addr[0].mac_addr[5] = (unsigned char)(mac_down >> 16);
  
#line 8014 
  sp->def_mac_addr[0].mac_addr[4] = (unsigned char)(mac_down >> 24);
  
#line 8017 
  dev->addr_len = (unsigned char)6U;
  
#line 8018 
  memcpy((void *)dev->dev_addr,(void const *)(& sp->def_mac_addr),6UL);
  
#line 8021 
  if ((unsigned int)sp->device_type == 1U) {
    
#line 8022 
    config->max_mc_addr = 64;
    
#line 8023 
    config->max_mac_addr = 16;
    
#line 8024 
    config->mc_start_offset = 16;
  }
  else 
    
#line 8025 
    if ((unsigned int)sp->device_type == 2U) {
      
#line 8026 
      config->max_mc_addr = 256;
      
#line 8027 
      config->max_mac_addr = 64;
      
#line 8028 
      config->mc_start_offset = 64;
    }
    else ;
  
#line 8032 
  do_s2io_store_unicast_mc(sp);
  
#line 8035 
  if ((unsigned int)sp->device_type == 2U && (unsigned int)config->intr_type == 2U) 
    
#line 8037 
    sp->num_entries = (int)(config->rx_ring_num + 1U); else ;
  
#line 8040 
  store_xmsi_data(sp);
  
#line 8042 
  s2io_reset(sp);
  
#line 8048 
  sp->state = 0UL;
  
#line 8051 
  i = 0;
  
#line 8051 
  goto ldv_58753;
  ldv_58752: 
#line 8052 
  ;
  {
    
#line 8052 
    struct fifo_info *fifo = & mac_control->fifos[i];
    
#line 8054 
    spinlock_check(& fifo->tx_lock);
    {
      struct lock_class_key __key_1;
      
#line 8054 
      __raw_spin_lock_init(& fifo->tx_lock.__anonCompField_spinlock_18.rlock,"&(&fifo->tx_lock)->rlock",& __key_1);
    }
  }
  
#line 8051 
  i += 1;
  ldv_58753: 
#line 8052 
  ;
  
#line 8051 
  if (sp->config.tx_fifo_num > (unsigned int)i) 
#line 8053 
                                                goto ldv_58752; else 
                                                                  
#line 8056 
                                                                  goto ldv_58754;
  ldv_58754: 
#line 8057 
  ;
  
#line 8061 
  subid = (sp->pdev)->subsystem_device;
  
#line 8062 
  if (((int)subid & 255) > 6) {
    
#line 8063 
    val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
    
#line 8064 
    val64 |= 140737488355328ULL;
    
#line 8065 
    writeq((unsigned long)val64,(void volatile *)(& bar0->gpio_control));
    
#line 8066 
    val64 = 293019865982173184ULL;
    
#line 8067 
    writeq((unsigned long)val64,(void volatile *)bar0 + 9984U);
    
#line 8068 
    val64 = (u64)readq((void const volatile *)(& bar0->gpio_control));
  }
  else ;
  
#line 8071 
  sp->rx_csum = 1;
  
#line 8073 
  tmp_8 = ldv_register_netdev_101(dev);
  
#line 8073 
  if (tmp_8 != 0) {
    
#line 8074 
    if (debug_level >= 0) 
#line 8074 
                          printk("\001"); else ;
    
#line 8075 
    ret = -19;
    
#line 8076 
    goto register_failed;
  }
  else ;
  
#line 8078 
  s2io_vpd_read(sp);
  
#line 8079 
  if (debug_level >= 0) 
#line 8079 
                        printk("\001"); else ;
  
#line 8080 
  if (debug_level >= 0) 
#line 8080 
                        printk("\001",(char *)(& dev->name),(u8 *)(& sp->product_name),(int)pdev->revision); else ;
  
#line 8082 
  if (debug_level >= 0) 
#line 8082 
                        printk("\001",(char *)(& dev->name),(char const *)(& s2io_driver_version)); else ;
  
#line 8084 
  if (debug_level >= 0) 
#line 8084 
                        printk("\001",(char *)(& dev->name),dev->dev_addr); else ;
  
#line 8085 
  if (debug_level >= 0) 
#line 8085 
                        printk("\001",(u8 *)(& sp->serial_num)); else ;
  
#line 8086 
  if (((int)sp->device_type & 2) != 0) {
    
#line 8087 
    mode = s2io_print_pci_mode(sp);
    
#line 8088 
    if (mode < 0) {
      
#line 8089 
      ret = -57;
      
#line 8090 
      ldv_unregister_netdev_102(dev);
      
#line 8091 
      goto set_swap_failed;
    }
    else ;
  }
  else ;
  
#line 8094 
  switch (sp->rxd_mode) {
    case 0: 
#line 8095 
    ;
    
#line 8096 
    if (debug_level >= 0) 
#line 8096 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8098 
    goto ldv_58757;
    case 1: 
#line 8099 
    ;
    
#line 8100 
    if (debug_level >= 0) 
#line 8100 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8102 
    goto ldv_58757;
  }
  ldv_58757: 
#line 8105 
  ;
  
#line 8105 
  switch ((int)sp->config.napi) {
    case 0: 
#line 8106 
    ;
    
#line 8107 
    if (debug_level >= 0) 
#line 8107 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8108 
    goto ldv_58760;
    case 1: 
#line 8109 
    ;
    
#line 8110 
    if (debug_level >= 0) 
#line 8110 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8111 
    goto ldv_58760;
  }
  ldv_58760: 
#line 8114 
  ;
  
#line 8114 
  if (debug_level >= 0) 
#line 8114 
                        printk("\001",(char *)(& dev->name),sp->config.tx_fifo_num); else ;
  
#line 8117 
  if (debug_level >= 0) 
#line 8117 
                        printk("\001",(char *)(& dev->name),sp->config.rx_ring_num); else ;
  
#line 8120 
  switch ((int)sp->config.intr_type) {
    case 0: 
#line 8121 
    ;
    
#line 8122 
    if (debug_level >= 0) 
#line 8122 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8123 
    goto ldv_58763;
    case 2: 
#line 8124 
    ;
    
#line 8125 
    if (debug_level >= 0) 
#line 8125 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8126 
    goto ldv_58763;
  }
  ldv_58763: 
#line 8128 
  ;
  
#line 8128 
  if ((unsigned int)sp->config.multiq != 0U) {
    
#line 8129 
    i = 0;
    
#line 8129 
    goto ldv_58767;
    ldv_58766: 
#line 8130 
    ;
    {
      
#line 8130 
      struct fifo_info *fifo_0 = & mac_control->fifos[i];
      
#line 8132 
      fifo_0->multiq = config->multiq;
    }
    
#line 8129 
    i += 1;
    ldv_58767: 
#line 8130 
    ;
    
#line 8129 
    if (sp->config.tx_fifo_num > (unsigned int)i) 
#line 8131 
                                                  goto ldv_58766; else 
                                                                    
#line 8134 
                                                                    goto ldv_58768;
    ldv_58768: 
#line 8135 
    ;
    
#line 8134 
    if (debug_level >= 0) 
#line 8134 
                          printk("\001",(char *)(& dev->name)); else ;
  }
  else 
    
#line 8137 
    if (debug_level >= 0) 
#line 8137 
                          printk("\001",(char *)(& dev->name)); else ;
  
#line 8140 
  switch ((int)sp->config.tx_steering_type) {
    case 0: 
#line 8141 
    ;
    
#line 8142 
    if (debug_level >= 0) 
#line 8142 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8144 
    goto ldv_58770;
    case 1: 
#line 8145 
    ;
    
#line 8146 
    if (debug_level >= 0) 
#line 8146 
                          printk("\001",(char *)(& dev->name)); else ;
    
#line 8149 
    goto ldv_58770;
    case 2: 
#line 8150 
    ;
    
#line 8151 
    if (debug_level >= 0) 
#line 8151 
                          printk("\001",(char *)(& dev->name)); else ;
  }
  ldv_58770: 
#line 8156 
  ;
  
#line 8156 
  if (debug_level >= 0) 
#line 8156 
                        printk("\001",(char *)(& dev->name)); else ;
  
#line 8158 
  if (ufo != 0U) {
    
#line 8159 
    if (debug_level >= 0) 
#line 8159 
                          printk("\001",(char *)(& dev->name)); else ;
  }
  else ;
  
#line 8163 
  snprintf((char *)(& sp->name),60UL,"%s Neterion %s",(char *)(& dev->name),(u8 *)(& sp->product_name));
  
#line 8166 
  if (vlan_tag_strip != 0U) 
#line 8167 
                            sp->vlan_strip_flag = 1; else 
#line 8169 
                                                          sp->vlan_strip_flag = 0;
  
#line 8176 
  netif_carrier_off(dev);
  
#line 8178 
  __retres = 0;
  
#line 8178 
  goto return_label;
  register_failed: 
#line 8180 
  ;
  set_swap_failed: 
#line 8181 
  ;
  
#line 8182 
  iounmap((void volatile *)sp->bar1);
  bar1_remap_failed: 
#line 8183 
  ;
  
#line 8184 
  iounmap((void volatile *)sp->bar0);
  bar0_remap_failed: 
#line 8185 
  ;
  mem_alloc_failed: 
#line 8186 
  ;
  
#line 8187 
  free_shared_mem(sp);
  
#line 8188 
  pci_disable_device(pdev);
  
#line 8189 
  pci_release_regions(pdev);
  
#line 8190 
  ldv_free_netdev_103(dev);
  
#line 8192 
  __retres = ret;
  return_label: 
#line 8192 
                return __retres;
}


#line 8204  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_rem_nic(struct pci_dev *pdev)
{
  struct s2io_nic *sp;
  
#line 8206 
  struct net_device *dev = pci_get_drvdata(pdev);
  
#line 8209 
  if (dev == (struct net_device *)0) {
    
#line 8210 
    if (debug_level >= 0) 
#line 8210 
                          printk("\001"); else ;
    
#line 8211 
    goto return_label;
  }
  else ;
  
#line 8214 
  sp = (struct s2io_nic *)netdev_priv((struct net_device const *)dev);
  
#line 8216 
  cancel_work_sync(& sp->rst_timer_task);
  
#line 8217 
  cancel_work_sync(& sp->set_link_task);
  
#line 8219 
  ldv_unregister_netdev_104(dev);
  
#line 8221 
  free_shared_mem(sp);
  
#line 8222 
  iounmap((void volatile *)sp->bar0);
  
#line 8223 
  iounmap((void volatile *)sp->bar1);
  
#line 8224 
  pci_release_regions(pdev);
  
#line 8225 
  ldv_free_netdev_105(dev);
  
#line 8226 
  pci_disable_device(pdev);
  return_label: 
#line 8227 
                return;
}


#line 8235  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_starter(void)
{
  int tmp;
  
#line 8237 
  tmp = ldv___pci_register_driver_106(& s2io_driver,& __this_module,"s2io");
  
#line 8237 
  return tmp;
}


#line 8246  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_closer(void)
{
  
#line 8248 
  ldv_pci_unregister_driver_107(& s2io_driver);
  
#line 8249 
  if (debug_level > 0) 
#line 8249 
                       printk("\001"); else ;
  
#line 8250 
  return;
}


#line 8255  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int check_L2_lro_capable(u8 *buffer, struct iphdr **ip, struct tcphdr **tcp, struct RxD_t *rxdp, struct s2io_nic *sp)
{
  int __retres;
  int ip_off;
  u8 ip_len;
  
#line 8260 
  u8 l2_type = (unsigned char)((unsigned int)((unsigned char)(rxdp->Control_1 >> 37)) & 7U);
  
#line 8262 
  if ((rxdp->Control_1 & 8589934592ULL) == 0ULL) {
    
#line 8263 
    if (debug_level > 0) 
#line 8263 
                         printk("\001","check_L2_lro_capable"); else ;
    
#line 8266 
    __retres = -1;
    
#line 8266 
    goto return_label;
  }
  else ;
  
#line 8270 
  if ((unsigned int)l2_type == 0U || (unsigned int)l2_type == 4U) {
    
#line 8271 
    ip_off = 14;
    
#line 8276 
    if (sp->vlan_strip_flag == 0 && (rxdp->Control_1 & 549755813888ULL) != 0ULL) 
      
#line 8278 
      ip_off += 4; else ;
  }
  else {
    
#line 8281 
    __retres = -1;
    
#line 8281 
    goto return_label;
  }
  
#line 8284 
  *ip = (struct iphdr *)(buffer + ip_off);
  
#line 8285 
  ip_len = (unsigned char)(*ip)->ihl;
  
#line 8286 
  ip_len = (unsigned char)((int)ip_len << 2U);
  
#line 8287 
  *tcp = (struct tcphdr *)((unsigned long)*ip + (unsigned long)ip_len);
  
#line 8289 
  __retres = 0;
  return_label: 
#line 8289 
                return __retres;
}


#line 8292  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int check_for_socket_match(struct lro *lro, struct iphdr *ip, struct tcphdr *tcp)
{
  int __retres;
  
#line 8295 
  if (debug_level > 1) 
#line 8295 
                       printk("\001","check_for_socket_match"); else ;
  
#line 8296 
  if ((((lro->iph)->saddr != ip->saddr || (lro->iph)->daddr != ip->daddr) || (int)(lro->tcph)->source != (int)tcp->source) || (int)(lro->tcph)->dest != (int)tcp->dest) {
    
#line 8300 
    __retres = -1;
    
#line 8300 
    goto return_label;
  }
  else ;
  
#line 8301 
  __retres = 0;
  return_label: 
#line 8301 
                return __retres;
}


#line 8304  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
__inline static int get_l4_pyld_length(struct iphdr *ip, struct tcphdr *tcp)
{
  int __retres;
  int tmp_0;
  
#line 8306 
  if (0 != 0) 
#line 8306 
              tmp_0 = (int)((unsigned short)(((int)ip->tot_len << 8) | ((int)ip->tot_len >> 8)));
  else {
    __u16 tmp;
    
#line 8306 
    tmp = __fswab16((unsigned short)((int)ip->tot_len));
    
#line 8306 
    tmp_0 = (int)tmp;
  }
  
#line 8306 
  ;
  
#line 8306 
  __retres = (tmp_0 - ((int)ip->ihl << 2)) - ((int)tcp->doff << 2);
  
#line 8306 
  return __retres;
}


#line 8309  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void initiate_new_session(struct lro *lro, u8 *l2h, struct iphdr *ip, struct tcphdr *tcp, u32 tcp_pyld_len, u16 vlan_tag)
{
  unsigned int tmp_0;
  
#line 8313 
  if (debug_level > 1) 
#line 8313 
                       printk("\001","initiate_new_session"); else ;
  
#line 8314 
  lro->l2h = l2h;
  
#line 8315 
  lro->iph = ip;
  
#line 8316 
  lro->tcph = tcp;
  
#line 8317 
  if (0 != 0) 
#line 8317 
              tmp_0 = (((tcp->seq << 24) | ((tcp->seq << 8) & 16711680U)) | ((tcp->seq >> 8) & 65280U)) | (tcp->seq >> 24); else 
                                                                    
#line 8317 
                                                                    tmp_0 = __fswab32(tcp->seq);
  
#line 8317 
  lro->tcp_next_seq = tmp_0 + tcp_pyld_len;
  
#line 8318 
  lro->tcp_ack = tcp->ack_seq;
  
#line 8319 
  lro->sg_num = 1;
  
#line 8320 
  if (0 != 0) 
#line 8320 
              lro->total_len = (int)((unsigned short)(((int)ip->tot_len << 8) | ((int)ip->tot_len >> 8)));
  else {
    __u16 tmp_1;
    
#line 8320 
    tmp_1 = __fswab16((unsigned short)((int)ip->tot_len));
    
#line 8320 
    lro->total_len = (int)tmp_1;
  }
  
#line 8321 
  lro->frags_len = 0;
  
#line 8322 
  lro->vlan_tag = vlan_tag;
  
#line 8327 
  if ((unsigned int)*((unsigned char *)tcp + 12UL) == 128U) {
    __be32 *ptr;
    
#line 8329 
    ptr = (__be32 *)(tcp + 1U);
    
#line 8330 
    lro->saw_ts = (unsigned char)1U;
    
#line 8331 
    if (0 != 0) 
#line 8331 
                lro->cur_tsval = (((*(ptr + 1U) << 24) | ((*(ptr + 1U) << 8) & 16711680U)) | ((*(ptr + 1U) >> 8) & 65280U)) | (*(ptr + 1U) >> 24); else 
                                                                    
#line 8331 
                                                                    lro->cur_tsval = __fswab32(*(ptr + 1U));
    
#line 8332 
    lro->cur_tsecr = *(ptr + 2U);
  }
  else ;
  
#line 8334 
  lro->in_use = 1;
  
#line 8335 
  return;
}


#line 8337  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void update_L3L4_header(struct s2io_nic *sp, struct lro *lro)
{
  int tmp_0;
  
#line 8339 
  struct iphdr *ip = lro->iph;
  
#line 8340 
  struct tcphdr *tcp = lro->tcph;
  
#line 8341 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 8343 
  if (debug_level > 1) 
#line 8343 
                       printk("\001","update_L3L4_header"); else ;
  
#line 8346 
  if (0 != 0) 
#line 8346 
              tmp_0 = (int)((unsigned short)(((int)((unsigned short)lro->total_len) << 8) | ((int)((unsigned short)lro->total_len) >> 8)));
  else {
    __u16 tmp;
    
#line 8346 
    tmp = __fswab16((unsigned short)((int)((unsigned short)lro->total_len)));
    
#line 8346 
    tmp_0 = (int)tmp;
  }
  
#line 8346 
  ;
  
#line 8346 
  ;
  
#line 8346 
  csum_replace2(& ip->check,(unsigned short)((int)ip->tot_len),(unsigned short)tmp_0);
  
#line 8347 
  if (0 != 0) 
#line 8347 
              ip->tot_len = (unsigned short)(((int)((unsigned short)lro->total_len) << 8) | ((int)((unsigned short)lro->total_len) >> 8)); else 
                                                                    
#line 8347 
                                                                    ip->tot_len = __fswab16((unsigned short)((int)((unsigned short)lro->total_len)));
  
#line 8350 
  tcp->ack_seq = lro->tcp_ack;
  
#line 8351 
  tcp->window = lro->window;
  
#line 8354 
  if ((unsigned int)lro->saw_ts != 0U) {
    
#line 8355 
    __be32 *ptr = (__be32 *)(tcp + 1U);
    
#line 8356 
    *(ptr + 2U) = lro->cur_tsecr;
  }
  else ;
  
#line 8362 
  swstats->sum_avg_pkts_aggregated += (unsigned long long)lro->sg_num;
  
#line 8363 
  swstats->num_aggregations += 1ULL;
  
#line 8364 
  return;
}


#line 8366  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void aggregate_new_rx(struct lro *lro, struct iphdr *ip, struct tcphdr *tcp, u32 l4_pyld)
{
  
#line 8369 
  if (debug_level > 1) 
#line 8369 
                       printk("\001","aggregate_new_rx"); else ;
  
#line 8370 
  lro->total_len = (int)((unsigned int)lro->total_len + l4_pyld);
  
#line 8371 
  lro->frags_len = (int)((unsigned int)lro->frags_len + l4_pyld);
  
#line 8372 
  lro->tcp_next_seq += l4_pyld;
  
#line 8373 
  lro->sg_num += 1;
  
#line 8376 
  lro->tcp_ack = tcp->ack_seq;
  
#line 8377 
  lro->window = tcp->window;
  
#line 8379 
  if ((unsigned int)lro->saw_ts != 0U) {
    __be32 *ptr;
    
#line 8382 
    ptr = (__be32 *)(tcp + 1U);
    
#line 8383 
    if (0 != 0) 
#line 8383 
                lro->cur_tsval = (((*(ptr + 1U) << 24) | ((*(ptr + 1U) << 8) & 16711680U)) | ((*(ptr + 1U) >> 8) & 65280U)) | (*(ptr + 1U) >> 24); else 
                                                                    
#line 8383 
                                                                    lro->cur_tsval = __fswab32(*(ptr + 1U));
    
#line 8384 
    lro->cur_tsecr = *(ptr + 2U);
  }
  else ;
  
#line 8386 
  return;
}


#line 8388  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int verify_l3_l4_lro_capable(struct lro *l_lro, struct iphdr *ip, struct tcphdr *tcp, u32 tcp_pyld_len)
{
  int __retres;
  u8 *ptr;
  int tmp_0;
  __u8 tmp;
  
#line 8393 
  if (debug_level > 1) 
#line 8393 
                       printk("\001","verify_l3_l4_lro_capable"); else ;
  
#line 8395 
  if (tcp_pyld_len == 0U) {
    
#line 8397 
    __retres = -1;
    
#line 8397 
    goto return_label;
  }
  else ;
  
#line 8400 
  if ((unsigned int)*((unsigned char *)ip + 0UL) != 5U) {
    
#line 8401 
    __retres = -1;
    
#line 8401 
    goto return_label;
  }
  else ;
  
#line 8404 
  tmp = ipv4_get_dsfield((struct iphdr const *)ip);
  
#line 8404 
  tmp_0 = INET_ECN_is_ce((unsigned char)((int)tmp));
  
#line 8404 
  if (tmp_0 != 0) {
    
#line 8405 
    __retres = -1;
    
#line 8405 
    goto return_label;
  }
  else ;
  
#line 8408 
  if ((((((((unsigned int)*((unsigned char *)tcp + 13UL) != 0U || (unsigned int)*((unsigned char *)tcp + 13UL) != 0U) || (unsigned int)*((unsigned char *)tcp + 13UL) != 0U) || (unsigned int)*((unsigned char *)tcp + 13UL) != 0U) || (unsigned int)*((unsigned char *)tcp + 13UL) != 0U) || (unsigned int)*((unsigned char *)tcp + 13UL) != 0U) || (unsigned int)*((unsigned char *)tcp + 13UL) != 0U) || (unsigned int)*((unsigned char *)tcp + 13UL) == 0U) {
    
#line 8416 
    __retres = -1;
    
#line 8416 
    goto return_label;
  }
  else ;
  
#line 8423 
  if ((unsigned int)*((unsigned char *)tcp + 12UL) != 80U && (unsigned int)*((unsigned char *)tcp + 12UL) != 128U) {
    
#line 8424 
    __retres = -1;
    
#line 8424 
    goto return_label;
  }
  else ;
  
#line 8426 
  if ((unsigned int)*((unsigned char *)tcp + 12UL) == 128U) {
    
#line 8427 
    ptr = (u8 *)(tcp + 1U);
    
#line 8428 
    goto ldv_58851;
    ldv_58850: 
#line 8429 
    ;
    
#line 8429 
    ptr += 1;
    ldv_58851: 
#line 8430 
    ;
    
#line 8428 
    if ((unsigned int)*ptr == 1U) 
#line 8430 
                                  goto ldv_58850; else 
#line 8433 
                                                       goto ldv_58852;
    ldv_58852: 
#line 8434 
    ;
    
#line 8430 
    if ((unsigned int)*ptr != 8U || (unsigned int)*(ptr + 1U) != 10U) {
      
#line 8431 
      __retres = -1;
      
#line 8431 
      goto return_label;
    }
    else ;
    
#line 8434 
    if (l_lro != (struct lro *)0) {
      unsigned int tmp_2;
      
#line 8435 
      if (0 != 0) 
#line 8435 
                  tmp_2 = (((*((__be32 *)(ptr + 2U)) << 24) | ((*((__be32 *)(ptr + 2U)) << 8) & 16711680U)) | ((*((__be32 *)(ptr + 2U)) >> 8) & 65280U)) | (*((__be32 *)(ptr + 2U)) >> 24); else 
                                                                    
#line 8435 
                                                                    tmp_2 = __fswab32(*((__be32 *)(ptr + 2U)));
      
#line 8435 
      ;
      
#line 8435 
      if (l_lro->cur_tsval > tmp_2) {
        
#line 8436 
        __retres = -1;
        
#line 8436 
        goto return_label;
      }
      else ;
    }
    else ;
    
#line 8439 
    if (*((__be32 *)(ptr + 6U)) == 0U) {
      
#line 8440 
      __retres = -1;
      
#line 8440 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 8443 
  __retres = 0;
  return_label: 
#line 8443 
                return __retres;
}


#line 8446  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static int s2io_club_tcp_session(struct ring_info *ring_data, u8 *buffer, u8 **tcp, u32 *tcp_len, struct lro **lro, struct RxD_t *rxdp, struct s2io_nic *sp)
{
  int __retres;
  struct iphdr *ip;
  struct tcphdr *tcph;
  int i;
  int tmp;
  
#line 8452 
  int ret = 0;
  
#line 8453 
  u16 vlan_tag = (unsigned short)0U;
  
#line 8454 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 8456 
  ret = check_L2_lro_capable(buffer,& ip,(struct tcphdr **)tcp,rxdp,sp);
  
#line 8458 
  if (ret != 0) {
    
#line 8459 
    __retres = ret;
    
#line 8459 
    goto return_label;
  }
  else ;
  
#line 8461 
  if (debug_level > 1) 
#line 8461 
                       printk("\001",ip->saddr,ip->daddr); else ;
  
#line 8463 
  vlan_tag = (unsigned short)rxdp->Control_2;
  
#line 8464 
  tcph = (struct tcphdr *)*tcp;
  
#line 8465 
  tmp = get_l4_pyld_length(ip,tcph);
  
#line 8465 
  *tcp_len = (unsigned int)tmp;
  
#line 8466 
  i = 0;
  
#line 8466 
  goto ldv_58873;
  ldv_58872: 
#line 8467 
  ;
  {
    
#line 8467 
    struct lro *l_lro = & ring_data->lro0_n[i];
    
#line 8468 
    if (l_lro->in_use != 0) {
      int tmp_0;
      unsigned int tmp_4;
      int tmp_5;
      
#line 8469 
      tmp_0 = check_for_socket_match(l_lro,ip,tcph);
      
#line 8469 
      if (tmp_0 != 0) 
#line 8470 
                      goto ldv_58869; else ;
      
#line 8472 
      *lro = l_lro;
      
#line 8474 
      if (0 != 0) 
#line 8474 
                  tmp_4 = (((tcph->seq << 24) | ((tcph->seq << 8) & 16711680U)) | ((tcph->seq >> 8) & 65280U)) | (tcph->seq >> 24); else 
                                                                    
#line 8474 
                                                                    tmp_4 = __fswab32(tcph->seq);
      
#line 8474 
      ;
      
#line 8474 
      if ((*lro)->tcp_next_seq != tmp_4) {
        
#line 8475 
        if (debug_level > 1) {
          unsigned int tmp_2;
          
#line 8475 
          if (0 != 0) 
#line 8475 
                      tmp_2 = (((tcph->seq << 24) | ((tcph->seq << 8) & 16711680U)) | ((tcph->seq >> 8) & 65280U)) | (tcph->seq >> 24); else 
                                                                    
#line 8475 
                                                                    tmp_2 = __fswab32(tcph->seq);
          
#line 8475 
          ;
          
#line 8475 
          printk("\001","s2io_club_tcp_session",(*lro)->tcp_next_seq,tmp_2);
        }
        else ;
        
#line 8481 
        swstats->outof_sequence_pkts += 1ULL;
        
#line 8482 
        ret = 2;
        
#line 8483 
        goto ldv_58871;
      }
      else ;
      
#line 8486 
      tmp_5 = verify_l3_l4_lro_capable(l_lro,ip,tcph,*tcp_len);
      
#line 8486 
      if (tmp_5 == 0) 
#line 8488 
                      ret = 1; else 
#line 8490 
                                    ret = 2;
      
#line 8491 
      goto ldv_58871;
    }
    else ;
  }
  ldv_58869: 
#line 8494 
  ;
  
#line 8466 
  i += 1;
  ldv_58873: 
#line 8467 
  ;
  
#line 8466 
  if (i <= 31) 
#line 8468 
               goto ldv_58872; else 
#line 8471 
                                    goto ldv_58871;
  ldv_58871: 
#line 8472 
  ;
  
#line 8495 
  if (ret == 0) {
    int tmp_6;
    
#line 8501 
    tmp_6 = verify_l3_l4_lro_capable((struct lro *)0,ip,tcph,*tcp_len);
    
#line 8501 
    if (tmp_6 != 0) {
      
#line 8502 
      __retres = 5;
      
#line 8502 
      goto return_label;
    }
    else ;
    
#line 8504 
    i = 0;
    
#line 8504 
    goto ldv_58877;
    ldv_58876: 
#line 8505 
    ;
    {
      
#line 8505 
      struct lro *l_lro_0 = & ring_data->lro0_n[i];
      
#line 8506 
      if (l_lro_0->in_use == 0) {
        
#line 8507 
        *lro = l_lro_0;
        
#line 8508 
        ret = 3;
        
#line 8509 
        goto ldv_58875;
      }
      else ;
    }
    
#line 8504 
    i += 1;
    ldv_58877: 
#line 8505 
    ;
    
#line 8504 
    if (i <= 31) 
#line 8506 
                 goto ldv_58876; else 
#line 8509 
                                      goto ldv_58875;
    ldv_58875: 
#line 8510 
    ;
  }
  else ;
  
#line 8514 
  if (ret == 0) {
    
#line 8515 
    if (debug_level > 1) 
#line 8515 
                         printk("\001","s2io_club_tcp_session"); else ;
    
#line 8517 
    *lro = (struct lro *)0;
    
#line 8518 
    __retres = ret;
    
#line 8518 
    goto return_label;
  }
  else ;
  
#line 8521 
  switch (ret) {
    case 3: 
#line 8522 
    ;
    
#line 8523 
    initiate_new_session(*lro,buffer,ip,tcph,*tcp_len,(unsigned short)((int)vlan_tag));
    
#line 8525 
    goto ldv_58879;
    case 2: 
#line 8526 
    ;
    
#line 8527 
    update_L3L4_header(sp,*lro);
    
#line 8528 
    goto ldv_58879;
    case 1: 
#line 8529 
    ;
    
#line 8530 
    aggregate_new_rx(*lro,ip,tcph,*tcp_len);
    
#line 8531 
    if ((*lro)->sg_num == (int)sp->lro_max_aggr_per_sess) {
      
#line 8532 
      update_L3L4_header(sp,*lro);
      
#line 8533 
      ret = 4;
    }
    else ;
    
#line 8535 
    goto ldv_58879;
    default: 
#line 8536 
    ;
    
#line 8537 
    if (debug_level >= 0) 
#line 8537 
                          printk("\001","s2io_club_tcp_session"); else ;
    
#line 8538 
    goto ldv_58879;
  }
  ldv_58879: 
#line 8541 
  ;
  
#line 8541 
  __retres = ret;
  return_label: 
#line 8541 
                return __retres;
}


#line 8544  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void clear_lro_session(struct lro *lro)
{
  
#line 8546 
  u16 lro_struct_size = (unsigned short)128U;
  
#line 8548 
  memset((void *)lro,0,(unsigned long)lro_struct_size);
  
#line 8549 
  return;
}


#line 8551  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void queue_rx_frame(struct sk_buff *skb, u16 vlan_tag)
{
  
#line 8553 
  struct net_device *dev = skb->dev;
  
#line 8554 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)dev);
  
#line 8556 
  skb->protocol = eth_type_trans(skb,dev);
  
#line 8557 
  if ((unsigned int)vlan_tag != 0U && sp->vlan_strip_flag != 0) 
#line 8558 
                                                                __vlan_hwaccel_put_tag(skb,(unsigned short)129,(unsigned short)((int)vlan_tag)); else ;
  
#line 8559 
  if ((unsigned int)sp->config.napi != 0U) 
#line 8560 
                                           netif_receive_skb(skb); else 
                                                                    
#line 8562 
                                                                    netif_rx(skb);
  
#line 8563 
  return;
}


#line 8565  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void lro_append_pkt(struct s2io_nic *sp, struct lro *lro, struct sk_buff *skb, u32 tcp_len)
{
  unsigned char *tmp_0;
  
#line 8568 
  struct sk_buff *first = lro->parent;
  
#line 8569 
  struct swStat *swstats = & (sp->mac_control.stats_info)->sw_stat;
  
#line 8571 
  first->len += tcp_len;
  
#line 8572 
  first->data_len = (unsigned int)lro->frags_len;
  
#line 8573 
  skb_pull(skb,skb->len - tcp_len);
  
#line 8574 
  tmp_0 = skb_end_pointer((struct sk_buff const *)first);
  
#line 8574 
  ;
  
#line 8574 
  if (((struct skb_shared_info *)tmp_0)->frag_list != (struct sk_buff *)0) 
    
#line 8575 
    (lro->last_frag)->__anonCompField_sk_buff_80.__anonCompField___anonunion_282_79.next = skb;
  else {
    unsigned char *tmp;
    
#line 8577 
    tmp = skb_end_pointer((struct sk_buff const *)first);
    
#line 8577 
    ((struct skb_shared_info *)tmp)->frag_list = skb;
  }
  
#line 8578 
  first->truesize += skb->truesize;
  
#line 8579 
  lro->last_frag = skb;
  
#line 8580 
  swstats->clubbed_frms_cnt += 1ULL;
  
#line 8581 
  return;
}


#line 8591  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static pci_ers_result_t s2io_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)
{
  pci_ers_result_t __retres;
  bool tmp_1;
  
#line 8594 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 8595 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)netdev);
  
#line 8597 
  netif_device_detach(netdev);
  
#line 8599 
  if (state == 3U) {
    
#line 8600 
    __retres = 4U;
    
#line 8600 
    goto return_label;
  }
  else ;
  
#line 8602 
  tmp_1 = netif_running((struct net_device const *)netdev);
  
#line 8602 
  if ((int)tmp_1 != 0) 
#line 8604 
                       do_s2io_card_down(sp,0); else ;
  
#line 8606 
  pci_disable_device(pdev);
  
#line 8608 
  __retres = 3U;
  return_label: 
#line 8608 
                return __retres;
}


#line 8620  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static pci_ers_result_t s2io_io_slot_reset(struct pci_dev *pdev)
{
  pci_ers_result_t __retres;
  int tmp_1;
  
#line 8622 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 8623 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)netdev);
  
#line 8625 
  tmp_1 = pci_enable_device(pdev);
  
#line 8625 
  if (tmp_1 != 0) {
    
#line 8626 
    printk("\001");
    
#line 8627 
    __retres = 4U;
    
#line 8627 
    goto return_label;
  }
  else ;
  
#line 8630 
  pci_set_master(pdev);
  
#line 8631 
  s2io_reset(sp);
  
#line 8633 
  __retres = 5U;
  return_label: 
#line 8633 
                return __retres;
}


#line 8643  "/home/debian/klever-inst/klever/build bases/linux-4.2.6/Storage/home/debian/klever-inst/tmp-dir/linux-4.2.6/drivers/net/ethernet/neterion/s2io.c"
static void s2io_io_resume(struct pci_dev *pdev)
{
  bool tmp_3;
  
#line 8645 
  struct net_device *netdev = pci_get_drvdata(pdev);
  
#line 8646 
  struct s2io_nic *sp = netdev_priv((struct net_device const *)netdev);
  
#line 8648 
  tmp_3 = netif_running((struct net_device const *)netdev);
  
#line 8648 
  if ((int)tmp_3 != 0) {
    int tmp_1;
    int tmp_2;
    
#line 8649 
    tmp_1 = s2io_card_up(sp);
    
#line 8649 
    if (tmp_1 != 0) {
      
#line 8650 
      printk("\001");
      
#line 8651 
      goto return_label;
    }
    else ;
    
#line 8654 
    tmp_2 = s2io_set_mac_addr(netdev,(void *)netdev->dev_addr);
    
#line 8654 
    if (tmp_2 == -1) {
      
#line 8655 
      s2io_card_down(sp);
      
#line 8656 
      printk("\001");
      
#line 8657 
      goto return_label;
    }
    else ;
  }
  else ;
  
#line 8661 
  netif_device_attach(netdev);
  
#line 8662 
  netif_tx_wake_all_queues(netdev);
  return_label: 
#line 8663 
                return;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int (*ldv_emg_alias_eth_validate_addr_7)(struct net_device *) = & eth_validate_addr;

#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
unsigned int (*ldv_emg_alias_ethtool_op_get_link_10)(struct net_device *) = & ethtool_op_get_link;

#line 58  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
struct pci_driver *ldv_emg_alias_s2io_driver_2 = & s2io_driver;

#line 61 
void ldv_emg_unregister_netdev(struct net_device *arg0);


#line 62 
void ldv_emg_free_irq(unsigned int arg0, void *arg1);


#line 63 
_Bool ldv_emg_schedule_work(struct work_struct *arg0);


#line 64 
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2);


#line 65 
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1);


#line 66 
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0);


#line 67 
int ldv_emg_del_timer_sync(struct timer_list *arg0);


#line 68 
void ldv_emg_free_netdev(struct net_device *arg0);


#line 69 
int ldv_emg_register_netdev(struct net_device *arg0);


#line 70 
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2);


#line 71 
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4);


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_tx_watchdog_17(struct net_device *arg0)
{
  
#line 76 
  s2io_tx_watchdog(arg0);
  
#line 77 
  return;
}


#line 80  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_set_led_5(struct net_device *arg0, enum ethtool_phys_id_state arg1)
{
  int tmp;
  
#line 81 
  tmp = s2io_ethtool_set_led(arg0,arg1);
  
#line 81 
  return tmp;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_get_ethtool_stats_8(struct net_device *arg0, struct ethtool_stats *arg1, unsigned long long *arg2)
{
  
#line 86 
  s2io_get_ethtool_stats(arg0,arg1,arg2);
  
#line 87 
  return;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_ethtool_gringparam_24(struct net_device *arg0, struct ethtool_ringparam *arg1)
{
  
#line 91 
  s2io_ethtool_gringparam(arg0,arg1);
  
#line 92 
  return;
}


#line 95  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_rem_nic_3(struct pci_dev *arg0)
{
  
#line 96 
  s2io_rem_nic(arg0);
  
#line 97 
  return;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
enum irqreturn ldv_emg_wrapper_s2io_test_intr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 101 
  tmp = s2io_test_intr(arg0,arg1);
  
#line 101 
  return tmp;
}


#line 105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_geeprom_3(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 106 
  tmp = s2io_ethtool_geeprom(arg0,arg1,arg2);
  
#line 106 
  return tmp;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_netpoll_27(struct net_device *arg0)
{
  
#line 111 
  s2io_netpoll(arg0);
  
#line 112 
  return;
}


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ioctl_19(struct net_device *arg0, struct ifreq *arg1, int arg2)
{
  int tmp;
  
#line 116 
  tmp = s2io_ioctl(arg0,arg1,arg2);
  
#line 116 
  return tmp;
}


#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_init_nic_2(struct pci_dev *arg0, struct pci_device_id *arg1)
{
  int tmp;
  
#line 121 
  tmp = s2io_init_nic(arg0,(struct pci_device_id const *)arg1);
  
#line 121 
  return tmp;
}


#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
enum irqreturn ldv_emg_wrapper_s2io_isr_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 126 
  tmp = s2io_isr(arg0,arg1);
  
#line 126 
  return tmp;
}


#line 130  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_change_mtu_9(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 131 
  tmp = s2io_change_mtu(arg0,arg1);
  
#line 131 
  return tmp;
}


#line 135  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_ethtool_gregs_20(struct net_device *arg0, struct ethtool_regs *arg1, void *arg2)
{
  
#line 136 
  s2io_ethtool_gregs(arg0,arg1,arg2);
  
#line 137 
  return;
}


#line 140  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_gset_16(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 141 
  tmp = s2io_ethtool_gset(arg0,arg1);
  
#line 141 
  return tmp;
}


#line 145  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
struct net_device_stats *ldv_emg_wrapper_s2io_get_stats_22(struct net_device *arg0)
{
  struct net_device_stats *tmp;
  
#line 146 
  tmp = s2io_get_stats(arg0);
  
#line 146 
  return tmp;
}


#line 150  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_s2io_starter(void)
{
  int tmp;
  
#line 151 
  tmp = s2io_starter();
  
#line 151 
  return tmp;
}


#line 154  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_open_2(struct net_device *arg0)
{
  int tmp;
  
#line 155 
  tmp = s2io_open(arg0);
  
#line 155 
  return tmp;
}


#line 159  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_ethtool_gdrvinfo_12(struct net_device *arg0, struct ethtool_drvinfo *arg1)
{
  
#line 160 
  s2io_ethtool_gdrvinfo(arg0,arg1);
  
#line 161 
  return;
}


#line 164  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_setpause_data_26(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  int tmp;
  
#line 165 
  tmp = s2io_ethtool_setpause_data(arg0,arg1);
  
#line 165 
  return tmp;
}


#line 169  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_get_eeprom_len_28(struct net_device *arg0)
{
  int tmp;
  
#line 170 
  tmp = s2io_get_eeprom_len(arg0);
  
#line 170 
  return tmp;
}


#line 174  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_ethtool_get_strings_23(struct net_device *arg0, unsigned int arg1, unsigned char *arg2)
{
  
#line 175 
  s2io_ethtool_get_strings(arg0,arg1,arg2);
  
#line 176 
  return;
}


#line 179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_sset_4(struct net_device *arg0, struct ethtool_cmd *arg1)
{
  int tmp;
  
#line 180 
  tmp = s2io_ethtool_sset(arg0,arg1);
  
#line 180 
  return tmp;
}


#line 184  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_s2io_closer(void)
{
  
#line 185 
  s2io_closer();
  
#line 186 
  return;
}


#line 188  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_ethtool_test_18(struct net_device *arg0, struct ethtool_test *arg1, unsigned long long *arg2)
{
  
#line 189 
  s2io_ethtool_test(arg0,arg1,arg2);
  
#line 190 
  return;
}


#line 193  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_set_mac_addr_15(struct net_device *arg0, void *arg1)
{
  int tmp;
  
#line 194 
  tmp = s2io_set_mac_addr(arg0,arg1);
  
#line 194 
  return tmp;
}


#line 198  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_get_sset_count_21(struct net_device *arg0, int arg1)
{
  int tmp;
  
#line 199 
  tmp = s2io_get_sset_count(arg0,arg1);
  
#line 199 
  return tmp;
}


#line 203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_ethtool_getpause_data_2(struct net_device *arg0, struct ethtool_pauseparam *arg1)
{
  
#line 204 
  s2io_ethtool_getpause_data(arg0,arg1);
  
#line 205 
  return;
}


#line 208  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_set_features_11(struct net_device *arg0, unsigned long long arg1)
{
  int tmp;
  
#line 209 
  tmp = s2io_set_features(arg0,arg1);
  
#line 209 
  return tmp;
}


#line 213  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
void ldv_emg_wrapper_s2io_set_multicast_6(struct net_device *arg0)
{
  
#line 214 
  s2io_set_multicast(arg0);
  
#line 215 
  return;
}


#line 218  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
enum irqreturn ldv_emg_wrapper_s2io_msix_fifo_handle_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 219 
  tmp = s2io_msix_fifo_handle(arg0,arg1);
  
#line 219 
  return tmp;
}


#line 223  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_seeprom_13(struct net_device *arg0, struct ethtool_eeprom *arg1, unsigned char *arg2)
{
  int tmp;
  
#line 224 
  tmp = s2io_ethtool_seeprom(arg0,arg1,arg2);
  
#line 224 
  return tmp;
}


#line 228  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
enum irqreturn ldv_emg_wrapper_s2io_msix_ring_handle_2(int arg0, void *arg1)
{
  enum irqreturn tmp;
  
#line 229 
  tmp = s2io_msix_ring_handle(arg0,arg1);
  
#line 229 
  return tmp;
}


#line 233  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_ethtool_get_regs_len_25(struct net_device *arg0)
{
  int tmp;
  
#line 234 
  tmp = s2io_ethtool_get_regs_len(arg0);
  
#line 234 
  return tmp;
}


#line 238  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
int ldv_emg_wrapper_s2io_close_2(struct net_device *arg0)
{
  int tmp;
  
#line 239 
  tmp = s2io_close(arg0);
  
#line 239 
  return tmp;
}


#line 243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
enum netdev_tx ldv_emg_wrapper_s2io_xmit_14(struct sk_buff *arg0, struct net_device *arg1)
{
  enum netdev_tx tmp;
  
#line 244 
  tmp = s2io_xmit(arg0,arg1);
  
#line 244 
  return tmp;
}


#line 652  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void *kmalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 655 
  tmp = ldv_kmalloc(size,flags);
  
#line 655 
  return tmp;
}


#line 666  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void *kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *tmp;
  
#line 669 
  tmp = ldv_kcalloc(n,size,flags);
  
#line 669 
  return tmp;
}


#line 673  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void *kzalloc(size_t size, gfp_t flags)
{
  void *tmp;
  
#line 676 
  tmp = ldv_kzalloc(size,flags);
  
#line 676 
  return tmp;
}


#line 929  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static bool ldv_schedule_work_73(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 933 
  tmp = ldv_emg_schedule_work(work);
  
#line 933 
  __retres = tmp != 0;
  
#line 933 
  return __retres;
}


#line 937  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1)
{
  
#line 941 
  ldv_spin_model_lock((char *)"tx_lock_of_fifo_info");
  
#line 943 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 944 
  return;
}


#line 947  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_75(spinlock_t *lock, unsigned long flags)
{
  
#line 951 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 953 
  spin_unlock_irqrestore(lock,flags);
  
#line 954 
  return;
}


#line 957  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv___ldv_spin_trylock_76(spinlock_t *ldv_func_arg1)
{
  int __retres;
  
#line 961 
  ldv_func_ret_type ldv_func_res = __ldv_spin_trylock(ldv_func_arg1);
  
#line 963 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 965 
  if (is_spin_held_by_another_thread != 0) {
    
#line 968 
    __retres = 0;
    
#line 968 
    goto return_label;
  }
  else {
    
#line 971 
    ldv_spin_model_lock((char *)"tx_lock_of_fifo_info");
    
#line 973 
    __retres = 1;
    
#line 973 
    goto return_label;
  }
  
#line 976 
  __retres = ldv_func_res;
  return_label: 
#line 976 
                return __retres;
}


#line 980  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_77(spinlock_t *lock, unsigned long flags)
{
  
#line 984 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 986 
  spin_unlock_irqrestore(lock,flags);
  
#line 987 
  return;
}


#line 990  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_78(spinlock_t *lock, unsigned long flags)
{
  
#line 994 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 996 
  spin_unlock_irqrestore(lock,flags);
  
#line 997 
  return;
}


#line 1000  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_request_irq_79(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1004 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1004 
  return tmp;
}


#line 1008  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_free_irq_80(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1012 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1013 
  return;
}


#line 1016  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_free_irq_81(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1020 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1021 
  return;
}


#line 1024  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_free_irq_82(unsigned int ldv_func_arg1, void *ldv_func_arg2)
{
  
#line 1028 
  ldv_emg_free_irq(ldv_func_arg1,ldv_func_arg2);
  
#line 1029 
  return;
}


#line 1032  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv___ldv_spin_lock_83(spinlock_t *ldv_func_arg1)
{
  
#line 1036 
  ldv_spin_model_lock((char *)"tx_lock_of_fifo_info");
  
#line 1038 
  __ldv_spin_lock(ldv_func_arg1);
  
#line 1039 
  return;
}


#line 1042  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv___ldv_spin_trylock_84(spinlock_t *ldv_func_arg1)
{
  int __retres;
  
#line 1046 
  ldv_func_ret_type ldv_func_res = __ldv_spin_trylock(ldv_func_arg1);
  
#line 1048 
  int is_spin_held_by_another_thread = ldv_undef_int();
  
#line 1050 
  if (is_spin_held_by_another_thread != 0) {
    
#line 1053 
    __retres = 0;
    
#line 1053 
    goto return_label;
  }
  else {
    
#line 1056 
    ldv_spin_model_lock((char *)"tx_lock_of_fifo_info");
    
#line 1058 
    __retres = 1;
    
#line 1058 
    goto return_label;
  }
  
#line 1061 
  __retres = ldv_func_res;
  return_label: 
#line 1061 
                return __retres;
}


#line 1065  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_85(spinlock_t *lock, unsigned long flags)
{
  
#line 1069 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 1071 
  spin_unlock_irqrestore(lock,flags);
  
#line 1072 
  return;
}


#line 1075  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_86(spinlock_t *lock, unsigned long flags)
{
  
#line 1079 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 1081 
  spin_unlock_irqrestore(lock,flags);
  
#line 1082 
  return;
}


#line 1085  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_87(spinlock_t *lock, unsigned long flags)
{
  
#line 1089 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 1091 
  spin_unlock_irqrestore(lock,flags);
  
#line 1092 
  return;
}


#line 1095  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_88(spinlock_t *lock, unsigned long flags)
{
  
#line 1099 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 1101 
  spin_unlock_irqrestore(lock,flags);
  
#line 1102 
  return;
}


#line 1105  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_spin_unlock_irqrestore_89(spinlock_t *lock, unsigned long flags)
{
  
#line 1109 
  ldv_spin_model_unlock((char *)"tx_lock_of_fifo_info");
  
#line 1111 
  spin_unlock_irqrestore(lock,flags);
  
#line 1112 
  return;
}


#line 1115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_mod_timer_90(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1119 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1119 
  return tmp;
}


#line 1123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static bool ldv_schedule_work_91(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1127 
  tmp = ldv_emg_schedule_work(work);
  
#line 1127 
  __retres = tmp != 0;
  
#line 1127 
  return __retres;
}


#line 1131  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static bool ldv_schedule_work_92(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1135 
  tmp = ldv_emg_schedule_work(work);
  
#line 1135 
  __retres = tmp != 0;
  
#line 1135 
  return __retres;
}


#line 1139  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_request_irq_93(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1143 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1143 
  return tmp;
}


#line 1147  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_request_irq_94(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1151 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1151 
  return tmp;
}


#line 1155  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_request_irq_95(unsigned int irq, irqreturn_t (*handler)(int , void *), unsigned long flags, char const *name, void *dev)
{
  int tmp;
  
#line 1159 
  tmp = ldv_emg_request_irq(irq,handler,flags,(char *)name,dev);
  
#line 1159 
  return tmp;
}


#line 1163  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_del_timer_sync_96(struct timer_list *ldv_func_arg1)
{
  int tmp;
  
#line 1167 
  tmp = ldv_emg_del_timer_sync(ldv_func_arg1);
  
#line 1167 
  return tmp;
}


#line 1171  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_mod_timer_97(struct timer_list *ldv_func_arg1, unsigned long ldv_func_arg2)
{
  int tmp;
  
#line 1175 
  tmp = ldv_emg_mod_timer(ldv_func_arg1,ldv_func_arg2);
  
#line 1175 
  return tmp;
}


#line 1179  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static bool ldv_schedule_work_98(struct work_struct *work)
{
  bool __retres;
  bool tmp;
  
#line 1183 
  tmp = ldv_emg_schedule_work(work);
  
#line 1183 
  __retres = tmp != 0;
  
#line 1183 
  return __retres;
}


#line 1187  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_99(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1191 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1191 
  return tmp;
}


#line 1195  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static struct net_device *ldv_alloc_etherdev_mqs_100(int ldv_func_arg1, unsigned int ldv_func_arg2, unsigned int ldv_func_arg3)
{
  struct net_device *tmp;
  
#line 1199 
  tmp = ldv_emg_alloc_etherdev_mqs(ldv_func_arg1,ldv_func_arg2,ldv_func_arg3);
  
#line 1199 
  return tmp;
}


#line 1203  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv_register_netdev_101(struct net_device *ldv_func_arg1)
{
  int tmp;
  
#line 1207 
  tmp = ldv_emg_register_netdev(ldv_func_arg1);
  
#line 1207 
  return tmp;
}


#line 1211  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_unregister_netdev_102(struct net_device *ldv_func_arg1)
{
  
#line 1215 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1216 
  return;
}


#line 1219  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_free_netdev_103(struct net_device *ldv_func_arg1)
{
  
#line 1223 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1224 
  return;
}


#line 1227  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_unregister_netdev_104(struct net_device *ldv_func_arg1)
{
  
#line 1231 
  ldv_emg_unregister_netdev(ldv_func_arg1);
  
#line 1232 
  return;
}


#line 1235  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_free_netdev_105(struct net_device *ldv_func_arg1)
{
  
#line 1239 
  ldv_emg_free_netdev(ldv_func_arg1);
  
#line 1240 
  return;
}


#line 1243  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static int ldv___pci_register_driver_106(struct pci_driver *ldv_func_arg1, struct module *ldv_func_arg2, char const *ldv_func_arg3)
{
  int tmp;
  
#line 1247 
  tmp = ldv_emg___pci_register_driver(ldv_func_arg1,ldv_func_arg2,(char *)ldv_func_arg3);
  
#line 1247 
  return tmp;
}


#line 1251  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/weaver/.tmp_s2io.c.aux"
static void ldv_pci_unregister_driver_107(struct pci_driver *ldv_func_arg1)
{
  
#line 1255 
  ldv_emg_pci_unregister_driver(ldv_func_arg1);
  
#line 1256 
  return;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_add(int i, atomic_t *v)
{
  
#line 23 
  v->counter += i;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_sub(int i, atomic_t *v)
{
  
#line 29 
  v->counter -= i;
  
#line 30 
  return;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_sub_and_test(int i, atomic_t *v)
{
  int __retres;
  
#line 35 
  v->counter -= i;
  
#line 36 
  if (v->counter != 0) {
    
#line 37 
    __retres = 0;
    
#line 37 
    goto return_label;
  }
  else ;
  
#line 39 
  __retres = 1;
  return_label: 
#line 39 
                return __retres;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_inc(atomic_t *v)
{
  
#line 45 
  v->counter += 1;
  
#line 46 
  return;
}


#line 49  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
void ldv_atomic_dec(atomic_t *v)
{
  
#line 51 
  v->counter -= 1;
  
#line 52 
  return;
}


#line 55  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_dec_and_test(atomic_t *v)
{
  int __retres;
  
#line 57 
  v->counter -= 1;
  
#line 58 
  if (v->counter != 0) {
    
#line 59 
    __retres = 0;
    
#line 59 
    goto return_label;
  }
  else ;
  
#line 61 
  __retres = 1;
  return_label: 
#line 61 
                return __retres;
}


#line 65  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_and_test(atomic_t *v)
{
  int __retres;
  
#line 67 
  v->counter += 1;
  
#line 68 
  if (v->counter != 0) {
    
#line 69 
    __retres = 0;
    
#line 69 
    goto return_label;
  }
  else ;
  
#line 71 
  __retres = 1;
  return_label: 
#line 71 
                return __retres;
}


#line 75  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_return(int i, atomic_t *v)
{
  int __retres;
  
#line 77 
  v->counter += i;
  
#line 78 
  __retres = v->counter;
  
#line 78 
  return __retres;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_add_negative(int i, atomic_t *v)
{
  int __retres;
  
#line 84 
  v->counter += i;
  
#line 85 
  __retres = v->counter < 0;
  
#line 85 
  return __retres;
}


#line 89  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/arch/atomic.c"
int ldv_atomic_inc_short(short *v)
{
  int __retres;
  
#line 91 
  *v = (short)((unsigned int)*v + 1U);
  
#line 92 
  __retres = (int)*v;
  
#line 92 
  return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device const *dev);


#line 24 
int ldv_dev_set_drvdata(struct device *dev, void *data);


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
struct ldv_list_element global_list = {.data = (void *)0, .next = (struct ldv_list_element *)0};

#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static ldv_list_ptr ldv_list_create(void *data)
{
  
#line 35 
  ldv_list_ptr list = (struct ldv_list_element *)0;
  
#line 37 
  list = (ldv_list_ptr)ldv_xmalloc(16UL);
  
#line 39 
  list->data = data;
  
#line 40 
  list->next = (struct ldv_list_element *)0;
  
#line 42 
  return list;
}


#line 45  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memlist.h"
__inline static void ldv_save_pointer(void *data)
{
  ldv_list_ptr element;
  ldv_list_ptr cached;
  
#line 50 
  if (global_list.data == (void *)0) {
    
#line 51 
    element = & global_list;
    
#line 52 
    element->data = data;
  }
  else {
    
#line 54 
    element = ldv_list_create(data);
    
#line 55 
    cached = global_list.next;
    
#line 56 
    global_list.next = element;
    
#line 57 
    element->next = cached;
  }
  
#line 60 
  return;
}


#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device const *dev)
{
  void *__retres;
  
#line 30 
  if (dev != (struct device const *)0 && dev->p != (struct device_private *)0) {
    
#line 31 
    __retres = (dev->p)->driver_data;
    
#line 31 
    goto return_label;
  }
  else ;
  
#line 33 
  __retres = (void *)0;
  return_label: 
#line 33 
                return __retres;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev, void *data)
{
  int __retres;
  
#line 44 
  dev->p = (struct device_private *)ldv_xzalloc(8UL);
  
#line 45 
  ldv_save_pointer((void *)dev->p);
  
#line 46 
  (dev->p)->driver_data = data;
  
#line 48 
  __retres = 0;
  
#line 48 
  return __retres;
}


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_zalloc(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host, unsigned int size)
{
  struct spi_master *__retres;
  struct spi_master *master;
  
#line 27 
  master = (struct spi_master *)ldv_zalloc((unsigned long)size + 2192UL);
  
#line 29 
  if (master == (struct spi_master *)0) {
    
#line 30 
    __retres = (struct spi_master *)0;
    
#line 30 
    goto return_label;
  }
  else ;
  
#line 32 
  ldv_dev_set_drvdata(& master->dev,(void *)(master + 1U));
  
#line 34 
  __retres = master;
  return_label: 
#line 34 
                return __retres;
}


#line 27  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/err.h"
long ldv_is_err(void const *ptr);


#line 28 
long ldv_is_err_or_null(void const *ptr);


#line 29 
void *ldv_err_ptr(long error);


#line 30 
long ldv_ptr_err(void const *ptr);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err(void const *ptr)
{
  long __retres;
  
#line 23 
  __retres = (long)((unsigned long)ptr > 4294967295UL);
  
#line 23 
  return __retres;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
void *ldv_err_ptr(long error)
{
  void *__retres;
  
#line 28 
  __VERIFIER_assume(error < 0L);
  
#line 29 
  __retres = (void *)(4294967295L - error);
  
#line 29 
  return __retres;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_ptr_err(void const *ptr)
{
  long __retres;
  
#line 34 
  __VERIFIER_assume((unsigned long)ptr > 4294967295UL);
  
#line 35 
  __retres = (long)(4294967295UL - (unsigned long)ptr);
  
#line 35 
  return __retres;
}


#line 38  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/err.c"
long ldv_is_err_or_null(void const *ptr)
{
  long __retres;
  int tmp_0;
  
#line 40 
  if (ptr == (void const *)0) 
#line 40 
                              tmp_0 = 1;
  else {
    long tmp;
    
#line 40 
    tmp = ldv_is_err(ptr);
    
#line 40 
    if (tmp != 0L) 
#line 40 
                   tmp_0 = 1; else 
#line 40 
                                   tmp_0 = 0;
  }
  
#line 40 
  __retres = (long)tmp_0;
  
#line 40 
  return __retres;
}


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/panic.h"
void ldv_panic(void);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/kernel/panic.c"
void ldv_panic(void)
{
  
#line 23 
  __VERIFIER_assume(0);
  
#line 24 
  return;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void);


#line 42 
void ldv_switch_to_process_context(void);


#line 50 
bool ldv_in_interrupt_context(void);


#line 112 
int ldv_post_init(int init_ret_val);


#line 132 
int ldv_post_probe(int probe_ret_val);


#line 133 
void ldv_check_return_value_probe(int);


#line 141 
int ldv_filter_err_code(int ret_val);


#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static bool __ldv_in_interrupt_context = (_Bool)0;

#line 28  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void)
{
  
#line 30 
  __ldv_in_interrupt_context = (_Bool)1;
  
#line 31 
  return;
}


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
void ldv_switch_to_process_context(void)
{
  
#line 36 
  __ldv_in_interrupt_context = (_Bool)0;
  
#line 37 
  return;
}


#line 39  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
bool ldv_in_interrupt_context(void)
{
  
#line 41 
  return __ldv_in_interrupt_context;
}


#line 44  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
static int ldv_filter_positive_int(int val)
{
  
#line 46 
  __VERIFIER_assume(val <= 0);
  
#line 47 
  return val;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_init(int init_ret_val)
{
  int tmp;
  
#line 56 
  tmp = ldv_filter_positive_int(init_ret_val);
  
#line 56 
  return tmp;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val)
{
  int tmp;
  
#line 62 
  ldv_check_return_value_probe(probe_ret_val);
  
#line 63 
  tmp = ldv_filter_positive_int(probe_ret_val);
  
#line 63 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val)
{
  int tmp;
  
#line 69 
  tmp = ldv_filter_positive_int(ret_val);
  
#line 69 
  return tmp;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/slab.h"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags);


#line 28 
void ldv_check_alloc_flags(gfp_t);


#line 29 
void ldv_after_alloc(void *);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 21  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 25 
  ldv_check_alloc_flags(flags);
  
#line 26 
  res = ldv_malloc(size);
  
#line 27 
  ldv_after_alloc(res);
  
#line 29 
  return res;
}


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kcalloc(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 36 
  ldv_check_alloc_flags(flags);
  
#line 37 
  res = ldv_calloc(n,size);
  
#line 38 
  ldv_after_alloc(res);
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kzalloc(size_t size, gfp_t flags)
{
  void *res;
  
#line 47 
  ldv_check_alloc_flags(flags);
  
#line 48 
  res = ldv_zalloc(size);
  
#line 49 
  ldv_after_alloc(res);
  
#line 51 
  return res;
}


#line 54  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n, size_t size, gfp_t flags)
{
  void *res;
  
#line 58 
  ldv_check_alloc_flags(flags);
  
#line 59 
  res = ldv_malloc(n * size);
  
#line 60 
  ldv_after_alloc(res);
  
#line 62 
  return res;
}


#line 26  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void ldv_free(void *s);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 61 
void *ldv_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 34  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *res;
  
#line 37 
  res = ldv_reference_malloc(size);
  
#line 38 
  if (res != (void *)0) {
    long tmp;
    
#line 39 
    tmp = ldv_is_err((void const *)res);
    
#line 39 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 40 
  return res;
}


#line 43  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *res;
  
#line 46 
  res = ldv_reference_calloc(nmemb,size);
  
#line 47 
  if (res != (void *)0) {
    long tmp;
    
#line 48 
    tmp = ldv_is_err((void const *)res);
    
#line 48 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 49 
  return res;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *res;
  
#line 55 
  res = ldv_reference_zalloc(size);
  
#line 56 
  if (res != (void *)0) {
    long tmp;
    
#line 57 
    tmp = ldv_is_err((void const *)res);
    
#line 57 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 58 
  return res;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 63 
  ldv_reference_free(s);
  
#line 64 
  return;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 69 
  res = ldv_reference_xmalloc(size);
  
#line 70 
  tmp = ldv_is_err((void const *)res);
  
#line 70 
  __VERIFIER_assume(tmp == 0L);
  
#line 71 
  return res;
}


#line 74  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *res;
  long tmp;
  
#line 77 
  res = ldv_reference_xzalloc(size);
  
#line 78 
  tmp = ldv_is_err((void const *)res);
  
#line 78 
  __VERIFIER_assume(tmp == 0L);
  
#line 79 
  return res;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *res;
  
#line 85 
  res = ldv_reference_malloc_unknown_size();
  
#line 86 
  if (res != (void *)0) {
    long tmp;
    
#line 87 
    tmp = ldv_is_err((void const *)res);
    
#line 87 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 88 
  return res;
}


#line 91  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *res;
  
#line 94 
  res = ldv_reference_calloc_unknown_size();
  
#line 95 
  if (res != (void *)0) {
    long tmp;
    
#line 96 
    tmp = ldv_is_err((void const *)res);
    
#line 96 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *res;
  
#line 103 
  res = ldv_reference_zalloc_unknown_size();
  
#line 104 
  if (res != (void *)0) {
    long tmp;
    
#line 105 
    tmp = ldv_is_err((void const *)res);
    
#line 105 
    __VERIFIER_assume(tmp == 0L);
  }
  else ;
  
#line 106 
  return res;
}


#line 109  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *res;
  long tmp;
  
#line 112 
  res = ldv_reference_xmalloc_unknown_size(size);
  
#line 113 
  tmp = ldv_is_err((void const *)res);
  
#line 113 
  __VERIFIER_assume(tmp == 0L);
  
#line 114 
  return res;
}

long __builtin_expect(long exp, long c);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 31 
int ldv_undef_int_positive(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *malloc(size_t);


#line 24 
void *calloc(size_t, size_t);


#line 25 
void free(void *);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/linux/ldv/common.h"
void ldv_initialize(void);


#line 97 
void ldv_failed_register_netdev(void);


#line 123 
void ldv_pre_probe(void);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/root/specifications/verifier/thread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 37 
int pthread_join(pthread_t, void **);


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0);


#line 87 
void *ldv_interrupt_scenario_18(void *arg0);


#line 88 
void *ldv_pci_scenario_19(void *arg0);


#line 90 
int main(void);


#line 91 
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3);


#line 92 
void ldv_dispatch_irq_deregister_3_1(int arg0);


#line 94 
void *ldv_interrupt_scenario_17(void *arg0);


#line 95 
void ldv_dispatch_register_7_3(struct pci_driver *arg0);


#line 97 
void *ldv_interrupt_scenario_16(void *arg0);


#line 98 
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0);


#line 99 
void *ldv_initialization_1(void *arg0);


#line 100 
void *ldv_timer_scenario_13(void *arg0);


#line 101 
void *ldv_random_allocationless_scenario_14(void *arg0);


#line 103 
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0);


#line 104 
void *ldv_interrupt_scenario_15(void *arg0);


#line 109 
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0);


#line 110 
void ldv_dispatch_deregister_6_1(struct net_device *arg0);


#line 115  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_17;

#line 116  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_13;

#line 117  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_19;

#line 118  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_16;

#line 119  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_14;

#line 120  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_15;

#line 121  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
pthread_t ldv_thread_18;

#line 125  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_11_4(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 128 
  tmp = ldv_undef_int();
  
#line 128 
  switch (tmp) {
    case 0: 
#line 129 
    ;
    
#line 130 
    cf_arg_14 = (struct ldv_struct_random_allocationless_scenario_14 *)ldv_xmalloc(16UL);
    
#line 131 
    cf_arg_14->arg0 = arg0;
    
#line 132 
    ret = pthread_create(& ldv_thread_14,(pthread_attr_t const *)0,& ldv_random_allocationless_scenario_14,(void *)cf_arg_14);
    
#line 133 
    __VERIFIER_assume(ret == 0);
    
#line 134 
    goto ldv_44748;
    default: 
#line 136 
    ;
    
#line 136 
    __VERIFIER_assume(0);
  }
  ldv_44748: 
#line 137 
  ;
  
#line 138 
  return;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_del_timer_sync(struct timer_list *arg0)
{
  int __retres;
  struct timer_list *ldv_9_timer_list;
  
#line 148 
  ldv_9_timer_list = arg0;
  
#line 152 
  ldv_dispatch_instance_deregister_9_1(ldv_9_timer_list);
  
#line 153 
  ;
  
#line 153 
  __retres = 0;
  
#line 153 
  return __retres;
}


#line 161  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_18(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_18_ret_val;
  int ldv_18_line;
  void *ldv_18_data;
  enum irqreturn (*ldv_18_thread)(int , void *);
  int tmp;
  
#line 167 
  enum irqreturn (*ldv_18_callback)(int , void *) = & ldv_emg_wrapper_s2io_test_intr_2;
  
#line 170 
  struct ldv_struct_interrupt_scenario_15 *data = (struct ldv_struct_interrupt_scenario_15 *)arg0;
  
#line 175 
  if (data != (struct ldv_struct_interrupt_scenario_15 *)0) {
    
#line 176 
    ldv_18_line = data->arg0;
    
#line 177 
    ldv_18_callback = data->arg1;
    
#line 178 
    ldv_18_thread = data->arg2;
    
#line 179 
    ldv_18_data = data->arg3;
    
#line 180 
    ldv_free((void *)data);
  }
  else ;
  
#line 186 
  ldv_switch_to_interrupt_context();
  
#line 188 
  ldv_18_ret_val = ldv_emg_wrapper_s2io_test_intr_2(ldv_18_line,ldv_18_data);
  
#line 190 
  ldv_switch_to_process_context();
  
#line 193 
  tmp = ldv_undef_int();
  
#line 193 
  if (tmp != 0) {
    
#line 195 
    __VERIFIER_assume(ldv_18_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 199 
    if (ldv_18_thread != (enum irqreturn (*)(int , void *))0) 
#line 201 
                                                              (*ldv_18_thread)(ldv_18_line,ldv_18_data); else ;
  }
  else 
#line 208 
       __VERIFIER_assume(ldv_18_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 217 
  __retres = (void *)0;
  
#line 217 
  goto return_label;
  
#line 219 
  __retres = (void *)0;
  return_label: 
#line 219 
                return __retres;
}


#line 224  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_register_12_3(int arg0, enum irqreturn (*arg1)(int , void *), enum irqreturn (*arg2)(int , void *), void *arg3)
{
  int ret;
  struct ldv_struct_interrupt_scenario_15 *cf_arg_16;
  struct ldv_struct_interrupt_scenario_15 *cf_arg_17;
  struct ldv_struct_interrupt_scenario_15 *cf_arg_18;
  struct ldv_struct_interrupt_scenario_15 *cf_arg_15;
  int tmp;
  
#line 230 
  tmp = ldv_undef_int();
  
#line 230 
  switch (tmp) {
    case 0: 
#line 231 
    ;
    
#line 232 
    cf_arg_16 = (struct ldv_struct_interrupt_scenario_15 *)ldv_xmalloc(32UL);
    
#line 233 
    cf_arg_16->arg0 = arg0;
    
#line 234 
    cf_arg_16->arg1 = arg1;
    
#line 235 
    cf_arg_16->arg2 = arg2;
    
#line 236 
    cf_arg_16->arg3 = arg3;
    
#line 237 
    ret = pthread_create(& ldv_thread_16,(pthread_attr_t const *)0,& ldv_interrupt_scenario_16,(void *)cf_arg_16);
    
#line 238 
    __VERIFIER_assume(ret == 0);
    
#line 239 
    goto ldv_44783;
    case 1: 
#line 241 
    ;
    
#line 242 
    cf_arg_17 = (struct ldv_struct_interrupt_scenario_15 *)ldv_xmalloc(32UL);
    
#line 243 
    cf_arg_17->arg0 = arg0;
    
#line 244 
    cf_arg_17->arg1 = arg1;
    
#line 245 
    cf_arg_17->arg2 = arg2;
    
#line 246 
    cf_arg_17->arg3 = arg3;
    
#line 247 
    ret = pthread_create(& ldv_thread_17,(pthread_attr_t const *)0,& ldv_interrupt_scenario_17,(void *)cf_arg_17);
    
#line 248 
    __VERIFIER_assume(ret == 0);
    
#line 249 
    goto ldv_44783;
    case 2: 
#line 251 
    ;
    
#line 252 
    cf_arg_18 = (struct ldv_struct_interrupt_scenario_15 *)ldv_xmalloc(32UL);
    
#line 253 
    cf_arg_18->arg0 = arg0;
    
#line 254 
    cf_arg_18->arg1 = arg1;
    
#line 255 
    cf_arg_18->arg2 = arg2;
    
#line 256 
    cf_arg_18->arg3 = arg3;
    
#line 257 
    ret = pthread_create(& ldv_thread_18,(pthread_attr_t const *)0,& ldv_interrupt_scenario_18,(void *)cf_arg_18);
    
#line 258 
    __VERIFIER_assume(ret == 0);
    
#line 259 
    goto ldv_44783;
    case 3: 
#line 261 
    ;
    
#line 262 
    cf_arg_15 = (struct ldv_struct_interrupt_scenario_15 *)ldv_xmalloc(32UL);
    
#line 263 
    cf_arg_15->arg0 = arg0;
    
#line 264 
    cf_arg_15->arg1 = arg1;
    
#line 265 
    cf_arg_15->arg2 = arg2;
    
#line 266 
    cf_arg_15->arg3 = arg3;
    
#line 267 
    ret = pthread_create(& ldv_thread_15,(pthread_attr_t const *)0,& ldv_interrupt_scenario_15,(void *)cf_arg_15);
    
#line 268 
    __VERIFIER_assume(ret == 0);
    
#line 269 
    goto ldv_44783;
    default: 
#line 271 
    ;
    
#line 271 
    __VERIFIER_assume(0);
  }
  ldv_44783: 
#line 272 
  ;
  
#line 273 
  return;
}


#line 277  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg___pci_register_driver(struct pci_driver *arg0, struct module *arg1, char *arg2)
{
  int __retres;
  int tmp_0;
  
#line 280 
  struct pci_driver *ldv_7_pci_driver = ldv_emg_alias_s2io_driver_2;
  
#line 284 
  tmp_0 = ldv_undef_int();
  
#line 284 
  if (tmp_0 != 0) {
    
#line 286 
    ldv_7_pci_driver = arg0;
    
#line 290 
    ldv_dispatch_register_7_3(ldv_7_pci_driver);
    
#line 294 
    __retres = 0;
    
#line 294 
    goto return_label;
  }
  else {
    int tmp;
    
#line 301 
    tmp = ldv_undef_int_negative();
    
#line 301 
    __retres = tmp;
    
#line 301 
    goto return_label;
  }
  return_label: 
#line 284 
                return __retres;
}


#line 311  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
int main(void)
{
  int __retres;
  
#line 314 
  ldv_initialize();
  
#line 317 
  ldv_initialization_1((void *)0);
  
#line 319 
  __retres = 0;
  
#line 319 
  return __retres;
}


#line 324  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_pci_scenario_19(void *arg0)
{
  void *__retres;
  struct pci_dev *ldv_19_resource_1;
  struct pci_device_id *ldv_19_ldv_param_1_2;
  struct pm_message ldv_19_resource_0;
  int tmp_2;
  int tmp_3;
  
#line 329 
  struct pci_driver *ldv_19_container = ldv_emg_alias_s2io_driver_2;
  
#line 330 
  int ldv_19_ret = ldv_undef_int();
  
#line 333 
  struct ldv_struct_pci_scenario_19 *data = (struct ldv_struct_pci_scenario_19 *)arg0;
  
#line 337 
  ldv_19_ret = ldv_undef_int();
  
#line 340 
  if (data != (struct ldv_struct_pci_scenario_19 *)0) {
    
#line 341 
    ldv_19_container = data->arg0;
    
#line 342 
    ldv_free((void *)data);
  }
  else ;
  
#line 353 
  goto ldv_main_19;
  
#line 355 
  __retres = (void *)0;
  
#line 355 
  goto return_label;
  ldv_main_19: 
#line 358 
  ;
  
#line 361 
  tmp_2 = ldv_undef_int();
  
#line 361 
  if (tmp_2 != 0) {
    int tmp_1;
    
#line 363 
    ldv_19_ldv_param_1_2 = (struct pci_device_id *)ldv_xmalloc_unknown_size(0UL);
    
#line 368 
    ldv_pre_probe();
    
#line 370 
    ldv_19_ret = ldv_emg_wrapper_s2io_init_nic_2(ldv_19_resource_1,ldv_19_ldv_param_1_2);
    
#line 372 
    ldv_19_ret = ldv_post_probe(ldv_19_ret);
    
#line 376 
    ldv_free((void *)ldv_19_ldv_param_1_2);
    
#line 379 
    tmp_1 = ldv_undef_int();
    
#line 379 
    if (tmp_1 != 0) {
      
#line 381 
      __VERIFIER_assume(ldv_19_ret == 0);
      
#line 388 
      goto ldv_call_19;
    }
    else {
      
#line 392 
      __VERIFIER_assume(ldv_19_ret != 0);
      
#line 399 
      goto ldv_main_19;
    }
  }
  else {
    
#line 411 
    __retres = (void *)0;
    
#line 411 
    goto return_label;
  }
  
#line 414 
  __retres = (void *)0;
  
#line 414 
  goto return_label;
  ldv_call_19: 
#line 417 
  ;
  
#line 420 
  tmp_3 = ldv_undef_int();
  
#line 420 
  switch (tmp_3) {
    case 1: 
#line 421 
    ;
    
#line 430 
    goto ldv_call_19;
    case 2: 
#line 433 
    ;
    
#line 435 
    if (ldv_19_container->suspend != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 437 
      ldv_19_ret = (*(ldv_19_container->suspend))(ldv_19_resource_1,ldv_19_resource_0);
      
#line 439 
      ldv_19_ret = ldv_filter_err_code(ldv_19_ret);
    }
    else 
#line 441 
         ldv_19_ret = ldv_undef_int();
    
#line 446 
    if (ldv_19_container->suspend_late != (int (*)(struct pci_dev *, pm_message_t ))0) {
      
#line 448 
      ldv_19_ret = (*(ldv_19_container->suspend_late))(ldv_19_resource_1,ldv_19_resource_0);
      
#line 450 
      ldv_19_ret = ldv_filter_err_code(ldv_19_ret);
    }
    else 
#line 452 
         ldv_19_ret = ldv_undef_int();
    
#line 457 
    if (ldv_19_container->resume_early != (int (*)(struct pci_dev *))0) 
      
#line 459 
      (*(ldv_19_container->resume_early))(ldv_19_resource_1); else ;
    
#line 464 
    if (ldv_19_container->resume != (int (*)(struct pci_dev *))0) 
#line 466 
                                                                  (*(ldv_19_container->resume))(ldv_19_resource_1); else ;
    
#line 474 
    goto ldv_call_19;
    case 3: 
#line 477 
    ;
    
#line 479 
    if (ldv_19_container->shutdown != (void (*)(struct pci_dev *))0) 
      
#line 481 
      (*(ldv_19_container->shutdown))(ldv_19_resource_1); else ;
    
#line 487 
    ldv_emg_wrapper_s2io_rem_nic_3(ldv_19_resource_1);
    
#line 494 
    goto ldv_main_19;
    default: 
#line 497 
    ;
    
#line 497 
    __VERIFIER_assume(0);
  }
  
#line 500 
  __retres = (void *)0;
  return_label: 
#line 500 
                return __retres;
}


#line 505  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_irq_deregister_3_1(int arg0)
{
  int ret;
  struct ldv_struct_free_irq_3 *cf_arg_16;
  struct ldv_struct_free_irq_3 *cf_arg_17;
  struct ldv_struct_free_irq_3 *cf_arg_18;
  struct ldv_struct_free_irq_3 *cf_arg_15;
  int tmp;
  
#line 511 
  tmp = ldv_undef_int();
  
#line 511 
  switch (tmp) {
    case 0: 
#line 512 
    ;
    
#line 513 
    ret = pthread_join(ldv_thread_16,(void **)0);
    
#line 514 
    __VERIFIER_assume(ret == 0);
    
#line 515 
    goto ldv_44821;
    case 1: 
#line 517 
    ;
    
#line 518 
    ret = pthread_join(ldv_thread_17,(void **)0);
    
#line 519 
    __VERIFIER_assume(ret == 0);
    
#line 520 
    goto ldv_44821;
    case 2: 
#line 522 
    ;
    
#line 523 
    ret = pthread_join(ldv_thread_18,(void **)0);
    
#line 524 
    __VERIFIER_assume(ret == 0);
    
#line 525 
    goto ldv_44821;
    case 3: 
#line 527 
    ;
    
#line 528 
    ret = pthread_join(ldv_thread_15,(void **)0);
    
#line 529 
    __VERIFIER_assume(ret == 0);
    
#line 530 
    goto ldv_44821;
    default: 
#line 532 
    ;
    
#line 532 
    __VERIFIER_assume(0);
  }
  ldv_44821: 
#line 533 
  ;
  
#line 534 
  return;
}


#line 538  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
struct net_device *ldv_emg_alloc_etherdev_mqs(int arg0, unsigned int arg1, unsigned int arg2)
{
  struct net_device *__retres;
  struct net_device *ldv_5_netdev;
  int tmp_0;
  
#line 545 
  tmp_0 = ldv_undef_int();
  
#line 545 
  if (tmp_0 != 0) {
    
#line 547 
    ldv_5_netdev = (struct net_device *)ldv_xmalloc_unknown_size(0UL);
    
#line 551 
    __retres = ldv_5_netdev;
    
#line 551 
    goto return_label;
  }
  else {
    
#line 558 
    __retres = (struct net_device *)0;
    
#line 558 
    goto return_label;
  }
  return_label: 
#line 545 
                return __retres;
}


#line 568  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_17(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_17_ret_val;
  int ldv_17_line;
  void *ldv_17_data;
  enum irqreturn (*ldv_17_thread)(int , void *);
  int tmp;
  
#line 574 
  enum irqreturn (*ldv_17_callback)(int , void *) = & ldv_emg_wrapper_s2io_msix_ring_handle_2;
  
#line 577 
  struct ldv_struct_interrupt_scenario_15 *data = (struct ldv_struct_interrupt_scenario_15 *)arg0;
  
#line 582 
  if (data != (struct ldv_struct_interrupt_scenario_15 *)0) {
    
#line 583 
    ldv_17_line = data->arg0;
    
#line 584 
    ldv_17_callback = data->arg1;
    
#line 585 
    ldv_17_thread = data->arg2;
    
#line 586 
    ldv_17_data = data->arg3;
    
#line 587 
    ldv_free((void *)data);
  }
  else ;
  
#line 593 
  ldv_switch_to_interrupt_context();
  
#line 595 
  ldv_17_ret_val = ldv_emg_wrapper_s2io_msix_ring_handle_2(ldv_17_line,ldv_17_data);
  
#line 597 
  ldv_switch_to_process_context();
  
#line 600 
  tmp = ldv_undef_int();
  
#line 600 
  if (tmp != 0) {
    
#line 602 
    __VERIFIER_assume(ldv_17_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 606 
    if (ldv_17_thread != (enum irqreturn (*)(int , void *))0) 
#line 608 
                                                              (*ldv_17_thread)(ldv_17_line,ldv_17_data); else ;
  }
  else 
#line 615 
       __VERIFIER_assume(ldv_17_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 624 
  __retres = (void *)0;
  
#line 624 
  goto return_label;
  
#line 626 
  __retres = (void *)0;
  return_label: 
#line 626 
                return __retres;
}


#line 631  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_register_7_3(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_19 *cf_arg_19;
  int tmp;
  
#line 634 
  tmp = ldv_undef_int();
  
#line 634 
  switch (tmp) {
    case 0: 
#line 635 
    ;
    
#line 636 
    cf_arg_19 = (struct ldv_struct_pci_scenario_19 *)ldv_xmalloc(16UL);
    
#line 637 
    cf_arg_19->arg0 = arg0;
    
#line 638 
    ret = pthread_create(& ldv_thread_19,(pthread_attr_t const *)0,& ldv_pci_scenario_19,(void *)cf_arg_19);
    
#line 639 
    __VERIFIER_assume(ret == 0);
    
#line 640 
    goto ldv_44851;
    default: 
#line 642 
    ;
    
#line 642 
    __VERIFIER_assume(0);
  }
  ldv_44851: 
#line 643 
  ;
  
#line 644 
  return;
}


#line 648  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_request_irq(unsigned int arg0, enum irqreturn (*arg1)(int , void *), unsigned long arg2, char *arg3, void *arg4)
{
  int __retres;
  int ldv_12_line;
  void *ldv_12_data;
  enum irqreturn (*ldv_12_thread)(int , void *);
  int tmp_0;
  
#line 653 
  enum irqreturn (*ldv_12_callback)(int , void *) = & ldv_emg_wrapper_s2io_msix_ring_handle_2;
  
#line 658 
  tmp_0 = ldv_undef_int();
  
#line 658 
  if (tmp_0 != 0) {
    
#line 660 
    ldv_12_line = (int)arg0;
    
#line 661 
    ldv_12_callback = arg1;
    
#line 662 
    ldv_12_thread = (enum irqreturn (*)(int , void *))0;
    
#line 663 
    ldv_12_data = arg4;
    
#line 667 
    ldv_dispatch_irq_register_12_3(ldv_12_line,ldv_12_callback,ldv_12_thread,ldv_12_data);
    
#line 671 
    __retres = 0;
    
#line 671 
    goto return_label;
  }
  else {
    int tmp;
    
#line 678 
    tmp = ldv_undef_int_negative();
    
#line 678 
    __retres = tmp;
    
#line 678 
    goto return_label;
  }
  return_label: 
#line 658 
                return __retres;
}


#line 688  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_16(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_16_ret_val;
  int ldv_16_line;
  void *ldv_16_data;
  enum irqreturn (*ldv_16_thread)(int , void *);
  int tmp;
  
#line 694 
  enum irqreturn (*ldv_16_callback)(int , void *) = & ldv_emg_wrapper_s2io_isr_2;
  
#line 697 
  struct ldv_struct_interrupt_scenario_15 *data = (struct ldv_struct_interrupt_scenario_15 *)arg0;
  
#line 702 
  if (data != (struct ldv_struct_interrupt_scenario_15 *)0) {
    
#line 703 
    ldv_16_line = data->arg0;
    
#line 704 
    ldv_16_callback = data->arg1;
    
#line 705 
    ldv_16_thread = data->arg2;
    
#line 706 
    ldv_16_data = data->arg3;
    
#line 707 
    ldv_free((void *)data);
  }
  else ;
  
#line 713 
  ldv_switch_to_interrupt_context();
  
#line 715 
  ldv_16_ret_val = ldv_emg_wrapper_s2io_isr_2(ldv_16_line,ldv_16_data);
  
#line 717 
  ldv_switch_to_process_context();
  
#line 720 
  tmp = ldv_undef_int();
  
#line 720 
  if (tmp != 0) {
    
#line 722 
    __VERIFIER_assume(ldv_16_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 726 
    if (ldv_16_thread != (enum irqreturn (*)(int , void *))0) 
#line 728 
                                                              (*ldv_16_thread)(ldv_16_line,ldv_16_data); else ;
  }
  else 
#line 735 
       __VERIFIER_assume(ldv_16_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 744 
  __retres = (void *)0;
  
#line 744 
  goto return_label;
  
#line 746 
  __retres = (void *)0;
  return_label: 
#line 746 
                return __retres;
}


#line 751  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_deregister_9_1(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_13 *cf_arg_13;
  int tmp;
  
#line 754 
  tmp = ldv_undef_int();
  
#line 754 
  switch (tmp) {
    case 0: 
#line 755 
    ;
    
#line 756 
    ret = pthread_join(ldv_thread_13,(void **)0);
    
#line 757 
    __VERIFIER_assume(ret == 0);
    
#line 758 
    goto ldv_44889;
    default: 
#line 760 
    ;
    
#line 760 
    __VERIFIER_assume(0);
  }
  ldv_44889: 
#line 761 
  ;
  
#line 762 
  return;
}


#line 766  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_initialization_1(void *arg0)
{
  void *__retres;
  int ldv_1_ret;
  int tmp;
  
#line 773 
  ldv_1_ret = ldv_emg_s2io_starter();
  
#line 774 
  ldv_1_ret = ldv_post_init(ldv_1_ret);
  
#line 777 
  tmp = ldv_undef_int();
  
#line 777 
  if (tmp != 0) {
    
#line 779 
    __VERIFIER_assume(ldv_1_ret != 0);
    
#line 783 
    __retres = (void *)0;
    
#line 783 
    goto return_label;
  }
  else {
    
#line 787 
    __VERIFIER_assume(ldv_1_ret == 0);
    
#line 792 
    ldv_emg_s2io_closer();
    
#line 796 
    __retres = (void *)0;
    
#line 796 
    goto return_label;
  }
  
#line 799 
  __retres = (void *)0;
  return_label: 
#line 799 
                return __retres;
}


#line 804  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_timer_scenario_13(void *arg0)
{
  void *__retres;
  struct timer_list *ldv_13_container;
  
#line 809 
  struct ldv_struct_timer_scenario_13 *data = (struct ldv_struct_timer_scenario_13 *)arg0;
  
#line 814 
  if (data != (struct ldv_struct_timer_scenario_13 *)0) {
    
#line 815 
    ldv_13_container = data->arg0;
    
#line 816 
    ldv_free((void *)data);
  }
  else ;
  
#line 821 
  if (ldv_13_container->function != (void (*)(unsigned long ))0) {
    
#line 823 
    ldv_switch_to_interrupt_context();
    
#line 825 
    (*(ldv_13_container->function))(ldv_13_container->data);
    
#line 827 
    ldv_switch_to_process_context();
  }
  else ;
  
#line 836 
  __retres = (void *)0;
  
#line 836 
  goto return_label;
  
#line 838 
  __retres = (void *)0;
  return_label: 
#line 838 
                return __retres;
}


#line 843  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_random_allocationless_scenario_14(void *arg0)
{
  void *__retres;
  struct ethtool_cmd *ldv_14_ldv_param_1_3;
  int ldv_14_ldv_param_2_21;
  struct ethtool_eeprom *ldv_14_ldv_param_1_15;
  void *ldv_14_ldv_param_2_23;
  void *ldv_14_ldv_param_1_14;
  struct ethtool_pauseparam *ldv_14_ldv_param_1_2;
  struct ethtool_cmd *ldv_14_ldv_param_1_4;
  enum ethtool_phys_id_state *ldv_14_ldv_param_1_5;
  struct ethtool_eeprom *ldv_14_ldv_param_1_11;
  unsigned char *ldv_14_ldv_param_2_12;
  unsigned long long *ldv_14_ldv_param_2_8;
  struct ethtool_ringparam *ldv_14_ldv_param_1_26;
  struct net_device *ldv_14_container;
  struct ethtool_drvinfo *ldv_14_ldv_param_1_10;
  struct sk_buff *ldv_14_ldv_param_0_13;
  struct ethtool_test *ldv_14_ldv_param_1_18;
  struct ifreq *ldv_14_ldv_param_1_20;
  unsigned long long *ldv_14_ldv_param_2_19;
  struct ethtool_stats *ldv_14_ldv_param_1_7;
  int ldv_14_ldv_param_1_6;
  unsigned long long ldv_14_ldv_param_1_9;
  int ldv_14_ldv_param_1_17;
  unsigned int ldv_14_ldv_param_1_24;
  unsigned char *ldv_14_ldv_param_2_25;
  struct ethtool_regs *ldv_14_ldv_param_1_22;
  struct ethtool_pauseparam *ldv_14_ldv_param_1_27;
  unsigned char *ldv_14_ldv_param_2_16;
  int tmp_19;
  
#line 874 
  struct ldv_struct_random_allocationless_scenario_14 *data = (struct ldv_struct_random_allocationless_scenario_14 *)arg0;
  
#line 879 
  if (data != (struct ldv_struct_random_allocationless_scenario_14 *)0) {
    
#line 880 
    ldv_14_container = data->arg0;
    
#line 881 
    ldv_free((void *)data);
  }
  else ;
  
#line 889 
  goto ldv_call_14;
  
#line 891 
  __retres = (void *)0;
  
#line 891 
  goto return_label;
  ldv_call_14: 
#line 894 
  ;
  
#line 897 
  tmp_19 = ldv_undef_int();
  
#line 897 
  if (tmp_19 != 0) {
    int tmp_0;
    
#line 899 
    ldv_14_ldv_param_1_2 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
    
#line 902 
    tmp_0 = ldv_undef_int();
    
#line 902 
    switch (tmp_0) {
      case 1: 
#line 903 
      ;
      
#line 906 
      ldv_emg_wrapper_s2io_ethtool_getpause_data_2(ldv_14_container,ldv_14_ldv_param_1_2);
      
#line 909 
      goto ldv_44933;
      case 2: 
#line 911 
      ;
      
#line 914 
      ldv_emg_wrapper_s2io_set_multicast_6(ldv_14_container);
      
#line 917 
      goto ldv_44933;
      case 3: 
#line 919 
      ;
      
#line 922 
      ldv_emg_wrapper_s2io_netpoll_27(ldv_14_container);
      
#line 925 
      goto ldv_44933;
      case 4: 
#line 927 
      ;
      
#line 929 
      ldv_14_ldv_param_1_27 = (struct ethtool_pauseparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 934 
      ldv_emg_wrapper_s2io_ethtool_setpause_data_26(ldv_14_container,ldv_14_ldv_param_1_27);
      
#line 938 
      ldv_free((void *)ldv_14_ldv_param_1_27);
      
#line 941 
      goto ldv_44933;
      case 5: 
#line 943 
      ;
      
#line 946 
      ldv_emg_wrapper_s2io_ethtool_get_regs_len_25(ldv_14_container);
      
#line 949 
      goto ldv_44933;
      case 6: 
#line 951 
      ;
      
#line 953 
      ldv_14_ldv_param_1_26 = (struct ethtool_ringparam *)ldv_xmalloc_unknown_size(0UL);
      
#line 958 
      ldv_emg_wrapper_s2io_ethtool_gringparam_24(ldv_14_container,ldv_14_ldv_param_1_26);
      
#line 962 
      ldv_free((void *)ldv_14_ldv_param_1_26);
      
#line 965 
      goto ldv_44933;
      case 7: 
#line 967 
      ;
      
#line 969 
      ldv_14_ldv_param_2_25 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 974 
      ldv_emg_wrapper_s2io_ethtool_get_strings_23(ldv_14_container,ldv_14_ldv_param_1_24,ldv_14_ldv_param_2_25);
      
#line 978 
      ldv_free((void *)ldv_14_ldv_param_2_25);
      
#line 981 
      goto ldv_44933;
      case 8: 
#line 983 
      ;
      
#line 986 
      ldv_emg_wrapper_s2io_get_stats_22(ldv_14_container);
      
#line 989 
      goto ldv_44933;
      case 9: 
#line 991 
      ;
      
#line 994 
      ldv_emg_wrapper_s2io_tx_watchdog_17(ldv_14_container);
      
#line 997 
      goto ldv_44933;
      case 10: 
#line 999 
      ;
      
#line 1001 
      ldv_14_ldv_param_1_22 = (struct ethtool_regs *)ldv_xmalloc_unknown_size(0UL);
      
#line 1002 
      ldv_14_ldv_param_2_23 = ldv_xmalloc_unknown_size(0UL);
      
#line 1007 
      ldv_emg_wrapper_s2io_ethtool_gregs_20(ldv_14_container,ldv_14_ldv_param_1_22,ldv_14_ldv_param_2_23);
      
#line 1011 
      ldv_free((void *)ldv_14_ldv_param_1_22);
      
#line 1012 
      ldv_free(ldv_14_ldv_param_2_23);
      
#line 1015 
      goto ldv_44933;
      case 11: 
#line 1017 
      ;
      
#line 1019 
      ldv_14_ldv_param_1_20 = (struct ifreq *)ldv_xmalloc_unknown_size(0UL);
      
#line 1024 
      ldv_emg_wrapper_s2io_ioctl_19(ldv_14_container,ldv_14_ldv_param_1_20,ldv_14_ldv_param_2_21);
      
#line 1028 
      ldv_free((void *)ldv_14_ldv_param_1_20);
      
#line 1031 
      goto ldv_44933;
      case 12: 
#line 1033 
      ;
      
#line 1035 
      ldv_14_ldv_param_1_18 = (struct ethtool_test *)ldv_xmalloc_unknown_size(0UL);
      
#line 1036 
      ldv_14_ldv_param_2_19 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1041 
      ldv_emg_wrapper_s2io_ethtool_test_18(ldv_14_container,ldv_14_ldv_param_1_18,ldv_14_ldv_param_2_19);
      
#line 1045 
      ldv_free((void *)ldv_14_ldv_param_1_18);
      
#line 1046 
      ldv_free((void *)ldv_14_ldv_param_2_19);
      
#line 1049 
      goto ldv_44933;
      case 13: 
#line 1051 
      ;
      
#line 1057 
      ldv_emg_wrapper_s2io_get_sset_count_21(ldv_14_container,ldv_14_ldv_param_1_17);
      
#line 1063 
      goto ldv_44933;
      case 14: 
#line 1065 
      ;
      
#line 1067 
      ldv_14_ldv_param_1_15 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1068 
      ldv_14_ldv_param_2_16 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1073 
      ldv_emg_wrapper_s2io_ethtool_geeprom_3(ldv_14_container,ldv_14_ldv_param_1_15,ldv_14_ldv_param_2_16);
      
#line 1077 
      ldv_free((void *)ldv_14_ldv_param_1_15);
      
#line 1078 
      ldv_free((void *)ldv_14_ldv_param_2_16);
      
#line 1081 
      goto ldv_44933;
      case 15: 
#line 1083 
      ;
      
#line 1085 
      ldv_14_ldv_param_1_14 = ldv_xmalloc_unknown_size(0UL);
      
#line 1090 
      ldv_emg_wrapper_s2io_set_mac_addr_15(ldv_14_container,ldv_14_ldv_param_1_14);
      
#line 1094 
      ldv_free(ldv_14_ldv_param_1_14);
      
#line 1097 
      goto ldv_44933;
      case 16: 
#line 1099 
      ;
      
#line 1101 
      ldv_14_ldv_param_0_13 = (struct sk_buff *)ldv_xmalloc_unknown_size(0UL);
      
#line 1106 
      ldv_emg_wrapper_s2io_xmit_14(ldv_14_ldv_param_0_13,ldv_14_container);
      
#line 1110 
      ldv_free((void *)ldv_14_ldv_param_0_13);
      
#line 1113 
      goto ldv_44933;
      case 17: 
#line 1115 
      ;
      
#line 1117 
      ldv_14_ldv_param_1_11 = (struct ethtool_eeprom *)ldv_xmalloc_unknown_size(0UL);
      
#line 1118 
      ldv_14_ldv_param_2_12 = (unsigned char *)ldv_xmalloc_unknown_size(0UL);
      
#line 1123 
      ldv_emg_wrapper_s2io_ethtool_seeprom_13(ldv_14_container,ldv_14_ldv_param_1_11,ldv_14_ldv_param_2_12);
      
#line 1127 
      ldv_free((void *)ldv_14_ldv_param_1_11);
      
#line 1128 
      ldv_free((void *)ldv_14_ldv_param_2_12);
      
#line 1131 
      goto ldv_44933;
      case 18: 
#line 1133 
      ;
      
#line 1136 
      ldv_emg_wrapper_s2io_get_eeprom_len_28(ldv_14_container);
      
#line 1139 
      goto ldv_44933;
      case 19: 
#line 1141 
      ;
      
#line 1143 
      ldv_14_ldv_param_1_10 = (struct ethtool_drvinfo *)ldv_xmalloc_unknown_size(0UL);
      
#line 1148 
      ldv_emg_wrapper_s2io_ethtool_gdrvinfo_12(ldv_14_container,ldv_14_ldv_param_1_10);
      
#line 1152 
      ldv_free((void *)ldv_14_ldv_param_1_10);
      
#line 1155 
      goto ldv_44933;
      case 20: 
#line 1157 
      ;
      
#line 1163 
      ldv_emg_wrapper_s2io_set_features_11(ldv_14_container,ldv_14_ldv_param_1_9);
      
#line 1169 
      goto ldv_44933;
      case 21: 
#line 1171 
      ;
      
#line 1174 
      (*ldv_emg_alias_ethtool_op_get_link_10)(ldv_14_container);
      
#line 1177 
      goto ldv_44933;
      case 22: 
#line 1179 
      ;
      
#line 1182 
      (*ldv_emg_alias_eth_validate_addr_7)(ldv_14_container);
      
#line 1185 
      goto ldv_44933;
      case 23: 
#line 1187 
      ;
      
#line 1189 
      ldv_14_ldv_param_1_7 = (struct ethtool_stats *)ldv_xmalloc_unknown_size(0UL);
      
#line 1190 
      ldv_14_ldv_param_2_8 = (unsigned long long *)ldv_xmalloc_unknown_size(0UL);
      
#line 1195 
      ldv_emg_wrapper_s2io_get_ethtool_stats_8(ldv_14_container,ldv_14_ldv_param_1_7,ldv_14_ldv_param_2_8);
      
#line 1199 
      ldv_free((void *)ldv_14_ldv_param_1_7);
      
#line 1200 
      ldv_free((void *)ldv_14_ldv_param_2_8);
      
#line 1203 
      goto ldv_44933;
      case 24: 
#line 1205 
      ;
      
#line 1211 
      ldv_emg_wrapper_s2io_change_mtu_9(ldv_14_container,ldv_14_ldv_param_1_6);
      
#line 1217 
      goto ldv_44933;
      case 25: 
#line 1219 
      ;
      
#line 1221 
      ldv_14_ldv_param_1_5 = (enum ethtool_phys_id_state *)ldv_xmalloc_unknown_size(0UL);
      
#line 1226 
      ldv_emg_wrapper_s2io_ethtool_set_led_5(ldv_14_container,*ldv_14_ldv_param_1_5);
      
#line 1230 
      ldv_free((void *)ldv_14_ldv_param_1_5);
      
#line 1233 
      goto ldv_44933;
      case 26: 
#line 1235 
      ;
      
#line 1237 
      ldv_14_ldv_param_1_4 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1242 
      ldv_emg_wrapper_s2io_ethtool_sset_4(ldv_14_container,ldv_14_ldv_param_1_4);
      
#line 1246 
      ldv_free((void *)ldv_14_ldv_param_1_4);
      
#line 1249 
      goto ldv_44933;
      case 27: 
#line 1251 
      ;
      
#line 1253 
      ldv_14_ldv_param_1_3 = (struct ethtool_cmd *)ldv_xmalloc_unknown_size(0UL);
      
#line 1258 
      ldv_emg_wrapper_s2io_ethtool_gset_16(ldv_14_container,ldv_14_ldv_param_1_3);
      
#line 1262 
      ldv_free((void *)ldv_14_ldv_param_1_3);
      
#line 1265 
      goto ldv_44933;
      default: 
#line 1267 
      ;
      
#line 1267 
      __VERIFIER_assume(0);
    }
    ldv_44933: 
#line 1270 
    ;
    
#line 1270 
    ldv_free((void *)ldv_14_ldv_param_1_2);
    
#line 1277 
    goto ldv_call_14;
  }
  else {
    
#line 1285 
    __retres = (void *)0;
    
#line 1285 
    goto return_label;
  }
  
#line 1288 
  __retres = (void *)0;
  return_label: 
#line 1288 
                return __retres;
}


#line 1293  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
_Bool ldv_emg_schedule_work(struct work_struct *arg0)
{
  _Bool __retres;
  struct work_struct *ldv_8_work_struct;
  int tmp;
  
#line 1300 
  tmp = ldv_undef_int();
  
#line 1300 
  if (tmp != 0) {
    
#line 1302 
    ldv_8_work_struct = arg0;
    
#line 1306 
    if (ldv_8_work_struct->func != (void (*)(struct work_struct *))0) 
      
#line 1308 
      (*(ldv_8_work_struct->func))(ldv_8_work_struct); else ;
    
#line 1313 
    __retres = (_Bool)1;
    
#line 1313 
    goto return_label;
  }
  else {
    
#line 1320 
    __retres = (_Bool)0;
    
#line 1320 
    goto return_label;
  }
  return_label: 
#line 1300 
                return __retres;
}


#line 1330  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_10_1(struct pci_driver *arg0)
{
  int ret;
  struct ldv_struct_pci_scenario_19 *cf_arg_19;
  int tmp;
  
#line 1333 
  tmp = ldv_undef_int();
  
#line 1333 
  switch (tmp) {
    case 0: 
#line 1334 
    ;
    
#line 1335 
    ret = pthread_join(ldv_thread_19,(void **)0);
    
#line 1336 
    __VERIFIER_assume(ret == 0);
    
#line 1337 
    goto ldv_44971;
    default: 
#line 1339 
    ;
    
#line 1339 
    __VERIFIER_assume(0);
  }
  ldv_44971: 
#line 1340 
  ;
  
#line 1341 
  return;
}


#line 1345  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void *ldv_interrupt_scenario_15(void *arg0)
{
  void *__retres;
  enum irqreturn ldv_15_ret_val;
  int ldv_15_line;
  void *ldv_15_data;
  enum irqreturn (*ldv_15_thread)(int , void *);
  int tmp;
  
#line 1351 
  enum irqreturn (*ldv_15_callback)(int , void *) = & ldv_emg_wrapper_s2io_msix_fifo_handle_2;
  
#line 1354 
  struct ldv_struct_interrupt_scenario_15 *data = (struct ldv_struct_interrupt_scenario_15 *)arg0;
  
#line 1359 
  if (data != (struct ldv_struct_interrupt_scenario_15 *)0) {
    
#line 1360 
    ldv_15_line = data->arg0;
    
#line 1361 
    ldv_15_callback = data->arg1;
    
#line 1362 
    ldv_15_thread = data->arg2;
    
#line 1363 
    ldv_15_data = data->arg3;
    
#line 1364 
    ldv_free((void *)data);
  }
  else ;
  
#line 1370 
  ldv_switch_to_interrupt_context();
  
#line 1372 
  ldv_15_ret_val = ldv_emg_wrapper_s2io_msix_fifo_handle_2(ldv_15_line,ldv_15_data);
  
#line 1374 
  ldv_switch_to_process_context();
  
#line 1377 
  tmp = ldv_undef_int();
  
#line 1377 
  if (tmp != 0) {
    
#line 1379 
    __VERIFIER_assume(ldv_15_ret_val == (unsigned int)IRQ_WAKE_THREAD);
    
#line 1383 
    if (ldv_15_thread != (enum irqreturn (*)(int , void *))0) 
#line 1385 
                                                              (*ldv_15_thread)(ldv_15_line,ldv_15_data); else ;
  }
  else 
#line 1392 
       __VERIFIER_assume(ldv_15_ret_val != (unsigned int)IRQ_WAKE_THREAD);
  
#line 1401 
  __retres = (void *)0;
  
#line 1401 
  goto return_label;
  
#line 1403 
  __retres = (void *)0;
  return_label: 
#line 1403 
                return __retres;
}


#line 1408  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_pci_unregister_driver(struct pci_driver *arg0)
{
  
#line 1411 
  struct pci_driver *ldv_10_pci_driver = ldv_emg_alias_s2io_driver_2;
  
#line 1414 
  ldv_10_pci_driver = arg0;
  
#line 1418 
  ldv_dispatch_deregister_10_1(ldv_10_pci_driver);
  
#line 1422 
  goto return_label;
  return_label: 
#line 1424 
                return;
}


#line 1429  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_register_netdev(struct net_device *arg0)
{
  int __retres;
  struct net_device *ldv_11_netdev;
  int tmp_3;
  
#line 1433 
  int ldv_11_ret = ldv_undef_int();
  
#line 1436 
  ldv_11_ret = ldv_undef_int();
  
#line 1439 
  tmp_3 = ldv_undef_int();
  
#line 1439 
  if (tmp_3 != 0) {
    int tmp_1;
    
#line 1441 
    ldv_11_netdev = arg0;
    
#line 1446 
    ldv_11_ret = ldv_emg_wrapper_s2io_open_2(ldv_11_netdev);
    
#line 1449 
    tmp_1 = ldv_undef_int();
    
#line 1449 
    if (tmp_1 != 0) {
      
#line 1451 
      __VERIFIER_assume(ldv_11_ret == 0);
      
#line 1455 
      ldv_dispatch_register_11_4(ldv_11_netdev);
      
#line 1459 
      __retres = 0;
      
#line 1459 
      goto return_label;
    }
    else {
      int tmp_0;
      
#line 1466 
      __VERIFIER_assume(ldv_11_ret != 0);
      
#line 1467 
      ldv_failed_register_netdev();
      
#line 1468 
      tmp_0 = ldv_undef_int_negative();
      
#line 1468 
      __retres = tmp_0;
      
#line 1468 
      goto return_label;
    }
  }
  else {
    int tmp_2;
    
#line 1476 
    ldv_failed_register_netdev();
    
#line 1477 
    tmp_2 = ldv_undef_int_negative();
    
#line 1477 
    __retres = tmp_2;
    
#line 1477 
    goto return_label;
  }
  return_label: 
#line 1439 
                return __retres;
}


#line 1487  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_unregister_netdev(struct net_device *arg0)
{
  struct net_device *ldv_6_netdev;
  
#line 1493 
  ldv_6_netdev = arg0;
  
#line 1498 
  ldv_emg_wrapper_s2io_close_2(ldv_6_netdev);
  
#line 1502 
  ldv_dispatch_deregister_6_1(ldv_6_netdev);
  
#line 1506 
  goto return_label;
  return_label: 
#line 1508 
                return;
}


#line 1513  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_irq(unsigned int arg0, void *arg1)
{
  int ldv_3_line;
  
#line 1519 
  ldv_3_line = (int)arg0;
  
#line 1523 
  ldv_dispatch_irq_deregister_3_1(ldv_3_line);
  
#line 1527 
  goto return_label;
  return_label: 
#line 1529 
                return;
}


#line 1534  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_instance_register_4_3(struct timer_list *arg0)
{
  int ret;
  struct ldv_struct_timer_scenario_13 *cf_arg_13;
  int tmp;
  
#line 1537 
  tmp = ldv_undef_int();
  
#line 1537 
  switch (tmp) {
    case 0: 
#line 1538 
    ;
    
#line 1539 
    cf_arg_13 = (struct ldv_struct_timer_scenario_13 *)ldv_xmalloc(16UL);
    
#line 1540 
    cf_arg_13->arg0 = arg0;
    
#line 1541 
    ret = pthread_create(& ldv_thread_13,(pthread_attr_t const *)0,& ldv_timer_scenario_13,(void *)cf_arg_13);
    
#line 1542 
    __VERIFIER_assume(ret == 0);
    
#line 1543 
    goto ldv_45010;
    default: 
#line 1545 
    ;
    
#line 1545 
    __VERIFIER_assume(0);
  }
  ldv_45010: 
#line 1546 
  ;
  
#line 1547 
  return;
}


#line 1551  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_dispatch_deregister_6_1(struct net_device *arg0)
{
  int ret;
  struct ldv_struct_random_allocationless_scenario_14 *cf_arg_14;
  int tmp;
  
#line 1554 
  tmp = ldv_undef_int();
  
#line 1554 
  switch (tmp) {
    case 0: 
#line 1555 
    ;
    
#line 1556 
    ret = pthread_join(ldv_thread_14,(void **)0);
    
#line 1557 
    __VERIFIER_assume(ret == 0);
    
#line 1558 
    goto ldv_45018;
    default: 
#line 1560 
    ;
    
#line 1560 
    __VERIFIER_assume(0);
  }
  ldv_45018: 
#line 1561 
  ;
  
#line 1562 
  return;
}


#line 1566  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
void ldv_emg_free_netdev(struct net_device *arg0)
{
  struct net_device *ldv_2_netdev;
  
#line 1572 
  ldv_2_netdev = arg0;
  
#line 1573 
  ldv_free((void *)ldv_2_netdev);
  
#line 1577 
  goto return_label;
  return_label: 
#line 1579 
                return;
}


#line 1584  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/91e514eede894122cca4a9df4375a888/klever-core-work-dir/job/vtg/drivers/net/ethernet/neterion/s2io.ko/linux:concurrency safety/emg/environment_model.c"
int ldv_emg_mod_timer(struct timer_list *arg0, unsigned long arg1)
{
  int __retres;
  struct timer_list *ldv_4_timer_list;
  int tmp_0;
  
#line 1591 
  tmp_0 = ldv_undef_int();
  
#line 1591 
  if (tmp_0 != 0) {
    
#line 1593 
    ldv_4_timer_list = arg0;
    
#line 1597 
    ldv_dispatch_instance_register_4_3(ldv_4_timer_list);
    
#line 1601 
    __retres = 0;
    
#line 1601 
    goto return_label;
  }
  else {
    int tmp;
    
#line 1608 
    tmp = ldv_undef_int_negative();
    
#line 1608 
    __retres = tmp;
    
#line 1608 
    goto return_label;
  }
  return_label: 
#line 1591 
                return __retres;
}


